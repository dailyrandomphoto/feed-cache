<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 16 Mar 2021 01:36:00 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they&#39;re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they&#39;re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Discord = require(&#39;discord.js&#39;);
const client = new Discord.Client();

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you&#39;d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don&#39;t hesitate to join our official &lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/bitwarden_rs</title>
      <link>https://github.com/dani-garcia/bitwarden_rs</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;This is a Bitwarden server API implementation written in Rust compatible with &lt;a href=&quot;https://bitwarden.com/#download&quot;&gt;upstream Bitwarden clients&lt;/a&gt;*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs.svg?branch=master&quot; alt=&quot;Travis Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/bitwardenrs/server&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/bitwardenrs/server.svg&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs/status.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/blob/master/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GPL-3.0 Licensed&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/matrix/bitwarden_rs:matrix.org.svg?logo=matrix&quot; alt=&quot;Matrix Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Image is based on &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs&quot;&gt;Rust implementation of Bitwarden API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with the &lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt; project nor 8bit Solutions LLC.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;⚠️&lt;strong&gt;IMPORTANT&lt;/strong&gt;⚠️: When using this server, please report any bugs or suggestions to us directly (look at the bottom of this page for ways to get in touch), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official support channels.&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Basically full implementation of Bitwarden API is provided including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Organizations support&lt;/li&gt; 
 &lt;li&gt;Attachments&lt;/li&gt; 
 &lt;li&gt;Vault API support&lt;/li&gt; 
 &lt;li&gt;Serving the static files for Vault interface&lt;/li&gt; 
 &lt;li&gt;Website icons API&lt;/li&gt; 
 &lt;li&gt;Authenticator and U2F support&lt;/li&gt; 
 &lt;li&gt;YubiKey and Duo support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Pull the docker image and mount a volume from the host for persistent storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker pull bitwardenrs/server:latest
docker run -d --name bitwarden -v /bw-data/:/data/ -p 80:80 bitwardenrs/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under /bw-data/, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Some web browsers, like Chrome, disallow the use of Web Crypto APIs in insecure contexts. In this case, you might get an error like &lt;code&gt;Cannot read property &#39;importKey&#39;&lt;/code&gt;. To solve this problem, you need to access the web vault from HTTPS.&lt;/p&gt; 
&lt;p&gt;This can be configured in &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Enabling-HTTPS&quot;&gt;bitwarden_rs directly&lt;/a&gt; or using a third-party reverse proxy (&lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Proxy-examples&quot;&gt;some examples&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;If you have an available domain name, you can get HTTPS certificates with &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let&#39;s Encrypt&lt;/a&gt;, or you can generate self-signed certificates with utilities like &lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;mkcert&lt;/a&gt;. Some proxies automatically do this step, like Caddy (see examples linked above).&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki&quot;&gt;bitwarden_rs wiki&lt;/a&gt; for more information on how to configure and run the bitwarden_rs server.&lt;/p&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;To ask a question, offer suggestions or new features or to get help configuring or installing the software, please &lt;a href=&quot;https://bitwardenrs.discourse.group/&quot;&gt;use the forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you spot any bugs or crashes with bitwarden_rs itself, please &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/issues/&quot;&gt;create an issue&lt;/a&gt;. Make sure there aren&#39;t any similar issues open, though!&lt;/p&gt; 
&lt;p&gt;If you prefer to chat, we&#39;re usually hanging around at &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;#bitwarden_rs:matrix.org&lt;/a&gt; room on Matrix. Feel free to join us!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChonoN&quot;&gt;@ChonoN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/themightychris&quot;&gt;@themightychris&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>goabstract/Awesome-Design-Tools</title>
      <link>https://github.com/goabstract/Awesome-Design-Tools</link>
      <description>&lt;p&gt;The best design tools and plugins for everything 👉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Design Tools&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Plugins.md&quot;&gt;Awesome Design Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Conferences.md&quot;&gt;Awesome Design Conferences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-UI-Kits.md&quot;&gt;Awesome Design UI Kits&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Awesome Design Tools as a part of Flawless App family joins Abstract!&lt;/h2&gt; 
&lt;p&gt;Today, we’re excited to announce that Flawless App has joined &lt;a href=&quot;https://www.abstract.com&quot;&gt;Abstract&lt;/a&gt;, a design delivery platform that brings visibility, accountability, measurability, and predictability to design.&lt;/p&gt; 
&lt;p&gt;Flawless App was our first company, and we’re proud of everything that we’ve achieved with our 5-person team.&lt;/p&gt; 
&lt;p&gt;Since 2015, we’ve launched powerful tools for designers and developers — among them are &lt;a href=&quot;https://flawlessapp.io/&quot;&gt;Flawless App&lt;/a&gt;, &lt;a href=&quot;https://flawlessapp.io/reduceapp&quot;&gt;Reduce&lt;/a&gt;, &lt;a href=&quot;https://flawlessapp.io/feedback&quot;&gt;Flawless Feedback&lt;/a&gt;. We’ve also invested a lot of love and care into community-driven initiatives. Awesome Design Tools is one of them.&lt;/p&gt; 
&lt;h4&gt;So what’s next?&lt;/h4&gt; 
&lt;p&gt;Our team has joined Abstract and is focused on building out the &lt;a href=&quot;https://sdk.goabstract.com&quot;&gt;Abstract SDK&lt;/a&gt;, bringing developers’ experience forward. One unbelievable journey has finished and the new one has just begun. And if you want to know more about the future of Awesome Design Tools, &lt;a href=&quot;https://flawlessapp.io/designtools/joinsabstract&quot;&gt;please keep reading our FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;How to Use and Contribute&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Now you are in the &lt;strong&gt;Awesome Design Tools&lt;/strong&gt; section, if you need plugins — go to &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Plugins.md&quot;&gt;Awesome Design Plugins&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To find the tool, go through the Table of Contents or search for a keyword (for example, &quot;animation&quot;, &quot;prototyping&quot;).&lt;/li&gt; 
 &lt;li&gt;Ask &lt;a href=&quot;https://twitter.com/LisaDziuba&quot;&gt;Lisa&lt;/a&gt; on Twitter.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you found some great design tool or plugin, just send a Pull Request with respect to our &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Contribution_Guidelines.md&quot;&gt;Contribution Guidelines&lt;/a&gt; (they&#39;re very simple, please take a look). Design tools should be submitted here and plugins in &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Plugins.md&quot;&gt;Awesome Design Plugins&lt;/a&gt; file. We use such labels for free &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;, open source &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; and Mac only &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt; tools, don&#39;t forget to add them. Now I&#39;d love to see your suggestions!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Table of Content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#accessibility-tools&quot;&gt;Accessibility Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#animation-tools&quot;&gt;Animation Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#augmented-reality&quot;&gt;Augmented Reality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#collaboration-tools&quot;&gt;Collaboration Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#color-picker-tools&quot;&gt;Color Picker Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-feedback-tools&quot;&gt;Design Feedback Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-handoff-tools&quot;&gt;Design Handoff Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-inspiration&quot;&gt;Design Inspiration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-system-tools&quot;&gt;Design System Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-to-code-tools&quot;&gt;Design to Code Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-version-control&quot;&gt;Design Version Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#development-tools&quot;&gt;Development Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#experience-monitoring&quot;&gt;Experience Monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#font-tools&quot;&gt;Font Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#gradient-tools&quot;&gt;Gradient Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#icons-tools&quot;&gt;Icons Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#illustrations&quot;&gt;Illustrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#information-architecture&quot;&gt;Information Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#logo-design&quot;&gt;Logo Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#mockup-tools&quot;&gt;Mockup Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#no-code-tools&quot;&gt;No Code Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#pixel-art-tools&quot;&gt;Pixel Art Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#prototyping-tools&quot;&gt;Prototyping Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#screenshot-software&quot;&gt;Screenshot Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#sketching-tools&quot;&gt;Sketching Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#smm-design-tools&quot;&gt;SMM Design Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#sound-design&quot;&gt;Sound Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#stock-photos-tools&quot;&gt;Stock Photos Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#stock-videos&quot;&gt;Stock Videos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#tools-for-learning-design&quot;&gt;Tools for Learning Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#ui-design-tools&quot;&gt;UI Design Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#user-flow-tools&quot;&gt;User Flow Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#user-research-tools&quot;&gt;User Research Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#visual-debugging-tools&quot;&gt;Visual Debugging Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#wireframing-tools&quot;&gt;Wireframing Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#three-d-modeling-software&quot;&gt;3D Modeling Software&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Accessibility Tools&lt;/h3&gt; 
&lt;p&gt;Accessibility is the practice of creating websites and apps usable for all people, including individuals with visual, motor, auditory, speech, or cognitive disabilities. Here you will find web accessibility tools, accessibility testing tools, and accessibility apps both for developers and designers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://a11ygator.chialab.io&quot;&gt;A11ygator&lt;/a&gt; — a web tool to analyze websites against WCAG rules. Also available as Google Chrome browser extension and as Twitter bot. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/chialab/a11ygator-app&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://accessibilityinsights.io/&quot;&gt;Accessibility Insights&lt;/a&gt; — helps developers quickly find and fix accessibility issues. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toolness.github.io/accessible-color-matrix/&quot;&gt;Accessible Palette Builder&lt;/a&gt; — an Elm-based prototype to help designers build accessible color palettes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/toolness/accessible-color-matrix&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://achecker.ca&quot;&gt;AChecker&lt;/a&gt; — accessibility testing web app used to evaluate HTML content for accessibility problems. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ssa.gov/accessibility/andi/help/install.html&quot;&gt;ANDI&lt;/a&gt; — accessibility testing tool for web content (bookmarklet). It will automatically detect accessibility issues, give suggestions to improve online accessibility and check 508 compliance. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/SSAgov/ANDI&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deque.com/axe/&quot;&gt;Axe&lt;/a&gt; — accessibility engine designed to work on all modern browsers and with whatever tools, frameworks, libraries, and environments you use today. It&#39;s an automated accessibility testing tool for developers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/dequelabs/axe-core&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.colorbox.io/&quot;&gt;ColorBox&lt;/a&gt; — a web app that algorithmically builds accessible color systems. Done by the Lyft Design team. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorable.jxnblk.com/&quot;&gt;Colorable&lt;/a&gt; — a free web-based contrast tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colororacle.org/&quot;&gt;Color Oracle&lt;/a&gt; — a free color blindness simulator. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://usecontrast.com/&quot;&gt;Contrast&lt;/a&gt; — a macOS app for designers and developers to get quick access to WCAG color contrast ratios. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contrast-checker.glitch.me/&quot;&gt;Contrast Checker&lt;/a&gt; — helps check the contrast between the background of an element and the page itself. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contrasteapp.com/&quot;&gt;Contraste&lt;/a&gt; — an app for checking the accessibility of text against the Web Content Accessibility Guidelines (WCAG). &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/design/inclusive/&quot;&gt;Inclusive Design&lt;/a&gt; — a methodology and a set of tools provided by the Microsoft team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hexnaw.com/&quot;&gt;Hex Naw&lt;/a&gt; — helps you to test entire color systems for contrast and accessibility. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leonardocolor.io&quot;&gt;Leonardo&lt;/a&gt; - generate color palettes by desired WCAG contrast ratio. Open source web tool &amp;amp; npm module for designers and engineers. Made by Adobe. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/web.svg&quot; alt=&quot;Web&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pa11y.org/&quot;&gt;PA11Y&lt;/a&gt; — accessibility testing tool to find issues with your web pages. It runs HTML CodeSniffer from the command line for programmatic accessibility reporting. It&#39;s an accessibility developer tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://michelf.ca/projects/sim-daltonism/&quot;&gt;Sim Daltonism&lt;/a&gt; — a color blindness simulator for macOS and iOS that lets you visualize colors as they are perceived with various types of color blindness. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://www.github.com/michelf/sim-daltonism/&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getstark.co/&quot;&gt;Stark&lt;/a&gt; — a paid Sketch plugin that will let you simulate different types of color blindness. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.toptal.com/designers/colorfilter&quot;&gt;Toptal’s Color Filter&lt;/a&gt; — lets you test your website and shows you how people with different color blindness will see your pages. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://khan.github.io/tota11y/&quot;&gt;tota11y&lt;/a&gt; — an accessibility visualization toolkit. Interesting fact: inside the tool name you can see &quot;a11y&quot;. It&#39;s an abbreviation of accessibility as &quot;a&quot; followed by 11 more letters, followed by &quot;y&quot;. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wave.webaim.org/&quot;&gt;WAVE&lt;/a&gt; — allows you to evaluate web content for accessibility issues directly within Chrome and Firefox. It&#39;s a web accessibility checker. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://clrs.cc/a11y/&quot;&gt;90 Examples&lt;/a&gt; — a free collection of accessible color themes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Accessibility checking features are also available in VisBug from the &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools#visual-debugging-tools&quot;&gt;Visual Debugging Tools&lt;/a&gt; category.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Animation Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Animations guide people through the product friendly and smoothly. Live interactive UI makes users feel delighted with instant feedback and emotional touch. These free and paid tools are designed to make animation creation easier. If you plan to make animated transitions, micro-interactions or scroll-based animations, go through these tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adobe.com/products/aftereffects.html&quot;&gt;After Effects&lt;/a&gt; — digital visual effects, motion graphics, and compositing application developed by Adobe.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beatflyer.com/&quot;&gt;BeatFlyer&lt;/a&gt; — a web tool that lets you create very quickly loopy and catchy animations from your multi-layer compositions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dmybusiness.com&quot;&gt;Dokyu Motion&lt;/a&gt; — simplifies motion design in After Effects so any editor can tell stories that won′t be ignored.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.2dimensions.com/about-flare&quot;&gt;Flare&lt;/a&gt; — a powerful design and animation tool, which allows designers and developers to create animations for their app or game. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://createwithflow.com/&quot;&gt;Flow&lt;/a&gt; — a professional animation tool for Sketch designs that also exports production-ready code for iOS, Web or SVG files. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://greensock.com/&quot;&gt;GSAP&lt;/a&gt; — a suite of tools for scripted, high-performance HTML5 animations in all major browsers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.haikuforteams.com/&quot;&gt;Haiku Animator&lt;/a&gt; — keyframe-based animation connecting your UI tools to code that developers can easily use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.keyshapeapp.com/&quot;&gt;Keyshape&lt;/a&gt; — 2D animation tool that allows for animated SVG export. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kiteapp.co/&quot;&gt;Kite Compositor&lt;/a&gt; — a powerful animation and prototyping application for Mac &amp;amp; iOS. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uselightbox.com/&quot;&gt;LightBox&lt;/a&gt; — 2D, Hand-Drawn animation package. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbnb.io/lottie/&quot;&gt;Lottie&lt;/a&gt; — a mobile library for Android and iOS that parses Adobe After Effects animations exported as JSON with Bodymovin and renders them natively on mobile and the web. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeremyckahn.github.io/mantra/&quot;&gt;Mantra&lt;/a&gt; — a web-based timeline animation tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meteoritic.io/&quot;&gt;Meteoritic&lt;/a&gt; — animation delights library for iOS and Android. Choose from a variety of animations that suits different app styles. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://app.naker.io/back&quot;&gt;Naker.Back&lt;/a&gt; — integrate an interactive background for free to draw more attention to your website. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://naker.io/naker-story.html&quot;&gt;Naker.Story&lt;/a&gt; — make your web content interactive to engage your visitors like never before thanks to 3D. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://offeo.com/&quot;&gt;OFFEO&lt;/a&gt; — an online video maker for small businesses to create video ads like the Big Brands without the big budget. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://storyswag.co&quot;&gt;StorySwag&lt;/a&gt; — create stylish animated posts for Instagram and Facebook in just a few taps, all from your mobile phone. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spiritapp.io/&quot;&gt;Spirit&lt;/a&gt; — the animation tool that helps you to create and manage the animations real-time in the browser. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeremyckahn.github.io/stylie/&quot;&gt;Stylie&lt;/a&gt; — a web-based graphical CSS3 animation tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tumult.com/hype/&quot;&gt;Tumult Hype&lt;/a&gt; — the HTML5 animation/interactives creation app for macOS. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Drama, Principle, Framer, Invision Studio, Flinto are also among UI &amp;amp; UX animation apps and software animation tools.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Augmented Reality&lt;/h3&gt; 
&lt;p&gt;Augmented Reality is a technology that upgrades our real world, by adding a layer of digital information to it. The use of AR increases day by day with dozens of new AR apps, development kits, and AR frameworks. So in this section is collected different augmented reality tools for creating, projecting and prototyping apps focused on AR:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://daqri.com/&quot;&gt;Daqri&lt;/a&gt; — delivers professional-grade augmented reality for the workforce by overlaying digital information onto the physical environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.easyar.com/&quot;&gt;EasyAR&lt;/a&gt; — a mobile application and an Augmented Reality Engine, making AR easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hpreveal.com/&quot;&gt;HP Reveal&lt;/a&gt; — adding value to printed content through visual interactivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.layar.com/&quot;&gt;Layar&lt;/a&gt; — find various items based upon augmented reality technology.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lensstudio.snapchat.com/&quot;&gt;Lens Studio&lt;/a&gt; — create, publish, and share your own AR experiences for Snapchat with or without code. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lightform.com/&quot;&gt;Lightform&lt;/a&gt; — a design tool for projected AR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sparkar.com&quot;&gt;Spark AR Studio&lt;/a&gt; — сreate AR experiences for Instagram without code. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.torch.app/&quot;&gt;Torch&lt;/a&gt; — a cloud-based 3D design and prototyping app focused on mobile AR. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unity.com/&quot;&gt;Unity&lt;/a&gt; — build high-quality 3D and 2D games, deploy them across mobile, desktop and VR/AR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vectary.com/&quot;&gt;Vectary&lt;/a&gt; — сreate 3D and AR for your website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vuforia.com/&quot;&gt;Vuforia&lt;/a&gt; — SDK for mobile devices that enables the creation of augmented reality applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wikitude.com/&quot;&gt;Wikitude&lt;/a&gt; — empowers your iOS, Android &amp;amp; Smart Glasses apps with Image &amp;amp; Object Tracking, Instant tracking (SLAM), Geo AR, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Collaboration Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Looking to try some tools for agile design and development collaboration? Good idea because such tools make the lives of designers and developers much easier, save time and improve productivity. Well, you know all that in Slack-driven era. Here you&#39;ll find the best collaboration tools for product teams:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/&quot;&gt;Airtable&lt;/a&gt; — part spreadsheet, part database, and entirely flexible, teams use Airtable to organize their work, their way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://asana.com/&quot;&gt;Asana&lt;/a&gt; — the work management platform teams use to stay focused on the goals, projects, and daily tasks that grow business.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/&quot;&gt;Basecamp&lt;/a&gt; — the project management suite designed to organize employees, delegate tasks, and monitor progress right from one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freedcamp.com/&quot;&gt;Freedcamp&lt;/a&gt; — the most innovative way to manage projects, completely free... forever.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://droplr.com/&quot;&gt;Droplr&lt;/a&gt; — screenshot, file sharing and screencasts to help you capture and explain your ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://excalidraw.com/&quot;&gt;Excalidraw&lt;/a&gt; — a whiteboard tool that lets you easily sketch diagrams with a hand-drawn feel. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://filestage.io/&quot;&gt;Filestage&lt;/a&gt; — an agile content approval software that helps you to review videos, designs, and documents with clients and co-workers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.float.com/&quot;&gt;Float&lt;/a&gt; — a tool to plan your projects and schedule your team’s time all in one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://material.io/tools/gallery/&quot;&gt;Gallery&lt;/a&gt; — a collaborative tool for uploading design work, getting feedback, and tracking revisions. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hivedesk.com/&quot;&gt;HiveDesk&lt;/a&gt; — an automatic time tracking for remote employees with screenshots. It makes it easier to monitor the productivity of remote employees and manage projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt; — software development tool used by agile teams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jitsi.org/&quot;&gt;Jitsi&lt;/a&gt; — multi-platform open-source video conferencing you can install yourself or use on their servers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt; — a free collaboration app with built-in end-to-end encrypted chat, file sharing, git repositories, and more &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lumeer.io/&quot;&gt;Lumeer&lt;/a&gt; - an easy visual collaborative tool to plan, organize and track anything, anywhere, anytime. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/&quot;&gt;Mattermost&lt;/a&gt; — a flexible, open-source messaging platform that meets even the most demanding privacy and security standards. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://milanote.com/&quot;&gt;Milanote&lt;/a&gt; — an easy-to-use, collaborative tool to organize your ideas and projects into visual boards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixed.io&quot;&gt;Mixed&lt;/a&gt; — real-time whiteboard and collaboration tools for distributed teams. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moqhub.com&quot;&gt;Moqhub&lt;/a&gt; — fast online proofing for creative projects. Get feedback for images and PDFs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mural.co/&quot;&gt;MURAL&lt;/a&gt; — think and collaborate visually. Anywhere, anytime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt; — open source collaboration platform for files, kanban boards, chat &amp;amp; calls, calendar and more. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.notion.so&quot;&gt;Notion&lt;/a&gt; — write, plan, collaborate, and get organized. Notion is all you need — in one tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proofhub.com/&quot;&gt;ProofHub&lt;/a&gt; — the one place for all your projects, teams and communications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.realtimeboard.com/&quot;&gt;RealtimeBoard (Miro)&lt;/a&gt; — whiteboarding platform for cross-functional team collaboration. It was recently renamed to Miro.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; — a collaboration hub for work, no matter what work you do. It’s a place where conversations happen, decisions are made, and information is always at your fingertips.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sunsama.com/&quot;&gt;Sunsama&lt;/a&gt; — a beautifully designed, team-oriented task manager that consolidates Trello/Jira/Asana tickets into a single, calendar-oriented view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taskade.com/&quot;&gt;Taskade&lt;/a&gt; — team productivity made simple, fun and designed for remote teams. Taskade is collaborative and syncs in real-time across the web, mobile, and desktop.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt; — a web-based project management application that enables you to organize and prioritize your projects in a fun, flexible and rewarding way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.witeboard.com/&quot;&gt;Witeboard&lt;/a&gt; — simple real-time whiteboard for collaboration work. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.workzone.com/&quot;&gt;Workzone&lt;/a&gt; — a simple, powerful project management software.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wrike.com/&quot;&gt;Wrike&lt;/a&gt; — an online project management software that gives you full visibility and control over your tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zenkit.com/&quot;&gt;Zenkit&lt;/a&gt; — a tool to schedule meetings, track the project’s progress, and brainstorm new ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zipboard.co&quot;&gt;zipBoard&lt;/a&gt; — an online visual bug tracking and website annotation tool&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zulipchat.com/&quot;&gt;Zulip&lt;/a&gt; — combines the immediacy of real-time chat with an email threading model, helping to focus on important conversations while ignoring irrelevant ones. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also have design collaboration into &lt;a href=&quot;https://www.invisionapp.com/feature/freehand&quot;&gt;InVision Freehand&lt;/a&gt; tool.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Color Picker Tools&lt;/h3&gt; 
&lt;p&gt;If you are looking for an eyedropper tool, color identifier or color capture, check this section. With the color pickers mentioned here, you will be able to create new color combinations and define great ones. Almost all of these tools are free:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brandcolors.net/&quot;&gt;BrandColors&lt;/a&gt; — the biggest collection of official brand color codes around. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calcolor.co&quot;&gt;Calcolor&lt;/a&gt; — a web-based color palette management tool which provides a new way to interact with digital colors. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chroma.spencerhamm.com/&quot;&gt;Chroma&lt;/a&gt; — free web app which allows you to identify the color. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://color.adobe.com/explore/?filter=most-popular&amp;amp;time=month&quot;&gt;Color&lt;/a&gt; — create color schemes with the color wheel or browse thousands of color combinations from the Color community. Made by Adobe. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloudflare.design/color/&quot;&gt;Color by Cloudflare&lt;/a&gt; — a tool to preview palettes against UI elements, cycle through accessible color combos and create palettes manually, via URL import, or generatively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://color.obscuredetour.com/&quot;&gt;Color Deck&lt;/a&gt; — an HSL driven color palette collection. It&#39;s also open-source. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/obscuredetour/color-deck&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.colorhexa.com/&quot;&gt;Color Hexa&lt;/a&gt; — free color tool providing information about any color and generating matching color palettes for designs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://colorhexpicker.com/&quot;&gt;Color Hex Picker&lt;/a&gt; - a tool for getting the name of any color from any image. You also get the HEX code and RGB value for the color. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorhunt.co/&quot;&gt;Color Hunt&lt;/a&gt; — free and open platform for color inspiration with thousands of trendy hand-picked color palettes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorkit.io&quot;&gt;ColorKit&lt;/a&gt; — a tool for blending colors and generating a color&#39;s shades and tints. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorleap.app&quot;&gt;Color Leap&lt;/a&gt; — leap through time and see the colors of history. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorpicker.crea-th.at/&quot;&gt;Colorpicker&lt;/a&gt; — a complete and open-source color manipulation tool with picking. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://colorslurp.com/&quot;&gt;ColorSlurp&lt;/a&gt; — the ultimate color productivity booster for designers and developers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorswall.com/&quot;&gt;ColorsWall/&lt;/a&gt; — place to store your color palettes or easy generate. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.colorwise.io/&quot;&gt;Colorwise&lt;/a&gt; — search through the color palettes of the most voted products on Product Hunt. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.instagram.com/colours.cafe/&quot;&gt;Colour Cafe&lt;/a&gt; — colors inspiration that has selected a modern color palette on Instagram. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colourco.de/&quot;&gt;Colourcode&lt;/a&gt; — an online designer tool, which allows you to easily and intuitively combine colors. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coolors.co/&quot;&gt;Coolors&lt;/a&gt; — the super-fast color scheme generator. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://culrs.com/#/&quot;&gt;Culrs&lt;/a&gt; — thoughtfully crafted and easy-to-use color palettes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geenes.app&quot;&gt;Geenes&lt;/a&gt; — a tool to create harmonious color themes with code and sketch file export.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://image-color.com&quot;&gt;Image Color Picker&lt;/a&gt; — image color picker and color scheme generator. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://instant-eyedropper.com/&quot;&gt;Instant Eyedropper&lt;/a&gt; — a minimalist eyedropper tool for windows, supports multiple color formats for both designers and developers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://annystudio.com/software/colorpicker/&quot;&gt;Just Color Picker&lt;/a&gt; — Free portable offline color picker and color editor. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://khroma.co/&quot;&gt;Khroma&lt;/a&gt; — AI-based tool to generate color palettes based on your preferences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BafS/Material-Colors-native&quot;&gt;Material Colors Native&lt;/a&gt; — Google&#39;s material design color palette in the form of a mac app. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://materialpalettes.com/&quot;&gt;Material Design Palette Generator&lt;/a&gt; — get perfect Material Design color palettes from any hex color. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paletton.com&quot;&gt;Paletton&lt;/a&gt; — a designer tool for creating color combinations that work together well. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://picular.co/&quot;&gt;Picular&lt;/a&gt; — a rocket fast primary color generator using Google&#39;s image search. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pigment.shapefactory.co/&quot;&gt;Pigment&lt;/a&gt; — a color palette generator with innumerable color configurations suggested by the app. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/pikka-color-picker/id1195076754&quot;&gt;Pikka&lt;/a&gt; — color picker &amp;amp; color schemes generator for macOS. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://casesandberg.github.io/react-color/&quot;&gt;React Color&lt;/a&gt; — a collection of color pickers from Sketch, Photoshop, Chrome. It‘s free and open-source. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/casesandberg/react-color/&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sipapp.io/&quot;&gt;Sip&lt;/a&gt; — a better way to collect, organize and share colors. Global eyedropper tool for macOS. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bjango.com/mac/skalacolor/&quot;&gt;Skala Color&lt;/a&gt; — works with a huge variety of formats, covering everything you’re likely to need for web, iOS, Android, and macOS development. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swatchesapp.io/&quot;&gt;Swatches&lt;/a&gt; — iOS app that lets you collect, inspect and share the colors that inspire you in your daily life. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketintsandshades.com/&quot;&gt;Tint &amp;amp; Shade Generator&lt;/a&gt; — display tints and shades of a given hex color in 10% increments. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://projects.susielu.com/viz-palette&quot;&gt;Viz Palette&lt;/a&gt; — color picker for data visualizations. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also create color palettes with Leonardo, which is mentioned in the &lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#accessibility-tools&quot;&gt;Accessibility Tools section&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design Feedback Tools&lt;/h3&gt; 
&lt;p&gt;How do you provide and get feedback during the development process? This process is usually pretty messy for many product teams, which caused product delays and time waste on back-and-forth communication. So if you wish to get fast and structural feedback on UI issues or visual bugs — take a look at this tool:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flawlessapp.io/feedback&quot;&gt;Flawless Feedback&lt;/a&gt; — review and annotate iOS apps then share your feedback in Jira or Trello. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://govisually.com&quot;&gt;GoVisually&lt;/a&gt; — online proofing, design review &amp;amp; approval software. 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design Handoff Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Design handoff happens when designers finish the work and need to deliver designs to developers with all specs and assets. Design handoff tools allow to automatically generate style guide, comment on the design, inspect elements. These tools minimize guesswork and improve the effectiveness of the design process.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avocode.com&quot;&gt;Avocode&lt;/a&gt; — open designs without design tools. Export images without preparing layers. Click on layers to get code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flawlessapp.io/&quot;&gt;Flawless App&lt;/a&gt; — a tool to compare the expected design and the real app right inside iOS Simulator (useful for designers who use Xcode or mobile developers). &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invisionapp.com/feature/inspect/&quot;&gt;Inspect&lt;/a&gt; — prepare designs for development. Made by Invision.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/utom/sketch-measure&quot;&gt;Sketch Measure&lt;/a&gt; — Sketch redline plugin. Annotate distance and size of elements. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://specctr.com&quot;&gt;Specctr&lt;/a&gt; — in the unfortunate event you&#39;re designing UI in PS, AI, or ID this tool creates redline annotations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sympli.io&quot;&gt;Sympli&lt;/a&gt; — automated specs and assets handoff from Sketch, Photoshop and Adobe XD. Integrated with Jira, Xcode and Android Studio.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zeplin.io/&quot;&gt;Zeplin&lt;/a&gt; — handoff designs and style guides with accurate specs, assets, code snippets automatically.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also make a design handoff within Relay, mentioned in the &lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#design-version-control&quot;&gt;Design Version Control&lt;/a&gt; section.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design Inspiration&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The creative process can be tough. So if ideas don’t come to your mind right away, try to search for inspiration in the work of other designers. These design inspiration sites feature design patterns, user flows, email markups and creative solutions of popular companies and great products:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.behance.net/&quot;&gt;Behance&lt;/a&gt; — an online platform to showcase &amp;amp; discover creative work. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codemyui.com/&quot;&gt;CodeMyUI&lt;/a&gt; — handpicked collection of web design &amp;amp; UI inspiration with code snippets. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://collectui.com/&quot;&gt;Collect UI&lt;/a&gt; — a platform for your daily inspiration collected from Daily UI &amp;amp; beyond. Based on Dribbble shots, 14419 handpicked designs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.creative-portfolios.com/&quot;&gt;Creative Portfolios&lt;/a&gt; — a curation of the most creative portfolios made by designers &amp;amp; developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/design-hunt/id968588816?mt=8&quot;&gt;Design Hunt&lt;/a&gt; — a daily collection of the best products, apps, and inspirations for all creatives. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dribbble.com/&quot;&gt;Dribbble&lt;/a&gt; — an online community for showcasing user-made artwork. A great resource to get inspired by others work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ficture.design/&quot;&gt;Ficture&lt;/a&gt; — a font in use archive that will inspire you. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://inspirationui.com/&quot;&gt;Inspiration UI&lt;/a&gt; — a community that aims to provide the best design resources for those who create for the web. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hoverstat.es/&quot;&gt;Hover States&lt;/a&gt; — showcase great work from the bleeding edge of digital culture for, and with, the creative community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://httpster.net/&quot;&gt;Httpster&lt;/a&gt; — an inspiration resource showcasing rocking websites made by people from all over the world. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.h69.design/&quot;&gt;H69.Design&lt;/a&gt; — landing page colletions &amp;amp; Free resources for designers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lapa.ninja/&quot;&gt;Lapa Ninja&lt;/a&gt; — landing page design inspiration from around the web. 1800+ landing page examples and updated daily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobile-patterns.com/&quot;&gt;Mobile Patterns&lt;/a&gt; — a design inspirational library featuring finest UI UX Patterns (iOS and Android).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobbin.design/&quot;&gt;Mobbin&lt;/a&gt; — browse mobile design patterns for popular apps. Explore common user flows such as onboarding, account sign up and log in, core functionality, and more. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onepagelove.com/gallery&quot;&gt;One Page Love&lt;/a&gt; — a collection of beautiful unique One Page websites for website design inspiration. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owwly.com/feed/inspirations&quot;&gt;Owwly&lt;/a&gt; — home for digital products crafted with passion to design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pageflows.com/&quot;&gt;Page Flows&lt;/a&gt; — user flow videos and screenshots to inspire you when you&#39;re stuck. Discover mobile and web design patterns for over 160 different tasks. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pttrns.com/&quot;&gt;pttrns&lt;/a&gt; — design patterns for popular mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reallygoodemails.com/&quot;&gt;Really Good Emails&lt;/a&gt; — 4,150+ handpicked email design. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reallygoodux.io/&quot;&gt;ReallyGoodUX&lt;/a&gt; — screenshots, and examples of great UX from real mobile and web products. Discover the best UX examples—including onboarding tours and walkthroughs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://saaslandingpage.com/&quot;&gt;Saas Landing Page&lt;/a&gt; — iscover the best landing page examples created by top-class SaaS companies, and get ideas and inspiration for your next design project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://saaspages.xyz/&quot;&gt;Saas Pages&lt;/a&gt; — a collection of the best landing pages with a focus on copywriting and design. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thedesignteam.io/&quot;&gt;The Design Team&lt;/a&gt; — comics about a design team for a tech startup in Silicon Valley.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typewolf.com/&quot;&gt;Typewolf&lt;/a&gt; — helps designers choose the perfect font combination for their next design project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uigarage.net/&quot;&gt;UI Garage&lt;/a&gt; — the one-stop shop for designers, developers, and marketers to find inspiration, tools and the best resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uisources.com/&quot;&gt;UI Sources&lt;/a&gt; — over 500+ interactions from the best designed and top-grossing apps on the App Store today. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uirecipes.com/&quot;&gt;UI Recipes&lt;/a&gt; — weekly 15 min lessons on UI design from the hottest apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uxarchive.com/&quot;&gt;UX Archive&lt;/a&gt; — browse more than 400 user flows across 120 mobile apps. Examine tasks such as booking, logging in, onboarding, purchasing, searching, and more. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.waveguide.io/&quot;&gt;Waveguide&lt;/a&gt; — a design knowledge bank with thousands of artificially enriched examples of product and brand experience (examples of Mobile App, Landing pages, eCommerce, CX/UX Patterns).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.webdesignmuseum.org/&quot;&gt;Web Design Museum&lt;/a&gt; — over 1,200 carefully selected web sites that show web design trends between the years 1994 and 2006.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design System Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;I bet you heard about Design Systems, as it’s a pretty trendy topic. Design systems provide consistent, robust design patterns to keep design and development in sync. They are essentially collections of rules, constraints, and principles, implemented in design and code. Here you can find tools to build, maintain and organize your design system.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cabanadesignsystem.com/&quot;&gt;Cabana&lt;/a&gt; — a Premium Design System for Sketch that helps you create amazing products faster than ever before.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.catalog.style/&quot;&gt;Catalog&lt;/a&gt; — a living style guide for digital products, combining design documentation with real live components. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invisionapp.com/design-system-manager/&quot;&gt;Design System Manager&lt;/a&gt; — Invision&#39;s design system manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rundsk.com&quot;&gt;DSK&lt;/a&gt; — short for “Design System Kit” – a workbench for collaboratively creating Design Systems. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.eosdesignsystem.com&quot;&gt;EOS Design System&lt;/a&gt; — an open-source and customizable built on top of Bootstrap following the Atomic Design concept. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eva.design/&quot;&gt;Eva Design System&lt;/a&gt; — customizable design system, available for Sketch with Mobile and Web component libraries. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontify.com/&quot;&gt;Frontify&lt;/a&gt; — create graphical guidelines, patterns libraries, design systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interplayapp.com/&quot;&gt;Interplay&lt;/a&gt; — connect design and engineering around a single source of truth. The tool is not publicly available yet (beta).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lingoapp.com/&quot;&gt;Lingo&lt;/a&gt; — create a shared asset library with your entire team. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucid.style/&quot;&gt;Lucid&lt;/a&gt; — tool for creating, managing and sharing a design system. From a simple component library through to detailed descriptions of your styles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.modulz.app/&quot;&gt;Modulz&lt;/a&gt; — design, build, document and publish your design system—without writing code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primedesignsystem.com&quot;&gt;Prime Design System Kit&lt;/a&gt; — it includes device templates, charts, UI kit and even illustration kit. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.specifyapp.com/&quot;&gt;Specify&lt;/a&gt; — a tool to create, scale and maintain a design system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://storybook.js.org/&quot;&gt;Storybook&lt;/a&gt; — an open-source tool for developing UI components in isolation for React, Vue, and Angular. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://symboldesign.co/&quot;&gt;Symbol Design System&lt;/a&gt; — design System for Sketch-based on atomic elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.toolabs.com/&quot;&gt;Toolabs&lt;/a&gt; — design systems and components based design, prototype and development tool. It&#39;s not public yet but you can apply to the early access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zeroheight.com/&quot;&gt;Zeroheight&lt;/a&gt; — style guides created by designers, extended by developers, and editable by everyone.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;We can also add to this in Sketch, Figma, UXPin and Framer X (&lt;a href=&quot;https://www.framer.com/design-systems/&quot;&gt;Framer X Team Store&lt;/a&gt;).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design to Code Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Everyone can learn development but it takes time and effort. If you need a website or an app right now and you don’t want to hire a developer, pay attention to the website builders. Such design to code tools will help you to make a portfolio, simple landing or an app pretty fast and beautiful.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.animaapp.com/&quot;&gt;Anima&lt;/a&gt; — a web app with a Sketch plugin that converts Sketch to HTML. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blocsapp.com/&quot;&gt;Blocs&lt;/a&gt; — a fast, easy to use and powerful visual web design tool, that lets you create responsive websites without writing code. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bootstrapstudio.io/&quot;&gt;Bootstrap Studio&lt;/a&gt; — a powerful web design tool for creating responsive websites using the Bootstrap framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com/&quot;&gt;Draftbit&lt;/a&gt; — visually design and build mobile apps directly from your browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.easylogic.studio/&quot;&gt;EasyLogic Studio&lt;/a&gt; — fantastic css+svg design tool, also it is converted into code as shown.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grapedrop.com/&quot;&gt;Grapedrop&lt;/a&gt; — design your components, web projects and publish them instantly online, with an easy to use editor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobirise.com/&quot;&gt;Mobirise&lt;/a&gt; — an offline drag and drop website builder software that is based on Bootstrap 3/4 and \ AMP. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pagecloud.com/&quot;&gt;PageCloud&lt;/a&gt; — the fastest and most customizable website builder that allows anyone to create their ideal website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paintcodeapp.com&quot;&gt;PaintCode&lt;/a&gt; — vector drawing app that instantly converts drawings into Swift, Objective-C, JavaScript or Java code. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pinegrow.com/&quot;&gt;Pinegrow&lt;/a&gt; — a professional visual editor for CSS Grid, Bootstrap 4 and 3, Foundation, responsive design, HTML, and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pxdiv.com&quot;&gt;px.div&lt;/a&gt; — a proper site build tool for developers and designers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://readymag.com/&quot;&gt;Readymag&lt;/a&gt; — a visually-pleasing tool for designing on the web from landing pages to multimedia long-reads, presentations and portfolios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sparkleapp.com/&quot;&gt;Sparkle&lt;/a&gt; — the easiest way to make a real website, no code, no jargon. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://studio.design/&quot;&gt;STUDIO&lt;/a&gt; — design from scratch, collaborate in real-time and publish websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://supernova.io/&quot;&gt;Supernova Studio&lt;/a&gt; — import designs from Sketch and convert them into Android, iOS or React Native code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tilda.cc/&quot;&gt;Tilda&lt;/a&gt; — create a website, landing page or online store for free with the help of Tilda modules and publish it on the same day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wix.com/&quot;&gt;Wix&lt;/a&gt; — the easiest and fullest-featured website builder, that allows you to create your own highly customized site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com/&quot;&gt;Webflow&lt;/a&gt; — build responsive websites in your browser, then host with us or export your code to host wherever.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Design Version Control&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Developers actively use version control tools for a long time, probably since 2005 (Git first release). Using a version control system is no brainer for dev teams, while the design version control system appeared only recently. This market is rapidly developing and we expect to see even more in version control for designers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.abstract.com/&quot;&gt;Abstract&lt;/a&gt; — a platform for design teams to version, manage and collaborate on Sketch files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://folioformac.com/&quot;&gt;Folio&lt;/a&gt; — a simple version control system for design teams based on Git. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kactus.io/&quot;&gt;Kactus&lt;/a&gt; — design version control without changing your tools. Manage changes, document work and keep your team in sync. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plantapp.io/&quot;&gt;Plant&lt;/a&gt; — Mac app and Sketch plugin offering complete version control for designers and teams. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relay.graphics/&quot;&gt;Relay for Figma&lt;/a&gt; — Relay pushes your latest assets from Figma directly to your codebase (not released yet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://versions.sympli.io&quot;&gt;Versions&lt;/a&gt; — a version control tool for designers with visual diff, merge and conflict resolution. Works with GitHub, Bitbucket, GitLab and Azure DevOps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Development Tools&lt;/h3&gt; 
&lt;p&gt;This section mentions development tools and browsers. Development browsers have features that help developers and designers create and test websites and apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blisk.io&quot;&gt;Blisk&lt;/a&gt; — provides a development workspace to develop and test modern web applications twice faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/developer/&quot;&gt;Firefox developer edition&lt;/a&gt; — developer edition of the Firefox browser. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/&quot;&gt;Litmus&lt;/a&gt; — an email campaign creation platform that, amongst other things, lets you see how HTML emails will appear in a wide variety of email clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://polypane.rocks&quot;&gt;Polypane&lt;/a&gt; — a browser built from the ground up to create and test websites and apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://storybook.js.org/&quot;&gt;Storybook&lt;/a&gt; — an open source tool for developing UI components in isolation for React, Vue, and Angular. It makes building stunning UIs organized and efficient. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/styleguidist/react-styleguidist&quot;&gt;Styleguidist&lt;/a&gt; — isolated React component development environment with a living style guide. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Experience Monitoring&lt;/h3&gt; 
&lt;p&gt;Listening to users is important but seeing the real usage is even more crucial. For these, you need to install different analytic tools, experience monitoring software, and user behavior apps. Just use those analytics solutions concerning users data:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amplitude.com/&quot;&gt;Amplitude&lt;/a&gt; — understand your users, rapidly release better product experiences, and grow your business.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.optimalworkshop.com/chalkmark&quot;&gt;Chalkmark&lt;/a&gt; — increase your customer conversion and task-oriented success rates by getting quick feedback on designs before you implement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://usefathom.com/&quot;&gt;Fathom&lt;/a&gt; — provides simple, useful websites stats without tracking or storing personal data of your users.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullstory.com/&quot;&gt;FullStory&lt;/a&gt; — an app that captures all your customer experience data in one powerful, easy-to-use platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://analytics.google.com/analytics/web/&quot;&gt;Google Analytics&lt;/a&gt; — measure your advertising ROI and track your sites and applications. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heapanalytics.com/&quot;&gt;Heap&lt;/a&gt; — automatically capture every web, mobile, and cloud interaction then retroactively analyze your data without writing code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heatlyanalytics.com&quot;&gt;Heatly&lt;/a&gt; — free heatmap tools to understand the website&#39;s user experience better. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hotjar.com/&quot;&gt;Hotjar&lt;/a&gt; — see how visitors are using your website and collect user feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inspectlet.com/&quot;&gt;Inspectlet&lt;/a&gt; — record videos of your visitors as they use your site, so you can see everything they do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://livesession.io&quot;&gt;LiveSession&lt;/a&gt; - high-quality user&#39;s session replay analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logrocket.com/&quot;&gt;LogRocket&lt;/a&gt; — see what users do on your site, helping you reproduce bugs and fix issues faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixpanel.com/&quot;&gt;Mixpanel&lt;/a&gt; — get insights across all of your user-centric data to make smarter decisions and act faster based on how customers use your product or website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mouseflow.com/&quot;&gt;Mouseflow&lt;/a&gt; — record mouse cursor movements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pendo.io/&quot;&gt;Pendo&lt;/a&gt; — measure and elevate the customer experience within their applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartlook.com&quot;&gt;Smartlook&lt;/a&gt; — user session replay and user engagement analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://usabilla.com&quot;&gt;Usabilla&lt;/a&gt; — build future-proof customer experiences by asking the right questions at the right time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Font Tools&lt;/h3&gt; 
&lt;p&gt;Fonts are commonly used for making the web a more beautiful place. It’s an essential part of any design. In this section, you’ll find fonts generators &amp;amp; font finder tools that allow you to manage and work with fonts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://befonts.com/&quot;&gt;BeFonts&lt;/a&gt; — a Decent collection of free fonts. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.behance.net/search/?search=free%20font&quot;&gt;Behance Free Fonts&lt;/a&gt; — a list of free fonts uploaded on Behance. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dafont.com/&quot;&gt;DaFont&lt;/a&gt; — archive of freely downloadable fonts. Browse by alphabetical listing, by style, by author or by popularity. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://emotype.webflow.io/&quot;&gt;Emotype&lt;/a&gt; — makes it easy to find fonts based on the emotions you want to convey on your website. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontba.se/&quot;&gt;Fontbase&lt;/a&gt; — font management made easy. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fontfabric.com/&quot;&gt;FontFabric&lt;/a&gt; — gorgeous interface and good collection. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontface.ninja/&quot;&gt;Fontface Ninja&lt;/a&gt; — browser extension to discover what fonts are being used on any website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontpair.co/&quot;&gt;FontPair&lt;/a&gt; — a simple tool that helps you pair Google Fonts together. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fontown.com/en&quot;&gt;Fontown&lt;/a&gt; — a typographic tool with a nonstop growing font catalog which facilitates designer workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fonts.adobe.com/fonts&quot;&gt;Fonts&lt;/a&gt; — thousands of beautiful fonts by Adobe. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontsarena.com/&quot;&gt;Fonts Arena&lt;/a&gt; — curated typography website with high-quality free fonts, done-for-you research articles, free alternatives to premium fonts, news, and more. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fontget.com/&quot;&gt;FontGet&lt;/a&gt; — variety of fonts all sorted neatly with tags. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fontself.com&quot;&gt;FontSelf&lt;/a&gt; — an extension for Illustrator and Photoshop CC that lets you turn any lettering into OpenType fonts in minutes!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontspark.app/&quot;&gt;FontSpark&lt;/a&gt; — a simple tool to help designers quickly find the best fonts for their projects. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fontsquirrel.com/fonts/acherus-grotesque&quot;&gt;Font Squirrel&lt;/a&gt; — download free fonts with wide collections.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fonts.google.com/&quot;&gt;Google Fonts&lt;/a&gt; — making the web more beautiful, fast, and open through great typography. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google-webfonts-helper.herokuapp.com/&quot;&gt;Google Webfonts Helper&lt;/a&gt; — a hassle way to self-host Google Fonts. It‘s free and open-source. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/majodev/google-webfonts-helper/&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://losttype.com/&quot;&gt;LostType&lt;/a&gt; — the first Pay-What-You-Want type foundry.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/measure/bbompmbliibpeaaloikpoahdokhjdmeg&quot;&gt;Measure&lt;/a&gt; — measure typographic line lengths with this browser extension for Chrome. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rightfontapp.com/&quot;&gt;RightFont&lt;/a&gt; — font managing app, helps preview, sync, install and organize fonts over iCloud, Dropbox or Google Drive. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sansforgetica.rmit/&quot;&gt;Sans Forgetica&lt;/a&gt; — a downloadable font that is scientifically designed to help you remember your study notes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sizecalc.com/&quot;&gt;Size Calculator&lt;/a&gt; — calculate the perceived size using viewing distance and physical size of the printed typography. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typefaceapp.com/&quot;&gt;Typeface&lt;/a&gt; — font manager that improves your design workflow with live font previews and flexible tagging. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wakamaifondue.com/&quot;&gt;Wakamai Fondue&lt;/a&gt; — the tool that answers the question &quot;what can my font do?&quot;. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webfontpreview.com/&quot;&gt;Web Font Preview&lt;/a&gt; — preview Google Font pairings with components and site templates. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/jonaskay/webfontpreview&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webfontapp.com/&quot;&gt;Webfont&lt;/a&gt; — create and maintain custom SVG icon fonts, made a shared library of icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wordmark.it/&quot;&gt;WordMarkIt&lt;/a&gt; — displays your written word/phrase with all the fonts which are already installed on your computer. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also handle fonts with Specify, which is mentioned in the &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools#design-system-tools&quot;&gt;Design System Tools&lt;/a&gt; section.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Gradient Tools&lt;/h3&gt; 
&lt;p&gt;You can see gradient colors are everywhere — UI, branding, illustration, typography. A gradient is created by using two or more different colors to paint one element while gradually fading between them. It might look as a memorable, fresh and unique color. To make such a gradient for your design, use these gradient color palettes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.colinkeany.com/blend/&quot;&gt;Blend&lt;/a&gt; — create and customize beautiful CSS3 gradients. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.colorffy.com/&quot;&gt;Colorffy&lt;/a&gt; — get CSS, images, UI previews or create own gradients. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.colorsandfonts.com/&quot;&gt;Colors &amp;amp; Fonts&lt;/a&gt; — a curated library of colors, gradients and fonts for digital designers and web developers.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mycolor.space/&quot;&gt;ColorSpace&lt;/a&gt; — the perfect matching color scheme for your next project! Generate nice color palettes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colorspark.app/gradient&quot;&gt;ColorSpark&lt;/a&gt; — helps designers find unique colors and striking gradient combinations. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coolbackgrounds.io/&quot;&gt;Cool Backgrounds&lt;/a&gt; — explore a beautifully curated selection of cool backgrounds that you can add to blogs, websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webkul.github.io/coolhue/&quot;&gt;CoolHue&lt;/a&gt; — handpicked gradient palette and swatch for your next super amazing stuff. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cssgradient.io/&quot;&gt;CSS Gradient&lt;/a&gt; — a free CSS gradient generator tool, this website lets you create a colorful gradient background. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.eggradients.com/&quot;&gt;Egg Gradients&lt;/a&gt; — a color collection page that includes shades of 12 different colors. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grabient.com/&quot;&gt;Grabient&lt;/a&gt; — beautiful and simple UI for generating web gradients. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gradienta.io/&quot;&gt;Gradienta&lt;/a&gt; — multicolor CSS Gradients, JPG Downloads, 100% Free! &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gradientslist.com&quot;&gt;GradientsList&lt;/a&gt; — a largest crowdsourced collection of gradients, with daily contributions from users on &lt;a href=&quot;https://itunes.apple.com/app/apple-store/id1442380225?pt=117877769&amp;amp;ct=gh&amp;amp;mt=8&quot;&gt;Gradients Maker for iOS&lt;/a&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colordesigner.io/gradient-generator&quot;&gt;Gradient Generator&lt;/a&gt; — a tool that generates a stepped gradient between two colors. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gradienthunt.com/&quot;&gt;Gradient Hunt&lt;/a&gt; — a free and open platform for color inspiration with thousands of trendy hand-made color gradients. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gradientsguru.com/&quot;&gt;Gradients Guru&lt;/a&gt; — blend mode background images &amp;amp; beautiful background gradients for your UI. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://htmlcolors.com/&quot;&gt;HtmlColours&lt;/a&gt; — realize how easy and beautiful it is to create gradients with this gradient generator. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uigradients.com/&quot;&gt;UI Gradients&lt;/a&gt; — handpicked collection of beautiful color gradients for designers and developers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webgradients.com/&quot;&gt;Web Gradients&lt;/a&gt; — a free collection of 180 linear gradients that you can use as content backdrops in any part of your website. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also create and audit gradients with Leonardo, which is mentioned in the &lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#accessibility-tools&quot;&gt;Accessibility Tools section&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Icons Tools&lt;/h3&gt; 
&lt;p&gt;As well as fonts, icons are used in every design. These basic elements support and guide many user actions inside the product. Without a doubt, icons are a vital element in user navigation. While making those small design elements is hard and time-consuming, you can get thousands of vector icons for personal and commercial use.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://animaticons.co/&quot;&gt;Animaticons&lt;/a&gt; — a growing set of beautiful, high-resolution, animated GIF icons that you can customize.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coreui.io/icons/&quot;&gt;CoreUI Icons&lt;/a&gt; — premium designed free icon set with marks in SVG, Webfont and raster formats. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://digitalnomadicons.com/&quot;&gt;Digital Nomad Icons&lt;/a&gt; — lifestyle icon &amp;amp; emoji pack for your next project. 25 high-resolution flat icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interface.market/essential/basic-pack&quot;&gt;Essential Glyphs&lt;/a&gt; — created to cover your needs in perfect-shaped icons. Adapted for small and large sizes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feathericons.com/&quot;&gt;Feather Icons&lt;/a&gt; — each icon is designed on a 24x24 grid with an emphasis on simplicity, consistency, and readability. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flaticon.com/&quot;&gt;Flaticon&lt;/a&gt; — 1593000+ vector icons in SVG, PSD, PNG, EPS format or as icon font.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/&quot;&gt;Font Awesome&lt;/a&gt; — the web&#39;s most popular icon set and toolkit, also it&#39;s open source. &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fontello.com/&quot;&gt;Fontello&lt;/a&gt; — tool to build custom fonts with icons, also open source. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/fontello/fontello&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freepik.com&quot;&gt;Freepik&lt;/a&gt; — collection of exclusive freebies and all graphic resources that you need for your projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconscout.com/&quot;&gt;Iconscout&lt;/a&gt; — get high-quality Icons, Illustrations and Stock photos at one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.iconfinder.com&quot;&gt;Iconfinder&lt;/a&gt; — a marketplace for vector icons (SVG). Icon sets available in IconJar format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.geticonjar.com/&quot;&gt;IconJar&lt;/a&gt; — store all your icons in one icon manager. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconmonstr.com/&quot;&gt;Iconmonstr&lt;/a&gt; — discover 4412+ free icons in 305 collections.Big and continuously growing source of simple icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconset.io/&quot;&gt;Iconset&lt;/a&gt; — free, cross-platform and fast SVG icon organizer working on Mac and Windows. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconstore.co/&quot;&gt;Icon Store&lt;/a&gt; — a library of free vector icons for personal and commercial projects, designed by first-class designers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconsvg.xyz/&quot;&gt;ICONSVG&lt;/a&gt; — a tool to simplify the process of finding and generating common icons for your project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icons8.com/icons&quot;&gt;Icons8&lt;/a&gt; — free iOS, Android and Windows styled icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ikonate.com/&quot;&gt;Ikonate&lt;/a&gt; — customize, adjust and download free vector icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://illustrio.com/&quot;&gt;illustrio&lt;/a&gt; — a smarter icon library. Build something great with 100% customizable icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ionicons.com/&quot;&gt;Ionicons&lt;/a&gt; — beautifully crafted open source icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://materialdesignicons.com/&quot;&gt;Material Design Icons&lt;/a&gt; — free material design icons made possible by open source contributons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icons.pixsellz.io/&quot;&gt;Material Icons Library&lt;/a&gt; — free collection of 1000+ icons for popular graphics tools. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getmotion.io&quot;&gt;Motion&lt;/a&gt; — free, simple animated icon editor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://norde.io/&quot;&gt;Norde Source&lt;/a&gt; — mac, Windows and Linux app to color and customize icon sets to fit your brand. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thenounproject.com/&quot;&gt;Noun Project&lt;/a&gt; — icons for everything.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nucleoapp.com/&quot;&gt;Nucleo&lt;/a&gt; — a Mac and Windows app to collect, customize and export all your icons. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orioniconlibrary.com/all-icons&quot;&gt;Orion Icons&lt;/a&gt; — SVG vector icons with an advanced interactive web app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://simpleicons.org/&quot;&gt;Simple Icons&lt;/a&gt; — free SVG icons for popular brands. Simply click the icon you want, and the download should start automatically. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shareicon.net/&quot;&gt;Share Icon&lt;/a&gt; — more than 300 000 free download icons in different formats. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://emoji.streamlineicons.com/&quot;&gt;Streamline Emoji&lt;/a&gt; — a free collection of 850 + vector emoji. The style is inspired by the japanese “Kawaii” (cute) style. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.svgs.us/&quot;&gt;Svgsus&lt;/a&gt; — SVG icon management tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.iconshock.com/svg-color/&quot;&gt;SVG Colorizer&lt;/a&gt; — a tool to automatically change the entire color palette of any given SVG icon pack intelligently keeping the shades, highlights &amp;amp; shadows. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.svgrepo.com/&quot;&gt;SVGRepo&lt;/a&gt; — a site with 300.000+ SVG Vectors and Icons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tilda.cc/free-icons/&quot;&gt;Tilda Icons&lt;/a&gt; — download free icons for landing pages. More than 700 vector icons, collected in 43 sets for business. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twemoji.twitter.com/&quot;&gt;Twemoji&lt;/a&gt; — Twitter’s open-source emoji has you covered for all your project&#39;s emoji needs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iconscout.com/unicons&quot;&gt;Unicons&lt;/a&gt; — 1000+ pixel-perfect vector icons for your next project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://visualpharm.com/&quot;&gt;VisualPharm&lt;/a&gt; — free SVG Icons with super-fast search and free Coke. Built for fun by Icons8. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xicons.co/&quot;&gt;Xicons&lt;/a&gt; — free vector icons, that update every 10 days. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zwicon.com/&quot;&gt;Zwicon&lt;/a&gt; — handcrafted icon set for your next project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also handle icons with Specify, which is mentioned in the &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools#design-system-tools&quot;&gt;Design System Tools&lt;/a&gt; section.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Illustrations&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Illustrations can be used on your landing page, blog posts, inside your app or email campaign. They make your design live and playful. While drawing good illustration is a task of a skilled graphic designer, you can grab free SVG images &amp;amp; illustrations from very kind people in our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://absurd.design&quot;&gt;Absurd Design&lt;/a&gt; — free surrealist illustrations for your projects. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.blobmaker.app/&quot;&gt;Blobmaker&lt;/a&gt; — create vector blob illustrations in the browser, with varying colour, complexity and contrast. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blush.design/&quot;&gt;Blush&lt;/a&gt; — create, mix and customize illustrations made by artists around the world. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/figma.svg&quot; alt=&quot;Figma&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.humaaans.com/&quot;&gt;Humaaans&lt;/a&gt; — a free library to mix-&amp;amp;-match illustrations of people. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pngtree.com/illustration-design&quot;&gt;Illustration by Pngtree&lt;/a&gt; — over 13142 professionally designed illustrations of different styles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iradesign.io/&quot;&gt;IRA Design&lt;/a&gt; — create amazing illustrations, using hand-drawn sketch components, a cool selection of 5 gradients and ai., svg. or png. formats. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joeschmoe.io&quot;&gt;JoeSchmoe&lt;/a&gt; — an illustrated avatar collection for developers and designers, perfect as placeholders or live sites. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lukaszadam.com/illustrations&quot;&gt;LukaszAdam&lt;/a&gt; — free vector art illustrations and icons. They are available for personal and commercial use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gallery.manypixels.co&quot;&gt;ManyPixels&lt;/a&gt; — royalty-free illustrations to power up your projects. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MariaLetta/mega-doodles-pack&quot;&gt;Mega Doodles Pack&lt;/a&gt; — big vector pack with hand-drawn doodles for presentations, social media, blog posts and so on. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opendoodles.com/&quot;&gt;Open Doodles&lt;/a&gt; — a set of free illustrations by Pablo Stanley that embraces the idea of Open Design. You can copy, edit, remix, share, or redraw these images for any purpose without restriction under copyright or database law (CC0 license.). &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icons8.com/ouch&quot;&gt;Ouch&lt;/a&gt; — vector illustrations to class up your project. Free for both personal and commercial use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squircley.app/&quot;&gt;Squircley&lt;/a&gt; - all you need to start creating beautiful SVG squircles. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://undraw.co&quot;&gt;unDraw&lt;/a&gt; — a collection of beautiful SVG images. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wannapik.com/&quot;&gt;Wannapik&lt;/a&gt; — a collection of free illustrations, vector images, photos, and animations for any use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Information Architecture&lt;/h3&gt; 
&lt;p&gt;Information architecture helps designers organize and structure content inside websites, mobile apps, and other software. So users will understand product functionality and will find everything needed. These information architecture tools should allow you to create visual sitemaps and to improve your website content structure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dynomapper.com/&quot;&gt;DYNO Mapper&lt;/a&gt; — organize website projects using visual sitemaps, content inventory, content audit, content planning, daily keyword tracking, and website accessibility testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.do&quot;&gt;Octopus.do&lt;/a&gt; — visual sitemap builder. Build your website structure in real-time and rapidly share it to collaborate with your team or clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omnigroup.com/omnigraffle/&quot;&gt;OmniGraffle&lt;/a&gt; — сreate beautiful diagrams and designs with this powerful and easy to use app.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.optimalworkshop.com/optimalsort&quot;&gt;OptimalSort&lt;/a&gt; — card sorting tool that allows you to understand how people categorize content in your UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.optimalworkshop.com/treejack&quot;&gt;Treejack&lt;/a&gt; — upload your proposed sitemap to see how a user would move through your site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://writemaps.com/&quot;&gt;WriteMaps&lt;/a&gt; — create sitemaps that impress! Plan out the pages and content for your next website project in a visual, fun, and beautiful manner.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Logo Design&lt;/h3&gt; 
&lt;p&gt;A logo is the starting point of your brand identity. It reflects the product mission, functionality and brand message. Ideally, the logo creates a strong connection between your product and the users. Logo design is an art, as well as many other design disciplines. With the right logo design tools, this art can be done right a bit faster.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.designevo.com/&quot;&gt;Design Evo&lt;/a&gt; — a large collection of vector icons and shapes help you design custom logos easily. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freelogodesign.org/&quot;&gt;Free Logo Design&lt;/a&gt; — create stunning professional logos in seconds. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphicsprings.com/&quot;&gt;Graphic Springs&lt;/a&gt; — choose from a gallery of vector format logo templates, categorized by industry. Edit the graphics and texts of your template, then download it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logodesignteam.com/&quot;&gt;Logo Design Team&lt;/a&gt; — offers affordable professional custom logo design and brand design services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logojoy.com/&quot;&gt;Logojoy&lt;/a&gt; — uses artificial intelligence to instantly generate unique logo ideas for your business.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logolab.app/home&quot;&gt;Logo Lab&lt;/a&gt; — put your logo to the test with automated visual experiments. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ucraft.com/free-logo-maker&quot;&gt;Logo Maker&lt;/a&gt; — allows you to make a free logo within seconds. Start with a blank canvas, add text and an icon, and then customize. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.designhill.com/tools/logo-maker&quot;&gt;Logo Maker&lt;/a&gt; by Designhill — generate 1000s of unique logos in only few minutes, without design expertise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logomakr.com/&quot;&gt;Logo Makr&lt;/a&gt; — design a logo for free, choose from hundreds of fonts and icons, then save a logo on the computer. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logomyway.com/&quot;&gt;Logo My Way&lt;/a&gt; — choose from 600 custom logo designs from creative designers worldwide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://thelogopackage.com&quot;&gt;Logo Package Express&lt;/a&gt; — export and package dozens of logo variations and file types for your clients automatically in under 5 minutes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brandmark.io/logo-rank/&quot;&gt;Logo Rank&lt;/a&gt; — upload your logo to see how it rates on a number of objective measures. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wizlogo.com/&quot;&gt;Wizlogo&lt;/a&gt; — create a logo with a simple and affordable tool backed by professional designers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also do your logo design with Adobe Photoshop, GIMP, Inkscape, Krita and Vectr which are mentioned in &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools#ui-design-tools&quot;&gt;UI design tools&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Mockup Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;A mockup is a visual way of representing the product. While a wireframe mostly represents a product’s structure, a mockup shows how the product is going to look like. These mockup tools that help you create and collaborate on mockups, wireframes, diagrams, and prototypes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://artboard.studio/&quot;&gt;Artboard Studio&lt;/a&gt; — online graphic design application mainly focused on product mockups.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cleanmock.com&quot;&gt;Cleanmock&lt;/a&gt; — create stunning mockups using the latest device frames like iPhone &amp;amp; custom backgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://craftwork.design/&quot;&gt;Craftwork Design&lt;/a&gt; — free and premium high-quality digital products that make your work faster and easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deviceshots.com&quot;&gt;Device Shots&lt;/a&gt; — a tool that helps you create beautiful device mockups with the screenshot of your website or mobile application, for free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.design/devices&quot;&gt;Devices by Facebook&lt;/a&gt; — images and Sketch files of popular devices. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dimmy.club/&quot;&gt;Dimmy.club&lt;/a&gt; — device mockup generator for your website and app screenshots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frrames.com/&quot;&gt;Frrames&lt;/a&gt; — Frrames mockups is perfectly crafted responsive windows mockups for your ideal presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ls.graphics/&quot;&gt;Lstore Graphics&lt;/a&gt; — free and premium mockups, UI/UX tools, scene creators for busy designers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediamodifier.com&quot;&gt;Mediamodifier&lt;/a&gt; — create impressive product mockups in seconds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mockflow.com/&quot;&gt;Mockflow&lt;/a&gt; — the quickest way to brainstorm user interface ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mockupworld.co/&quot;&gt;Mockup World&lt;/a&gt; — tons of free and legal, fully layered, easily customizable photo realistic PSDs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mockupsforfree.com/&quot;&gt;Mockups For Free&lt;/a&gt; — free design resources, PSD files for graphic and web designers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mockuuups.studio/&quot;&gt;Mockuuups&lt;/a&gt; — drag-and-drop tool for creating beautiful app previews or any marketing materials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mock.video/&quot;&gt;Mock Video&lt;/a&gt; — instantly create mockups by adding a device frame to your videos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moqups.com/&quot;&gt;Moqups&lt;/a&gt; — helps you create and collaborate in real-time on wireframes, mockups, diagrams and prototypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://originalmockups.com/&quot;&gt;Original Mockups&lt;/a&gt; — high-quality mockups for Photoshop that make your designs stand out.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://overframe.xyz/&quot;&gt;Overframe for Mac&lt;/a&gt; — record your prototype &amp;amp; app with device frame overlay. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixelbuddha.net/&quot;&gt;PixelBuddha&lt;/a&gt; — free and premium high-quality resources for web designers and developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://store.ramotion.com/&quot;&gt;Ramotion Store&lt;/a&gt; — carefully crafted Apple and Android mockups for Sketch and Photoshop.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rotato.xyz/&quot;&gt;Rotato&lt;/a&gt; — animated 3D mockups for your app designs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scenelab.io&quot;&gt;SceneLab&lt;/a&gt; — create realistic mockups and customized brand designs online.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.screely.com/&quot;&gt;Screely&lt;/a&gt; — quickly frame web page designs into a minimalist browser window. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.screenspace.io/&quot;&gt;ScreenSpace&lt;/a&gt; — 3D devices videos for motion designer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://screenzy.io&quot;&gt;Screenzy&lt;/a&gt; — instantly transform your pictures and screenshots into beautiful mockups ready to be shared on social media. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zehfernandes/screeener&quot;&gt;Screeener&lt;/a&gt; — use this app to insert a bunch of images to a keynote file, using the mockup you choose.&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smartmockups.com/&quot;&gt;Smartmockups&lt;/a&gt; — create stunning product mockups with just a few clicks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shotsnapp.com/&quot;&gt;shotsnapp&lt;/a&gt; — create beautiful device mockup presentation for your digital app and website design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://themockup.club/&quot;&gt;The Mockup Club&lt;/a&gt; — a directory of the best free design mockups for Photoshop, Sketch, Figma and InVision Studio. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://threed.io/&quot;&gt;Threed&lt;/a&gt; — generate custom 3D Device Mockups in your Browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uistore.design/&quot;&gt;UI Store Design&lt;/a&gt; — 200+ free handpicked design resources for Sketch, Figma, Adobe XD, InVision Studio, Photoshop, Illustrator CC. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ui8.net/category/freebies&quot;&gt;UI8 — Design Freebies&lt;/a&gt; — epic design freebies to get you started. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mockups.kkuistore.com/&quot;&gt;Vector Mockups Library&lt;/a&gt; — free collection of presentation Mockups for Sketch, Figma &amp;amp; Photoshop. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;No Code Tools&lt;/h3&gt; 
&lt;p&gt;With a rise of “no code tools”, everyone with a laptop can build and launch a project. These tools help designers and makers create websites, apps, and even games. No code tools allow to automate routine tasks and can be used without a development background. Take a look at the tools here and if you need more — check Design to Code section.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bubble.io/&quot;&gt;Bubble&lt;/a&gt; — build and host web applications without having to write code or hire a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carrd.co/&quot;&gt;Carrd&lt;/a&gt; — simple, free, fully responsive one-page sites for pretty much anything. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coda.io&quot;&gt;Coda&lt;/a&gt; — a new type of document that blends the flexibility of documents, the power of spreadsheets, and the utility of apps into a single new canvas. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kodika.io&quot;&gt;Kodika.io&lt;/a&gt; — build iOS apps with Kodika no code app builder for Mac &amp;amp; iPad, capable of creating powerful apps with Drag &amp;amp; Drop. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagexl.com/&quot;&gt;PageXL&lt;/a&gt; — a simple one-page website builder for quickly creating landing pages and online stores. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.remove.bg/&quot;&gt;Remove.bg&lt;/a&gt; — a free service to remove the background of any photo. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryretool.com/&quot;&gt;Retool&lt;/a&gt; — gives you building blocks and you can build tools much faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sheet2api.com/&quot;&gt;sheet2api&lt;/a&gt; — create an API from Google Sheets or Excel Online Spreadsheets, no coding required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sheet2site.com/&quot;&gt;Sheet2Site&lt;/a&gt; — create a website from Google Sheets without writing code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shopify.com/&quot;&gt;Shopify&lt;/a&gt; — one platform with all the e-commerce and point of sale features you need to start, run, and grow your business.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thunkable.com/&quot;&gt;Thunkable&lt;/a&gt; — a drag-and-drop tool for anyone to build native mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://userguiding.com/&quot;&gt;UserGuiding&lt;/a&gt; — create walkthroughs, checklists, hotspots, and modals to improve user onboarding.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Pixel Art Tools&lt;/h3&gt; 
&lt;p&gt;Pixel art is a digital art form where color is applied to individual pixels to create an image. The pixel art can be used to create everything from intricate scenes and game backgrounds to character designs or emoji. If you feel curious to try, check this pixel art software for both macOS and Windows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aseprite.org/&quot;&gt;Aseprite&lt;/a&gt; — animated sprite editor &amp;amp; pixel art tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gmattie/Data-Pixels&quot;&gt;Data Pixels&lt;/a&gt; — create pixel art programmatically. Includes DataPixels.js and Data Pixels Playground desktop app. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.drawbang.com/&quot;&gt;Draw!&lt;/a&gt; — open-source and free web-based pixel art and GIF editor. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/GrafX2/grafX2&quot;&gt;Grafx2&lt;/a&gt; — a bitmap paint program inspired by the Amiga programs ​Deluxe Paint and Brilliance. Specialized in 256-color drawing. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graphicsgale.com/us/&quot;&gt;GraphicsGale&lt;/a&gt; — has many pixel-art specific features, including palette control, selectively erasing colors, and tools for quickly replacing and trying new colors. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jackschaedler.github.io/goya/&quot;&gt;Goya&lt;/a&gt; — a pixel-art editor built on ClojureScript and Om. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://make8bitart.com/&quot;&gt;Make 8 bit art&lt;/a&gt; — an open source and in-browser pixel art drawing tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/jennschiffer/make8bitart&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.piskelapp.com/&quot;&gt;Piskel&lt;/a&gt; — online editor for animated sprites &amp;amp; pixel art. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pixelartcss.com/&quot;&gt;Pixel art to CSS&lt;/a&gt; — pixel art animation and drawing web app powered by React. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://app.poxi.rocks/&quot;&gt;Poxi&lt;/a&gt; — a flat pixel art editor. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pyxeledit.com/&quot;&gt;Pyxel Edit&lt;/a&gt; — a pixel art editor designed to make it fun and easy to make tilesets, levels and animations. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Prototyping Tools&lt;/h3&gt; 
&lt;p&gt;A prototype is a simple experimental design of a proposed solution. It should help to test ideas, design assumptions, and hypotheses in a fast and cheap way. Prototyping tools allow designers and clients to see how the product would function in the real world and collaborate on this solution. Many modern prototyping tools can use for wireframing, prototyping, and collaboration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetalva.io/&quot;&gt;Alva&lt;/a&gt; — create living prototypes with code components. It&#39;s also open source. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/meetalva/alva&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axure.com/&quot;&gt;Axure RP&lt;/a&gt; — wireframing, prototyping, collaboration &amp;amp; specifications generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.build.me/&quot;&gt;SAP Build&lt;/a&gt; — a complete set of cloud‑based tools to design and build your enterprise app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creolabs.com/&quot;&gt;Creo&lt;/a&gt; — prototyping, code exporting and built-in mobile app builder. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drama.app/&quot;&gt;Drama&lt;/a&gt; — prototype, animate and design in a single Mac app. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invisionapp.com/&quot;&gt;InVision&lt;/a&gt; — prototyping, collaboration &amp;amp; workflow platform. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flinto.com/&quot;&gt;Flinto&lt;/a&gt; — a Mac app for creating interactive and animated prototypes of app designs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://framer.com/&quot;&gt;Framer X&lt;/a&gt; — a tool to visually design realistic interactive prototypes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.apple.com/keynote/&quot;&gt;Keynote&lt;/a&gt; — the built-in Mac app for creating presentations that can also be used for quick prototyping (see how Apple designers use it in the WWDC 2014 session &quot;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2014/223/&quot;&gt;Prototyping: Fake It Till You Make It&lt;/a&gt;&quot; to verify design concepts). &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lightwell.pro/&quot;&gt;Lightwell&lt;/a&gt; — visual tool and SDK to build mobile layouts and animations that translate into native iOS elements. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marvelapp.com/&quot;&gt;Marvel App&lt;/a&gt; — the collaborative design platform. Wireframe, prototype, design online and create design specs in one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maze.design/&quot;&gt;Maze&lt;/a&gt; — a tool for designers and developers that gives analytical results with actionable KPIs for your Invision prototypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://origami.design/&quot;&gt;Origami&lt;/a&gt; — a free tool for designing modern user interfaces. Quickly put together a prototype, run it on your iPhone or iPad, iterate on it, and export code snippets your engineers can use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pencil.evolus.vn/&quot;&gt;Pencil&lt;/a&gt; — prototyping tool with many built-in components that people can easily install and use to create mockups in popular desktop platforms. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://principleformac.com/&quot;&gt;Principle&lt;/a&gt; — makes it easy to design animated and interactive user interfaces. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.protopie.io/&quot;&gt;ProtoPie&lt;/a&gt; — piece hi-fi interactions together, build sensor-aided prototypes and share your amazing creations in a matter of minutes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://proto.io/&quot;&gt;Proto.io&lt;/a&gt; — a tool to create fully-interactive high-fidelity prototypes that look and work exactly as your app should.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://prottapp.com/&quot;&gt;Prott&lt;/a&gt; — an easy to use and intuitive prototyping tool, promotes team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uizard.io/&quot;&gt;Uizard&lt;/a&gt; — transform wireframes into high-fidelity interactive prototypes, customize style systems, export to Sketch, export to HTML/CSS code. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useberry.com/&quot;&gt;Useberry&lt;/a&gt; — a usability testing tool that allows importing prototypes from InVision, AdodeXD, Sketch, Marvel and getting users’ behavior insights with heatmaps, video recordings, user flows, time bars and answers of follow-up questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uxpin.com/&quot;&gt;UXPin&lt;/a&gt; — build prototypes that feel real, with powers of code components, logic, states, and design systems. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also do prototyping with Figma, Adobe XD, Sketch and InVision Studio, which are mentioned in the &lt;a href=&quot;https://raw.githubusercontent.com/goabstract/Awesome-Design-Tools/master/#ui-design-tools&quot;&gt;UI Design Tools section&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Screenshot Software&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Taking screenshots is a typical task in the design &amp;amp; development workflow. So these free and full-featured screenshot apps can help you capture a screen with ease. Some screen captures are macOS only, while others support both OS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.techsmith.com/video-editor.html&quot;&gt;Camtasia&lt;/a&gt; — a screen recorder that comes with a full-blown built-in editor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcleanshot.com&quot;&gt;CleanShot&lt;/a&gt; — capture your screen in a superior way with a built-in annotation tool and Quick Access Overlay. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getcloudapp.com/&quot;&gt;CloudApp&lt;/a&gt; — record videos, webcam, annotate screenshots, create GIFs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabshot.com/&quot;&gt;Collabshot&lt;/a&gt; — take and collaborate on screenshots in real-time with your coworkers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gifox.io&quot;&gt;Gifox&lt;/a&gt; — delightful GIF recording and sharing app. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://giphy.com/apps/giphycapture&quot;&gt;Giphy Capture&lt;/a&gt; — capture parts of your screen and export as gif or mp4. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getgreenshot.org/&quot;&gt;Greenshot&lt;/a&gt; — take a screenshot of a selected region, window or fullscreen. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getkap.co&quot;&gt;Kap&lt;/a&gt; — open source screen recorder with options to export to GIF, MP4, WebM and APNG. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/wulkano/kap&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/lightshot-screenshot/id526298438&quot;&gt;Lighshot&lt;/a&gt; — taking quick captures of your screen. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/monosnap/id540348655?mt=12&quot;&gt;Monosnap&lt;/a&gt; — create screenshots, annotate and upload them to the cloud. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://obsproject.com/&quot;&gt;OBS&lt;/a&gt; — open source software for video recording and live streaming. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://support.apple.com/quicktime&quot;&gt;Quicktime&lt;/a&gt; — a video player that you can use to record your screen. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.telestream.net/screenflow/overview.htm&quot;&gt;ScreenFlow&lt;/a&gt; — video editing and screen recording software for Mac. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thnkdev.com/Screenie/&quot;&gt;Screenie&lt;/a&gt; — filter and search through images, change screenshot filetypes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://screenshotapi.net&quot;&gt;ScreenshotAPI.net&lt;/a&gt; — create pixel-perfect full page website screenshots. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/web.svg&quot; alt=&quot;web&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.screentogif.com/&quot;&gt;ScreenToGif&lt;/a&gt; — record a gif of part of the screen. Only available for Windows. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;web.svg&quot;&gt; &lt;a href=&quot;https://github.com/wulkano/kap&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getsharex.com/&quot;&gt;ShareX&lt;/a&gt; — screen capture, file sharing, and productivity tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meetshotty.com&quot;&gt;Shotty&lt;/a&gt; — a menu bar app that helps you quickly find the screenshot you&#39;re looking for so you can drag and drop it into any application. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.techsmith.com/screen-capture.html&quot;&gt;Snagit&lt;/a&gt; — capture images and video, create GIFs, annotate, edit, and share.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/help/13776/windows-use-snipping-tool-to-capture-screenshots&quot;&gt;Snipping Tool&lt;/a&gt; — Windows free screenshot tool. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://snappy-app.com/&quot;&gt;Snappy&lt;/a&gt; — takes quick shots and organizes them for you into collections. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teampaper.me/snap/&quot;&gt;Teampaper Snap&lt;/a&gt; — allows you to take screenshots of a selected area. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Sketching Tools&lt;/h3&gt; 
&lt;p&gt;Sometimes you need just a pencil and paper to start creating your app or website. So here are you can find online sketching tools with great sketch sheet templates to speed up your creative process:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zurb.com/playground/responsive-sketchsheets&quot;&gt;Responsive Sketchsheets&lt;/a&gt; — offers responsive pre-design templates. These will automatically adapt their layout to any screen size and include neat features. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sketchsheets.com/&quot;&gt;Sketchsheets&lt;/a&gt; — an open source project dedicated to providing free printable templates of the latest devices and platforms for wireframing designs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;a href=&quot;https://github.com/rnarrkus/sketchsheets&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sneakpeekit.com/&quot;&gt;Sneakpeekit&lt;/a&gt; — print note taking grids and devices frames. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sketchize.com/&quot;&gt;Sketchize&lt;/a&gt; — just choose any of the sketch sheets that fits your project, print it out and start to sketch your dream. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can also do some sketching with Sketch mentioned in &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools#ui-design-tools&quot;&gt;UI design tools&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;SMM Design Tools&lt;/h3&gt; 
&lt;p&gt;Often marketing teams need well-design materials. It can be different banners, promo visuals, favicons, animations or just nice images for social platforms, like Twitter or Instagram. It this section we will keep adding tools for everyone to create marketing designs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.canva.com/&quot;&gt;Canva&lt;/a&gt; — create stunning designs for work, life, and play—even if you&#39;re not a design expert!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crello.com/&quot;&gt;Crello&lt;/a&gt; — create own designs: posts, covers, graphics, and posters using the best software on the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pablo.buffer.com/&quot;&gt;Pablo by Buffer&lt;/a&gt; — design engaging images for your social media posts. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.remove.bg/&quot;&gt;Remove.bg&lt;/a&gt; — a free service to remove the background of any photo. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://socialsizes.io/&quot;&gt;SocialSizes&lt;/a&gt; — provides designers with the best sizes to use for image and video content on social media. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getstencil.com/&quot;&gt;Stencil&lt;/a&gt; — a graphic design tool that is all about creating social media images easily and quickly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Sound Design&lt;/h3&gt; 
&lt;p&gt;Sound design is an art of creating a soundscape for a site, app, movie, game or any other product. The sound has great potential for transforming the way people connect with your product. Some sound design software is very advanced and can be used mostly by sound designers, while others are good for beginners.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appsounds.pro/&quot;&gt;Appsounds&lt;/a&gt; — UI Sound packs for apps, games, and any product.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://audiojungle.net/&quot;&gt;AudioJungle&lt;/a&gt; — 836,206 tracks and sounds from the community of musicians and sound engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bensound.com/&quot;&gt;Bensound&lt;/a&gt; — download creative commons music, royalty free music for free and use it in your project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freesound.org/&quot;&gt;Freesound&lt;/a&gt; — a collaborative database of Creative Commons Licensed sounds. Browse, download and share sounds. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icons8.com/music&quot;&gt;Fugue Music&lt;/a&gt; — download free background music for your videos. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cycling74.com/products/max/&quot;&gt;Max&lt;/a&gt; — connect objects with virtual patch cords to create interactive sounds, graphics, and custom effects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://reaper.fm/&quot;&gt;Reaper&lt;/a&gt; — import any audio and MIDI, synthesize, sample, compose, arrange, edit, mix, and master songs or any other audio projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sonic-pi.net/&quot;&gt;Sonic Pi&lt;/a&gt; — a live coding music synth. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://soundkit.io/&quot;&gt;SoundKit&lt;/a&gt; — a UI sound library designed for all of your interface needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uisounds.prototypr.io/&quot;&gt;UI Sounds&lt;/a&gt; — learn sound design for user interfaces by example.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wistia.com/resources/music&quot;&gt;Wistia Music&lt;/a&gt; — download some free background tracks to add energy and emotion to your videos. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wowa.me/&quot;&gt;WOWA&lt;/a&gt; — download royalty-free music for YouTube videos, podcasts, and apps. No copyright CC0. Music inspired by Unsplash. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/audiolibrary/music&quot;&gt;YouTube Audio Library&lt;/a&gt; — browse and download free music for your project. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Stock Photos Tools&lt;/h3&gt; 
&lt;p&gt;Need a high-quality photo for iOS app or new banner? You can always shoot it yourself or borrow from the stock photo sites. Luckily, there are hundreds of beautiful, free stock photos and royalty-free images that you can use for any project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://burst.shopify.com/&quot;&gt;Burst&lt;/a&gt; — free stock photos for websites and commercial use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duotone.shapefactory.co/&quot;&gt;Duotone&lt;/a&gt; — free duotone images to use in any project, or make custom duotone images. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deathtothestockphoto.com/&quot;&gt;Death to Stock&lt;/a&gt; — paid-for stock photo service with a mailing list for occasional free packs, and a focus on not looking like stock photography.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://foodiesfeed.com/&quot;&gt;FoodiesFeed&lt;/a&gt; — thousands of beautiful realistic free food pictures in high resolution. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freephotos.cc/&quot;&gt;FreePhotos.cc&lt;/a&gt; — free stock photos for commercial use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://freestocks.org/&quot;&gt;Freestocks.org&lt;/a&gt; — high quality photos all released under Creative Commons CC0. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gratisography.com&quot;&gt;Gratisography&lt;/a&gt; — a collection of free high-resolution pictures. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jaymantri.com/&quot;&gt;Jay Mantri&lt;/a&gt; — 7 new photos released every Thursday under the Creative Commons CC0. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kaboompics.com/&quot;&gt;Kaboom Pics&lt;/a&gt; — stock photos including abstract, city/architecture, fashion, food &amp;amp; landscapes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landingstock.com/&quot;&gt;LandingStock&lt;/a&gt; — a collection of free images for your landing page. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lifeofpix.com/&quot;&gt;Life of Pix&lt;/a&gt; — free high-resolution photos, created by the LEEROY team. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lorempixel.com/&quot;&gt;LoremPixel&lt;/a&gt; — an API that serves stock photos at specified sizes and categories. Great for placeholder/user-generated content. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magdeleine.co/&quot;&gt;Magdeleine&lt;/a&gt; — free high-quality stock photos for your inspiration. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photos.icons8.com/&quot;&gt;Moose&lt;/a&gt; — don&#39;t search for stock photos, create them. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mmtstock.com/&quot;&gt;MMT STock&lt;/a&gt; — high-resolution photos provided by Jeffrey Betts with Creative Commons CC0. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nos.twnsnd.co/&quot;&gt;New Old Stock&lt;/a&gt; — a vintage photos from the public archives free of known copyright restrictions. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pexels.com/&quot;&gt;Pexels&lt;/a&gt; — an aggregate of many free stock photo resources. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photos.icons8.com/creator&quot;&gt;Photo Creator&lt;/a&gt; — a free tool for creating realistic stock photos on your demand. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://picography.co/&quot;&gt;Picography&lt;/a&gt; — free stock photos by Dave Meier and various other photographers with Creative Commons CC0. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixabay.com/&quot;&gt;Pixabay&lt;/a&gt; — sharing photos, illustrations, vector graphics, and film footage under a proprietary license. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://picjumbo.com/&quot;&gt;Picjumbo&lt;/a&gt; — a collection of totally free photos for your commercial &amp;amp; personal works. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pngtree.com/&quot;&gt;Pngtree&lt;/a&gt; — millions of PNG images, backgrounds and vectors for free download. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pxhere.com/&quot;&gt;pxhere&lt;/a&gt; — free image stock. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reshot.com/&quot;&gt;Reshot&lt;/a&gt; — a massive library of handpicked free stock photos you won’t find elsewhere. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shotstash.com/&quot;&gt;ShotStash&lt;/a&gt; — thousands of free high-resolution CC0 photos and videos. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skitterphoto.com/&quot;&gt;SkitterPhoto&lt;/a&gt; — a wide variety of stock photos and are released under Creative Commons CC0. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startupstockphotos.com/&quot;&gt;Startup Stock Photos&lt;/a&gt; — free photos for startups, bloggers and publishers. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stocksnap.io/&quot;&gt;StockSnap.io&lt;/a&gt; — a large selection of free stock photos and high-resolution images. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://styledstock.co/&quot;&gt;StyledStock&lt;/a&gt; — free feminine stock photography for every woman entrepreneur. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://broadlygenderphotos.vice.com/&quot;&gt;The Gender Spectrum Collection&lt;/a&gt; — a stock photo library featuring images of trans and non-binary models that go beyond the clichés. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uifaces.co/&quot;&gt;UI Faces&lt;/a&gt; — an aggregator that indexes various free avatar sources that you can use in your design mockups. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unsplash.com&quot;&gt;Unsplash&lt;/a&gt; — stock photos free to use. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/photos/wocintechchat&quot;&gt;#WOCinTech Chat Photos&lt;/a&gt; — free stock photos of women technologists of diverse backgrounds. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.zoommyapp.com&quot;&gt;Zoommy&lt;/a&gt; — helps you find awesome free stock photos for your creative product or inspiration. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Stock Videos&lt;/h3&gt; 
&lt;p&gt;If you work with video-content, you will enjoy these high-quality, hand-curated stock videos. You&#39;ll find many good and free stock video sites below, which you can use on your website, in your ad campaigns or social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coverr.co/&quot;&gt;Coverr&lt;/a&gt; — beautiful, free stock video footage for your homepage. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lifeofvids.com/&quot;&gt;Life of Vids&lt;/a&gt; — provides free stock videos, clips, and loops. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mazwai.com&quot;&gt;Mazwai&lt;/a&gt; — great collection of free creative commons HD video clips &amp;amp; footages. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixkit.co/&quot;&gt;Mixkit&lt;/a&gt; — extraordinary Free HD videos. For you to use, completely free of charge. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.motionplaces.com/&quot;&gt;Motion Places&lt;/a&gt; — a curated collection of beautiful footage you can use for your projects. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixabay.com/&quot;&gt;Pixabay&lt;/a&gt; — it has more than 1.5 million royalty-free stock videos and photos shared by their community of creators. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pexels.com/videos/&quot;&gt;Pexels Videos&lt;/a&gt; — makes it easy to find free stock footage for your website, promo video or anything else. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.videezy.com/&quot;&gt;Videezy&lt;/a&gt; — download millions of free and premium stock footage and motion graphics instantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.videvo.net/&quot;&gt;Videvo&lt;/a&gt; — offers a large selection of HD video clips, motion graphics, and free stock footage. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.123rf.com/&quot;&gt;123RF&lt;/a&gt; — over 100,000 daily new content &amp;amp; 24/7 online support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Tools for Learning Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.designbetter.co/&quot;&gt;Design Better&lt;/a&gt; — discover the best practices, stories, and insights from the world’s top design teams and leaders. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://designcode.io/&quot;&gt;Design+Code&lt;/a&gt; — complete courses about the best tools and design systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://designerup.co/&quot;&gt;DesignerUp&lt;/a&gt; — a collection of self-paced courses and mentorship to help you master Product Design (UI/UX).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.figmatraining.com&quot;&gt;Figma Training&lt;/a&gt; — a crash course all about Figma, for UI designers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.interaction-design.org/&quot;&gt;Interaction Design Foundation&lt;/a&gt; — a website that is the industry well known for learning UX/UI skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lawsofux.com/&quot;&gt;Laws of UX&lt;/a&gt; — a collection of the maxims and principles that designers can consider when building user interfaces. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learnux.io/&quot;&gt;Learn UX&lt;/a&gt; — a complete approach to learning UI &amp;amp; UX Tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sketchmaster.com/&quot;&gt;Sketch Master&lt;/a&gt; — a collection of video training courses for professionals learning Sketch. 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;UI Design Tools&lt;/h3&gt; 
&lt;p&gt;What are the best UI design tools in 2019? You can pick any of the tools below and it will allow you to do dozens of design tasks — UI for site or mobile, wireframe, prototype, animation, logo. These are great and fully-functional tools for UX &amp;amp; UI designers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adobe.com/products/xd.html&quot;&gt;Adobe XD&lt;/a&gt; — design, prototype, and share any user experience, from websites and mobile apps to voice interactions. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://affinity.serif.com/en-gb/designer/&quot;&gt;Affinity Designer&lt;/a&gt; — a vector graphics editor for macOS, iOS, and Microsoft Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akiraux/Akira&quot;&gt;Akira&lt;/a&gt; — native Linux App for UI and UX Design built in Vala and Gtk. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.botmock.com&quot;&gt;Botmock&lt;/a&gt; — design, prototype, and test voice and text conversational apps. Supports multiple platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cleverbrush.com/&quot;&gt;CleverBrush&lt;/a&gt; — a browser-based online vector editor and digital publishing tool which is possible to integrate to the page as JS component.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.figma.com/&quot;&gt;Figma&lt;/a&gt; — a design tool based in the browser, that allows to design and prototype with real-time collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gimp.org/&quot;&gt;GIMP&lt;/a&gt; — a free &amp;amp; open-source imaging and graphic design software. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://designer.io/&quot;&gt;Gravit&lt;/a&gt; — a free vector design app, available for macOS, Windows, Linux, ChromeOS, and browser. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adobe.com/products/illustrator.html&quot;&gt;Illustrator&lt;/a&gt; — create logos, icons, drawings, typography, and illustrations for print, web, video, and mobile. Made by Adobe.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; — a free and open-source vector graphics editor. It can create or edit vector graphics such as illustrations, diagrams, line arts, charts, logos, and complex paintings. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://krita.org/en/&quot;&gt;Krita&lt;/a&gt; — a free painting and graphic design software considered a good alternative to Adobe Photoshop. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icons8.com/lunacy&quot;&gt;Lunacy&lt;/a&gt; — a free native windows app that works offline and supports .sketch files. Flexible and light weighed. Intuitive and easy to use. Speedups and empowers UI and UX designers. The must have to produce stunning designs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.photopea.com/&quot;&gt;Photopea&lt;/a&gt; — a free browser-based graphic design app alternative to Photoshop. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adobe.com/products/photoshop.html&quot;&gt;Photoshop&lt;/a&gt; — imaging and graphic design software developed by Adobe.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://studio.pixelixe.com&quot;&gt;Pixelixe&lt;/a&gt; — a graphic design tool built for marketers, bloggers and small businesses that needs to create stunning and unique images, graphics or static webpages in minutes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sketchapp.com/&quot;&gt;Sketch&lt;/a&gt; — a design toolkit built for Mac. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invisionapp.com/studio&quot;&gt;Studio&lt;/a&gt; — combines design, prototyping, and collaboration into one harmonious workflow. Made by InVision.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitpile.com&quot;&gt;TwitPile&lt;/a&gt; — creates tiled images out of Twitter followers, interests and lists. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vectr.com/&quot;&gt;Vectr&lt;/a&gt; — a simple web and desktop cross-platform tool to create vector graphics easily and intuitively. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.voiceflow.com&quot;&gt;Voiceflow&lt;/a&gt; — prototype, design and deploy real apps for Amazon Alexa &amp;amp; Google Home.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;User Flow Tools&lt;/h3&gt; 
&lt;p&gt;User flow is a series of steps a user takes to achieve a meaningful goal. It&#39;s a fast way to plan customer journey paths and improve UX. So if you need to make a user flow diagram, user flow map or a sitemap, take a look at these tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.draw.io/&quot;&gt;Draw.io&lt;/a&gt; — a free online diagram software for making flowcharts, process diagrams, org charts, UML, ER, and network diagrams. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowmapp.com/&quot;&gt;Flowmapp&lt;/a&gt; — an online tool for creating sitemaps and user flows that helps you to effectively design and plan user experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/drawings/&quot;&gt;Google Drawings&lt;/a&gt; — create diagrams and charts, for free; all within Google Docs. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lucidchart.com/&quot;&gt;Lucidchart&lt;/a&gt; — an online tool for creating diagrams, flow charts, sitemaps, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mindnode.com/&quot;&gt;MindNode&lt;/a&gt; — a mind mapping app that makes brainstorming simple and easy. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ninjamock.com/&quot;&gt;NinjaMock&lt;/a&gt; — wireframe and user flow online tool. Link your views and create logic flow prototype. All with freehand visual style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omnigroup.com/omnigraffle/&quot;&gt;OmniGraffle&lt;/a&gt; — a diagramming and digital illustration application for macOS and iOS. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://overflow.io/&quot;&gt;Overflow&lt;/a&gt; — turn your designs into playable user flow diagrams that tell a story.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sketch.systems/&quot;&gt;Sketch.systems&lt;/a&gt; — ui and flow design with interactive state machines. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uxmisfit.com/squid/&quot;&gt;SQUID&lt;/a&gt; — create beautiful User Flows in Sketch in just minutes. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.websequencediagrams.com/&quot;&gt;WebSequenceDiagrams&lt;/a&gt; — a simple webapp to work out object interactions arranged in time sequence. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://whimsical.co/&quot;&gt;Whimsical&lt;/a&gt; — easy to create flow charts, wireframes and sticky notes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wireflow.co&quot;&gt;Wireflow&lt;/a&gt; — free, online and open source tool for creating beautiful user flow prototypes. &lt;a href=&quot;https://github.com/vanila-io/wireflow&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xmind.net/zen/&quot;&gt;XMind: ZEN&lt;/a&gt; — a brainstorming and mind mapping tool that can switch between outline and tree-chart. Link topics with other charts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yworks.com/products/yed&quot;&gt;yEd&lt;/a&gt; — free desktop tool for making diagrams. Usable for the wide variety of use cases. Auto-layout helps a lot when making flowcharts. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;User Research Tools&lt;/h3&gt; 
&lt;p&gt;User research helps you understand user behaviors, needs, and motivations through various qualitative and quantitative methods (interviews, observation, forms, etc). These user research tools can be useful for you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appoint.ly&quot;&gt;Appoint.ly&lt;/a&gt; — a web-based scheduling tool that helps to schedule meetings quickly through the integration with calendars online.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calendly.com/&quot;&gt;Calendly&lt;/a&gt; — Calendly helps you schedule meetings without the back-and-forth emails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdsignal.com/&quot;&gt;Crowd Signal&lt;/a&gt; — collect, organize and analyze data from a variety of sources, including social media and mobile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doodle.com/&quot;&gt;Doodle&lt;/a&gt; — online calendar tool for time management, and coordinating events, meetings, appointments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://evolt.io/en/&quot;&gt;Evolt&lt;/a&gt; — create user personas, storyboards, business model canvas, experience maps, brainstorming boards and moodboards in a clean and modern way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.feedbacklite.com/&quot;&gt;Feedback Lite&lt;/a&gt; — collect high quality customer feedback using Voice of Customer solutions designed to improve your website performance and boost customer engagement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gotomeeting.com/en-gb&quot;&gt;GoToMeeting&lt;/a&gt; — a simple, extraordinarily powerful web conferencing service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handrailux.com/&quot;&gt;Handrail&lt;/a&gt; — end-to-end, collaborative user research and insights platform — plan research, collect and analyze data, and share your findings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jotform.com&quot;&gt;JotForm&lt;/a&gt; — create online forms, get an email for each response, collect data. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lookback.io/&quot;&gt;Lookback&lt;/a&gt; — remotely run, record, and take notes for your user research sessions, either with a live product or with a prototype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://minetime.ai&quot;&gt;MineTime&lt;/a&gt; — a free calendar app with smart scheduling and time analytics features. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.airsquirrels.com/reflector&quot;&gt;Reflector&lt;/a&gt; — Reflector is a basic screen-mirroring and recording tool so you can conduct user tests remotely, using any existing wireframes or prototypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.optimalworkshop.com/reframer&quot;&gt;Reframer&lt;/a&gt; — a research tool that helps your team to capture, tag (code) and identify patterns in qualitative data across multiple research participants.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sticktailapp.com/&quot;&gt;Sticktail&lt;/a&gt; — a platform for centralizing, finding and sharing user insights within your organization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.surveymonkey.com/&quot;&gt;Survey Monkey&lt;/a&gt; — online survey tool to capture the voices and opinions of the people who matter most to you.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typeform.com/&quot;&gt;Typeform&lt;/a&gt; — use a simple drag-and-drop interface to create any kind of form, survey, or questionnaire, and even take credit card payments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wufoo.com&quot;&gt;Wufoo&lt;/a&gt; — сreate forms, collect data and payments and automate your workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yesinsights.com/&quot;&gt;YesInsights&lt;/a&gt; — simple one question and NPS surveys to improve your business.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://userbitapp.com/&quot;&gt;UserBit&lt;/a&gt; — a platform of real-time research tools for your team. Tag/code interviews and feedback, capture insights, create personas, visual sitemaps and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.userinterviews.com/&quot;&gt;User Interviews&lt;/a&gt; — recruit participants from a community of 125,000 members based on profession, demographics, geography and more, for any kind of research.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zoom.us&quot;&gt;Zoom&lt;/a&gt; — it&#39;s one of the best online meeting services.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Visual Debugging Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logrocket.com/&quot;&gt;LogRocket&lt;/a&gt; — a tool to record what users do on your site so you can reproduce bugs and fix issues faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getpixelsnap.com&quot;&gt;PixelSnap&lt;/a&gt; — the magical way to measure everything on your screen. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/mac.svg&quot; alt=&quot;mac.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/ProjectVisBug&quot;&gt;VisBug&lt;/a&gt; — on any webpage: visually debug, quick inspect style and a11y, change CSS visually, click and drag elements around, and much more. &lt;a href=&quot;https://github.com/GoogleChromeLabs/ProjectVisBug&quot;&gt;&lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.canvasflip.com/visual-inspector/&quot;&gt;Visual Inspector&lt;/a&gt; — collaboration tool for website feedback and fixing design bugs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Wireframing Tools&lt;/h3&gt; 
&lt;p&gt;A wireframe is a visual mockup that outlines the basic structure of the site or an app. It contains the most essential elements and the content, helping you easily explain ideas on design. Wireframes are a low-fidelity way of showing a design. This section is presented the best wireframing tools for a variety of use cases.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://balsamiq.cloud/&quot;&gt;Balsamiq Cloud&lt;/a&gt; — effortless UI sketching. Capture your ideas, collaborate on your designs, get everyone on board.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.blokkfont.com/&quot;&gt;BLOKK&lt;/a&gt; — a font for quick mock-ups and wireframing for clients who do not understand Latin. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cssgrid.cc/css-grid-builder.html&quot;&gt;CSS Grid Builder&lt;/a&gt; — with this tool there is no HTML part to the grid. The grid only becomes apparent when content (elements) are added and positioned according to the grid rules. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gliffy.com/&quot;&gt;Gliffy&lt;/a&gt; — a tool for creating the framework, UML diagrams, flowcharts, wireframes and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gridzzly.com/&quot;&gt;Gridzzly&lt;/a&gt; — the easiest way to create custom grid paper printable. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grid.layoutit.com/&quot;&gt;Layoutit&lt;/a&gt; — a interface builder for CSS Grid &amp;amp; Bootstrap that wants to be the kick-off for your front-end developments. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pidoco.com/en&quot;&gt;Pidoco&lt;/a&gt; — software that lets you quickly create click-through wireframes and fully interactive UX prototypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wireframe.cc/&quot;&gt;Wireframe.cc&lt;/a&gt; — a simple wireframing tool that doesn&#39;t get in your way. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://whimsical.co/wireframes/&quot;&gt;Whimsical Wireframes&lt;/a&gt; — instant wireframing at your fingertips. Rich library of configurable elements like buttons, inputs, checkboxes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://1200px.com/&quot;&gt;1200px Grid System&lt;/a&gt; — helps you build a grid system for much wider website designs than the 960-pixel style.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Three D Modeling Software&lt;/h3&gt; 
&lt;p&gt;3D graphics are used in gaming, film making, architecture, engineering, and 3D printing. 3D artists &amp;amp; designers use specific 3D modeling software, mentioned in this section.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.autodesk.com/products/fusion-360/overview&quot;&gt;Autodesk&lt;/a&gt; — integrated CAD, CAM, and CAE software. Unify design, engineering, and manufacturing into a single platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.blender.org/&quot;&gt;Blender&lt;/a&gt; — free and open-source 3D Creation Software. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecadweb.org/&quot;&gt;FreeCAD&lt;/a&gt; — a free and open-source multiplatform 3D parametric modeler. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.matterhackers.com/store/l/mattercontrol/sk/MKZGTDW6&quot;&gt;MatterControl&lt;/a&gt; — a free, open-source, all-in-one software package that lets you design, slice, organize and manage your 3D prints. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt; &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.autodesk.com/products/maya/overview&quot;&gt;Maya&lt;/a&gt; — make animations, environments, motion graphics, virtual reality, and character creation, all in one toolset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.onshape.com/&quot;&gt;Onshape&lt;/a&gt; — a modeling software specially oriented to design technical and spare parts, was the first full-cloud 3D software created.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openscad.org/&quot;&gt;OpenSCAD&lt;/a&gt; — a software for creating solid 3D CAD objects. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/open-source.svg&quot; alt=&quot;open-source.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rhino3d.com/&quot;&gt;Rhino&lt;/a&gt; — a curve-based 3D modeling software that creates mathematically-precise models of 3D surfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sketchup.com&quot;&gt;SketchUp&lt;/a&gt; — 3D design software that truly makes 3D modeling for everyone, with a simple to learn yet robust toolset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tinkercad.com&quot;&gt;Tinkercad&lt;/a&gt; — a free, easy-to-use app for 3D design, electronics, and coding. &lt;img src=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Media/free.svg&quot; alt=&quot;free.svg&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vectary.com/&quot;&gt;Vectary&lt;/a&gt; — create beautiful 3D models with our drag and drop 3D modeling tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.3dslash.net&quot;&gt;3D Slash&lt;/a&gt; — 3D modeling tool, available on all devices and all OS, online and offline.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Addendum (Reference &amp;amp; Inspiration)&lt;/h3&gt; 
&lt;p&gt;Awesome Design Tools &amp;amp; Plugins is curated by &lt;a href=&quot;https://twitter.com/LisaDziuba&quot;&gt;Lisa Dziuba&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://twitter.com/ValiaHavryliuk&quot;&gt;Valia Havruliyk&lt;/a&gt; from Flawless team. And it was hugely inspired by articles from the design community and Prototypr.io Toolbox made by our good friend Graeme Fulton. If you found some great design tools, please &lt;a href=&quot;https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Contribution_Guidelines.md&quot;&gt;suggest it&lt;/a&gt;. Thanks for making this project awesome :)&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>frzyc/genshin-optimizer</title>
      <link>https://github.com/frzyc/genshin-optimizer</link>
      <description>&lt;p&gt;An Artifact optimizer for Genshin Impact.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Getting Started with Create React App&lt;/h1&gt; 
&lt;p&gt;This project was bootstrapped with &lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Available Scripts&lt;/h2&gt; 
&lt;p&gt;In the project directory, you can run:&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the app in the development mode.&lt;br&gt; Open &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; 
&lt;p&gt;The page will reload if you make edits.&lt;br&gt; You will also see any lint errors in the console.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Launches the test runner in the interactive watch mode.&lt;br&gt; See the section about &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/running-tests&quot;&gt;running tests&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.&lt;br&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; 
&lt;p&gt;The build is minified and the filenames include the hashes.&lt;br&gt; Your app is ready to be deployed!&lt;/p&gt; 
&lt;p&gt;See the section about &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/deployment&quot;&gt;deployment&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run eject&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note: this is a one-way operation. Once you &lt;code&gt;eject&lt;/code&gt;, you can’t go back!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you aren’t satisfied with the build tool and configuration choices, you can &lt;code&gt;eject&lt;/code&gt; at any time. This command will remove the single build dependency from your project.&lt;/p&gt; 
&lt;p&gt;Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except &lt;code&gt;eject&lt;/code&gt; will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.&lt;/p&gt; 
&lt;p&gt;You don’t have to ever use &lt;code&gt;eject&lt;/code&gt;. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;You can learn more in the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/getting-started&quot;&gt;Create React App documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn React, check out the &lt;a href=&quot;https://reactjs.org/&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code Splitting&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/code-splitting&quot;&gt;https://facebook.github.io/create-react-app/docs/code-splitting&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Analyzing the Bundle Size&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size&quot;&gt;https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Making a Progressive Web App&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&quot;&gt;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Advanced Configuration&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/advanced-configuration&quot;&gt;https://facebook.github.io/create-react-app/docs/advanced-configuration&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/deployment&quot;&gt;https://facebook.github.io/create-react-app/docs/deployment&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; fails to minify&lt;/h3&gt; 
&lt;p&gt;This section has moved here: &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify&quot;&gt;https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_chat_application</title>
      <link>https://github.com/adrianhajdin/project_chat_application</link>
      <description>&lt;p&gt;This is a code repository for the corresponding YouTube video. In this tutorial we are going to build and deploy a real time chat application. Covered topics: React.js, Node.js, Express.js, and Socket.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Realtime Chat Application&lt;/h1&gt; 
&lt;h3&gt;&lt;a href=&quot;https://realtime-chat-application.netlify.com&quot;&gt;Live Site&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ytimg.com/vi/ZwFA3YMfkoc/maxresdefault.jpg&quot; alt=&quot;Chat Application&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial.&lt;/p&gt; 
&lt;p&gt;In this video, we will create a full Realtime Chat Application. We&#39;re going to use React on the front end, with NodeJS + Socket.io web socket library on the back end.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will have a strong understanding of how to send and receive messages using web sockets and Socket.io to make any real-time application.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the development server&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Command line interface&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Imperative&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Functional&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;PHP&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Python&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Javascript&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Basics&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Frameworks&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;SQL&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;NoSQL&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Development&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Infrastructure&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Materials to help you rock your next coding interview&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Carefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;&quot;Front-end Job Interview Questions&quot; answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists. You can also use the SFW version of the playlist &lt;code&gt;https://iptv-org.github.io/iptv/index.sfw.m3u&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h3&gt;By category&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;By language&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;By country&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue. However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;A monorepo for SvelteKit and friends&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;We&#39;re getting ready to open up the SvelteKit public beta, which means that things will be in a stable enough state to start experimenting, and documentation will be available. Right now, even though &lt;a href=&quot;https://www.reddit.com/r/sveltejs/comments/m337r7/sveltekit_repository_is_now_public_on_github/gqmvj9k&quot;&gt;this repo is open&lt;/a&gt;, there are still some known issues to resolve and there are aspects of the design that &lt;em&gt;will&lt;/em&gt; change over the next few days. We&#39;re close. Please bear with us!&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;@sveltejs/kit&lt;/h1&gt; 
&lt;p&gt;Everything you need to build a Svelte app.&lt;/p&gt; 
&lt;p&gt;To get started, run &lt;code&gt;npm init svelte@next&lt;/code&gt; — this will fetch and run the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte&quot;&gt;&lt;code&gt;create-svelte&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;This monorepo uses &lt;a href=&quot;https://pnpm.js.org/en/&quot;&gt;pnpm&lt;/a&gt;. Install it...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...then install this repo&#39;s dependencies...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...then build SvelteKit and the other packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm -r build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be able to run the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/examples&quot;&gt;examples&lt;/a&gt; by navigating to one of the directories and doing &lt;code&gt;pnpm dev&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; inside the &lt;code&gt;packages/kit&lt;/code&gt; directory to continually rebuild &lt;code&gt;@sveltejs/kit&lt;/code&gt; as you make changes to SvelteKit. Restarting the example/test apps will cause the newly built version to be used.&lt;/p&gt; 
&lt;h3&gt;Changelogs&lt;/h3&gt; 
&lt;p&gt;For changes to be reflected in package changelogs, run &lt;code&gt;pnpx changeset&lt;/code&gt; and follow the prompts.&lt;/p&gt; 
&lt;h3&gt;Releases&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/changesets/action#with-publishing&quot;&gt;Changesets GitHub action&lt;/a&gt; will create and update a PR that applies changesets and publishes new versions of changed packages to npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It uses &lt;code&gt;pnpm publish&lt;/code&gt; rather than &lt;code&gt;pnpx changeset publish&lt;/code&gt; so that we can use the &lt;code&gt;--filter&lt;/code&gt; and (while in beta) &lt;code&gt;--tag&lt;/code&gt; flags — though perhaps they work with &lt;code&gt;pnpx changeset publish&lt;/code&gt;?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;New packages will need to be published manually the first time if they are scoped to the &lt;code&gt;@sveltejs&lt;/code&gt; organisation, by running this from the package directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm publish --access=public
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm test&lt;/code&gt; to run the tests from all subpackages. Browser tests live in subdirectories of &lt;code&gt;packages/kit/test&lt;/code&gt; such as &lt;code&gt;packages/kit/test/apps/basics&lt;/code&gt;. To run a single test, open up the file and change &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test.only&lt;/code&gt; for the relevant test.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://nextjs.org/learn
 &lt;!-- raw HTML omitted --&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>r3curs1v3-pr0xy/vajra</title>
      <link>https://github.com/r3curs1v3-pr0xy/vajra</link>
      <description>&lt;p&gt;Vajra is a highly customizable target and scope based automated web hacking framework to automate boring recon tasks and same scans for multiple target during web applications penetration testing.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/logo.png&quot; alt=&quot;logo&quot;&gt;
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://img.shields.io/github/stars/r3curs1v3-pr0xy/vajra?style=flat&quot; alt=&quot;Stars&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/NPM-v6.14-blue?style=flat&quot; alt=&quot;NPM Version&quot;&gt; &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPLv3-blue.svg&quot; alt=&quot;License: GPL v3&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174&quot; alt=&quot;contribution&quot;&gt; &lt;a href=&quot;https://pypi.python.org/pypi/yt2mp3/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/yt2mp3.svg&quot; alt=&quot;PyPi Python Versions&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://camo.githubusercontent.com/80760ab9f96d5aae23525bf95b1fddf638860c80f80100a963ae61bb80ec4dc6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64656d6f2d796f75747562652d626c75652e737667&quot; alt=&quot;Demo Youtube&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;An automated web hacking framework for web applications&lt;/p&gt; 
&lt;h2&gt;Table of Content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#about-vajra&quot;&gt;About Vajra&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#what-is-vajra&quot;&gt;What is Vajra&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#key-features&quot;&gt;Key Feaures&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#what-vajra-does&quot;&gt;What Vajra does&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#tools-used-by-vajra&quot;&gt;Tools Used by Vajra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#Future-PlansUnder-Development&quot;&gt;Future Plans/Under Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Detailed insight about Vajra can be found at&lt;/h4&gt; 
&lt;p&gt;https://hackwithproxy.medium.com/introducing-vajra-an-advanced-web-hacking-framework-bd8307a01aa8 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;About Vajra&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/home.png&quot; alt=&quot;logo&quot;&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Vajra is an automated web hacking framework to automate boring recon tasks and same scans for multiple target during web applications penetration testing. Vajra has highly customizable target scope based scan feature. Instead of running all the scan on target, it runs only those scan selected by you which will minimize unnecessary traffic and stores output in one place at CouchDB.&lt;/p&gt; 
&lt;p&gt;Vajra uses most common open source tools which every Bug Hunter runs during their testing on target. It does all the stuffs through web browser with very simple UI that makes it absolute beginner friendly framework.&lt;/p&gt; 
&lt;p&gt;Analyzing your data from scan result is very important in Bug Bounty. The chances of missing anything is less only if you could visualize your data in proper way and Vajra does so with a lot of filters.&lt;/p&gt; 
&lt;p&gt;I created this project for my personal use (about 6 months ago) but looking at its usefulness, I decided to make it open-source so that it can save your time and can get some more improvement from community.&lt;/p&gt; 
&lt;h4&gt;Currently, I added only 27 unique bug bounty feature to it but more will be added in near future.&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Visit this URL for Demo:&lt;/strong&gt; https://hackwithproxy.tech/login&lt;/p&gt; 
&lt;p&gt;None of the scan will work in demo website. Username: root password: toor&lt;/p&gt; 
&lt;h1&gt;Demo&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=WLurj5Lg8cI&quot;&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/demo.png&quot; alt=&quot;Demo Video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Highly target specific scan&lt;/li&gt; 
 &lt;li&gt;Run multiple scans in parallel&lt;/li&gt; 
 &lt;li&gt;Highly customizable scan based on user requirements&lt;/li&gt; 
 &lt;li&gt;Absolute beginner friendly Web UI&lt;/li&gt; 
 &lt;li&gt;Fast (as it is Asynchronous)&lt;/li&gt; 
 &lt;li&gt;Export result in CSV or directly copy to clipboard&lt;/li&gt; 
 &lt;li&gt;Telegram Notification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What Vajra does&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Subdomain Scan with IP, Status Code and Title.&lt;/li&gt; 
 &lt;li&gt;[x] Subdomain Takeover Scan&lt;/li&gt; 
 &lt;li&gt;[x] Port Scan&lt;/li&gt; 
 &lt;li&gt;[x] Endpoints Discovery&lt;/li&gt; 
 &lt;li&gt;[x] Endpoints with Parameter Discovery&lt;/li&gt; 
 &lt;li&gt;[x] 24/7 Monitor Subdomains&lt;/li&gt; 
 &lt;li&gt;[x] 24/7 Monitor JavaScript&lt;/li&gt; 
 &lt;li&gt;[x] Templates Scan using Nuclei&lt;/li&gt; 
 &lt;li&gt;[x] Fuzz endpoints to find hidden endpoints or critical files (e.g .env)&lt;/li&gt; 
 &lt;li&gt;[x] Extract JavaScripts&lt;/li&gt; 
 &lt;li&gt;[x] Fuzz with Custom Generated wordlist&lt;/li&gt; 
 &lt;li&gt;[x] Extracts Secrets (e.g api keys, hidden javascripts endpoints)&lt;/li&gt; 
 &lt;li&gt;[x] Checks for Broken Links&lt;/li&gt; 
 &lt;li&gt;[x] Filter Endpoints based on extensions&lt;/li&gt; 
 &lt;li&gt;[x] Favicon Hash&lt;/li&gt; 
 &lt;li&gt;[x] Github Dorks&lt;/li&gt; 
 &lt;li&gt;[x] CORS Scan&lt;/li&gt; 
 &lt;li&gt;[x] CRLF Scan&lt;/li&gt; 
 &lt;li&gt;[x] 403 Bypasser&lt;/li&gt; 
 &lt;li&gt;[x] Find Hidden Parameters&lt;/li&gt; 
 &lt;li&gt;[x] Google Hacking&lt;/li&gt; 
 &lt;li&gt;[x] Shodan Search Queries&lt;/li&gt; 
 &lt;li&gt;[x] Extract Hidden Endpoints from JavaScript&lt;/li&gt; 
 &lt;li&gt;[x] Create target based Custom Wordlist&lt;/li&gt; 
 &lt;li&gt;[x] Vulnerability Scan&lt;/li&gt; 
 &lt;li&gt;[x] CVE Scan&lt;/li&gt; 
 &lt;li&gt;[x] CouchDB to store all scan output&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Total Scans&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/scan.png&quot; alt=&quot;scans&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;Result of Scan&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/scanned%20%20result.png&quot; alt=&quot;result&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;Found Subdomains&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/subdomains.png&quot; alt=&quot;subdomains&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;Subdomain Monitoring&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/images/monitoring.png&quot; alt=&quot;subdomain monitor&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;All the installation instructions are available at wiki page. Find the wiki documentation here:&lt;/p&gt; 
&lt;p&gt;https://github.com/r3curs1v3-pr0xy/vajra/wiki/Installation&lt;/p&gt; 
&lt;h2&gt;Tools used by Vajra&lt;/h2&gt; 
&lt;p&gt;All the tools used by Vajra are listed here: &lt;a href=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/CREDITS.md&quot;&gt;Link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for your consideration for making your valuable contributions to Vajra! Start by taking a look at the below mentioned points&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fix any issues/bugs&lt;/li&gt; 
 &lt;li&gt;Solve opened issues&lt;/li&gt; 
 &lt;li&gt;Clean code&lt;/li&gt; 
 &lt;li&gt;Add any new features&lt;/li&gt; 
 &lt;li&gt;Works on &lt;a href=&quot;https://raw.githubusercontent.com/r3curs1v3-pr0xy/vajra/main/#Future-PlansUnder-Development&quot;&gt;Future Plans/Under Developement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support this project by sponsoring/donating&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Financial Contributors:&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/0xdeviner&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61959752?s=60&amp;amp;u=602bba1cc388927a89539410acbd913ff1862e12&amp;amp;v=4&quot; alt=&quot;Deviner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Code Contributors:&lt;/h4&gt; 
&lt;h4&gt;If you have some new idea about this project, issue, feedback or found some valuable tool feel free to open an issue or just DM me via &lt;a href=&quot;https://twitter.com/r3curs1v3_pr0xy&quot;&gt;@r3curs1v3_pr0xy&lt;/a&gt;&lt;/h4&gt; 
&lt;h2&gt;If you like Vajra and wants to support&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/r3curs1v3pr0xy&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c3f856bacd5b09669157ed4774f80fb9d8622dd45ce8fdf2990d3552db99bd27/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67&quot; alt=&quot;cofee&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Paypal: https://www.paypal.me/r3curs1v3pr0xy
 &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; 
&lt;h4&gt;Bitcoin: 3EB5AsRrzSjMXnPDwSuxnyW1cc2APSHEWr&lt;/h4&gt; 
&lt;h4&gt;10% of total donation will go to &lt;a href=&quot;https://www.animalaidunlimited.org/&quot;&gt;Animal Aid Unilimited&lt;/a&gt;.&lt;/h4&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;It is distributed under the GNU GPL v3 license License. See &lt;a href=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Future Plans/Under Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add feature to upload wordlist for bruteforcing&lt;/li&gt; 
 &lt;li&gt;Add slack/discord notification&lt;/li&gt; 
 &lt;li&gt;Improve Result UI&lt;/li&gt; 
 &lt;li&gt;Add server console through web interface&lt;/li&gt; 
 &lt;li&gt;Schedule Scan&lt;/li&gt; 
 &lt;li&gt;Take Notes in web UI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Please take a look at &lt;a href=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/CREDITS.md&quot;&gt;CREDITS.md&lt;/a&gt;. Thanks to &lt;a href=&quot;https://twitter.com/maniac_en&quot;&gt;@maniac_en&lt;/a&gt; for helping with version control and repo management.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Most of these tools have been developed by the authors of the tool that has been listed in &lt;a href=&quot;https://github.com/r3curs1v3-pr0xy/vajra/blob/main/CREDITS.md&quot;&gt;CREDITS.md&lt;/a&gt;. I just put all the pieces together, plus some extra magic.&lt;/p&gt; 
&lt;p&gt;This tool is for educational purposes only. You are responsible for your own actions. If you mess something up or break any laws while using this software, it&#39;s your fault, and your fault only.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;What is the accuracy of this framework?
   &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;=&amp;gt; Vajra uses only open source tools and scripts so its accuracy depends upon those tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;What is scalability of this framework?
   &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;=&amp;gt; It depends upon the resources you provide to run it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Does it gives immediate result?
   &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;-=&amp;gt; Although Vajra uses asynchronous methods but still it takes some time to complete all the scan. You can see your running scans through ongoing scan tab&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>laurent22/joplin</title>
      <link>https://github.com/laurent22/joplin</link>
      <description>&lt;p&gt;Joplin - an open source note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=E8JMYD2LQ8MMA&amp;amp;lc=GB&amp;amp;item_name=Joplin+Development&amp;amp;currency_code=EUR&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Donate-PayPal-green.svg&quot; alt=&quot;Donate using PayPal&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/laurent22/&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/GitHub-Badge.svg&quot; alt=&quot;Sponsor on GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Patreon-Badge.svg&quot; alt=&quot;Become a patron&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://joplinapp.org/donate/#donations&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Donate-IBAN.svg&quot; alt=&quot;Donate using IBAN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Joplin&lt;/strong&gt; is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#markdown&quot;&gt;Markdown format&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Notes exported from Evernote via .enex files &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#importing&quot;&gt;can be imported&lt;/a&gt; into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.&lt;/p&gt; 
&lt;p&gt;The notes can be &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#synchronisation&quot;&gt;synchronised&lt;/a&gt; with various cloud services including &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;, Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.&lt;/p&gt; 
&lt;p&gt;The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;, to save web pages and screenshots from your browser, is also available for &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/joplin-web-clipper/&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Three types of applications are available: for the &lt;strong&gt;desktop&lt;/strong&gt; (Windows, macOS and Linux), for &lt;strong&gt;mobile&lt;/strong&gt; (Android and iOS) and for &lt;strong&gt;terminal&lt;/strong&gt; (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.&lt;/p&gt; 
&lt;h2&gt;Desktop applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download ---|--- Windows (32 and 64-bit) | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; macOS | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Linux | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Windows&lt;/strong&gt;, you may also use the 
 &lt;!-- raw HTML omitted --&gt;Portable version
 &lt;!-- raw HTML omitted --&gt;. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_application&quot;&gt;portable application&lt;/a&gt; allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called &quot;JoplinProfile&quot; next to the executable file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Linux&lt;/strong&gt;, the recommended way is to use the following installation script as it will handle the desktop icon too:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Mobile applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download | Alt. Download ---|---|--- Android | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | or download the APK file: &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.7.5/joplin-v1.7.5.apk&quot;&gt;64-bit&lt;/a&gt; &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.7.5/joplin-v1.7.5-32bit.apk&quot;&gt;32-bit&lt;/a&gt; iOS | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | -&lt;/p&gt; 
&lt;h2&gt;Terminal application&lt;/h2&gt; 
&lt;p&gt;Operating system | Method -----------------|---------------- macOS, Linux, or Windows (via &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;amp;MSPPError=-2147217396&quot;&gt;WSL&lt;/a&gt;) | &lt;strong&gt;Important:&lt;/strong&gt; First, &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;install Node 12+&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;By default, the application binary will be installed under &lt;code&gt;~/.joplin-bin&lt;/code&gt;. You may change this directory if needed. Alternatively, if your npm permissions are setup as described &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory&quot;&gt;here&lt;/a&gt; (Option 2) then simply running &lt;code&gt;npm -g install joplin&lt;/code&gt; would work.&lt;/p&gt; 
&lt;p&gt;To start it, type &lt;code&gt;joplin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For usage information, please refer to the full &lt;a href=&quot;https://joplinapp.org/terminal/&quot;&gt;Joplin Terminal Application Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Unsupported methods&lt;/h3&gt; 
&lt;p&gt;There are other ways to install the terminal application. However, they are not supported and problems must be reported to the upstream projects.&lt;/p&gt; 
&lt;p&gt;Operating system | Method -----------------|---------------- macOS | &lt;code&gt;brew install joplin&lt;/code&gt; Arch Linux | An Arch Linux package is available &lt;a href=&quot;https://aur.archlinux.org/packages/joplin/&quot;&gt;here&lt;/a&gt;. To install it, use an AUR wrapper such as yay: &lt;code&gt;yay -S joplin&lt;/code&gt;. Both the CLI tool (type &lt;code&gt;joplin&lt;/code&gt;) and desktop app (type &lt;code&gt;joplin-desktop&lt;/code&gt;) are packaged. You can also install a compiled version with the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur&quot;&gt;chaotic-aur&lt;/a&gt; repository. For support, please go to the &lt;a href=&quot;https://github.com/masterkorp/joplin-pkgbuild&quot;&gt;GitHub repo&lt;/a&gt;. If you are interested in &lt;a href=&quot;https://joplinapp.org/prereleases/&quot;&gt;pre-release&lt;/a&gt; you have &lt;a href=&quot;https://aur.archlinux.org/packages/joplin-beta&quot;&gt;joplin-beta&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Web Clipper&lt;/h2&gt; 
&lt;p&gt;The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper Help Page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;| | | | | :---: | :---: | :---: | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/devonzuegel&quot;&gt;Devon Zuegel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/konishi-t&quot;&gt;小西　孝宗&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/avanderberg&quot;&gt;Alexander van der Berg&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/nicholashead&quot;&gt;Nicholas Head&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/fbloise&quot;&gt;Frank Bloise&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/thomasbroussard&quot;&gt;Thomas Broussard&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/dbrandonjohnson&quot;&gt;Brandon Johnson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/c-nagy&quot;&gt;@cnagy&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/clmntsl&quot;&gt;clmntsl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/mcejp&quot;&gt;mcejp&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/joesfer&quot;&gt;joesfer&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/chr15m&quot;&gt;chr15m&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/piccobit&quot;&gt;piccobit&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/jesssullivan&quot;&gt;Jess Sullivan&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Applications&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/desktop.md&quot;&gt;Desktop application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/mobile.md&quot;&gt;Mobile applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md&quot;&gt;Terminal application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Support&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://discourse.joplinapp.org&quot;&gt;Joplin Forum&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/e2ee.md&quot;&gt;How to enable end-to-end encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/conflict.md&quot;&gt;What is a conflict?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/debugging.md&quot;&gt;How to enable debug mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/rich_text_editor.md&quot;&gt;About the Rich Text editor limitations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/faq.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - Get Started&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/overview.md&quot;&gt;Joplin API Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/get_started/plugins.md&quot;&gt;Plugin development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/tutorials/toc_plugin.md&quot;&gt;Plugin tutorial&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - References&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://joplinapp.org/api/references/plugin_api/classes/joplin.html&quot;&gt;Plugin API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/rest_api.md&quot;&gt;Data API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/plugin_manifest.md&quot;&gt;Plugin manifest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/plugin_loading_rules.md&quot;&gt;Plugin loading rules&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/BUILD.md&quot;&gt;How to build the apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/e2ee.md&quot;&gt;End-to-end encryption spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/history.md&quot;&gt;Note History spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/sync_lock.md&quot;&gt;Sync Lock spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/plugins.md&quot;&gt;Plugin Architecture spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/search_sorting.md&quot;&gt;Search Sorting spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/server_file_url_format.md&quot;&gt;Server: File URL Format&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/server_delta_sync.md&quot;&gt;Server: Delta Sync&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/server_sharing.md&quot;&gt;Server: Sharing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Google Summer of Code 2021&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/gsoc2021/index.md&quot;&gt;Google Summer of Code 2021&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/gsoc2021/pull_request_guidelines.md&quot;&gt;How to submit a GSoC pull request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/gsoc2021/ideas.md&quot;&gt;Project Ideas&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;About&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog.md&quot;&gt;Changelog (Desktop App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog_cli.md&quot;&gt;Changelog (CLI App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog_server.md&quot;&gt;Changelog (Server)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/stats.md&quot;&gt;Stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/donate.md&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Desktop, mobile and terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt; for Firefox and Chrome.&lt;/li&gt; 
 &lt;li&gt;End To End Encryption (E2EE).&lt;/li&gt; 
 &lt;li&gt;Note history (revisions).&lt;/li&gt; 
 &lt;li&gt;Synchronisation with various services, including Nextcloud, Dropbox, WebDAV and OneDrive.&lt;/li&gt; 
 &lt;li&gt;Offline first, so the entire data is always available on the device even without an internet connection.&lt;/li&gt; 
 &lt;li&gt;Import Enex files (Evernote export format) and Markdown files.&lt;/li&gt; 
 &lt;li&gt;Export JEX files (Joplin Export format) and raw files.&lt;/li&gt; 
 &lt;li&gt;Support notes, to-dos, tags and notebooks.&lt;/li&gt; 
 &lt;li&gt;Sort notes by multiple criteria - title, updated time, etc.&lt;/li&gt; 
 &lt;li&gt;Support for alarms (notifications) in mobile and desktop applications.&lt;/li&gt; 
 &lt;li&gt;Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.&lt;/li&gt; 
 &lt;li&gt;Choice of both Markdown and Rich Text (WYSIWYG) editors.&lt;/li&gt; 
 &lt;li&gt;File attachment support - images are displayed, other files are linked and can be opened in the relevant application.&lt;/li&gt; 
 &lt;li&gt;Inline display of PDF, video and audio files.&lt;/li&gt; 
 &lt;li&gt;Goto Anything feature.&lt;/li&gt; 
 &lt;li&gt;Search functionality.&lt;/li&gt; 
 &lt;li&gt;Geo-location support.&lt;/li&gt; 
 &lt;li&gt;Supports multiple languages.&lt;/li&gt; 
 &lt;li&gt;External editor support - open notes in your favorite external editor with one click in Joplin.&lt;/li&gt; 
 &lt;li&gt;Extensible functionality through plugin and data APIs.&lt;/li&gt; 
 &lt;li&gt;Template support with data variables for auto creation of time &amp;amp; dates.&lt;/li&gt; 
 &lt;li&gt;Custom CSS support for customisation of both the rendered markdown and overall user interface.&lt;/li&gt; 
 &lt;li&gt;Customisable layout allows toggling, movement and sizing of various elements.&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts are editable and allow binding of most Joplin commands with export/import functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Importing&lt;/h1&gt; 
&lt;h2&gt;Importing from Evernote&lt;/h2&gt; 
&lt;p&gt;Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Recognition data - Evernote images, in particular scanned (or photographed) documents have &lt;a href=&quot;https://en.wikipedia.org/wiki/Optical_character_recognition&quot;&gt;recognition data&lt;/a&gt; associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting. If it is essential that this extra data is preserved then Joplin also allows import of ENEX files as HTML.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import Evernote data, first export your Evernote notebooks to ENEX files as described &lt;a href=&quot;https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks&quot;&gt;here&lt;/a&gt;. Then follow these steps:&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import /path/to/file.enex&lt;/code&gt;. This will import the notes into a new notebook named after the filename.&lt;/p&gt; 
&lt;h2&gt;Importing from Markdown files&lt;/h2&gt; 
&lt;p&gt;Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;File import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (file) and select the Markdown file. This file will then be imported to the currently selected Notebook.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Directory import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (directory) and select the top level of the directory that is being imported. Directory (folder) structure will be preserved in the Notebook &amp;gt; Subnotebook &amp;gt; Note structure within Joplin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import --format md /path/to/file.md&lt;/code&gt; or &lt;code&gt;import --format md /path/to/directory/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Importing from other applications&lt;/h2&gt; 
&lt;p&gt;In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard Notes: Please see &lt;a href=&quot;https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/&quot;&gt;this tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tomboy Notes: Export the notes to ENEX files &lt;a href=&quot;https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551&quot;&gt;as described here&lt;/a&gt; for example, and import these ENEX files into Joplin.&lt;/li&gt; 
 &lt;li&gt;OneNote: First &lt;a href=&quot;https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/&quot;&gt;import the notes from OneNote into Evernote&lt;/a&gt;. Then export the ENEX file from Evernote and import it into Joplin.&lt;/li&gt; 
 &lt;li&gt;NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info &lt;a href=&quot;https://discourse.joplinapp.org/t/import-from-nixnote/183/3&quot;&gt;in this thread&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Exporting&lt;/h1&gt; 
&lt;p&gt;Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A &quot;raw&quot; format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file. Joplin is also capable of exporting to a number of other formats including HTML and PDF which can be done for single notes, notebooks or everything.&lt;/p&gt; 
&lt;h1&gt;Synchronisation&lt;/h1&gt; 
&lt;p&gt;One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.&lt;/p&gt; 
&lt;p&gt;Currently, synchronisation is possible with Nextcloud, WebDAV, Dropbox, OneDrive or the local filesystem. To enable synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on &quot;Synchronise&quot; to start a synchronisation manually. Joplin will background sync automatically after any content change is made on the local application.&lt;/p&gt; 
&lt;p&gt;If the &lt;strong&gt;terminal client&lt;/strong&gt; has been installed, it is possible to also synchronise outside of the user interface by typing &lt;code&gt;joplin sync&lt;/code&gt; from the terminal. This can be used to setup a cron script to synchronise at a regular interval. For example, this would do it every 30 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt; */30 * * * * /path/to/joplin sync&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Nextcloud synchronisation&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Nextcloud
 &lt;!-- raw HTML omitted --&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it&#39;s open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, go to the Configuration screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally &lt;code&gt;https://example.com/nextcloud/remote.php/webdav/Joplin&lt;/code&gt; (&lt;strong&gt;make sure to create the &quot;Joplin&quot; directory in Nextcloud&lt;/strong&gt;), and set the username and password. If it does not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues/61#issuecomment-373282608&quot;&gt;see this explanation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, you will need to set the &lt;code&gt;sync.target&lt;/code&gt; config variable and all the &lt;code&gt;sync.5.path&lt;/code&gt;, &lt;code&gt;sync.5.username&lt;/code&gt; and &lt;code&gt;sync.5.password&lt;/code&gt; config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
:config sync.5.username YOUR_USERNAME
:config sync.5.password YOUR_PASSWORD
:config sync.target 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.&lt;/p&gt; 
&lt;h2&gt;WebDAV synchronisation&lt;/h2&gt; 
&lt;p&gt;Select the &quot;WebDAV&quot; synchronisation target and follow the same instructions as for Nextcloud above (for the &lt;strong&gt;terminal application&lt;/strong&gt; you will need to select sync target 6 rather than 5)&lt;/p&gt; 
&lt;p&gt;WebDAV-compatible services that are known to work with Joplin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_dav.html&quot;&gt;Apache WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivehq.com&quot;&gt;DriveHQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastmail.com/&quot;&gt;Fastmail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.strato.fr/stockage-en-ligne/&quot;&gt;HiDrive&lt;/a&gt; from Strato. &lt;a href=&quot;https://github.com/laurent22/joplin/issues/309&quot;&gt;Setup help&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_dav_module.html&quot;&gt;Nginx WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;OwnCloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seafile.com/&quot;&gt;Seafile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transip.nl/stack/&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.synology.com/en-us/dsm/packages/WebDAVServer&quot;&gt;Synology WebDAV Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schimera.com/products/webdav-nav-server/&quot;&gt;WebDAV Nav&lt;/a&gt;, a macOS server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zimbra.com/&quot;&gt;Zimbra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dropbox synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in &lt;code&gt;/Apps/Joplin&lt;/code&gt; and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;Dropbox&quot; as the synchronisation target in the Configuration screen (it is selected by default). Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application.&lt;/p&gt; 
&lt;h2&gt;OneDrive synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with OneDrive, Joplin creates a sub-directory in OneDrive, in /Apps/Joplin and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;OneDrive&quot; as the synchronisation target in the Configuration screen. Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application (simply input your Microsoft credentials - you do not need to register with OneDrive).&lt;/p&gt; 
&lt;h2&gt;AWS S3 synchronisation&lt;/h2&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;AWS S3 (Beta)&quot; as the synchronisation target in the Configuration screen.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AWS S3 Bucket:&lt;/strong&gt; The name of your Bucket, such as &lt;code&gt;joplin-bucket&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AWS S3 URL:&lt;/strong&gt; Fully qualified URL; By default this should be &lt;code&gt;https://s3.amazonaws.com/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AWS key &amp;amp; AWS secret:&lt;/strong&gt; IAM user&#39;s programmatic access key. To create a new key &amp;amp; secret, visit &lt;a href=&quot;https://console.aws.amazon.com/iam/home#/security_credentials&quot;&gt;IAM Security Credentials&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While creating a new Bucket for Joplin, disable &lt;strong&gt;Bucket Versioning&lt;/strong&gt;, enable &lt;strong&gt;Block all public access&lt;/strong&gt; and enable &lt;strong&gt;Default encryption&lt;/strong&gt; with &lt;code&gt;Amazon S3 key (SSE-S3)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To add a &lt;strong&gt;Bucket Policy&lt;/strong&gt; from the AWS S3 Web Console, navigate to the &lt;strong&gt;Permissions&lt;/strong&gt; tab. Temporarily disable &lt;strong&gt;Block all public access&lt;/strong&gt; to edit the Bucket policy, something along the lines of:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    &quot;Version&quot;: &quot;2012-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Sid&quot;: &quot;VisualEditor0&quot;,
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Principal&quot;: &quot;*&quot;,
            &quot;Action&quot;: [
                  &quot;s3:ListBucket&quot;,
                  &quot;s3:GetBucketLocation&quot;,
                  &quot;s3:DeleteObject&quot;,
                  &quot;s3:DeleteObjectVersion&quot;,
                  &quot;s3:PutObject&quot;
            ]
            &quot;Resource&quot;: [
                &quot;arn:aws:s3:::joplin-bucket&quot;,
                &quot;arn:aws:s3:::joplin-bucket/*&quot;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Encryption&lt;/h1&gt; 
&lt;p&gt;Joplin supports end-to-end encryption (E2EE) on all the applications. E2EE is a system where only the owner of the notes, notebooks, tags or resources can read them. It prevents potential eavesdroppers - including telecom providers, internet providers, and even the developers of Joplin from being able to access the data. Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/e2ee.md&quot;&gt;End-To-End Encryption Tutorial&lt;/a&gt; for more information about this feature and how to enable it.&lt;/p&gt; 
&lt;p&gt;For a more technical description, mostly relevant for development or to review the method being used, please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/e2ee.md&quot;&gt;Encryption specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Note history&lt;/h1&gt; 
&lt;p&gt;The Joplin applications automatically save previous versions of your notes at regular intervals. These versions are synced across devices and can be viewed from the desktop application. To do so, click on the &quot;Information&quot; button on a note, then click on &quot;Previous version of this note&quot;. From this screen you can view the previous versions of the note as well as restore any of them.&lt;/p&gt; 
&lt;p&gt;This feature can be disabled from the &quot;Note history&quot; section in the Configuration screen, and it is also possible to change for how long the history of a note is saved.&lt;/p&gt; 
&lt;p&gt;More information please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/note_history.md&quot;&gt;Note History page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;External text editor&lt;/h1&gt; 
&lt;p&gt;Joplin notes can be opened and edited using an external editor of your choice. It can be a simple text editor like Notepad++ or Sublime Text or an actual Markdown editor like Typora. In that case, images will also be displayed within the editor. To open the note in an external editor, click on the icon in the toolbar or press Ctrl+E (or Cmd+E). Your default text editor will be used to open the note. If needed, you can also specify the editor directly in the General Options, under &quot;Text editor command&quot;.&lt;/p&gt; 
&lt;h1&gt;Attachments&lt;/h1&gt; 
&lt;p&gt;Any kind of file can be attached to a note. In Markdown, links to these files are represented as a simple ID to the attachment, clicking on this link will open the file in the default application. In the case of audio, video and pdf files, these will be displayed inline with the note and so can be viewed or played within Joplin.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, files can be attached either by clicking the &quot;Attach file&quot; icon in the editor or via drag and drop. If you prefer to create a link to a local file instead, hold the ALT key while performing the drag and drop operation. You can also copy and paste images directly in the editor via Ctrl+V.&lt;/p&gt; 
&lt;p&gt;Resources that are not attached to any note will be automatically deleted in accordance to the &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#note-history&quot;&gt;Note History&lt;/a&gt; settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Resources larger than 10 MB are not currently supported on mobile. They will crash the application when synchronising so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/p&gt; 
&lt;h2&gt;Downloading attachments&lt;/h2&gt; 
&lt;p&gt;The way the attachments are downloaded during synchronisation can be customised in the Configuration screen, under &quot;Attachment download behaviour&quot;. The default option (&quot;Always&quot;) is to download all the attachments, all the time, so that the data is available even when the device is offline. There is also the option to download the attachments manually (option &quot;Manual&quot;), by clicking on it, or automatically (Option &quot;Auto&quot;), in which case the attachments are downloaded only when a note is opened. These options should help saving disk space and network bandwidth, especially on mobile.&lt;/p&gt; 
&lt;h1&gt;Notifications&lt;/h1&gt; 
&lt;p&gt;In the desktop and mobile apps, an alarm can be associated with any to-do. It will be triggered at the given time by displaying a notification. How the notification will be displayed depends on the operating system since each has a different way to handle this. Please see below for the requirements for the desktop applications:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &amp;gt;= 8. Make sure the Action Center is enabled on Windows. Task bar balloon for Windows &amp;lt; 8. Growl as fallback. Growl takes precedence over Windows balloons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &amp;gt;= 10.8 or Growl if earlier.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;notify-osd&lt;/code&gt; or &lt;code&gt;libnotify-bin&lt;/code&gt; installed (Ubuntu should have this by default). Growl otherwise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/mikaelbr/node-notifier/blob/master/DECISION_FLOW.md&quot;&gt;documentation and flow chart for reporter choice&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On mobile, the alarms will be displayed using the built-in notification system.&lt;/p&gt; 
&lt;p&gt;If for any reason the notifications do not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sub-notebooks&lt;/h1&gt; 
&lt;p&gt;Sub-notebooks allow organising multiple notebooks into a tree of notebooks. For example it can be used to regroup all the notebooks related to work, to family or to a particular project under a parent notebook.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://joplinapp.org/images/SubNotebooks.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, to create a subnotebook, drag and drop it onto another notebook. To move it back to the root, drag and drop it on the &quot;Notebooks&quot; header. Currently only the desktop app can be used to organise the notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;mobile application&lt;/strong&gt; supports displaying and collapsing/expanding the tree of notebooks, however it does not currently support moving the subnotebooks to different notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;terminal app&lt;/strong&gt; supports displaying the tree of subnotebooks but it does not support collapsing/expanding them or moving the subnotebooks around.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Markdown&lt;/h1&gt; 
&lt;p&gt;Joplin uses and renders a Github-flavoured Markdown with a few variations and additions. In particular it adds math formula support, interactive checkboxes and support for note links. Joplin also supports Markdown plugins which allow enabling and disabling various advanced Markdown features. Have a look at the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h1&gt;Custom CSS&lt;/h1&gt; 
&lt;p&gt;Rendered markdown can be customized by placing a userstyle file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userstyle.css&lt;/code&gt; (This path might be different on your device - check at the top of the &lt;code&gt;General&lt;/code&gt; page of the Configuration menu for the exact path). This file supports standard CSS syntax. Joplin &lt;em&gt;&lt;strong&gt;must&lt;/strong&gt;&lt;/em&gt; be restarted for the new css to be applied, please ensure that Joplin is not closing to the tray, but is actually exiting. Note that this file is used for both displaying the notes and printing the notes. Be aware how the CSS may look printed (for example, printing white text over a black background is usually not wanted).&lt;/p&gt; 
&lt;p&gt;The whole UI can be customized by placing a custom editor style file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userchrome.css&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Important: userstyle.css and userchrome.css are provided for your convenience, but they are advanced settings, and styles you define may break from one version to the next. If you want to use them, please know that it might require regular development work from you to keep them working. The Joplin team cannot make a commitment to keep the application HTML structure stable.&lt;/p&gt; 
&lt;h1&gt;Note templates&lt;/h1&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop app&lt;/strong&gt;, templates can be used to create new notes or to insert into existing ones by adding a template file to the &lt;code&gt;templates&lt;/code&gt; directory (File &amp;gt; Templates). For example creating the file &lt;code&gt;hours.md&lt;/code&gt; in the &lt;code&gt;templates&lt;/code&gt; directory with the contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;Date: {{date}}
Hours:
Details:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Templates can then be inserted from the menu (File-&amp;gt;Templates).&lt;/p&gt; 
&lt;p&gt;The currently supported template variables are:&lt;/p&gt; 
&lt;p&gt;| Variable | Description | Example | | --- | --- | --- | | &lt;code&gt;{{date}}&lt;/code&gt; | Today&#39;s date formatted based on the settings format | 2019-01-01 | | &lt;code&gt;{{time}}&lt;/code&gt; | Current time formatted based on the settings format | 13:00 | | &lt;code&gt;{{datetime}}&lt;/code&gt; | Current date and time formatted based on the settings format | 01/01/19 1:00 PM | | &lt;code&gt;{{#custom_datetime}}&lt;/code&gt; | Current date and/or time formatted based on a supplied string (using &lt;a href=&quot;https://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; formatting) | &lt;code&gt;{{#custom_datetime}}M d{{/custom_datetime}}&lt;/code&gt; | | &lt;code&gt;{{bowm}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Monday) based on the settings format | | | &lt;code&gt;{{bows}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Sunday) based on the settings format | |&lt;/p&gt; 
&lt;h1&gt;Plugins&lt;/h1&gt; 
&lt;p&gt;The &lt;strong&gt;desktop app&lt;/strong&gt; has the ability to extend beyond its standard functionality by the way of plugins. These plugins adhere to the Joplin plugin API and can be installed &amp;amp; configured within the application via the &lt;code&gt;Plugins&lt;/code&gt; page in the Configuration screen. This menu allows the manual installation of the plugin using the single &#39;Joplin Plugin Archive&#39; (*.jpl) file. Once the application is reloaded the plugins will appear within the plugins menu where they can be toggled on/off or removed entirely.&lt;/p&gt; 
&lt;p&gt;Plugins are currently maintained by the community in the &lt;a href=&quot;https://discourse.joplinapp.org/c/plugins/18&quot;&gt;Joplin Discourse &#39;plugins&#39; category&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information see &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/plugins.md&quot;&gt;Plugins&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Searching&lt;/h1&gt; 
&lt;p&gt;Joplin implements the SQLite Full Text Search (FTS4) extension. It means the content of all the notes is indexed in real time and search queries return results very fast. Both &lt;a href=&quot;https://www.sqlite.org/fts3.html#simple_fts_queries&quot;&gt;Simple FTS Queries&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/fts3.html#full_text_index_queries&quot;&gt;Full-Text Index Queries&lt;/a&gt; are supported. See below for the list of supported queries:&lt;/p&gt; 
&lt;h2&gt;Supported queries&lt;/h2&gt; 
&lt;p&gt;Search type | Description | Example ------------|-------------|--------- Single word | Returns all the notes that contain this term. | For example, searching for &lt;code&gt;cat&lt;/code&gt; will return all the notes that contain this exact word. Note: it will not return the notes that contain the substring - thus, for &quot;cat&quot;, notes that contain &quot;cataclysmic&quot; or &quot;prevaricate&quot; will &lt;strong&gt;not&lt;/strong&gt; be returned. Multiple word | Returns all the notes that contain &lt;strong&gt;all&lt;/strong&gt; these words, but not necessarily next to each other. | &lt;code&gt;dog cat&lt;/code&gt; - will return any notes that contain the words &quot;dog&quot; and &quot;cat&quot; anywhere in the note, no necessarily in that order nor next to each other. It will &lt;strong&gt;not&lt;/strong&gt; return results that contain &quot;dog&quot; or &quot;cat&quot; only. Phrase | Add double quotes to return the notes that contain exactly this phrase. | &lt;code&gt;&quot;shopping list&quot;&lt;/code&gt; - will return the notes that contain these &lt;strong&gt;exact terms&lt;/strong&gt; next to each other and in this order. It will &lt;strong&gt;not&lt;/strong&gt; return for example a note that contains &quot;going shopping with my list&quot;. Prefix | Add a wildcard to return all the notes that contain a term with a specified prefix. | &lt;code&gt;swim*&lt;/code&gt; - will return all the notes that contain eg. &quot;swim&quot;, but also &quot;swimming&quot;, &quot;swimsuit&quot;, etc. IMPORTANT: The wildcard &lt;strong&gt;can only be at the end&lt;/strong&gt; - it will be ignored at the beginning of a word (eg. &lt;code&gt;*swim&lt;/code&gt;) and will be treated as a literal asterisk in the middle of a word (eg. &lt;code&gt;ast*rix&lt;/code&gt;) Switch to basic search | One drawback of Full Text Search is that it ignores most non-alphabetical characters. However in some cases you might want to search for this too. To do that, you can use basic search. You switch to this mode by prefixing your search with a slash &lt;code&gt;/&lt;/code&gt;. This won&#39;t provide the benefits of FTS but it will allow searching exactly for what you need. Note that it can also be much slower, even extremely slow, depending on your query. | &lt;code&gt;/&quot;- [ ]&quot;&lt;/code&gt; - will return all the notes that contain unchecked checkboxes.&lt;/p&gt; 
&lt;h2&gt;Search filters&lt;/h2&gt; 
&lt;p&gt;You can also use search filters to further restrict the search.&lt;/p&gt; 
&lt;p&gt;| Operator | Description | Example | | --- | --- | --- | |&lt;strong&gt;-&lt;/strong&gt;|If placed before a text term, it excludes the notes that contain that term. You can also place it before a filter to negate it. |&lt;code&gt;-spam&lt;/code&gt; searches for all notes without the word &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;office -trash&lt;/code&gt; searches for all notes with the word&lt;code&gt;office&lt;/code&gt; and without the word &lt;code&gt;trash&lt;/code&gt;.| |&lt;strong&gt;any:&lt;/strong&gt;|Return notes that satisfy any/all of the required conditions. &lt;code&gt;any:0&lt;/code&gt; is the default, which means all conditions must be satisfied.|&lt;code&gt;any:1 cat dog&lt;/code&gt; will return notes that have the word &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;dog&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;any:0 cat dog&lt;/code&gt; will return notes with both the words &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;dog&lt;/code&gt;. | | &lt;strong&gt;title:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;body:&lt;/strong&gt;|Restrict your search to just the title or the body field.|&lt;code&gt;title:&quot;hello world&quot;&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;world&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;title:hello -body:world&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and body does not contain &lt;code&gt;world&lt;/code&gt;. | &lt;strong&gt;tag:&lt;/strong&gt; |Restrict the search to the notes with the specified tags.|&lt;code&gt;tag:office&lt;/code&gt; searches for all notes having tag office.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:office tag:important&lt;/code&gt; searches for all notes having both office and important tags.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:office -tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; which do not have tag &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;any:1 tag:office tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; or tag &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:be*ful&lt;/code&gt; does a search with wildcards.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:*&lt;/code&gt; returns all notes with tags.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-tag:*&lt;/code&gt; returns all notes without tags.| | &lt;strong&gt;notebook:&lt;/strong&gt; | Restrict the search to the specified notebook(s). |&lt;code&gt;notebook:books&lt;/code&gt; limits the search scope within &lt;code&gt;books&lt;/code&gt; and all its subnotebooks.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;notebook:wheel*time&lt;/code&gt; does a wildcard search.| | &lt;strong&gt;created:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;updated:&lt;/strong&gt; | Searches for notes created/updated on dates specified using YYYYMMDD format. You can also search relative to the current day, week, month, or year. | &lt;code&gt;created:20201218&lt;/code&gt; will return notes created on or after December 18, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-updated:20201218&lt;/code&gt; will return notes updated before December 18, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:20200118 -created:20201215&lt;/code&gt; will return notes created between January 18, 2020, and before December 15, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:202001 -created:202003&lt;/code&gt; will return notes created on or after January and before March 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;updated:1997 -updated:2020&lt;/code&gt; will return all notes updated between the years 1997 and 2019.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:day-2&lt;/code&gt; searches for all notes created in the past two days.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;updated:year-0&lt;/code&gt; searches all notes updated in the current year. | &lt;strong&gt;type:&lt;/strong&gt; |Restrict the search to either notes or todos. | &lt;code&gt;type:note&lt;/code&gt; to return all notes
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;type:todo&lt;/code&gt; to return all todos | | &lt;strong&gt;iscompleted:&lt;/strong&gt; | Restrict the search to either completed or uncompleted todos. | &lt;code&gt;iscompleted:1&lt;/code&gt; to return all completed todos
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;iscompleted:0&lt;/code&gt; to return all uncompleted todos| |&lt;strong&gt;latitude:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;longitude:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;altitude:&lt;/strong&gt;|Filter by location|&lt;code&gt;latitude:40 -latitude:50&lt;/code&gt; to return notes with latitude &amp;gt;= 40 and &amp;lt; 50 | |&lt;strong&gt;resource:&lt;/strong&gt;|Filter by attachment MIME type|&lt;code&gt;resource:image/jpeg&lt;/code&gt; to return notes with a jpeg attachment.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-resource:application/pdf&lt;/code&gt; to return notes without a pdf attachment.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;resource:image/*&lt;/code&gt; to return notes with any images.| |&lt;strong&gt;sourceurl:&lt;/strong&gt;|Filter by source URL|&lt;code&gt;sourceurl:https://www.google.com&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;sourceurl:*joplinapp.org&lt;/code&gt; to perform a wildcard search.|&lt;/p&gt; 
&lt;p&gt;Note: In the CLI client you have to escape the query using &lt;code&gt;--&lt;/code&gt; when using negated filters. Eg. &lt;code&gt;:search -- &quot;-tag:tag1&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The filters are implicitly connected by and/or connectives depending on the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, all filters are connected by &quot;AND&quot;.&lt;/li&gt; 
 &lt;li&gt;To override this default behaviour, use the &lt;code&gt;any&lt;/code&gt; filter, in which case the search terms will be connected by &quot;OR&quot; instead.&lt;/li&gt; 
 &lt;li&gt;There&#39;s an exception for the &lt;code&gt;notebook&lt;/code&gt; filters which are connected by &quot;OR&quot;. The reason being that no note can be in multiple notebooks at once.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Search order&lt;/h2&gt; 
&lt;p&gt;Notes are sorted by &quot;relevance&quot;. Currently it means the notes that contain the requested terms the most times are on top. For queries with multiple terms, it also matters how close to each other the terms are. This is a bit experimental so if you notice a search query that returns unexpected results, please report it in the forum, providing as many details as possible to replicate the issue.&lt;/p&gt; 
&lt;h1&gt;Goto Anything&lt;/h1&gt; 
&lt;p&gt;In the desktop application, press 
 &lt;!-- raw HTML omitted --&gt;Ctrl+G
 &lt;!-- raw HTML omitted --&gt; or 
 &lt;!-- raw HTML omitted --&gt;Cmd+G
 &lt;!-- raw HTML omitted --&gt; and type a note title or part of its content to jump to it. Or type 
 &lt;!-- raw HTML omitted --&gt;#
 &lt;!-- raw HTML omitted --&gt; followed by a tag name, or 
 &lt;!-- raw HTML omitted --&gt;@
 &lt;!-- raw HTML omitted --&gt; followed by a notebook name.&lt;/p&gt; 
&lt;h1&gt;Privacy&lt;/h1&gt; 
&lt;p&gt;Joplin values your privacy and security by giving you complete control over your information and digital footprint.&lt;/p&gt; 
&lt;p&gt;Joplin applications do not send any data to any service without your authorisation. Any data that Joplin saves, such as notes or images, are saved to your own device and you are free to delete this data at any time.&lt;/p&gt; 
&lt;p&gt;Joplin has many modern features, some of which use third-party services. You can disable any or all of these features in the application settings. These features are:&lt;/p&gt; 
&lt;p&gt;|Feature | Description | Default| |--------|-------------|--------| |Auto-update|Joplin periodically connects to GitHub to check for new releases.|Enabled| |Geo-location|Joplin saves geo-location information in note properties when you create a note.|Enabled| |Synchronisation|Joplin supports synchronisation of your notes across multiple devices. If you choose to synchronise with a third-party, such as OneDrive, the notes will be sent to your OneDrive account, in which case the third-party privacy policy applies.|Disabled|&lt;/p&gt; 
&lt;p&gt;Joplin is developed as an open-source application and the source code is freely available online to inspect.&lt;/p&gt; 
&lt;p&gt;For any question about Joplin privacy, please leave a message on the &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Joplin Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Donations&lt;/h1&gt; 
&lt;p&gt;Donations to Joplin support the development of the project. Developing quality applications mostly takes time, but there are also some expenses, such as digital certificates to sign the applications, app store fees, hosting, etc. Most of all, your donation will make it possible to keep up the current development standard.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/donate.md&quot;&gt;donation page&lt;/a&gt; for information on how to support the development of Joplin.&lt;/p&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;Name | Description --- | --- &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Support Forum&lt;/a&gt; | This is the main place for general discussion about Joplin, user support, software development questions, and to discuss new features. Also where the latest beta versions are released and discussed. &lt;a href=&quot;https://www.reddit.com/r/joplinapp/&quot;&gt;Sub-reddit&lt;/a&gt; | Also a good place to get help &lt;a href=&quot;https://discordapp.com/invite/d2HMPwE&quot;&gt;Discord server&lt;/a&gt; | Our chat server &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;Patreon page&lt;/a&gt; |The latest news are often posted there &lt;a href=&quot;https://mastodon.social/@joplinapp&quot;&gt;Mastodon feed&lt;/a&gt; | Follow us on Mastodon &lt;a href=&quot;https://twitter.com/joplinapp&quot;&gt;Twitter feed&lt;/a&gt; | Follow us on Twitter&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please see the guide for information on how to contribute to the development of Joplin: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md&lt;/p&gt; 
&lt;h1&gt;Localisation&lt;/h1&gt; 
&lt;p&gt;Joplin is currently available in the languages below. If you would like to contribute a &lt;strong&gt;new translation&lt;/strong&gt;, it is quite straightforward, please follow these steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://poedit.net/&quot;&gt;Download Poedit&lt;/a&gt;, the translation editor, and install it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/packages/tools/locales/joplin.pot&quot;&gt;Download the file to be translated&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;In Poedit, open this .pot file, go into the Catalog menu and click Configuration. Change &quot;Country&quot; and &quot;Language&quot; to your own country and language.&lt;/li&gt; 
 &lt;li&gt;From then you can translate the file.&lt;/li&gt; 
 &lt;li&gt;Once it is done, please &lt;a href=&quot;https://github.com/laurent22/joplin/pulls&quot;&gt;open a pull request&lt;/a&gt; and add the file to it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This translation will apply to the three applications - desktop, mobile and terminal.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;update a translation&lt;/strong&gt;, follow the same steps as above but instead of getting the .pot file, get the .po file for your language from the table below.&lt;/p&gt; 
&lt;p&gt;Current translations:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&amp;nbsp; | Language | Po File | Last translator | Percent done ---|---|---|---|--- &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/arableague.png&quot; alt=&quot;&quot;&gt; | Arabic | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ar.po&quot;&gt;ar&lt;/a&gt; | &lt;a href=&quot;mailto:Whaell@protonmail.com&quot;&gt;Whaell&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/es/basque_country.png&quot; alt=&quot;&quot;&gt; | Basque | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/eu.po&quot;&gt;eu&lt;/a&gt; | juan.abasolo@ehu.eus | 31% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ba.png&quot; alt=&quot;&quot;&gt; | Bosnian (Bosna i Hercegovina) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/bs_BA.po&quot;&gt;bs_BA&lt;/a&gt; | &lt;a href=&quot;mailto:dervis.t@pm.me&quot;&gt;Derviš T.&lt;/a&gt; | 76% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/bg.png&quot; alt=&quot;&quot;&gt; | Bulgarian (България) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/bg_BG.po&quot;&gt;bg_BG&lt;/a&gt; | | 61% &lt;img src=&quot;https://joplinapp.org/images/flags/es/catalonia.png&quot; alt=&quot;&quot;&gt; | Catalan | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ca.po&quot;&gt;ca&lt;/a&gt; | jmontane, 2019 | 87% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/hr.png&quot; alt=&quot;&quot;&gt; | Croatian (Hrvatska) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/hr_HR.po&quot;&gt;hr_HR&lt;/a&gt; | &lt;a href=&quot;mailto:mail@milotype.de&quot;&gt;Milo Ivir&lt;/a&gt; | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cz.png&quot; alt=&quot;&quot;&gt; | Czech (Česká republika) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/cs_CZ.po&quot;&gt;cs_CZ&lt;/a&gt; | &lt;a href=&quot;mailto:lukas@aiya.cz&quot;&gt;Lukas Helebrandt&lt;/a&gt; | 90% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/dk.png&quot; alt=&quot;&quot;&gt; | Dansk (Danmark) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/da_DK.po&quot;&gt;da_DK&lt;/a&gt; | Mustafa Al-Dailemi (dailemi@hotmail.com)Language-Team: | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/de.png&quot; alt=&quot;&quot;&gt; | Deutsch (Deutschland) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/de_DE.po&quot;&gt;de_DE&lt;/a&gt; | &lt;a href=&quot;mailto:atalanttore@users.noreply.github.com&quot;&gt;Ettore Atalan&lt;/a&gt; | 93% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ee.png&quot; alt=&quot;&quot;&gt; | Eesti Keel (Eesti) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/et_EE.po&quot;&gt;et_EE&lt;/a&gt; | | 60% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gb.png&quot; alt=&quot;&quot;&gt; | English (United Kingdom) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/en_GB.po&quot;&gt;en_GB&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/us.png&quot; alt=&quot;&quot;&gt; | English (United States of America) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/en_US.po&quot;&gt;en_US&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/es.png&quot; alt=&quot;&quot;&gt; | Español (España) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/es_ES.po&quot;&gt;es_ES&lt;/a&gt; | &lt;a href=&quot;mailto:mario.campo@gmail.com&quot;&gt;Mario Campo&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/esperanto.png&quot; alt=&quot;&quot;&gt; | Esperanto | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/eo.po&quot;&gt;eo&lt;/a&gt; | Marton Paulo | 34% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fi.png&quot; alt=&quot;&quot;&gt; | Finnish (Suomi) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fi_FI.po&quot;&gt;fi_FI&lt;/a&gt; | | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fr.png&quot; alt=&quot;&quot;&gt; | Français (France) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fr_FR.po&quot;&gt;fr_FR&lt;/a&gt; | Laurent Cozic | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/es/galicia.png&quot; alt=&quot;&quot;&gt; | Galician (España) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/gl_ES.po&quot;&gt;gl_ES&lt;/a&gt; | &lt;a href=&quot;mailto:marcoslansgarza@gmail.com&quot;&gt;Marcos Lans&lt;/a&gt; | 40% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/id.png&quot; alt=&quot;&quot;&gt; | Indonesian (Indonesia) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/id_ID.po&quot;&gt;id_ID&lt;/a&gt; | &lt;a href=&quot;mailto:16875937+fathyar@users.noreply.github.com&quot;&gt;Fathy AR&lt;/a&gt; | 95% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/it.png&quot; alt=&quot;&quot;&gt; | Italiano (Italia) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/it_IT.po&quot;&gt;it_IT&lt;/a&gt; | &lt;a href=&quot;mailto:mailfilledwithspam@gmail.com&quot;&gt;Alessandro Bernardello&lt;/a&gt; | 94% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/hu.png&quot; alt=&quot;&quot;&gt; | Magyar (Magyarország) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/hu_HU.po&quot;&gt;hu_HU&lt;/a&gt; | &lt;a href=&quot;mailto:mail@szokesandor.hu&quot;&gt;Szőke Sándor&lt;/a&gt; | 93% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/be.png&quot; alt=&quot;&quot;&gt; | Nederlands (België,&amp;nbsp;Belgique,&amp;nbsp;Belgien) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nl_BE.po&quot;&gt;nl_BE&lt;/a&gt; | | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/nl.png&quot; alt=&quot;&quot;&gt; | Nederlands (Nederland) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nl_NL.po&quot;&gt;nl_NL&lt;/a&gt; | &lt;a href=&quot;mailto:metbril@users.noreply.github.com&quot;&gt;MetBril&lt;/a&gt; | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/no.png&quot; alt=&quot;&quot;&gt; | Norwegian (Norge,&amp;nbsp;Noreg) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nb_NO.po&quot;&gt;nb_NO&lt;/a&gt; | &lt;a href=&quot;mailto:code@mxe.no&quot;&gt;Mats Estensen&lt;/a&gt; | 80% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ir.png&quot; alt=&quot;&quot;&gt; | Persian | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fa.po&quot;&gt;fa&lt;/a&gt; | &lt;a href=&quot;mailto:kourox@protonmail.com&quot;&gt;Kourosh Firoozbakht&lt;/a&gt; | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pl.png&quot; alt=&quot;&quot;&gt; | Polski (Polska) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pl_PL.po&quot;&gt;pl_PL&lt;/a&gt; | &lt;a href=&quot;mailto:hello.konhi@gmail.com&quot;&gt;konhi&lt;/a&gt; | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/br.png&quot; alt=&quot;&quot;&gt; | Português (Brasil) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pt_BR.po&quot;&gt;pt_BR&lt;/a&gt; | &lt;a href=&quot;mailto:nicolas.suzuki@pm.me&quot;&gt;Nicolas Suzuki&lt;/a&gt; | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pt.png&quot; alt=&quot;&quot;&gt; | Português (Portugal) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pt_PT.po&quot;&gt;pt_PT&lt;/a&gt; | &lt;a href=&quot;mailto:dcaveiro@yahoo.com&quot;&gt;Diogo Caveiro&lt;/a&gt; | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ro.png&quot; alt=&quot;&quot;&gt; | Română | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ro.po&quot;&gt;ro&lt;/a&gt; | &lt;a href=&quot;mailto:cristi.duluta@gmail.com&quot;&gt;Cristi Duluta&lt;/a&gt; | 70% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/si.png&quot; alt=&quot;&quot;&gt; | Slovenian (Slovenija) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sl_SI.po&quot;&gt;sl_SI&lt;/a&gt; | | 39% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/se.png&quot; alt=&quot;&quot;&gt; | Svenska | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sv.po&quot;&gt;sv&lt;/a&gt; | &lt;a href=&quot;mailto:jonatan@autistici.org&quot;&gt;Jonatan Nyberg&lt;/a&gt; | 65% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/th.png&quot; alt=&quot;&quot;&gt; | Thai (ประเทศไทย) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/th_TH.po&quot;&gt;th_TH&lt;/a&gt; | | 48% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/vi.png&quot; alt=&quot;&quot;&gt; | Tiếng Việt | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/vi.po&quot;&gt;vi&lt;/a&gt; | | 77% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tr.png&quot; alt=&quot;&quot;&gt; | Türkçe (Türkiye) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/tr_TR.po&quot;&gt;tr_TR&lt;/a&gt; | &lt;a href=&quot;mailto:arda@kilicdagi.com&quot;&gt;Arda Kılıçdağı&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ua.png&quot; alt=&quot;&quot;&gt; | Ukrainian (Україна) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/uk_UA.po&quot;&gt;uk_UA&lt;/a&gt; | &lt;a href=&quot;mailto:vandreykiv@gmail.com&quot;&gt;Vyacheslav Andreykiv&lt;/a&gt; | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gr.png&quot; alt=&quot;&quot;&gt; | Ελληνικά (Ελλάδα) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/el_GR.po&quot;&gt;el_GR&lt;/a&gt; | &lt;a href=&quot;mailto:xaris@tuta.io&quot;&gt;Harris Arvanitis&lt;/a&gt; | 87% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ru.png&quot; alt=&quot;&quot;&gt; | Русский (Россия) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ru_RU.po&quot;&gt;ru_RU&lt;/a&gt; | &lt;a href=&quot;mailto:thesermanarm@gmail.com&quot;&gt;Sergey Segeda&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/rs.png&quot; alt=&quot;&quot;&gt; | српски језик (Србија) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sr_RS.po&quot;&gt;sr_RS&lt;/a&gt; | | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cn.png&quot; alt=&quot;&quot;&gt; | 中文 (简体) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/zh_CN.po&quot;&gt;zh_CN&lt;/a&gt; | &lt;a href=&quot;mailto:zyangmath@gmail.com&quot;&gt;Yang Zhang&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tw.png&quot; alt=&quot;&quot;&gt; | 中文 (繁體) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/zh_TW.po&quot;&gt;zh_TW&lt;/a&gt; | &lt;a href=&quot;mailto:yaozeye@yahoo.co.jp&quot;&gt;Yaoze Ye&lt;/a&gt; | 92% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/jp.png&quot; alt=&quot;&quot;&gt; | 日本語 (日本) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ja_JP.po&quot;&gt;ja_JP&lt;/a&gt; | &lt;a href=&quot;mailto:genneko217@gmail.com&quot;&gt;genneko&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/kr.png&quot; alt=&quot;&quot;&gt; | 한국어 | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ko.po&quot;&gt;ko&lt;/a&gt; | &lt;a href=&quot;mailto:potatogim@potatogim.net&quot;&gt;Ji-Hyeon Gim&lt;/a&gt; | 100%&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;Thank you to everyone who&#39;ve contributed to Joplin&#39;s source code!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;| | | | | | | :---: | :---: | :---: | :---: | :---: | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/laurent22&quot;&gt;laurent22&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tessus&quot;&gt;tessus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mic704b&quot;&gt;mic704b&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/CalebJohn&quot;&gt;CalebJohn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/PackElend&quot;&gt;PackElend&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tanrax&quot;&gt;tanrax&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rtmkrlv&quot;&gt;rtmkrlv&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fmrtn&quot;&gt;fmrtn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/genneko&quot;&gt;genneko&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/devonzuegel&quot;&gt;devonzuegel&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gabcoh&quot;&gt;gabcoh&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/matsest&quot;&gt;matsest&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/abonte&quot;&gt;abonte&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Abijeet&quot;&gt;Abijeet&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ishantgupta777&quot;&gt;ishantgupta777&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/foxmask&quot;&gt;foxmask&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/innocuo&quot;&gt;innocuo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/anjulalk&quot;&gt;anjulalk&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rabeehrz&quot;&gt;rabeehrz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/coderrsid&quot;&gt;coderrsid&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/alexdevero&quot;&gt;alexdevero&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Runo-saduwa&quot;&gt;Runo-saduwa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/marcosvega91&quot;&gt;marcosvega91&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/petrz12&quot;&gt;petrz12&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/moltenform&quot;&gt;moltenform&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zuphilip&quot;&gt;zuphilip&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/readingsnail&quot;&gt;readingsnail&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/XarisA&quot;&gt;XarisA&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zblesk&quot;&gt;zblesk&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/0ndrey&quot;&gt;0ndrey&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/amitsin6h&quot;&gt;amitsin6h&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/martonpaulo&quot;&gt;martonpaulo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rccavalcanti&quot;&gt;rccavalcanti&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rahulm2310&quot;&gt;Rahulm2310&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/metbril&quot;&gt;metbril&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ShaneKilkelly&quot;&gt;ShaneKilkelly&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/stweil&quot;&gt;stweil&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/archont00&quot;&gt;archont00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bradmcl&quot;&gt;bradmcl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tfinnberg&quot;&gt;tfinnberg&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/marcushill&quot;&gt;marcushill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nathanleiby&quot;&gt;nathanleiby&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RaphaelKimmig&quot;&gt;RaphaelKimmig&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RenatoXSR&quot;&gt;RenatoXSR&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sensor-freak&quot;&gt;sensor-freak&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ardakilic&quot;&gt;Ardakilic&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/BartBucknill&quot;&gt;BartBucknill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mrwulf&quot;&gt;mrwulf&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chrisb86&quot;&gt;chrisb86&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chrmoritz&quot;&gt;chrmoritz&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ethan42411&quot;&gt;ethan42411&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JOJ0&quot;&gt;JOJ0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jdrobertso&quot;&gt;jdrobertso&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jmontane&quot;&gt;jmontane&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/solariz&quot;&gt;solariz&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mmahmoudian&quot;&gt;mmahmoudian&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/maicki&quot;&gt;maicki&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mjjzf&quot;&gt;mjjzf&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/naviji&quot;&gt;naviji&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rt-oliveira&quot;&gt;rt-oliveira&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rishgod&quot;&gt;Rishgod&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sebastienjust&quot;&gt;sebastienjust&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sealch&quot;&gt;sealch&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/StarFang208&quot;&gt;StarFang208&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SubodhDahal&quot;&gt;SubodhDahal&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/TobiasDev&quot;&gt;TobiasDev&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/conyx&quot;&gt;conyx&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/vsimkus&quot;&gt;vsimkus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Zorbeyd&quot;&gt;Zorbeyd&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/axq&quot;&gt;axq&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/barbowza&quot;&gt;barbowza&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lightray22&quot;&gt;lightray22&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/pf-siedler&quot;&gt;pf-siedler&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ruuti&quot;&gt;ruuti&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/s1nceri7y&quot;&gt;s1nceri7y&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kornava&quot;&gt;kornava&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ShuiHuo&quot;&gt;ShuiHuo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ikunya&quot;&gt;ikunya&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bedwardly-down&quot;&gt;bedwardly-down&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/hexclover&quot;&gt;hexclover&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/2jaeyeol&quot;&gt;2jaeyeol&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/aaronxn&quot;&gt;aaronxn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/alanfortlink&quot;&gt;alanfortlink&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/apankratov&quot;&gt;apankratov&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/teterkin&quot;&gt;teterkin&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/serenitatis&quot;&gt;serenitatis&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lex111&quot;&gt;lex111&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tekdel&quot;&gt;tekdel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Shaxine&quot;&gt;Shaxine&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/assimd&quot;&gt;assimd&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/baymoe&quot;&gt;baymoe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bimlas&quot;&gt;bimlas&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/carlbordum&quot;&gt;carlbordum&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chaifeng&quot;&gt;chaifeng&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/charles-e&quot;&gt;charles-e&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Techwolf12&quot;&gt;Techwolf12&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/cloudtrends&quot;&gt;cloudtrends&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daniellandau&quot;&gt;daniellandau&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daukadolt&quot;&gt;daukadolt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/NeverMendel&quot;&gt;NeverMendel&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/diego-betto&quot;&gt;diego-betto&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/erdody&quot;&gt;erdody&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/domgoodwin&quot;&gt;domgoodwin&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/b4mboo&quot;&gt;b4mboo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/donbowman&quot;&gt;donbowman&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/dflock&quot;&gt;dflock&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/drobilica&quot;&gt;drobilica&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/einverne&quot;&gt;einverne&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Atalanttore&quot;&gt;Atalanttore&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/eodeluga&quot;&gt;eodeluga&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fer22f&quot;&gt;fer22f&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fpindado&quot;&gt;fpindado&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/FleischKarussel&quot;&gt;FleischKarussel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/talkdirty&quot;&gt;talkdirty&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gmag11&quot;&gt;gmag11&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/guiemi&quot;&gt;guiemi&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gusbemacbe&quot;&gt;gusbemacbe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Fvbor&quot;&gt;Fvbor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bennetthanna&quot;&gt;bennetthanna&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sczhg&quot;&gt;sczhg&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Vistaus&quot;&gt;Vistaus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/iahmedbacha&quot;&gt;iahmedbacha&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/IrvinDominin&quot;&gt;IrvinDominin&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ishammahajan&quot;&gt;ishammahajan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JRaiden16&quot;&gt;JRaiden16&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jacobherrington&quot;&gt;jacobherrington&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jamesadjinwa&quot;&gt;jamesadjinwa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jaredcrowe&quot;&gt;jaredcrowe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/potatogim&quot;&gt;potatogim&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JoelRSimpson&quot;&gt;JoelRSimpson&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/joeltaylor&quot;&gt;joeltaylor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exic&quot;&gt;exic&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jony0008&quot;&gt;jony0008&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/joybinchen&quot;&gt;joybinchen&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/y-usuzumi&quot;&gt;y-usuzumi&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xuhcc&quot;&gt;xuhcc&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kirtanprht&quot;&gt;kirtanprht&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kklas&quot;&gt;kklas&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xmlangel&quot;&gt;xmlangel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/troilus&quot;&gt;troilus&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Lorinson&quot;&gt;Lorinson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lboullo0&quot;&gt;lboullo0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/dbinary&quot;&gt;dbinary&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mvonmaltitz&quot;&gt;mvonmaltitz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mlkood&quot;&gt;mlkood&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Marmo&quot;&gt;Marmo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/freaktechnik&quot;&gt;freaktechnik&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mgroth0&quot;&gt;mgroth0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/silentmatt&quot;&gt;silentmatt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MichipX&quot;&gt;MichipX&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MrTraduttore&quot;&gt;MrTraduttore&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/NJannasch&quot;&gt;NJannasch&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ouvill&quot;&gt;Ouvill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/shorty2380&quot;&gt;shorty2380&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rakleed&quot;&gt;Rakleed&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Diadlo&quot;&gt;Diadlo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/R-L-T-Y&quot;&gt;R-L-T-Y&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rajprakash00&quot;&gt;rajprakash00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RedDocMD&quot;&gt;RedDocMD&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/reinhart1010&quot;&gt;reinhart1010&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ruzaq&quot;&gt;ruzaq&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SamuelBlickle&quot;&gt;SamuelBlickle&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bronson&quot;&gt;bronson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/semperor&quot;&gt;semperor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sinkuu&quot;&gt;sinkuu&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SFoskitt&quot;&gt;SFoskitt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kcrt&quot;&gt;kcrt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xissy&quot;&gt;xissy&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Tekki&quot;&gt;Tekki&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/TheoDutch&quot;&gt;TheoDutch&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tbroadley&quot;&gt;tbroadley&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Kriechi&quot;&gt;Kriechi&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tkilaker&quot;&gt;tkilaker&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tcyrus&quot;&gt;tcyrus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tobias-grasse&quot;&gt;tobias-grasse&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/strobeltobias&quot;&gt;strobeltobias&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tbergeron&quot;&gt;tbergeron&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ullas-Aithal&quot;&gt;Ullas-Aithal&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MyTheValentinus&quot;&gt;MyTheValentinus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/WisdomCode&quot;&gt;WisdomCode&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xsak&quot;&gt;xsak&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ymitsos&quot;&gt;ymitsos&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jyuvaraj03&quot;&gt;jyuvaraj03&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kowalskidev&quot;&gt;kowalskidev&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/abolishallprivateproperty&quot;&gt;abolishallprivateproperty&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/aerotog&quot;&gt;aerotog&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/anihm136&quot;&gt;anihm136&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/boring10&quot;&gt;boring10&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chenlhlinux&quot;&gt;chenlhlinux&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/cybertramp&quot;&gt;cybertramp&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/delta-emil&quot;&gt;delta-emil&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/doc75&quot;&gt;doc75&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ebayer&quot;&gt;ebayer&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/espinosa&quot;&gt;espinosa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exponentactivity&quot;&gt;exponentactivity&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exprez135&quot;&gt;exprez135&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fab4x&quot;&gt;fab4x&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fabianski7&quot;&gt;fabianski7&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rasperepodvipodvert&quot;&gt;rasperepodvipodvert&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gasolin&quot;&gt;gasolin&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/githubaccount073&quot;&gt;githubaccount073&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/hydrandt&quot;&gt;hydrandt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jabdoa2&quot;&gt;jabdoa2&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/johanvanheusden&quot;&gt;johanvanheusden&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/krzysiekwie&quot;&gt;krzysiekwie&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lighthousebulb&quot;&gt;lighthousebulb&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/luzpaz&quot;&gt;luzpaz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nmiquan&quot;&gt;nmiquan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nullpointer666&quot;&gt;nullpointer666&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/oscaretu&quot;&gt;oscaretu&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daehruoydeef&quot;&gt;daehruoydeef&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/pensierocrea&quot;&gt;pensierocrea&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rhtenhove&quot;&gt;rhtenhove&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rikanotank1&quot;&gt;rikanotank1&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rnbastos&quot;&gt;rnbastos&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/simonsan&quot;&gt;simonsan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/stellarpower&quot;&gt;stellarpower&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sumomo-99&quot;&gt;sumomo-99&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/taw00&quot;&gt;taw00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tcassaert&quot;&gt;tcassaert&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/vicoutorama&quot;&gt;vicoutorama&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xcffl&quot;&gt;xcffl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zaoyifan&quot;&gt;zaoyifan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zen-quo&quot;&gt;zen-quo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xcession&quot;&gt;xcession&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/paventyang&quot;&gt;paventyang&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zhangmx&quot;&gt;zhangmx&lt;/a&gt; | | | |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Known bugs&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resources larger than 10 MB are not currently supported on mobile as they can crash the application.&lt;/li&gt; 
 &lt;li&gt;Non-alphabetical characters such as Chinese or Arabic might create glitches in the terminal on Windows. This is a limitation of the current Windows console.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2016-2020 Laurent Cozic&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simondevyoutube/MinecraftClone</title>
      <link>https://github.com/simondevyoutube/MinecraftClone</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>ProjectOpenSea/opensea-creatures</title>
      <link>https://github.com/ProjectOpenSea/opensea-creatures</link>
      <description>&lt;p&gt;Example non-fungible collectible, to demonstrate OpenSea integration&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenSea Creatures - Starter ERC721, ERC1155, and factory contracts&lt;/h2&gt; 
&lt;p&gt;What&#39;s included:&lt;/p&gt; 
&lt;h3&gt;Sample ERC721/ERC1155 Contracts&lt;/h3&gt; 
&lt;p&gt;This includes a very simple sample ERC721 / ERC1155 for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace. We include a script for minting the items.&lt;/p&gt; 
&lt;p&gt;Additionally, this contract whitelists the proxy accounts of OpenSea users so that they are automatically able to trade the ERC721 item on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items. (Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so)&lt;/p&gt; 
&lt;h3&gt;Factory Contracts&lt;/h3&gt; 
&lt;p&gt;In addition to these template 721/1155 contracts, we provide sample factory contracts for running gas-free presales of items that haven&#39;t been minted yet. See https://docs.opensea.io/docs/opensea-initial-item-sale-tutorial for more info.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you run into an error while building the dependencies and you&#39;re on a Mac, run the code below, remove your &lt;code&gt;node_modules&lt;/code&gt; folder, and do a fresh &lt;code&gt;yarn install&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xcode-select --install # Install Command Line Tools if you haven&#39;t already.
sudo xcode-select --switch /Library/Developer/CommandLineTools # Enable command line tools
sudo npm explore npm -g -- npm install node-gyp@latest # Update node-gyp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;To access a Rinkeby testnet node, you&#39;ll need to sign up for &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy&lt;/a&gt; and get a free API key. Click &quot;View Key&quot; and then copy the part of the URL after &lt;code&gt;v2/&lt;/code&gt;. a. You can use &lt;a href=&quot;https://infura.io&quot;&gt;Infura&lt;/a&gt; if you want as well. Just change &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; below to &lt;code&gt;INFURA_KEY&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your Metamask wallet (make sure you&#39;re using a Metamask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;your_alchemy_project_id&amp;gt;&quot;
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_CREATURES_SALE=1 yarn truffle deploy --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Minting tokens.&lt;/h3&gt; 
&lt;p&gt;After deploying to the Rinkeby network, there will be a contract on Rinkeby that will be viewable on &lt;a href=&quot;https://rinkeby.etherscan.io&quot;&gt;Rinkeby Etherscan&lt;/a&gt;. For example, here is a &lt;a href=&quot;https://rinkeby.etherscan.io/address/0xeba05c5521a3b81e23d15ae9b2d07524bc453561&quot;&gt;recently deployed contract&lt;/a&gt;. You should set this contract address and the address of your Metamask account as environment variables when running the minting script. If a &lt;a href=&quot;https://github.com/ProjectOpenSea/opensea-creatures/blob/master/migrations/2_deploy_contracts.js#L38&quot;&gt;CreatureFactory was deployed&lt;/a&gt;, which the sample deploy steps above do, you&#39;ll need to specify its address below as it will be the owner on the NFT contract, and only it will have mint permissions. In that case, you won&#39;t need NFT_CONTRACT_ADDRESS, as all we need is the contract with mint permissions here.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export OWNER_ADDRESS=&quot;&amp;lt;my_address&amp;gt;&quot;
export NFT_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_contract_address&amp;gt;&quot;
export FACTORY_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_factory_contract_address&amp;gt;&quot;
export NETWORK=&quot;rinkeby&quot;
node scripts/mint.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Diagnosing Common Issues&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a modified version of &lt;code&gt;sell.js&lt;/code&gt; and not getting expected behavior, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; in future? If no, change it to a time in the future.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; a fractional second? If yes, round the listing time to the nearest second.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses all strings? If no, convert them to strings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses checksummed? You might need to use the checksummed version of the address.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is your computer&#39;s internal clock accurate? If no, try enabling automatic clock adjustment locally or following &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html&quot;&gt;this tutorial&lt;/a&gt; to update an Amazon EC2 instance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do you have any conflicts that result from globally installed node packages? If yes, try &lt;code&gt;yarn remove -g truffle; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are you running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;? If no, try &lt;code&gt;nvm use; rm -rf node_modules; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;About OpenSea Creature Accessories&lt;/h1&gt; 
&lt;p&gt;This is a sample ERC-1155 contract for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace for crypto collectibles. We also include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A factory contract for making sell orders for unminted items (allowing for &lt;strong&gt;gas-free and mint-free presales&lt;/strong&gt;).&lt;/li&gt; 
 &lt;li&gt;A configurable lootbox contract for selling randomized collections of ERC-1155 items.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On top of the features from the OpenSea ERC721 sample contracts above, ERC1155&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;supports multiple creators per contract, where only the creator is able to mint more copies&lt;/li&gt; 
 &lt;li&gt;supports pre-minted items for the lootbox to choose from&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuring the Lootbox&lt;/h2&gt; 
&lt;p&gt;Open CreatureAccessoryLootbox.sol&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Change &lt;code&gt;Class&lt;/code&gt; to reflect your rarity levels.&lt;/li&gt; 
 &lt;li&gt;Change &lt;code&gt;NUM_CLASSES&lt;/code&gt; to reflect how many classes you have (this gets used for sizing fixed-length arrays in Solidity)&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;constructor&lt;/code&gt;, set the &lt;code&gt;OptionSettings&lt;/code&gt; for each of your classes. To do this, as in the example, call &lt;code&gt;setOptionSettings&lt;/code&gt; with 
  &lt;ol&gt; 
   &lt;li&gt;Your option id,&lt;/li&gt; 
   &lt;li&gt;The number of items to issue when the box is opened,&lt;/li&gt; 
   &lt;li&gt;An array of probabilities (basis points, so integers out of 10,000) of receiving each class. Should add up to 10k and be descending in value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Then follow the instructions below to deploy it! Purchases will auto-open the box. If you&#39;d like to make lootboxes tradable by users (without a purchase auto-opening it), contact us at contact@opensea.io (or better yet, in &lt;a href=&quot;https://discord.gg/ga8EJbv&quot;&gt;Discord&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Why are some standard methods overridden?&lt;/h2&gt; 
&lt;p&gt;This contract overrides the &lt;code&gt;isApprovedForAll&lt;/code&gt; method in order to whitelist the proxy accounts of OpenSea users. This means that they are automatically able to trade your ERC-1155 items on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items.&lt;/p&gt; 
&lt;p&gt;Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so!&lt;/p&gt; 
&lt;h1&gt;Requirements&lt;/h1&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the steps above to get a Rinkeby node API key&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your MetaMask wallet (make sure you&#39;re using a MetaMask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;alchemy_project_id&amp;gt;&quot; # or you can use INFURA_KEY
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_ACCESSORIES_SALE=1 yarn truffle migrate --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploying to the mainnet Ethereum network.&lt;/h3&gt; 
&lt;p&gt;Make sure your wallet has at least a few dollars worth of ETH in it. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn truffle migrate --network live
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for your newly deployed contract address in the logs! 🥳&lt;/p&gt; 
&lt;h3&gt;Viewing your items on OpenSea&lt;/h3&gt; 
&lt;p&gt;OpenSea will automatically pick up transfers on your contract. You can visit an asset by going to &lt;code&gt;https://opensea.io/assets/CONTRACT_ADDRESS/TOKEN_ID&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To load all your metadata on your items at once, visit &lt;a href=&quot;https://opensea.io/get-listed&quot;&gt;https://opensea.io/get-listed&lt;/a&gt; and enter your address to load the metadata into OpenSea! You can even do this for the Rinkeby test network if you deployed there, by going to &lt;a href=&quot;https://rinkeby.opensea.io/get-listed&quot;&gt;https://rinkeby.opensea.io/get-listed&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;It doesn&#39;t compile!&lt;/h4&gt; 
&lt;p&gt;Install truffle locally: &lt;code&gt;yarn add truffle&lt;/code&gt;. Then run &lt;code&gt;yarn truffle migrate ...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also debug just the compile step by running &lt;code&gt;yarn truffle compile&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;It doesn&#39;t deploy anything!&lt;/h4&gt; 
&lt;p&gt;This is often due to the truffle-hdwallet provider not being able to connect. Go to your &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy Dashboard&lt;/a&gt; (or infura.io) and create a new project. Use your &quot;project ID&quot; as your new &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; and make sure you export that command-line variable above.&lt;/p&gt; 
&lt;h3&gt;ERC1155 Implementation&lt;/h3&gt; 
&lt;p&gt;To implement the ERC1155 standard, these contracts use the Multi Token Standard by &lt;a href=&quot;https://horizongames.net/&quot;&gt;Horizon Games&lt;/a&gt;, available on &lt;a href=&quot;https://www.npmjs.com/package/multi-token-standard&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://github.com/arcadeum/multi-token-standard&quot;&gt;github&lt;/a&gt; and also under the MIT License.&lt;/p&gt; 
&lt;h1&gt;Running Local Tests&lt;/h1&gt; 
&lt;p&gt;In one terminal window, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run ganache-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once Ganache has started, run the following in another terminal window:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run test
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>MichMich/MagicMirror</title>
      <link>https://github.com/MichMich/MagicMirror</link>
      <description>&lt;p&gt;MagicMirror² is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror² allows you to convert your hallway or bathroom mirror into your personal assistant.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MichMich/MagicMirror/master/.github/header.png&quot; alt=&quot;MagicMirror²: The open source modular smart mirror platform. &quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;MagicMirror²&lt;/strong&gt; is an open source modular smart mirror platform. With a growing list of installable modules, the &lt;strong&gt;MagicMirror²&lt;/strong&gt; allows you to convert your hallway or bathroom mirror into your personal assistant. &lt;strong&gt;MagicMirror²&lt;/strong&gt; is built by the creator of &lt;a href=&quot;https://michaelteeuw.nl/tagged/magicmirror&quot;&gt;the original MagicMirror&lt;/a&gt; with the incredible help of a &lt;a href=&quot;https://github.com/MichMich/MagicMirror/graphs/contributors&quot;&gt;growing community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MagicMirror² focuses on a modular plugin system and uses &lt;a href=&quot;https://www.electronjs.org/&quot;&gt;Electron&lt;/a&gt; as an application wrapper. So no more web server or browser installs necessary!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For the full documentation including &lt;strong&gt;&lt;a href=&quot;https://docs.magicmirror.builders/getting-started/installation.html&quot;&gt;installation instructions&lt;/a&gt;&lt;/strong&gt;, please visit our dedicated documentation website: &lt;a href=&quot;https://docs.magicmirror.builders&quot;&gt;https://docs.magicmirror.builders&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://magicmirror.builders&quot;&gt;https://magicmirror.builders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href=&quot;https://docs.magicmirror.builders&quot;&gt;https://docs.magicmirror.builders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href=&quot;https://forum.magicmirror.builders&quot;&gt;https://forum.magicmirror.builders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/J5BAtvx&quot;&gt;https://discord.gg/J5BAtvx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog: &lt;a href=&quot;https://michaelteeuw.nl/tagged/magicmirror&quot;&gt;https://michaelteeuw.nl/tagged/magicmirror&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Donations: &lt;a href=&quot;https://magicmirror.builders/#donate&quot;&gt;https://magicmirror.builders/#donate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing Guidelines&lt;/h2&gt; 
&lt;p&gt;Contributions of all kinds are welcome, not only in the form of code but also with regards bug reports and documentation. For the full contribution guidelines, check out: &lt;a href=&quot;https://docs.magicmirror.builders/getting-started/contributing.html&quot;&gt;https://docs.magicmirror.builders/getting-started/contributing.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Enjoying MagicMirror? Consider a donation!&lt;/h2&gt; 
&lt;p&gt;MagicMirror² is opensource and free. That doesn&#39;t mean we don&#39;t need any money.&lt;/p&gt; 
&lt;p&gt;Please consider a donation to help us cover the ongoing costs like webservers and email services. If we receive enough donations we might even be able to free up some working hours and spend some extra time improving the MagicMirror² core.&lt;/p&gt; 
&lt;p&gt;To donate, please follow &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=G5D8E9MR5DTD2&amp;amp;source=url&quot;&gt;this&lt;/a&gt; link.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>BMSVieira/moovie.js</title>
      <link>https://github.com/BMSVieira/moovie.js</link>
      <description>&lt;p&gt;Movie focused HTML5 Player&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;moovie.js - Movie focused HTML5 Player&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;◼️ Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔧 Fully customizable&lt;/li&gt; 
 &lt;li&gt;💎 Built-in caption offset adjust on the fly&lt;/li&gt; 
 &lt;li&gt;🌠 Adjust speed on the fly&lt;/li&gt; 
 &lt;li&gt;🎬 Built-in support for &lt;code&gt;.vtt&lt;/code&gt; and &lt;code&gt;.srt&lt;/code&gt; caption files&lt;/li&gt; 
 &lt;li&gt;🖊 Add tracks/captions dynamically&lt;/li&gt; 
 &lt;li&gt;🛠 Standardized events / shortcuts / API&lt;/li&gt; 
 &lt;li&gt;🖌 Caption customization&lt;/li&gt; 
 &lt;li&gt;💪 No dependencies, built with VanillaJS&lt;/li&gt; 
 &lt;li&gt;🌎 Tested in all modern browsers&lt;/li&gt; 
 &lt;li&gt;💻 Responsive&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;◼️ Demo:&lt;/h2&gt; 
&lt;p&gt;https://bmsvieira.github.io/moovie.js/&lt;/p&gt; 
&lt;h2&gt;◼️ Installation:&lt;/h2&gt; 
&lt;p&gt;1 - Include JavaScript Source.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script src=&quot;path/to/moovie.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;2 - Include Styles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/moovie.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;4 - Set HTML.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;video id=&quot;example&quot; poster=&quot;&amp;lt;&amp;lt;path-to-poster&amp;gt;&amp;gt;&quot;&amp;gt;
  &amp;lt;source src=&quot;&amp;lt;&amp;lt;path-to-file.mp4&amp;gt;&amp;gt;&quot; type=&quot;video/mp4&quot;&amp;gt;
  &amp;lt;track kind=&quot;captions&quot; label=&quot;Portuguese&quot; srclang=&quot;pt&quot; src=&quot;&amp;lt;&amp;lt;path-to-caption.vtt&amp;gt;&amp;gt;&quot;&amp;gt;
  &amp;lt;track kind=&quot;captions&quot; label=&quot;English&quot; srclang=&quot;en&quot; src=&quot;&amp;lt;&amp;lt;path-to-caption.vtt&amp;gt;&amp;gt;&quot;&amp;gt;
  Your browser does not support the video tag.
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;3 - Initilize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, function() {
   var demo = new Moovie({
     selector: &quot;#example&quot;,
     dimensions: {
          width: &quot;100%&quot;
     }
   });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ CDN:&lt;/h2&gt; 
&lt;p&gt;You can use our CDN (provided by JSDelivr) for the JavaScript and CSS files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;// Javascript
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/BMSVieira/moovie.js@latest/js/moovie.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

// CSS
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/BMSVieira/moovie.js@latest/css/moovie.min.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ Captions:&lt;/h2&gt; 
&lt;p&gt;Currently it has full support for &lt;code&gt;WebVTT(.vtt)&lt;/code&gt; and &lt;code&gt;SubRip(.srt)&lt;/code&gt;. 
 &lt;!-- raw HTML omitted --&gt;To add a track use the standard html as the example below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;track kind=&quot;captions&quot; label=&quot;&amp;lt;&amp;lt;Language&amp;gt;&amp;gt;&quot; srclang=&quot;&amp;lt;&amp;lt;SourceLang&amp;gt;&amp;gt;&quot; src=&quot;&amp;lt;&amp;lt;path-to-caption.vtt/.srt&amp;gt;&amp;gt;&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ Caption Offset Adjust:&lt;/h2&gt; 
&lt;p&gt;It is possible to adjust the offset by a total of &lt;code&gt;10 seconds&lt;/code&gt; (-5 / +5) on the fly.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;◼️ Shortcuts:&lt;/h2&gt; 
&lt;p&gt;A player will bind the following keyboard shortcuts when it has focus.&lt;/p&gt; 
&lt;p&gt;| Key | Description | | --- | --- | | &lt;code&gt;SpaceBar&lt;/code&gt; | Toggle Play| | &lt;code&gt;K&lt;/code&gt; | Toggle Play | | &lt;code&gt;F&lt;/code&gt; | Toggle Fullscreen| | &lt;code&gt;ArrowRight&lt;/code&gt; | Forward &lt;code&gt;5s&lt;/code&gt; | | &lt;code&gt;ArrowLeft&lt;/code&gt; | Backward &lt;code&gt;5s&lt;/code&gt; | | &lt;code&gt;M&lt;/code&gt; | Toggle Mute | | &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;PageUp&lt;/code&gt;| Increase caption&#39;s size| | &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;PageDown&lt;/code&gt;| Decrease caption&#39;s size| | &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;ArrowUp&lt;/code&gt;| Move caption up| | &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;ArrowDown&lt;/code&gt;| Move caption down|&lt;/p&gt; 
&lt;h2&gt;◼️ API &amp;gt; Methods:&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;togglePlay:
 &lt;!-- raw HTML omitted --&gt; Play/Pause video&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;demo.togglePlay();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;toggleSubtitles:
 &lt;!-- raw HTML omitted --&gt; Enable/Disable subtitles&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;demo.toggleSubtitles();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;toggleFullscreen:
 &lt;!-- raw HTML omitted --&gt; Enable/Disable fullscreen&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;demo.toggleFullscreen();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;addTrack:
 &lt;!-- raw HTML omitted --&gt; Add multiple/single captions to player&lt;/p&gt; 
&lt;p&gt;| Name | Default | Description | | --- | --- | --- | | &lt;code&gt;label&lt;/code&gt; | &lt;code&gt;New Subtitle&lt;/code&gt; | Name of the new subtitle in the caption box | | &lt;code&gt;srclang&lt;/code&gt; | &lt;code&gt;New&lt;/code&gt; | Country designation | | &lt;code&gt;src&lt;/code&gt; | &lt;code&gt;---&lt;/code&gt; | Path to the file 
 &lt;!-- raw HTML omitted --&gt;[Can not be empty]
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;demo.addTrack({
  options : {
        0: {
            label: &#39;Italian&#39;,
            srclang: &quot;it&quot;,
            src: &quot;&amp;lt;&amp;lt;path-to-file.vtt/.srt&quot;
        },
        1: {
            label: &#39;Spanish&#39;,
            srclang: &quot;es&quot;,
            src: &quot;&amp;lt;&amp;lt;path-to-file.vtt/.srt&quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ API &amp;gt; Gets:&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Returns player DOM element
demo.playerElement

// Returns a boolean indicating if the current player is playing.
demo.playing

// Returns a boolean indicating if the current player is paused.
demo.paused

// Returns a boolean indicating if the current player is stopped.
demo.stopped  

// Returns a boolean indicating if the current player has finished playback.
demo.ended    

// Returns currentTime of the player. 
demo.currentTime

// Returns the duration for the current media.
demo.duration

// Returns a boolean indicating if the current player is seeking.
demo.seeking

// Returns the volume of the player.
demo.volume

// Returns a boolean indicating if the current player is muted.
demo.muted

// Returns current playRate 
demo.speed

// Returns mininum speed allowed
demo.minimumSpeed

// Returns maximum speed allowed
demo.maximumSpeed

// Returns mininum caption offset allowed
demo.minimumOffset

// Returns maximum caption offset allowed
demo.maximumOffset

// Returns current caption offset
demo.captionOffset

// Returns current source of the player
demo.source
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ API &amp;gt; Sets:&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Set currentTime to given number(seconds)
demo.currentTime = 60

// Set player&#39;s volume to given number (0.5 is half the volume)
demo.volume = 0.5

// Set player&#39;s playbackRate to given number (0.1 to 8)
demo.speed = 2

// Set player&#39;s caption offset to given number (-5 to 5)
demo.captionOffset = 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;◼️ Settings:&lt;/h2&gt; 
&lt;p&gt;| Option | Type | Description | | --- | --- | --- | | &lt;code&gt;selector&lt;/code&gt; | &lt;code&gt;String&lt;/code&gt; | Specify ID of the element| | &lt;code&gt;dimensions&lt;/code&gt; &amp;gt; &lt;code&gt;width&lt;/code&gt; | &lt;code&gt;string&lt;/code&gt; | Width of the player (you must specify the type: &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, etc..)| | &lt;code&gt;config&lt;/code&gt; &amp;gt; &lt;code&gt;storage&lt;/code&gt; &amp;gt; &lt;code&gt;captionOffset&lt;/code&gt;| &lt;code&gt;boolean&lt;/code&gt; | Indicates whether caption&#39;s offset adjust will be stored or not| | &lt;code&gt;config&lt;/code&gt; &amp;gt; &lt;code&gt;storage&lt;/code&gt; &amp;gt; &lt;code&gt;playrateSpeed&lt;/code&gt;| &lt;code&gt;boolean&lt;/code&gt; | Indicates whether Play Speed will be stored or not| | &lt;code&gt;config&lt;/code&gt; &amp;gt; &lt;code&gt;storage&lt;/code&gt; &amp;gt; &lt;code&gt;captionSize&lt;/code&gt;| &lt;code&gt;boolean&lt;/code&gt; | Indicates whether caption&#39;s size will be stored or not| | &lt;code&gt;config&lt;/code&gt; &amp;gt; &lt;code&gt;storage&lt;/code&gt; &amp;gt; &lt;code&gt;captionPosition&lt;/code&gt;| &lt;code&gt;boolean&lt;/code&gt; | Indicates whether caption&#39;s position will be stored or not|&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Full Example:
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, function() {
  var demo = new Moovie({
    selector: &quot;#example&quot;,
    dimensions: {
         width: &quot;100%&quot;
    },
    config: {
        storage: {
           captionOffset: false,
           playrateSpeed: false,
           captionSize: false,
           captionPosition: false
        }
    }
  });
});
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>KikiLetGo/DimReduce</title>
      <link>https://github.com/KikiLetGo/DimReduce</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DimReduce&lt;/h1&gt; 
&lt;p&gt;基于希尔伯特曲线实现的《三体》中关于降维打击一种可视化方案&lt;/p&gt; 
&lt;h1&gt;运行方式&lt;/h1&gt; 
&lt;p&gt;首先安装nodejs环境，然后在当前目录下：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;node server.js&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;浏览器输入:http://localhost&lt;/p&gt; 
&lt;p&gt;就可以看见啦&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tobspr/shapez.io</title>
      <link>https://github.com/tobspr/shapez.io</link>
      <description>&lt;p&gt;shapez.io is an open source base building game inspired by factorio! Available on web &amp; desktop&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shapez.io&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This is the source code for shapez.io, an open source base building game inspired by Factorio. Your goal is to produce shapes by cutting, rotating, merging and painting parts of shapes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trello.com/b/ISQncpJP/shapezio&quot;&gt;Trello Board &amp;amp; Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shapez.io&quot;&gt;Free web version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tobspr.itch.io/shapezio&quot;&gt;itch.io Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://steam.shapez.io&quot;&gt;Steam Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/invite/HN7EVzV&quot;&gt;Official Discord&lt;/a&gt; &amp;lt;- &lt;em&gt;Highly recommended to join!&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting issues, suggestions, feedback, bugs&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Ask in &lt;code&gt;#bugs&lt;/code&gt; / &lt;code&gt;#feedback&lt;/code&gt; / &lt;code&gt;#questions&lt;/code&gt; on the &lt;a href=&quot;https://discord.com/invite/HN7EVzV&quot;&gt;Official Discord&lt;/a&gt; if you are not entirely sure if it&#39;s a bug etc.&lt;/li&gt; 
 &lt;li&gt;Check out the trello board: https://trello.com/b/ISQncpJP/shapezio&lt;/li&gt; 
 &lt;li&gt;See if it&#39;s already there - If so, vote for it, done. I will see it. (You have to be signed in on trello)&lt;/li&gt; 
 &lt;li&gt;If not, check if it&#39;s already reported here: https://github.com/tobspr/shapez.io/issues&lt;/li&gt; 
 &lt;li&gt;If not, file a new issue here: https://github.com/tobspr/shapez.io/issues/new&lt;/li&gt; 
 &lt;li&gt;I will then have a look (This can take days or weeks) and convert it to trello, and comment with the link. You can then vote there ;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure &lt;code&gt;ffmpeg&lt;/code&gt; is on your path&lt;/li&gt; 
 &lt;li&gt;Install Node.js and Yarn&lt;/li&gt; 
 &lt;li&gt;Install Java (required for textures)&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; in the root folder&lt;/li&gt; 
 &lt;li&gt;Cd into &lt;code&gt;gulp&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; and then &lt;code&gt;yarn gulp&lt;/code&gt; - it should now open in your browser&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt;: This will produce a debug build with several debugging flags enabled. If you want to disable them, modify &lt;a href=&quot;https://raw.githubusercontent.com/tobspr/shapez.io/master/src/js/core/config.js&quot;&gt;&lt;code&gt;src/js/core/config.js&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Build Online with one-click setup&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.gitpod.io/&quot;&gt;Gitpod&lt;/a&gt; (an Online Open Source VS Code-like IDE which is free for Open Source) for working on issues and making PRs to this project. With a single click it will start a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the &lt;code&gt;shapez.io&lt;/code&gt; repo.&lt;/li&gt; 
 &lt;li&gt;install all of the dependencies.&lt;/li&gt; 
 &lt;li&gt;start &lt;code&gt;gulp&lt;/code&gt; in &lt;code&gt;gulp/&lt;/code&gt; directory.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Helping translate&lt;/h2&gt; 
&lt;p&gt;Please checkout the &lt;a href=&quot;https://raw.githubusercontent.com/tobspr/shapez.io/master/translations/&quot;&gt;Translations readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Since this game is in the more or less early development, I will only accept pull requests which add an immediate benefit. Please understand that low quality PR&#39;s might be closed by me with a short comment explaining why.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you want to add a new building, please understand that I can not simply add every building to the game!&lt;/strong&gt; I recommend to talk to me before implementing anything, to make sure its actually useful. Otherwise there is a high chance of your PR not getting merged.&lt;/p&gt; 
&lt;p&gt;If you want to add a new feature or in generally contribute I recommend to get in touch with me on Discord:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Code&lt;/h3&gt; 
&lt;p&gt;The game is based on a custom engine which itself is based on the YORG.io 3 game engine (Actually it shares almost the same core). The code within the engine is relatively clean with some code for the actual game on top being hacky.&lt;/p&gt; 
&lt;p&gt;This project is based on ES5. Some ES2015 features are used but most of them are too slow, especially when polyfilled. For example, &lt;code&gt;Array.prototype.forEach&lt;/code&gt; is only used within non-critical loops since its slower than a plain for loop.&lt;/p&gt; 
&lt;h4&gt;Adding a new component&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create the component file in &lt;code&gt;src/js/game/components/&amp;lt;name_lowercase&amp;gt;.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create a component class (e.g. &lt;code&gt;MyFancyComponent&lt;/code&gt;) which &lt;code&gt;extends Component&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create a &lt;code&gt;static getId()&lt;/code&gt; method which should return the &lt;code&gt;PascalCaseName&lt;/code&gt; without component (e.g. &lt;code&gt;MyFancy&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;If any data needs to be persisted, create a &lt;code&gt;static getSchema()&lt;/code&gt; which should return the properties to be saved (See other components)&lt;/li&gt; 
 &lt;li&gt;Add a constructor. &lt;strong&gt;The constructor must be called with optional parameters only!&lt;/strong&gt; &lt;code&gt;new MyFancyComponent({})&lt;/code&gt; should always work.&lt;/li&gt; 
 &lt;li&gt;Add any props you need in the constructor.&lt;/li&gt; 
 &lt;li&gt;Add the component in &lt;code&gt;src/js/game/component_registry.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add the component in &lt;code&gt;src/js/game/entity_components.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Done! You can use your component now&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Adding a new building&lt;/h4&gt; 
&lt;p&gt;(The easiest way is to copy an existing building)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create your building in &lt;code&gt;src/js/game/buildings/&amp;lt;my_building.js&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create the building meta class, e.g. &lt;code&gt;MetaMyFancyBuilding extends MetaBuilding&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Override the methods from MetaBuilding you want to override.&lt;/li&gt; 
 &lt;li&gt;Most important is &lt;code&gt;setupEntityComponents&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add the building to &lt;code&gt;src/js/game/meta_building_registry.js&lt;/code&gt;: You need to register it on the registry, and also call &lt;code&gt;registerBuildingVariant&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Add the building to the right toolbar, e.g. &lt;code&gt;src/js/game/hud/parts/buildings_toolbar.js&lt;/code&gt;:&lt;code&gt;supportedBuildings&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add a keybinding for the building in &lt;code&gt;src/js/game/key_action_mapper.js&lt;/code&gt; in &lt;code&gt;KEYMAPPINGS.buildings&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;translations/base-en.yaml&lt;/code&gt; add it to two sections: &lt;code&gt;buildings.[my_building].XXX&lt;/code&gt; (See other buildings) and also &lt;code&gt;keybindings.mappings.[my_building]&lt;/code&gt;. Be sure to do it the same way as other buildings do!&lt;/li&gt; 
 &lt;li&gt;Create a icon (128x128, &lt;a href=&quot;https://github.com/tobspr/shapez.io-artwork/blob/master/ui/toolbar-icons.psd&quot;&gt;prefab&lt;/a&gt;) for your building and save it in &lt;code&gt;res/ui/buildings_icons&lt;/code&gt; with the id of your building&lt;/li&gt; 
 &lt;li&gt;Create a tutorial image (600x600) for your building and save it in &lt;code&gt;res/ui/building_tutorials&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;src/css/resources.scss&lt;/code&gt; add your building to &lt;code&gt;$buildings&lt;/code&gt; as well as &lt;code&gt;$buildingAndVariants&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Done! Optional: Add a new reward for unlocking your building at some point.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Adding a new game system&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create the class in &lt;code&gt;src/js/game/systems/&amp;lt;system_name&amp;gt;.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Derive it from &lt;code&gt;GameSystemWithFilter&lt;/code&gt; if you want it to work on certain entities only which have the given components. Otherwise use &lt;code&gt;GameSystem&lt;/code&gt; to do more generic stuff.&lt;/li&gt; 
 &lt;li&gt;Implement the &lt;code&gt;update()&lt;/code&gt; method.&lt;/li&gt; 
 &lt;li&gt;Add the system in &lt;code&gt;src/js/game/game_system_manager.js&lt;/code&gt; (To &lt;code&gt;this.systems&lt;/code&gt; and also call &lt;code&gt;add&lt;/code&gt; in the &lt;code&gt;internalInitSystems()&lt;/code&gt; method)&lt;/li&gt; 
 &lt;li&gt;If your system should draw stuff, this is a bit more complicated. Have a look at existing systems on how they do it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Checklist for a new building / testing it&lt;/h4&gt; 
&lt;p&gt;This is a quick checklist, if a new building is added this points should be fulfilled:&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;The translation for all variants is done and finalized&lt;/li&gt; 
 &lt;li&gt;The artwork (regular sprite) is finalized&lt;/li&gt; 
 &lt;li&gt;The blueprint sprite has been generated and is up to date&lt;/li&gt; 
 &lt;li&gt;The building has been added to the appropriate toolbar&lt;/li&gt; 
 &lt;li&gt;The building has a keybinding which makes sense&lt;/li&gt; 
 &lt;li&gt;The building has a reward assigned and is unlocked at a meaningful point&lt;/li&gt; 
 &lt;li&gt;The reward for the building has a proper translation&lt;/li&gt; 
 &lt;li&gt;The reward for the building has a proper image&lt;/li&gt; 
 &lt;li&gt;The building has a proper tutorial image assigned&lt;/li&gt; 
 &lt;li&gt;The buliding has a proper toolbar icon&lt;/li&gt; 
 &lt;li&gt;The reward requires a proper shape&lt;/li&gt; 
 &lt;li&gt;The building has a proper silhouette color&lt;/li&gt; 
 &lt;li&gt;The building has a proper matrix for being rendered on the minimap&lt;/li&gt; 
 &lt;li&gt;The building has proper statistics in the dialog&lt;/li&gt; 
 &lt;li&gt;The building properly contributes to the shapes produced analytics&lt;/li&gt; 
 &lt;li&gt;The building is properly persisted in the savegame&lt;/li&gt; 
 &lt;li&gt;The building is explained properly, ideally via an interactive tutorial&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Assets&lt;/h3&gt; 
&lt;p&gt;For most assets I use Adobe Photoshop, you can find them 
 &lt;!-- raw HTML omitted --&gt;here
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;p&gt;All assets will be automatically rebuilt into the atlas once changed (Thanks to dengr1065!)&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>gothinkster/react-redux-realworld-example-app</title>
      <link>https://github.com/gothinkster/react-redux-realworld-example-app</link>
      <description>&lt;p&gt;Exemplary real world application built with React + Redux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/react-redux-realworld-example-app/master/project-logo.png&quot; alt=&quot;React + Redux Example App&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://realworld.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/realworld-frontend-%23783578.svg&quot; alt=&quot;RealWorld Frontend&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;React + Redux codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the &lt;a href=&quot;https://github.com/gothinkster/realworld-example-apps&quot;&gt;RealWorld&lt;/a&gt; spec and API.&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&amp;nbsp;&amp;nbsp;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://react-redux.realworld.io&quot;&gt;Demo&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/gothinkster/realworld&quot;&gt;RealWorld&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Originally created for this &lt;a href=&quot;https://github.com/reactjs/redux/issues/1353&quot;&gt;GH issue&lt;/a&gt;. The codebase is now feature complete; please submit bug fixes via pull requests &amp;amp; feedback via issues.&lt;/p&gt; 
&lt;p&gt;We also have notes in &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app/wiki&quot;&gt;&lt;strong&gt;our wiki&lt;/strong&gt;&lt;/a&gt; about how the various patterns used in this codebase and how they work (thanks &lt;a href=&quot;https://github.com/thejmazz&quot;&gt;@thejmazz&lt;/a&gt;!)&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;You can view a live demo over at https://react-redux.realworld.io/&lt;/p&gt; 
&lt;p&gt;To get the frontend running locally:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone this repo&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; to install all req&#39;d dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; to start the local server (this project uses create-react-app)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local web server will use port 4100 instead of standard React&#39;s port 3000 to prevent conflicts with some backends like Node or Rails. You can configure port in scripts section of &lt;code&gt;package.json&lt;/code&gt;: we use &lt;a href=&quot;https://github.com/kentcdodds/cross-env&quot;&gt;cross-env&lt;/a&gt; to set environment variable PORT for React scripts, this is Windows-compatible way of setting environment variables.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can add &lt;code&gt;.env&lt;/code&gt; file in the root folder of project to set environment variables (use PORT to change webserver&#39;s port). This file will be ignored by git, so it is suitable for API keys and other sensitive stuff. Refer to &lt;a href=&quot;https://github.com/motdotla/dotenv&quot;&gt;dotenv&lt;/a&gt; and &lt;a href=&quot;https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-development-environment-variables-in-env&quot;&gt;React&lt;/a&gt; documentation for more details. Also, please remove setting variable via script section of &lt;code&gt;package.json&lt;/code&gt; - &lt;code&gt;dotenv&lt;/code&gt; never override variables if they are already set.&lt;/p&gt; 
&lt;h3&gt;Making requests to the backend API&lt;/h3&gt; 
&lt;p&gt;For convenience, we have a live API server running at https://conduit.productionready.io/api for the application to make requests against. You can view &lt;a href=&quot;https://github.com/GoThinkster/productionready/blob/master/api&quot;&gt;the API spec here&lt;/a&gt; which contains all routes &amp;amp; responses for the server.&lt;/p&gt; 
&lt;p&gt;The source code for the backend server (available for Node, Rails and Django) can be found in the &lt;a href=&quot;https://github.com/gothinkster/realworld&quot;&gt;main RealWorld repo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to change the API URL to a local server, simply edit &lt;code&gt;src/agent.js&lt;/code&gt; and change &lt;code&gt;API_ROOT&lt;/code&gt; to the local server&#39;s URL (i.e. &lt;code&gt;http://localhost:3000/api&lt;/code&gt;)&lt;/p&gt; 
&lt;h2&gt;Functionality overview&lt;/h2&gt; 
&lt;p&gt;The example application is a social blogging site (i.e. a Medium.com clone) called &quot;Conduit&quot;. It uses a custom API for all requests, including authentication. You can view a live demo over at https://redux.productionready.io/&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;General functionality:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Authenticate users via JWT (login/signup pages + logout button on settings page)&lt;/li&gt; 
 &lt;li&gt;CRU* users (sign up &amp;amp; settings page - no deleting required)&lt;/li&gt; 
 &lt;li&gt;CRUD Articles&lt;/li&gt; 
 &lt;li&gt;CR*D Comments on articles (no updating required)&lt;/li&gt; 
 &lt;li&gt;GET and display paginated lists of articles&lt;/li&gt; 
 &lt;li&gt;Favorite articles&lt;/li&gt; 
 &lt;li&gt;Follow other users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;The general page breakdown looks like this:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Home page (URL: /#/ ) 
  &lt;ul&gt; 
   &lt;li&gt;List of tags&lt;/li&gt; 
   &lt;li&gt;List of articles pulled from either Feed, Global, or by Tag&lt;/li&gt; 
   &lt;li&gt;Pagination for list of articles&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Sign in/Sign up pages (URL: /#/login, /#/register ) 
  &lt;ul&gt; 
   &lt;li&gt;Use JWT (store the token in localStorage)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Settings page (URL: /#/settings )&lt;/li&gt; 
 &lt;li&gt;Editor page to create/edit articles (URL: /#/editor, /#/editor/article-slug-here )&lt;/li&gt; 
 &lt;li&gt;Article page (URL: /#/article/article-slug-here ) 
  &lt;ul&gt; 
   &lt;li&gt;Delete article button (only shown to article&#39;s author)&lt;/li&gt; 
   &lt;li&gt;Render markdown from server client side&lt;/li&gt; 
   &lt;li&gt;Comments section at bottom of page&lt;/li&gt; 
   &lt;li&gt;Delete comment button (only shown to comment&#39;s author)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Profile page (URL: /#/@username, /#/@username/favorites ) 
  &lt;ul&gt; 
   &lt;li&gt;Show basic user info&lt;/li&gt; 
   &lt;li&gt;List of articles populated from author&#39;s created articles or author&#39;s favorited articles&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/end.png&quot; alt=&quot;Brought to you by Thinkster&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/reactjs-interview-questions</title>
      <link>https://github.com/sudheerj/reactjs-interview-questions</link>
      <description>&lt;p&gt;List of top 500 ReactJS Interview Questions &amp; Answers....Coding exercise questions are coming soon!!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click :star:if you like the project. Pull Request are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/reactjs-interview-questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| No. | Questions | | --- | --------- | | | &lt;strong&gt;Core React&lt;/strong&gt; | |1 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react&quot;&gt;What is React?&lt;/a&gt; | |2 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react&quot;&gt;What are the major features of React?&lt;/a&gt; | |3 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx&quot;&gt;What is JSX?&lt;/a&gt; | |4 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component&quot;&gt;What is the difference between Element and Component?&lt;/a&gt; | |5 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react&quot;&gt;How to create components in React?&lt;/a&gt; | |6 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component&quot;&gt;When to use a Class Component over a Function Component?&lt;/a&gt; | |7 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-pure-components&quot;&gt;What are Pure Components?&lt;/a&gt; | |8 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-in-react&quot;&gt;What is state in React?&lt;/a&gt; | |9 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-props-in-react&quot;&gt;What are props in React?&lt;/a&gt; | |10 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-state-and-props&quot;&gt;What is the difference between state and props?&lt;/a&gt; | |11 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-we-not-update-the-state-directly&quot;&gt;Why should we not update the state directly?&lt;/a&gt; | |12 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-callback-function-as-an-argument-of-setstate&quot;&gt;What is the purpose of callback function as an argument of setState()?&lt;/a&gt; |13 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-html-and-react-event-handling&quot;&gt;What is the difference between HTML and React event handling?&lt;/a&gt; | |14 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-bind-methods-or-event-handlers-in-jsx-callbacks&quot;&gt;How to bind methods or event handlers in JSX callbacks?&lt;/a&gt; | |15 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-a-parameter-to-an-event-handler-or-callback&quot;&gt;How to pass a parameter to an event handler or callback?&lt;/a&gt; | |16 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-synthetic-events-in-react&quot;&gt;What are synthetic events in React?&lt;/a&gt; | |17 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-inline-conditional-expressions&quot;&gt;What are inline conditional expressions?&lt;/a&gt; | |18 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements&quot;&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/a&gt; | |19 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-refs&quot;&gt;What is the use of refs?&lt;/a&gt; | |20 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-refs&quot;&gt;How to create refs?&lt;/a&gt; |21 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-forward-refs&quot;&gt;What are forward refs?&lt;/a&gt; | |22 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#which-is-preferred-option-with-in-callback-refs-and-finddomnode&quot;&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/a&gt; | |23 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-string-refs-legacy&quot;&gt;Why are String Refs legacy?&lt;/a&gt; | |24 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-virtual-dom&quot;&gt;What is Virtual DOM?&lt;/a&gt; | |25 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-virtual-dom-works&quot;&gt;How Virtual DOM works?&lt;/a&gt; | |26 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-shadow-dom-and-virtual-dom&quot;&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/a&gt; | |27 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-fiber&quot;&gt;What is React Fiber?&lt;/a&gt; | |28 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-goal-of-react-fiber&quot;&gt;What is the main goal of React Fiber?&lt;/a&gt; | |29 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-controlled-components&quot;&gt;What are controlled components?&lt;/a&gt; | |30 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-uncontrolled-components&quot;&gt;What are uncontrolled components?&lt;/a&gt; | |31 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-createelement-and-cloneelement&quot;&gt;What is the difference between createElement and cloneElement?&lt;/a&gt; | |32 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-lifting-state-up-in-react&quot;&gt;What is Lifting State Up in React?&lt;/a&gt; | |33 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-phases-of-component-lifecycle&quot;&gt;What are the different phases of component lifecycle?&lt;/a&gt; | |34 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-of-react&quot;&gt;What are the lifecycle methods of React?&lt;/a&gt; | |35 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-higher-order-components&quot;&gt;What are Higher-Order components?&lt;/a&gt; | |36 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-props-proxy-for-hoc-component&quot;&gt;How to create props proxy for HOC component?&lt;/a&gt; | |37 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-context&quot;&gt;What is context?&lt;/a&gt; | |38 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-children-prop&quot;&gt;What is children prop?&lt;/a&gt; | |39 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-write-comments-in-react&quot;&gt;How to write comments in React?&lt;/a&gt; | |40 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-using-super-constructor-with-props-argument&quot;&gt;What is the purpose of using super constructor with props argument?&lt;/a&gt; | |41 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reconciliation&quot;&gt;What is reconciliation?&lt;/a&gt; | |42 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-state-with-a-dynamic-key-name&quot;&gt;How to set state with a dynamic key name?&lt;/a&gt; | |43 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-would-be-the-common-mistake-of-function-being-called-every-time-the-component-renders&quot;&gt;What would be the common mistake of function being called every time the component renders?&lt;/a&gt; | |44 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-lazy-function-supports-named-exports&quot;&gt;Is lazy function supports named exports?&lt;/a&gt; | |45 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-uses-classname-over-class-attribute&quot;&gt;Why React uses className over class attribute?&lt;/a&gt; | |46 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-fragments&quot;&gt;What are fragments?&lt;/a&gt; | |47 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-fragments-are-better-than-container-divs&quot;&gt;Why fragments are better than container divs?&lt;/a&gt; | |48 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-portals-in-react&quot;&gt;What are portals in React?&lt;/a&gt; | |49 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateless-components&quot;&gt;What are stateless components?&lt;/a&gt; | |50 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateful-components&quot;&gt;What are stateful components?&lt;/a&gt; | |51 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-apply-validation-on-props-in-react&quot;&gt;How to apply validation on props in React?&lt;/a&gt; | |52 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react&quot;&gt;What are the advantages of React?&lt;/a&gt; | |53 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-of-react&quot;&gt;What are the limitations of React?&lt;/a&gt; | |54 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-error-boundaries-in-react-v16&quot;&gt;What are error boundaries in React v16&lt;/a&gt; | |55 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-error-boundaries-handled-in-react-v15&quot;&gt;How error boundaries handled in React v15?&lt;/a&gt; | |56 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-recommended-ways-for-static-type-checking&quot;&gt;What are the recommended ways for static type checking?&lt;/a&gt; | |57 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-react-dom-package&quot;&gt;What is the use of react-dom package?&lt;/a&gt; | |58 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-render-method-of-react-dom&quot;&gt;What is the purpose of render method of react-dom?&lt;/a&gt; | |59 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reactdomserver&quot;&gt;What is ReactDOMServer?&lt;/a&gt; | |60 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-innerhtml-in-react&quot;&gt;How to use InnerHtml in React?&lt;/a&gt; | |61 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-styles-in-react&quot;&gt;How to use styles in React?&lt;/a&gt; | |62 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-events-are-different-in-react&quot;&gt;How events are different in React?&lt;/a&gt; | |63 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-setstate-in-constructor&quot;&gt;What will happen if you use setState in constructor?&lt;/a&gt; | |64 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-impact-of-indexes-as-keys&quot;&gt;What is the impact of indexes as keys?&lt;/a&gt; | |65 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-setstate-in-componentwillmount-method&quot;&gt;Is it good to use setState() in componentWillMount() method?&lt;/a&gt; | |66 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-props-in-initial-state&quot;&gt;What will happen if you use props in initial state?&lt;/a&gt; | |67 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-conditionally-render-components&quot;&gt;How do you conditionally render components?&lt;/a&gt; |68 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-be-careful-when-spreading-props-on-dom-elements&quot;&gt;Why we need to be careful when spreading props on DOM elements??&lt;/a&gt; | |69 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-use-decorators-in-react&quot;&gt;How you use decorators in React?&lt;/a&gt; | |70 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-memoize-a-component&quot;&gt;How do you memoize a component?&lt;/a&gt; | |71 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-implement-server-side-rendering-or-ssr&quot;&gt;How you implement Server-Side Rendering or SSR?&lt;/a&gt; | |72 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-enable-production-mode-in-react&quot;&gt;How to enable production mode in React?&lt;/a&gt; | |73 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-cra-and-its-benefits&quot;&gt;What is CRA and its benefits?&lt;/a&gt; | |74 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-lifecycle-methods-order-in-mounting&quot;&gt;What is the lifecycle methods order in mounting?&lt;/a&gt; | |75 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-going-to-be-deprecated-in-react-v16&quot;&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/a&gt; | |76 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromprops-lifecycle-method&quot;&gt;What is the purpose of getDerivedStateFromProps() lifecycle method?&lt;/a&gt; | |77 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getsnapshotbeforeupdate-lifecycle-method&quot;&gt;What is the purpose of getSnapshotBeforeUpdate() lifecycle method?&lt;/a&gt; | |78 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-hooks-replace-render-props-and-higher-order-components&quot;&gt;Do Hooks replace render props and higher order components?&lt;/a&gt; | |79 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-way-for-naming-components&quot;&gt;What is the recommended way for naming components?&lt;/a&gt; | |80 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-ordering-of-methods-in-component-class&quot;&gt;What is the recommended ordering of methods in component class?&lt;/a&gt; | |81 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-switching-component&quot;&gt;What is a switching component?&lt;/a&gt; | |82 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-pass-a-function-to-setstate&quot;&gt;Why we need to pass a function to setState()?&lt;/a&gt; | |83 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-strict-mode-in-react&quot;&gt;What is strict mode in React?&lt;/a&gt; | |84 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-mixins&quot;&gt;What are React Mixins?&lt;/a&gt; | |85 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-ismounted-an-anti-pattern-and-what-is-the-proper-solution&quot;&gt;Why is isMounted() an anti-pattern and what is the proper solution?&lt;/a&gt; | |86 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-pointer-events-supported-in-react&quot;&gt;What are the Pointer Events supported in React?&lt;/a&gt; | |87 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-component-names-start-with-capital-letter&quot;&gt;Why should component names start with capital letter?&lt;/a&gt; | |88 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-custom-dom-attributes-supported-in-react-v16&quot;&gt;Are custom DOM attributes supported in React v16?&lt;/a&gt; | |89 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-constructor-and-getinitialstate&quot;&gt;What is the difference between constructor and getInitialState?&lt;/a&gt; | |90 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-force-a-component-to-re-render-without-calling-setstate&quot;&gt;Can you force a component to re-render without calling setState?&lt;/a&gt; | |91 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-super-and-superprops-in-react-using-es6-classes&quot;&gt;What is the difference between super() and super(props) in React using ES6 classes?&lt;/a&gt; | |92 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-loop-inside-jsx&quot;&gt;How to loop inside JSX?&lt;/a&gt; | |93 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-props-in-attribute-quotes&quot;&gt;How do you access props in attribute quotes?&lt;/a&gt; | |94 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-proptype-array-with-shape&quot;&gt;What is React PropType array with shape?&lt;/a&gt; | |95 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-conditionally-apply-class-attributes&quot;&gt;How to conditionally apply class attributes?&lt;/a&gt; | |96 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-reactdom&quot;&gt;What is the difference between React and ReactDOM?&lt;/a&gt; | |97 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-reactdom-is-separated-from-react&quot;&gt;Why ReactDOM is separated from React?&lt;/a&gt; | |98 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-react-label-element&quot;&gt;How to use React label element?&lt;/a&gt; | |99 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-combine-multiple-inline-style-objects&quot;&gt;How to combine multiple inline style objects?&lt;/a&gt; | |100| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-re-render-the-view-when-the-browser-is-resized&quot;&gt;How to re-render the view when the browser is resized?&lt;/a&gt; |101| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-setstate-and-replacestate-methods&quot;&gt;What is the difference between setState and replaceState methods?&lt;/a&gt; | |102| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-listen-to-state-changes&quot;&gt;How to listen to state changes?&lt;/a&gt; | |103| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-approach-of-removing-an-array-element-in-react-state&quot;&gt;What is the recommended approach of removing an array element in react state?&lt;/a&gt; | |104| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-rendering-html&quot;&gt;Is it possible to use React without rendering HTML?&lt;/a&gt; | |105| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pretty-print-json-with-react&quot;&gt;How to pretty print JSON with React?&lt;/a&gt; | |106| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-cant-update-props-in-react&quot;&gt;Why you can&#39;t update props in React?&lt;/a&gt; | |107| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-focus-an-input-element-on-page-load&quot;&gt;How to focus an input element on page load?&lt;/a&gt; | |108| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-ways-of-updating-objects-in-state&quot;&gt;What are the possible ways of updating objects in state?&lt;/a&gt; | |110| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-can-we-find-the-version-of-react-at-runtime-in-the-browser&quot;&gt;How can we find the version of React at runtime in the browser?&lt;/a&gt; | |111| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-approaches-to-include-polyfills-in-your-create-react-app&quot;&gt;What are the approaches to include polyfills in your create-react-app?&lt;/a&gt; | |112| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-https-instead-of-http-in-create-react-app&quot;&gt;How to use https instead of http in create-react-app?&lt;/a&gt; | |113| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-avoid-using-relative-path-imports-in-create-react-app&quot;&gt;How to avoid using relative path imports in create-react-app?&lt;/a&gt; | |114| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-google-analytics-for-react-router&quot;&gt;How to add Google Analytics for react-router?&lt;/a&gt; | |115| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-update-a-component-every-second&quot;&gt;How to update a component every second?&lt;/a&gt; | |116| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react&quot;&gt;How do you apply vendor prefixes to inline styles in React?&lt;/a&gt; | |117| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-import-and-export-components-using-react-and-es6&quot;&gt;How to import and export components using react and ES6?&lt;/a&gt; | |118| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-exceptions-on-react-component-naming&quot;&gt;What are the exceptions on React component naming?&lt;/a&gt; | |119| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-a-component-constructor-called-only-once&quot;&gt;Why is a component constructor called only once?&lt;/a&gt; | |120| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-define-constants-in-react&quot;&gt;How to define constants in React?&lt;/a&gt; | |121| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-programmatically-trigger-click-event-in-react&quot;&gt;How to programmatically trigger click event in React?&lt;/a&gt; | |122| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-asyncawait-in-plain-react&quot;&gt;Is it possible to use async/await in plain React?&lt;/a&gt; | |123| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-common-folder-structures-for-react&quot;&gt;What are the common folder structures for React?&lt;/a&gt; | |124| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-packages-for-animation&quot;&gt;What are the popular packages for animation?&lt;/a&gt; | |125| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-styles-modules&quot;&gt;What is the benefit of styles modules?&lt;/a&gt; | |126| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-react-specific-linters&quot;&gt;What are the popular React-specific linters?&lt;/a&gt; | |127| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-call-and-in-which-component-lifecycle-methods-should-i-make-an-ajax-call&quot;&gt;How to make AJAX call and In which component lifecycle methods should I make an AJAX call?&lt;/a&gt; | |128| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-render-props&quot;&gt;What are render props?&lt;/a&gt; | | | &lt;strong&gt;React Router&lt;/strong&gt; | |129| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-router&quot;&gt;What is React Router?&lt;/a&gt; | |130| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-router-is-different-from-history-library&quot;&gt;How React Router is different from history library?&lt;/a&gt; | |131| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-router-components-of-react-router-v4&quot;&gt;What are the &amp;lt;Router&amp;gt; components of React Router v4?&lt;/a&gt; | |132| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-push-and-replace-methods-of-history&quot;&gt;What is the purpose of push and replace methods of history?&lt;/a&gt; | |133| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-programmatically-navigate-using-react-router-v4&quot;&gt;How do you programmatically navigate using React router v4?&lt;/a&gt; | |134| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-query-parameters-in-react-router-v4&quot;&gt;How to get query parameters in React Router v4&lt;/a&gt; | |135| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-get-router-may-have-only-one-child-element-warning&quot;&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/a&gt; | |136| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-params-to-historypush-method-in-react-router-v4&quot;&gt;How to pass params to history.push method in React Router v4?&lt;/a&gt; | |137| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-implement-default-or-notfound-page&quot;&gt;How to implement default or NotFound page?&lt;/a&gt; | |138| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-history-on-react-router-v4&quot;&gt;How to get history on React Router v4?&lt;/a&gt; | |139| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-perform-automatic-redirect-after-login&quot;&gt;How to perform automatic redirect after login?&lt;/a&gt; | | | &lt;strong&gt;React Internationalization&lt;/strong&gt; | |140| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-intl&quot;&gt;What is React-Intl?&lt;/a&gt; | |141| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-react-intl&quot;&gt;What are the main features of React Intl?&lt;/a&gt; | |142| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-two-ways-of-formatting-in-react-intl&quot;&gt;What are the two ways of formatting in React Intl?&lt;/a&gt; | |143| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-formattedmessage-as-placeholder-using-react-intl&quot;&gt;How to use FormattedMessage as placeholder using React Intl?&lt;/a&gt; | |144| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-current-locale-with-react-intl&quot;&gt;How to access current locale with React Intl&lt;/a&gt; | |145| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-format-date-using-react-intl&quot;&gt;How to format date using React Intl?&lt;/a&gt; | | | &lt;strong&gt;React Testing&lt;/strong&gt; | |146| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-shallow-renderer-in-react-testing&quot;&gt;What is Shallow Renderer in React testing?&lt;/a&gt; | |147| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-testrenderer-package-in-react&quot;&gt;What is TestRenderer package in React?&lt;/a&gt; | |148| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-reacttestutils-package&quot;&gt;What is the purpose of ReactTestUtils package?&lt;/a&gt; | |149| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jest&quot;&gt;What is Jest?&lt;/a&gt; | |150| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-jest-over-jasmine&quot;&gt;What are the advantages of Jest over Jasmine?&lt;/a&gt; | |151| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-a-simple-example-of-jest-test-case&quot;&gt;Give a simple example of Jest test case&lt;/a&gt; | | | &lt;strong&gt;React Redux&lt;/strong&gt; | |152| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flux&quot;&gt;What is Flux?&lt;/a&gt; | |153| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux&quot;&gt;What is Redux?&lt;/a&gt; | |154| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-core-principles-of-redux&quot;&gt;What are the core principles of Redux?&lt;/a&gt; | |155| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-downsides-of-redux-compared-to-flux&quot;&gt;What are the downsides of Redux compared to Flux?&lt;/a&gt; | |156| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the difference between mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |157| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-dispatch-an-action-in-reducer&quot;&gt;Can I dispatch an action in reducer?&lt;/a&gt; | |158| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-redux-store-outside-a-component&quot;&gt;How to access Redux store outside a component?&lt;/a&gt; | |159| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-drawbacks-of-mvw-pattern&quot;&gt;What are the drawbacks of MVW pattern&lt;/a&gt; | |160| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-there-any-similarities-between-redux-and-rxjs&quot;&gt;Are there any similarities between Redux and RxJS?&lt;/a&gt; | |161| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-dispatch-an-action-on-load&quot;&gt;How to dispatch an action on load?&lt;/a&gt; | |162| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-connect-from-react-redux&quot;&gt;How to use connect from React Redux?&lt;/a&gt; | |163| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-reset-state-in-redux&quot;&gt;How to reset state in Redux?&lt;/a&gt; | |164| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#whats-the-purpose-of-at-symbol-in-the-redux-connect-decorator&quot;&gt;Whats the purpose of at symbol in the redux connect decorator?&lt;/a&gt; | |165| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-context-and-react-redux&quot;&gt;What is the difference between React context and React Redux?&lt;/a&gt; | |166| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-redux-state-functions-called-reducers&quot;&gt;Why are Redux state functions called reducers?&lt;/a&gt; | |167| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-request-in-redux&quot;&gt;How to make AJAX request in Redux?&lt;/a&gt; | |168| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-keep-all-components-state-in-redux-store&quot;&gt;Should I keep all component&#39;s state in Redux store?&lt;/a&gt; | |169| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-way-to-access-redux-store&quot;&gt;What is the proper way to access Redux store?&lt;/a&gt; | |170| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-component-and-container-in-react-redux&quot;&gt;What is the difference between component and container in React Redux?&lt;/a&gt; | |171| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-the-constants-in-redux&quot;&gt;What is the purpose of the constants in Redux? &lt;/a&gt; | |172| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-ways-to-write-mapdispatchtoprops&quot;&gt;What are the different ways to write mapDispatchToProps()?&lt;/a&gt; | |173| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-the-ownprops-parameter-in-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |174| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-structure-redux-top-level-directories&quot;&gt;How to structure Redux top level directories?&lt;/a&gt; | |175| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-saga&quot;&gt;What is redux-saga?&lt;/a&gt; | |176| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-mental-model-of-redux-saga&quot;&gt;What is the mental model of redux-saga?&lt;/a&gt; | |177| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-call-and-put-in-redux-saga&quot;&gt;What are the differences between call and put in redux-saga&lt;/a&gt; | |178| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-thunk&quot;&gt;What is Redux Thunk?&lt;/a&gt; | |179| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-saga-and-redux-thunk&quot;&gt;What are the differences between redux-saga and redux-thunk&lt;/a&gt; | |180| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-devtools&quot;&gt;What is Redux DevTools?&lt;/a&gt; | |181| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-redux-devtools&quot;&gt;What are the features of Redux DevTools?&lt;/a&gt; | |182| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-redux-selectors-and-why-to-use-them&quot;&gt;What are Redux selectors and Why to use them?&lt;/a&gt; | |183| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-form&quot;&gt;What is Redux Form?&lt;/a&gt; | |184| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-redux-form&quot;&gt;What are the main features of Redux Form?&lt;/a&gt; | |185| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-multiple-middlewares-to-redux&quot;&gt;How to add multiple middlewares to Redux?&lt;/a&gt; | |186| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-initial-state-in-redux&quot;&gt;How to set initial state in Redux?&lt;/a&gt; | |187| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-relay-is-different-from-redux&quot;&gt;How Relay is different from Redux?&lt;/a&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-an-action-in-redux&quot;&gt;What is an action in Redux?&lt;/a&gt; | | | &lt;strong&gt;React Native&lt;/strong&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-native-and-react&quot;&gt;What is the difference between React Native and React?&lt;/a&gt; | |189| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-test-react-native-apps&quot;&gt;How to test React Native apps?&lt;/a&gt; | |190| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-do-logging-in-react-native&quot;&gt;How to do logging in React Native?&lt;/a&gt; | |191| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-your-react-native&quot;&gt;How to debug your React Native?&lt;/a&gt; | | | &lt;strong&gt;React supported libraries and Integration&lt;/strong&gt; | |192| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reselect-and-how-it-works&quot;&gt;What is reselect and how it works?&lt;/a&gt; | |193| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flow&quot;&gt;What is Flow?&lt;/a&gt; | |194| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-flow-and-proptypes&quot;&gt;What is the difference between Flow and PropTypes?&lt;/a&gt; | |195| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-font-awesome-icons-in-react&quot;&gt;How to use font-awesome icons in React?&lt;/a&gt; | |196| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-dev-tools&quot;&gt;What is React Dev Tools?&lt;/a&gt; | |197| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-devtools-not-loading-in-chrome-for-local-files&quot;&gt;Why is DevTools not loading in Chrome for local files?&lt;/a&gt; | |198| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-polymer-in-react&quot;&gt;How to use Polymer in React?&lt;/a&gt; | |199| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react-over-vuejs&quot;&gt;What are the advantages of React over Vue.js?&lt;/a&gt; | |200| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-angular&quot;&gt;What is the difference between React and Angular?&lt;/a&gt; | |201| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-tab-is-not-showing-up-in-devtools&quot;&gt;Why React tab is not showing up in DevTools?&lt;/a&gt; | |202| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-styled-components&quot;&gt;What are styled components?&lt;/a&gt; | |203| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-styled-components&quot;&gt;Give an example of Styled Components?&lt;/a&gt; | |204| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-relay&quot;&gt;What is Relay?&lt;/a&gt; | |205| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-typescript-in-create-react-app-application&quot;&gt;How to use TypeScript in create-react-app application?&lt;/a&gt; | | | &lt;strong&gt;Miscellaneous&lt;/strong&gt; | |206| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-reselect-library&quot;&gt;What are the main features of reselect library?&lt;/a&gt; | |207| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-reselect-usage&quot;&gt;Give an example of reselect usage?&lt;/a&gt; | |209| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-the-statics-object-work-with-es6-classes-in-react&quot;&gt;Does the statics object work with ES6 classes in React?&lt;/a&gt; | |210| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-redux-only-be-used-with-react&quot;&gt;Can Redux only be used with React?&lt;/a&gt; | |211| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-you-need-to-have-a-particular-build-tool-to-use-redux&quot;&gt;Do you need to have a particular build tool to use Redux?&lt;/a&gt; | |212| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-redux-form-initialvalues-get-updated-from-state&quot;&gt;How Redux Form initialValues get updated from state?&lt;/a&gt; | |213| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-proptypes-allow-different-types-for-one-prop&quot;&gt;How React PropTypes allow different type for one prop?&lt;/a&gt; | |214| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-import-an-svg-file-as-react-component&quot;&gt;Can I import an SVG file as react component?&lt;/a&gt; | |215| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-inline-ref-callbacks-or-functions-not-recommended&quot;&gt;Why are inline ref callbacks or functions not recommended?&lt;/a&gt;| |216| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-render-hijacking-in-react&quot;&gt;What is render hijacking in React?&lt;/a&gt;| |217| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hoc-factory-implementations&quot;&gt;What are HOC factory implementations?&lt;/a&gt;| |218| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-numbers-to-react-component&quot;&gt;How to pass numbers to React component?&lt;/a&gt;| |219| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-keep-all-my-state-into-redux-should-i-ever-use-react-internal-state&quot;&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/a&gt;| |220| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-registerserviceworker-in-react&quot;&gt;What is the purpose of registerServiceWorker in React?&lt;/a&gt;| |221| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-memo-function&quot;&gt;What is React memo function?&lt;/a&gt;| |222| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-lazy-function&quot;&gt;What is React lazy function?&lt;/a&gt;| |223| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-unnecessary-updates-using-setstate&quot;&gt;How to prevent unnecessary updates using setState?&lt;/a&gt;| |224| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-render-array-strings-and-numbers-in-react-16-version&quot;&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/a&gt;| |225| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-class-field-declarations-syntax-in-react-classes&quot;&gt;How to use class field declarations syntax in React classes?&lt;/a&gt;| |226| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hooks&quot;&gt;What are hooks?&lt;/a&gt;| |227| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-needs-to-follow-for-hooks&quot;&gt;What are the rules needs to follow for hooks?&lt;/a&gt;| |228| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-ensure-hooks-followed-the-rules-in-your-project&quot;&gt;How to ensure hooks followed the rules in your project?&lt;/a&gt;| |229| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-flux-and-redux&quot;&gt;What are the differences between Flux and Redux?&lt;/a&gt;| |230| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-react-router-v4&quot;&gt;What are the benefits of React Router V4?&lt;/a&gt;| |231| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-describe-about-componentdidcatch-lifecycle-method-signature&quot;&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/a&gt;| |232| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#in-which-scenarios-error-boundaries-do-not-catch-errors&quot;&gt;In which scenarios error boundaries do not catch errors?&lt;/a&gt;| |233| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-not-you-need-error-boundaries-for-event-handlers&quot;&gt;Why do not you need error boundaries for event handlers?&lt;/a&gt;| |234| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-try-catch-block-and-error-boundaries&quot;&gt;What is the difference between try catch block and error boundaries?&lt;/a&gt;| |235| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-behavior-of-uncaught-errors-in-react-16&quot;&gt;What is the behavior of uncaught errors in react 16?&lt;/a&gt;| |236| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-placement-for-error-boundaries&quot;&gt;What is the proper placement for error boundaries?&lt;/a&gt;| |237| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-component-stack-trace-from-error-boundary&quot;&gt;What is the benefit of component stack trace from error boundary?&lt;/a&gt;| |238| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-required-method-to-be-defined-for-a-class-component&quot;&gt;What is the required method to be defined for a class component?&lt;/a&gt;| |239| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-return-types-of-render-method&quot;&gt;What are the possible return types of render method?&lt;/a&gt;| |240| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-purpose-of-constructor&quot;&gt;What is the main purpose of constructor?&lt;/a&gt;| |241| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-mandatory-to-define-constructor-for-react-component&quot;&gt;Is it mandatory to define constructor for React component?&lt;/a&gt;| |242| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-default-props&quot;&gt;What are default props?&lt;/a&gt;| |243| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-not-call-setstate-in-componentwillunmount&quot;&gt;Why should not call setState in componentWillUnmount?&lt;/a&gt;| |244| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromerror&quot;&gt;What is the purpose of getDerivedStateFromError?&lt;/a&gt;| |245| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-methods-order-when-component-re-rendered&quot;&gt;What is the methods order when component re-rendered?&lt;/a&gt;| |246| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-methods-invoked-during-error-handling&quot;&gt;What are the methods invoked during error handling?&lt;/a&gt;| |247| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-displayname-class-property&quot;&gt;What is the purpose of displayName class property?&lt;/a&gt;| |248| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-browser-support-for-react-applications&quot;&gt;What is the browser support for react applications?&lt;/a&gt;| |249| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-unmountcomponentatnode-method&quot;&gt;What is the purpose of unmountComponentAtNode method?&lt;/a&gt;| |250| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-code-splitting&quot;&gt;What is code-splitting?&lt;/a&gt;| |251| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-strict-mode&quot;&gt;What is the benefit of strict mode?&lt;/a&gt;| |252| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-keyed-fragments&quot;&gt;What are Keyed Fragments?&lt;/a&gt;| |253| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-react-support-all-html-attributes&quot;&gt;Does React support all HTML attributes?&lt;/a&gt;| |254| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-with-hocs&quot;&gt;What are the limitations with HOCs?&lt;/a&gt;| |255| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-forwardrefs-in-devtools&quot;&gt;How to debug forwardRefs in DevTools?&lt;/a&gt;| |256| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-component-props-defaults-to-true&quot;&gt;When component props defaults to true?&lt;/a&gt;| |257| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-nextjs-and-major-features-of-it&quot;&gt;What is NextJS and major features of it?&lt;/a&gt;| |258| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-an-event-handler-to-a-component&quot;&gt;How do you pass an event handler to a component?&lt;/a&gt;| |259| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-arrow-functions-in-render-methods&quot;&gt;Is it good to use arrow functions in render methods?&lt;/a&gt;| |260| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-a-function-from-being-called-multiple-times&quot;&gt;How to prevent a function from being called multiple times?&lt;/a&gt;| |261| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-jsx-prevents-injection-attacks&quot;&gt;How JSX prevents Injection Attacks?&lt;/a&gt;| |262| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-update-rendered-elements&quot;&gt;How do you update rendered elements?&lt;/a&gt;| |263| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-props-are-read-only&quot;&gt;How do you say that props are read only?&lt;/a&gt;| |264| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-state-updates-are-merged&quot;&gt;How do you say that state updates are merged?&lt;/a&gt;| |265| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-arguments-to-an-event-handler&quot;&gt;How do you pass arguments to an event handler?&lt;/a&gt;| |266| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-component-from-rendering&quot;&gt;How to prevent component from rendering?&lt;/a&gt;| |267| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-conditions-to-safely-use-the-index-as-a-key&quot;&gt;What are the conditions to safely use the index as a key?&lt;/a&gt;| |268| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-keys-should-be-globally-unique&quot;&gt;Is it keys should be globally unique?&lt;/a&gt;| |269| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-popular-choice-for-form-handling&quot;&gt;What is the popular choice for form handling?&lt;/a&gt;| |270| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-formik-over-redux-form-library&quot;&gt;What are the advantages of formik over redux form library?&lt;/a&gt;| |271| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-required-to-use-inheritance&quot;&gt;Why do you not required to use inheritance?&lt;/a&gt;| |272| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-web-components-in-react-application&quot;&gt;Can I use web components in react application?&lt;/a&gt;| |273| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-dynamic-import&quot;&gt;What is dynamic import?&lt;/a&gt;| |274| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-loadable-components&quot;&gt;What are loadable components?&lt;/a&gt;| |275| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-suspense-component&quot;&gt;What is suspense component?&lt;/a&gt;| |276| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-route-based-code-splitting&quot;&gt;What is route based code splitting?&lt;/a&gt;| |277| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-on-how-to-use-context&quot;&gt;Give an example on How to use context?&lt;/a&gt;| |278| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-default-value-in-context&quot;&gt;What is the purpose of default value in context?&lt;/a&gt;| |279| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-use-contexttype&quot;&gt;How do you use contextType?&lt;/a&gt;| |280| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-consumer&quot;&gt;What is a consumer?&lt;/a&gt;| |281| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-solve-performance-corner-cases-while-using-context&quot;&gt;How do you solve performance corner cases while using context?&lt;/a&gt;| |282| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-forward-ref-in-hocs&quot;&gt;What is the purpose of forward ref in HOCs?&lt;/a&gt;| |283| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-ref-argument-available-for-all-functions-or-class-components&quot;&gt;Is it ref argument available for all functions or class components?&lt;/a&gt;| |284| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-need-additional-care-for-component-libraries-while-using-forward-refs&quot;&gt;Why do you need additional care for component libraries while using forward refs?&lt;/a&gt;| |285| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-react-class-components-without-es6&quot;&gt;How to create react class components without ES6?&lt;/a&gt;| |286| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-jsx&quot;&gt;Is it possible to use react without JSX?&lt;/a&gt;| |287| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-diffing-algorithm&quot;&gt;What is diffing algorithm?&lt;/a&gt;| |288| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-covered-by-diffing-algorithm&quot;&gt;What are the rules covered by diffing algorithm?&lt;/a&gt;| |289| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-do-you-need-to-use-refs&quot;&gt;When do you need to use refs?&lt;/a&gt;| |290| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-prop-must-be-named-as-render-for-render-props&quot;&gt;Is it prop must be named as render for render props?&lt;/a&gt;| |291| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-problems-of-using-render-props-with-pure-components&quot;&gt;What are the problems of using render props with pure components?&lt;/a&gt;| |292| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-create-hoc-using-render-props&quot;&gt;How do you create HOC using render props?&lt;/a&gt;| |293| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-windowing-technique&quot;&gt;What is windowing technique?&lt;/a&gt;| |294| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-print-falsy-values-in-jsx&quot;&gt;How do you print falsy values in JSX?&lt;/a&gt;| |295| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-typical-use-case-of-portals?&quot;&gt;What is the typical use case of portals?&lt;/a&gt;| |296| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-set-default-value-for-uncontrolled-component&quot;&gt;How do you set default value for uncontrolled component?&lt;/a&gt;| |297| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-your-favorite-react-stack&quot;&gt;What is your favorite React stack?&lt;/a&gt;| |298| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-real-dom-and-virtual-dom&quot;&gt;What is the difference between Real DOM and Virtual DOM?&lt;/a&gt;| |299| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-bootstrap-to-a-react-application&quot;&gt;How to add Bootstrap to a react application?&lt;/a&gt;| |300| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-list-down-top-websites-or-applications-using-react-as-front-end-framework&quot;&gt;Can you list down top websites or applications using react as front end framework?&lt;/a&gt;| |301| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-recommended-to-use-css-in-js-technique-in-react&quot;&gt;Is it recommended to use CSS In JS technique in React?&lt;/a&gt;| |302| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-rewrite-all-my-class-components-with-hooks&quot;&gt;Do I need to rewrite all my class components with hooks?&lt;/a&gt;| |303| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-fetch-data-with-react-hooks&quot;&gt;How to fetch data with React Hooks?&lt;/a&gt;| |304| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-hooks-cover-all-use-cases-for-classes&quot;&gt;Is Hooks cover all use cases for classes?&lt;/a&gt;| |305| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-stable-release-for-hooks-support&quot;&gt;What is the stable release for hooks support?&lt;/a&gt;| |306| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-we-use-array-destructuring-square-brackets-notation-in-usestate&quot;&gt;Why do we use array destructuring (square brackets notation) in useState?&lt;/a&gt;| |307| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-sources-used-for-introducing-hooks&quot;&gt;What are the sources used for introducing hooks?&lt;/a&gt;| |308| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-imperative-api-of-web-components&quot;&gt;How do you access imperative API of web components?&lt;/a&gt;| |309| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-formik&quot;&gt;What is formik?&lt;/a&gt;| |310| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-typical-middleware-choices-for-handling-asynchronous-calls-in-redux&quot;&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/a&gt;| |311| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-browsers-understand-jsx-code&quot;&gt;Do browsers understand JSX code?&lt;/a&gt;| |312| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#describe-about-data-flow-in-react&quot;&gt;Describe about data flow in react?&lt;/a&gt;| |313| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-scripts&quot;&gt;What is react scripts?&lt;/a&gt;| |314| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-create-react-app&quot;&gt;What are the features of create react app?&lt;/a&gt;| |315| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-rendertonodestream-method&quot;&gt;What is the purpose of renderToNodeStream method?&lt;/a&gt;| |316| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-mobx&quot;&gt;What is MobX?&lt;/a&gt;| |317| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-and-mobx&quot;&gt;What are the differences between Redux and MobX?&lt;/a&gt;| |318| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-learn-es6-before-learning-reactjs&quot;&gt;Should I learn ES6 before learning ReactJS?&lt;/a&gt;| |319| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-concurrent-rendering&quot;&gt;What is Concurrent Rendering?&lt;/a&gt;| |320| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-async-mode-and-concurrent-mode&quot;&gt;What is the difference between async mode and concurrent mode?&lt;/a&gt;| |321| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-javascript-urls-in-react169&quot;&gt;Can I use javascript urls in react16.9?&lt;/a&gt;| |322| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-eslint-plugin-for-hooks&quot;&gt;What is the purpose of eslint plugin for hooks?&lt;/a&gt;| |323| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-imperative-and-declarative-in-react&quot;&gt;What is the difference between Imperative and Declarative in React?&lt;/a&gt;| |324| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-using-typescript-with-reactjs&quot;&gt;What are the benefits of using typescript with reactjs?&lt;/a&gt;| |325| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-make-sure-that-user-remains-authenticated-on-page-refresh-while-using-context-api-state-management&quot;&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/a&gt;| |326| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-new-jsx-transform&quot;&gt;What are the benefits of new JSX transform?&lt;/a&gt;| |327| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-does-new-jsx-transform-different-from-old-transform&quot;&gt;How does new JSX transform different from old transform?&lt;/a&gt;| |328| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-get-redux-scaffolding-using-create-react-app&quot;&gt;How do you get redux scaffolding using create-react-app?&lt;/a&gt;| |329| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-server-components&quot;&gt;What are React Server components?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Core React&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What is React?&lt;/h3&gt; &lt;p&gt;React is an &lt;strong&gt;open-source frontend JavaScript library&lt;/strong&gt; which is used for building user interfaces especially for single page applications. It is used for handling view layer for web and mobile apps. React was created by &lt;a href=&quot;https://github.com/jordwalke&quot;&gt;Jordan Walke&lt;/a&gt;, a software engineer working for Facebook. React was first deployed on Facebook&#39;s News Feed in 2011 and on Instagram in 2012.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the major features of React?&lt;/h3&gt; &lt;p&gt;The major features of React are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It uses &lt;strong&gt;VirtualDOM&lt;/strong&gt; instead of RealDOM considering that RealDOM manipulations are expensive.&lt;/li&gt; 
   &lt;li&gt;Supports &lt;strong&gt;server-side rendering&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Follows &lt;strong&gt;Unidirectional&lt;/strong&gt; data flow or data binding.&lt;/li&gt; 
   &lt;li&gt;Uses &lt;strong&gt;reusable/composable&lt;/strong&gt; UI components to develop the view.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSX?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;JSX&lt;/em&gt; is a XML-like syntax extension to ECMAScript (the acronym stands for &lt;em&gt;JavaScript XML&lt;/em&gt;). Basically it just provides syntactic sugar for the &lt;code&gt;React.createElement()&lt;/code&gt; function, giving us expressiveness of JavaScript along with HTML like template syntax.&lt;/p&gt; &lt;p&gt;In the example below text inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is returned as JavaScript function to the render function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component {
  render() {
    return(
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{&#39;Welcome to React world!&#39;}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Element and Component?&lt;/h3&gt; &lt;p&gt;An &lt;em&gt;Element&lt;/em&gt; is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. &lt;em&gt;Elements&lt;/em&gt; can contain other &lt;em&gt;Elements&lt;/em&gt; in their props. Creating a React element is cheap. Once an element is created, it is never mutated.&lt;/p&gt; &lt;p&gt;The object representation of React Element would be as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = React.createElement(
  &#39;div&#39;,
  {id: &#39;login-btn&#39;},
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;React.createElement()&lt;/code&gt; function returns an object:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: &#39;div&#39;,
  props: {
    children: &#39;Login&#39;,
    id: &#39;login-btn&#39;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And finally it renders to the DOM using &lt;code&gt;ReactDOM.render()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&#39;login-btn&#39;&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas a &lt;strong&gt;component&lt;/strong&gt; can be declared in several different ways. It can be a class with a &lt;code&gt;render()&lt;/code&gt; method. Alternatively, in simple cases, it can be defined as a function. In either case, it takes props as an input, and returns a JSX tree as the output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt;
  &amp;lt;div id={&#39;login-btn&#39;} onClick={onLogin}&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then JSX gets transpiled to a &lt;code&gt;React.createElement()&lt;/code&gt; function tree:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt; React.createElement(
  &#39;div&#39;,
  { id: &#39;login-btn&#39;, onClick: onLogin },
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to create components in React?&lt;/h3&gt; &lt;p&gt;There are two possible ways to create a component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function Components:&lt;/strong&gt; This is the simplest way to create a component. Those are pure JavaScript functions that accept props object as first parameter and return React elements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function Greeting({ message }) {
  return &amp;lt;h1&amp;gt;{`Hello, ${message}`}&amp;lt;/h1&amp;gt;

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Class Components:&lt;/strong&gt; You can also use ES6 class to define a component. The above function component can be written as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;h1&amp;gt;{`Hello, ${this.props.message}`}&amp;lt;/h1&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When to use a Class Component over a Function Component?&lt;/h3&gt; &lt;p&gt;If the component needs &lt;em&gt;state or lifecycle methods&lt;/em&gt; then use class component otherwise use function component. &lt;em&gt;However, from React 16.8 with the addition of Hooks, you could use state , lifecycle methods and other features that were only available in class component right in your function component.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are Pure Components?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;code&gt;React.PureComponent&lt;/code&gt;&lt;/em&gt; is exactly the same as &lt;em&gt;&lt;code&gt;React.Component&lt;/code&gt;&lt;/em&gt; except that it handles the &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; method for you. When props or state changes, &lt;em&gt;PureComponent&lt;/em&gt; will do a shallow comparison on both props and state. &lt;em&gt;Component&lt;/em&gt; on the other hand won&#39;t compare current props and state to next out of the box. Thus, the component will re-render by default whenever &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is called.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is state in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;State&lt;/em&gt; of a component is an object that holds some information that may change over the lifetime of the component. We should always try to make our state as simple as possible and minimize the number of stateful components.&lt;/p&gt; &lt;p&gt;Let&#39;s create an user component with message state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      message: &#39;Welcome to React world&#39;
    }
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{this.state.message}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/state.jpg&quot; alt=&quot;state&quot;&gt;&lt;/p&gt; &lt;p&gt;State is similar to props, but it is private and fully controlled by the component. i.e, It is not accessible to any component other than the one that owns and sets it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are props in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Props&lt;/em&gt; are inputs to components. They are single values or objects containing a set of values that are passed to components on creation using a naming convention similar to HTML-tag attributes. They are data passed down from a parent component to a child component.&lt;/p&gt; &lt;p&gt;The primary purpose of props in React is to provide following component functionality:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Pass custom data to your component.&lt;/li&gt; 
   &lt;li&gt;Trigger state changes.&lt;/li&gt; 
   &lt;li&gt;Use via &lt;code&gt;this.props.reactProp&lt;/code&gt; inside component&#39;s &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, let us create an element with &lt;code&gt;reactProp&lt;/code&gt; property:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Element reactProp={&#39;1&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This &lt;code&gt;reactProp&lt;/code&gt; (or whatever you came up with) name then becomes a property attached to React&#39;s native props object which originally already exists on all components created using React library.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;props.reactProp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between state and props?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;props&lt;/em&gt; and &lt;em&gt;state&lt;/em&gt; are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should we not update the state directly?&lt;/h3&gt; &lt;p&gt;If you try to update state directly then it won&#39;t re-render the component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Wrong
this.state.message = &#39;Hello world&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead use &lt;code&gt;setState()&lt;/code&gt; method. It schedules an update to a component&#39;s state object. When state changes, the component responds by re-rendering.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Correct
this.setState({ message: &#39;Hello World&#39; })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can directly assign to the state object either in &lt;em&gt;constructor&lt;/em&gt; or using latest javascript&#39;s class field declaration syntax.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;12&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of callback function as an argument of &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;The callback function is invoked when setState finished and the component gets rendered. Since &lt;code&gt;setState()&lt;/code&gt; is &lt;strong&gt;asynchronous&lt;/strong&gt; the callback function is used for any post action.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is recommended to use lifecycle method rather than this callback function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setState({ name: &#39;John&#39; }, () =&amp;gt; console.log(&#39;The name has updated and component re-rendered&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;13&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between HTML and React event handling?&lt;/h3&gt; &lt;p&gt;Below are some of the main differences between HTML and React event handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, the event name should be in &lt;em&gt;lowercase&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onclick=&#39;activateLasers()&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React it follows &lt;em&gt;camelCase&lt;/em&gt; convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={activateLasers}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you can return &lt;code&gt;false&lt;/code&gt; to prevent default behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&#39;#&#39; onclick=&#39;console.log(&quot;The link was clicked.&quot;); return false;&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React you must call &lt;code&gt;preventDefault()&lt;/code&gt; explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function handleClick(event) {
  event.preventDefault()
  console.log(&#39;The link was clicked.&#39;)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you need to invoke the function by appending &lt;code&gt;()&lt;/code&gt; Whereas in react you should not append &lt;code&gt;()&lt;/code&gt; with the function name. (refer &quot;activateLasers&quot; function in the first point for example)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;14&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to bind methods or event handlers in JSX callbacks?&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to achieve this:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Binding in Constructor:&lt;/strong&gt; In JavaScript classes, the methods are not bound by default. The same thing applies for React event handlers defined as class methods. Normally we bind them in constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  constructor(props) {
    super(props)
    this.handleClick = this.handleClick.bind(this)
  }

  handleClick() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public class fields syntax:&lt;/strong&gt; If you don&#39;t like to use bind approach then &lt;em&gt;public class fields syntax&lt;/em&gt; can be used to correctly bind callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;handleClick = () =&amp;gt; {
  console.log(&#39;this is:&#39;, this)
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrow functions in callbacks:&lt;/strong&gt; You can use &lt;em&gt;arrow functions&lt;/em&gt; directly in the callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={(event) =&amp;gt; this.handleClick(event)}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the callback is passed as prop to child components, those components might do an extra re-rendering. In those cases, it is preferred to go with &lt;code&gt;.bind()&lt;/code&gt; or &lt;em&gt;public class fields syntax&lt;/em&gt; approach considering performance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;15&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass a parameter to an event handler or callback?&lt;/h3&gt; &lt;p&gt;You can use an &lt;em&gt;arrow function&lt;/em&gt; to wrap around an &lt;em&gt;event handler&lt;/em&gt; and pass parameters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={() =&amp;gt; this.handleClick(id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is an equivalent to calling &lt;code&gt;.bind&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick.bind(this, id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Apart from these two approaches, you can also pass arguments to a function which is defined as arrow function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick(id)} /&amp;gt;
handleClick = (id) =&amp;gt; () =&amp;gt; {
    console.log(&quot;Hello, your ticket number is&quot;, id)
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;16&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are synthetic events in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; is a cross-browser wrapper around the browser&#39;s native event. It&#39;s API is same as the browser&#39;s native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and &lt;code&gt;preventDefault()&lt;/code&gt;, except the events work identically across all browsers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;17&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are inline conditional expressions?&lt;/h3&gt; &lt;p&gt;You can use either &lt;em&gt;if statements&lt;/em&gt; or &lt;em&gt;ternary expressions&lt;/em&gt; which are available from JS to conditionally render expressions. Apart from these approaches, you can also embed any expressions in JSX by wrapping them in curly braces and then followed by JS logical operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
{
    messages.length &amp;gt; 0 &amp;amp;&amp;amp; !isLogin?
      &amp;lt;h2&amp;gt;
          You have {messages.length} unread messages.
      &amp;lt;/h2&amp;gt;
      :
      &amp;lt;h2&amp;gt;
          You don&#39;t have unread messages.
      &amp;lt;/h2&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;18&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;key&lt;/code&gt; is a special string attribute you &lt;strong&gt;should&lt;/strong&gt; include when creating arrays of elements. &lt;em&gt;Key&lt;/em&gt; prop helps React identify which items have changed, are added, or are removed.&lt;/p&gt; &lt;p&gt;Most often we use ID from our data as &lt;em&gt;key&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo) =&amp;gt;
  &amp;lt;li key={todo.id}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When you don&#39;t have stable IDs for rendered items, you may use the item &lt;em&gt;index&lt;/em&gt; as a &lt;em&gt;key&lt;/em&gt; as a last resort:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo, index) =&amp;gt;
  &amp;lt;li key={index}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;em&gt;indexes&lt;/em&gt; for &lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;not recommended&lt;/strong&gt; if the order of items may change. This can negatively impact performance and may cause issues with component state.&lt;/li&gt; 
   &lt;li&gt;If you extract list item as separate component then apply &lt;em&gt;keys&lt;/em&gt; on list component instead of &lt;code&gt;li&lt;/code&gt; tag.&lt;/li&gt; 
   &lt;li&gt;There will be a warning message in the console if the &lt;code&gt;key&lt;/code&gt; prop is not present on list items.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;19&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of refs?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;ref&lt;/em&gt; is used to return a reference to the element. They &lt;em&gt;should be avoided&lt;/em&gt; in most cases, however, they can be useful when you need a direct access to the DOM element or an instance of a component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;20&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create refs?&lt;/h3&gt; &lt;p&gt;There are two approaches&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;This is a recently added approach. &lt;em&gt;Refs&lt;/em&gt; are created using &lt;code&gt;React.createRef()&lt;/code&gt; method and attached to React elements via the &lt;code&gt;ref&lt;/code&gt; attribute. In order to use &lt;em&gt;refs&lt;/em&gt; throughout the component, just assign the &lt;em&gt;ref&lt;/em&gt; to the instance property within constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.myRef = React.createRef()
  }
  render() {
    return &amp;lt;div ref={this.myRef} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use ref callbacks approach regardless of React version. For example, the search bar component&#39;s input element accessed as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SearchBar extends Component {
   constructor(props) {
      super(props);
      this.txtSearch = null;
      this.state = { term: &#39;&#39; };
      this.setInputSearchRef = e =&amp;gt; {
         this.txtSearch = e;
      }
   }
   onInputChange(event) {
      this.setState({ term: this.txtSearch.value });
   }
   render() {
      return (
         &amp;lt;input
            value={this.state.term}
            onChange={this.onInputChange.bind(this)}
            ref={this.setInputSearchRef} /&amp;gt;
      );
   }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can also use &lt;em&gt;refs&lt;/em&gt; in function components using &lt;strong&gt;closures&lt;/strong&gt;. &lt;strong&gt;Note&lt;/strong&gt;: You can also use inline ref callbacks even though it is not a recommended approach&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;21&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are forward refs?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Ref forwarding&lt;/em&gt; is a feature that lets some components take a &lt;em&gt;ref&lt;/em&gt; they receive, and pass it further down to a child.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ButtonElement = React.forwardRef((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;CustomButton&quot;&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));

// Create ref to the DOM button:
const ref = React.createRef();
&amp;lt;ButtonElement ref={ref}&amp;gt;{&#39;Forward Ref&#39;}&amp;lt;/ButtonElement&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;22&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/h3&gt; &lt;p&gt;It is preferred to use &lt;em&gt;callback refs&lt;/em&gt; over &lt;code&gt;findDOMNode()&lt;/code&gt; API. Because &lt;code&gt;findDOMNode()&lt;/code&gt; prevents certain improvements in React in the future.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;legacy&lt;/strong&gt; approach of using &lt;code&gt;findDOMNode&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  componentDidMount() {
    findDOMNode(this).scrollIntoView()
  }

  render() {
    return &amp;lt;div /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The recommended approach is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  constructor(props){
    super(props);
    this.node = createRef();
  }
  componentDidMount() {
    this.node.current.scrollIntoView();
  }

  render() {
    return &amp;lt;div ref={this.node} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;23&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are String Refs legacy?&lt;/h3&gt; &lt;p&gt;If you worked with React before, you might be familiar with an older API where the &lt;code&gt;ref&lt;/code&gt; attribute is a string, like &lt;code&gt;ref={&#39;textInput&#39;}&lt;/code&gt;, and the DOM node is accessed as &lt;code&gt;this.refs.textInput&lt;/code&gt;. We advise against it because &lt;em&gt;string refs have below issues&lt;/em&gt;, and are considered legacy. String refs were &lt;strong&gt;removed in React v16&lt;/strong&gt;.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They &lt;em&gt;force React to keep track of currently executing component&lt;/em&gt;. This is problematic because it makes react module stateful, and thus causes weird errors when react module is duplicated in the bundle.&lt;/li&gt; 
   &lt;li&gt;They are &lt;em&gt;not composable&lt;/em&gt; — if a library puts a ref on the passed child, the user can&#39;t put another ref on it. Callback refs are perfectly composable.&lt;/li&gt; 
   &lt;li&gt;They &lt;em&gt;don&#39;t work with static analysis&lt;/em&gt; like Flow. Flow can&#39;t guess the magic that framework does to make the string ref appear on &lt;code&gt;this.refs&lt;/code&gt;, as well as its type (which could be different). Callback refs are friendlier to static analysis.&lt;/li&gt; 
   &lt;li&gt;It doesn&#39;t work as most people would expect with the &quot;render callback&quot; pattern (e.g. 
    &lt;!-- raw HTML omitted --&gt;) &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends Component {
  renderRow = (index) =&amp;gt; {
    // This won&#39;t work. Ref will get attached to DataTable rather than MyComponent:
    return &amp;lt;input ref={&#39;input-&#39; + index} /&amp;gt;;

    // This would work though! Callback refs are awesome.
    return &amp;lt;input ref={input =&amp;gt; this[&#39;input-&#39; + index] = input} /&amp;gt;;
  }

  render() {
    return &amp;lt;DataTable data={this.props.data} renderRow={this.renderRow} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;24&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; (VDOM) is an in-memory representation of &lt;em&gt;Real DOM&lt;/em&gt;. The representation of a UI is kept in memory and synced with the &quot;real&quot; DOM. It&#39;s a step that happens between the render function being called and the displaying of elements on the screen. This entire process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;25&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Virtual DOM works?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; works in three simple steps.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom1.png&quot; alt=&quot;vdom&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Then the difference between the previous DOM representation and the new one is calculated.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom2.png&quot; alt=&quot;vdom2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom3.png&quot; alt=&quot;vdom3&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;26&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Shadow DOM&lt;/em&gt; is a browser technology designed primarily for scoping variables and CSS in &lt;em&gt;web components&lt;/em&gt;. The &lt;em&gt;Virtual DOM&lt;/em&gt; is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;27&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Fiber?&lt;/h3&gt; &lt;p&gt;Fiber is the new &lt;em&gt;reconciliation&lt;/em&gt; engine or reimplementation of core algorithm in React v16. The goal of React Fiber is to increase its suitability for areas like animation, layout, gestures, ability to pause, abort, or reuse work and assign priority to different types of updates; and new concurrency primitives.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;28&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main goal of React Fiber?&lt;/h3&gt; &lt;p&gt;The goal of &lt;em&gt;React Fiber&lt;/em&gt; is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is &lt;strong&gt;incremental rendering&lt;/strong&gt;: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;29&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are controlled components?&lt;/h3&gt; &lt;p&gt;A component that controls the input elements within the forms on subsequent user input is called &lt;strong&gt;Controlled Component&lt;/strong&gt;, i.e, every state mutation will have an associated handler function.&lt;/p&gt; &lt;p&gt;For example, to write all the names in uppercase letters, we use handleChange as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleChange(event) {
  this.setState({value: event.target.value.toUpperCase()})
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;30&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are uncontrolled components?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Uncontrolled Components&lt;/strong&gt; are the ones that store their own state internally, and you query the DOM using a ref to find its current value when you need it. This is a bit more like traditional HTML.&lt;/p&gt; &lt;p&gt;In the below UserProfile component, the &lt;code&gt;name&lt;/code&gt; input is accessed using ref.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserProfile extends React.Component {
  constructor(props) {
    super(props)
    this.handleSubmit = this.handleSubmit.bind(this)
    this.input = React.createRef()
  }

  handleSubmit(event) {
    alert(&#39;A name was submitted: &#39; + this.input.current.value)
    event.preventDefault()
  }

  render() {
    return (
      &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
        &amp;lt;label&amp;gt;
          {&#39;Name:&#39;}
          &amp;lt;input type=&quot;text&quot; ref={this.input} /&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
      &amp;lt;/form&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In most cases, it&#39;s recommend to use controlled components to implement forms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;31&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between createElement and cloneElement?&lt;/h3&gt; &lt;p&gt;JSX elements will be transpiled to &lt;code&gt;React.createElement()&lt;/code&gt; functions to create React elements which are going to be used for the object representation of UI. Whereas &lt;code&gt;cloneElement&lt;/code&gt; is used to clone an element and pass it new props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Lifting State Up in React?&lt;/h3&gt; &lt;p&gt;When several components need to share the same changing data then it is recommended to &lt;em&gt;lift the shared state up&lt;/em&gt; to their closest common ancestor. That means if two child components share the same data from its parent, then move the state to parent instead of maintaining local state in both of the child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;33&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different phases of component lifecycle?&lt;/h3&gt; &lt;p&gt;The component lifecycle has three distinct lifecycle phases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mounting:&lt;/strong&gt; The component is ready to mount in the browser DOM. This phase covers initialization from &lt;code&gt;constructor()&lt;/code&gt;, &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, and &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updating:&lt;/strong&gt; In this phase, the component get updated in two ways, sending the new props and updating the state either from &lt;code&gt;setState()&lt;/code&gt; or &lt;code&gt;forceUpdate()&lt;/code&gt;. This phase covers &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unmounting:&lt;/strong&gt; In this last phase, the component is not needed and get unmounted from the browser DOM. This phase includes &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It&#39;s worth mentioning that React internally has a concept of phases when applying changes to the DOM. They are separated as follows&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Render&lt;/strong&gt; The component will render without any side-effects. This applies for Pure components and in this phase, React can pause, abort, or restart the render.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pre-commit&lt;/strong&gt; Before the component actually applies the changes to the DOM, there is a moment that allows React to read from the DOM through the &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; React works with the DOM and executes the final lifecycles respectively &lt;code&gt;componentDidMount()&lt;/code&gt; for mounting, &lt;code&gt;componentDidUpdate()&lt;/code&gt; for updating, and &lt;code&gt;componentWillUnmount()&lt;/code&gt; for unmounting.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;React 16.3+ Phases (or an &lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;&gt;interactive version&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases16.3.jpg&quot; alt=&quot;phases 16.3+&quot;&gt;&lt;/p&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases.png&quot; alt=&quot;phases 16.2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;34&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods of React?&lt;/h3&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillMount:&lt;/strong&gt; Executed before rendering and is used for App level configuration in your root component.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and here all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillReceiveProps:&lt;/strong&gt; Executed when particular prop updates to trigger state transitions.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUpdate:&lt;/strong&gt; Executed before re-rendering the component when there are props &amp;amp; state changes confirmed by &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; which returns true.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount:&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;React 16.3+&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;getDerivedStateFromProps:&lt;/strong&gt; Invoked right before calling &lt;code&gt;render()&lt;/code&gt; and is invoked on &lt;em&gt;every&lt;/em&gt; render. This exists for rare use cases where you need derived state. Worth reading &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;if you need derived state&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and where all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;getSnapshotBeforeUpdate:&lt;/strong&gt; Executed right before rendered output is committed to the DOM. Any value returned by this will be passed into &lt;code&gt;componentDidUpdate()&lt;/code&gt;. This is useful to capture information from the DOM i.e. scroll position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes. This will not fire if &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;35&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Higher-Order Components?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;higher-order component&lt;/em&gt; (&lt;em&gt;HOC&lt;/em&gt;) is a function that takes a component and returns a new component. Basically, it&#39;s a pattern that is derived from React&#39;s compositional nature.&lt;/p&gt; &lt;p&gt;We call them &lt;strong&gt;pure components&lt;/strong&gt; because they can accept any dynamically provided child component but they won&#39;t modify or copy any behavior from their input components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const EnhancedComponent = higherOrderComponent(WrappedComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HOC can be used for many use cases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Code reuse, logic and bootstrap abstraction.&lt;/li&gt; 
   &lt;li&gt;Render hijacking.&lt;/li&gt; 
   &lt;li&gt;State abstraction and manipulation.&lt;/li&gt; 
   &lt;li&gt;Props manipulation.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;36&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create props proxy for HOC component?&lt;/h3&gt; &lt;p&gt;You can add/edit props passed to the component using &lt;em&gt;props proxy&lt;/em&gt; pattern like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HOC(WrappedComponent) {
  return class Test extends Component {
    render() {
      const newProps = {
        title: &#39;New Header&#39;,
        footer: false,
        showFeatureX: false,
        showFeatureY: true
      }

      return &amp;lt;WrappedComponent {...this.props} {...newProps} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;37&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is context?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Context&lt;/em&gt; provides a way to pass data through the component tree without having to pass props down manually at every level.&lt;/p&gt; &lt;p&gt;For example, authenticated user, locale preference, UI theme need to be accessed in the application by many components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {Provider, Consumer} = React.createContext(defaultValue)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;38&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is children prop?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Children&lt;/em&gt; is a prop (&lt;code&gt;this.props.children&lt;/code&gt;) that allow you to pass components as data to other components, just like any other prop you use. Component tree put between component&#39;s opening and closing tag will be passed to that component as &lt;code&gt;children&lt;/code&gt; prop.&lt;/p&gt; &lt;p&gt;There are a number of methods available in the React API to work with this prop. These include &lt;code&gt;React.Children.map&lt;/code&gt;, &lt;code&gt;React.Children.forEach&lt;/code&gt;, &lt;code&gt;React.Children.count&lt;/code&gt;, &lt;code&gt;React.Children.only&lt;/code&gt;, &lt;code&gt;React.Children.toArray&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A simple usage of children prop looks as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyDiv = React.createClass({
  render: function() {
    return &amp;lt;div&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;
  }
})

ReactDOM.render(
  &amp;lt;MyDiv&amp;gt;
    &amp;lt;span&amp;gt;{&#39;Hello&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;{&#39;World&#39;}&amp;lt;/span&amp;gt;
  &amp;lt;/MyDiv&amp;gt;,
  node
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;39&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to write comments in React?&lt;/h3&gt; &lt;p&gt;The comments in React/JSX are similar to JavaScript Multiline comments but are wrapped in curly braces.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Single-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Single-line comments(In vanilla JavaScript, the single-line comments are represented by double slash(//)) */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Multi-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Multi-line comments for more than
   one line */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;40&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using super constructor with props argument?&lt;/h3&gt; &lt;p&gt;A child class constructor cannot make use of &lt;code&gt;this&lt;/code&gt; reference until &lt;code&gt;super()&lt;/code&gt; method has been called. The same applies for ES6 sub-classes as well. The main reason of passing props parameter to &lt;code&gt;super()&lt;/code&gt; call is to access &lt;code&gt;this.props&lt;/code&gt; in your child constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Not passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()

    console.log(this.props) // prints undefined

    // but props parameter is still available
    console.log(props) // prints { name: &#39;John&#39;, age: 42 }
  }

  render() {
    // no difference outside constructor
    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code snippets reveals that &lt;code&gt;this.props&lt;/code&gt; is different only within the constructor. It would be the same outside the constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reconciliation?&lt;/h3&gt; &lt;p&gt;When a component&#39;s props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM. This process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;42&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set state with a dynamic key name?&lt;/h3&gt; &lt;p&gt;If you are using ES6 or the Babel transpiler to transform your JSX code then you can accomplish this with &lt;em&gt;computed property names&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleInputChange(event) {
  this.setState({ [event.target.id]: event.target.value })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;43&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the common mistake of function being called every time the component renders?&lt;/h3&gt; &lt;p&gt;You need to make sure that function is not being called while passing the function as a parameter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Wrong: handleClick is called instead of passed as a reference!
  return &amp;lt;button onClick={this.handleClick()}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead, pass the function itself without parenthesis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Correct: handleClick is passed as a reference!
  return &amp;lt;button onClick={this.handleClick}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;44&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is lazy function supports named exports?&lt;/h3&gt; No, currently &lt;code&gt;React.lazy&lt;/code&gt; function supports default exports only. If you would like to import modules which are named exports, you can create an intermediate module that reexports it as the default. It also ensures that tree shaking keeps working and don’t pull unused components. Let&#39;s take a component file which exports multiple named components, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// MoreComponents.js
export const SomeComponent = /* ... */;
export const UnusedComponent = /* ... */;
&lt;/code&gt;&lt;/pre&gt; and reexport &lt;code&gt;MoreComponents.js&lt;/code&gt; components in an intermediate file &lt;code&gt;IntermediateComponent.js&lt;/code&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// IntermediateComponent.js
export { SomeComponent as default } from &quot;./MoreComponents.js&quot;;
&lt;/code&gt;&lt;/pre&gt; Now you can import the module using lazy function as below, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { lazy } from &#39;react&#39;;
const SomeComponent = lazy(() =&amp;gt; import(&quot;./IntermediateComponent.js&quot;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;45&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React uses &lt;code&gt;className&lt;/code&gt; over &lt;code&gt;class&lt;/code&gt; attribute?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;class&lt;/code&gt; is a keyword in JavaScript, and JSX is an extension of JavaScript. That&#39;s the principal reason why React uses &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt;. Pass a string as the &lt;code&gt;className&lt;/code&gt; prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;span className={&#39;menu navigation-menu&#39;}&amp;gt;{&#39;Menu&#39;}&amp;lt;/span&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;46&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are fragments?&lt;/h3&gt; &lt;p&gt;It&#39;s common pattern in React which is used for a component to return multiple elements. &lt;em&gt;Fragments&lt;/em&gt; let you group a list of children without adding extra nodes to the DOM.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;React.Fragment&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/React.Fragment&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a &lt;em&gt;shorter syntax&lt;/em&gt;, but it&#39;s not supported in many tools:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;47&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why fragments are better than container divs?&lt;/h3&gt; &lt;p&gt;Below are the list of reasons,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Fragments are a bit faster and use less memory by not creating an extra DOM node. This only has a real benefit on very large and deep trees.&lt;/li&gt; 
   &lt;li&gt;Some CSS mechanisms like &lt;em&gt;Flexbox&lt;/em&gt; and &lt;em&gt;CSS Grid&lt;/em&gt; have a special parent-child relationships, and adding divs in the middle makes it hard to keep the desired layout.&lt;/li&gt; 
   &lt;li&gt;The DOM Inspector is less cluttered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;48&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are portals in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Portal&lt;/em&gt; is a recommended way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.createPortal(child, container)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first argument is any render-able React child, such as an element, string, or fragment. The second argument is a DOM element.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;49&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateless components?&lt;/h3&gt; &lt;p&gt;If the behaviour is independent of its state then it can be a stateless component. You can use either a function or a class for creating stateless components. But unless you need to use a lifecycle hook in your components, you should go for function components. There are a lot of benefits if you decide to use function components here; they are easy to write, understand, and test, a little faster, and you can avoid the &lt;code&gt;this&lt;/code&gt; keyword altogether.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;50&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateful components?&lt;/h3&gt; &lt;p&gt;If the behaviour of a component is dependent on the &lt;em&gt;state&lt;/em&gt; of the component then it can be termed as stateful component. These &lt;em&gt;stateful components&lt;/em&gt; are always &lt;em&gt;class components&lt;/em&gt; and have a state that gets initialized in the &lt;code&gt;constructor&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  constructor(props) {
    super(props)
    this.state = { count: 0 }
  }

  render() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;React 16.8 Update:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hooks let you use state and other React features without writing classes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; import React, {useState} from &#39;react&#39;;

 const App = (props) =&amp;gt; {
   const [count, setCount] = useState(0);

   return (
     // JSX
   )
 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;51&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to apply validation on props in React?&lt;/h3&gt; &lt;p&gt;When the application is running in &lt;em&gt;development mode&lt;/em&gt;, React will automatically check all props that we set on components to make sure they have &lt;em&gt;correct type&lt;/em&gt;. If the type is incorrect, React will generate warning messages in the console. It&#39;s disabled in &lt;em&gt;production mode&lt;/em&gt; due to performance impact. The mandatory props are defined with &lt;code&gt;isRequired&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The set of predefined prop types:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.func&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.node&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.element&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.bool&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.any&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;We can define &lt;code&gt;propTypes&lt;/code&gt; for &lt;code&gt;User&lt;/code&gt; component as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

class User extends React.Component {
  static propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }

  render() {
    return (
      &amp;lt;&amp;gt;
        &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
        &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
      &amp;lt;/&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In React v15.5 &lt;em&gt;PropTypes&lt;/em&gt; were moved from &lt;code&gt;React.PropTypes&lt;/code&gt; to &lt;code&gt;prop-types&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

function User() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
    &amp;lt;/&amp;gt;
  )
}

User.propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;52&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React?&lt;/h3&gt; &lt;p&gt;Below are the list of main advantages of React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Increases the application&#39;s performance with &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;JSX makes code easy to read and write.&lt;/li&gt; 
   &lt;li&gt;It renders both on client and server side (&lt;em&gt;SSR&lt;/em&gt;).&lt;/li&gt; 
   &lt;li&gt;Easy to integrate with frameworks (Angular, Backbone) since it is only a view library.&lt;/li&gt; 
   &lt;li&gt;Easy to write unit and integration tests with tools such as Jest.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;53&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations of React?&lt;/h3&gt; &lt;p&gt;Apart from the advantages, there are few limitations of React too,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React is just a view library, not a full framework.&lt;/li&gt; 
   &lt;li&gt;There is a learning curve for beginners who are new to web development.&lt;/li&gt; 
   &lt;li&gt;Integrating React into a traditional MVC framework requires some additional configuration.&lt;/li&gt; 
   &lt;li&gt;The code complexity increases with inline templating and JSX.&lt;/li&gt; 
   &lt;li&gt;Too many smaller components leading to over engineering or boilerplate.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;54&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are error boundaries in React v16?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Error boundaries&lt;/em&gt; are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.&lt;/p&gt; &lt;p&gt;A class component becomes an error boundary if it defines a new lifecycle method called &lt;code&gt;componentDidCatch(error, info)&lt;/code&gt; or &lt;code&gt;static getDerivedStateFromError() &lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { hasError: false }
  }

  componentDidCatch(error, info) {
    // You can also log the error to an error reporting service
    logErrorToMyService(error, info)
  }

  static getDerivedStateFromError(error) {
     // Update state so the next render will show the fallback UI.
     return { hasError: true };
   }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;{&#39;Something went wrong.&#39;}&amp;lt;/h1&amp;gt;
    }
    return this.props.children
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that use it as a regular component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyWidget /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;55&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How error boundaries handled in React v15?&lt;/h3&gt; &lt;p&gt;React v15 provided very basic support for &lt;em&gt;error boundaries&lt;/em&gt; using &lt;code&gt;unstable_handleError&lt;/code&gt; method. It has been renamed to &lt;code&gt;componentDidCatch&lt;/code&gt; in React v16.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;56&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommended ways for static type checking?&lt;/h3&gt; &lt;p&gt;Normally we use &lt;em&gt;PropTypes library&lt;/em&gt; (&lt;code&gt;React.PropTypes&lt;/code&gt; moved to a &lt;code&gt;prop-types&lt;/code&gt; package since React v15.5) for &lt;em&gt;type checking&lt;/em&gt; in the React applications. For large code bases, it is recommended to use &lt;em&gt;static type checkers&lt;/em&gt; such as Flow or TypeScript, that perform type checking at compile time and provide auto-completion features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;57&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of &lt;code&gt;react-dom&lt;/code&gt; package?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-dom&lt;/code&gt; package provides &lt;em&gt;DOM-specific methods&lt;/em&gt; that can be used at the top level of your app. Most of the components are not required to use this module. Some of the methods of this package are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;hydrate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;unmountComponentAtNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;findDOMNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;createPortal()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;58&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of render method of &lt;code&gt;react-dom&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;This method is used to render a React element into the DOM in the supplied container and return a reference to the component. If the React element was previously rendered into container, it will perform an update on it and only mutate the DOM as necessary to reflect the latest changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ReactDOM.render(element, container[, callback])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the optional callback is provided, it will be executed after the component is rendered or updated.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;59&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is ReactDOMServer?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;ReactDOMServer&lt;/code&gt; object enables you to render components to static markup (typically used on node server). This object is mainly used for &lt;em&gt;server-side rendering&lt;/em&gt; (SSR). The following methods can be used in both the server and browser environments:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;renderToString()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;renderToStaticMarkup()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you generally run a Node-based web server like Express, Hapi, or Koa, and you call &lt;code&gt;renderToString&lt;/code&gt; to render your root component to a string, which you then send as response.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Express
import { renderToString } from &#39;react-dom/server&#39;
import MyPage from &#39;./MyPage&#39;

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
  res.write(&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;)
  res.write(&#39;&amp;lt;div id=&quot;content&quot;&amp;gt;&#39;)
  res.write(renderToString(&amp;lt;MyPage/&amp;gt;))
  res.write(&#39;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;)
  res.end()
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;60&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use innerHTML in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute is React&#39;s replacement for using &lt;code&gt;innerHTML&lt;/code&gt; in the browser DOM. Just like &lt;code&gt;innerHTML&lt;/code&gt;, it is risky to use this attribute considering cross-site scripting (XSS) attacks. You just need to pass a &lt;code&gt;__html&lt;/code&gt; object as key and HTML text as value.&lt;/p&gt; &lt;p&gt;In this example MyComponent uses &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute for setting HTML markup:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function createMarkup() {
  return { __html: &#39;First &amp;amp;middot; Second&#39; }
}

function MyComponent() {
  return &amp;lt;div dangerouslySetInnerHTML={createMarkup()} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;61&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use styles in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;style&lt;/code&gt; attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM style JavaScript property, is more efficient, and prevents XSS security holes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const divStyle = {
  color: &#39;blue&#39;,
  backgroundImage: &#39;url(&#39; + imgUrl + &#39;)&#39;
};

function HelloWorldComponent() {
  return &amp;lt;div style={divStyle}&amp;gt;Hello World!&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Style keys are camelCased in order to be consistent with accessing the properties on DOM nodes in JavaScript (e.g. &lt;code&gt;node.style.backgroundImage&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;62&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How events are different in React?&lt;/h3&gt; &lt;p&gt;Handling events in React elements has some syntactic differences:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React event handlers are named using camelCase, rather than lowercase.&lt;/li&gt; 
   &lt;li&gt;With JSX you pass a function as the event handler, rather than a string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;63&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use &lt;code&gt;setState()&lt;/code&gt; in constructor?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt;, then apart from assigning to the object state React also re-renders the component and all its children. You would get error like this: &lt;em&gt;Can only update a mounted or mounting component.&lt;/em&gt; So we need to use &lt;code&gt;this.state&lt;/code&gt; to initialize variables inside constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;64&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the impact of indexes as keys?&lt;/h3&gt; &lt;p&gt;Keys should be stable, predictable, and unique so that React can keep track of elements.&lt;/p&gt; &lt;p&gt;In the below code snippet each element&#39;s key will be based on ordering, rather than tied to the data that is being represented. This limits the optimizations that React can do.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo, index) =&amp;gt;
  &amp;lt;Todo
    {...todo}
    key={index}
  /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use element data for unique key, assuming todo.id is unique to this list and stable, React would be able to reorder elements without needing to reevaluate them as much.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo) =&amp;gt;
  &amp;lt;Todo {...todo}
    key={todo.id} /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;65&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillMount()&lt;/code&gt; method?&lt;/h3&gt; &lt;p&gt;Yes, it is safe to use &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;componentWillMount()&lt;/code&gt; method. But at the same it is recommended to avoid async initialization in &lt;code&gt;componentWillMount()&lt;/code&gt; lifecycle method. &lt;code&gt;componentWillMount()&lt;/code&gt; is invoked immediately before mounting occurs. It is called before &lt;code&gt;render()&lt;/code&gt;, therefore setting state in this method will not trigger a re-render. Avoid introducing any side-effects or subscriptions in this method. We need to make sure async calls for component initialization happened in &lt;code&gt;componentDidMount()&lt;/code&gt; instead of &lt;code&gt;componentWillMount()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;componentDidMount() {
  axios.get(`api/todos`)
    .then((result) =&amp;gt; {
      this.setState({
        messages: [...result.data]
      })
    })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;66&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use props in initial state?&lt;/h3&gt; &lt;p&gt;If the props on the component are changed without the component being refreshed, the new prop value will never be displayed because the constructor function will never update the current state of the component. The initialization of state from props only runs when the component is first created.&lt;/p&gt; &lt;p&gt;The below component won&#39;t display the updated input value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      records: [],
      inputValue: this.props.inputValue
    };
  }

  render() {
    return &amp;lt;div&amp;gt;{this.state.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using props inside render method will update the value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      record: []
    }
  }

  render() {
    return &amp;lt;div&amp;gt;{this.props.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;67&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you conditionally render components?&lt;/h3&gt; &lt;p&gt;In some cases you want to render different components depending on some state. JSX does not render &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so you can use conditional &lt;em&gt;short-circuiting&lt;/em&gt; to render a given part of your component only if a certain condition is true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address &amp;amp;&amp;amp;
      &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need an &lt;code&gt;if-else&lt;/code&gt; condition then use &lt;em&gt;ternary operator&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address
      ? &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
      : &amp;lt;p&amp;gt;{&#39;Address is not available&#39;}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;68&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to be careful when spreading props on DOM elements?&lt;/h3&gt; &lt;p&gt;When we &lt;em&gt;spread props&lt;/em&gt; we run into the risk of adding unknown HTML attributes, which is a bad practice. Instead we can use prop destructuring with &lt;code&gt;...rest&lt;/code&gt; operator, so it will add only required props.&lt;/p&gt; &lt;p&gt;For example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ComponentA = () =&amp;gt;
  &amp;lt;ComponentB isDisplay={true} className={&#39;componentStyle&#39;} /&amp;gt;

const ComponentB = ({ isDisplay, ...domProps }) =&amp;gt;
  &amp;lt;div {...domProps}&amp;gt;{&#39;ComponentB&#39;}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;69&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you use decorators in React?&lt;/h3&gt; &lt;p&gt;You can &lt;em&gt;decorate&lt;/em&gt; your &lt;em&gt;class&lt;/em&gt; components, which is the same as passing the component into a function. &lt;strong&gt;Decorators&lt;/strong&gt; are flexible and readable way of modifying component functionality.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;@setTitle(&#39;Profile&#39;)
class Profile extends React.Component {
    //....
}

/*
  title is a string that will be set as a document title
  WrappedComponent is what our decorator will receive when
  put directly above a component class as seen in the example above
*/
const setTitle = (title) =&amp;gt; (WrappedComponent) =&amp;gt; {
  return class extends React.Component {
    componentDidMount() {
      document.title = title
    }

    render() {
      return &amp;lt;WrappedComponent {...this.props} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Decorators are a feature that didn&#39;t make it into ES7, but are currently a &lt;em&gt;stage 2 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;70&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you memoize a component?&lt;/h3&gt; &lt;p&gt;There are memoize libraries available which can be used on function components.&lt;/p&gt; &lt;p&gt;For example &lt;code&gt;moize&lt;/code&gt; library can memoize the component in another component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import moize from &#39;moize&#39;
import Component from &#39;./components/Component&#39; // this module exports a non-memoized component

const MemoizedFoo = moize.react(Component)

const Consumer = () =&amp;gt; {
  &amp;lt;div&amp;gt;
    {&#39;I will memoize the following entry:&#39;}
    &amp;lt;MemoizedFoo/&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since React v16.6.0, we have a &lt;code&gt;React.memo&lt;/code&gt;. It provides a higher order component which memoizes component unless the props change. To use it, simply wrap the component using React.memo before you use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const MemoComponent = React.memo(function MemoComponent(props) {
    /* render using props */
  });
  OR
  export default React.memo(MyFunctionComponent);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;71&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you implement Server Side Rendering or SSR?&lt;/h3&gt; &lt;p&gt;React is already equipped to handle rendering on Node servers. A special version of the DOM renderer is available, which follows the same pattern as on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ReactDOMServer from &#39;react-dom/server&#39;
import App from &#39;./App&#39;

ReactDOMServer.renderToString(&amp;lt;App /&amp;gt;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This method will output the regular HTML as a string, which can be then placed inside a page body as part of the server response. On the client side, React detects the pre-rendered content and seamlessly picks up where it left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;72&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to enable production mode in React?&lt;/h3&gt; &lt;p&gt;You should use Webpack&#39;s &lt;code&gt;DefinePlugin&lt;/code&gt; method to set &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;production&lt;/code&gt;, by which it strip out things like propType validation and extra warnings. Apart from this, if you minify the code, for example, Uglify&#39;s dead-code elimination to strip out development only code and comments, it will drastically reduce the size of your bundle.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;73&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is CRA and its benefits?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; CLI tool allows you to quickly create &amp;amp; run React applications with no configuration step.&lt;/p&gt; &lt;p&gt;Let&#39;s create Todo App using &lt;em&gt;CRA&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;# Installation
$ npm install -g create-react-app

# Create new project
$ create-react-app todo-app
$ cd todo-app

# Build, test and run
$ npm run build
$ npm run test
$ npm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It includes everything we need to build a React app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS, so you don’t need -webkit- or other prefixes.&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
   &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;74&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the lifecycle methods order in mounting?&lt;/h3&gt; &lt;p&gt;The lifecycle methods are called in the following order when an instance of a component is being created and inserted into the DOM.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;static getDerivedStateFromProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;75&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/h3&gt; &lt;p&gt;The following lifecycle methods going to be unsafe coding practices and will be more problematic with async rendering.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Starting with React v16.3 these methods are aliased with &lt;code&gt;UNSAFE_&lt;/code&gt; prefix, and the unprefixed version will be removed in React v17.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;76&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new static &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method is invoked after a component is instantiated as well as before it is re-rendered. It can return an object to update state, or &lt;code&gt;null&lt;/code&gt; to indicate that the new props do not require any state updates.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static getDerivedStateFromProps(props, state) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillReceiveProps()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;77&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method is called right before DOM updates. The return value from this method will be passed as the third parameter to &lt;code&gt;componentDidUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  getSnapshotBeforeUpdate(prevProps, prevState) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;78&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do Hooks replace render props and higher order components?&lt;/h3&gt; &lt;p&gt;Both render props and higher-order components render only a single child but in most of the cases Hooks are a simpler way to serve this by reducing nesting in your tree.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;79&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended way for naming components?&lt;/h3&gt; &lt;p&gt;It is recommended to name the component by reference instead of using &lt;code&gt;displayName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;displayName&lt;/code&gt; for naming component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default React.createClass({
  displayName: &#39;TodoApp&#39;,
  // ...
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; approach:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default class TodoApp extends React.Component {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;80&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended ordering of methods in component class?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt; ordering of methods from &lt;em&gt;mounting&lt;/em&gt; to &lt;em&gt;render stage&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; methods&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;getChildContext()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;click handlers or event handlers like &lt;code&gt;onClickSubmit()&lt;/code&gt; or &lt;code&gt;onChangeDescription()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;getter methods for render like &lt;code&gt;getSelectReason()&lt;/code&gt; or &lt;code&gt;getFooterContent()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;optional render methods like &lt;code&gt;renderNavigation()&lt;/code&gt; or &lt;code&gt;renderProfilePicture()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;81&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a switching component?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;switching component&lt;/em&gt; is a component that renders one of many components. We need to use object to map prop values to components.&lt;/p&gt; &lt;p&gt;For example, a switching component to display different pages based on &lt;code&gt;page&lt;/code&gt; prop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import HomePage from &#39;./HomePage&#39;
import AboutPage from &#39;./AboutPage&#39;
import ServicesPage from &#39;./ServicesPage&#39;
import ContactPage from &#39;./ContactPage&#39;

const PAGES = {
  home: HomePage,
  about: AboutPage,
  services: ServicesPage,
  contact: ContactPage
}

const Page = (props) =&amp;gt; {
  const Handler = PAGES[props.page] || ContactPage

  return &amp;lt;Handler {...props} /&amp;gt;
}

// The keys of the PAGES object can be used in the prop types to catch dev-time errors.
Page.propTypes = {
  page: PropTypes.oneOf(Object.keys(PAGES)).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;82&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to pass a function to setState()?&lt;/h3&gt; &lt;p&gt;The reason behind for this is that &lt;code&gt;setState()&lt;/code&gt; is an asynchronous operation. React batches state changes for performance reasons, so the state may not change immediately after &lt;code&gt;setState()&lt;/code&gt; is called. That means you should not rely on the current state when calling &lt;code&gt;setState()&lt;/code&gt; since you can&#39;t be sure what that state will be. The solution is to pass a function to &lt;code&gt;setState()&lt;/code&gt;, with the previous state as an argument. By doing this you can avoid issues with the user getting the old state value on access due to the asynchronous nature of &lt;code&gt;setState()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let&#39;s say the initial count value is zero. After three consecutive increment operations, the value is going to be incremented only by one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// assuming this.state.count === 0
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
// this.state.count === 1, not 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we pass a function to &lt;code&gt;setState()&lt;/code&gt;, the count gets incremented correctly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState((prevState, props) =&amp;gt; ({
  count: prevState.count + props.increment
}))
// this.state.count === 3 as expected
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;Why function is preferred over object for &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;React may batch multiple &lt;code&gt;setState()&lt;/code&gt; calls into a single update for performance. Because &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; may be updated asynchronously, you should not rely on their values for calculating the next state.&lt;/p&gt; &lt;p&gt;This counter example will fail to update as expected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Wrong
this.setState({
  counter: this.state.counter + this.props.increment,
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The preferred approach is to call &lt;code&gt;setState()&lt;/code&gt; with function rather than object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Correct
this.setState((prevState, props) =&amp;gt; ({
  counter: prevState.counter + props.increment
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;83&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is strict mode in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a useful component for highlighting potential problems in an application. Just like &lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt; does not render any extra DOM elements. It activates additional checks and warnings for its descendants. These checks apply for &lt;em&gt;development mode&lt;/em&gt; only.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;

function ExampleApplication() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;React.StrictMode&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;ComponentOne /&amp;gt;
          &amp;lt;ComponentTwo /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/React.StrictMode&amp;gt;
      &amp;lt;Footer /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, the &lt;em&gt;strict mode&lt;/em&gt; checks apply to &lt;code&gt;&amp;lt;ComponentOne&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ComponentTwo&amp;gt;&lt;/code&gt; components only.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;84&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Mixins?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Mixins&lt;/em&gt; are a way to totally separate components to have a common functionality. Mixins &lt;strong&gt;should not be used&lt;/strong&gt; and can be replaced with &lt;em&gt;higher-order components&lt;/em&gt; or &lt;em&gt;decorators&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;One of the most commonly used mixins is &lt;code&gt;PureRenderMixin&lt;/code&gt;. You might be using it in some components to prevent unnecessary re-renders when the props and state are shallowly equal to the previous props and state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const PureRenderMixin = require(&#39;react-addons-pure-render-mixin&#39;)

const Button = React.createClass({
  mixins: [PureRenderMixin],
  // ...
})
&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;85&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is &lt;code&gt;isMounted()&lt;/code&gt; an anti-pattern and what is the proper solution?&lt;/h3&gt; &lt;p&gt;The primary use case for &lt;code&gt;isMounted()&lt;/code&gt; is to avoid calling &lt;code&gt;setState()&lt;/code&gt; after a component has been unmounted, because it will emit a warning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (this.isMounted()) {
  this.setState({...})
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Checking &lt;code&gt;isMounted()&lt;/code&gt; before calling &lt;code&gt;setState()&lt;/code&gt; does eliminate the warning, but it also defeats the purpose of the warning. Using &lt;code&gt;isMounted()&lt;/code&gt; is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.&lt;/p&gt; &lt;p&gt;An optimal solution would be to find places where &lt;code&gt;setState()&lt;/code&gt; might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in &lt;code&gt;componentWillUnmount()&lt;/code&gt;, prior to unmounting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;86&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the Pointer Events supported in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Pointer Events&lt;/em&gt; provide a unified way of handling all input events. In the old days we had a mouse and respective event listeners to handle them but nowadays we have many devices which don&#39;t correlate to having a mouse, like phones with touch surface or pens. We need to remember that these events will only work in browsers that support the &lt;em&gt;Pointer Events&lt;/em&gt; specification.&lt;/p&gt; &lt;p&gt;The following event types are now available in &lt;em&gt;React DOM&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerUp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerCancel&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onGotPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onLostPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerEnter&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerLeave&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOver&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOut&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;87&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should component names start with capital letter?&lt;/h3&gt; &lt;p&gt;If you are rendering your component using JSX, the name of that component has to begin with a capital letter otherwise React will throw an error as unrecognized tag. This convention is because only HTML elements and SVG tags can begin with a lowercase letter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SomeComponent extends Component {
 // Code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can define component class which name starts with lowercase letter, but when it&#39;s imported it should have capital letter. Here lowercase is fine:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class myComponent extends Component {
  render() {
    return &amp;lt;div /&amp;gt;
  }
}

export default myComponent
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While when imported in another file it should start with capital letter:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import MyComponent from &#39;./MyComponent&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;What are the exceptions on React component naming?&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; The component names should start with a uppercase letter but there are few exceptions on this convention. The lowercase tag names with a dot (property accessors) are still considered as valid component names.

 For example the below tag can be compiled to a valid component,
 
 ```jsx harmony
 render(){
    return (
        &amp;lt;obj.component /&amp;gt; // `React.createElement(obj.component)`
       )
 }
 ```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;88&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are custom DOM attributes supported in React v16?&lt;/h3&gt; &lt;p&gt;Yes. In the past, React used to ignore unknown DOM attributes. If you wrote JSX with an attribute that React doesn&#39;t recognize, React would just skip it.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take a look at the below attribute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div mycustomattribute={&#39;something&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Would render an empty div to the DOM with React v15:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In React v16 any unknown attributes will end up in the DOM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div mycustomattribute=&#39;something&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for supplying browser-specific non-standard attributes, trying new DOM APIs, and integrating with opinionated third-party libraries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;89&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between constructor and getInitialState?&lt;/h3&gt; &lt;p&gt;You should initialize state in the constructor when using ES6 classes, and &lt;code&gt;getInitialState()&lt;/code&gt; method when using &lt;code&gt;React.createClass()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ES6 classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = { /* initial state */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyComponent = React.createClass({
  getInitialState() {
    return { /* initial state */ }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.createClass()&lt;/code&gt; is deprecated and removed in React v16. Use plain JavaScript classes instead.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;90&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you force a component to re-render without calling setState?&lt;/h3&gt; &lt;p&gt;By default, when your component&#39;s state or props change, your component will re-render. If your &lt;code&gt;render()&lt;/code&gt; method depends on some other data, you can tell React that the component needs re-rendering by calling &lt;code&gt;forceUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;component.forceUpdate(callback)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to avoid all uses of &lt;code&gt;forceUpdate()&lt;/code&gt; and only read from &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; in &lt;code&gt;render()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;91&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;super()&lt;/code&gt; and &lt;code&gt;super(props)&lt;/code&gt; in React using ES6 classes?&lt;/h3&gt; &lt;p&gt;When you want to access &lt;code&gt;this.props&lt;/code&gt; in &lt;code&gt;constructor()&lt;/code&gt; then you should pass props to &lt;code&gt;super()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super(props)&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    console.log(this.props) // { name: &#39;John&#39;, ... }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()
    console.log(this.props) // undefined
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Outside &lt;code&gt;constructor()&lt;/code&gt; both will display same value for &lt;code&gt;this.props&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;92&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to loop inside JSX?&lt;/h3&gt; &lt;p&gt;You can simply use &lt;code&gt;Array.prototype.map&lt;/code&gt; with ES6 &lt;em&gt;arrow function&lt;/em&gt; syntax.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;items&lt;/code&gt; array of objects is mapped into an array of components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  {items.map(item =&amp;gt; &amp;lt;SomeComponent key={item.id} name={item.name} /&amp;gt;)}
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can&#39;t iterate using &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  for (let i = 0; i &amp;lt; items.length; i++) {
    &amp;lt;SomeComponent key={items[i].id} name={items[i].name} /&amp;gt;
  }
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because JSX tags are transpiled into &lt;em&gt;function calls&lt;/em&gt;, and you can&#39;t use statements inside expressions. This may change thanks to &lt;code&gt;do&lt;/code&gt; expressions which are &lt;em&gt;stage 1 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;93&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access props in attribute quotes?&lt;/h3&gt; &lt;p&gt;React (or JSX) doesn&#39;t support variable interpolation inside an attribute value. The below representation won&#39;t work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src=&#39;images/{this.props.image}&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can put any JS expression inside curly braces as the entire attribute value. So the below expression works:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={&#39;images/&#39; + this.props.image} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;em&gt;template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={`images/${this.props.image}`} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;94&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React proptype array with shape?&lt;/h3&gt; &lt;p&gt;If you want to pass an array of objects to a component with a particular shape then use &lt;code&gt;React.PropTypes.shape()&lt;/code&gt; as an argument to &lt;code&gt;React.PropTypes.arrayOf()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactComponent.propTypes = {
  arrayWithShape: React.PropTypes.arrayOf(React.PropTypes.shape({
    color: React.PropTypes.string.isRequired,
    fontSize: React.PropTypes.number.isRequired
  })).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;95&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to conditionally apply class attributes?&lt;/h3&gt; &lt;p&gt;You shouldn&#39;t use curly braces inside quotes because it is going to be evaluated as a string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className=&quot;btn-panel {this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead you need to move curly braces outside (don&#39;t forget to include spaces between class names):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={&#39;btn-panel &#39; + (this.props.visible ? &#39;show&#39; : &#39;hidden&#39;)}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={`btn-panel ${this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}`}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;96&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and ReactDOM?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react&lt;/code&gt; package contains &lt;code&gt;React.createElement()&lt;/code&gt;, &lt;code&gt;React.Component&lt;/code&gt;, &lt;code&gt;React.Children&lt;/code&gt;, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The &lt;code&gt;react-dom&lt;/code&gt; package contains &lt;code&gt;ReactDOM.render()&lt;/code&gt;, and in &lt;code&gt;react-dom/server&lt;/code&gt; we have &lt;em&gt;server-side rendering&lt;/em&gt; support with &lt;code&gt;ReactDOMServer.renderToString()&lt;/code&gt; and &lt;code&gt;ReactDOMServer.renderToStaticMarkup()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;97&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why ReactDOM is separated from React?&lt;/h3&gt; &lt;p&gt;The React team worked on extracting all DOM-related features into a separate library called &lt;em&gt;ReactDOM&lt;/em&gt;. React v0.14 is the first release in which the libraries are split. By looking at some of the packages, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react-art&lt;/code&gt;, &lt;code&gt;react-canvas&lt;/code&gt;, and &lt;code&gt;react-three&lt;/code&gt;, it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.&lt;/p&gt; &lt;p&gt;To build more environments that React can render to, React team planned to split the main React package into two: &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;. This paves the way to writing components that can be shared between the web version of React and React Native.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;98&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use React label element?&lt;/h3&gt; &lt;p&gt;If you try to render a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element bound to a text input using the standard &lt;code&gt;for&lt;/code&gt; attribute, then it produces HTML missing that attribute and prints a warning to the console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label for={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;for&lt;/code&gt; is a reserved keyword in JavaScript, use &lt;code&gt;htmlFor&lt;/code&gt; instead.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label htmlFor={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;99&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to combine multiple inline style objects?&lt;/h3&gt; &lt;p&gt;You can use &lt;em&gt;spread operator&lt;/em&gt; in regular React:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt; &amp;lt;button style={{...styles.panel.button, ...styles.panel.submitButton}}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you&#39;re using React Native then you can use the array notation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button style={[styles.panel.button, styles.panel.submitButton]}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;100&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to re-render the view when the browser is resized?&lt;/h3&gt; &lt;p&gt;You can listen to the &lt;code&gt;resize&lt;/code&gt; event in &lt;code&gt;componentDidMount()&lt;/code&gt; and then update the dimensions (&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;). You should remove the listener in &lt;code&gt;componentWillUnmount()&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class WindowDimensions extends React.Component {
  constructor(props){
    super(props);
    this.updateDimensions = this.updateDimensions.bind(this);
  }
   
  componentWillMount() {
    this.updateDimensions()
  }

  componentDidMount() {
    window.addEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  componentWillUnmount() {
    window.removeEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  updateDimensions() {
    this.setState({width: window.innerWidth, height: window.innerHeight})
  }

  render() {
    return &amp;lt;span&amp;gt;{this.state.width} x {this.state.height}&amp;lt;/span&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;101&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;setState()&lt;/code&gt; and &lt;code&gt;replaceState()&lt;/code&gt; methods?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt; the current and previous states are merged. &lt;code&gt;replaceState()&lt;/code&gt; throws out the current state, and replaces it with only what you provide. Usually &lt;code&gt;setState()&lt;/code&gt; is used unless you really need to remove all previous keys for some reason. You can also set state to &lt;code&gt;false&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; in &lt;code&gt;setState()&lt;/code&gt; instead of using &lt;code&gt;replaceState()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;102&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to listen to state changes?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle method will be called when state changes. You can compare provided state and props values with current state and props to determine if something meaningful changed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The previous releases of ReactJS also uses &lt;code&gt;componentWillUpdate(object nextProps, object nextState)&lt;/code&gt; for state changes. It has been deprecated in latest releases.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;103&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended approach of removing an array element in React state?&lt;/h3&gt; &lt;p&gt;The better approach is to use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;For example, let&#39;s create a &lt;code&gt;removeItem()&lt;/code&gt; method for updating the state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;removeItem(index) {
  this.setState({
    data: this.state.data.filter((item, i) =&amp;gt; i !== index)
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;104&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use React without rendering HTML?&lt;/h3&gt; &lt;p&gt;It is possible with latest version (&amp;gt;=16.2). Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return false
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return null
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return []
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;React.Fragment&amp;gt;&amp;lt;/React.Fragment&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Returning &lt;code&gt;undefined&lt;/code&gt; won&#39;t work.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;105&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pretty print JSON with React?&lt;/h3&gt; &lt;p&gt;We can use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so that the formatting of the &lt;code&gt;JSON.stringify()&lt;/code&gt; is retained:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const data = { name: &#39;John&#39;, age: 42 }

class User extends React.Component {
  render() {
    return (
      &amp;lt;pre&amp;gt;
        {JSON.stringify(data, null, 2)}
      &amp;lt;/pre&amp;gt;
    )
  }
}

React.render(&amp;lt;User /&amp;gt;, document.getElementById(&#39;container&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;106&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you can&#39;t update props in React?&lt;/h3&gt; &lt;p&gt;The React philosophy is that props should be &lt;em&gt;immutable&lt;/em&gt; and &lt;em&gt;top-down&lt;/em&gt;. This means that a parent can send any prop values to a child, but the child can&#39;t modify received props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;107&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to focus an input element on page load?&lt;/h3&gt; &lt;p&gt;You can do it by creating &lt;em&gt;ref&lt;/em&gt; for &lt;code&gt;input&lt;/code&gt; element and using it in &lt;code&gt;componentDidMount()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component{
  componentDidMount() {
    this.nameInput.focus()
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input
          defaultValue={&#39;Won\&#39;t focus&#39;}
        /&amp;gt;
        &amp;lt;input
          ref={(input) =&amp;gt; this.nameInput = input}
          defaultValue={&#39;Will focus&#39;}
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;108&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways of updating objects in state?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with an object to merge with state:&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;code&gt;Object.assign()&lt;/code&gt; to create a copy of the object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = Object.assign({}, this.state.user, { age: 42 })
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;em&gt;spread operator&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { ...this.state.user, age: 42 }
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with a function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState(prevState =&amp;gt; ({
  user: {
    ...prevState.user,
    age: 42
  }
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;110&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How can we find the version of React at runtime in the browser?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;React.version&lt;/code&gt; to get the version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const REACT_VERSION = React.version

ReactDOM.render(
  &amp;lt;div&amp;gt;{`React version: ${REACT_VERSION}`}&amp;lt;/div&amp;gt;,
  document.getElementById(&#39;app&#39;)
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;111&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the approaches to include polyfills in your &lt;code&gt;create-react-app&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are approaches to include polyfills in create-react-app,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manual import from &lt;code&gt;core-js&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a file called (something like) &lt;code&gt;polyfills.js&lt;/code&gt; and import it into root &lt;code&gt;index.js&lt;/code&gt; file. Run &lt;code&gt;npm install core-js&lt;/code&gt; or &lt;code&gt;yarn add core-js&lt;/code&gt; and import your specific required features.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;core-js/fn/array/find&#39;
import &#39;core-js/fn/array/includes&#39;
import &#39;core-js/fn/number/is-nan&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Polyfill service:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use the polyfill.io CDN to retrieve custom, browser-specific polyfills by adding this line to &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&#39;https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above script we had to explicitly request the &lt;code&gt;Array.prototype.includes&lt;/code&gt; feature as it is not included in the default feature set.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;112&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use https instead of http in create-react-app?&lt;/h3&gt; &lt;p&gt;You just need to use &lt;code&gt;HTTPS=true&lt;/code&gt; configuration. You can edit your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;scripts&quot;: {
  &quot;start&quot;: &quot;set HTTPS=true &amp;amp;&amp;amp; react-scripts start&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just run &lt;code&gt;set HTTPS=true &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;113&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to avoid using relative path imports in create-react-app?&lt;/h3&gt; &lt;p&gt;Create a file called &lt;code&gt;.env&lt;/code&gt; in the project root and write the import path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NODE_PATH=src/app
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that restart the development server. Now you should be able to import anything inside &lt;code&gt;src/app&lt;/code&gt; without relative paths.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;114&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Google Analytics for React Router?&lt;/h3&gt; &lt;p&gt;Add a listener on the &lt;code&gt;history&lt;/code&gt; object to record each page view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;history.listen(function (location) {
  window.ga(&#39;set&#39;, &#39;page&#39;, location.pathname + location.search)
  window.ga(&#39;send&#39;, &#39;pageview&#39;, location.pathname + location.search)
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;115&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to update a component every second?&lt;/h3&gt; &lt;p&gt;You need to use &lt;code&gt;setInterval()&lt;/code&gt; to trigger the change, but you also need to clear the timer when the component unmounts to prevent errors and memory leaks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidMount() {
  this.interval = setInterval(() =&amp;gt; this.setState({ time: Date.now() }), 1000)
}

componentWillUnmount() {
  clearInterval(this.interval)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;116&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you apply vendor prefixes to inline styles in React?&lt;/h3&gt; &lt;p&gt;React &lt;em&gt;does not&lt;/em&gt; apply &lt;em&gt;vendor prefixes&lt;/em&gt; automatically. You need to add vendor prefixes manually.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div style={{
  transform: &#39;rotate(90deg)&#39;,
  WebkitTransform: &#39;rotate(90deg)&#39;, // note the capital &#39;W&#39; here
  msTransform: &#39;rotate(90deg)&#39; // &#39;ms&#39; is the only lowercase vendor prefix
}} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;117&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to import and export components using React and ES6?&lt;/h3&gt; &lt;p&gt;You should use default for exporting the components&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import User from &#39;user&#39;

export default class MyProfile extends React.Component {
  render(){
    return (
      &amp;lt;User type=&quot;customer&quot;&amp;gt;
        //...
      &amp;lt;/User&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With the export specifier, the MyProfile is going to be the member and exported to this module and the same can be imported without mentioning the name in other components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;119&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is a component constructor called only once?&lt;/h3&gt; &lt;p&gt;React&#39;s &lt;em&gt;reconciliation&lt;/em&gt; algorithm assumes that without any information to the contrary, if a custom component appears in the same place on subsequent renders, it&#39;s the same component as before, so reuses the previous instance rather than creating a new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;120&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to define constants in React?&lt;/h3&gt; &lt;p&gt;You can use ES7 &lt;code&gt;static&lt;/code&gt; field to define constant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static DEFAULT_PAGINATION = 10
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Static fields&lt;/em&gt; are part of the &lt;em&gt;Class Fields&lt;/em&gt; stage 3 proposal.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;121&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to programmatically trigger click event in React?&lt;/h3&gt; &lt;p&gt;You could use the ref prop to acquire a reference to the underlying &lt;code&gt;HTMLInputElement&lt;/code&gt; object through a callback, store the reference as a class property, then use that reference to later trigger a click from your event handlers using the &lt;code&gt;HTMLElement.click&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;This can be done in two steps:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create ref in render method:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;input ref={input =&amp;gt; this.inputElement = input} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Apply click event in your event handler:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.inputElement.click()
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;122&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use async/await in plain React?&lt;/h3&gt; &lt;p&gt;If you want to use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; in React, you will need &lt;em&gt;Babel&lt;/em&gt; and &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;transform-async-to-generator&lt;/a&gt; plugin. React Native ships with Babel and a set of transforms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;123&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common folder structures for React?&lt;/h3&gt; &lt;p&gt;There are two common practices for React project file structure.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by features or routes:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One common way to structure projects is locate CSS, JS, and tests together, grouped by feature or route.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;common/
├─ Avatar.js
├─ Avatar.css
├─ APIUtils.js
└─ APIUtils.test.js
feed/
├─ index.js
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
└─ FeedAPI.js
profile/
├─ index.js
├─ Profile.js
├─ ProfileHeader.js
├─ ProfileHeader.css
└─ ProfileAPI.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by file type:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another popular way to structure projects is to group similar files together.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;api/
├─ APIUtils.js
├─ APIUtils.test.js
├─ ProfileAPI.js
└─ UserAPI.js
components/
├─ Avatar.js
├─ Avatar.css
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
├─ Profile.js
├─ ProfileHeader.js
└─ ProfileHeader.css
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;124&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular packages for animation?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Transition Group&lt;/em&gt; and &lt;em&gt;React Motion&lt;/em&gt; are popular animation packages in React ecosystem.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;125&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of styles modules?&lt;/h3&gt; &lt;p&gt;It is recommended to avoid hard coding style values in components. Any values that are likely to be used across different UI components should be extracted into their own modules.&lt;/p&gt; &lt;p&gt;For example, these styles could be extracted into a separate component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const colors = {
  white,
  black,
  blue
}

export const space = [
  0,
  8,
  16,
  32,
  64
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then imported individually in other components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { space, colors } from &#39;./styles&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;126&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular React-specific linters?&lt;/h3&gt; &lt;p&gt;ESLint is a popular JavaScript linter. There are plugins available that analyse specific code styles. One of the most common for React is an npm package called &lt;code&gt;eslint-plugin-react&lt;/code&gt;. By default, it will check a number of best practices, with rules checking things from keys in iterators to a complete set of prop types.&lt;/p&gt; &lt;p&gt;Another popular plugin is &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;, which will help fix common issues with accessibility. As JSX offers slightly different syntax to regular HTML, issues with &lt;code&gt;alt&lt;/code&gt; text and &lt;code&gt;tabindex&lt;/code&gt;, for example, will not be picked up by regular plugins.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;127&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX call and in which component lifecycle methods should I make an AJAX call?&lt;/h3&gt; &lt;p&gt;You can use AJAX libraries such as Axios, jQuery AJAX, and the browser built-in &lt;code&gt;fetch&lt;/code&gt;. You should fetch data in the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. This is so you can use &lt;code&gt;setState()&lt;/code&gt; to update your component when the data is retrieved.&lt;/p&gt; &lt;p&gt;For example, the employees list fetched from API and set local state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      employees: [],
      error: null
    }
  }

  componentDidMount() {
    fetch(&#39;https://api.example.com/items&#39;)
      .then(res =&amp;gt; res.json())
      .then(
        (result) =&amp;gt; {
          this.setState({
            employees: result.employees
          })
        },
        (error) =&amp;gt; {
          this.setState({ error })
        }
      )
  }

  render() {
    const { error, employees } = this.state
    if (error) {
      return &amp;lt;div&amp;gt;Error: {error.message}&amp;lt;/div&amp;gt;;
    } else {
      return (
        &amp;lt;ul&amp;gt;
          {employees.map(employee =&amp;gt; (
            &amp;lt;li key={employee.name}&amp;gt;
              {employee.name}-{employee.experience}
            &amp;lt;/li&amp;gt;
          ))}
        &amp;lt;/ul&amp;gt;
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;128&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are render props?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Render Props&lt;/strong&gt; is a simple technique for sharing code between components using a prop whose value is a function. The below component uses render prop which returns a React element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;DataProvider render={data =&amp;gt; (
  &amp;lt;h1&amp;gt;{`Hello ${data.target}`}&amp;lt;/h1&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Libraries such as React Router and DownShift are using this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Router&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;129&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Router?&lt;/h3&gt; &lt;p&gt;React Router is a powerful routing library built on top of React that helps you add new screens and flows to your application incredibly quickly, all while keeping the URL in sync with what&#39;s being displayed on the page.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;130&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React Router is different from history library?&lt;/h3&gt; &lt;p&gt;React Router is a wrapper around the &lt;code&gt;history&lt;/code&gt; library which handles interaction with the browser&#39;s &lt;code&gt;window.history&lt;/code&gt; with its browser and hash histories. It also provides memory history which is useful for environments that don&#39;t have global history, such as mobile app development (React Native) and unit testing with Node.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;131&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components of React Router v4?&lt;/h3&gt; &lt;p&gt;React Router v4 provides below 3 &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;HashRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;MemoryRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The above components will create &lt;em&gt;browser&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, and &lt;em&gt;memory&lt;/em&gt; history instances. React Router v4 makes the properties and methods of the &lt;code&gt;history&lt;/code&gt; instance associated with your router available through the context in the &lt;code&gt;router&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;132&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods of &lt;code&gt;history&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;A history instance has two methods for navigation purpose.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;If you think of the history as an array of visited locations, &lt;code&gt;push()&lt;/code&gt; will add a new location to the array and &lt;code&gt;replace()&lt;/code&gt; will replace the current location in the array with the new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;133&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you programmatically navigate using React Router v4?&lt;/h3&gt; &lt;p&gt;There are three different ways to achieve programmatic routing/navigation within components.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using the &lt;code&gt;withRouter()&lt;/code&gt; higher-order function:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;withRouter()&lt;/code&gt; higher-order function will inject the history object as a prop of the component. This object provides &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods to avoid the usage of context.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { withRouter } from &#39;react-router-dom&#39; // this also works with &#39;react-router-native&#39;

const Button = withRouter(({ history }) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component and render props pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component passes the same props as &lt;code&gt;withRouter()&lt;/code&gt;, so you will be able to access the history methods through the history prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Route } from &#39;react-router-dom&#39;

const Button = () =&amp;gt; (
  &amp;lt;Route render={({ history }) =&amp;gt; (
    &amp;lt;button
      type=&#39;button&#39;
      onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
    &amp;gt;
      {&#39;Click Me!&#39;}
    &amp;lt;/button&amp;gt;
  )} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using context:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This option is not recommended and treated as unstable API.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const Button = (props, context) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; {
      context.history.push(&#39;/new-location&#39;)
    }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
)

Button.contextTypes = {
  history: React.PropTypes.shape({
    push: React.PropTypes.func.isRequired
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;134&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get query parameters in React Router v4?&lt;/h3&gt; &lt;p&gt;The ability to parse query strings was taken out of React Router v4 because there have been user requests over the years to support different implementation. So the decision has been given to users to choose the implementation they like. The recommended approach is to use query strings library.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryString = require(&#39;query-string&#39;);
const parsed = queryString.parse(props.location.search);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;URLSearchParams&lt;/code&gt; if you want something native:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const params = new URLSearchParams(props.location.search)
const foo = params.get(&#39;name&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should use a &lt;em&gt;polyfill&lt;/em&gt; for IE11.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;135&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/h3&gt; &lt;p&gt;You have to wrap your Route&#39;s in a &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block because &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; is unique in that it renders a route exclusively.&lt;/p&gt; &lt;p&gt;At first you need to add &lt;code&gt;Switch&lt;/code&gt; to your imports:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Switch, Router, Route } from &#39;react-router&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then define the routes within &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Router&amp;gt;
  &amp;lt;Switch&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
  &amp;lt;/Switch&amp;gt;
&amp;lt;/Router&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;136&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass params to &lt;code&gt;history.push&lt;/code&gt; method in React Router v4?&lt;/h3&gt; &lt;p&gt;While navigating you can pass props to the &lt;code&gt;history&lt;/code&gt; object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.props.history.push({
  pathname: &#39;/template&#39;,
  search: &#39;?name=sudheer&#39;,
  state: { detail: response.data }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;search&lt;/code&gt; property is used to pass query params in &lt;code&gt;push()&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;137&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to implement &lt;em&gt;default&lt;/em&gt; or &lt;em&gt;NotFound&lt;/em&gt; page?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; renders the first child &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; that matches. A &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; with no path always matches. So you just need to simply drop path attribute as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Switch&amp;gt;
  &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
  &amp;lt;Route path=&quot;/user&quot; component={User}/&amp;gt;
  &amp;lt;Route component={NotFound} /&amp;gt;
&amp;lt;/Switch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;138&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get history on React Router v4?&lt;/h3&gt; &lt;p&gt;Below are the list of steps to get history object on React Router v4,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a module that exports a &lt;code&gt;history&lt;/code&gt; object and import this module across the project.&lt;/p&gt; &lt;p&gt;For example, create &lt;code&gt;history.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createBrowserHistory } from &#39;history&#39;

export default createBrowserHistory({
  /* pass a configuration object here if needed */
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You should use the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component instead of built-in routers. Imported the above &lt;code&gt;history.js&lt;/code&gt; inside &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Router } from &#39;react-router-dom&#39;
import history from &#39;./history&#39;
import App from &#39;./App&#39;

ReactDOM.render((
  &amp;lt;Router history={history}&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/Router&amp;gt;
), holder)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use push method of &lt;code&gt;history&lt;/code&gt; object similar to built-in history object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// some-other-file.js
import history from &#39;./history&#39;

history.push(&#39;/go-here&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;139&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to perform automatic redirect after login?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-router&lt;/code&gt; package provides &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; component in React Router. Rendering a &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; will navigate to a new location. Like server-side redirects, the new location will override the current location in the history stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { Redirect } from &#39;react-router&#39;

export default class LoginComponent extends Component {
  render() {
    if (this.state.isLoggedIn === true) {
      return &amp;lt;Redirect to=&quot;/your/redirect/page&quot; /&amp;gt;
    } else {
      return &amp;lt;div&amp;gt;{&#39;Login Please&#39;}&amp;lt;/div&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Internationalization&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;140&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;React Intl&lt;/em&gt; library makes internalization in React straightforward, with off-the-shelf components and an API that can handle everything from formatting strings, dates, and numbers, to pluralization. React Intl is part of &lt;em&gt;FormatJS&lt;/em&gt; which provides bindings to React via its components and API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;141&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of React Intl?&lt;/h3&gt; &lt;p&gt;Below are the main features of React Intl,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Display numbers with separators.&lt;/li&gt; 
   &lt;li&gt;Display dates and times correctly.&lt;/li&gt; 
   &lt;li&gt;Display dates relative to &quot;now&quot;.&lt;/li&gt; 
   &lt;li&gt;Pluralize labels in strings.&lt;/li&gt; 
   &lt;li&gt;Support for 150+ languages.&lt;/li&gt; 
   &lt;li&gt;Runs in the browser and Node.&lt;/li&gt; 
   &lt;li&gt;Built on standards.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;142&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two ways of formatting in React Intl?&lt;/h3&gt; &lt;p&gt;The library provides two ways to format strings, numbers, and dates:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using react components:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;FormattedMessage
  id={&#39;account&#39;}
  defaultMessage={&#39;The amount is less than minimum balance.&#39;}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;2. **Using an API:**

     ```javascript
     const messages = defineMessages({
       accountMessage: {
         id: &#39;account&#39;,
         defaultMessage: &#39;The amount is less than minimum balance.&#39;,
       }
     })

     formatMessage(messages.accountMessage)
     ```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;143&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;&amp;lt;FormattedMessage&amp;gt;&lt;/code&gt; as placeholder using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Formatted... /&amp;gt;&lt;/code&gt; components from &lt;code&gt;react-intl&lt;/code&gt; return elements, not plain text, so they can&#39;t be used for placeholders, alt text, etc. In that case, you should use lower level API &lt;code&gt;formatMessage()&lt;/code&gt;. You can inject the &lt;code&gt;intl&lt;/code&gt; object into your component using &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component and then format the message using &lt;code&gt;formatMessage()&lt;/code&gt; available on that object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; {
  const placeholder = intl.formatMessage({id: &#39;messageId&#39;})
  return &amp;lt;input placeholder={placeholder} /&amp;gt;
}

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;144&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access current locale with React Intl?&lt;/h3&gt; &lt;p&gt;You can get the current locale in any component of your application using &lt;code&gt;injectIntl()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The current locale is ${intl.locale}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;145&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to format date using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component will give you access to the &lt;code&gt;formatDate()&lt;/code&gt; method via the props in your component. The method is used internally by instances of &lt;code&gt;FormattedDate&lt;/code&gt; and it returns the string representation of the formatted date.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const stringDate = this.props.intl.formatDate(date, {
  year: &#39;numeric&#39;,
  month: &#39;numeric&#39;,
  day: &#39;numeric&#39;
})

const MyComponent = ({intl}) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The formatted date is ${stringDate}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;146&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Shallow Renderer in React testing?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Shallow rendering&lt;/em&gt; is useful for writing unit test cases in React. It lets you render a component &lt;em&gt;one level deep&lt;/em&gt; and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered.&lt;/p&gt; &lt;p&gt;For example, if you have the following component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;
      &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then you can assert as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ShallowRenderer from &#39;react-test-renderer/shallow&#39;

// in your test
const renderer = new ShallowRenderer()
renderer.render(&amp;lt;MyComponent /&amp;gt;)

const result = renderer.getRenderOutput()

expect(result.type).toBe(&#39;div&#39;)
expect(result.props.children).toEqual([
  &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;,
  &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;147&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &lt;code&gt;TestRenderer&lt;/code&gt; package in React?&lt;/h3&gt; &lt;p&gt;This package provides a renderer that can be used to render components to pure JavaScript objects, without depending on the DOM or a native mobile environment. This package makes it easy to grab a snapshot of the platform view hierarchy (similar to a DOM tree) rendered by a ReactDOM or React Native without using a browser or &lt;code&gt;jsdom&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import TestRenderer from &#39;react-test-renderer&#39;

const Link = ({page, children}) =&amp;gt; &amp;lt;a href={page}&amp;gt;{children}&amp;lt;/a&amp;gt;

const testRenderer = TestRenderer.create(
  &amp;lt;Link page={&#39;https://www.facebook.com/&#39;}&amp;gt;{&#39;Facebook&#39;}&amp;lt;/Link&amp;gt;
)

console.log(testRenderer.toJSON())
// {
//   type: &#39;a&#39;,
//   props: { href: &#39;https://www.facebook.com/&#39; },
//   children: [ &#39;Facebook&#39; ]
// }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;148&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of ReactTestUtils package?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;ReactTestUtils&lt;/em&gt; are provided in the &lt;code&gt;with-addons&lt;/code&gt; package and allow you to perform actions against a simulated DOM for the purpose of unit testing.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;149&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Jest?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Jest&lt;/em&gt; is a JavaScript unit testing framework created by Facebook based on Jasmine and provides automated mock creation and a &lt;code&gt;jsdom&lt;/code&gt; environment. It&#39;s often used for testing components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;150&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Jest over Jasmine?&lt;/h3&gt; &lt;p&gt;There are couple of advantages compared to Jasmine:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automatically finds tests to execute in your source code.&lt;/li&gt; 
   &lt;li&gt;Automatically mocks dependencies when running your tests.&lt;/li&gt; 
   &lt;li&gt;Allows you to test asynchronous code synchronously.&lt;/li&gt; 
   &lt;li&gt;Runs your tests with a fake DOM implementation (via &lt;code&gt;jsdom&lt;/code&gt;) so that your tests can be run on the command line.&lt;/li&gt; 
   &lt;li&gt;Runs tests in parallel processes so that they finish sooner.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;151&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give a simple example of Jest test case&lt;/h3&gt; &lt;p&gt;Let&#39;s write a test for a function that adds two numbers in &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sum = (a, b) =&amp;gt; a + b

export default sum
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a file named &lt;code&gt;sum.test.js&lt;/code&gt; which contains actual test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import sum from &#39;./sum&#39;

test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {
  expect(sum(1, 2)).toBe(3)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print a result:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ yarn test
PASS ./sum.test.js
✓ adds 1 + 2 to equal 3 (2ms)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Redux&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;152&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is flux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flux&lt;/em&gt; is an &lt;em&gt;application design paradigm&lt;/em&gt; used as a replacement for the more traditional MVC pattern. It is not a framework or a library but a new kind of architecture that complements React and the concept of Unidirectional Data Flow. Facebook uses this pattern internally when working with React.&lt;/p&gt; &lt;p&gt;The workflow between dispatcher, stores and views components with distinct inputs and outputs as follows:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/flux.png&quot; alt=&quot;flux&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;153&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux&lt;/em&gt; is a predictable state container for JavaScript apps based on the &lt;em&gt;Flux design pattern&lt;/em&gt;. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;154&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the core principles of Redux?&lt;/h3&gt; &lt;p&gt;Redux follows three fundamental principles:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Single source of truth:&lt;/strong&gt; The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;State is read-only:&lt;/strong&gt; The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Changes are made with pure functions:&lt;/strong&gt; To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;155&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the downsides of Redux compared to Flux?&lt;/h3&gt; &lt;p&gt;Instead of saying downsides we can say that there are few compromises of using Redux over Flux. Those are as follows:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;You will need to learn to avoid mutations:&lt;/strong&gt; Flux is un-opinionated about mutating data, but Redux doesn&#39;t like mutations and many packages complementary to Redux assume you never mutate the state. You can enforce this with dev-only packages like &lt;code&gt;redux-immutable-state-invariant&lt;/code&gt;, Immutable.js, or instructing your team to write non-mutating code.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;You&#39;re going to have to carefully pick your packages:&lt;/strong&gt; While Flux explicitly doesn&#39;t try to solve problems such as undo/redo, persistence, or forms, Redux has extension points such as middleware and store enhancers, and it has spawned a rich ecosystem.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;There is no nice Flow integration yet:&lt;/strong&gt; Flux currently lets you do very impressive static type checks which Redux doesn&#39;t support yet.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;156&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;mapStateToProps()&lt;/code&gt; is a utility which helps your component get updated state (which is updated by some other components):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapStateToProps = (state) =&amp;gt; {
  return {
    todos: getVisibleTodos(state.todos, state.visibilityFilter)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;mapDispatchToProps()&lt;/code&gt; is a utility which will help your component to fire an action event (dispatching action which may cause change of application state):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {
  return {
    onTodoClick: (id) =&amp;gt; {
      dispatch(toggleTodo(id))
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Recommend always using the “object shorthand” form for the &lt;code&gt;mapDispatchToProps&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redux wrap it in another function that looks like (…args) =&amp;gt; dispatch(onTodoClick(…args)), and pass that wrapper function as a prop to your component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const mapDispatchToProps = ({
   onTodoClick
 })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;157&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I dispatch an action in reducer?&lt;/h3&gt; &lt;p&gt;Dispatching an action within a reducer is an &lt;strong&gt;anti-pattern&lt;/strong&gt;. Your reducer should be &lt;em&gt;without side effects&lt;/em&gt;, simply digesting the action payload and returning a new state object. Adding listeners and dispatching actions within the reducer can lead to chained actions and other side effects.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;158&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access Redux store outside a component?&lt;/h3&gt; &lt;p&gt;You just need to export the store from the module where it created with &lt;code&gt;createStore()&lt;/code&gt;. Also, it shouldn&#39;t pollute the global window object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;store = createStore(myReducer)

export default store
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;159&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the drawbacks of MVW pattern?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;DOM manipulation is very expensive which causes applications to behave slow and inefficient.&lt;/li&gt; 
   &lt;li&gt;Due to circular dependencies, a complicated model was created around models and views.&lt;/li&gt; 
   &lt;li&gt;Lot of data changes happens for collaborative applications(like Google Docs).&lt;/li&gt; 
   &lt;li&gt;No way to do undo (travel back in time) easily without adding so much extra code.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;160&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are there any similarities between Redux and RxJS?&lt;/h3&gt; &lt;p&gt;These libraries are very different for very different purposes, but there are some vague similarities.&lt;/p&gt; &lt;p&gt;Redux is a tool for managing state throughout the application. It is usually used as an architecture for UIs. Think of it as an alternative to (half of) Angular. RxJS is a reactive programming library. It is usually used as a tool to accomplish asynchronous tasks in JavaScript. Think of it as an alternative to Promises. Redux uses the Reactive paradigm because the Store is reactive. The Store observes actions from a distance, and changes itself. RxJS also uses the Reactive paradigm, but instead of being an architecture, it gives you basic building blocks, Observables, to accomplish this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;161&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to dispatch an action on load?&lt;/h3&gt; &lt;p&gt;You can dispatch an action in &lt;code&gt;componentDidMount()&lt;/code&gt; method and in &lt;code&gt;render()&lt;/code&gt; method you can verify the data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  componentDidMount() {
    this.props.fetchData()
  }

  render() {
    return this.props.isLoaded
      ? &amp;lt;div&amp;gt;{&#39;Loaded&#39;}&amp;lt;/div&amp;gt;
      : &amp;lt;div&amp;gt;{&#39;Not Loaded&#39;}&amp;lt;/div&amp;gt;
  }
}

const mapStateToProps = (state) =&amp;gt; ({
  isLoaded: state.isLoaded
})

const mapDispatchToProps = { fetchData }

export default connect(mapStateToProps, mapDispatchToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;162&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;connect()&lt;/code&gt; from React Redux?&lt;/h3&gt; &lt;p&gt;You need to follow two steps to use your store in your container:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use &lt;code&gt;mapStateToProps()&lt;/code&gt;:&lt;/strong&gt; It maps the state variables from your store to the props that you specify.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the above props to your container:&lt;/strong&gt; The object returned by the &lt;code&gt;mapStateToProps&lt;/code&gt; function is connected to the container. You can import &lt;code&gt;connect()&lt;/code&gt; from &lt;code&gt;react-redux&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { connect } from &#39;react-redux&#39;

class App extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;{this.props.containerData}&amp;lt;/div&amp;gt;
  }
}

function mapStateToProps(state) {
  return { containerData: state.data }
}

export default connect(mapStateToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;163&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to reset state in Redux?&lt;/h3&gt; &lt;p&gt;You need to write a &lt;em&gt;root reducer&lt;/em&gt; in your application which delegate handling the action to the reducer generated by &lt;code&gt;combineReducers()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take &lt;code&gt;rootReducer()&lt;/code&gt; to return the initial state after &lt;code&gt;USER_LOGOUT&lt;/code&gt; action. As we know, reducers are supposed to return the initial state when they are called with &lt;code&gt;undefined&lt;/code&gt; as the first argument, no matter the action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case of using &lt;code&gt;redux-persist&lt;/code&gt;, you may also need to clean your storage. &lt;code&gt;redux-persist&lt;/code&gt; keeps a copy of your state in a storage engine. First, you need to import the appropriate storage engine and then, to parse the state before setting it to undefined and clean each storage state key.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    Object.keys(state).forEach(key =&amp;gt; {
      storage.removeItem(`persist:${key}`)
    })

    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;164&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Whats the purpose of &lt;code&gt;at&lt;/code&gt; symbol in the Redux connect decorator?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;@&lt;/strong&gt; symbol is in fact a JavaScript expression used to signify decorators. &lt;em&gt;Decorators&lt;/em&gt; make it possible to annotate and modify classes and properties at design time.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example setting up Redux without and with a decorator.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Without decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

class MyApp extends React.Component {
  // ...define your main app here
}

export default connect(mapStateToProps, mapDispatchToProps)(MyApp)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;With decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

@connect(mapStateToProps, mapDispatchToProps)
export default class MyApp extends React.Component {
  // ...define your main app here
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;The above examples are almost similar except the usage of decorator. The decorator syntax isn&#39;t built into any JavaScript runtimes yet, and is still experimental and subject to change. You can use babel for the decorators support.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;165&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React context and React Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;strong&gt;Context&lt;/strong&gt; in your application directly and is going to be great for passing down data to deeply nested components which what it was designed for.&lt;/p&gt; &lt;p&gt;Whereas &lt;strong&gt;Redux&lt;/strong&gt; is much more powerful and provides a large number of features that the Context API doesn&#39;t provide. Also, React Redux uses context internally but it doesn&#39;t expose this fact in the public API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;166&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are Redux state functions called reducers?&lt;/h3&gt; &lt;p&gt;Reducers always return the accumulation of the state (based on all previous and current actions). Therefore, they act as a reducer of state. Each time a Redux reducer is called, the state and action are passed as parameters. This state is then reduced (or accumulated) based on the action, and then the next state is returned. You could &lt;em&gt;reduce&lt;/em&gt; a collection of actions and an initial state (of the store) on which to perform these actions to get the resulting final state.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;167&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX request in Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;redux-thunk&lt;/code&gt; middleware which allows you to define async actions.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of fetching specific account as an AJAX call using &lt;em&gt;fetch API&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export function fetchAccount(id) {
  return dispatch =&amp;gt; {
    dispatch(setLoadingAccountState()) // Show a loading spinner
    fetch(`/account/${id}`, (response) =&amp;gt; {
      dispatch(doneFetchingAccount()) // Hide loading spinner
      if (response.status === 200) {
        dispatch(setAccount(response.json)) // Use a normal function to set the received state
      } else {
        dispatch(someError)
      }
    })
  }
}

function setAccount(data) {
 return { type: &#39;SET_Account&#39;, data: data }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;168&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I keep all component&#39;s state in Redux store?&lt;/h3&gt; &lt;p&gt;Keep your data in the Redux store, and the UI related state internally in the component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;169&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper way to access Redux store?&lt;/h3&gt; &lt;p&gt;The best way to access your store in a component is to use the &lt;code&gt;connect()&lt;/code&gt; function, that creates a new component that wraps around your existing one. This pattern is called &lt;em&gt;Higher-Order Components&lt;/em&gt;, and is generally the preferred way of extending a component&#39;s functionality in React. This allows you to map state and action creators to your component, and have them passed in automatically as your store updates.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of &lt;code&gt;&amp;lt;FilterLink&amp;gt;&lt;/code&gt; component using connect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { connect } from &#39;react-redux&#39;
import { setVisibilityFilter } from &#39;../actions&#39;
import Link from &#39;../components/Link&#39;

const mapStateToProps = (state, ownProps) =&amp;gt; ({
  active: ownProps.filter === state.visibilityFilter
})

const mapDispatchToProps = (dispatch, ownProps) =&amp;gt; ({
  onClick: () =&amp;gt; dispatch(setVisibilityFilter(ownProps.filter))
})

const FilterLink = connect(
  mapStateToProps,
  mapDispatchToProps
)(Link)

export default FilterLink
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Due to it having quite a few performance optimizations and generally being less likely to cause bugs, the Redux developers almost always recommend using &lt;code&gt;connect()&lt;/code&gt; over accessing the store directly (using context API).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent {
  someMethod() {
    doSomethingWith(this.context.store)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;170&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between component and container in React Redux?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Component&lt;/strong&gt; is a class or function component that describes the presentational part of your application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt; is an informal term for a component that is connected to a Redux store. Containers &lt;em&gt;subscribe&lt;/em&gt; to Redux state updates and &lt;em&gt;dispatch&lt;/em&gt; actions, and they usually don&#39;t render DOM elements; they delegate rendering to presentational child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;171&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the constants in Redux?&lt;/h3&gt; &lt;p&gt;Constants allows you to easily find all usages of that specific functionality across the project when you use an IDE. It also prevents you from introducing silly bugs caused by typos – in which case, you will get a &lt;code&gt;ReferenceError&lt;/code&gt; immediately.&lt;/p&gt; &lt;p&gt;Normally we will save them in a single file (&lt;code&gt;constants.js&lt;/code&gt; or &lt;code&gt;actionTypes.js&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const ADD_TODO = &#39;ADD_TODO&#39;
export const DELETE_TODO = &#39;DELETE_TODO&#39;
export const EDIT_TODO = &#39;EDIT_TODO&#39;
export const COMPLETE_TODO = &#39;COMPLETE_TODO&#39;
export const COMPLETE_ALL = &#39;COMPLETE_ALL&#39;
export const CLEAR_COMPLETED = &#39;CLEAR_COMPLETED&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In Redux, you use them in two places:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;During action creation:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s take &lt;code&gt;actions.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;;

export function addTodo(text) {
  return { type: ADD_TODO, text }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;In reducers:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s create &lt;code&gt;reducer.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;

export default (state = [], action) =&amp;gt; {
  switch (action.type) {
    case ADD_TODO:
      return [
        ...state,
        {
          text: action.text,
          completed: false
        }
      ];
    default:
      return state
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;172&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to write &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are a few ways of binding &lt;em&gt;action creators&lt;/em&gt; to &lt;code&gt;dispatch()&lt;/code&gt; in &lt;code&gt;mapDispatchToProps()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: () =&amp;gt; dispatch(action())
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: bindActionCreators(action, dispatch)
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = { action }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The third option is just a shorthand for the first one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;173&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of the &lt;code&gt;ownProps&lt;/code&gt; parameter in &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;If the &lt;code&gt;ownProps&lt;/code&gt; parameter is specified, React Redux will pass the props that were passed to the component into your &lt;em&gt;connect&lt;/em&gt; functions. So, if you use a connected component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ConnectedComponent from &#39;./containers/ConnectedComponent&#39;;

&amp;lt;ConnectedComponent user={&#39;john&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;ownProps&lt;/code&gt; inside your &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt; functions will be an object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{ user: &#39;john&#39; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can use this object to decide what to return from those functions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;174&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to structure Redux top level directories?&lt;/h3&gt; &lt;p&gt;Most of the applications has several top-level directories as below:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;: Used for &lt;em&gt;dumb&lt;/em&gt; components unaware of Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Used for &lt;em&gt;smart&lt;/em&gt; components connected to Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Used for all action creators, where file names correspond to part of the app.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt;: Used for all reducers, where files name correspond to state key.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Used for store initialization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;This structure works well for small and medium size apps.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;175&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;redux-saga&lt;/code&gt; is a library that aims to make side effects (asynchronous things like data fetching and impure things like accessing the browser cache) in React/Redux applications easier and better.&lt;/p&gt; &lt;p&gt;It is available in NPM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save redux-saga
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;176&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the mental model of redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Saga&lt;/em&gt; is like a separate thread in your application, that&#39;s solely responsible for side effects. &lt;code&gt;redux-saga&lt;/code&gt; is a redux &lt;em&gt;middleware&lt;/em&gt;, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;177&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; in redux-saga?&lt;/h3&gt; &lt;p&gt;Both &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; are effect creator functions. &lt;code&gt;call()&lt;/code&gt; function is used to create effect description, which instructs middleware to call the promise. &lt;code&gt;put()&lt;/code&gt; function creates an effect, which instructs middleware to dispatch an action to the store.&lt;/p&gt; &lt;p&gt;Let&#39;s take example of how these effects work for fetching particular user data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* fetchUserSaga(action) {
  // `call` function accepts rest arguments, which will be passed to `api.fetchUser` function.
  // Instructing middleware to call promise, it resolved value will be assigned to `userData` variable
  const userData = yield call(api.fetchUser, action.userId)

  // Instructing middleware to dispatch corresponding action.
  yield put({
    type: &#39;FETCH_USER_SUCCESS&#39;,
    userData
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;178&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Thunk?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Thunk&lt;/em&gt; middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods &lt;code&gt;dispatch()&lt;/code&gt; and &lt;code&gt;getState()&lt;/code&gt; as parameters.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;179&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;redux-saga&lt;/code&gt; and &lt;code&gt;redux-thunk&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;Redux Thunk&lt;/em&gt; and &lt;em&gt;Redux Saga&lt;/em&gt; take care of dealing with side effects. In most of the scenarios, Thunk uses &lt;em&gt;Promises&lt;/em&gt; to deal with them, whereas Saga uses &lt;em&gt;Generators&lt;/em&gt;. Thunk is simple to use and Promises are familiar to many developers, Sagas/Generators are more powerful but you will need to learn them. But both middleware can coexist, so you can start with Thunks and introduce Sagas when/if you need them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;180&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux DevTools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux DevTools&lt;/em&gt; is a live-editing time travel environment for Redux with hot reloading, action replay, and customizable UI. If you don&#39;t want to bother with installing Redux DevTools and integrating it into your project, consider using Redux DevTools Extension for Chrome and Firefox.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;181&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of Redux DevTools?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux DevTools are below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Lets you inspect every state and action payload.&lt;/li&gt; 
   &lt;li&gt;Lets you go back in time by &lt;em&gt;cancelling&lt;/em&gt; actions.&lt;/li&gt; 
   &lt;li&gt;If you change the reducer code, each &lt;em&gt;staged&lt;/em&gt; action will be re-evaluated.&lt;/li&gt; 
   &lt;li&gt;If the reducers throw, you will see during which action this happened, and what the error was.&lt;/li&gt; 
   &lt;li&gt;With &lt;code&gt;persistState()&lt;/code&gt; store enhancer, you can persist debug sessions across page reloads.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;182&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Redux selectors and why to use them?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Selectors&lt;/em&gt; are functions that take Redux state as an argument and return some data to pass to the component.&lt;/p&gt; &lt;p&gt;For example, to get user details from the state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getUserData = state =&amp;gt; state.user.data
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These selectors have two main benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The selector can compute derived data, allowing Redux to store the minimal possible state&lt;/li&gt; 
   &lt;li&gt;The selector is not recomputed unless one of its arguments changes&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;183&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Form?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Form&lt;/em&gt; works with React and Redux to enable a form in React to use Redux to store all of its state. Redux Form can be used with raw HTML5 inputs, but it also works very well with common UI frameworks like Material UI, React Widgets and React Bootstrap.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;184&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Redux Form?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux Form are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Field values persistence via Redux store.&lt;/li&gt; 
   &lt;li&gt;Validation (sync/async) and submission.&lt;/li&gt; 
   &lt;li&gt;Formatting, parsing and normalization of field values.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;185&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add multiple middlewares to Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;applyMiddleware()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, you can add &lt;code&gt;redux-thunk&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt; passing them as arguments to &lt;code&gt;applyMiddleware()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createStore, applyMiddleware } from &#39;redux&#39;
const createStoreWithMiddleware = applyMiddleware(ReduxThunk, logger)(createStore)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;186&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set initial state in Redux?&lt;/h3&gt; &lt;p&gt;You need to pass initial state as second argument to createStore:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const rootReducer = combineReducers({
  todos: todos,
  visibilityFilter: visibilityFilter
})

const initialState = {
  todos: [{ id: 123, name: &#39;example&#39;, completed: false }]
}

const store = createStore(
  rootReducer,
  initialState
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;187&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Relay is different from Redux?&lt;/h3&gt; &lt;p&gt;Relay is similar to Redux in that they both use a single store. The main difference is that relay only manages state originated from the server, and all access to the state is used via &lt;em&gt;GraphQL&lt;/em&gt; queries (for reading data) and mutations (for changing data). Relay caches the data for you and optimizes data fetching for you, by fetching only changed data and nothing more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an action in Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Actions&lt;/em&gt; are plain JavaScript objects or payloads of information that send data from your application to your store. They are the only source of information for the store. Actions must have a type property that indicates the type of action being performed.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take an action which represents adding a new todo item:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: ADD_TODO,
  text: &#39;Add todo item&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;188&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React Native and React?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is a JavaScript library, supporting both front end web and being run on the server, for building user interfaces and web applications.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; is a mobile framework that compiles to native app components, allowing you to build native mobile applications (iOS, Android, and Windows) in JavaScript that allows you to use React to build your components, and implements React under the hood.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;189&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to test React Native apps?&lt;/h3&gt; &lt;p&gt;React Native can be tested only in mobile simulators like iOS and Android. You can run the app in your mobile using expo app (https://expo.io) Where it syncs using QR code, your mobile and computer should be in same wireless network.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;190&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to do logging in React Native?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, etc. As of React Native v0.29 you can simply run the following to see logs in the console:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ react-native log-ios
$ react-native log-android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;191&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug your React Native?&lt;/h3&gt; &lt;p&gt;Follow the below steps to debug React Native app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run your application in the iOS simulator.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + D&lt;/code&gt; and a webpage should open up at &lt;code&gt;http://localhost:8081/debugger-ui&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Enable &lt;em&gt;Pause On Caught Exceptions&lt;/em&gt; for a better debugging experience.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + Option + I&lt;/code&gt; to open the Chrome Developer tools, or open it via &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;You should now be able to debug as you normally would.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React supported libraries &amp;amp; Integration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;192&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reselect and how it works?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Reselect&lt;/em&gt; is a &lt;strong&gt;selector library&lt;/strong&gt; (for Redux) which uses &lt;em&gt;memoization&lt;/em&gt; concept. It was originally written to compute derived data from Redux-like applications state, but it can&#39;t be tied to any architecture or library.&lt;/p&gt; &lt;p&gt;Reselect keeps a copy of the last inputs/outputs of the last call, and recomputes the result only if one of the inputs changes. If the the same inputs are provided twice in a row, Reselect returns the cached output. It&#39;s memoization and cache are fully customizable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;193&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Flow?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flow&lt;/em&gt; is a &lt;em&gt;static type checker&lt;/em&gt; designed to find type errors in JavaScript. Flow types can express much more fine-grained distinctions than traditional type systems. For example, Flow helps you catch errors involving &lt;code&gt;null&lt;/code&gt;, unlike most type systems.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;194&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Flow and PropTypes?&lt;/h3&gt; &lt;p&gt;Flow is a &lt;em&gt;static analysis tool&lt;/em&gt; (static checker) which uses a superset of the language, allowing you to add type annotations to all of your code and catch an entire class of bugs at compile time.&lt;/p&gt; &lt;p&gt;PropTypes is a &lt;em&gt;basic type checker&lt;/em&gt; (runtime checker) which has been patched onto React. It can&#39;t check anything other than the types of the props being passed to a given component. If you want more flexible typechecking for your entire project Flow/TypeScript are appropriate choices.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;195&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Font Awesome icons in React?&lt;/h3&gt; &lt;p&gt;The below steps followed to include Font Awesome in React:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Install &lt;code&gt;font-awesome&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save font-awesome
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Import &lt;code&gt;font-awesome&lt;/code&gt; in your &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;font-awesome/css/font-awesome.min.css&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Add Font Awesome classes in &lt;code&gt;className&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return &amp;lt;div&amp;gt;&amp;lt;i className={&#39;fa fa-spinner&#39;} /&amp;gt;&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;196&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Dev Tools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Developer Tools&lt;/em&gt; let you inspect the component hierarchy, including component props and state. It exists both as a browser extension (for Chrome and Firefox), and as a standalone app (works with other environments including Safari, IE, and React Native).&lt;/p&gt; &lt;p&gt;The official extensions available for different browsers or environments.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Firefox extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Standalone app&lt;/strong&gt; (Safari, React Native, etc)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;197&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is DevTools not loading in Chrome for local files?&lt;/h3&gt; &lt;p&gt;If you opened a local HTML file in your browser (&lt;code&gt;file://...&lt;/code&gt;) then you must first open &lt;em&gt;Chrome Extensions&lt;/em&gt; and check &lt;code&gt;Allow access to file URLs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;198&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Polymer in React?&lt;/h3&gt; &lt;p&gt;You need to follow below steps to use Polymer in React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a Polymer element:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;../../bower_components/polymer/polymer.html&#39; /&amp;gt;
Polymer({
  is: &#39;calender-element&#39;,
  ready: function() {
    this.textContent = &#39;I am a calender&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Create the Polymer component HTML tag by importing it in a HTML document, e.g. import it in the &lt;code&gt;index.html&lt;/code&gt; of your React application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;./src/polymer-components/calender-element.html&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Use that element in the JSX file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;

class MyComponent extends React.Component {
  render() {
    return (
      &amp;lt;calender-element /&amp;gt;
    )
  }
}

export default MyComponent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;199&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React over Vue.js?&lt;/h3&gt; &lt;p&gt;React has the following advantages over Vue.js:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives more flexibility in large apps developing.&lt;/li&gt; 
   &lt;li&gt;Easier to test.&lt;/li&gt; 
   &lt;li&gt;Suitable for mobile apps creating.&lt;/li&gt; 
   &lt;li&gt;More information and solutions available.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of advantages are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;200&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and Angular?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the difference between React and Angular in a table format.&lt;/p&gt; &lt;p&gt;| React | Angular | | ----- | ------- | | React is a library and has only the View layer | Angular is a framework and has complete MVC functionality | | React handles rendering on the server side | AngularJS renders only on the client side but Angular 2 and above renders on the server side | | React uses JSX that looks like HTML in JS which can be confusing | Angular follows the template approach for HTML, which makes code shorter and easy to understand | | React Native, which is a React type to build mobile applications are faster and more stable | Ionic, Angular&#39;s mobile native app is relatively less stable and slower | | In React, data flows only in one way and hence debugging is easy | In Angular, data flows both way i.e it has two-way data binding between children and parent and hence debugging is often difficult |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of differences are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;201&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React tab is not showing up in DevTools?&lt;/h3&gt; &lt;p&gt;When the page loads, &lt;em&gt;React DevTools&lt;/em&gt; sets a global named &lt;code&gt;__REACT_DEVTOOLS_GLOBAL_HOOK__&lt;/code&gt;, then React communicates with that hook during initialization. If the website is not using React or if React fails to communicate with DevTools then it won&#39;t show up the tab.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;202&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Styled Components?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;styled-components&lt;/code&gt; is a JavaScript library for styling React applications. It removes the mapping between styles and components, and lets you write actual CSS augmented with JavaScript.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;203&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of Styled Components?&lt;/h3&gt; &lt;p&gt;Lets create &lt;code&gt;&amp;lt;Title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Wrapper&amp;gt;&lt;/code&gt; components with specific styles for each.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import styled from &#39;styled-components&#39;

// Create a &amp;lt;Title&amp;gt; component that renders an &amp;lt;h1&amp;gt; which is centered, red and sized at 1.5em
const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
`

// Create a &amp;lt;Wrapper&amp;gt; component that renders a &amp;lt;section&amp;gt; with some padding and a papayawhip background
const Wrapper = styled.section`
  padding: 4em;
  background: papayawhip;
`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These two variables, &lt;code&gt;Title&lt;/code&gt; and &lt;code&gt;Wrapper&lt;/code&gt;, are now components that you can render just like any other react component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Wrapper&amp;gt;
  &amp;lt;Title&amp;gt;{&#39;Lets start first styled component!&#39;}&amp;lt;/Title&amp;gt;
&amp;lt;/Wrapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;204&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Relay?&lt;/h3&gt; &lt;p&gt;Relay is a JavaScript framework for providing a data layer and client-server communication to web applications using the React view layer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;205&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use TypeScript in &lt;code&gt;create-react-app&lt;/code&gt; application?&lt;/h3&gt; &lt;p&gt;Starting from react-scripts@2.1.0 or higher, there is a built-in support for typescript. i.e, &lt;code&gt;create-react-app&lt;/code&gt; now supports typescript natively. You can just pass &lt;code&gt;--typescript&lt;/code&gt; option as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-react-app my-app --typescript

# or

yarn create react-app my-app --typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But for lower versions of react scripts, just supply &lt;code&gt;--scripts-version&lt;/code&gt; option as &lt;code&gt;react-scripts-ts&lt;/code&gt; while you create a new project. &lt;code&gt;react-scripts-ts&lt;/code&gt; is a set of adjustments to take the standard &lt;code&gt;create-react-app&lt;/code&gt; project pipeline and bring TypeScript into the mix.&lt;/p&gt; &lt;p&gt;Now the project layout should look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-app/
├─ .gitignore
├─ images.d.ts
├─ node_modules/
├─ public/
├─ src/
│  └─ ...
├─ package.json
├─ tsconfig.json
├─ tsconfig.prod.json
├─ tsconfig.test.json
└─ tslint.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;206&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Reselect library?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the main features of Reselect library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Selectors can compute derived data, allowing Redux to store the minimal possible state.&lt;/li&gt; 
   &lt;li&gt;Selectors are efficient. A selector is not recomputed unless one of its arguments changes.&lt;/li&gt; 
   &lt;li&gt;Selectors are composable. They can be used as input to other selectors.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h4&gt;Give an example of Reselect usage?&lt;/h4&gt; &lt;p&gt;Let&#39;s take calculations and different amounts of a shipment order with the simplified usage of Reselect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createSelector } from &#39;reselect&#39;

const shopItemsSelector = state =&amp;gt; state.shop.items
const taxPercentSelector = state =&amp;gt; state.shop.taxPercent

const subtotalSelector = createSelector(
  shopItemsSelector,
  items =&amp;gt; items.reduce((acc, item) =&amp;gt; acc + item.value, 0)
)

const taxSelector = createSelector(
  subtotalSelector,
  taxPercentSelector,
  (subtotal, taxPercent) =&amp;gt; subtotal * (taxPercent / 100)
)

export const totalSelector = createSelector(
  subtotalSelector,
  taxSelector,
  (subtotal, tax) =&amp;gt; ({ total: subtotal + tax })
)

let exampleState = {
  shop: {
    taxPercent: 8,
    items: [
      { name: &#39;apple&#39;, value: 1.20 },
      { name: &#39;orange&#39;, value: 0.95 },
    ]
  }
}

console.log(subtotalSelector(exampleState)) // 2.15
console.log(taxSelector(exampleState))      // 0.172
console.log(totalSelector(exampleState))    // { total: 2.322 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;209&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does the statics object work with ES6 classes in React?&lt;/h3&gt; &lt;p&gt;No, &lt;code&gt;statics&lt;/code&gt; only works with &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;someComponent= React.createClass({
  statics: {
    someMethod: function() {
      // ..
    }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can write statics inside ES6+ classes as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  static propTypes = {
    // ...
  }

  static someMethod() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or writing them outside class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
   ....
}

Component.propTypes = {...}
Component.someMethod = function(){....}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;210&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can Redux only be used with React?&lt;/h3&gt; &lt;p&gt;Redux can be used as a data store for any UI layer. The most common usage is with React and React Native, but there are bindings available for Angular, Angular 2, Vue, Mithril, and more. Redux simply provides a subscription mechanism which can be used by any other code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;211&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do you need to have a particular build tool to use Redux?&lt;/h3&gt; &lt;p&gt;Redux is originally written in ES6 and transpiled for production into ES5 with Webpack and Babel. You should be able to use it regardless of your JavaScript build process. Redux also offers a UMD build that can be used directly without any build process at all.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;212&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Redux Form &lt;code&gt;initialValues&lt;/code&gt; get updated from state?&lt;/h3&gt; &lt;p&gt;You need to add &lt;code&gt;enableReinitialize : true&lt;/code&gt; setting.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const InitializeFromStateForm = reduxForm({
  form: &#39;initializeFromState&#39;,
  enableReinitialize : true
})(UserEdit)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your &lt;code&gt;initialValues&lt;/code&gt; prop gets updated, your form will update too.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;213&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React PropTypes allow different types for one prop?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;oneOfType()&lt;/code&gt; method of &lt;code&gt;PropTypes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, the height property can be defined with either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; type as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Component.PropTypes = {
  size: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number
  ])
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;214&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I import an SVG file as react component?&lt;/h3&gt; &lt;p&gt;You can import SVG directly as component instead of loading it as a file. This feature is available with &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { ReactComponent as Logo } from &#39;./logo.svg&#39;

const App = () =&amp;gt; (
  &amp;lt;div&amp;gt;
    {/* Logo is an actual react component */}
    &amp;lt;Logo /&amp;gt;
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don&#39;t forget about the curly braces in the import.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;215&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are inline ref callbacks or functions not recommended?&lt;/h3&gt; &lt;p&gt;If the ref callback is defined as an inline function, it will get called twice during updates, first with null and then again with the DOM element. This is because a new instance of the function is created with each render, so React needs to clear the old ref and set up the new one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
  handleSubmit = () =&amp;gt; {
    console.log(&quot;Input Value is: &quot;, this.input.value)
  }


  render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={(input) =&amp;gt; this.input = input} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But our expectation is for the ref callback to get called once, when the component mounts. One quick fix is to use the ES7 class property syntax to define the function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
 handleSubmit = () =&amp;gt; {
   console.log(&quot;Input Value is: &quot;, this.input.value)
 }

 setSearchInput = (input) =&amp;gt; {
   this.input = input
 }

 render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={this.setSearchInput} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**Note:** In React v16.3,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;216&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is render hijacking in react?&lt;/h3&gt; &lt;p&gt;The concept of render hijacking is the ability to control what a component will output from another component. It actually means that you decorate your component by wrapping it into a Higher-Order component. By wrapping you can inject additional props or make other changes, which can cause changing logic of rendering. It does not actually enables hijacking, but by using HOC you make your component behave in different way.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;217&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are HOC factory implementations?&lt;/h3&gt; &lt;p&gt;There are two main ways of implementing HOCs in React.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Props Proxy (PP) and&lt;/li&gt; 
   &lt;li&gt;Inheritance Inversion (II).&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;But they follow different approaches for manipulating the &lt;em&gt;WrappedComponent&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Props Proxy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the render method of the HOC returns a React Element of the type of the WrappedComponent. We also pass through the props that the HOC receives, hence the name &lt;strong&gt;Props Proxy&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;
function ppHOC(WrappedComponent) {
 return class PP extends React.Component {
   render() {
     return &amp;lt;WrappedComponent {...this.props}/&amp;gt;
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inheritance Inversion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the returned HOC class (Enhancer) extends the WrappedComponent. It is called Inheritance Inversion because instead of the WrappedComponent extending some Enhancer class, it is passively extended by the Enhancer. In this way the relationship between them seems &lt;strong&gt;inverse&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function iiHOC(WrappedComponent) {
 return class Enhancer extends WrappedComponent {
   render() {
     return super.render()
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;218&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass numbers to React component?&lt;/h3&gt; &lt;p&gt;You should be passing the numbers via curly braces({}) where as strings in quotes&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   React.render(&amp;lt;User age={30} department={&quot;IT&quot;} /&amp;gt;, document.getElementById(&#39;container&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;219&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/h3&gt; &lt;p&gt;It is up to developer decision. i.e, It is developer job to determine what kinds of state make up your application, and where each piece of state should live. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as “is this dropdown currently open”, inside a component&#39;s internal state.&lt;/p&gt; &lt;p&gt;Below are the thumb rules to determine what kind of data should be put into Redux&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Do other parts of the application care about this data?&lt;/li&gt; 
   &lt;li&gt;Do you need to be able to create further derived data based on this original data?&lt;/li&gt; 
   &lt;li&gt;Is the same data being used to drive multiple components?&lt;/li&gt; 
   &lt;li&gt;Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?&lt;/li&gt; 
   &lt;li&gt;Do you want to cache the data (i.e, use what&#39;s in state if it&#39;s already there instead of re-requesting it)?&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;220&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of registerServiceWorker in React?&lt;/h3&gt; &lt;p&gt;React creates a service worker for you without any configuration by default. The service worker is a web API that helps you cache your assets and other files so that when the user is offline or on slow network, he/she can still see results on the screen, as such, it helps you build a better user experience, that&#39;s what you should know about service worker&#39;s for now. It&#39;s all about adding offline capabilities to your site.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   import React from &#39;react&#39;;
   import ReactDOM from &#39;react-dom&#39;;
   import App from &#39;./App&#39;;
   import registerServiceWorker from &#39;./registerServiceWorker&#39;;

   ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;root&#39;));
   registerServiceWorker();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;221&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React memo function?&lt;/h3&gt; &lt;p&gt;Class components can be restricted from rendering when their input props are the same using &lt;strong&gt;PureComponent or shouldComponentUpdate&lt;/strong&gt;. Now you can do the same with function components by wrapping them in &lt;strong&gt;React.memo&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = React.memo(function MyComponent(props) {
 /* only rerenders if props change */
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;222&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React lazy function?&lt;/h3&gt; The &lt;code&gt;React.lazy&lt;/code&gt; function lets you render an dynamic import as a regular component. It will automatically load the bundle containing the OtherComponent when the component gets rendered. This must return a Promise which resolves to a module with a default export containing a React component. &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;OtherComponent /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; React.lazy and Suspense is not yet available for server-side rendering. If you want to do code-splitting in a server rendered app, we still recommend React Loadable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;223&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent unnecessary updates using setState?&lt;/h3&gt; &lt;p&gt;You can compare current value of the state with an existing state value and decide whether to rerender the page or not. If the values are same then you need to return &lt;strong&gt;null&lt;/strong&gt; to stop re-rendering otherwise return the latest state value.&lt;/p&gt; &lt;p&gt;For example, the user profile information is conditionally rendered as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;getUserProfile = user =&amp;gt; {
  const latestAddress = user.address;
  this.setState(state =&amp;gt; {
    if (state.address === latestAddress) {
      return null;
    } else {
      return { title: latestAddress };
    }
  });
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;224&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Unlike older releases, you don&#39;t need to make sure &lt;strong&gt;render&lt;/strong&gt; method return a single element in React16. You are able to return multiple sibling elements without a wrapping element by returning an array.&lt;/p&gt; &lt;p&gt;For example, let us take the below list of developers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ReactJSDevs = () =&amp;gt; {
  return [
    &amp;lt;li key=&quot;1&quot;&amp;gt;John&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;2&quot;&amp;gt;Jackie&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;3&quot;&amp;gt;Jordan&amp;lt;/li&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also merge this array of items in another array component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const JSDevs = () =&amp;gt; {
  return (
    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;Brad&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;Brodge&amp;lt;/li&amp;gt;
      &amp;lt;ReactJSDevs/&amp;gt;
      &amp;lt;li&amp;gt;Brandon&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Strings and Numbers:&lt;/strong&gt; You can also return string and number type from the render method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
 return &#39;Welcome to ReactJS questions&#39;;
}
// Number
render() {
 return 2018;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;225&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use class field declarations syntax in React classes?&lt;/h3&gt; &lt;p&gt;React Class Components can be made much more concise using the class field declarations. You can initialize local state without using the constructor and declare class methods by using arrow functions without the extra need to bind them.&lt;/p&gt; &lt;p&gt;Let&#39;s take a counter example to demonstrate class field declarations for state without using constructor and methods without binding,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Counter extends Component {
  state = { value: 0 };

  handleIncrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value + 1
    }));
  };

  handleDecrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value - 1
    }));
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.state.value}

        &amp;lt;button onClick={this.handleIncrement}&amp;gt;+&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={this.handleDecrement}&amp;gt;-&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;226&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are hooks?&lt;/h3&gt; &lt;p&gt;Hooks is a new feature(React 16.8) that lets you use state and other React features without writing a class.&lt;/p&gt; &lt;p&gt;Let&#39;s see an example of useState hook example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { useState } from &#39;react&#39;;

function Example() {
  // Declare a new state variable, which we&#39;ll call &quot;count&quot;
  const [count, setCount] = useState(0);

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
        Click me
      &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;227&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules needs to follow for hooks?&lt;/h3&gt; &lt;p&gt;You need to follow two rules in order to use hooks,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Call Hooks only at the top level of your react functions. i.e, You shouldn’t call Hooks inside loops, conditions, or nested functions. This will ensure that Hooks are called in the same order each time a component renders and it preserves the state of Hooks between multiple useState and useEffect calls.&lt;/li&gt; 
   &lt;li&gt;Call Hooks from React Functions only. i.e, You shouldn’t call Hooks from regular JavaScript functions.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;228&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to ensure hooks followed the rules in your project?&lt;/h3&gt; React team released an ESLint plugin called &lt;strong&gt;eslint-plugin-react-hooks&lt;/strong&gt; that enforces these two rules. You can add this plugin to your project using the below command, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install eslint-plugin-react-hooks@next
&lt;/code&gt;&lt;/pre&gt; And apply the below config in your ESLint config file, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Your ESLint configuration
{
  &quot;plugins&quot;: [
    // ...
    &quot;react-hooks&quot;
  ],
  &quot;rules&quot;: {
    // ...
    &quot;react-hooks/rules-of-hooks&quot;: &quot;error&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; This plugin is intended to use in Create React App by default.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;229&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Flux and Redux?&lt;/h3&gt; &lt;p&gt;Below are the major differences between Flux and Redux&lt;/p&gt; &lt;p&gt;| Flux | Redux | | ----- | ------- | | State is mutable | State is immutable | | The Store contains both state and change logic | The Store and change logic are separate | | There are multiple stores exist | There is only one store exist | | All the stores are disconnected and flat | Single store with hierarchical reducers| | It has a singleton dispatcher | There is no concept of dispatcher | | React components subscribe to the store | Container components uses connect function|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;230&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of React Router V4?&lt;/h3&gt; &lt;p&gt;Below are the main benefits of React Router V4 module,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;In React Router v4(version 4), the API is completely about components. A router can be visualized as a single component(&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;) which wraps specific child router components(&lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;You don&#39;t need to manually set history. The router module will take care history by wrapping routes with &lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt; component.&lt;/li&gt; 
   &lt;li&gt;The application size is reduced by adding only the specific router module(Web, core, or native)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;231&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycle method is invoked after an error has been thrown by a descendant component. The method receives two parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;error: - The error object which was thrown&lt;/li&gt; 
   &lt;li&gt;info: - An object with a componentStack key contains the information about which component threw the error.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The method structure would be as follows&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidCatch(error, info)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;232&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;In which scenarios error boundaries do not catch errors?&lt;/h3&gt; &lt;p&gt;Below are the cases in which error boundaries doesn&#39;t work,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Inside Event handlers&lt;/li&gt; 
   &lt;li&gt;Asynchronous code using &lt;strong&gt;setTimeout or requestAnimationFrame&lt;/strong&gt; callbacks&lt;/li&gt; 
   &lt;li&gt;During Server side rendering&lt;/li&gt; 
   &lt;li&gt;When errors thrown in the error boundary code itself&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;233&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do not you need error boundaries for event handlers?&lt;/h3&gt; &lt;p&gt;Error boundaries do not catch errors inside event handlers. Event handlers don&#39;t happened or invoked during rendering time unlike render method or lifecycle methods. So React knows how to recover these kind of errors in event handlers. If still you need to catch an error inside event handler, use the regular JavaScript try / catch statement as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }

  handleClick = () =&amp;gt; {
    try {
      // Do something that could throw
    } catch (error) {
      this.setState({ error });
    }
  }

  render() {
    if (this.state.error) {
      return &amp;lt;h1&amp;gt;Caught an error.&amp;lt;/h1&amp;gt;
    }
    return &amp;lt;div onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code is catching the error using vanilla javascript try/catch block instead of error boundaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;234&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between try catch block and error boundaries?&lt;/h3&gt; &lt;p&gt;Try catch block works with imperative code whereas error boundaries are meant for declarative code to render on the screen.&lt;/p&gt; &lt;p&gt;For example, the try catch block used for below imperative code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  showButton();
} catch (error) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas error boundaries wrap declarative code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyComponent /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So if an error occurs in a &lt;strong&gt;componentDidUpdate&lt;/strong&gt; method caused by a &lt;strong&gt;setState&lt;/strong&gt; somewhere deep in the tree, it will still correctly propagate to the closest error boundary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;235&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the behavior of uncaught errors in react 16?&lt;/h3&gt; In React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree. The reason behind this decision is that it is worse to leave corrupted UI in place than to completely remove it. For example, it is worse for a payments app to display a wrong amount than to render nothing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;236&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper placement for error boundaries?&lt;/h3&gt; The granularity of error boundaries usage is up to the developer based on project needs. You can follow either of these approaches, 
  &lt;ol&gt; 
   &lt;li&gt;You can wrap top-level route components to display a generic error message for the entire application.&lt;/li&gt; 
   &lt;li&gt;You can also wrap individual components in an error boundary to protect them from crashing the rest of the application.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;237&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of component stack trace from error boundary?&lt;/h3&gt; &lt;p&gt;Apart from error messages and javascript stack, React16 will display the component stack trace with file names and line numbers using error boundary concept.&lt;/p&gt; &lt;p&gt;For example, BuggyCounter component displays the component stack trace as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/error_boundary.png&quot; alt=&quot;stacktrace&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;238&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the required method to be defined for a class component?&lt;/h3&gt; The &lt;code&gt;render()&lt;/code&gt; method is the only required method in a class component. i.e, All methods other than render method are optional for a class component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;239&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible return types of render method?&lt;/h3&gt; &lt;p&gt;Below are the list of following types used and return from render method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;React elements:&lt;/strong&gt; Elements that instruct React to render a DOM node. It includes html elements such as &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; and user defined elements.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Arrays and fragments:&lt;/strong&gt; Return multiple elements to render as Arrays and Fragments to wrap multiple elements&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Portals:&lt;/strong&gt; Render children into a different DOM subtree.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;String and numbers:&lt;/strong&gt; Render both Strings and Numbers as text nodes in the DOM&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans or null:&lt;/strong&gt; Doesn&#39;t render anything but these types are used to conditionally render content.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;240&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main purpose of constructor?&lt;/h3&gt; &lt;p&gt;The constructor is mainly used for two purposes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;To initialize local state by assigning object to this.state&lt;/li&gt; 
   &lt;li&gt;For binding event handler methods to the instance For example, the below code covers both the above cases,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;constructor(props) {
  super(props);
  // Don&#39;t call this.setState() here!
  this.state = { counter: 0 };
  this.handleClick = this.handleClick.bind(this);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;241&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it mandatory to define constructor for React component?&lt;/h3&gt; No, it is not mandatory. i.e, If you don’t initialize state and you don’t bind methods, you don’t need to implement a constructor for your React component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;242&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are default props?&lt;/h3&gt; &lt;p&gt;The defaultProps are defined as a property on the component class to set the default props for the class. This is used for undefined props, but not for null props.&lt;/p&gt; &lt;p&gt;For example, let us create color default prop for the button component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyButton extends React.Component {
  // ...
}

MyButton.defaultProps = {
  color: &#39;red&#39;
};

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If props.color is not provided then it will set the default value to &#39;red&#39;. i.e, Whenever you try to access the color prop it uses default value&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
   return &amp;lt;MyButton /&amp;gt; ; // props.color will be set to red
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you provide null value then it remains null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;243&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should not call setState in componentWillUnmount?&lt;/h3&gt; You should not call &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillUnmount()&lt;/code&gt; because once a component instance is unmounted, it will never be mounted again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;244&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of getDerivedStateFromError?&lt;/h3&gt; &lt;p&gt;This lifecycle method is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.&lt;/p&gt; &lt;p&gt;The signature of the lifecycle method is as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;static getDerivedStateFromError(error)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let us take error boundary use case with the above lifecycle method for demonistration purpose,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;Something went wrong.&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;245&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the methods order when component re-rendered?&lt;/h3&gt; &lt;p&gt;An update can be caused by changes to props or state. The below methods are called in the following order when a component is being re-rendered.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromProps()&lt;/li&gt; 
   &lt;li&gt;shouldComponentUpdate()&lt;/li&gt; 
   &lt;li&gt;render()&lt;/li&gt; 
   &lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt; 
   &lt;li&gt;componentDidUpdate()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;246&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods invoked during error handling?&lt;/h3&gt; &lt;p&gt;Below methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromError()&lt;/li&gt; 
   &lt;li&gt;componentDidCatch()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;247&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of displayName class property?&lt;/h3&gt; &lt;p&gt;The displayName string is used in debugging messages. Usually, you don’t need to set it explicitly because it’s inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component.&lt;/p&gt; &lt;p&gt;For example, To ease debugging, choose a display name that communicates that it’s the result of a withSubscription HOC.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withSubscription(WrappedComponent) {
  class WithSubscription extends React.Component {/* ... */}
  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;
  return WithSubscription;
}
function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || &#39;Component&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;248&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the browser support for react applications?&lt;/h3&gt; React supports all popular browsers, including Internet Explorer 9 and above, although some polyfills are required for older browsers such as IE 9 and IE 10. If you use &lt;strong&gt;es5-shim and es5-sham&lt;/strong&gt; polyfill then it even support old browsers that doesn&#39;t support ES5 methods.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;249&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of unmountComponentAtNode method?&lt;/h3&gt; &lt;p&gt;This method is available from react-dom package and it removes a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns true if a component was unmounted and false if there was no component to unmount.&lt;/p&gt; &lt;p&gt;The method signature would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.unmountComponentAtNode(container)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;250&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is code-splitting?&lt;/h3&gt; &lt;p&gt;Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime. The react project supports code splitting via dynamic import() feature.&lt;/p&gt; &lt;p&gt;For example, in the below code snippets, it will make moduleA.js and all its unique dependencies as a separate chunk that only loads after the user clicks the &#39;Load&#39; button. &lt;strong&gt;moduleA.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const moduleA = &#39;Hello&#39;;

export { moduleA };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;

class App extends Component {
  handleClick = () =&amp;gt; {
    import(&#39;./moduleA&#39;)
      .then(({ moduleA }) =&amp;gt; {
        // Use moduleA
      })
      .catch(err =&amp;gt; {
        // Handle failure
      });
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;button onClick={this.handleClick}&amp;gt;Load&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default App;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;251&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of strict mode?&lt;/h3&gt; &lt;p&gt;The 
   &lt;!-- raw HTML omitted --&gt; will be helpful in the below cases&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Identifying components with &lt;strong&gt;unsafe lifecycle methods&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Warning about &lt;strong&gt;legacy string ref&lt;/strong&gt; API usage.&lt;/li&gt; 
   &lt;li&gt;Detecting unexpected &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Detecting &lt;strong&gt;legacy context&lt;/strong&gt; API.&lt;/li&gt; 
   &lt;li&gt;Warning about deprecated findDOMNode usage&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;252&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Keyed Fragments?&lt;/h3&gt; &lt;p&gt;The Fragments declared with the explicit &amp;lt;React.Fragment&amp;gt; syntax may have keys. The general use case is mapping a collection to an array of fragments as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Glossary(props) {
  return (
    &amp;lt;dl&amp;gt;
      {props.items.map(item =&amp;gt; (
        // Without the `key`, React will fire a key warning
        &amp;lt;React.Fragment key={item.id}&amp;gt;
          &amp;lt;dt&amp;gt;{item.term}&amp;lt;/dt&amp;gt;
          &amp;lt;dd&amp;gt;{item.description}&amp;lt;/dd&amp;gt;
        &amp;lt;/React.Fragment&amp;gt;
      ))}
    &amp;lt;/dl&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; key is the only attribute that can be passed to Fragment. In the future, there might be a support for additional attributes, such as event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;253&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does React support all HTML attributes?&lt;/h3&gt; &lt;p&gt;As of React 16, both standard or custom DOM attributes are fully supported. Since React components often take both custom and DOM-related props, React uses the camelCase convention just like the DOM APIs.&lt;/p&gt; &lt;p&gt;Let us take few props with respect to standard HTML attributes,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div tabIndex=&quot;-1&quot; /&amp;gt;      // Just like node.tabIndex DOM API
&amp;lt;div className=&quot;Button&quot; /&amp;gt; // Just like node.className DOM API
&amp;lt;input readOnly={true} /&amp;gt;  // Just like node.readOnly DOM API
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These props work similarly to the corresponding HTML attributes, with the exception of the special cases. It also support all SVG attributes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;254&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations with HOCs?&lt;/h3&gt; &lt;p&gt;Higher-order components come with a few caveats apart from its benefits. Below are the few listed in an order,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Don’t use HOCs inside the render method:&lt;/strong&gt; It is not recommended to apply a HOC to a component within the render method of a component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  // A new version of EnhancedComponent is created on every render
  // EnhancedComponent1 !== EnhancedComponent2
  const EnhancedComponent = enhance(MyComponent);
  // That causes the entire subtree to unmount/remount each time!
  return &amp;lt;EnhancedComponent /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code impact performance by remounting a component that causes the state of that component and all of its children to be lost. Instead, apply HOCs outside the component definition so that the resulting component is created only once.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static methods must be copied over:&lt;/strong&gt; When you apply a HOC to a component the new component does not have any of the static methods of the original component&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Define a static method
WrappedComponent.staticMethod = function() {/*...*/}
// Now apply a HOC
const EnhancedComponent = enhance(WrappedComponent);

// The enhanced component has no static method
typeof EnhancedComponent.staticMethod === &#39;undefined&#39; // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can overcome this by copying the methods onto the container before returning it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function enhance(WrappedComponent) {
  class Enhance extends React.Component {/*...*/}
  // Must know exactly which method(s) to copy :(
  Enhance.staticMethod = WrappedComponent.staticMethod;
  return Enhance;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Refs aren’t passed through:&lt;/strong&gt; For HOCs you need to pass through all props to the wrapped component but this does not work for refs. This is because ref is not really a prop similar to key. In this case you need to use the React.forwardRef API&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;255&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug forwardRefs in DevTools?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React.forwardRef&lt;/strong&gt; accepts a render function as parameter and DevTools uses this function to determine what to display for the ref forwarding component.&lt;/p&gt; &lt;p&gt;For example, If you don&#39;t name the render function or not using displayName property then it will appear as ”ForwardRef” in the DevTools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef((props, ref) =&amp;gt; {
  return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But If you name the render function then it will appear as &lt;strong&gt;”ForwardRef(myFunction)”&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef(
  function myFunction(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As an alternative, You can also set displayName property for forwardRef function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logProps(Component) {
  class LogProps extends React.Component {
    // ...
  }

  function forwardRef(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }

  // Give this component a more helpful display name in DevTools.
  // e.g. &quot;ForwardRef(logProps(MyComponent))&quot;
  const name = Component.displayName || Component.name;
  forwardRef.displayName = `logProps(${name})`;

  return React.forwardRef(forwardRef);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;256&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When component props defaults to true?&lt;/h3&gt; &lt;p&gt;If you pass no value for a prop, it defaults to true. This behavior is available so that it matches the behavior of HTML.&lt;/p&gt; &lt;p&gt;For example, below expressions are equivalent,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyInput autocomplete /&amp;gt;

&amp;lt;MyInput autocomplete={true} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is not recommended to use this approach because it can be confused with the ES6 object shorthand (example, &lt;code&gt;{name}&lt;/code&gt; which is short for &lt;code&gt;{name: name}&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;257&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is NextJS and major features of it?&lt;/h3&gt; &lt;p&gt;Next.js is a popular and lightweight framework for static and server‑rendered applications built with React. It also provides styling and routing solutions. Below are the major features provided by NextJS,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Server-rendered by default&lt;/li&gt; 
   &lt;li&gt;Automatic code splitting for faster page loads&lt;/li&gt; 
   &lt;li&gt;Simple client-side routing (page based)&lt;/li&gt; 
   &lt;li&gt;Webpack-based dev environment which supports (HMR)&lt;/li&gt; 
   &lt;li&gt;Able to implement with Express or any other Node.js HTTP server&lt;/li&gt; 
   &lt;li&gt;Customizable with your own Babel and Webpack configurations&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;258&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass an event handler to a component?&lt;/h3&gt; &lt;p&gt;You can pass event handlers and other functions as props to child components. It can be used in child component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;259&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use arrow functions in render methods?&lt;/h3&gt; &lt;p&gt;Yes, You can use. It is often the easiest way to pass parameters to callback functions. But you need to optimize the performance while using it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Foo extends Component {
  handleClick() {
    console.log(&#39;Click happened&#39;);
  }
  render() {
    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using an arrow function in render method creates a new function each time the component renders, which may have performance implications&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;260&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent a function from being called multiple times?&lt;/h3&gt; &lt;p&gt;If you use an event handler such as &lt;strong&gt;onClick or onScroll&lt;/strong&gt; and want to prevent the callback from being fired too quickly, then you can limit the rate at which callback is executed. This can be achieved in the below possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Throttling:&lt;/strong&gt; Changes based on a time based frequency. For example, it can be used using _.throttle lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Debouncing:&lt;/strong&gt; Publish changes after a period of inactivity. For example, it can be used using _.debounce lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RequestAnimationFrame throttling:&lt;/strong&gt; Changes based on requestAnimationFrame. For example, it can be used using raf-schd lodash function&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;261&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How JSX prevents Injection Attacks?&lt;/h3&gt; &lt;p&gt;React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that’s not explicitly written in your application. Everything is converted to a string before being rendered.&lt;/p&gt; &lt;p&gt;For example, you can embed user input as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const name = response.potentiallyMaliciousInput;
const element = &amp;lt;h1&amp;gt;{name}&amp;lt;/h1&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way you can prevent XSS(Cross-site-scripting) attacks in the application.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;262&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you update rendered elements?&lt;/h3&gt; &lt;p&gt;You can update UI(represented by rendered element) by passing the newly created element to ReactDOM&#39;s render method.&lt;/p&gt; &lt;p&gt;For example, lets take a ticking clock example, where it updates the time by calling render method multiple times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tick() {
  const element = (
    &amp;lt;div&amp;gt;
      &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;It is {new Date().toLocaleTimeString()}.&amp;lt;/h2&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  ReactDOM.render(element, document.getElementById(&#39;root&#39;));
}

setInterval(tick, 1000);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;263&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that props are read only?&lt;/h3&gt; &lt;p&gt;When you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt; &lt;p&gt;Let us take a below capital function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capital(amount, interest) {
   return amount + interest;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above function is called “pure” because it does not attempt to change their inputs, and always return the same result for the same inputs. Hence, React has a single rule saying &quot;All React components must act like pure functions with respect to their props.&quot;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;264&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that state updates are merged?&lt;/h3&gt; &lt;p&gt;When you call setState() in the component, React merges the object you provide into the current state.&lt;/p&gt; &lt;p&gt;For example, let us take a facebook user with posts and comments details as state variables,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  constructor(props) {
    super(props);
    this.state = {
      posts: [],
      comments: []
    };
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can update them independently with separate &lt;code&gt;setState()&lt;/code&gt; calls as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; componentDidMount() {
    fetchPosts().then(response =&amp;gt; {
      this.setState({
        posts: response.posts
      });
    });

    fetchComments().then(response =&amp;gt; {
      this.setState({
        comments: response.comments
      });
    });
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code snippets, &lt;code&gt;this.setState({comments})&lt;/code&gt; updates only comments variable without modifying or replacing posts variable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;265&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass arguments to an event handler?&lt;/h3&gt; &lt;p&gt;During iterations or loops, it is common to pass an extra parameter to an event handler. This can be achieved through arrow functions or bind method.&lt;/p&gt; &lt;p&gt;Let us take an example of user details updated in a grid,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;button onClick={(e) =&amp;gt; this.updateUser(userId, e)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&amp;lt;button onClick={this.updateUser.bind(this, userId)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In both the approaches, the synthetic argument e is passed as a second argument. You need to pass it explicitly for arrow functions and it forwarded automatically for bind method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;266&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent component from rendering?&lt;/h3&gt; &lt;p&gt;You can prevent component from rendering by returning null based on specific condition. This way it can conditionally render component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Greeting(props) {
  if (!props.loggedIn) {
    return null;
  }

  return (
    &amp;lt;div className=&quot;greeting&quot;&amp;gt;
      welcome, {props.name}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props);
    this.state = {loggedIn: false, name: &#39;John&#39;};
  }

  render() {
   return (
       &amp;lt;div&amp;gt;
         //Prevent component render if it is not loggedIn
         &amp;lt;Greeting loggedIn={this.state.loggedIn} /&amp;gt;
         &amp;lt;UserDetails name={this.state.name}&amp;gt;
       &amp;lt;/div&amp;gt;
   );
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above example, the greeting component skips its rendering section by applying condition and returning null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;267&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conditions to safely use the index as a key?&lt;/h3&gt; &lt;p&gt;There are three conditions to make sure, it is safe use the index as a key.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The list and items are static– they are not computed and do not change&lt;/li&gt; 
   &lt;li&gt;The items in the list have no ids&lt;/li&gt; 
   &lt;li&gt;The list is never reordered or filtered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;268&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it keys should be globally unique?&lt;/h3&gt; &lt;p&gt;Keys used within arrays should be unique among their siblings but they don’t need to be globally unique. i.e, You can use the same keys with two different arrays.&lt;/p&gt; &lt;p&gt;For example, the below book component uses two arrays with different arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Book(props) {
  const index = (
    &amp;lt;ul&amp;gt;
      {props.pages.map((page) =&amp;gt;
        &amp;lt;li key={page.id}&amp;gt;
          {page.title}
        &amp;lt;/li&amp;gt;
      )}
    &amp;lt;/ul&amp;gt;
  );
  const content = props.pages.map((page) =&amp;gt;
    &amp;lt;div key={page.id}&amp;gt;
      &amp;lt;h3&amp;gt;{page.title}&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;{page.content}&amp;lt;/p&amp;gt;
      &amp;lt;p&amp;gt;{page.pageNumber}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  return (
    &amp;lt;div&amp;gt;
      {index}
      &amp;lt;hr /&amp;gt;
      {content}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;269&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the popular choice for form handling?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Formik&lt;/code&gt; is a form library for react which provides solutions such as validation, keeping track of the visited fields, and handling form submission.&lt;/p&gt; &lt;p&gt;In detail, You can categorize them as follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It is used to create a scalable, performant, form helper with a minimal API to solve annoying stuff.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;270&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of formik over redux form library?&lt;/h3&gt; &lt;p&gt;Below are the main reasons to recommend formik over redux form library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The form state is inherently short-term and local, so tracking it in Redux (or any kind of Flux library) is unnecessary.&lt;/li&gt; 
   &lt;li&gt;Redux-Form calls your entire top-level Redux reducer multiple times ON EVERY SINGLE KEYSTROKE. This way it increases input latency for large apps.&lt;/li&gt; 
   &lt;li&gt;Redux-Form is 22.5 kB minified gzipped whereas Formik is 12.7 kB&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;271&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not required to use inheritance?&lt;/h3&gt; In React, it is recommend using composition instead of inheritance to reuse code between components. Both Props and composition give you all the flexibility you need to customize a component’s look and behavior in an explicit and safe way. Whereas, If you want to reuse non-UI functionality between components, it is suggested to extracting it into a separate JavaScript module. Later components import it and use that function, object, or a class, without extending it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;272&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use web components in react application?&lt;/h3&gt; &lt;p&gt;Yes, you can use web components in a react application. Even though many developers won&#39;t use this combination, it may require especially if you are using third-party UI components that are written using Web Components.&lt;/p&gt; &lt;p&gt;For example, let us use &lt;code&gt;Vaadin&lt;/code&gt; date picker web component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;
import &#39;./App.css&#39;;
import &#39;@vaadin/vaadin-date-picker&#39;;
class App extends Component {
  render() {
    return (
      &amp;lt;div className=&quot;App&quot;&amp;gt;
        &amp;lt;vaadin-date-picker label=&quot;When were you born?&quot;&amp;gt;&amp;lt;/vaadin-date-picker&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;273&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is dynamic import?&lt;/h3&gt; &lt;p&gt;The dynamic import() syntax is a ECMAScript proposal not currently part of the language standard. It is expected to be accepted in the near future. You can achieve code-splitting into your app using dynamic import.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of addition,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { add } from &#39;./math&#39;;
console.log(add(10, 20));
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Dynamic Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&quot;./math&quot;).then(math =&amp;gt; {
  console.log(math.add(10, 20));
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;274&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are loadable components?&lt;/h3&gt; &lt;p&gt;If you want to do code-splitting in a server rendered app, it is recommend to use Loadable Components because React.lazy and Suspense is not yet available for server-side rendering. Loadable lets you render a dynamic import as a regular component.&lt;/p&gt; &lt;p&gt;Lets take an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import loadable from &#39;@loadable/component&#39;

const OtherComponent = loadable(() =&amp;gt; import(&#39;./OtherComponent&#39;))

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;OtherComponent /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now OtherComponent will be loaded in a separated bundle&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;275&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is suspense component?&lt;/h3&gt; &lt;p&gt;If the module containing the dynamic import is not yet loaded by the time parent component renders, you must show some fallback content while you’re waiting for it to load using a loading indicator. This can be done using &lt;strong&gt;Suspense&lt;/strong&gt; component.&lt;/p&gt; &lt;p&gt;For example, the below code uses suspense component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
        &amp;lt;OtherComponent /&amp;gt;
      &amp;lt;/Suspense&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code, Suspense is wrapped above the lazy component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;276&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is route based code splitting?&lt;/h3&gt; &lt;p&gt;One of the best place to do code splitting is with routes. The entire page is going to re-render at once so users are unlikely to interact with other elements in the page at the same time. Due to this, the user experience won&#39;t be disturbed.&lt;/p&gt; &lt;p&gt;Let us take an example of route based website using libraries like React Router with React.lazy,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { BrowserRouter as Router, Route, Switch } from &#39;react-router-dom&#39;;
import React, { Suspense, lazy } from &#39;react&#39;;

const Home = lazy(() =&amp;gt; import(&#39;./routes/Home&#39;));
const About = lazy(() =&amp;gt; import(&#39;./routes/About&#39;));

const App = () =&amp;gt; (
  &amp;lt;Router&amp;gt;
    &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
        &amp;lt;Route path=&quot;/about&quot; component={About}/&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/Suspense&amp;gt;
  &amp;lt;/Router&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, the code splitting will happen at each route level.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;277&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example on How to use context?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt; is designed to share data that can be considered &lt;strong&gt;global&lt;/strong&gt; for a tree of React components.&lt;/p&gt; &lt;p&gt;For example, in the code below lets manually thread through a “theme” prop in order to style the Button component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Lets create a context with a default theme value &quot;luna&quot;
const ThemeContext = React.createContext(&#39;luna&#39;);
// Create App component where it uses provider to pass theme value in the tree
class App extends React.Component {
  render() {
    return (
      &amp;lt;ThemeContext.Provider value=&quot;nova&quot;&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/ThemeContext.Provider&amp;gt;
    );
  }
}
// A middle component where you don&#39;t need to pass theme prop anymore
function Toolbar(props) {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;ThemedButton /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// Lets read theme value in the button component to use
class ThemedButton extends React.Component {
  static contextType = ThemeContext;
  render() {
    return &amp;lt;Button theme={this.context} /&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;278&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of default value in context?&lt;/h3&gt; &lt;p&gt;The defaultValue argument is only used when a component does not have a matching Provider above it in the tree. This can be helpful for testing components in isolation without wrapping them.&lt;/p&gt; &lt;p&gt;Below code snippet provides default theme value as Luna.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyContext = React.createContext(defaultValue);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;279&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use contextType?&lt;/h3&gt; &lt;p&gt;ContextType is used to consume the context object. The contextType property can be used in two ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;contextType as property of class:&lt;/strong&gt; The contextType property on a class can be assigned a Context object created by React.createContext(). After that, you can consume the nearest current value of that Context type using this.context in any of the lifecycle methods and render function.&lt;/p&gt; &lt;p&gt;Lets assign contextType property on MyClass as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  componentDidMount() {
    let value = this.context;
    /* perform a side-effect at mount using the value of MyContext */
  }
  componentDidUpdate() {
    let value = this.context;
    /* ... */
  }
  componentWillUnmount() {
    let value = this.context;
    /* ... */
  }
  render() {
    let value = this.context;
    /* render something based on the value of MyContext */
  }
}
MyClass.contextType = MyContext;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static field&lt;/strong&gt; You can use a static class field to initialize your contextType using public class field syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  static contextType = MyContext;
  render() {
    let value = this.context;
    /* render something based on the value */
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;280&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a consumer?&lt;/h3&gt; &lt;p&gt;A Consumer is a React component that subscribes to context changes. It requires a function as a child which receives current context value as argument and returns a react node. The value argument passed to the function will be equal to the value prop of the closest Provider for this context above in the tree.&lt;/p&gt; &lt;p&gt;Lets take a simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyContext.Consumer&amp;gt;
  {value =&amp;gt; /* render something based on the context value */}
&amp;lt;/MyContext.Consumer&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;281&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you solve performance corner cases while using context?&lt;/h3&gt; &lt;p&gt;The context uses reference identity to determine when to re-render, there are some gotchas that could trigger unintentional renders in consumers when a provider’s parent re-renders.&lt;/p&gt; &lt;p&gt;For example, the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  render() {
    return (
      &amp;lt;Provider value={{something: &#39;something&#39;}}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can be solved by lifting up the value to parent state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: {something: &#39;something&#39;},
    };
  }

  render() {
    return (
      &amp;lt;Provider value={this.state.value}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;282&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of forward ref in HOCs?&lt;/h3&gt; &lt;p&gt;Refs will not get passed through because ref is not a prop. It handled differently by React just like &lt;strong&gt;key&lt;/strong&gt;. If you add a ref to a HOC, the ref will refer to the outermost container component, not the wrapped component. In this case, you can use Forward Ref API. For example, we can explicitly forward refs to the inner FancyButton component using the React.forwardRef API.&lt;/p&gt; &lt;p&gt;The below HOC logs all props,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
function logProps(Component) {
  class LogProps extends React.Component {
    componentDidUpdate(prevProps) {
      console.log(&#39;old props:&#39;, prevProps);
      console.log(&#39;new props:&#39;, this.props);
    }

    render() {
      const {forwardedRef, ...rest} = this.props;

      // Assign the custom prop &quot;forwardedRef&quot; as a ref
      return &amp;lt;Component ref={forwardedRef} {...rest} /&amp;gt;;
    }
  }

  return React.forwardRef((props, ref) =&amp;gt; {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  });
}
```
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s use this HOC to log all props that get passed to our “fancy button” component,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
class FancyButton extends React.Component {
  focus() {
    // ...
  }

  // ...
}
export default logProps(FancyButton);
```
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now lets create a ref and pass it to FancyButton component. In this case, you can set focus to button element.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
import FancyButton from &#39;./FancyButton&#39;;

const ref = React.createRef();
ref.current.focus();
&amp;lt;FancyButton
  label=&quot;Click Me&quot;
  handleClick={handleClick}
  ref={ref}
/&amp;gt;;
```
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;283&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it ref argument available for all functions or class components?&lt;/h3&gt; Regular function or class components don’t receive the ref argument, and ref is not available in props either. The second ref argument only exists when you define a component with React.forwardRef call.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;284&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need additional care for component libraries while using forward refs?&lt;/h3&gt; When you start using forwardRef in a component library, you should treat it as a breaking change and release a new major version of your library. This is because your library likely has a different behavior such as what refs get assigned to, and what types are exported. These changes can break apps and other libraries that depend on the old behavior.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;285&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create react class components without ES6?&lt;/h3&gt; &lt;p&gt;If you don’t use ES6 then you may need to use the create-react-class module instead. For default props, you need to define getDefaultProps() as a function on the passed object. Whereas for initial state, you have to provide a separate getInitialState method that returns the initial state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var Greeting = createReactClass({
  getDefaultProps: function() {
      return {
        name: &#39;Jhohn&#39;
      };
    },
  getInitialState: function() {
      return {message: this.props.message};
    },
  handleClick: function() {
     console.log(this.state.message);
  },
  render: function() {
    return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;;
  }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use createReactClass then auto binding is available for all methods. i.e, You don&#39;t need to use &lt;code&gt;.bind(this)&lt;/code&gt; with in constructor for event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;286&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use react without JSX?&lt;/h3&gt; &lt;p&gt;Yes, JSX is not mandatory for using React. Actually it is convenient when you don’t want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling &lt;code&gt;React.createElement(component, props, ...children)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take a greeting example with JSX,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;Hello {this.props.message}&amp;lt;/div&amp;gt;;
  }
}

ReactDOM.render(
  &amp;lt;Greeting message=&quot;World&quot; /&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the same code without JSX as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return React.createElement(&#39;div&#39;, null, `Hello ${this.props.message}`);
  }
}

ReactDOM.render(
  React.createElement(Greeting, {message: &#39;World&#39;}, null),
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;287&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is diffing algorithm?&lt;/h3&gt; &lt;p&gt;React needs to use algorithms to find out how to efficiently update the UI to match the most recent tree. The diffing algorithms is generating the minimum number of operations to transform one tree into another. However, the algorithms have a complexity in the order of O(n3) where n is the number of elements in the tree.&lt;/p&gt; &lt;p&gt;In this case, for displaying 1000 elements would require in the order of one billion comparisons. This is far too expensive. Instead, React implements a heuristic O(n) algorithm based on two assumptions:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two elements of different types will produce different trees.&lt;/li&gt; 
   &lt;li&gt;The developer can hint at which child elements may be stable across different renders with a key prop.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;288&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules covered by diffing algorithm?&lt;/h3&gt; &lt;p&gt;When diffing two trees, React first compares the two root elements. The behavior is different depending on the types of the root elements. It covers the below rules during reconciliation algorithm,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Elements Of Different Types:&lt;/strong&gt; Whenever the root elements have different types, React will tear down the old tree and build the new tree from scratch. For example, elements 
    &lt;!-- raw HTML omitted --&gt; to 
    &lt;!-- raw HTML omitted --&gt;, or from 
    &lt;!-- raw HTML omitted --&gt; to 
    &lt;!-- raw HTML omitted --&gt; of different types lead a full rebuild.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;DOM Elements Of The Same Type:&lt;/strong&gt; When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes. Lets take an example with same DOM elements except className attribute, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div className=&quot;show&quot; title=&quot;ReactJS&quot; /&amp;gt;

&amp;lt;div className=&quot;hide&quot; title=&quot;ReactJS&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Component Elements Of The Same Type:&lt;/strong&gt; When a component updates, the instance stays the same, so that state is maintained across renders. React updates the props of the underlying component instance to match the new element, and calls componentWillReceiveProps() and componentWillUpdate() on the underlying instance. After that, the render() method is called and the diff algorithm recurses on the previous result and the new result.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Recursing On Children:&lt;/strong&gt; when recursing on the children of a DOM node, React just iterates over both lists of children at the same time and generates a mutation whenever there’s a difference. For example, when adding an element at the end of the children, converting between these two trees works well. &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Handling keys:&lt;/strong&gt; React supports a key attribute. When children have keys, React uses the key to match children in the original tree with children in the subsequent tree. For example, adding a key can make the tree conversion efficient,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2014&quot;&amp;gt;Connecticut&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;289&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When do you need to use refs?&lt;/h3&gt; &lt;p&gt;There are few use cases to go for refs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Managing focus, text selection, or media playback.&lt;/li&gt; 
   &lt;li&gt;Triggering imperative animations.&lt;/li&gt; 
   &lt;li&gt;Integrating with third-party DOM libraries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;290&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it prop must be named as render for render props?&lt;/h3&gt; &lt;p&gt;Even though the pattern named render props, you don’t have to use a prop named render to use this pattern. i.e, Any prop that is a function that a component uses to know what to render is technically a “render prop”. Lets take an example with the children prop for render props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse children={mouse =&amp;gt; (
  &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Actually children prop doesn’t need to be named in the list of “attributes” in JSX element. Instead, you can keep it directly inside element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse&amp;gt;
  {mouse =&amp;gt; (
    &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
  )}
&amp;lt;/Mouse&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While using this above technique(without any name), explicitly state that children should be a function in your propTypes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Mouse.propTypes = {
  children: PropTypes.func.isRequired
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;291&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems of using render props with pure components?&lt;/h3&gt; If you create a function inside a render method, it negates the purpose of pure component. Because the shallow prop comparison will always return false for new props, and each render in this case will generate a new value for the render prop. You can solve this issue by defining the render function as instance method.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;292&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create HOC using render props?&lt;/h3&gt; &lt;p&gt;You can implement most higher-order components (HOC) using a regular component with a render prop. For example, if you would prefer to have a withMouse HOC instead of a 
   &lt;!-- raw HTML omitted --&gt; component, you could easily create one using a regular 
   &lt;!-- raw HTML omitted --&gt; with a render prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withMouse(Component) {
  return class extends React.Component {
    render() {
      return (
        &amp;lt;Mouse render={mouse =&amp;gt; (
          &amp;lt;Component {...this.props} mouse={mouse} /&amp;gt;
        )}/&amp;gt;
      );
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way render props gives the flexibility of using either pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;293&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is windowing technique?&lt;/h3&gt; Windowing is a technique that only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created. If your application renders long lists of data then this technique is recommended. Both react-window and react-virtualized are popular windowing libraries which provides several reusable components for displaying lists, grids, and tabular data.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;294&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print falsy values in JSX?&lt;/h3&gt; &lt;p&gt;The falsy values such as false, null, undefined, and true are valid children but they don&#39;t render anything. If you still want to display them then you need to convert it to string. Let&#39;s take an example on how to convert to a string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div&amp;gt;
  My JavaScript variable is {String(myVariable)}.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;295&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typical use case of portals?&lt;/h3&gt; &lt;p&gt;React portals are very useful when a parent component has overflow: hidden or has properties that affect the stacking context(z-index,position,opacity etc styles) and you need to visually “break out” of its container.&lt;/p&gt; &lt;p&gt;For example, dialogs, global message notifications, hovercards, and tooltips.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;296&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set default value for uncontrolled component?&lt;/h3&gt; &lt;p&gt;In React, the value attribute on form elements will override the value in the DOM. With an uncontrolled component, you might want React to specify the initial value, but leave subsequent updates uncontrolled. To handle this case, you can specify a &lt;strong&gt;defaultValue&lt;/strong&gt; attribute instead of &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return (
    &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
      &amp;lt;label&amp;gt;
        User Name:
        &amp;lt;input
          defaultValue=&quot;John&quot;
          type=&quot;text&quot;
          ref={this.input} /&amp;gt;
      &amp;lt;/label&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The same applies for &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textArea&lt;/code&gt; inputs. But you need to use &lt;strong&gt;defaultChecked&lt;/strong&gt; for &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; inputs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;297&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is your favorite React stack?&lt;/h3&gt; Even though the tech stack varies from developer to developer, the most popular stack is used in react boilerplate project code. It mainly uses Redux and redux-saga for state management and asynchronous side-effects, react-router for routing purpose, styled-components for styling react components, axios for invoking REST api, and other supported stack such as webpack, reselect, ESNext, Babel. You can clone the project https://github.com/react-boilerplate/react-boilerplate and start working on any new react project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;298&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Real DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Real DOM and Virtual DOM,&lt;/p&gt; &lt;p&gt;| Real DOM | Virtual DOM | | ----- | ------- | | Updates are slow | Updates are fast | | DOM manipulation is very expensive. | DOM manipulation is very easy | | You can update HTML directly. | You Can’t directly update HTML | | It causes too much of memory wastage | There is no memory wastage| | Creates a new DOM if element updates | It updates the JSX if element update|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;299&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Bootstrap to a react application?&lt;/h3&gt; &lt;p&gt;Bootstrap can be added to your React app in a three possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using the Bootstrap CDN: This is the easiest way to add bootstrap. Add both bootstrap CSS and JS resources in a head tag.&lt;/li&gt; 
   &lt;li&gt;Bootstrap as Dependency: If you are using a build tool or a module bundler such as Webpack, then this is the preferred option for adding Bootstrap to your React application &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install bootstrap
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;React Bootstrap Package: In this case, you can add Bootstrap to our React app is by using a package that has rebuilt Bootstrap components to work particularly as React components. Below packages are popular in this category, 
    &lt;ol&gt; 
     &lt;li&gt;react-bootstrap&lt;/li&gt; 
     &lt;li&gt;reactstrap&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;300&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you list down top websites or applications using react as front end framework?&lt;/h3&gt; &lt;p&gt;Below are the &lt;code&gt;top 10 websites&lt;/code&gt; using React as their front-end framework,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Facebook&lt;/li&gt; 
   &lt;li&gt;Uber&lt;/li&gt; 
   &lt;li&gt;Instagram&lt;/li&gt; 
   &lt;li&gt;WhatsApp&lt;/li&gt; 
   &lt;li&gt;Khan Academy&lt;/li&gt; 
   &lt;li&gt;Airbnb&lt;/li&gt; 
   &lt;li&gt;Dropbox&lt;/li&gt; 
   &lt;li&gt;Flipboard&lt;/li&gt; 
   &lt;li&gt;Netflix&lt;/li&gt; 
   &lt;li&gt;PayPal&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;301&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use CSS In JS technique in React?&lt;/h3&gt; React does not have any opinion about how styles are defined but if you are a beginner then good starting point is to define your styles in a separate *.css file as usual and refer to them using className. This functionality is not part of React but came from third-party libraries. But If you want to try a different approach(CSS-In-JS) then styled-components library is a good option.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;302&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to rewrite all my class components with hooks?&lt;/h3&gt; No. But you can try Hooks in a few components(or new components) without rewriting any existing code. Because there are no plans to remove classes in ReactJS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;303&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to fetch data with React Hooks?&lt;/h3&gt; &lt;p&gt;The effect hook called &lt;code&gt;useEffect&lt;/code&gt; is used to fetch the data with axios from the API and to set the data in the local state of the component with the state hook’s update function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example in which it fetches list of react articles from the API&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useState, useEffect } from &#39;react&#39;;
import axios from &#39;axios&#39;;

function App() {
  const [data, setData] = useState({ hits: [] });

  useEffect(async () =&amp;gt; {
    const result = await axios(
      &#39;http://hn.algolia.com/api/v1/search?query=react&#39;,
    );

    setData(result.data);
  }, []);

  return (
    &amp;lt;ul&amp;gt;
      {data.hits.map(item =&amp;gt; (
        &amp;lt;li key={item.objectID}&amp;gt;
          &amp;lt;a href={item.url}&amp;gt;{item.title}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
      ))}
    &amp;lt;/ul&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember we provided an empty array as second argument to the effect hook to avoid activating it on component updates but only for the mounting of the component. i.e, It fetches only for component mount.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;304&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is Hooks cover all use cases for classes?&lt;/h3&gt; Hooks doesn&#39;t cover all use cases of classes but there is a plan to add them soon. Currently there are no Hook equivalents to the uncommon &lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt; and &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycles yet.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;305&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the stable release for hooks support?&lt;/h3&gt; &lt;p&gt;React includes a stable implementation of React Hooks in 16.8 release for below packages&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React DOM&lt;/li&gt; 
   &lt;li&gt;React DOM Server&lt;/li&gt; 
   &lt;li&gt;React Test Renderer&lt;/li&gt; 
   &lt;li&gt;React Shallow Renderer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;306&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we use array destructuring (square brackets notation) in &lt;code&gt;useState&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;When we declare a state variable with &lt;code&gt;useState&lt;/code&gt;, it returns a pair — an array with two items. The first item is the current value, and the second is a function that updates the value. Using [0] and [1] to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.&lt;/p&gt; &lt;p&gt;For example, the array index access would look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var userStateVariable = useState(&#39;userProfile&#39;); // Returns an array pair
 var user = userStateVariable[0]; // Access first item
 var setUser = userStateVariable[1]; // Access second item
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas with array destructuring the variables can be accessed as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [user, setUser] = useState(&#39;userProfile&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the sources used for introducing hooks?&lt;/h3&gt; &lt;p&gt;Hooks got the ideas from several different sources. Below are some of them,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Previous experiments with functional APIs in the react-future repository&lt;/li&gt; 
   &lt;li&gt;Community experiments with render prop APIs such as Reactions Component&lt;/li&gt; 
   &lt;li&gt;State variables and state cells in DisplayScript.&lt;/li&gt; 
   &lt;li&gt;Subscriptions in Rx.&lt;/li&gt; 
   &lt;li&gt;Reducer components in ReasonReact.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;308&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access imperative API of web components?&lt;/h3&gt; Web Components often expose an imperative API to implement its functions. You will need to use a &lt;strong&gt;ref&lt;/strong&gt; to interact with the DOM node directly if you want to access imperative API of a web component. But if you are using third-party Web Components, the best solution is to write a React component that behaves as a &lt;strong&gt;wrapper&lt;/strong&gt; for your Web Component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;309&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is formik?&lt;/h3&gt; &lt;p&gt;Formik is a small react form library that helps you with the three major problems,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;310&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/h3&gt; Some of the popular middleware choices for handling asynchronous calls in Redux eco system are &lt;code&gt;Redux Thunk, Redux Promise, Redux Saga&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;311&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do browsers understand JSX code?&lt;/h3&gt; No, browsers can&#39;t understand JSX code. You need a transpiler to convert your JSX to regular Javascript that browsers can understand. The most widely used transpiler right now is Babel.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;312&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Describe about data flow in react?&lt;/h3&gt; React implements one-way reactive data flow using props which reduce boilerplate and is easier to understand than traditional two-way data binding.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;313&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is react scripts?&lt;/h3&gt; The &lt;code&gt;react-scripts&lt;/code&gt; package is a set of scripts from the create-react-app starter pack which helps you kick off projects without configuring. The &lt;code&gt;react-scripts start&lt;/code&gt; command sets up the development environment and starts a server, as well as hot module reloading.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;314&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of create react app?&lt;/h3&gt; &lt;p&gt;Below are the list of some of the features provided by create react app.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, Typescript and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS&lt;/li&gt; 
   &lt;li&gt;CSS Reset/Normalize&lt;/li&gt; 
   &lt;li&gt;A live development server&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps&lt;/li&gt; 
   &lt;li&gt;An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;315&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of renderToNodeStream method?&lt;/h3&gt; The &lt;code&gt;ReactDOMServer#renderToNodeStream&lt;/code&gt; method is used to generate HTML on the server and send the markup down on the initial request for faster page loads. It also helps search engines to crawl your pages easily for SEO purposes. &lt;strong&gt;Note:&lt;/strong&gt; Remember this method is not available in the browser but only server.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;316&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is MobX?&lt;/h3&gt; MobX is a simple, scalable and battle tested state management solution for applying functional reactive programming (TFRP). For reactJs application, you need to install below packages, &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install mobx --save
npm install mobx-react --save
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;317&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Redux and MobX?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Redux and MobX,&lt;/p&gt; &lt;p&gt;| Topic | Redux | MobX | | ----- | ------- | ------- | Definition| It is a javascript library for managing the application state | It is a library for reactively managing the state of your applications | | Programming | It is mainly written in ES6 | It is written in JavaScript(ES5) | | Data Store | There is only one large store exist for data storage | There is more than one store for storage | | Usage | Mainly used for large and complex applications | Used for simple applications | | Performance | Need to be improved | Provides better performance | | How it stores | Uses JS Object to store | Uses observable to store the data |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;318&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I learn ES6 before learning ReactJS?&lt;/h3&gt; &lt;p&gt;No, you don’t have to learn es2015/es6 to learn react. But you may find many resources or React ecosystem uses ES6 extensively. Let&#39;s see some of the frequently used ES6 features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Destructuring:&lt;/strong&gt; To get props and use them in a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
 var someData = this.props.someData
 var dispatch = this.props.dispatch

// in es6
const { someData, dispatch } = this.props
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Spread operator: Helps in passing props down into a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
&amp;lt;SomeComponent someData={this.props.someData} dispatch={this.props.dispatch} /&amp;gt;

// in es6
&amp;lt;SomeComponent {...this.props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Arrow functions: Makes compact syntax &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// es 5
var users = usersList.map(function (user) {
 return &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;
})
// es 6
const users = usersList.map(user =&amp;gt; &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;319&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Concurrent Rendering?&lt;/h3&gt; &lt;p&gt;The Concurrent rendering makes React apps to be more responsive by rendering component trees without blocking the main UI thread. It allows React to interrupt a long-running render to handle a high-priority event. i.e, When you enabled concurrent Mode, React will keep an eye on other tasks that need to be done, and if there&#39;s something with a higher priority it will pause what it is currently rendering and let the other task finish first. You can enable this in two ways,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 1. Part of an app by wrapping with ConcurrentMode
&amp;lt;React.unstable_ConcurrentMode&amp;gt;
  &amp;lt;Something /&amp;gt;
&amp;lt;/React.unstable_ConcurrentMode&amp;gt;

// 2. Whole app using createRoot
ReactDOM.unstable_createRoot(domNode).render(&amp;lt;App /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;320&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between async mode and concurrent mode?&lt;/h3&gt; Both refers the same thing. Previously concurrent Mode being referred to as &quot;Async Mode&quot; by React team. The name has been changed to highlight React’s ability to perform work on different priority levels. So it avoids the confusion from other approaches to Async Rendering.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;321&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use javascript urls in react16.9?&lt;/h3&gt; &lt;p&gt;Yes, you can use javascript: URLs but it will log a warning in the console. Because URLs starting with javascript: are dangerous by including unsanitized output in a tag like &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; and create a security hole.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const companyProfile = {
  website: &quot;javascript: alert(&#39;Your website is hacked&#39;)&quot;,
};
// It will log a warning
&amp;lt;a href={companyProfile.website}&amp;gt;More details&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember that the future versions will throw an error for javascript URLs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;322&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of eslint plugin for hooks?&lt;/h3&gt; &lt;p&gt;The ESLint plugin enforces rules of Hooks to avoid bugs. It assumes that any function starting with ”use” and a capital letter right after it is a Hook. In particular, the rule enforces that,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Calls to Hooks are either inside a PascalCase function (assumed to be a component) or another useSomething function (assumed to be a custom Hook).&lt;/li&gt; 
   &lt;li&gt;Hooks are called in the same order on every render.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;323&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Imperative and Declarative in React?&lt;/h3&gt; &lt;p&gt;Imagine a simple UI component, such as a &quot;Like&quot; button. When you tap it, it turns blue if it was previously grey, and grey if it was previously blue.&lt;/p&gt; &lt;p&gt;The imperative way of doing this would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( user.likes() ) {
    if( hasBlue() ) {
        removeBlue();
        addGrey();
    } else {
        removeGrey();
        addBlue();
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Basically, you have to check what is currently on the screen and handle all the changes necessary to redraw it with the current state, including undoing the changes from the previous state. You can imagine how complex this could be in a real-world scenario.&lt;/p&gt; &lt;p&gt;In contrast, the declarative approach would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( this.state.liked ) {
    return &amp;lt;blueLike /&amp;gt;;
} else {
    return &amp;lt;greyLike /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because the declarative approach separates concerns, this part of it only needs to handle how the UI should look in a sepecific state, and is therefore much simpler to understand.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;324&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of using typescript with reactjs?&lt;/h3&gt; &lt;p&gt;Below are some of the benefits of using typescript with Reactjs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use latest JavaScript features&lt;/li&gt; 
   &lt;li&gt;Use of interfaces for complex type definitions&lt;/li&gt; 
   &lt;li&gt;IDEs such as VS Code was made for TypeScript&lt;/li&gt; 
   &lt;li&gt;Avoid bugs with the ease of readability and Validation&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When a user logs in and reload, to persist the state generally we add the load user action in the useEffect hooks in the main App.js. While using Redux, loadUser action can be easily accessed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {loadUser}  from &#39;../actions/auth&#39;;
store.dispatch(loadUser());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;But while using &lt;strong&gt;Context API&lt;/strong&gt;, to access context in App.js, wrap the AuthState in index.js so that App.js can access the auth context. Now whenever the page reloads, no matter what route you are on, the user will be authenticated as &lt;strong&gt;loadUser&lt;/strong&gt; action will be triggered on each re-render.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import App from &#39;./App&#39;;
import AuthState from &#39;./context/auth/AuthState&#39;

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;AuthState&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/AuthState&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const authContext = useContext(AuthContext);

  const { loadUser } = authContext;

  useEffect(() =&amp;gt; {
    loadUser();
  },[])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;loadUser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    const loadUser = async () =&amp;gt; {
        const token = sessionStorage.getItem(&#39;token&#39;);

        if(!token){
            dispatch({
                type: ERROR
            })
        }
        setAuthToken(token);

        try {
            const res = await axios(&#39;/api/auth&#39;); 

            dispatch({
                type: USER_LOADED,
                payload: res.data.data
            })
            
        } catch (err) {
           console.error(err); 
        }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;326&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of new JSX transform?&lt;/h3&gt; &lt;p&gt;There are three major benefits of new JSX transform,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use JSX without importing React packages&lt;/li&gt; 
   &lt;li&gt;The compiled output might improve the bundle size in a small amount&lt;/li&gt; 
   &lt;li&gt;The future improvements provides the flexibility to reduce the number of concepts to learn React.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does new JSX transform different from old transform?&lt;/h3&gt; &lt;p&gt;The new JSX transform doesn’t require React to be in scope. i.e, You don&#39;t need to import React package for simple scenarios.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to look at the main differences between the old and the new transform,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Old Transform:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now JSX transform convert the above code into regular JavaScript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return React.createElement(&#39;h1&#39;, null, &#39;Good morning!!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;New Transform:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The new JSX transform doesn&#39;t require any React imports&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Under the hood JSX transform compiles to below code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {jsx as _jsx} from &#39;react/jsx-runtime&#39;;

function App() {
  return _jsx(&#39;h1&#39;, { children: &#39;Good morning!!&#39; });
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You still need to import React to use Hooks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get redux scaffolding using create-react-app?&lt;/h3&gt; &lt;p&gt;Redux team has provided official redux+js or redux+typescript templates for create-react-app project. The generated project setup includes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Redux Toolkit and React-Redux dependencies&lt;/li&gt; 
   &lt;li&gt;Create and configure Redux store&lt;/li&gt; 
   &lt;li&gt;React-Redux &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; passing the store to React components&lt;/li&gt; 
   &lt;li&gt;Small &quot;counter&quot; example to demo how to add redux logic and React-Redux hooks API to interact with the store from components&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The below commands need to be executed along with template option as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Javascript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Typescript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux-typescript
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Server components?&lt;/h3&gt; &lt;p&gt;React Server Component is a way to write React component that gets rendered in the server-side with the purpose of improving React app performance. These components allow us to load components from the backend.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; React Server Components is still under development and not recommended for production yet.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>github/opensource.guide</title>
      <link>https://github.com/github/opensource.guide</link>
      <description>&lt;p&gt;📚 Community guides for open source creators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Source Guides&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github/opensource.guide/actions&quot;&gt;&lt;img src=&quot;https://github.com/github/opensource.guide/workflows/GitHub%20Actions%20CI/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Open Source Guides (https://opensource.guide/) are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open source project.&lt;/p&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is because we felt that there weren&#39;t enough resources for people creating open source projects.&lt;/p&gt; 
&lt;p&gt;Our goal was to aggregate community best practices, &lt;em&gt;not&lt;/em&gt; what GitHub (or any other individual or entity) thinks is best. Therefore, we used examples and quotations from others to illustrate our points.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This site is powered by &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Check out our &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; for ways to offer feedback and contribute.&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;Content is released under &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;CC-BY-4.0&lt;/a&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md&quot;&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The initial release of these guides were authored by &lt;strong&gt;&lt;a href=&quot;https://github.com/nayafia&quot;&gt;@nayafia&lt;/a&gt;, &lt;a href=&quot;https://github.com/bkeepers&quot;&gt;@bkeepers&lt;/a&gt;, &lt;a href=&quot;https://github.com/stephbwills&quot;&gt;@stephbwills&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/mlinksva&quot;&gt;@mlinksva&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;strong&gt;&lt;a href=&quot;https://github.com/aitchabee&quot;&gt;@aitchabee&lt;/a&gt;, &lt;a href=&quot;https://github.com/benbalter&quot;&gt;@benbalter&lt;/a&gt;, &lt;a href=&quot;https://github.com/brettcannon&quot;&gt;@brettcannon&lt;/a&gt;, &lt;a href=&quot;https://github.com/caabernathy&quot;&gt;@caabernathy&lt;/a&gt;, &lt;a href=&quot;https://github.com/CoralineAda&quot;&gt;@coralineada&lt;/a&gt;, &lt;a href=&quot;https://github.com/dmleong&quot;&gt;@dmleong&lt;/a&gt;, &lt;a href=&quot;https://github.com/ericholscher&quot;&gt;@ericholscher&lt;/a&gt;, &lt;a href=&quot;https://github.com/gr2m&quot;&gt;@gr2m&lt;/a&gt;, &lt;a href=&quot;https://github.com/janl&quot;&gt;@janl&lt;/a&gt;, &lt;a href=&quot;https://github.com/jessfraz&quot;&gt;@jessfraz&lt;/a&gt;, &lt;a href=&quot;https://github.com/joshsimmons&quot;&gt;@joshsimmons&lt;/a&gt;, &lt;a href=&quot;https://github.com/kfogel&quot;&gt;@kfogel&lt;/a&gt;, &lt;a href=&quot;https://github.com/kytrinyx&quot;&gt;@kytrinyx&lt;/a&gt;, &lt;a href=&quot;https://github.com/lee-dohm&quot;&gt;@lee-dohm&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikeal&quot;&gt;@mikeal&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;@mikemcquaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathansobo&quot;&gt;@nathansobo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nruff&quot;&gt;@nruff&lt;/a&gt;, &lt;a href=&quot;https://github.com/nsqe&quot;&gt;@nsqe&lt;/a&gt;, &lt;a href=&quot;https://github.com/orta&quot;&gt;@orta&lt;/a&gt;, &lt;a href=&quot;https://github.com/parkr&quot;&gt;@parkr&lt;/a&gt;, &lt;a href=&quot;https://github.com/shazow&quot;&gt;@shazow&lt;/a&gt;, &lt;a href=&quot;https://github.com/steveklabnik&quot;&gt;@steveklabnik&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/wooorm&quot;&gt;@wooorm&lt;/a&gt;&lt;/strong&gt; for lending their valuable input and expertise leading up to the initial release, and to &lt;strong&gt;&lt;a href=&quot;https://github.com/sophshep&quot;&gt;@sophshep&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/jeejkang&quot;&gt;@jeejkang&lt;/a&gt;&lt;/strong&gt; for designing and illustrating the guides.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;While we&#39;ve got advice about running an open source project, we&#39;re not lawyers. Be sure to read our &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md#legal-disclaimer&quot;&gt;disclaimer&lt;/a&gt; before diving in.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The-Lynx-Team/OSCP</title>
      <link>https://github.com/The-Lynx-Team/OSCP</link>
      <description>&lt;p&gt;Our OSCP repo: from popping shells to mental health.&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;████████╗██╗  ██╗███████╗     ██╗  ██╗   ██╗███╗   ██╗██╗  ██╗    ████████╗███████╗ █████╗ ███╗   ███╗
╚══██╔══╝██║  ██║██╔════╝     ██║  ╚██╗ ██╔╝████╗  ██║╚██╗██╔╝    ╚══██╔══╝██╔════╝██╔══██╗████╗ ████║
   ██║   ███████║█████╗       ██║   ╚████╔╝ ██╔██╗ ██║ ╚███╔╝        ██║   █████╗  ███████║██╔████╔██║
   ██║   ██╔══██║██╔══╝       ██║    ╚██╔╝  ██║╚██╗██║ ██╔██╗        ██║   ██╔══╝  ██╔══██║██║╚██╔╝██║
   ██║   ██║  ██║███████╗     ███████╗██║   ██║ ╚████║██╔╝ ██╗       ██║   ███████╗██║  ██║██║ ╚═╝ ██║
   ╚═╝   ╚═╝  ╚═╝╚══════╝     ╚══════╝╚═╝   ╚═╝  ╚═══╝╚═╝  ╚═╝       ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝  
			       ---- lynxes just wanna have fun ----
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;OSCP&lt;/h1&gt; 
&lt;p&gt;We maintain this repo with the aim to gather all the info that we’d found useful and interesting for the OSCP. We also collect material from other resources (websites, courses, blogs, git repos, books, etc).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before continue&lt;/strong&gt;: we are still working on this repo as we go on with our OSCP journey. This means we&#39;ll add or remove parts without giving notice.&lt;/p&gt; 
&lt;h2&gt;TOC&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#how-to-navigate-the-repo&quot;&gt;How to navigate the repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#official-offensive-security-references&quot;&gt;Official Offensive Security references&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#reddit&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#github-repos&quot;&gt;GitHub repos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#webbing&quot;&gt;Webbing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#genereal-useful-resources&quot;&gt;Genereal useful resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#buffer-overflow&quot;&gt;Buffer Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#privesc&quot;&gt;PrivEsc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#methodologies&quot;&gt;Methodologies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#automation-scripts&quot;&gt;Automation scripts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#cheat-sheets&quot;&gt;Cheat sheets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#hackthebox&quot;&gt;HackTheBox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#vulnhub&quot;&gt;VulnHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#reporting&quot;&gt;Reporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/The-Lynx-Team/OSCP/main/#mental-and-physical-health&quot;&gt;Mental and Physical Health&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to navigate the repo&lt;/h2&gt; 
&lt;p&gt;The repo is structured by this way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;|── Box template
├── Methodologies
├── README.md
└── troubleshooting.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Box template&lt;/strong&gt;: here you can see how we organize our work flow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Methodologies&lt;/strong&gt;: here you can find a checklist for each phase (recon/enum, postexploit, privesc, etc)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;README&lt;/strong&gt;: where you can find a list of useful links&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;troubleshooting.md&lt;/strong&gt;: is a ledger to record all the tecnhical issues:solution we have found along the way&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Be aware&lt;/strong&gt;: we use &lt;a href=&quot;https://obsidian.md/&quot;&gt;Obsidian&lt;/a&gt; as note taking application. This justifies the directory structure and how we format files. We think the graph view provided by Obsidian is a pleasant way to have a visual view of the data we gather. So if you use our checklists, we suggest you run them on Obsidian for a better experience.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Official Offensive Security References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://help.offensive-security.com/hc/en-us/articles/360040165632-OSCP-Exam-Guide&quot;&gt;Exam Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/offsec/what-it-means-to-try-harder/&quot;&gt;Try Harder: From mantra to mindset&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://johnjhacking.com/blog/the-oscp-preperation-guide-2020/&quot;&gt;the-oscp-preperation-guide-2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Luke’s Ultimate OSCP Guide (&lt;a href=&quot;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-1-is-oscp-for-you-b57cbcce7440&quot;&gt;Part 1&lt;/a&gt;, &lt;a href=&quot;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-2-workflow-and-documentation-tips-9dd335204a48&quot;&gt;Part 2&lt;/a&gt;, &lt;a href=&quot;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-3-practical-hacking-tips-and-tricks-c38486f5fc97&quot;&gt;Part 3&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html&quot;&gt;TJNulls&#39; preparation guide for PWK OSCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob&quot;&gt;Abatchy: How to prepare for PWK/OSCP, a noob-friendly guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/bugbountywriteup/5-tips-for-oscp-prep-76001cdf4f4f&quot;&gt;5 Tips for OSCP Prep&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://backdoorshell.gitbooks.io/oscp-useful-links/content/chapter1.html&quot;&gt;BIG resource list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mjkranch.com/2019/06/tips-for-success-in-pwk-oscp/&quot;&gt;Tip for succes in PWK OSCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://refabr1k.github.io/learning/post-My-OSCP-Experience/&quot;&gt;My OSCP experience&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://localhost.exposed/path-to-oscp/&quot;&gt;Path to OSCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theslickgeek.com/oscp/&quot;&gt;Offensive Security Certified Professional – Lab and Exam Review&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alphacybersecurity.tech/my-fight-for-the-oscp/&quot;&gt;My Fight for the OSCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@galolbardes/passing-the-oscp-while-working-full-time-29cb22d622e0&quot;&gt;Passing the OSCP while working full time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.thehackingnomad.com/&quot;&gt;Not your standard OSCP guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reddit&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l7x5gq/first_attempt_discouraged/&quot;&gt;First Attempt ... Discouraged&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l5sett/1_attempt_1_fail_with_55_points/&quot;&gt;1 attempt 1 fail with 55 points&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/netsecstudents/comments/5fwc1z/failed_the_oscp_any_tips_for_the_next_attempt/danovo5/&quot;&gt;Failed the OSCP - any tips for the next attempt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/9j6q7d/tips_for_passing_the_exam/&quot;&gt;Tips for passing the exam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/la1kxe/1st_attempt_80_points_my_experience_and_some/&quot;&gt;1st attempt, 80+ points. My experience and some unpopular opinions inside.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l41dxe/first_cert_first_attempt_an_unconventional/&quot;&gt;First cert, first try, unconventional approach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/lc3937/how_offensive_security_saved_my_life_an_oscp/&quot;&gt;How Offensive Security Saved My Life - An OSCP Journey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l9dm4z/unmotivated_in_ctfs/&quot;&gt;Unmotivated in ctfs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l95y1z/need_help_to_prepare_oscp_checklist/&quot;&gt;Need help to prepare OSCP Checklist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/l90f1q/preparing_for_4th_attempt/&quot;&gt;Preparing for 4th attempt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/la0xzk/second_attempt_failure/&quot;&gt;Second Attempt Failure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/oscp/comments/lbntjv/access_to_machines_for_report_writing/&quot;&gt;Access to machines for report writing?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GitHub repos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/The-Lynx-Team/awesome-oscp&quot;&gt;Awesome OSCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/theonlykernel/enumeration/wiki&quot;&gt;Enumeration wikis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Dewalt-arch/pimpmykali&quot;&gt;PimpMyKali&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Webbing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.exploit-db.com/papers/13017&quot;&gt;Web vulnerabilities to gain access to the system&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.knapsy.com/blog/2014/10/07/basic-shellshock-exploitation/&quot;&gt;Basic Shellshock Exploitation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Genereal useful resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://explainshell.com/&quot;&gt;Explain shell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.darkoperator.com/powershellbasics&quot;&gt;Powershell basics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/&quot;&gt;Pentest Tips and Tricks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guif.re/&quot;&gt;Big list with tips, tricks and cheat sheets&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Buffer Overflow&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justinsteven/dostackbufferoverflowgood&quot;&gt;Do Stack Bufferoverflow Good&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PrivEsc&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/&quot;&gt;Basic Linux Privilege Escalation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VpNaPAh93vE&amp;amp;list=PLDrNMcTNhhYrBNZ_FdtMq-gLFQeUZFzWV&quot;&gt;Conda&#39;s YouTube Privilege Escalation playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.fuzzysecurity.com/tutorials/16.html&quot;&gt;Windows Privilege Escalation Fundamentals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yXe4X-AIbps&quot;&gt;Privilege Escaltion FTW (Jake Williams)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=SHdM197sbIE&quot;&gt;Elevating your Windows Privileges Like a Boss! (Jake Williams)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/linuxprivesc&quot;&gt;Tib3rius&#39; Linux PrivEsc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryhackme.com/room/windows10privesc&quot;&gt;Tib3rius&#39; Windows PrivEsc&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Methodologies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitvijays.github.io/LFC-VulnerableMachines.html&quot;&gt;CTF Series : Vulnerable Machines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Automation scripts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tib3rius/AutoRecon&quot;&gt;Autorecon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/superkojiman/onetwopunch&quot;&gt;Onetwopunch&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shifty0g/ultimate-nmap-parser&quot;&gt;Parser Nmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cheat sheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://highon.coffee/blog/reverse-shell-cheat-sheet/&quot;&gt;Reverse Shell Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evets007/OSCP-Prep-cheatsheet&quot;&gt;OSCP-Prep-cheatsheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psyl0ckediary.tumblr.com/post/148689728108/4-immunity-debugger-first-steps&quot;&gt;Immunity Debugger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HackTheBox&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/TJ_Null/status/1162419643283333120&quot;&gt;OSCP-Like HTB boxes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;VulnHub&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.abatchy.com/2017/02/oscp-like-vulnhub-vms.html&quot;&gt;OSCP-Like VulnHub boxes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ptestmethod.readthedocs.io/en/latest/LFF-IPS-P5-Reporting.html&quot;&gt;Reporting * ptestmethod.readthedocs.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mental and Physical Health&lt;/h2&gt; 
&lt;p&gt;Ok, this is not about popping shells, cracking codes, and launching exploits. Your health is more important than knowing how to pop a shell. If you are under burnout, if you can’t concentrate, if you can’t free your minds and visualize your target, all the above stuff is useless. You should find a spot to read the below links and do your own research. The InfoSec community is an enormous family, you’ll always find someone ready to help you.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mentalhealthhackers.org/&quot;&gt;Mental Health Hackers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=aqzMEfVfEnk&quot;&gt;The Causes of and Solutions for Security Burnout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lsm21No9m4s&quot;&gt;Cybersecurity’s Dirty Little Secret and Talent Grenade: Burnout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/cybersecurity/comments/m1c12e/mental_health_in_cybersecurity/&quot;&gt;Mental health in Cyber Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosecurity-magazine.com/next-gen-infosec/separates-good-bad-mental-health/&quot;&gt;What Separates the Good From the Bad: Mental Health and Cybersecurity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://azeria-labs.com/the-importance-of-deep-work-the-30-hour-method-for-learning-a-new-skill/&quot;&gt;Check whole Azeria&#39;s Self-Improvement section&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bricata.com/blog/mental-health-cybersecurity/&quot;&gt;Why People Who Protect Others Need to be at Their Best; Tackling Mental Health in Cybersecurity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rsaconference.com/library/webcast/66-mental-health&quot;&gt;Mental Health for Hackers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tripwire.com/state-of-security/security-awareness/events/mental-health-hackers-under-pressure/&quot;&gt;Mental Health for Hackers: Contents Under Pressure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/cybersecurity/comments/koh3bj/how_to_beat_imposter_syndrome_to_get_into/&quot;&gt;How to beat imposter syndrome to get into cybersecurity industry?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@west.a.dominique/navigating-imposter-syndrome-in-the-world-of-information-security-dc6ec10d9c0f&quot;&gt;Navigating Imposter Syndrome in the world of Information Security&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;h2&gt;Hey! We are hiring JavaScript Engineers! &lt;a href=&quot;https://boards.greenhouse.io/consensys/jobs/2572388&quot;&gt;Apply here&lt;/a&gt;!&lt;/h2&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682532-General&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682552-Feature-Requests-Ideas&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360001751291-Developer-Questions&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 14 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn setup&lt;/code&gt; (not the usual install command)&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you&#39;ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they&#39;re built.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;To start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;http://extension.remotedev.io&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
 &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
  &lt;ul&gt; 
   &lt;li&gt;You will also need to check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Running Unit Tests and Linting&lt;/h3&gt; 
&lt;p&gt;Run unit tests and the linter with &lt;code&gt;yarn test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run just unit tests, run &lt;code&gt;yarn test:unit&lt;/code&gt;. To run unit tests continuously with a file watcher, run &lt;code&gt;yarn watch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;, and you can automatically fix some lint problems with &lt;code&gt;yarn lint:fix&lt;/code&gt;. You can also run these two commands just on your local changes to save time with &lt;code&gt;yarn lint:changed&lt;/code&gt; and &lt;code&gt;yarn lint:changed:fix&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h3&gt;Running E2E Tests&lt;/h3&gt; 
&lt;p&gt;Our e2e test suite can be run on either Firefox or Chrome. In either case, start by creating a test build by running &lt;code&gt;yarn build:test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Firefox e2e tests can be run with &lt;code&gt;yarn test:e2e:firefox&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Chrome e2e tests can be run with &lt;code&gt;yarn test:e2e:chrome&lt;/code&gt;, but they will only work if you have Chrome v79 installed. Update the &lt;code&gt;chromedriver&lt;/code&gt; package to a version matching your local Chrome installation to run e2e tests on newer Chrome versions.&lt;/p&gt; 
&lt;h3&gt;Changing dependencies&lt;/h3&gt; 
&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn setup&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package&#39;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The LavaMoat auto-generated policy in &lt;code&gt;lavamoat/node/policy.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; to re-generate this policy file. Review the changes to determine whether the access granted to each package seems appropriate.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build for Publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository&#39;s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Superalgos/Superalgos</title>
      <link>https://github.com/Superalgos/Superalgos</link>
      <description>&lt;p&gt;Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Superalgos Beta 8 - Getting Started Guide&lt;/h1&gt; 
&lt;p&gt;All procedures are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif&quot; alt=&quot;superalgos-readme&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Pre-Requisites&lt;/h1&gt; 
&lt;h2&gt;Node JS&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t have it yet, download and install Node.js.&lt;/p&gt; 
&lt;p&gt;Node JS is an open-source server environment required to run Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Node JS &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Download your system’s installer. Select &lt;em&gt;LTS Recommended for Most Users&lt;/em&gt; and click the big Windows or macOS Installer button. If you are on Linux, the installer is listed further down the page.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;c.&lt;/strong&gt; Run the installer with the default configuration — just click Next until Node.JS is fully installed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Raspberry Pi Users:&lt;/strong&gt; From the SSH Terminal, send the following commands to install Node. ::NOTE:: It is best to use the most current and updated version of the FULL PiOS image.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;followed by&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is recommended to install the Node Package Manager&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you may also type the following to verify the Node.js installation and version.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Git&lt;/h2&gt; 
&lt;p&gt;Download and install Git.&lt;/p&gt; 
&lt;p&gt;Git is an open-source distributed version control system required to download and stay up to date with Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Git &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Download the version for your Operating System.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;c.&lt;/strong&gt; Run the installer with the default configuration — just click Next until Git is fully installed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The latest version of Git is required to handle the authentication with GitHub.com.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR MAC USERS:&lt;/strong&gt; Depending on your setup, installing Git may be optional. The native XCode Command Line Developer Tools seems to work well. If you do install Git, we have tested Tim Harper&#39;s binary installer successfully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Raspberry Pi Users:&lt;/strong&gt; send the SSH Terminal command to install git. The most recent version of PiOS has Git already installed, so this may give you an error. The error will not affect your installation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Google Chrome or Safari&lt;/h2&gt; 
&lt;p&gt;Use Chrome, or Safari on Mac. These are the only tested browsers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Chrome &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Run the installer.&lt;/p&gt; 
&lt;p&gt;Before you begin, it is recommended that you set up Chrome/Safari as your default browser.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Use Chrome/Safari so that you have a similar environment as the dev team in case you need help. We are not testing on any other browsers, and it is a well-known fact that browsers behave differently.&lt;/p&gt; 
&lt;h1&gt;Superalgos Client Installation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Scroll the page all the way to the top. Find and click the &lt;strong&gt;Fork&lt;/strong&gt; button to create your fork/copy of this repository. To fork Superalgos you need a GitHub account. If you don&#39;t have one, go ahead and create it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A Fork is required for your contributions to the project. Superalgos will soon be moving into a new phase of development by incentivizing contributions. Incentives will be retroactive.&amp;nbsp;The earlier in the life of the project you start contributing, the juicier your incentives will be, as the impact of contributions in a Community-driven project is clearly a function of time. This is an open invitation for you to become a vested member of the community!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Once the fork is created, you will land on the page of your fork. Copy the URL from your browser&#39;s address bar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; In your computer/laptop/server, open a command prompt or terminal as an administrator (to avoid issues with permissions) and type:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Don&#39;t hit Enter yet! Complete the command by pasting the URL of your fork!&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone + URL of your Superalgos fork.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, if your Github username is John, the command will look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/John/Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ok, you have installed Superalgos. To run the App, jump to the section Usage below.&lt;/p&gt; 
&lt;h2&gt;Installation Notes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; You need to make a fork so that you may contribute work. Superalgos is a Community project and you are expected to contribute, like everyone else. You don&#39;t need to be a technical person to contribute. Fixing a typo in the docs or translating a paragraph into your native language are valuable contributions too. Superalgos has built-in features that make contributing easy. Help make Superalgos better and Superalgos will better serve you! &lt;a href=&quot;https://en.wikipedia.org/wiki/Free-rider_problem&quot;&gt;Free-riding is not cool&lt;/a&gt;, particularly on free, open-source, Community-driven projects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; The software includes an in-app self-update command / feature. It will help you stay up-to-date with the latest version of the software. Updates are on-demand, so don&#39;t worry about undesired updates. The project moves very fast and new features become available regularly, particularly if you choose to run the software in the &lt;code&gt;develop&lt;/code&gt; branch (you may switch branches from within the app).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; You are better off running the git clone command as an administrator to avoid permission issues while creating the Superalgos folder and downloading the repository. It may work without admin powers depending on your setup, particularly if you are running the command on a folder where you&#39;ve got write permissions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Before installing the client on a remote computer in an attempt to access the UI from a different machine, we highly recommend you do a standard installation on your PC / laptop first. Leave your Raspberry Pi or server for later, once you have done all available tutorials. This single tip will save you a lot of time: you don&#39;t need to add complexity before you learn how to handle the app.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; To run the Superalgos client, go to the Superalgos directory/folder and run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are running a headless Raspberry Pi (one without a screen) it is recommended to use the following instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node run minMemo noBrowser
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107037804-e5fc6200-67bb-11eb-82f2-d0f40247fa14.gif&quot; alt=&quot;run-the-system-01&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; The command launches your default browser to load the UI. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the UI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; A Welcome Tutorial pops-up automatically. You must do this Tutorial to finish the setup and to learn the basics. It&#39;s the ultimate onboarding experience, superior to all other resources available, including videos and the docs.&lt;/p&gt; 
&lt;h2&gt;Usage Notes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well — or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; If your computer has 8 GB of RAM or less, use &lt;code&gt;node run minMemo&lt;/code&gt; to run the system with minimal RAM requirements.&lt;/p&gt; 
&lt;h1&gt;Uninstall&lt;/h1&gt; 
&lt;p&gt;Superalgos writes nothing outside of the &lt;code&gt;Superalgos&lt;/code&gt; folder. To completely uninstall the software, just delete the folder.&lt;/p&gt; 
&lt;h1&gt;Welcome Tutorial&lt;/h1&gt; 
&lt;p&gt;Once the app finishes loading, an interactive tutorial takes you by the hand and walks you all around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended you follow the tutorial until the end, as it is carefully crafted to make your onboarding as easy as possible. Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif&quot; alt=&quot;welcome-tutorial-00&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The tutorial uses Binance or Binance US as the exchange of choice. If you don’t have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don&#39;t intend to run the session. You may learn how to work with other exchanges later on.&lt;/p&gt; 
&lt;h1&gt;Docker Deployments&lt;/h1&gt; 
&lt;p&gt;We haven&#39;t tested containerized deployments, but many people in the community have. Worth noting is the fact that Superalgos doesn&#39;t touch anything outside the Superalgos folder. To uninstall, delete the folder.&lt;/p&gt; 
&lt;h1&gt;What is Superalgos?&lt;/h1&gt; 
&lt;p&gt;Superalgos is a platform to automate crypto-trading. It is implemented as a Node JS Client + Web App that runs on your hardware and scales from a single Raspberry Pi to a Trading Farm. Superalgos is &lt;strong&gt;Free&lt;/strong&gt; and &lt;strong&gt;Open-Source&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Superalgos Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Visual Scripting Designer.&lt;/li&gt; 
 &lt;li&gt;Integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;A Visual Strategy Debugger.&lt;/li&gt; 
 &lt;li&gt;Coordinated Task Management across a Trading Farm.&lt;/li&gt; 
 &lt;li&gt;Community-built strategies to learn and start from.&lt;/li&gt; 
 &lt;li&gt;In-App Tutorials.&lt;/li&gt; 
 &lt;li&gt;Complete In-App Documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Allows You To...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visually design your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually debug your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually design your indicators.&lt;/li&gt; 
 &lt;li&gt;Visually design your plotters to visualize indicators or mined data.&lt;/li&gt; 
 &lt;li&gt;Visually design your data-mining operations.&lt;/li&gt; 
 &lt;li&gt;Download historical market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;Backtest your strategies against historical data.&lt;/li&gt; 
 &lt;li&gt;Run live trading sessions.&lt;/li&gt; 
 &lt;li&gt;Run arbitrary data-mining operations of any size.&lt;/li&gt; 
 &lt;li&gt;Feed your trading strategies with the data mined.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Development Pipeline&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ethereum Integration: will allow you to data mine your own Ethereum node and use the mined data in your strategies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Machine Learning: will allow you to run a Reinforcement Learning Algorithm and feed it with mined data for it to learn how to make decisions relevant to your strategies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos is User-centric&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No ads, anywhere.&lt;/li&gt; 
 &lt;li&gt;No sign up / logins.&lt;/li&gt; 
 &lt;li&gt;No user/usage data collection of any kind.&lt;/li&gt; 
 &lt;li&gt;Runs 100% on uncompiled code anyone can read and audit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos for Developers&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;You are free to customize Superalgos for your customers. No royalties, no license fees.&lt;/li&gt; 
 &lt;li&gt;Everything extra your customers may need may be coded by yourself or requested as new features.&lt;/li&gt; 
 &lt;li&gt;You may use Superalgos as a platform or as a component of a larger system.&lt;/li&gt; 
 &lt;li&gt;No proprietary code/libraries. All open-source and free.&lt;/li&gt; 
 &lt;li&gt;Superalgos features a library of community-contributed plugins (workspaces, strategies, indicators, plotters, tutorials, etc.).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Saves You Time&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to code the download of historical data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to code the streaming of market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to hardcode strategies. Use the visual designer for a more flexible approach.&lt;/li&gt; 
 &lt;li&gt;No need to debug what went wrong, line by line, or dive into log files with tons of data. You can see each variable of the state of the Trading Engine at every candle by hovering the mouse over the charts.&lt;/li&gt; 
 &lt;li&gt;No need to integrate a charting library, Superalgos features an integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;No need to manage task data or execution dependencies. Superalgos allows you to define Tasks and distribute them across a Trading Farm and takes care of the data and execution dependencies so that each task automatically starts when their dependencies are ready.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos is Permisionless&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Don&#39;t like the UI?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the icons used?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Charting System?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Designer?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Debugger?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Docs?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Trading Bot?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Indicators?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Plotters?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like any other part of the system?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No problem, code or integrate libraries with your own version of any component and we promise we will merge your work and provide it as an alternative to users. We believe in Permissionless Innovation and that users, not team members, are the final judges and the ones who decide what they prefer to use. You are free to create an alternative for any part of the system that you believe that should work or should have been done in a different way. We will help you integrate your vision into the next release and enable a way for users to choose between different implementations of the same functionality. You will also be granted the title of maintainer of the functionality you provide and have decision power on how it evolves in the future.&lt;/p&gt; 
&lt;h1&gt;Superalgos for Individuals&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Superalgos is easy to install/uninstall.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to run.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to use.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to learn.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to debug.&lt;/li&gt; 
 &lt;li&gt;Superalgos is well documented.&lt;/li&gt; 
 &lt;li&gt;You have free online support via Telegram.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Saves You Money&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are no paid plans or anything that costs you money.&lt;/li&gt; 
 &lt;li&gt;There is no locked functionality. You may use the full capacity of the software.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of backtests you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of live sessions you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of historical data you may download.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the volume of data you may process.&lt;/li&gt; 
 &lt;li&gt;You may use all the plugins available (indicators, plotters, strategies, etc.)&lt;/li&gt; 
 &lt;li&gt;You may install Superalgos in as many machines as you wish.&lt;/li&gt; 
 &lt;li&gt;Your installations may be used by as many people as required.&lt;/li&gt; 
 &lt;li&gt;You may connect to as many crypto exchanges as you wish.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Minimizes Risks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No one can know what strategies you design/run.&lt;/li&gt; 
 &lt;li&gt;No one can front-run you.&lt;/li&gt; 
 &lt;li&gt;No one can steal your trading ideas.&lt;/li&gt; 
 &lt;li&gt;No one knows how much capital you trade.&lt;/li&gt; 
 &lt;li&gt;No one can see your exchange keys.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos for Companies&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to buy expensive software for monitoring crypto markets or trading execution.&lt;/li&gt; 
 &lt;li&gt;All your employees can use Superalgos for free.&lt;/li&gt; 
 &lt;li&gt;You can use Superalgos to its full capacity or just the features you are currently interested in.&lt;/li&gt; 
 &lt;li&gt;Superalgos may be integrated into your existing operation, feeding to and from other systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;h2&gt;Via Telegram&lt;/h2&gt; 
&lt;p&gt;Online support through our &lt;a href=&quot;https://t.me/superalgossupport&quot;&gt;Superalgos User&#39;s Support Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Integrated Documentation&lt;/h2&gt; 
&lt;p&gt;Superalgos features interactive documentation.&lt;/p&gt; 
&lt;h2&gt;Video Tutorials&lt;/h2&gt; 
&lt;p&gt;Subscribe to the &lt;a href=&quot;https://www.youtube.com/channel/UCmYSGbB151xFQPNxj7KfKBg&quot;&gt;Superalgos YouTube Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Tutorials&lt;/h2&gt; 
&lt;p&gt;There are many interactive tutorials you may do and learn from.&lt;/p&gt; 
&lt;h1&gt;Other Resources&lt;/h1&gt; 
&lt;h2&gt;Web Site&lt;/h2&gt; 
&lt;p&gt;For an overview of what Superalgos can do for you, check the &lt;a href=&quot;https://superalgos.org/&quot;&gt;Superalgos Website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;For official news, join the &lt;a href=&quot;https://t.me/superalgos&quot;&gt;Superalgos Announcements Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet other users in the &lt;a href=&quot;https://t.me/superalgoscommunity&quot;&gt;Superalgos Telegram Community Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet developers in the &lt;a href=&quot;https://t.me/superalgosdevelop&quot;&gt;Superalgos Telegram Developer&#39;s Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet designers in the &lt;a href=&quot;https://t.me/superalgosuxui&quot;&gt;Superalgos Telegram UX/UI Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Spanish speaking users hang out in the &lt;a href=&quot;https://t.me/superalgos_es&quot;&gt;Superalgos en Español Telegram Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Find official announcements and various articles on the &lt;a href=&quot;https://medium.com/superalgos&quot;&gt;Superalgos Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Twitter&lt;/h2&gt; 
&lt;p&gt;To stay in the loop, follow &lt;a href=&quot;https://twitter.com/superalgos&quot;&gt;Superalgos on Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Facebook&lt;/h2&gt; 
&lt;p&gt;Or follow &lt;a href=&quot;https://www.facebook.com/superalgos&quot;&gt;Superalgos on Facebook&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Superalgos is a Community Project built by Contributors for Contributors. Learn &lt;a href=&quot;https://superalgos.org/community-contribute.shtml&quot;&gt;how to become a Contributor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;Luis Fernando Molina, Julian Molina, Andreja Cobeljic, Matías Benitez, Ira Miller, Eduardo Remis, Jeff Braun, rico4dev, 9808us, Barry Low, Nikola Bjelogrlic, Hirajin Koizuko, Francisco J. Santillán, Norman, Viktoria B., Guillermo V., Daniel J., Javier A., Gustavo J., Romina GS, Pedro P., Thais M., Andrey M., Loui M., Natalia M., Bashar A., Carlos V., Diego M., CarnivalBen, Sebastian E., Bogdan P., Marko V., Igor S., Niksa K., Rodrigo M., Nicanor M., Alejandro P., Mateo H., Lan T., Leon A., Uroš R., Filip M., Vladimir J. and Pavle B.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Superalgos is open-source software released under &lt;a href=&quot;https://raw.githubusercontent.com/Superalgos/Superalgos/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
