<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 28 Mar 2021 01:55:14 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | -------------- | ---------------------------- | ----------------------------- | ------------------------------- | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>appwrite/appwrite</title>
      <link>https://github.com/appwrite/appwrite</link>
      <description>&lt;p&gt;Appwrite is a secure end-to-end backend server for Web, Mobile, and Flutter developers that is packaged as a set of Docker containers for easy deployment üöÄ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://appwrite.io/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/564160730845151244?label=discord&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;amp;style=flat-square&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/appwrite_io?color=00acee&amp;amp;label=twitter&amp;amp;style=flat-square&quot; alt=&quot;Twitter Account&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://stackshare.io/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/follow%20on-stackshare-blue?style=flat-square&quot; alt=&quot;Follow Appwrite on StackShare&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker
 &lt;!-- raw HTML omitted --&gt; microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.&lt;/p&gt; 
&lt;p&gt;Using Appwrite, you can easily integrate your app with user authentication &amp;amp; multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, schedule CRON tasks, and &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;more services&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/github.png&quot; alt=&quot;Appwrite&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Find out more at: &lt;a href=&quot;https://appwrite.io&quot;&gt;https://appwrite.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Table of Contents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#unix&quot;&gt;Unix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#windows&quot;&gt;Windows&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#cmd&quot;&gt;CMD&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#powershell&quot;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#upgrade-from-an-older-version&quot;&gt;Upgrade from an Older Version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#sdks&quot;&gt;SDKs&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#client&quot;&gt;Client&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#server&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Appwrite backend server is designed to run in a container environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool like Kubernetes, Docker Swarm, or Rancher.&lt;/p&gt; 
&lt;p&gt;The easiest way to start running your Appwrite server is by running our docker-compose file. Before running the installation command make sure you have &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;Docker&lt;/a&gt; installed on your machine:&lt;/p&gt; 
&lt;h3&gt;Unix&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -it --rm \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume &quot;$(pwd)&quot;/appwrite:/usr/src/code/appwrite:rw \
    --entrypoint=&quot;install&quot; \
    appwrite/appwrite:0.7.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;h4&gt;CMD&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;docker run -it --rm ^
    --volume //var/run/docker.sock:/var/run/docker.sock ^
    --volume &quot;%cd%&quot;/appwrite:/usr/src/code/appwrite:rw ^
    --entrypoint=&quot;install&quot; ^
    appwrite/appwrite:0.7.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;PowerShell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;docker run -it --rm ,
    --volume /var/run/docker.sock:/var/run/docker.sock ,
    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw ,
    --entrypoint=&quot;install&quot; ,
    appwrite/appwrite:0.7.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the Docker installation completes, go to http://localhost to access the Appwrite console from your browser. Please note that on non-linux native hosts, the server might take a few minutes to start after installation completes.&lt;/p&gt; 
&lt;p&gt;For advanced production and custom installation, check out our Docker &lt;a href=&quot;https://appwrite.io/docs/environment-variables&quot;&gt;environment variables&lt;/a&gt; docs. You can also use our public &lt;a href=&quot;https://gist.github.com/eldadfux/977869ff6bdd7312adfd4e629ee15cc5#file-docker-compose-yml&quot;&gt;docker-compose.yml&lt;/a&gt; file to manually set up an environment.&lt;/p&gt; 
&lt;h3&gt;Upgrade from an Older Version&lt;/h3&gt; 
&lt;p&gt;If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the &lt;a href=&quot;https://appwrite.io/docs/installation&quot;&gt;Installation Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK in your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-web&quot;&gt;Getting Started for Web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-flutter&quot;&gt;Getting Started for Flutter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-server&quot;&gt;Getting Started for Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/command-line&quot;&gt;Getting Started for CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Getting Started for Android (Coming soon...)&lt;/li&gt; 
 &lt;li&gt;Getting Started for iOS (Coming soon...)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/account&quot;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt; - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/users&quot;&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/a&gt; - Manage and list all project users when in admin mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/teams&quot;&gt;&lt;strong&gt;Teams&lt;/strong&gt;&lt;/a&gt; - Manage and group users in teams. Manage memberships, invites, and user roles within a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/database&quot;&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/a&gt; - Manage database collections and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/storage&quot;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt; - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to fit your app perfectly. All files are scanned by ClamAV and stored in a secure and encrypted way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/functions&quot;&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Customize your Appwrite server by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event, manually or using a CRON schedule.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/locale&quot;&gt;&lt;strong&gt;Locale&lt;/strong&gt;&lt;/a&gt; - Track your user&#39;s location, and manage your app locale-based data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/avatars&quot;&gt;&lt;strong&gt;Avatars&lt;/strong&gt;&lt;/a&gt; - Manage your users&#39; avatars, countries&#39; flags, browser icons, credit card symbols, and generate QR codes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the complete API documentation, visit &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;https://appwrite.io/docs&lt;/a&gt;. For more tutorials, news and announcements check out our &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;blog&lt;/a&gt; and &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;SDKs&lt;/h3&gt; 
&lt;p&gt;Below is a list of currently supported platforms and languages. If you wish to help us add support to your platform of choice, you can go over to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt; project and view our &lt;a href=&quot;https://github.com/appwrite/sdk-generator/blob/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Client&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-web&quot;&gt;Web&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-flutter&quot;&gt;Flutter&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Server&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-node&quot;&gt;NodeJS&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-php&quot;&gt;PHP&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-deno&quot;&gt;Deno&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-ruby&quot;&gt;Ruby&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-python&quot;&gt;Python&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dotnet&quot;&gt;.NET&lt;/a&gt; - &lt;strong&gt;Experimental&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dart&quot;&gt;Dart&lt;/a&gt; &lt;strong&gt;Experimental&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-go&quot;&gt;Go&lt;/a&gt; &lt;strong&gt;Work in progress&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Looking for more SDKs? - Help us by contributing a pull request to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All code contributions - including those of people having commit access - must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.&lt;/p&gt; 
&lt;p&gt;We truly ‚ù§Ô∏è pull requests! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For security issues, kindly email us at &lt;a href=&quot;mailto:security@appwrite.io&quot;&gt;security@appwrite.io&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;Follow Us&lt;/h2&gt; 
&lt;p&gt;Join our growing community around the world! See our official &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;Blog&lt;/a&gt;. Follow us on &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/appwrite.io&quot;&gt;Facebook Page&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/groups/appwrite.developers/&quot;&gt;Facebook Group&lt;/a&gt; or join our live &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord server&lt;/a&gt; for more help, ideas, and discussions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is available under the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/LICENSE&quot;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meng-chuan/Unlock-netease-cloud-music</title>
      <link>https://github.com/meng-chuan/Unlock-netease-cloud-music</link>
      <description>&lt;p&gt;Ëß£ÈîÅÁΩëÊòì‰∫ëÈü≥‰πêÂÆ¢Êà∑Á´ØÂèòÁÅ∞Ê≠åÊõ≤&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unlock-netease-cloud-music&lt;/h1&gt; 
&lt;p&gt;Ëß£ÈîÅÁΩëÊòì‰∫ëÈü≥‰πêÂÆ¢Êà∑Á´ØÂèòÁÅ∞Ê≠åÊõ≤&lt;/p&gt; 
&lt;h2&gt;È°πÁõÆ‰ªãÁªç&lt;/h2&gt; 
&lt;p&gt;ÁΩëÊòìÈü≥‰πêÁõ∏‰ø°‰∏çÈúÄË¶ÅÊàëËøáÂ§öÁöÑ‰ªãÁªçÂ§ßÂÆ∂‰πüÈÉΩÁü•ÈÅìÔºåÁî±‰∫éÂêÑÁßçÈôêÂà∂ÔºåÁõ∏‰ø°ÂæàÂ§ö‰∫∫Âú®Âê¨Ê≠åÁöÑÊó∂ÂÄô‰πüÊ≥®ÊÑèÂà∞‰∫ÜÔºåÂæàÂ§öÁöÑÈü≥‰πêÂëàÁé∞ÁÅ∞Ëâ≤ÁöÑÊ†∑ÂºèÔºåÊòØÊó†Ê≥ïÊí≠ÊîæÁöÑÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫„ÄÇ‰ªäÂ§©Â∞±Â∏¶Â§ßÂÆ∂&lt;strong&gt;ÊääÁÅ∞Ëâ≤‰∏çËÉΩÂê¨ÁöÑÈü≥‰πêÂÖ®ÈÉ®ÂèòÊàêÂèØ‰ª•Ê≠£Â∏∏Êí≠ÊîæÁöÑÈü≥‰πê&lt;/strong&gt;ÔºåËÄå‰∏îÊòØ&lt;strong&gt;ÂÖ®Âπ≥Âè∞ÈÄöÁî®&lt;/strong&gt;Âì¶ÔºÅ&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Ê≥®ÔºöÊïôÁ®ãÊúâÁÇπÈïøÔºåÂ¶ÇÊûúÂÆûÂú®Ê≤°ÊúâËÄêÂøÉËØ∑Áõ¥Êé•ÊªëÂà∞ÊúÄ‰∏ãÊñπËßÇÁúãÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GFbt.png&quot; alt=&quot;04GFbt.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ΩøÁî® QQ / ËôæÁ±≥ / ÁôæÂ∫¶ / ÈÖ∑Áãó / ÈÖ∑Êàë / Âí™Âíï / JOOX Èü≥Ê∫êÊõøÊç¢ÂèòÁÅ∞Ê≠åÊõ≤ÈìæÊé• (ÈªòËÆ§‰ªÖÂêØÁî®‰∏Ä„ÄÅ‰∫î„ÄÅÂÖ≠)&lt;/li&gt; 
 &lt;li&gt;‰∏∫ËØ∑Ê±ÇÂ¢ûÂä† &lt;code&gt;X-Real-IP&lt;/code&gt; ÂèÇÊï∞Ëß£ÈîÅÊµ∑Â§ñÈôêÂà∂ÔºåÊîØÊåÅÊåáÂÆöÁΩëÊòì‰∫ëÊúçÂä°Âô® IPÔºåÊîØÊåÅËÆæÁΩÆ‰∏äÊ∏∏ HTTP / HTTPS ‰ª£ÁêÜ&lt;/li&gt; 
 &lt;li&gt;ÂÆåÊï¥ÁöÑÊµÅÈáè‰ª£ÁêÜÂäüËÉΩ (HTTP / HTTPS)ÔºåÂèØÁõ¥Êé•‰Ωú‰∏∫Á≥ªÁªü‰ª£ÁêÜ (ÂêåÊó∂ÊîØÊåÅ PAC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;WindowsÁ´ØÊñπÊ≥ï‰∏ÄÔºö
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;1.ÊâìÂºÄÁΩëÊòì‰∫ëÈü≥‰πêÂÆ¢Êà∑Á´ØÔºåËøõÂÖ•ËÆæÁΩÆÈ°µÈù¢ÔºåËÆæÁΩÆËá™ÂÆö‰πâ‰ª£ÁêÜ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ëá™ÂÆö‰πâ‰ª£ÁêÜ ÔºöÂ°´ÂÜôÊúçÂä°Âô®Âú∞ÂùÄÂíåÁ´ØÂè£Âè∑&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ª£ÁêÜÊúçÂä°Âô®Âú∞ÂùÄÔºö127.0.0.1 ÔºàÊé®ËçêÊú¨Êú∫Êê≠Âª∫ÔºåÈÄüÂ∫¶Âø´Ôºâ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ª£ÁêÜÊúçÂä°Âô®Á´ØÂè£Ôºö52000&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GPKA.png&quot; alt=&quot;04GPKA.png&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.ÂÆâË£Önode.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ÂÆòÊñπÁΩëÁ´ôÔºö&lt;a href=&quot;http://nodejs.cn/download/&quot;&gt;http://nodejs.cn/download/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‰∏ãËΩΩÂêéÂèåÂáªËΩØ‰ª∂ÂÆâË£ÖÂåÖÊâìÂºÄÂÆâË£ÖÔºå‰∏ÄÁõ¥ÁÇπ‰∏ã‰∏ÄÊ≠•Áõ¥Âà∞ÂÆåÊàêÂç≥ÂèØ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04G9vd.png&quot; alt=&quot;04G9vd.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;3.&lt;strong&gt;‰∏ãËΩΩÈ°πÁõÆÊ∫êÁ†Å&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/meng-chuan/Unlock-netease-cloud-music/archive/master.zip&quot;&gt;https://github.com/meng-chuan/Unlock-netease-cloud-music/archive/master.zip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;‰∏ãËΩΩÂêéËß£ÂéãÂà∞‰ªªÊÑèÊñá‰ª∂Â§π,ÂèåÂáªÁÇπÂºÄUnlock-netease-cloud-musicÊñá‰ª∂Â§π‰∏≠Âêç‰∏∫ÔºöÁΩëÊòì‚òÅüéµ.bat ÁöÑÊñá‰ª∂&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GpgH.png&quot; alt=&quot;04GpgH.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Ê≥®ÔºöÊ≠§Á™óÂè£‰∏çÂèØÂÖ≥Èó≠ÔºåÂèØ‰ª•ÊúÄÂ∞èÂåñ&lt;/p&gt; 
&lt;p&gt;‰ª•ÂêéÊØèÊ¨°ÊâìÂºÄÁΩëÊòì‰∫ëÂÖàËøêË°åÁΩëÊòì‚òÅüéµ.batËøô‰∏™Êñá‰ª∂Âç≥ÂèØËß£ÈîÅÊâÄÊúâÁÅ∞Ëâ≤Ê≠åÊõ≤ÔºåÂú®ËøôÈáåÂÖàÊÅ≠Âñú‰Ω†ÊàêÂäüÂ≠¶‰ºö‰∫ÜÁ¨¨‰∏ÄÁßçËß£ÈîÅÁΩëÊòì‰∫ëÈü≥‰πêÁÅ∞Ëâ≤Ê≠åÊõ≤ÁöÑÊñπÊ≥ï&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;WindowsÁ´ØÊñπÊ≥ï‰∫åÔºö
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºöWindows 7 Â¶ÇÊó†Ê≥ïÊâßË°åÂàôÈúÄÂçáÁ∫ß Powershell Âà∞ 3.0 ‰ª•‰∏äÔºåXP ‰∏çÊîØÊåÅÔºå&lt;strong&gt;‰∏ãËΩΩÂú∞ÂùÄ&lt;/strong&gt;Ôºö&lt;a href=&quot;https://docs.microsoft.com/powershell/scripting/install/installing-powershell&quot;&gt;https://docs.microsoft.com/powershell/scripting/install/installing-powershell&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GiDI.png&quot; alt=&quot;04GiDI.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∏ÄÊ≠•ÔºåÂÆâË£Ö‰ª£ÁêÜ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;‰ª• &lt;code&gt;ÁÆ°ÁêÜÂëòË∫´‰ªΩ&lt;/code&gt; ÊâìÂºÄ &lt;code&gt;Powershell&lt;/code&gt;ÔºåWindows 10 Âø´Êç∑ÂÖ•Âè£Ôºö&lt;code&gt;Win + X&lt;/code&gt; - &lt;code&gt;Windows Powershell(ÁÆ°ÁêÜÂëò)(A)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GAVP.png&quot; alt=&quot;04GAVP.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Â§çÂà∂‰ª•‰∏ã‰ª£Á†ÅÔºåÂè≥ÈîÆÁ≤òË¥¥Âà∞ÂëΩ‰ª§Ë°åÂõûËΩ¶ÔºåÊâìÂºÄÂÆâË£ÖËèúÂçï„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
Invoke-Expression -Command (Invoke-WebRequest -UseBasicParsing -Uri https://bit.ly/2RYvE3p).Content
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GEUf.png&quot; alt=&quot;04GEUf.png&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÈöèÂêéÈÄâÊã© &lt;code&gt;1&lt;/code&gt; Âç≥ÂÆâË£Ö„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂÆâË£ÖÂÆåÊØïÂêéÈÄâÊã© &lt;code&gt;3&lt;/code&gt; ËøêË°å„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÈúÄÊ∑ªÂä†ÂºÄÊú∫Ëá™ÂêØÔºåÂàôÊâßË°å &lt;code&gt;7&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊúÄÂêéËæìÂÖ• &lt;code&gt;0&lt;/code&gt; ÈÄÄÂá∫„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GV58.png&quot; alt=&quot;04GV58.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∫åÊ≠•ÔºåËÆæÁΩÆ‰ª£ÁêÜ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ÊâìÂºÄÁΩëÊòì‰∫ëÈü≥‰πêÂÆ¢Êà∑Á´ØÔºåËøõÂÖ•ËÆæÁΩÆÈ°µÈù¢ÔºåËÆæÁΩÆËá™ÂÆö‰πâ‰ª£ÁêÜ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ëá™ÂÆö‰πâ‰ª£ÁêÜ ÔºöÂ°´ÂÜôÊúçÂä°Âô®Âú∞ÂùÄÂíåÁ´ØÂè£Âè∑&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ª£ÁêÜÊúçÂä°Âô®Âú∞ÂùÄÔºö127.0.0.1 ÔºàÊé®ËçêÊú¨Êú∫Êê≠Âª∫ÔºåÈÄüÂ∫¶Âø´Ôºâ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ª£ÁêÜÊúçÂä°Âô®Á´ØÂè£Ôºö6666&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GePS.png&quot; alt=&quot;04GePS.png&quot;&gt;&lt;/p&gt; &lt;p&gt;Â¶Ç‰ΩøÁî®‰∏ÄÊÆµÊó∂Èó¥ÂêéÊó†Ê≥ïËß£ÈîÅÔºåÂàôÈúÄË¶ÅÈáçÊñ∞ÊâßË°åÂëΩ‰ª§ÔºåÈÄâÊã© &lt;code&gt;5&lt;/code&gt; Êõ¥Êñ∞„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;WindowsÁ´ØÊñπÊ≥ï‰∏âÔºö
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;‰ºòÁÇπÔºöÊó†ÈúÄ‰∏ãËΩΩ‰ªª‰ΩïËµÑÊ∫êÔºåÂè™ÈúÄÂá†Ê≠•ËÆæÁΩÆÂç≥ÂèØÔºåËØù‰∏çÂ§öËØ¥ÔºåÁõ¥Êé•‰∏äÂπ≤Ê¥ªÔºåÊàëËøôÈáå‰ª•win10‰∏∫‰æãÔºåÂÖ∂‰ªñÁ≥ªÁªüÊìç‰ΩúÁ±ª‰ººÔºö&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∏ÄÊ≠•ÔºöÈº†Ê†áÂ∑¶ÈîÆÁÇπÂáªÊ°åÈù¢Âè≥‰∏ãËßíÁöÑÈÄöÁü•Ê∞îÊ≥°&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04Gm8g.png&quot; alt=&quot;04Gm8g.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;**Á¨¨‰∫åÊ≠•ÔºöÁÑ∂ÂêéÈº†Ê†áÂ∑¶ÈîÆÁÇπÂáªÊâÄÊúâËÆæÁΩÆ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04Gn2Q.png&quot; alt=&quot;04Gn2Q.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∏âÊ≠•ÔºöÈº†Ê†áÂ∑¶ÈîÆÁÇπÂáªÁÇπÂáªËøõÂÖ•ÁΩëÁªúÂíåintrnet&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04Guvj.png&quot; alt=&quot;04Guvj.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨ÂõõÊ≠•ÔºåËÑöÊú¨Âú∞ÂùÄ&lt;/strong&gt;Ôºö&lt;a href=&quot;https://wy.ydlrqx.com/proxy.pac&quot;&gt;https://wy.ydlrqx.com/proxy.pac&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Êìç‰ΩúÊ≠•È™§ËØ∑Áõ¥Êé•Áúã‰∏ãÂõæÔºåÈÉΩÊòØ‰ΩøÁî®Èº†Ê†áÂ∑¶ÈîÆÁÇπÂáª&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04Glbq.png&quot; alt=&quot;04Glbq.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∫îÊ≠•ÔºåÊâìÂºÄÁΩëÊòì‰∫ëÈü≥‰πêÔºåËøõÂÖ•ËÆæÁΩÆÔºåÊìç‰ΩúÊ≠•È™§ËßÅ‰∏ãÂõæÔºåÈÉΩÊòØ‰ΩøÁî®Èº†Ê†áÂ∑¶ÈîÆÁÇπÂáª&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GMKs.png&quot; alt=&quot;04GMKs.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ÊúÄÁªàÊïàÊûúÂ¶Ç‰∏ã:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04GQrn.png&quot; alt=&quot;04GQrn.png&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;WindowsÁ´ØÊñπÊ≥ïÂõõÔºö
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;ËØ∑ÁßªÊ≠•ÊúÄ‰∏ãÊñπËßÇÁúã‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;macOSÁ´Ø
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;Áî±‰∫éÊú¨‰∫∫ÂÆ∂Â¢ÉË¥´ÂØíÔºå‰π∞‰∏çËµ∑ËãπÊûúÁîµËÑëÔºåÂèà‰∏çÊÉ≥Áî®ÈªëËãπÊûúÔºåÊó†Ê≥ïÊà™ÂõæËØ¥ÊòéÔºåÊâÄ‰ª•ËøôÈáåÁõ¥Êé•ÊñáÂ≠óÊèèËø∞&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÊ≥ï‰∏ÄÔºö&lt;strong&gt;macOSÁ´ØÁöÑ‰ΩøÁî®‰∏é‰ª•‰∏äWindowsÁ´ØÁ¨¨‰∏âÁßçÊñπÊ≥ïÂêåÁêÜÔºå‰æùÊ¨°ÊâìÂºÄÁ≥ªÁªüÂÅèÂ•Ω&lt;code&gt;ËÆæÁΩÆ&lt;/code&gt;Ôºû&lt;code&gt;ÁΩëÁªú&lt;/code&gt;Ôºû&lt;code&gt;È´òÁ∫ß&lt;/code&gt;Ôºû&lt;code&gt;‰ª£ÁêÜ&lt;/code&gt;ÔºåÁÑ∂ÂêéÂ°´ÂÖ•&lt;/strong&gt;Âú∞ÂùÄ&lt;/strong&gt;Ôºö&lt;a href=&quot;https://wy.ydlrqx.com/proxy.pac&quot;&gt;https://wy.ydlrqx.com/proxy.pac&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;**ÊñπÊ≥ï‰∫åÔºö**ËØ∑ÁßªÊ≠•ÊúÄ‰∏ãÊñπËßÇÁúã‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;LinuxÁ´Ø
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;‰ºöÁî®LinuxÁöÑÈÉΩ‰∏çÂ∫îËØ•ÊòØÂ∞èÁôΩÔºåÊâÄ‰ª•ËøôÈáåÂ∞±‰∏çÊà™Âõæ‰∫ÜÔºåÁõ¥Êé•‰∏äÊñáÂ≠óÊèèËø∞&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÊ≥ï‰∏ÄÔºö&lt;strong&gt;LinuxÁ´ØÁöÑ‰ΩøÁî®‰πüÂêåÊ†∑‰∏é‰ª•‰∏äWindowsÁ´ØÁ¨¨‰∏âÁßçÊñπÊ≥ïÂíåmacOSÁ´ØÊñπÊ≥ïÂêåÁêÜÔºå‰æùÊ¨°ËøõÂÖ•Á≥ªÁªü&lt;code&gt;ËÆæÁΩÆ&lt;/code&gt;Ôºû&lt;code&gt;ÁΩëÁªú&lt;/code&gt;Ôºû&lt;code&gt;ÁΩëÁªú‰ª£ÁêÜ&lt;/code&gt;ÔºåÁÑ∂ÂêéÂ°´ÂÖ•&lt;/strong&gt;Âú∞ÂùÄ&lt;/strong&gt;Ôºö&lt;a href=&quot;https://wy.ydlrqx.com/proxy.pac&quot;&gt;https://wy.ydlrqx.com/proxy.pac&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;**ÊñπÊ≥ï‰∫åÔºö**ËØ∑ÁßªÊ≠•ÊúÄ‰∏ãÊñπËßÇÁúã‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;ÂÆâÂçìÁ´Ø
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;ÊñπÊ≥ï‰∏ÄÔºö&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;ÂÆâÂçìÁ´ØÊòØÊú¨‰∫∫Áî®‰∫ÜÂæà‰πÖÁöÑ‰∏Ä‰∏™Â∞èÂ∑•ÂÖ∑ÔºåËøôÈáåÂÖàËÜúÊãú‰∏Ä‰∏ãÂ§ß‰Ω¨ÁöÑ&lt;a href=&quot;https://github.com/ndroi/easy163&quot;&gt;ÂºÄÊ∫êÈ°πÁõÆ&lt;/a&gt;ÔºåËØ•ËΩØ‰ª∂Êó†ÈúÄ&lt;strong&gt;ROOT&lt;/strong&gt;ÔºåÊó†ÈúÄ&lt;strong&gt;WiFi&lt;/strong&gt;Ôºå‰∏ÄÈîÆËß£ÈîÅÔºåÊé•‰∏ãÊù•ÊàëÁî®Redmi K30 ProÁªôÂ§ßÂÆ∂ÊºîÁ§∫‰∏Ä‰∏ã&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∏ÄÊ≠•ÔºöËøõÂÖ•ÊµèËßàÂô®ËæìÂÖ•Âú∞ÂùÄhttps://github.com/ndroi/easy163/releasesÔºåÈÄâÊúÄÊñ∞ÁâàÊú¨Ôºå‰∏ãËΩΩÂêéÁºÄ‰∏∫apkÁöÑÊñá‰ª∂ÔºåÁÑ∂ÂêéÂÆâË£Ö&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04DE9I.jpg&quot; alt=&quot;04DE9I.jpg&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∫åÊ≠•ÔºöÊâìÂºÄËΩØ‰ª∂ÔºåÁÇπÂáª‰∏ãÈù¢ÁöÑÊåâÈíÆÂºÄÂêØ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04Dk4A.jpg&quot; alt=&quot;04Dk4A.jpg&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á¨¨‰∏âÊ≠•ÔºöËΩØ‰ª∂ÂêéÂè∞ËøêË°åÔºåËøõÂÖ•ÁΩëÊòì‰∫ëÈü≥‰πê‰Ω†‰ºöÂèëÁé∞ÊâÄÊúâÈü≥‰πêÂ∑≤ÁªèËß£ÈîÅÊàêÂäü‰∫ÜÔºå‰∏ãÈù¢Êîæ‰∏§Âº†ÊïàÊûúÂõæ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04DV3t.jpg&quot; alt=&quot;04DV3t.jpg&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04DZgP.jpg&quot; alt=&quot;04DZgP.jpg&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Âª∫ËÆÆ‰∏ãËΩΩ &lt;a href=&quot;https://www.lanzoux.com/iUw9Dheqpob&quot;&gt;ÁΩëÊòì‰∫ëÊûÅÈÄüÁâà&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04rmGR.png&quot; alt=&quot;04rmGR.png&quot;&gt; Ê≠§ÁâàÊú¨ÁΩëÊòì‰∫ëÂäüËÉΩÁÆÄÂçïÁ®≥ÂÆöÔºå‰∏éÊú¨ËΩØ‰ª∂ÂÖºÂÆπËâØÂ•Ω&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;ÊñπÊ≥ï‰∫åÔºö&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt;ËØ∑ÁßªÊ≠•ÊúÄ‰∏ãÊñπËßÇÁúã‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;iOSÁ´Ø
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;ÊñπÊ≥ï‰∏ÄÔºö&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Áî±‰∫éÊú¨‰∫∫ÂÆ∂Â¢ÉË¥´ÂØíÔºå‰π∞‰∏çËµ∑iPhoneÔºåÊó†Ê≥ïÊà™ÂõæËØ¥ÊòéÔºåÊâÄ‰ª•ËøôÈáåÁõ¥Êé•ÊñáÂ≠óÊèèËø∞&lt;/p&gt; 
&lt;p&gt;iOSÁ´ØÁöÑ‰ΩøÁî®‰πüÂêåÊ†∑ÂøÖÈ°ªË¶ÅËøûÊé•WiFiÔºåiOS ËÆæÂ§áËøòÈúÄÂÆâË£Ö CA ËØÅ‰π¶„ÄÇÈ¶ñÂÖàÁÇπÂáª&lt;strong&gt;ÈìæÊé•&lt;/strong&gt;Ôºö&lt;a href=&quot;https://raw.githubusercontent.com/nondanee/UnblockNeteaseMusic/master/ca.crt&quot;&gt;https://raw.githubusercontent.com/nondanee/UnblockNeteaseMusic/master/ca.crt&lt;/a&gt; Ê∑ªÂä†ËØÅ‰π¶ÔºåÈöèÂêéÂú® &lt;code&gt;ËÆæÁΩÆ&lt;/code&gt; &amp;gt; &lt;code&gt;ÈÄöÁî®&lt;/code&gt; &amp;gt; &lt;code&gt;ÂÖ≥‰∫éÊú¨Êú∫&lt;/code&gt; &amp;gt; &lt;code&gt;ËØÅ‰π¶‰ø°‰ªªËÆæÁΩÆ&lt;/code&gt; ‰∏ãÔºåÊâãÂä®ÂºÄÂêØËØÅ‰π¶ÔºåÂÖ∑‰ΩìÂèÇËÄÉ&lt;strong&gt;Apple ÂÆòÊñπËØ¥Êòé&lt;/strong&gt;Ôºö&lt;a href=&quot;https://support.apple.com/zh-cn/HT204477&quot;&gt;https://support.apple.com/zh-cn/HT204477&lt;/a&gt; „ÄÇ&lt;/p&gt; 
&lt;p&gt;ÂÆâË£ÖÂêé‰æùÊ¨°ÊâìÂºÄÊó†Á∫øÂ±ÄÂüüÁΩëÔºûHTTP‰ª£ÁêÜÔºûÈÖçÁΩÆ‰ª£ÁêÜÔºåÁÑ∂ÂêéÊää‰ª£ÁêÜÈÄâÊã©‰∏∫Ëá™Âä®ÈÖçÁΩÆÊ®°ÂºèÔºåÂêåAndroidÁ´Ø‰∏ÄÊ†∑ÔºåÁ≤òË¥¥ÊàëÊèê‰æõÁöÑÂú∞ÂùÄÔºåËÆ∞ÂæóÁÇπÂáªÂè≥‰∏äËßíÁöÑÂ≠òÂÇ®ÔºÅÔºÅÔºÅ&lt;strong&gt;Âú∞ÂùÄ&lt;/strong&gt;Ôºö&lt;a href=&quot;https://wy.ydlrqx.com/proxy.pac&quot;&gt;https://wy.ydlrqx.com/proxy.pac&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;ÊñπÊ≥ï‰∫åÔºö&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt;ËØ∑ÁßªÊ≠•ÊúÄ‰∏ãÊñπËßÇÁúã‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πêÊñπÊ°à&lt;/p&gt; 
&lt;p&gt;ÊïôÁ®ãÂà∞Ê≠§ÁªìÊùüÔºåÂñúÊ¨¢ÊàëÁöÑ‰ΩúÂìÅËØ∑Â∏ÆÂøôÁÇπ‰∏™‚≠êÔºåË∞¢Ë∞¢ÔºÅÔºÅÔºÅ&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;‰∏çÈôêÁ´ØÊµèËßàÂô®Âê¨Èü≥‰πê
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;Â¶ÇÊûúÂÆûÂú®Â´åÈ∫ªÁÉ¶Ôºå‰∏äÈù¢ÁöÑÊïôÁ®ãÈÉΩ‰∏çÁî®ÁúãÔºåÁõ¥Êé•ÊâìÂºÄÊµèËßàÂô®ËæìÂÖ•ÁΩëÂùÄhttp://music.shadow-forum.com/ ÔºåÁõ¥Êé•‰∏äËΩ¶ÔºåÂ∑≤Ëß£ÈîÅÊó†ÁâàÊùÉÊ≠åÊõ≤ÔºåÊîØÊåÅ‰∏ãËΩΩ&lt;/p&gt; 
&lt;p&gt;‰∏ãÈù¢Êîæ‰∏ÄÂº†Êà™Âõæ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/14/04rxeO.png&quot; alt=&quot;04rxeO.png&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;ÊÄªÁªì&lt;/h1&gt; 
&lt;p&gt;WindowsÁ´ØÂÖ±Êèê‰æõ‰∫Ü3ÁßçÊñπÊ≥ïÔºåÊé®Ëçê‰ΩøÁî®ÊñπÊ≥ï‰∫å(Á¨¨‰∏ÄÊ≠•Êìç‰ΩúÂèØËÉΩ‰ºöÊä•ÈîôÔºåËØ∑Â§öËØïÂá†Ê¨°ÔºåÂÆûÂú®‰∏çË°åÂ∞±‰∏ÄË°å‰∏ÄË°åÁöÑÊâßË°å)„ÄÇÊ≠§ÊñπÊ≥ï‰ºòÂäøÔºöÂè™ÈúÄÊìç‰Ωú‰∏ÄÊ¨°Ôºå‰∏îÈÉ®ÁΩ≤Âú®Êú¨Âú∞Ôºå‰∏çÂèó‰ª£ÁêÜÊúçÂä°Âô®ÁΩëÈÄüÁöÑÂΩ±Âìç„ÄÇËá≥‰∫éÂÖ∂‰ªñÂπ≥Âè∞Â¶ÇÊûúÂ´åÈ∫ªÁÉ¶ÂÖ∂ÂÆûÈÉΩÂèØ‰ª•ÂèØ‰ª•ËÄÉËôë‰ΩøÁî®ÊµèËßàÂô®Âê¨Èü≥‰πêÁöÑÊñπÊ°àÔºåÈ¶ôÂ∞±ÂÆå‰∫ÜÔºåËøòÈúÄË¶Å‰ªÄ‰πàËá™Ë°åËΩ¶&lt;/p&gt; 
&lt;p&gt;ÊïôÁ®ãÂà∞Ê≠§ÁªìÊùüÔºåÂñúÊ¨¢ÊàëÁöÑ‰ΩúÂìÅËØ∑Â∏ÆÂøôÁÇπ‰∏™‚≠êÔºåË∞¢Ë∞¢ÔºÅÔºÅÔºÅ&lt;/p&gt; 
&lt;p&gt;ÊñáÊú´ÂÜçÂêë‰∏∫Êú¨È°πÁõÆÊèê‰æõÊäÄÊúØÊîØÊåÅÁöÑÂºÄÊ∫êÈ°πÁõÆËá¥Êï¨&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trazyn/ieaseMusic&quot;&gt;trazyn/ieaseMusic&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/listen1/listen1_chrome_extension&quot;&gt;listen1/listen1_chrome_extension&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/EraserKing/CloudMusicGear&quot;&gt;EraserKing/CloudMusicGear&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/EraserKing/Unblock163MusicClient&quot;&gt;EraserKing/Unblock163MusicClient&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ITJesse/UnblockNeteaseMusic/&quot;&gt;ITJesse/UnblockNeteaseMusic&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bin456789/Unblock163MusicClient-Xposed&quot;&gt;bin456789/Unblock163MusicClient-Xposed&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YiuChoi/Unlock163Music&quot;&gt;YiuChoi/Unlock163Music&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/yi-ji/NeteaseMusicAbroad&quot;&gt;yi-ji/NeteaseMusicAbroad&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/stomakun/NeteaseReverseLadder/&quot;&gt;stomakun/NeteaseReverseLadder&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/fengjueming/unblock-NetEaseMusic&quot;&gt;fengjueming/unblock-NetEaseMusic&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acgotaku/NetEaseMusicWorld&quot;&gt;acgotaku/NetEaseMusicWorld&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mengskysama/163-Cloud-Music-Unlock&quot;&gt;mengskysama/163-Cloud-Music-Unlock&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/azureplus/163-music-unlock&quot;&gt;azureplus/163-music-unlock&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typcn/163music-mac-client-unlock&quot;&gt;typcn/163music-mac-client-unlock&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;https://github.com/nondanee/UnblockNeteaseMusic&lt;/p&gt; 
&lt;p&gt;https://github.com/ndroi/easy163&lt;/p&gt; 
&lt;p&gt;ÊÑüË∞¢Â§ß‰Ω¨‰ª¨ÈªòÈªòÊó†ÈóªÁöÑ‰ªòÂá∫ÔºåÂú®‰∏ãÂè™ÊòØÂ§ßËá™ÁÑ∂ÁöÑÊê¨ËøêÂ∑•&lt;/p&gt; 
&lt;h2&gt;Êú¨ÊïôÁ®ã‰ªÖÁî®‰∫éÂ≠¶‰π†‰∫§ÊµÅÔºåÂ¶ÇÊúâ‰æµÊùÉËØ∑ËÅîÁ≥ªÊú¨‰∫∫Âà†Èô§ÔºåÁ¶ÅÊ≠¢‰ªñ‰∫∫Áî®‰∫éÈùûÊ≥ïÁî®ÈÄîÔºåËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§ÑÔºåË∞¢Ë∞¢ÔºÅÔºÅÔºÅ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ê≥®ÔºöÂ¶ÇÂä†ËΩΩÁºìÊÖ¢ÂèØÂâçÂæÄÊú¨‰∫∫Á†Å‰∫ëÈ°πÁõÆÊü•Áúã&lt;/strong&gt;&lt;a href=&quot;https://gitee.com/meng-chuan/Unlock-netease-cloud-music&quot;&gt;https://gitee.com/meng-chuan/Unlock-netease-cloud-music&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Á†ÅÂ≠ó‰∏çÊòìÔºåÊ¨¢ËøéÂêÑ‰ΩçÈáë‰∏ªÂ§ßÂ§ßÊâìËµè&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/10/11/0gr7L9.png&quot; alt=&quot;0gr7L9.png&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/latest.svg&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/next.svg&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@material-ui/core.svg&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dependabot.com&quot;&gt;&lt;img src=&quot;https://api.dependabot.com/badges/status?host=github&amp;amp;repo=mui-org/material-ui&quot; alt=&quot;Dependabot Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.material-ui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Material-UI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/&quot;&gt;Stable channel v4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core

// with yarn
yarn add @material-ui/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚ö†Ô∏è All ongoing work has moved to v5. The development of v4 is limited to important bug fixes, security patches and easing the upgrade path to v5.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://next.material-ui.com/&quot;&gt;Alpha channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core@next @emotion/react @emotion/styled

// with yarn
yarn add @material-ui/core@next @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.material-ui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.material-ui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors Material-UI?&lt;/h2&gt; 
&lt;h3&gt;Diamond üíé&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;Gold üèÜ&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://material-ui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it&#39;s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@material-ui/core/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it&#39;s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called &quot;material-ui&quot; that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://material-ui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://material-ui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;Material-UI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of &lt;a href=&quot;https://material-ui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://material-ui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor Material-UI&#39;s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ErickWendel/semana-js-expert30</title>
      <link>https://github.com/ErickWendel/semana-js-expert30</link>
      <description>&lt;p&gt;Aulas da Semana JS Expert 3.0 - Construindo um chat multiplataforma usando linha de comando e JavaScript Avan√ßado&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semana-javascript-expert03&lt;/h1&gt; 
&lt;p&gt;Seja bem vindo(a) √† terceira Semana Javascript Expert.&lt;/p&gt; 
&lt;p&gt;Marque esse projeto com uma estrela üåü&lt;/p&gt; 
&lt;p&gt;O c√≥digo fonte completo de cada aula est√° dividido nas seguintes pastas:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ErickWendel/semana-js-expert30/main/hacker-chat-aula01&quot;&gt;Aula 01&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ErickWendel/semana-js-expert30/main/hacker-chat-aula02&quot;&gt;Aula 02&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ErickWendel/semana-js-expert30/main/hacker-chat-aula03&quot;&gt;Aula 03&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ErickWendel/semana-js-expert30/main/hacker-chat-aula04&quot;&gt;Aula 04&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ErickWendel/semana-js-expert30/main/screen-semanajs03.jpg&quot; alt=&quot;project preview&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nolimits4web/swiper</title>
      <link>https://github.com/nolimits4web/swiper</link>
      <description>&lt;p&gt;Most modern mobile touch slider with hardware accelerated transitions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swiper&lt;/h1&gt; 
&lt;p&gt;Swiper - is the free and most modern mobile touch slider with hardware accelerated transitions and amazing native behavior. It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/p&gt; 
&lt;p&gt;Swiper is not compatible with all platforms, it is a modern touch slider which is focused only on modern apps/platforms to bring the best experience and simplicity.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-shakeable&lt;/strong&gt;: Only modules you use will be imported into your app&#39;s bundle.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile-friendly&lt;/strong&gt;: It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Library Agnostic&lt;/strong&gt;: Swiper doesn&#39;t require any JavaScript libraries like jQuery, which makes Swiper much smaller and faster. It can be safely used with libraries such as jQuery, Zepto, jQuery Mobile, etc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;1:1 Touch movement&lt;/strong&gt;: By default, Swiper provides 1:1 touch movement interaction, but this ratio can be configured through Swiper settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mutation Observer&lt;/strong&gt;: Swiper has an option to enable Mutation Observer, with this feature Swiper will be automatically reinitialized and recalculate all required parameters if you make dynamic changes to the DOM, or in Swiper styles itself&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich API&lt;/strong&gt;: Swiper comes with a very rich API. It allows creating your own pagination, navigation buttons, parallax effects and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RTL&lt;/strong&gt;: Swiper is the only slider that provides 100% RTL support with correct layout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Row Slides Layout&lt;/strong&gt;: Swiper allows a multiple row slides layout, with a few slides per column&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transition Effects&lt;/strong&gt;: Fade, Flip, 3D Cube, 3D Coverflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two-way Control&lt;/strong&gt;: Swiper may be used as controller for any number of other Swipers, and even be controlled at the same time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Navigation Control&lt;/strong&gt;: Swiper comes with all required built-in navigation elements, such as Pagination, Navigation arrows and Scrollbar&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexbox Layout&lt;/strong&gt;: Swiper uses modern flexbox layout for slides layout, which solves a lot of problems and time with size caclulations. Such layout also allows configuring the Slides grid using pure CSS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Most Flexible Slides Layout Grid&lt;/strong&gt;: Swiper has a lot of parameters on initialization to make it as flexible as possible. You can control slides per view, per column, per group, space between slides, and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Images Lazy Loading&lt;/strong&gt;: Swiper Lazy Loading delays loading of images in inactive/invisible slides until the user swipes to them. Such feature could make the page load faster and improve Swiper performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Slides&lt;/strong&gt;: Swiper comes with Virtual Slides feature that is great when you have a lot of slides or content-heavy/image-heavy slides so it will keep just the required amount of slides in DOM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Loop mode&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Autoplay&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keyboard control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mousewheel control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nested sliders&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;History navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hash navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Breakpoints configuration&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accessibility (A11y)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;And many more ...&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dist / Build&lt;/h2&gt; 
&lt;p&gt;On production use files (JS and CSS) only from &lt;code&gt;package/&lt;/code&gt; folder, there will be the most stable versions, &lt;code&gt;build/&lt;/code&gt; folder is only for development purpose.&lt;/p&gt; 
&lt;h3&gt;Development Build&lt;/h3&gt; 
&lt;p&gt;Install all dependencies, in repo&#39;s root:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm install

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And build development version of Swiper:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build:dev

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result is available in &lt;code&gt;build/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Running demos:&lt;/h3&gt; 
&lt;p&gt;All demos located in &lt;code&gt;./playground&lt;/code&gt; folder. There you will fine Core (HTML, JS), React, Vue, Svelte and Angular versions. To open demo, run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core&lt;/strong&gt;: &lt;code&gt;npm run core&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;code&gt;npm run react&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vue&lt;/strong&gt;: &lt;code&gt;npm run vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Svelte&lt;/strong&gt;: &lt;code&gt;npm run svelte&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Angular&lt;/strong&gt;: &lt;code&gt;npm run angular&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Production Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build:prod

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Production version will available in &lt;code&gt;package/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All changes should be committed to &lt;code&gt;src/&lt;/code&gt; files only. Before you open an issue please review the &lt;a href=&quot;https://github.com/nolimits4web/swiper/blob/master/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; guideline.&lt;/p&gt; 
&lt;h2&gt;Major Roadmapped Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+label%3A%22feature+request%22+sort%3Areactions-%2B1-desc+&quot;&gt;Top Feature Requests&lt;/a&gt; (Add your own votes using the üëç reaction)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+-label%3A%22feature+request%22++sort%3Areactions-%2B1-desc+&quot;&gt;Top Bugs üò±&lt;/a&gt; (Add your own votes using the üëç reaction)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&quot;https://raw.githubusercontent.com/nolimits4web/swiper/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://nextjs.org/learn
 &lt;!-- raw HTML omitted --&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>octokit/rest.js</title>
      <link>https://github.com/octokit/rest.js</link>
      <description>&lt;p&gt;GitHub REST API client for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rest.js&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GitHub REST API client for JavaScript&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/@octokit/rest&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@octokit/rest.svg&quot; alt=&quot;@latest&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/octokit/rest.js/actions?query=workflow%3ATest+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/octokit/rest.js/workflows/Test/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;
import { Octokit } from &quot;https://cdn.skypack.dev/@octokit/rest&quot;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Install with 
 &lt;!-- raw HTML omitted --&gt;npm install @octokit/rest
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Octokit } = require(&quot;@octokit/rest&quot;);
// or: import { Octokit } from &quot;@octokit/rest&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const octokit = new Octokit();

// Compare: https://docs.github.com/en/rest/reference/repos/#list-organization-repositories
octokit.rest.repos
  .listForOrg({
    org: &quot;octokit&quot;,
    type: &quot;public&quot;,
  })
  .then(({ data }) =&amp;gt; {
    // handle data
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See https://octokit.github.io/rest.js for full documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We would love you to contribute to &lt;code&gt;@octokit/rest&lt;/code&gt;, pull requests are very welcome! Please see &lt;a href=&quot;https://raw.githubusercontent.com/octokit/rest.js/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;@octokit/rest&lt;/code&gt; was originally created as &lt;a href=&quot;https://www.npmjs.com/package/github&quot;&gt;&lt;code&gt;node-github&lt;/code&gt;&lt;/a&gt; in 2012 by Mike de Boer from Cloud9 IDE, Inc. &lt;a href=&quot;https://github.blog/2020-04-09-from-48k-lines-of-code-to-10-the-story-of-githubs-javascript-sdk/&quot;&gt;The original commit&lt;/a&gt; is from 2010 which predates the npm registry.&lt;/p&gt; 
&lt;p&gt;It was adopted and renamed by GitHub in 2017. Learn more about it&#39;s origin on GitHub&#39;s blog: &lt;a href=&quot;https://github.blog/2020-04-09-from-48k-lines-of-code-to-10-the-story-of-githubs-javascript-sdk/&quot;&gt;From 48k lines of code to 10‚Äîthe story of GitHub‚Äôs JavaScript SDK&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/octokit/rest.js/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gatsbyjs/gatsby</title>
      <link>https://github.com/gatsbyjs/gatsby</link>
      <description>&lt;p&gt;Build blazing fast, modern apps and websites with React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Gatsby is a modern web framework for blazing fast websites.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go Beyond Static Websites.&lt;/strong&gt; Get all the benefits of static websites with none of the limitations. Gatsby sites are fully functional React apps, so you can create high-quality, dynamic web apps, from blogs to e-commerce sites to user dashboards.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use a Modern Stack for Every Site.&lt;/strong&gt; No matter where the data comes from, Gatsby sites are built using React and GraphQL. Build a uniform workflow for you and your team, regardless of whether the data is coming from the same backend.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Load Data From Anywhere.&lt;/strong&gt; Gatsby pulls in data from any data source, whether it‚Äôs Markdown files, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins to load your data, then develop using Gatsby‚Äôs uniform GraphQL interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance Is Baked In.&lt;/strong&gt; Ace your performance audits by default. Gatsby automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your site is fast ‚Äî no manual tuning required.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Host at Scale for Pennies.&lt;/strong&gt; Gatsby sites don‚Äôt require servers, so you can host your entire site on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be hosted entirely free on &lt;a href=&quot;https://www.gatsbyjs.com/cloud/&quot;&gt;Gatsby Cloud&lt;/a&gt; and other similar services.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;&lt;strong&gt;Learn how to use Gatsby for your next project.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What‚Äôs In This Document&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-get-up-and-running-in-5-minutes&quot;&gt;Get Up and Running in 5 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-learning-gatsby&quot;&gt;Learning Gatsby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-migration-guides&quot;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-thanks&quot;&gt;Thanks to Our Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Get Up and Running in 5 Minutes&lt;/h2&gt; 
&lt;p&gt;You can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the Gatsby CLI.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g gatsby-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Gatsby site from a Gatsby starter.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Get your Gatsby blog set up in a single command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Create a new Gatsby site using the interactive setup wizard
# Give it this name: My Gatsby site
gatsby new
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the site in &lt;code&gt;develop&lt;/code&gt; mode.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Next, move into your new site‚Äôs directory and start it up:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd my-gatsby-site/
gatsby develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the source code and start editing!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Your site is now running at &lt;code&gt;http://localhost:8000&lt;/code&gt;. Open the &lt;code&gt;my-gatsby-site&lt;/code&gt; directory in your code editor of choice and edit &lt;code&gt;src/pages/index.js&lt;/code&gt;. Save your changes, and the browser will update in real time!&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;At this point, you‚Äôve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our &lt;a href=&quot;https://gatsbyjs.com/plugins/&quot;&gt;plugins&lt;/a&gt; and &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;the official tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üéì Learning Gatsby&lt;/h2&gt; 
&lt;p&gt;Full documentation for Gatsby lives &lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For most developers, we recommend starting with our &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;in-depth tutorial for creating a site with Gatsby&lt;/a&gt;.&lt;/strong&gt; It starts with zero assumptions about your level of ability and walks through every step of the process.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To dive straight into code samples head &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;to our documentation&lt;/a&gt;.&lt;/strong&gt; In particular, check out the ‚Äú
   &lt;!-- raw HTML omitted --&gt;How-to Guides
   &lt;!-- raw HTML omitted --&gt;‚Äù, ‚Äú
   &lt;!-- raw HTML omitted --&gt;Reference
   &lt;!-- raw HTML omitted --&gt;‚Äù, and ‚Äú
   &lt;!-- raw HTML omitted --&gt;Conceptual Guides
   &lt;!-- raw HTML omitted --&gt;‚Äù sections in the sidebar.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We welcome suggestions for improving our docs. See the &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;‚Äúhow to contribute‚Äù&lt;/a&gt; documentation for more details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Start Learning Gatsby: &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;Follow the Tutorial&lt;/a&gt; ¬∑ &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;Read the Docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;üíº Migration Guides&lt;/h2&gt; 
&lt;p&gt;Already have a Gatsby site? These handy guides will help you add the improvements of Gatsby v3 to your site without starting from scratch!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/&quot;&gt;Migrate from v2 to v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v1-to-v2/&quot;&gt;Migrate from v1 to v2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ùó Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Gatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/code-of-conduct/&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. üí™üíú&lt;/p&gt; 
&lt;h2&gt;ü§ù How to Contribute&lt;/h2&gt; 
&lt;p&gt;Whether you&#39;re helping us fix bugs, improve the docs, or spread the word, we&#39;d love to have you as part of the Gatsby community! :muscle::purple_heart:&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; for ideas on contributing and setup steps for getting our repositories up and running on your local machine.&lt;/p&gt; 
&lt;h3&gt;A note on how this repository is organized&lt;/h3&gt; 
&lt;p&gt;This repository is a &lt;a href=&quot;https://trunkbaseddevelopment.com/monorepos/&quot;&gt;monorepo&lt;/a&gt; managed using &lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt;Lerna&lt;/a&gt;. This means there are &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages&quot;&gt;multiple packages&lt;/a&gt; managed in this codebase, even though we publish them to NPM as separate packages.&lt;/p&gt; 
&lt;h3&gt;Contributing to Gatsby v2&lt;/h3&gt; 
&lt;p&gt;The maintenance window for Gatsby v2 closes on April 1, 2021.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;During this maintenance window, we will continue to address reported bugs in Gatsby v2.&lt;/li&gt; 
 &lt;li&gt;After the maintenance window closes, we will only accept critical security updates for Gatsby v2.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìù License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üíú Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks goes out to all our many contributors creating plugins, starters, videos, and blog posts. And a special appreciation for our community members helping with issues and PRs, or answering questions on Discord and GitHub Discussions.&lt;/p&gt; 
&lt;p&gt;A big part of what makes Gatsby great is each and every one of you in the community. Your contributions enrich the Gatsby experience and make it better every day.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>photonstorm/phaser</title>
      <link>https://github.com/photonstorm/phaser</link>
      <description>&lt;p&gt;Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Phaser - HTML5 Game Framework&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/300/phaser-header.png&quot; alt=&quot;Phaser Header&quot; title=&quot;Phaser 3 Header Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/phaser&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/244245946873937922?style=for-the-badge&quot; alt=&quot;Discord chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/phaser_&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/phaser_?style=for-the-badge&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/jsdelivr/npm/hm/phaser?style=for-the-badge&quot; alt=&quot;npm&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/photonstorm/phaser/total?style=for-the-badge&quot; alt=&quot;GitHub&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Phaser is a fast, free, and fun open source HTML5 game framework that offers WebGL and Canvas rendering across desktop and mobile web browsers. Games can be compiled to iOS, Android and native apps by using 3rd party tools. You can use JavaScript or TypeScript for development.&lt;/p&gt; 
&lt;p&gt;Along with the fantastic open source community, Phaser is actively developed and maintained by &lt;a href=&quot;http://www.photonstorm.com&quot;&gt;Photon Storm&lt;/a&gt;. As a result of rapid support, and a developer friendly API, Phaser is currently one of the &lt;a href=&quot;https://github.com/collections/javascript-game-engines&quot;&gt;most starred&lt;/a&gt; game frameworks on GitHub.&lt;/p&gt; 
&lt;p&gt;Thousands of developers from indie and multi-national digital agencies, and universities worldwide use Phaser. You can take a look at their incredible &lt;a href=&quot;https://phaser.io/games/&quot;&gt;games&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Visit:&lt;/strong&gt; The &lt;a href=&quot;https://phaser.io&quot;&gt;Phaser website&lt;/a&gt; and follow on &lt;a href=&quot;https://twitter.com/phaser_&quot;&gt;Phaser Twitter&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Play:&lt;/strong&gt; Some of the amazing games &lt;a href=&quot;https://twitter.com/search?q=%23madewithphaser&amp;amp;src=typed_query&amp;amp;f=live&quot;&gt;#madewithphaser&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Learn:&lt;/strong&gt; &lt;a href=&quot;https://photonstorm.github.io/phaser3-docs/index.html&quot;&gt;API Docs&lt;/a&gt;, &lt;a href=&quot;https://phaser.discourse.group/&quot;&gt;Support Forum&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/tagged/phaser-framework&quot;&gt;StackOverflow&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Code:&lt;/strong&gt; 1770+ &lt;a href=&quot;https://phaser.io/examples&quot;&gt;Examples&lt;/a&gt; (source available in this &lt;a href=&quot;https://github.com/photonstorm/phaser3-examples&quot;&gt;repo&lt;/a&gt;)
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Read:&lt;/strong&gt; The &lt;a href=&quot;https://raw.githubusercontent.com/photonstorm/phaser/master/#newsletter&quot;&gt;Phaser World&lt;/a&gt; Newsletter
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Discord:&lt;/strong&gt; Join us on &lt;a href=&quot;https://phaser.io/community/discord&quot;&gt;Discord&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Extend:&lt;/strong&gt; With &lt;a href=&quot;https://phaser.io/shop/plugins&quot;&gt;Phaser Plugins&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Be awesome:&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/photonstorm/phaser/master/#support&quot;&gt;Support&lt;/a&gt; the future of Phaser
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Grab the source and join the fun!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-whats-new.png&quot; alt=&quot;What&#39;s New&quot; title=&quot;What&#39;s New&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;26th March 2021&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After 13 beta releases, over 200 resolved issues, thousands of lines of new code and the culmination of over 6 months incredibly hard work, Phaser 3.50 was finally released in December 2020 and we&#39;re continuing with updates into 2021 with this new 3.54 release.&lt;/p&gt; 
&lt;p&gt;It&#39;s not hyperbole or exaggeration when I say that Phaser 3.50 is the single biggest point release ever in the history of Phaser. There are quite literally hundreds of new features to explore, updates to key areas and of course bug fixes. I did actually try counting all the changes, but gave up after I&#39;d reached 900 of them! Thankfully, they are, as always, meticulously detailed in the &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/CHANGELOG-v3.50.md&quot;&gt;Change Log&lt;/a&gt;. The changes for 3.50 actually grew so large that I had to split them out from the main Change Log and put them into their own file.&lt;/p&gt; 
&lt;p&gt;However, don&#39;t let this overwhelm you. A massive number of the changes are purely internal and while there are absolutely some API breaking changes in this release (hence the large version number jump), we&#39;ve kept them as sensible as possible. We already know of lots of devs who have upgraded with minimal, or no, changes to their actual game code. We cannot guarantee that for everyone, of course, but depending on how complex your game is, the chances are good.&lt;/p&gt; 
&lt;p&gt;There is plenty to be excited about in this version. It pulls together most of the R&amp;amp;D that took place earlier this year for Phaser 4 and delivers it to you in version 3. New features include full support for post-processing effects via the new Post FX Pipeline, multi-texture support for faster WebGL rendering, a brand new Layer Game Object for the ability to group and post process objects without impacting their transforms, new event hooks, a massive overhaul of the Animation system, funky looking new Point Lights, a new Pipeline Manager, new Camera effects, the latest version of the Spine Plugin, an extremely powerful new Mesh Game Object, a brand new Render Texture, huge improvements to Bitmap Text, isometric and hexagonal Tilemap support, a new Pushable Arcade Physics Body type, new Geometry Intersection tests, Light 2D Updates and lots, lots, &lt;strong&gt;lots&lt;/strong&gt; more!&lt;/p&gt; 
&lt;p&gt;As usual, I&#39;d like to send my thanks to the Phaser community for their help in both reporting issues and submitting pull requests to fix them. So, please do spend some time digging through the &lt;a href=&quot;https://raw.githubusercontent.com/photonstorm/phaser/master/#changelog&quot;&gt;Change Log&lt;/a&gt;. I assure you, it&#39;s worth while :)&lt;/p&gt; 
&lt;p&gt;I&#39;d like to send a massive thank-you to everyone who supports &lt;a href=&quot;https://www.patreon.com/photonstorm&quot;&gt;Phaser on Patreon&lt;/a&gt;, GitHub Sponsors and our corporate backers. Your continued funding allows me to keep working on Phaser full-time and this monster of a new release is the very real result of that. If you&#39;ve ever considered becoming a backer, now is the perfect time!&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to stay abreast of developments then I&#39;m now publishing them to the &lt;a href=&quot;https://www.patreon.com/photonstorm&quot;&gt;Phaser Patreon&lt;/a&gt;. Here you can find the latest development reports including the concepts behind Phaser 4.&lt;/p&gt; 
&lt;p&gt;You can also follow Phaser on &lt;a href=&quot;https://twitter.com/phaser_&quot;&gt;Twitter&lt;/a&gt; and chat with fellow Phaser devs in our &lt;a href=&quot;https://phaser.io/community/discord&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Phaser 3 wouldn&#39;t have been possible without the fantastic support of the community and Patreon. Thank you to everyone who supports our work, who shares our belief in the future of HTML5 gaming, and Phaser&#39;s role in that.&lt;/p&gt; 
&lt;p&gt;Happy coding everyone!&lt;/p&gt; 
&lt;p&gt;Cheers,&lt;/p&gt; 
&lt;p&gt;Rich - &lt;a href=&quot;https://twitter.com/photonstorm&quot;&gt;@photonstorm&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.phaser.io/images/spacedancer.gif&quot; alt=&quot;boogie&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-support-phaser.png&quot; alt=&quot;Support Phaser&quot; title=&quot;Support Phaser&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Because Phaser is an open source project, we cannot charge for it in the same way as traditional retail software. What&#39;s more, we don&#39;t ever want to. After all, it&#39;s built on, and was born from, open web standards. It&#39;s part of our manifesto that the core framework will always be free, even if you use it commercially, as many of you do.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You may not realize it, but because of this, we rely 100% on community backing to fund development.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Those funds allow Phaser to improve, and when it improves, everyone involved benefits. Your support helps secure a constant cycle of updates, fixes, new features and planning for the future.&lt;/p&gt; 
&lt;p&gt;There are other benefits to &lt;a href=&quot;https://www.patreon.com/join/photonstorm&quot;&gt;backing Phaser&lt;/a&gt;, too:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/patreon-perk-chart.png&quot; alt=&quot;Backers Perks&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We use &lt;a href=&quot;https://www.patreon.com/photonstorm&quot;&gt;Patreon&lt;/a&gt; to manage the backing and you can &lt;a href=&quot;https://www.patreon.com/join/photonstorm?&quot;&gt;support Phaser&lt;/a&gt; from $1 per month. The amount you pledge is entirely up to you and can be changed as often as you like. Patreon renews monthly, just like Netflix. You can, of course, cancel at any point. Tears will be shed on this end, but that&#39;s not your concern.&lt;/p&gt; 
&lt;p&gt;Extra special thanks to the following companies whose support makes Phaser possible:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cerebralfix.com&quot;&gt;Cerebral Fix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossinstall.com&quot;&gt;CrossInstall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gamedistribution.com&quot;&gt;Game Distribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamecommerce.com&quot;&gt;GameCommerce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mozilla.org&quot;&gt;Mozilla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.codeandweb.com/texturepacker/tutorials/how-to-create-sprite-sheets-for-phaser3?utm_source=ad&amp;amp;utm_medium=banner&amp;amp;utm_campaign=phaser-2018-10-16&quot;&gt;Texture Packer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twilio.com&quot;&gt;Twilio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.poki.com/&quot;&gt;Poki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.crazygames.com&quot;&gt;CrazyGames&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lagged.com&quot;&gt;Lagged&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroiclabs.com/phaserjs/&quot;&gt;Nakama&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/sponsors-2020-12.png&quot; alt=&quot;Sponsors&quot; title=&quot;Our Awesome Sponsors&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-newsletter.png&quot; alt=&quot;Phaser Newsletter&quot; title=&quot;Phaser Newsletter&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Subscribe to the &lt;a href=&quot;https://phaser.io/community/newsletter&quot;&gt;Phaser World&lt;/a&gt; newsletter for all the latest Phaser games, tutorials, videos and more. It&#39;s published every 2 weeks.&lt;/p&gt; 
&lt;p&gt;Over 150 previous editions can be found on our &lt;a href=&quot;https://phaser.io/community/backissues&quot;&gt;Back Issues&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-download.png&quot; alt=&quot;Download Phaser&quot; title=&quot;Download Phaser&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Phaser 3 is available via GitHub, npm and CDNs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the git repository via &lt;a href=&quot;https://github.com/photonstorm/phaser.git&quot;&gt;https&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/photonstorm/phaser/master/git@github.com:photonstorm/phaser.git&quot;&gt;ssh&lt;/a&gt; or with the GitHub &lt;a href=&quot;github-windows://openRepo/https://github.com/photonstorm/phaser&quot;&gt;Windows&lt;/a&gt; or &lt;a href=&quot;github-mac://openRepo/https://github.com/photonstorm/phaser&quot;&gt;Mac&lt;/a&gt; clients.&lt;/li&gt; 
 &lt;li&gt;Download as &lt;a href=&quot;https://github.com/photonstorm/phaser/archive/master.zip&quot;&gt;zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download the build files: &lt;a href=&quot;https://github.com/photonstorm/phaser/releases/download/v3.54.0/phaser.js&quot;&gt;phaser.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/photonstorm/phaser/releases/download/v3.54.0/phaser.min.js&quot;&gt;phaser.min.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NPM&lt;/h3&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install phaser
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/phaser&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/phaser/badge&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/phaser&quot;&gt;Phaser is on jsDelivr&lt;/a&gt; which is a &quot;super-fast CDN for developers&quot;. Include the following in your html:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;//cdn.jsdelivr.net/npm/phaser@3.54.0/dist/phaser.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or the minified version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;//cdn.jsdelivr.net/npm/phaser@3.54.0/dist/phaser.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API Documentation&lt;/h3&gt; 
&lt;p&gt;Go to https://photonstorm.github.io/phaser3-docs/index.html to read the docs online. Use the drop-down menus at the top to navigate the namespaces, classes and Game Objects lists.&lt;/p&gt; 
&lt;p&gt;Or, if you wish to run the docs locally you can checkout the &lt;a href=&quot;https://github.com/photonstorm/phaser3-docs&quot;&gt;phaser3-docs&lt;/a&gt; repository and then read the documentation by pointing your browser to the &lt;code&gt;docs/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;The documentation for Phaser 3 is an on-going project. Please help us by contributing improved docs and examples.&lt;/p&gt; 
&lt;h3&gt;TypeScript Definitions&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/photonstorm/phaser/tree/master/types&quot;&gt;TypeScript definitions&lt;/a&gt; can be found inside the &lt;code&gt;types&lt;/code&gt; folder. They are also referenced in the types entry in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Depending on your project, you may need to add the following to your &lt;code&gt;tsconfig.json&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;typeRoots&quot;: [
    &quot;./node_modules/phaser/types&quot;
],
&quot;types&quot;: [
    &quot;Phaser&quot;
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We recently published a new &lt;a href=&quot;https://github.com/photonstorm/phaser3-typescript-project-template&quot;&gt;Phaser 3 TypeScript Project Template&lt;/a&gt;, which you can use to get started with if you like.&lt;/p&gt; 
&lt;p&gt;The TS defs are automatically generated from the JSDoc comments found in the Phaser source code. If you wish to help refine them then you must edit the Phaser JSDoc blocks directly, not the defs file. You can find more details about the parser we built in the &lt;code&gt;scripts/tsgen&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Webpack&lt;/h3&gt; 
&lt;p&gt;We use Webpack to build Phaser and we take advantage of its conditional build flag feature to handle renderer swapping. If you wish to use Webpack with Phaser then please use our &lt;a href=&quot;https://github.com/photonstorm/phaser3-project-template&quot;&gt;Phaser 3 Project Template&lt;/a&gt; as it&#39;s already set-up to handle the build conditions Phaser needs. Recent changes to our build steps mean you should now be able to use any other packager, like Parcel, without any config changes.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Phaser is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-getting-started.png&quot; alt=&quot;Getting Started&quot; title=&quot;Getting Started&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Tutorials and guides on Phaser 3 development are being published every week.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phaser.io/tutorials/getting-started-phaser3&quot;&gt;Getting Started with Phaser 3&lt;/a&gt; (useful if you are completely new to Phaser)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phaser.io/tutorials/making-your-first-phaser-3-game&quot;&gt;Making your first Phaser 3 Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://academy.zenva.com/product/html5-game-phaser-mini-degree/?a=13&quot;&gt;Complete Phaser 3 Game Development course&lt;/a&gt; contains over 15 hours of videos covering all kinds of important topics.&lt;/li&gt; 
 &lt;li&gt;Plus, there are &lt;a href=&quot;http://phaser.io/learn&quot;&gt;over 700 Phaser tutorials&lt;/a&gt; listed on the official website.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We&#39;ve 3 tutorials related specifically to creating &lt;strong&gt;Facebook Instant Games&lt;/strong&gt; with Phaser:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://phaser.io/news/2018/10/facebook-instant-games-phaser-tutorial&quot;&gt;Getting Started with Facebook Instant Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://phaser.io/news/2018/11/facebook-instant-games-leaderboards-tutorial&quot;&gt;Facebook Instant Games Leaderboards Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://phaser.io/news/2018/12/facebook-instant-games-ads-tutorial&quot;&gt;Displaying Ads in your Instant Games&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Source Code Examples&lt;/h3&gt; 
&lt;p&gt;During our development of Phaser 3, we created hundreds of examples with the full source code and assets ready available. These examples are now fully integrated into the &lt;a href=&quot;https://phaser.io/examples&quot;&gt;Phaser website&lt;/a&gt;. You can also browse them on &lt;a href=&quot;https://labs.phaser.io&quot;&gt;Phaser 3 Labs&lt;/a&gt; via a more advanced interface, or clone the &lt;a href=&quot;https://github.com/photonstorm/phaser3-examples&quot;&gt;examples repo&lt;/a&gt;. We are constantly adding to and refining these examples.&lt;/p&gt; 
&lt;h3&gt;Huge list of Phaser 3 Plugins&lt;/h3&gt; 
&lt;p&gt;Super community member RexRainbow has been publishing Phaser 3 content for years, building up an impressive catalogue in that time. You&#39;ll find &lt;a href=&quot;https://rexrainbow.github.io/phaser3-rex-notes/docs/site/index.html#list-of-my-plugins&quot;&gt;loads of plugins&lt;/a&gt;, from UI controls such as text input boxes, to Firebase support, Finite State Machines and lots more. As well as the plugins there is also a comprehensive set of &#39;Notes&#39; about Phaser 3, going into great detail about how the various systems work. It&#39;s an invaluable resource and well worth checking out at &lt;a href=&quot;https://rexrainbow.github.io/phaser3-rex-notes/docs/site/index.html&quot;&gt;https://rexrainbow.github.io&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create Your First Phaser 3 Example&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;index.html&lt;/code&gt; page locally and paste the following code into it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/phaser@3.54.0/dist/phaser-arcade-physics.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

    &amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a standard empty webpage. You&#39;ll notice there&#39;s a script tag that is pulling in a build of Phaser 3, but otherwise this webpage doesn&#39;t do anything yet. Now let&#39;s set-up the game config. Paste the following between the &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tags:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var config = {
    type: Phaser.AUTO,
    width: 800,
    height: 600,
    physics: {
        default: &#39;arcade&#39;,
        arcade: {
            gravity: { y: 200 }
        }
    },
    scene: {
        preload: preload,
        create: create
    }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;config&lt;/code&gt; is a pretty standard Phaser 3 Game Configuration object. We tell &lt;code&gt;config&lt;/code&gt; to use the WebGL renderer if it can, set the canvas to a size of 800x600 pixels, enable Arcade Physics, and finally call the &lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; functions. &lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; have not been implemented yet, so if you run this JavaScript code, you will have an error. Add the following after &lt;code&gt;config&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var game = new Phaser.Game(config);

function preload ()
{
    this.load.setBaseURL(&#39;https://labs.phaser.io&#39;);

    this.load.image(&#39;sky&#39;, &#39;assets/skies/space3.png&#39;);
    this.load.image(&#39;logo&#39;, &#39;assets/sprites/phaser3-logo.png&#39;);
    this.load.image(&#39;red&#39;, &#39;assets/particles/red.png&#39;);
}

function create ()
{
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;game&lt;/code&gt; is a Phaser Game instance that uses our configuration object &lt;code&gt;config&lt;/code&gt;. We also add function definitions for &lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt;. The &lt;code&gt;preload&lt;/code&gt; function helps you easily load assets into your game. In &lt;code&gt;preload&lt;/code&gt;, we set the Base URL to be the Phaser server and load 3 PNG files.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;create&lt;/code&gt; function is empty, so it&#39;s time to fill it in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function create ()
{
    this.add.image(400, 300, &#39;sky&#39;);

    var particles = this.add.particles(&#39;red&#39;);

    var emitter = particles.createEmitter({
        speed: 100,
        scale: { start: 1, end: 0 },
        blendMode: &#39;ADD&#39;
    });

    var logo = this.physics.add.image(400, 100, &#39;logo&#39;);

    logo.setVelocity(100, 200);
    logo.setBounce(1, 1);
    logo.setCollideWorldBounds(true);

    emitter.startFollow(logo);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here we add a sky image into the game and create a Particle Emitter. The &lt;code&gt;scale&lt;/code&gt; value means that the particles will initially be large and will shrink to nothing as their lifespan progresses.&lt;/p&gt; 
&lt;p&gt;After creating the &lt;code&gt;emitter&lt;/code&gt;, we add a logo image called &lt;code&gt;logo&lt;/code&gt;. Since &lt;code&gt;logo&lt;/code&gt; is a Physics Image, &lt;code&gt;logo&lt;/code&gt; is given a physics body by default. We set some properties for &lt;code&gt;logo&lt;/code&gt;: velocity, bounce (or restitution), and collision with the world bounds. These properties will make our logo bounce around the screen. Finally, we tell the particle emitter to follow the logo - so as the logo moves, the particles will flow from it.&lt;/p&gt; 
&lt;p&gt;Run it in your browser and you&#39;ll see the following:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/300/sample1.png&quot; alt=&quot;Phaser 3 Demo&quot; title=&quot;Phaser 3 Demo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;(Got an error? Here&#39;s the &lt;a href=&quot;https://gist.github.com/photonstorm/46cb8fb4b19fc7717dcad514cdcec064&quot;&gt;full code&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;This is a tiny example, and there are hundreds more for you to explore, but hopefully it shows how expressive and quick Phaser is to use. With just a few easily readable lines of code, we&#39;ve got something pretty impressive up on screen!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://blog.ourcade.co&quot;&gt;&lt;img src=&quot;https://phaser.io/images/github/ourcade.jpg&quot; alt=&quot;Ourcade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ourcade have published &lt;a href=&quot;https://blog.ourcade.co&quot;&gt;two great Phaser 3 books&lt;/a&gt;. They&#39;ll take you from getting set-up, through to finishing your first game using modern JavaScript or TypeScript and they&#39;re both completely free! They also publish a huge range of quality tutorials and videos, so be sure to check out their site every week.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gumroad.com/a/244184179&quot;&gt;&lt;img src=&quot;https://phaser.io/images/github/feronato.png&quot; alt=&quot;HTML5 Cross Platform Game Development with Phaser 3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Learn the secrets of HTML5 game development with Phaser 3.50 while building a cross platform endless runner game. Designed both for beginners and skilled programmers, the course guides you from an empty folder introducing the bare bones of JavaScript to advanced Phaser 3 features. Find out more details about &lt;a href=&quot;https://gumroad.com/a/244184179&quot;&gt;HTML5 Cross Platform Game Development with Phaser&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-building-phaser.png&quot; alt=&quot;Building Phaser&quot; title=&quot;Building Phaser&quot;&gt;&lt;/p&gt; 
&lt;p&gt;There are both plain and minified compiled versions of Phaser in the &lt;code&gt;dist&lt;/code&gt; folder of the repository. The plain version is for use during development, and the minified version is for production use. You can and should also create your own builds.&lt;/p&gt; 
&lt;h3&gt;Custom Builds&lt;/h3&gt; 
&lt;p&gt;Phaser 3 is built using Webpack and we take advantage of the Webpack definePlugin feature to allow for conditional building of the Canvas and WebGL renderers and extra plugins. You can custom the build process to only include the features you require. Doing so can cut the main build file size down to just 70KB.&lt;/p&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://github.com/photonstorm/phaser3-custom-build#creating-custom-phaser-3-builds&quot;&gt;comprehensive guide&lt;/a&gt; on creating Custom Builds of Phaser 3 for full details.&lt;/p&gt; 
&lt;h3&gt;Building from Source&lt;/h3&gt; 
&lt;p&gt;If you wish to build Phaser 3 from source, ensure you have the required packages by cloning the repository and then running &lt;code&gt;npm install&lt;/code&gt; on your source directory.&lt;/p&gt; 
&lt;p&gt;You can then run &lt;code&gt;webpack&lt;/code&gt; to create a development build in the &lt;code&gt;build&lt;/code&gt; folder which includes source maps for local testing. You can also &lt;code&gt;npm run dist&lt;/code&gt; to create a minified packaged build in the &lt;code&gt;dist&lt;/code&gt; folder. For a list of all commands available use &lt;code&gt;npm run help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-change-log.png&quot; alt=&quot;Change Log&quot; title=&quot;Change Log&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Change Log&lt;/h1&gt; 
&lt;p&gt;Traditionally we have always included the most recent Change Log in this README. It was a nice quick way for visitors to scan what&#39;s new in the latest version. However, with the 3.50.0 release we cannot do that because the Change Log itself is 1300 lines long and over 160KB in size.&lt;/p&gt; 
&lt;p&gt;This is somewhat unprecedented for Phaser, but then 3.50 &lt;em&gt;is&lt;/em&gt; a truly massive release!&lt;/p&gt; 
&lt;p&gt;You can read the whole &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/CHANGELOG-v3.50.md&quot;&gt;3.50+ Change Log here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We&#39;ve organized the Change Log into commonly themed sections to make it more digestible, but we appreciate there is a lot in there. Please don&#39;t feel overwhelmed! If you need clarification about something, join us on the Phaser Discord and feel free to ask.&lt;/p&gt; 
&lt;p&gt;For versions prior to 3.50 you can read the previous &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/CHANGELOG.md&quot;&gt;Change Log&lt;/a&gt; as well.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-contributing.png&quot; alt=&quot;Contributing&quot; title=&quot;Contributing&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/.github/CONTRIBUTING.md&quot;&gt;Contributors Guide&lt;/a&gt; contains full details on how to help with Phaser development. The main points are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Found a bug? Report it on &lt;a href=&quot;https://github.com/photonstorm/phaser/issues&quot;&gt;GitHub Issues&lt;/a&gt; and include a code sample. Please state which version of Phaser you are using! This is vitally important.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Before submitting a Pull Request run your code through &lt;a href=&quot;https://eslint.org/&quot;&gt;ES Lint&lt;/a&gt; using our &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/.eslintrc.json&quot;&gt;config&lt;/a&gt; and respect our &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/.editorconfig&quot;&gt;Editor Config&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Before contributing read the &lt;a href=&quot;https://github.com/photonstorm/phaser/blob/master/.github/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Written something cool in Phaser? Please tell us about it in the &lt;a href=&quot;https://phaser.discourse.group/&quot;&gt;forum&lt;/a&gt;, or email support@phaser.io&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://phaser.io/images/github/div-created-by.png&quot; alt=&quot;Created by&quot; title=&quot;Created by&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Phaser is a &lt;a href=&quot;http://www.photonstorm.com&quot;&gt;Photon Storm&lt;/a&gt; production.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.phaser.io/images/github/photonstorm-x2.png&quot; alt=&quot;storm&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Created by &lt;a href=&quot;mailto:rich@photonstorm.com&quot;&gt;Richard Davey&lt;/a&gt;. Powered by coffee, anime, pixels and love.&lt;/p&gt; 
&lt;p&gt;The Phaser logo and characters are ¬© 2021 Photon Storm Limited.&lt;/p&gt; 
&lt;p&gt;All rights reserved.&lt;/p&gt; 
&lt;p&gt;&quot;Above all, video games are meant to be just one thing: fun. Fun for everyone.&quot; - Satoru Iwata&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/create-react-app</title>
      <link>https://github.com/facebook/create-react-app</link>
      <description>&lt;p&gt;Set up a modern web app by running one command.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Create React App &lt;a href=&quot;https://dev.azure.com/facebook/create-react-app/_build/latest?definitionId=1&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://dev.azure.com/facebook/create-react-app/_apis/build/status/facebook.create-react-app?branchName=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/blob/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-green.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Create React apps with no build configuration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/#creating-an-app&quot;&gt;Creating an App&lt;/a&gt; ‚Äì How to create a new app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;User Guide&lt;/a&gt; ‚Äì How to develop apps bootstrapped with Create React App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Create React App works on macOS, Windows, and Linux.
 &lt;!-- raw HTML omitted --&gt; If something doesn‚Äôt work, please &lt;a href=&quot;https://github.com/facebook/create-react-app/issues/new&quot;&gt;file an issue&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt; If you have questions or need help, please ask in &lt;a href=&quot;https://github.com/facebook/create-react-app/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;ve previously installed &lt;code&gt;create-react-app&lt;/code&gt; globally via &lt;code&gt;npm install -g create-react-app&lt;/code&gt;, we recommend you uninstall the package using &lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt; or &lt;code&gt;yarn global remove create-react-app&lt;/code&gt; to ensure that npx always uses the latest version.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Then open &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; to see your app.
 &lt;!-- raw HTML omitted --&gt; When you‚Äôre ready to deploy to production, create a minified bundle with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Get Started Immediately&lt;/h3&gt; 
&lt;p&gt;You &lt;strong&gt;don‚Äôt&lt;/strong&gt; need to install or configure tools like webpack or Babel.
 &lt;!-- raw HTML omitted --&gt; They are preconfigured and hidden so that you can focus on the code.&lt;/p&gt; 
&lt;p&gt;Create a project, and you‚Äôre good to go.&lt;/p&gt; 
&lt;h2&gt;Creating an App&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You‚Äôll need to have Node 10.16.0 or later version on your local development machine&lt;/strong&gt; (but it‚Äôs not required on the server). We recommend using the latest LTS version. You can use &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (macOS/Linux) or &lt;a href=&quot;https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows&quot;&gt;nvm-windows&lt;/a&gt; to switch Node versions between different projects.&lt;/p&gt; 
&lt;p&gt;To create a new app, you may choose one of the following methods:&lt;/p&gt; 
&lt;h3&gt;npx&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; is a package runner tool that comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm init react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;code&gt;npm init &amp;lt;initializer&amp;gt;&lt;/code&gt; is available in npm 6+&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn create react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/create/&quot;&gt;&lt;code&gt;yarn create &amp;lt;starter-kit-package&amp;gt;&lt;/code&gt;&lt;/a&gt; is available in Yarn 0.25+&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;It will create a directory called &lt;code&gt;my-app&lt;/code&gt; inside the current folder.
 &lt;!-- raw HTML omitted --&gt; Inside that directory, it will generate the initial project structure and install the transitive dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-app
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ node_modules
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ public
‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îî‚îÄ‚îÄ manifest.json
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ App.css
    ‚îú‚îÄ‚îÄ App.js
    ‚îú‚îÄ‚îÄ App.test.js
    ‚îú‚îÄ‚îÄ index.css
    ‚îú‚îÄ‚îÄ index.js
    ‚îú‚îÄ‚îÄ logo.svg
    ‚îî‚îÄ‚îÄ serviceWorker.js
    ‚îî‚îÄ‚îÄ setupTests.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No configuration or complicated folder structures, only the files you need to build your app.
 &lt;!-- raw HTML omitted --&gt; Once the installation is done, you can open your project folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside the newly created project, you can run some built-in commands:&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the app in development mode.
 &lt;!-- raw HTML omitted --&gt; Open &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; 
&lt;p&gt;The page will automatically reload if you make changes to the code.
 &lt;!-- raw HTML omitted --&gt; You will see the build errors and lint warnings in the console.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt; or &lt;code&gt;yarn test&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the test watcher in an interactive mode.
 &lt;!-- raw HTML omitted --&gt; By default, runs tests related to files changed since the last commit.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/running-tests&quot;&gt;Read more about testing.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.
 &lt;!-- raw HTML omitted --&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; 
&lt;p&gt;The build is minified and the filenames include the hashes.
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Your app is ready to be deployed.&lt;/p&gt; 
&lt;h2&gt;User Guide&lt;/h2&gt; 
&lt;p&gt;You can find detailed instructions on using Create React App and many tips in &lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to Update to New Versions?&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/updating-to-new-releases&quot;&gt;User Guide&lt;/a&gt; for this and other information.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;One Dependency:&lt;/strong&gt; There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Configuration Required:&lt;/strong&gt; You don&#39;t need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Lock-In:&lt;/strong&gt; You can ‚Äúeject‚Äù to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What‚Äôs Included?&lt;/h2&gt; 
&lt;p&gt;Your environment will have everything you need to build a modern single-page React app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React, JSX, ES6, TypeScript and Flow syntax support.&lt;/li&gt; 
 &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
 &lt;li&gt;Autoprefixed CSS, so you don‚Äôt need &lt;code&gt;-webkit-&lt;/code&gt; or other prefixes.&lt;/li&gt; 
 &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
 &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
 &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
 &lt;li&gt;An offline-first &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/service-workers&quot;&gt;service worker&lt;/a&gt; and a &lt;a href=&quot;https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/&quot;&gt;web app manifest&lt;/a&gt;, meeting all the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&quot;&gt;Progressive Web App&lt;/a&gt; criteria. (&lt;em&gt;Note: Using the service worker is opt-in as of &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Hassle-free updates for the above tools with a single dependency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/nitishdayal/cra_closer_look&quot;&gt;this guide&lt;/a&gt; for an overview of how these tools fit together.&lt;/p&gt; 
&lt;p&gt;The tradeoff is that &lt;strong&gt;these tools are preconfigured to work in a specific way&lt;/strong&gt;. If your project needs more customization, you can &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject&quot;&gt;&quot;eject&quot;&lt;/a&gt; and customize it, but then you will need to maintain this configuration.&lt;/p&gt; 
&lt;h2&gt;Popular Alternatives&lt;/h2&gt; 
&lt;p&gt;Create React App is a great fit for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Learning React&lt;/strong&gt; in a comfortable and feature-rich development environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Starting new single-page React applications.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Creating examples&lt;/strong&gt; with React for your libraries and components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here are a few common cases where you might want to try something else:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you want to &lt;strong&gt;try React&lt;/strong&gt; without hundreds of transitive build tool dependencies, consider &lt;a href=&quot;https://reactjs.org/docs/try-react.html&quot;&gt;using a single HTML file or an online sandbox instead&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;integrate React code with a server-side template framework&lt;/strong&gt; like Rails, Django or Symfony, or if you‚Äôre &lt;strong&gt;not building a single-page app&lt;/strong&gt;, consider using &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt;, or &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; which are more flexible. For Rails specifically, you can use &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;Rails Webpacker&lt;/a&gt;. For Symfony, try &lt;a href=&quot;https://symfony.com/doc/current/frontend/encore/reactjs.html&quot;&gt;Symfony&#39;s webpack Encore&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;publish a React component&lt;/strong&gt;, &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt; can &lt;a href=&quot;https://github.com/insin/nwb#react-components-and-libraries&quot;&gt;also do this&lt;/a&gt;, as well as &lt;a href=&quot;https://neutrino.js.org/packages/react-components/&quot;&gt;Neutrino&#39;s react-components preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to do &lt;strong&gt;server rendering&lt;/strong&gt; with React and Node.js, check out &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/jaredpalmer/razzle&quot;&gt;Razzle&lt;/a&gt;. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your website is &lt;strong&gt;mostly static&lt;/strong&gt; (for example, a portfolio or a blog), consider using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; or &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, if you need &lt;strong&gt;more customization&lt;/strong&gt;, check out &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; and its &lt;a href=&quot;https://neutrino.js.org/packages/react/&quot;&gt;React preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All of the above tools can work with little to no configuration.&lt;/p&gt; 
&lt;p&gt;If you prefer configuring the build yourself, &lt;a href=&quot;https://reactjs.org/docs/add-react-to-an-existing-app.html&quot;&gt;follow this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;Looking for something similar, but for React Native?
 &lt;!-- raw HTML omitted --&gt; Check out &lt;a href=&quot;https://github.com/expo/expo-cli&quot;&gt;Expo CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love to have your helping hand on &lt;code&gt;create-react-app&lt;/code&gt;! See &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we&#39;re looking for and how to get started.&lt;/p&gt; 
&lt;h2&gt;Supporting Create React App&lt;/h2&gt; 
&lt;p&gt;Create React App is a community maintained project and all contributors are volunteers. If you&#39;d like to support the future development of Create React App then please consider donating to our &lt;a href=&quot;https://opencollective.com/create-react-app&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for hosting our documentation.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We are grateful to the authors of existing related projects for their ideas and collaboration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eanplatter&quot;&gt;@eanplatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insin&quot;&gt;@insin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxstbr&quot;&gt;@mxstbr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Create React App is open source software &lt;a href=&quot;https://github.com/facebook/create-react-app/blob/master/LICENSE&quot;&gt;licensed as MIT&lt;/a&gt;. The Create React App logo is licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>novnc/noVNC</title>
      <link>https://github.com/novnc/noVNC</link>
      <description>&lt;p&gt;VNC client web application&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;noVNC: HTML VNC Client Library and Application&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/novnc/noVNC/actions?query=workflow%3ATest&quot;&gt;&lt;img src=&quot;https://github.com/novnc/noVNC/workflows/Test/badge.svg&quot; alt=&quot;Test Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/novnc/noVNC/actions?query=workflow%3ALint&quot;&gt;&lt;img src=&quot;https://github.com/novnc/noVNC/workflows/Lint/badge.svg&quot; alt=&quot;Lint Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Description&lt;/h3&gt; 
&lt;p&gt;noVNC is both a HTML VNC client JavaScript library and an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android).&lt;/p&gt; 
&lt;p&gt;Many companies, projects and products have integrated noVNC including &lt;a href=&quot;http://www.openstack.org&quot;&gt;OpenStack&lt;/a&gt;, &lt;a href=&quot;http://opennebula.org/&quot;&gt;OpenNebula&lt;/a&gt;, &lt;a href=&quot;http://libvncserver.sourceforge.net&quot;&gt;LibVNCServer&lt;/a&gt;, and &lt;a href=&quot;https://cendio.com/thinlinc&quot;&gt;ThinLinc&lt;/a&gt;. See &lt;a href=&quot;https://github.com/novnc/noVNC/wiki/Projects-and-companies-using-noVNC&quot;&gt;the Projects and Companies wiki page&lt;/a&gt; for a more complete list with additional info and links.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#newshelpcontact&quot;&gt;News/help/contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#browser-requirements&quot;&gt;Browser Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#server-requirements&quot;&gt;Server Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#installation-from-snap-package&quot;&gt;Installation from Snap Package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#integration-and-deployment&quot;&gt;Integration and Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/#authorscontributors&quot;&gt;Authors/Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;News/help/contact&lt;/h3&gt; 
&lt;p&gt;The project website is found at &lt;a href=&quot;http://novnc.com&quot;&gt;novnc.com&lt;/a&gt;. Notable commits, announcements and news are posted to &lt;a href=&quot;http://www.twitter.com/noVNC&quot;&gt;@noVNC&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are a noVNC developer/integrator/user (or want to be) please join the &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/novnc&quot;&gt;noVNC discussion group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bugs and feature requests can be submitted via &lt;a href=&quot;https://github.com/novnc/noVNC/issues&quot;&gt;github issues&lt;/a&gt;. If you have questions about using noVNC then please first use the &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/novnc&quot;&gt;discussion group&lt;/a&gt;. We also have a &lt;a href=&quot;https://github.com/novnc/noVNC/wiki/&quot;&gt;wiki&lt;/a&gt; with lots of helpful information.&lt;/p&gt; 
&lt;p&gt;If you are looking for a place to start contributing to noVNC, a good place to start would be the issues that are marked as &lt;a href=&quot;https://github.com/novnc/noVNC/issues?labels=patchwelcome&quot;&gt;&quot;patchwelcome&quot;&lt;/a&gt;. Please check our &lt;a href=&quot;https://github.com/novnc/noVNC/wiki/Contributing&quot;&gt;contribution guide&lt;/a&gt; though.&lt;/p&gt; 
&lt;p&gt;If you want to show appreciation for noVNC you could donate to a great non- profits such as: &lt;a href=&quot;http://www.compassion.com/&quot;&gt;Compassion International&lt;/a&gt;, &lt;a href=&quot;http://www.sil.org&quot;&gt;SIL&lt;/a&gt;, &lt;a href=&quot;http://www.habitat.org&quot;&gt;Habitat for Humanity&lt;/a&gt;, &lt;a href=&quot;https://www.eff.org/&quot;&gt;Electronic Frontier Foundation&lt;/a&gt;, &lt;a href=&quot;http://www.againstmalaria.com/&quot;&gt;Against Malaria Foundation&lt;/a&gt;, &lt;a href=&quot;http://www.nothingbutnets.net/&quot;&gt;Nothing But Nets&lt;/a&gt;, etc. Please tweet &lt;a href=&quot;http://www.twitter.com/noVNC&quot;&gt;@noVNC&lt;/a&gt; if you do.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports all modern browsers including mobile (iOS, Android)&lt;/li&gt; 
 &lt;li&gt;Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG&lt;/li&gt; 
 &lt;li&gt;Supports scaling, clipping and resizing the desktop&lt;/li&gt; 
 &lt;li&gt;Local cursor rendering&lt;/li&gt; 
 &lt;li&gt;Clipboard copy/paste&lt;/li&gt; 
 &lt;li&gt;Translations&lt;/li&gt; 
 &lt;li&gt;Touch gestures for emulating common mouse actions&lt;/li&gt; 
 &lt;li&gt;Licensed mainly under the &lt;a href=&quot;http://www.mozilla.org/MPL/2.0/&quot;&gt;MPL 2.0&lt;/a&gt;, see &lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/LICENSE.txt&quot;&gt;the license document&lt;/a&gt; for details&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Screenshots&lt;/h3&gt; 
&lt;p&gt;Running in Firefox before and after connecting:&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&amp;nbsp; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;See more screenshots &lt;a href=&quot;http://novnc.com/screenshots.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Browser Requirements&lt;/h3&gt; 
&lt;p&gt;noVNC uses many modern web technologies so a formal requirement list is not available. However these are the minimum versions we are currently aware of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome 49, Firefox 44, Safari 11, Opera 36, Edge 79&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Server Requirements&lt;/h3&gt; 
&lt;p&gt;noVNC follows the standard VNC protocol, but unlike other VNC clients it does require WebSockets support. Many servers include support (e.g. &lt;a href=&quot;http://libvncserver.sourceforge.net/&quot;&gt;x11vnc/libvncserver&lt;/a&gt;, &lt;a href=&quot;http://www.qemu.org/&quot;&gt;QEMU&lt;/a&gt;, and &lt;a href=&quot;http://www.smartlab.at/mobilevnc/&quot;&gt;MobileVNC&lt;/a&gt;), but for the others you need to use a WebSockets to TCP socket proxy. noVNC has a sister project &lt;a href=&quot;https://github.com/novnc/websockify&quot;&gt;websockify&lt;/a&gt; that provides a simple such proxy.&lt;/p&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use the launch script to automatically download and start websockify, which includes a mini-webserver and the WebSockets proxy. The &lt;code&gt;--vnc&lt;/code&gt; option is used to specify the location of a running VNC server:&lt;/p&gt; &lt;p&gt;&lt;code&gt;./utils/launch.sh --vnc localhost:5901&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Point your browser to the cut-and-paste URL that is output by the launch script. Hit the Connect button, enter a password if the VNC server has one configured, and enjoy!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation from Snap Package&lt;/h3&gt; 
&lt;p&gt;Running the command below will install the latest release of noVNC from Snap:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sudo snap install novnc&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Running noVNC&lt;/h4&gt; 
&lt;p&gt;You can run the Snap-package installed novnc directly with, for example:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;novnc --listen 6081 --vnc localhost:5901 # /snap/bin/novnc if /snap/bin is not in your PATH&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Running as a Service (Daemon)&lt;/h4&gt; 
&lt;p&gt;The Snap package also has the capability to run a &#39;novnc&#39; service which can be configured to listen on multiple ports connecting to multiple VNC servers (effectively a service runing multiple instances of novnc). Instructions (with example values):&lt;/p&gt; 
&lt;p&gt;List current services (out-of-box this will be blank):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo snap get novnc services
Key             Value
services.n6080  {...}
services.n6081  {...}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new service that listens on port 6082 and connects to the VNC server running on port 5902 on localhost:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sudo snap set novnc services.n6082.listen=6082 services.n6082.vnc=localhost:5902&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;(Any services you define with &#39;snap set&#39; will be automatically started) Note that the name of the service, &#39;n6082&#39; in this example, can be anything as long as it doesn&#39;t start with a number or contain spaces/special characters.&lt;/p&gt; 
&lt;p&gt;View the configuration of the service just created:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo snap get novnc services.n6082
Key                    Value
services.n6082.listen  6082
services.n6082.vnc     localhost:5902
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Disable a service (note that because of a limitation in Snap it&#39;s currently not possible to unset config variables, setting them to blank values is the way to disable a service):&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sudo snap set novnc services.n6082.listen=&#39;&#39; services.n6082.vnc=&#39;&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;(Any services you set to blank with &#39;snap set&#39; like this will be automatically stopped)&lt;/p&gt; 
&lt;p&gt;Verify that the service is disabled (blank values):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo snap get novnc services.n6082
Key                    Value
services.n6082.listen  
services.n6082.vnc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integration and Deployment&lt;/h3&gt; 
&lt;p&gt;Please see our other documents for how to integrate noVNC in your own software, or deploying the noVNC application in production environments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/docs/EMBEDDING.md&quot;&gt;Embedding&lt;/a&gt; - For the noVNC application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/docs/LIBRARY.md&quot;&gt;Library&lt;/a&gt; - For the noVNC JavaScript library&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authors/Contributors&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/novnc/noVNC/master/AUTHORS&quot;&gt;AUTHORS&lt;/a&gt; for a (full-ish) list of authors. If you&#39;re not on that list and you think you should be, feel free to send a PR to fix that.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Core team:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/kanaka&quot;&gt;Joel Martin&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/samhed&quot;&gt;Samuel Mannehed&lt;/a&gt; (Cendio)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DirectXMan12&quot;&gt;Solly Ross&lt;/a&gt; (Red Hat / OpenStack)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/CendioOssman&quot;&gt;Pierre Ossman&lt;/a&gt; (Cendio)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Notable contributions:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UI and Icons : Pierre Ossman, Chris Gordon&lt;/li&gt; 
   &lt;li&gt;Original Logo : Michael Sersen&lt;/li&gt; 
   &lt;li&gt;tight encoding : Michael Tinglof (Mercuri.ca)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Included libraries:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;base64 : Martijn Pieters (Digital Creations 2), Samuel Sieb (sieb.net)&lt;/li&gt; 
   &lt;li&gt;DES : Dave Zimmerman (Widget Workshop), Jef Poskanzer (ACME Labs)&lt;/li&gt; 
   &lt;li&gt;Pako : Vitaly Puzrin (https://github.com/nodeca/pako)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Do you want to be on this list? Check out our &lt;a href=&quot;https://github.com/novnc/noVNC/wiki/Contributing&quot;&gt;contribution guide&lt;/a&gt; and start hacking!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>strapi/strapi</title>
      <link>https://github.com/strapi/strapi</link>
      <description>&lt;p&gt;üöÄ Open source Node.js Headless CMS to easily build customisable APIs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Strapi is a free and open-source headless CMS delivering your content anywhere you need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Keep control over your data&lt;/strong&gt;. With Strapi, you know where your data is stored, and you keep full control at all times.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-hosted&lt;/strong&gt;. You can host and scale Strapi projects the way you want. You can choose any hosting platform you want: AWS, Render, Netlify, Heroku, a VPS, or a dedicated server. You can scale as you grow, 100% independent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database agnostic&lt;/strong&gt;. You can choose the database you prefer. Strapi works with SQL &amp;amp; NoSQL databases: MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;. You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Read the Getting Started tutorial
 &lt;!-- raw HTML omitted --&gt; or follow the steps below:&lt;/p&gt; 
&lt;h3&gt;‚è≥ Installation&lt;/h3&gt; 
&lt;p&gt;Install Strapi with this &lt;strong&gt;Quickstart&lt;/strong&gt; command to create a Strapi project instantly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Use &lt;strong&gt;yarn&lt;/strong&gt; to install the Strapi project (recommended). &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/install/&quot;&gt;Install yarn with these docs&lt;/a&gt;.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn create strapi-app my-project --quickstart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Use npm/npx to install the Strapi project.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-strapi-app my-project --quickstart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp;amp; file upload). The &lt;strong&gt;Quickstart&lt;/strong&gt; command installs Strapi using a &lt;strong&gt;SQLite&lt;/strong&gt; database which is used for prototyping in development.&lt;/p&gt; 
&lt;p&gt;Enjoy üéâ&lt;/p&gt; 
&lt;h3&gt;üñê Requirements&lt;/h3&gt; 
&lt;p&gt;Complete installation requirements can be found in the documentation under 
 &lt;!-- raw HTML omitted --&gt;Installation Requirements
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu LTS/Debian 9.x&lt;/li&gt; 
 &lt;li&gt;CentOS/RHEL 8&lt;/li&gt; 
 &lt;li&gt;macOS Mojave&lt;/li&gt; 
 &lt;li&gt;Windows 10&lt;/li&gt; 
 &lt;li&gt;Docker - &lt;a href=&quot;https://github.com/strapi/strapi-docker&quot;&gt;Docker-Repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Node:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NodeJS &amp;gt;= 10.16 &amp;lt;=14&lt;/li&gt; 
 &lt;li&gt;NPM &amp;gt;= 6.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Database:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MongoDB &amp;gt;= 3.6&lt;/li&gt; 
 &lt;li&gt;MySQL &amp;gt;= 5.6&lt;/li&gt; 
 &lt;li&gt;MariaDB &amp;gt;= 10.1&lt;/li&gt; 
 &lt;li&gt;PostgreSQL &amp;gt;= 10&lt;/li&gt; 
 &lt;li&gt;SQLite &amp;gt;= 3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;We recommend always using the latest version of Strapi to start your new projects&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Admin Panel:&lt;/strong&gt; Elegant, entirely customizable and a fully extensible admin panel.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Secure by default:&lt;/strong&gt; Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugins Oriented:&lt;/strong&gt; Install the auth system, content management, custom plugins, and more, in seconds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blazing Fast:&lt;/strong&gt; Built on top of Node.js, Strapi delivers amazing performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Front-end Agnostic:&lt;/strong&gt; Use any front-end framework (React, Vue, Angular, etc.), mobile apps or even IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful CLI:&lt;/strong&gt; Scaffold projects and APIs on the fly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL &amp;amp; NoSQL databases:&lt;/strong&gt; Works with MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://strapi.io/overview&quot;&gt;See more on our website&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://raw.githubusercontent.com/strapi/strapi/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before submitting a Pull Request to the project.&lt;/p&gt; 
&lt;h2&gt;Community support&lt;/h2&gt; 
&lt;p&gt;For general help using Strapi, please refer to &lt;a href=&quot;https://strapi.io/documentation/&quot;&gt;the official Strapi documentation&lt;/a&gt;. For additional help, you can use one of these channels to ask a question:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.strapi.io&quot;&gt;Slack&lt;/a&gt; (For live discussion with the Community and Strapi team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/strapi/strapi&quot;&gt;GitHub&lt;/a&gt; (Bug reports, Contributions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.strapi.io&quot;&gt;Community Forum&lt;/a&gt; (Questions and Discussions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://academy.strapi.io&quot;&gt;Academy&lt;/a&gt; (Learn the fundamentals of Strapi)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portal.productboard.com/strapi/tabs/2-under-consideration&quot;&gt;ProductBoard&lt;/a&gt; (Roadmap, Feature requests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/strapijs&quot;&gt;Twitter&lt;/a&gt; (Get the news fast)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/Strapi-616063331867161&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/strapi&quot;&gt;YouTube Channel&lt;/a&gt; (Learn from Video Tutorials)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migration&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href=&quot;https://strapi.io/documentation/developer-docs/latest/update-migration-guides/migration-guides.html&quot;&gt;migration guides&lt;/a&gt; on the documentation to keep your projects up-to-date.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://portal.productboard.com/strapi&quot;&gt;roadmap&lt;/a&gt; to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See our dedicated &lt;a href=&quot;https://github.com/strapi/documentation&quot;&gt;repository&lt;/a&gt; for the Strapi documentation, or view our documentation live:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/documentation/developer-docs/latest/getting-started/introduction.html&quot;&gt;Developer docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/documentation/user-docs/latest/getting-started/introduction.html&quot;&gt;User docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Try live demo&lt;/h2&gt; 
&lt;p&gt;See for yourself what&#39;s under the hood by getting access to a &lt;a href=&quot;https://strapi.io/demo&quot;&gt;hosted Strapi project&lt;/a&gt; with sample data.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/strapi/strapi/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for licensing information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>handsontable/handsontable</title>
      <link>https://github.com/handsontable/handsontable</link>
      <description>&lt;p&gt;JavaScript data grid with a spreadsheet look &amp; feel. Works for React, Angular, and Vue. Supported by the Handsontable team ‚ö°&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Handsontable is a JavaScript component that combines data grid features with spreadsheet-like UX. 
 &lt;!-- raw HTML omitted --&gt; It provides data binding, data validation, filtering, sorting, and CRUD operations.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.com/package/handsontable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/handsontable.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.com/package/handsontable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/handsontable.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codeship.com/projects/26649&quot;&gt;&lt;img src=&quot;https://app.codeship.com/projects/1ec34290-ed0a-0131-911c-1a47c8fbcce0/status?branch=master&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fhandsontable%2Fhandsontable?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fhandsontable%2Fhandsontable.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/handsontable/handsontable?targetFile=package.json&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/handsontable/handsontable/badge.svg?targetFile=package.json&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h4&gt;Get Started with Handsontable&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The most popular features of Handsontable:&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Multiple column sorting 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Non-contiguous selection 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Filtering data 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Export to file 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Validating data 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Conditional formatting 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Merging cells 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Freezing rows/columns 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Moving rows/columns 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Resizing rows/columns 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Hiding rows/columns 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Context menu 
 &lt;!-- raw HTML omitted --&gt; &amp;nbsp;&amp;nbsp;‚úì&amp;nbsp; Comments 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handsontable.com/docs&quot;&gt;Developer guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handsontable.com/docs/Core.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handsontable.com/docs/tutorial-release-notes.html&quot;&gt;Change log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handsontable.com/examples&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;h3&gt;Install with npm&lt;/h3&gt; 
&lt;p&gt;Run the following command in your terminal&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install handsontable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;a href=&quot;https://yarnpkg.com/package/handsontable&quot;&gt;Yarn&lt;/a&gt;, &lt;a href=&quot;https://www.nuget.org/packages/Handsontable&quot;&gt;NuGet&lt;/a&gt; or load the bundle directly from &lt;a href=&quot;https://jsdelivr.com/package/npm/handsontable&quot;&gt;jsDelivr&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Create a placeholder&lt;/h3&gt; 
&lt;p&gt;Create an HTML placeholder&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;example&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Import Handsontable and its stylesheet&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import Handsontable from &quot;handsontable&quot;;
import &#39;handsontable/dist/handsontable.full.css&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Initialize the grid&lt;/h3&gt; 
&lt;p&gt;Now turn your placeholder into a data grid with sample data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const data = [
  [&#39;&#39;, &#39;Tesla&#39;, &#39;Volvo&#39;, &#39;Toyota&#39;, &#39;Ford&#39;],
  [&#39;2019&#39;, 10, 11, 12, 13],
  [&#39;2020&#39;, 20, 11, 14, 13],
  [&#39;2021&#39;, 30, 15, 12, 13]
];

const container = document.getElementById(&#39;example&#39;);
const hot = new Handsontable(container, {
  data: data,
  rowHeaders: true,
  colHeaders: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;We provide support for developers working with commercial version via &lt;a href=&quot;https://handsontable.com/contact?category=technical_support&quot;&gt;contact form&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; or at support@handsontable.com.&lt;/p&gt; 
&lt;p&gt;If you use a non-commercial version then please ask your tagged question on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/handsontable&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Handsontable is a commercial software with two licenses available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Free for non-commercial purposes such as teaching, academic research, and evaluation. &lt;a href=&quot;https://github.com/handsontable/handsontable/blob/master/handsontable-non-commercial-license.pdf&quot;&gt;Read it here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Commercial license with support and maintenance included. See &lt;a href=&quot;https://handsontable.com/pricing&quot;&gt;pricing plans&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License key&lt;/h2&gt; 
&lt;p&gt;If you use Handsontable in a project that supports your commercial activity, then you must purchase the license key at &lt;a href=&quot;https://handsontable.com/pricing&quot;&gt;handsontable.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you use the free for non-commercial license of Handsontable, then pass the phrase &lt;code&gt;&#39;non-commercial-and-evaluation&#39;&lt;/code&gt;, as described in &lt;a href=&quot;https://handsontable.com/docs/tutorial-license-key.html&quot;&gt;this documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Proudly created and maintained by the &lt;a href=&quot;https://handsontable.com/team&quot;&gt;Handsontable Team&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AR-js-org/AR.js</title>
      <link>https://github.com/AR-js-org/AR.js</link>
      <description>&lt;p&gt;Image tracking, Location Based AR, Marker tracking. All on the Web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AR.js - Augmented Reality on the Web&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/jeromeetienne/AR.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/jeromeetienne/AR.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/AR-js/Lobby&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/AR-js/Lobby.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/nicolocarp&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/nicolocarp.svg?style=plastic&amp;amp;label=nicolocarpignoli-twitter&amp;amp;style=plastic&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jerome_etienne&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jerome_etienne.svg?style=plastic&amp;amp;label=jeromeetienne-twitter&amp;amp;style=plastic&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AR.js is a lightweight library for Augmented Reality on the Web, coming with features like Image Tracking, Location-based AR and Marker tracking.&lt;/p&gt; 
&lt;p&gt;Welcome to the official repository!&lt;/p&gt; 
&lt;p&gt;This project has been created by &lt;a href=&quot;https://github.com/jeromeetienne&quot;&gt;@jeromeetienne&lt;/a&gt;, previously managed by Nicol√≤ Carpignoli and it is now maintained by the AR.js org.&lt;/p&gt; 
&lt;p&gt;üöÄFor frequent updates on AR.js you can follow &lt;a href=&quot;https://twitter.com/ARjs_Library&quot;&gt;@the official Twitter account&lt;/a&gt; and Watch this repo!&lt;/p&gt; 
&lt;p&gt;Logo is courtesy of 
 &lt;!-- raw HTML omitted --&gt; Simon Poulter 
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h3&gt;‚ö°Ô∏èAR.js has now an official Documentation!‚ö°Ô∏è&lt;/h3&gt; 
&lt;h3&gt;Check it out: &lt;a href=&quot;https://ar-js-org.github.io/AR.js-Docs/&quot;&gt;AR.js Official Documentation&lt;/a&gt;.&lt;/h3&gt; 
&lt;p&gt;If you want to give a first look at AR.js potential, you can continue with this Readme.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;‚ö°Ô∏è AR.js is coming in two, different builds. They are both maintained. They are exclusive.&lt;/p&gt; 
&lt;p&gt;Please import the one you need for your project, not both:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AR.js with Image Tracking + Location Based AR:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;AFRAME version: https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;three.js version: https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar-nft.js&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AR.js with Marker Tracking + Location Based AR:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;AFRAME version: https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;three.js version: https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar.js&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also import a specific version replacing &lt;code&gt;master&lt;/code&gt; keyword with version tag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/3.3.1/aframe/build/aframe-ar-nft.js&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;h3&gt;üñº &lt;strong&gt;Image Tracking&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Please follow these simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the code below (or &lt;a href=&quot;https://ar-js-org.github.io/AR.js/aframe/examples/image-tracking/nft/&quot;&gt;open this live example&lt;/a&gt; and go directly to the last step)&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Open the website on your phone&lt;/li&gt; 
 &lt;li&gt;Scan &lt;a href=&quot;https://raw.githubusercontent.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex-image-big.jpeg&quot;&gt;this picture&lt;/a&gt; to see content through the camera.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/aframevr/aframe@1c2407b26c61958baa93967b5412487cd94b290b/dist/aframe-master.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
  .arjs-loader {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .arjs-loader div {
    text-align: center;
    font-size: 1.25em;
    color: white;
  }
&amp;lt;/style&amp;gt;

&amp;lt;body style=&quot;margin : 0px; overflow: hidden;&quot;&amp;gt;
  &amp;lt;!-- minimal loader shown until image descriptors are loaded --&amp;gt;
  &amp;lt;div class=&quot;arjs-loader&quot;&amp;gt;
    &amp;lt;div&amp;gt;Loading, please wait...&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;a-scene
    vr-mode-ui=&quot;enabled: false;&quot;
    renderer=&quot;logarithmicDepthBuffer: true;&quot;
    embedded
    arjs=&quot;trackingMethod: best; sourceType: webcam;debugUIEnabled: false;&quot;
  &amp;gt;
    &amp;lt;!-- we use cors proxy to avoid cross-origin problems --&amp;gt;
    &amp;lt;a-nft
      type=&quot;nft&quot;
      url=&quot;https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/trex-image/trex&quot;
      smooth=&quot;true&quot;
      smoothCount=&quot;10&quot;
      smoothTolerance=&quot;.01&quot;
      smoothThreshold=&quot;5&quot;
    &amp;gt;
      &amp;lt;a-entity
        gltf-model=&quot;https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf&quot;
        scale=&quot;5 5 5&quot;
        position=&quot;50 150 0&quot;
      &amp;gt;
      &amp;lt;/a-entity&amp;gt;
    &amp;lt;/a-nft&amp;gt;
    &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;
  &amp;lt;/a-scene&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üåçLocation Based Example&lt;/h3&gt; 
&lt;p&gt;Please follow these simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the following snippet, and change &lt;code&gt;add-your-latitude&lt;/code&gt; and &lt;code&gt;add-your-longitude&lt;/code&gt; with your latitude and longitude, without the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Activate GPS on your phone and navigate to the example URL&lt;/li&gt; 
 &lt;li&gt;Look around. You should see the text looking at you, appearing in the requested position, even if you look around and move.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&amp;gt;
    &amp;lt;title&amp;gt;GeoAR.js demo&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;https://aframe.io/releases/1.0.4/aframe.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://unpkg.com/aframe-look-at-component@0.8.0/dist/aframe-look-at-component.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body style=&quot;margin: 0; overflow: hidden;&quot;&amp;gt;
    &amp;lt;a-scene
      vr-mode-ui=&quot;enabled: false&quot;
      embedded
      arjs=&quot;sourceType: webcam; debugUIEnabled: false;&quot;
    &amp;gt;
      &amp;lt;a-text
        value=&quot;This content will always face you.&quot;
        look-at=&quot;[gps-camera]&quot;
        scale=&quot;120 120 120&quot;
        gps-entity-place=&quot;latitude: &amp;lt;add-your-latitude&amp;gt;; longitude: &amp;lt;add-your-longitude&amp;gt;;&quot;
      &amp;gt;&amp;lt;/a-text&amp;gt;
      &amp;lt;a-camera gps-camera rotation-reader&amp;gt; &amp;lt;/a-camera&amp;gt;
    &amp;lt;/a-scene&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üî≤ Marker Based Example&lt;/h3&gt; 
&lt;p&gt;Please follow this simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the code below (or &lt;a href=&quot;https://ar-js-org.github.io/AR.js/aframe/examples/marker-based/basic.html&quot;&gt;open this live example&lt;/a&gt; and go directly to the last step)&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Open the website on your phone&lt;/li&gt; 
 &lt;li&gt;Scan &lt;a href=&quot;https://raw.githubusercontent.com/AR-js-org/AR.js/master/data/images/hiro.png&quot;&gt;this picture&lt;/a&gt; to see content through the camera.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;script src=&quot;https://aframe.io/releases/1.0.0/aframe.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- we import arjs version without NFT but with marker + location based support --&amp;gt;
    &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;body style=&quot;margin : 0px; overflow: hidden;&quot;&amp;gt;
        &amp;lt;a-scene embedded arjs&amp;gt;
        &amp;lt;a-marker preset=&quot;hiro&quot;&amp;gt;
            &amp;lt;a-entity
            position=&quot;0 -1 0&quot;
            scale=&quot;0.05 0.05 0.05&quot;
            gltf-model=&quot;https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf&quot;
            &amp;gt;&amp;lt;/a-entity&amp;gt;
        &amp;lt;/a-marker&amp;gt;
        &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;
        &amp;lt;/a-scene&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more on the &lt;a href=&quot;https://ar-js-org.github.io/AR.js-Docs/&quot;&gt;AR.js Official Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting, feature requests, community&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You can find a lot of help on the old &lt;a href=&quot;https://github.com/jeromeetienne/AR.js/issues&quot;&gt;AR.js repositories issues&lt;/a&gt;. Please search on open/closed issues, you may find interesting stuff.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;From opening a bug report to creating a pull request: every contribution is appreciated and welcome. If you&#39;re planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.&lt;/p&gt; 
&lt;h3&gt;Issues&lt;/h3&gt; 
&lt;p&gt;If you are having configuration or setup problems, please post a question to &lt;a href=&quot;https://stackoverflow.com/search?q=ar.js&quot;&gt;StackOverflow&lt;/a&gt;. You can also address the question to us in our &lt;a href=&quot;https://gitter.im/AR-js/Lobby&quot;&gt;Gitter chatroom&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you have discovered a bug or have a feature suggestion, feel free to create an issue on Github.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Submitting Changes&lt;/h3&gt; 
&lt;p&gt;After getting some feedback, push to your fork and submit a pull request. We may suggest some changes or improvements or alternatives, but for small changes your pull request should be accepted quickly.&lt;/p&gt; 
&lt;p&gt;Some things that will increase the chance that your pull request is accepted:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow the existing coding style&lt;/li&gt; 
 &lt;li&gt;Write a &lt;a href=&quot;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;good commit message&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;It is &lt;strong&gt;all open-source&lt;/strong&gt;! jsartoolkit5 is under LGPLv3 license and additional permission. And All my code in AR.js repository is under MIT license. :)&lt;/p&gt; 
&lt;p&gt;For legal details, be sure to check &lt;a href=&quot;https://github.com/artoolkitx/jsartoolkit5/blob/master/LICENSE.txt&quot;&gt;jsartoolkit5 license&lt;/a&gt; and &lt;a href=&quot;https://github.com/AR-js-org/AR.js/blob/master/LICENSE&quot;&gt;AR.js license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Full Changelog: &lt;a href=&quot;https://github.com/AR-js-org/AR.js/blob/master/CHANGELOG.md&quot;&gt;AR.js changelog&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zero205/JD</title>
      <link>https://github.com/zero205/JD</link>
      <description>&lt;p&gt;‰ΩéË∞ÉËá™Áî®ÔºåÂ∞ΩÈáèÁ¨¨‰∏ÄÊó∂Èó¥ÂêåÊ≠•Êõ¥Êñ∞lxkÂ§ß‰Ω¨ËÑöÊú¨„ÄÇsync repoÔºöhttps://gitee.com/lxk0301/jd_docker&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;‰ΩøÁî®ÊïôÁ®ãÔºà‰∏çË¶ÅforkÔºåËßâÂæóÊúâÁî®ÁöÑÂèØ‰ª•Â∏ÆÂøôÁÇπ‰∏™star :blush:Ôºâ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;1.ÂàõÂª∫Êñ∞‰ªìÂ∫ì&lt;a href=&quot;https://github.com/new&quot;&gt;ÁÇπÂáªÂàõÂª∫Ëá™Â∑±ÁöÑ‰ªìÂ∫ì&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2.Â°´ÂÖ•&lt;code&gt;Repository name&lt;/code&gt;ÂêéÁÇπÂáªÊúÄ‰∏ãÊñπÁöÑ&lt;code&gt;Create repository&lt;/code&gt; ÁÇπ‰∏ãÈù¢Import a repository.&lt;/li&gt; 
 &lt;li&gt;3.ÁÑ∂ÂêéÂú®‰∫éYour old repository‚Äôs clone URL Â°´ÂÖ• https://github.com/zero205/JD&lt;/li&gt; 
 &lt;li&gt;4.ÊåâÊèêÁ§∫ÂÆåÊàêÂ§çÂà∂ÂêéÂÜçÂú®&lt;code&gt;Settings&lt;/code&gt;-&lt;code&gt;Secrets&lt;/code&gt;ÈáåÈù¢Ê∑ªÂä†&lt;code&gt;JD_COOKIE&lt;/code&gt;ÔºåÂ§öÊù° cookie Áî®&lt;code&gt;&amp;amp;&lt;/code&gt;ÈöîÂºÄÔºåÊîØÊåÅÊó†Êï∞Êù° cookie&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂÖ∑‰ΩìÂ¶Ç‰ΩïËé∑ÂèñCookieÂèØÂèÇËÄÉ &amp;gt; &lt;a href=&quot;https://github.com/zero205/JD/blob/main/backUp/GetJdCookie.md&quot;&gt;Ëé∑Âèñ‰∫¨‰∏úCookiesÊïôÁ®ã1&lt;/a&gt; ‰πüÂèØÂèÇËÄÉ &amp;gt; &lt;a href=&quot;https://github.com/zero205/JD/blob/main/backUp/GetJdCookie2.md&quot;&gt;Ëé∑Âèñ‰∫¨‰∏úCookiesÊïôÁ®ã2&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;5.ÊúÄÂêéÁÇπÂáª‰∏Ä‰∏ãÂè≥‰∏äËßíÁöÑ starÔºàfork Â∑¶ËæπÈÇ£‰∏™ÔºâÔºåËÆ© workflow ËøêË°å‰∏ÄÊ¨°„ÄÇ 
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Ê≥®ÊÑèÔºöËØ•ÊñπÊ≥ïÈúÄË¶ÅËá™Ë°åÂÆöÊúüÊõøÊç¢ÊàñÊõ¥Êñ∞ËÑöÊú¨Ôºå‰∏ç‰ºöËá™Âä®ÂêåÊ≠•ÔºåÂº∫ÁÉàÂª∫ËÆÆÂÜçÊåâ‰∏ãÈù¢ÊïôÁ®ãËøõË°åËá™Âä®ÂêåÊ≠•‰ªìÂ∫ìËÑöÊú¨„ÄÇ&lt;/h4&gt; 
&lt;h3&gt;Ëá™Âä®ÂêåÊ≠•ËÑöÊú¨ÊïôÁ®ãÔºöÂú®ÂÆåÊàê‰∏äÈù¢Ê≠•È™§ÂêéÔºåÂÜç&lt;a href=&quot;https://github.com/zero205/JD/blob/main/backUp/reposync.md&quot;&gt;ÁÇπÊ≠§ÊåâÁÖßËøô‰∏™ÊïôÁ®ãËøõË°åËá™Âä®ÂêåÊ≠•ËÑöÊú¨&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Â§ÑÂÄüÁî®&lt;a href=&quot;https://github.com/RayWangQvQ&quot;&gt;RayWangQvQ&lt;/a&gt;Â§ß‰Ω¨ÁöÑÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RayWangQvQ/BiliBiliTool.Docs/blob/main/questions.md&quot;&gt;ÁÇπÂáªÊü•Áúã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÁâπÂà´Â£∞Êòé:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨‰ªìÂ∫ìÂèëÂ∏ÉÁöÑScriptÈ°πÁõÆ‰∏≠Ê∂âÂèäÁöÑ‰ªª‰ΩïËß£ÈîÅÂíåËß£ÂØÜÂàÜÊûêËÑöÊú¨Ôºå‰ªÖÁî®‰∫éÊµãËØïÂíåÂ≠¶‰π†Á†îÁ©∂ÔºåÁ¶ÅÊ≠¢Áî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºå‰∏çËÉΩ‰øùËØÅÂÖ∂ÂêàÊ≥ïÊÄßÔºåÂáÜÁ°ÆÊÄßÔºåÂÆåÊï¥ÊÄßÂíåÊúâÊïàÊÄßÔºåËØ∑Ê†πÊçÆÊÉÖÂÜµËá™Ë°åÂà§Êñ≠.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨È°πÁõÆÂÜÖÊâÄÊúâËµÑÊ∫êÊñá‰ª∂ÔºåÁ¶ÅÊ≠¢‰ªª‰ΩïÂÖ¨‰ºóÂè∑„ÄÅËá™Â™í‰ΩìËøõË°å‰ªª‰ΩïÂΩ¢ÂºèÁöÑËΩ¨ËΩΩ„ÄÅÂèëÂ∏É„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;lxk0301ÂØπ‰ªª‰ΩïËÑöÊú¨ÈóÆÈ¢òÊ¶Ç‰∏çË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁî±‰ªª‰ΩïËÑöÊú¨ÈîôËØØÂØºËá¥ÁöÑ‰ªª‰ΩïÊçüÂ§±ÊàñÊçüÂÆ≥.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Èó¥Êé•‰ΩøÁî®ËÑöÊú¨ÁöÑ‰ªª‰ΩïÁî®Êà∑ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂª∫Á´ãVPSÊàñÂú®Êüê‰∫õË°å‰∏∫ËøùÂèçÂõΩÂÆ∂/Âú∞Âå∫Ê≥ïÂæãÊàñÁõ∏ÂÖ≥Ê≥ïËßÑÁöÑÊÉÖÂÜµ‰∏ãËøõË°å‰º†Êí≠, lxk0301 ÂØπ‰∫éÁî±Ê≠§ÂºïËµ∑ÁöÑ‰ªª‰ΩïÈöêÁßÅÊ≥ÑÊºèÊàñÂÖ∂‰ªñÂêéÊûúÊ¶Ç‰∏çË¥üË¥£.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑ÂãøÂ∞ÜScriptÈ°πÁõÆÁöÑ‰ªª‰ΩïÂÜÖÂÆπÁî®‰∫éÂïÜ‰∏öÊàñÈùûÊ≥ïÁõÆÁöÑÔºåÂê¶ÂàôÂêéÊûúËá™Ë¥ü.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â¶ÇÊûú‰ªª‰ΩïÂçï‰ΩçÊàñ‰∏™‰∫∫ËÆ§‰∏∫ËØ•È°πÁõÆÁöÑËÑöÊú¨ÂèØËÉΩÊ∂âÂ´å‰æµÁäØÂÖ∂ÊùÉÂà©ÔºåÂàôÂ∫îÂèäÊó∂ÈÄöÁü•Âπ∂Êèê‰æõË∫´‰ªΩËØÅÊòéÔºåÊâÄÊúâÊùÉËØÅÊòéÔºåÊàë‰ª¨Â∞ÜÂú®Êî∂Âà∞ËÆ§ËØÅÊñá‰ª∂ÂêéÂà†Èô§Áõ∏ÂÖ≥ËÑöÊú¨.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ªª‰Ωï‰ª•‰ªª‰ΩïÊñπÂºèÊü•ÁúãÊ≠§È°πÁõÆÁöÑ‰∫∫ÊàñÁõ¥Êé•ÊàñÈó¥Êé•‰ΩøÁî®ËØ•ScriptÈ°πÁõÆÁöÑ‰ªª‰ΩïËÑöÊú¨ÁöÑ‰ΩøÁî®ËÄÖÈÉΩÂ∫î‰ªîÁªÜÈòÖËØªÊ≠§Â£∞Êòé„ÄÇlxk0301 ‰øùÁïôÈöèÊó∂Êõ¥ÊîπÊàñË°•ÂÖÖÊ≠§ÂÖçË¥£Â£∞ÊòéÁöÑÊùÉÂà©„ÄÇ‰∏ÄÊó¶‰ΩøÁî®Âπ∂Â§çÂà∂‰∫Ü‰ªª‰ΩïÁõ∏ÂÖ≥ËÑöÊú¨ÊàñScriptÈ°πÁõÆÁöÑËßÑÂàôÔºåÂàôËßÜ‰∏∫ÊÇ®Â∑≤Êé•ÂèóÊ≠§ÂÖçË¥£Â£∞Êòé.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;ÊÇ®ÂøÖÈ°ªÂú®‰∏ãËΩΩÂêéÁöÑ24Â∞èÊó∂ÂÜÖ‰ªéËÆ°ÁÆóÊú∫ÊàñÊâãÊú∫‰∏≠ÂÆåÂÖ®Âà†Èô§‰ª•‰∏äÂÜÖÂÆπ.&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;ÊÇ®‰ΩøÁî®ÊàñËÄÖÂ§çÂà∂‰∫ÜÊú¨‰ªìÂ∫ì‰∏îÊú¨‰∫∫Âà∂‰ΩúÁöÑ‰ªª‰ΩïËÑöÊú¨ÔºåÂàôËßÜ‰∏∫&lt;code&gt;Â∑≤Êé•Âèó&lt;/code&gt;Ê≠§Â£∞ÊòéÔºåËØ∑‰ªîÁªÜÈòÖËØª&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ScriptËÑöÊú¨ÂàóË°®&lt;/h2&gt; 
&lt;h4&gt;ËØ¥Êòé&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;ÂÖ∂‰∏≠ &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_bean_sign.js&quot;&gt;jd_bean_sign.js&lt;/a&gt; ÂèØN‰∏™‰∫¨‰∏úË¥¶Âè∑ÔºåNode.js‰∏ìÁî®ÔºåÊ†∏ÂøÉËÑöÊú¨ÊòØJD_DailyBonus.jsÔºå IOSËΩØ‰ª∂Áî®Êà∑ËØ∑‰ΩøÁî®NobyDaÁöÑ &lt;a href=&quot;https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js&quot;&gt;JD_DailyBonus.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ª•Â≠óÊØçÊéíÂ∫è„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;| Â∫èÂè∑ | Êñá‰ª∂ | ÂêçÁß∞ | Ê¥ªÂä®ÂÖ•Âè£ | | :-: | - | - | - | |1|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_bean_change.js&quot;&gt;jd_bean_change.js&lt;/a&gt;|‰∫¨Ë±ÜÂèòÂä®ÈÄöÁü•|| |2|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_bean_home.js&quot;&gt;jd_bean_home.js&lt;/a&gt;|È¢Ü‰∫¨Ë±ÜÈ¢ùÂ§ñÂ•ñÂä±|‰∫¨‰∏úAPPÈ¶ñÈ°µ-È¢Ü‰∫¨Ë±Ü| |3|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_bean_sign.js&quot;&gt;jd_bean_sign.js&lt;/a&gt;|‰∫¨‰∏úÂ§öÂêà‰∏ÄÁ≠æÂà∞|ÂêÑÂ§ÑÁöÑÁ≠æÂà∞Ê±áÊÄª| |4|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_beauty.js&quot;&gt;jd_beauty.js&lt;/a&gt;|Áæé‰∏ΩÁ†îÁ©∂Èô¢|‰∫¨‰∏úappÈ¶ñÈ°µ-ÁæéÂ¶ÜÈ¶Ü-Â∫ïÈÉ®‰∏≠Èó¥ÊåâÈíÆ| |5|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_blueCoin.js&quot;&gt;jd_blueCoin.js&lt;/a&gt;|‰∏ú‰∏úË∂ÖÂ∏ÇÂÖëÊç¢Â•ñÂìÅ|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-‰∏ú‰∏úË∂ÖÂ∏Ç| |6|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_bookshop.js&quot;&gt;jd_bookshop.js&lt;/a&gt;|Âè£Ë¢ã‰π¶Â∫ó|‰∫¨‰∏úappÈ¶ñÈ°µ-‰∫¨‰∏úÂõæ‰π¶-Âè≥‰æßÂè£Ë¢ã‰π¶Â∫ó| |7|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_car.js&quot;&gt;jd_car.js&lt;/a&gt;|‰∫¨‰∏úÊ±ΩËΩ¶|‰∫¨‰∏úAPPÈ¶ñÈ°µ-‰∫¨‰∏úÊ±ΩËΩ¶-Â±èÂπïÂè≥‰∏≠ÈÉ®ÔºåËΩ¶‰∏ªÁ¶èÂà©| |8|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_car_exchange.js&quot;&gt;jd_car_exchange.js&lt;/a&gt;|‰∫¨‰∏úÊ±ΩËΩ¶ÂÖëÊç¢|‰∫¨‰∏úAPPÈ¶ñÈ°µ-‰∫¨‰∏úÊ±ΩËΩ¶-Â±èÂπïÂè≥‰∏≠ÈÉ®ÔºåËΩ¶‰∏ªÁ¶èÂà©| |9|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_cash.js&quot;&gt;jd_cash.js&lt;/a&gt;|Á≠æÂà∞È¢ÜÁé∞Èáë|‰∫¨‰∏úAPPÊêúÁ¥¢È¢ÜÁé∞ÈáëËøõÂÖ•| |10|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_cfd.js&quot;&gt;jd_cfd.js&lt;/a&gt;|‰∫¨ÂñúË¥¢ÂØåÂ≤õ|‰∫¨ÂñúAPP-ÊàëÁöÑ-‰∫¨ÂñúË¥¢ÂØåÂ≤õ| |11|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_club_lottery.js&quot;&gt;jd_club_lottery.js&lt;/a&gt;|Êëá‰∫¨Ë±Ü|‰∫¨‰∏úAPPÈ¶ñÈ°µ-È¢Ü‰∫¨Ë±Ü-Êëá‰∫¨Ë±Ü/‰∫¨‰∏úAPPÈ¶ñÈ°µ-ÊàëÁöÑ-‰∫¨‰∏ú‰ºöÂëò-Êëá‰∫¨Ë±Ü| |12|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_crazy_joy.js&quot;&gt;jd_crazy_joy.js&lt;/a&gt;|crazyJoy‰ªªÂä°|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÁñØÁãÇÁöÑJOY| |13|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_crazy_joy_bonus.js&quot;&gt;jd_crazy_joy_bonus.js&lt;/a&gt;|ÁõëÊéßcrazyJoyÂàÜÁ∫¢|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÁñØÁãÇÁöÑJOY| |14|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_crazy_joy_coin.js&quot;&gt;jd_crazy_joy_coin.js&lt;/a&gt;|crazyJoyÊåÇÊú∫|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÁñØÁãÇÁöÑJOY| |15|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_daily_egg.js&quot;&gt;jd_daily_egg.js&lt;/a&gt;|Â§©Â§©ÊèêÈπÖ|‰∫¨‰∏úÈáëËûç-Â§©Â§©ÊèêÈπÖ| |16|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_delCoupon.js&quot;&gt;jd_delCoupon.js&lt;/a&gt;|Âà†Èô§‰ºòÊÉ†Âà∏|‰∫¨‰∏úAPPÊàëÁöÑ-‰ºòÊÉ†Âà∏| |17|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_dreamFactory.js&quot;&gt;jd_dreamFactory.js&lt;/a&gt;|‰∫¨ÂñúÂ∑•ÂéÇ|‰∫¨‰∏úAPP-Ê∏∏Êàè‰∏é‰∫íÂä®-Êü•ÁúãÊõ¥Â§ö-‰∫¨ÂñúÂ∑•ÂéÇ| |18|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_family.js&quot;&gt;jd_family.js&lt;/a&gt;|‰∫¨‰∏úÂÆ∂Â∫≠Âè∑|Áé©‰∏ÄÁé©-ÂÆ∂Â∫≠Âè∑| |19|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_fruit.js&quot;&gt;jd_fruit.js&lt;/a&gt;|‰∏ú‰∏úÂÜúÂú∫|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-‰∏ú‰∏úÂÜúÂú∫| |20|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_get_share_code.js&quot;&gt;jd_get_share_code.js&lt;/a&gt;|Ëé∑Âèñ‰∫íÂä©Á†Å|| |21|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_global.js&quot;&gt;jd_global.js&lt;/a&gt;|ÁéØÁêÉÊåëÊàòËµõ|‰∫¨‰∏úappÊêúÁ¥¢‰∫¨‰∏úÂõΩÈôÖ-ÁéØÁêÉÊåëÊàòËµõ| |22|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_global_mh.js&quot;&gt;jd_global_mh.js&lt;/a&gt;|‰∫¨‰∏úÂõΩÈôÖÁõ≤Áõí|‰∫¨‰∏úappÈ¶ñÈ°µÊµÆÂä®Á™óÂè£| |23|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_jdfactory.js&quot;&gt;jd_jdfactory.js&lt;/a&gt;|‰∏ú‰∏úÂ∑•ÂéÇ|‰∫¨‰∏úAPPÈ¶ñÈ°µ-Êï∞Á†ÅÁîµÂô®-‰∏ú‰∏úÂ∑•ÂéÇ| |24|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_jdzz.js&quot;&gt;jd_jdzz.js&lt;/a&gt;|‰∫¨‰∏úËµöËµö|‰∫¨‰∏úËµöËµöÂ∞èÁ®ãÂ∫è| |25|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy.js&quot;&gt;jd_joy.js&lt;/a&gt;|ÂÆ†Ê±™Ê±™|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |26|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy_feedPets.js&quot;&gt;jd_joy_feedPets.js&lt;/a&gt;|ÂÆ†Ê±™Ê±™üêïÂñÇÈ£ü|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |27|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy_help.js&quot;&gt;jd_joy_help.js&lt;/a&gt;|ÂÆ†Ê±™Ê±™Âº∫Âà∂‰∏∫Âà´‰∫∫Âä©Âäõ|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |28|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy_reward.js&quot;&gt;jd_joy_reward.js&lt;/a&gt;|ÂÆ†Ê±™Ê±™ÁßØÂàÜÂÖëÊç¢Â•ñÂìÅ|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |29|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy_run.js&quot;&gt;jd_joy_run.js&lt;/a&gt;|jsjiami.com.v6|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |30|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_joy_steal.js&quot;&gt;jd_joy_steal.js&lt;/a&gt;|ÂÆ†Ê±™Ê±™ÂÅ∑Â•ΩÂèãÁßØÂàÜ‰∏éÁãóÁ≤Æ|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÂÆ†Ê±™Ê±™| |31|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_jxd.js&quot;&gt;jd_jxd.js&lt;/a&gt;|‰∫¨Â∞èÂÖë|ÂæÆ‰ø°ÊêúÁ¥¢Â∞èÁ®ãÂ∫è-‰∫¨Â∞èÂÖë| |32|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_jxnc.js&quot;&gt;jd_jxnc.js&lt;/a&gt;|‰∫¨ÂñúÂÜúÂú∫|‰∫¨ÂñúAPPÊàëÁöÑ-‰∫¨ÂñúÂÜúÂú∫| |33|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_kd.js&quot;&gt;jd_kd.js&lt;/a&gt;|‰∫¨‰∏úÂø´ÈÄíÁ≠æÂà∞|&lt;a href=&quot;https://jingcai-h5.jd.com/#/&quot;&gt;Ê¥ªÂä®Âú∞ÂùÄ&lt;/a&gt;| |34|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_live.js&quot;&gt;jd_live.js&lt;/a&gt;|‰∫¨‰∏úÁõ¥Êí≠|‰∫¨‰∏úAPPÈ¶ñÈ°µ-‰∫¨‰∏úÁõ¥Êí≠| |35|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_lotteryMachine.js&quot;&gt;jd_lotteryMachine.js&lt;/a&gt;|‰∫¨‰∏úÊäΩÂ•ñÊú∫|‰∫¨‰∏úAPP‰∏≠ÂêÑÁßçÊäΩÂ•ñÊ¥ªÂä®ÁöÑÊ±áÊÄª| |36|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_moneyTree.js&quot;&gt;jd_moneyTree.js&lt;/a&gt;|‰∫¨‰∏úÊëáÈí±Ê†ë|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÊëáÈí±Ê†ë| |37|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_ms.js&quot;&gt;jd_ms.js&lt;/a&gt;|‰∫¨‰∏úÁßíÁßíÂ∏Å|‰∫¨‰∏úapp-‰∫¨‰∏úÁßíÊùÄ-Á≠æÂà∞È¢ÜÁ∫¢ÂåÖ| |38|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_necklace.js&quot;&gt;jd_necklace.js&lt;/a&gt;|ÁÇπÁÇπÂà∏|‰∫¨‰∏úAPP-È¢ÜÂà∏‰∏≠ÂøÉ/Âà∏Âêé9.9-È¢ÜÁÇπÁÇπÂà∏| |39|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_nzmh.js&quot;&gt;jd_nzmh.js&lt;/a&gt;|Â•≥Ë£ÖÁõ≤ÁõíÊäΩ‰∫¨Ë±Ü|‰∫¨‰∏úapp-Â•≥Ë£ÖÈ¶Ü-Ëµ¢‰∫¨Ë±Ü| |40|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_pet.js&quot;&gt;jd_pet.js&lt;/a&gt;|‰∏ú‰∏úËêåÂÆ†|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-‰∏ú‰∏úËêåÂÆ†| |41|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_pigPet.js&quot;&gt;jd_pigPet.js&lt;/a&gt;|ÈáëËûçÂÖªÁå™|‰∫¨‰∏úÈáëËûçÂÖªÁå™Áå™| |42|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_plantBean.js&quot;&gt;jd_plantBean.js&lt;/a&gt;|‰∫¨‰∏úÁßçË±ÜÂæóË±Ü|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-ÁßçË±ÜÂæóË±Ü| |43|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_price.js&quot;&gt;jd_price.js&lt;/a&gt;|‰∫¨‰∏ú‰øù‰ª∑|‰∫¨‰∏ú‰øù‰ª∑| |44|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_rankingList.js&quot;&gt;jd_rankingList.js&lt;/a&gt;|‰∫¨‰∏úÊéíË°åÊ¶ú|‰∫¨‰∏úAPPÈ¶ñÈ°µ-Êõ¥Â§öÈ¢ëÈÅì-ÊéíË°åÊ¶ú-ÊÇ¨ÊµÆÊåâÈíÆ| |45|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_redPacket.js&quot;&gt;jd_redPacket.js&lt;/a&gt;|‰∫¨‰∏úÂÖ®Ê∞ëÂºÄÁ∫¢ÂåÖ|‰∫¨‰∏úAPPÈ¶ñÈ°µ-È¢ÜÂà∏-Èî¶È≤§Á∫¢ÂåÖ| |46|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_sgmh.js&quot;&gt;jd_sgmh.js&lt;/a&gt;|Èó™Ë¥≠Áõ≤Áõí|‰∫¨‰∏úAPPÈ¶ñÈ°µ-Èó™Ë¥≠-Èó™Ë¥≠Áõ≤Áõí| |47|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_shop.js&quot;&gt;jd_shop.js&lt;/a&gt;|ËøõÂ∫óÈ¢ÜË±Ü|‰∫¨‰∏úAPPÈ¶ñÈ°µ-È¢Ü‰∫¨Ë±Ü-ËøõÂ∫óÈ¢ÜË±Ü| |48|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_small_home.js&quot;&gt;jd_small_home.js&lt;/a&gt;|‰∏ú‰∏úÂ∞èÁ™ù|‰∫¨‰∏úAPPÊàëÁöÑ-Ê∏∏Êàè‰∏éÊõ¥Â§ö-‰∏ú‰∏úÂ∞èÁ™ù| |49|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_speed.js&quot;&gt;jd_speed.js&lt;/a&gt;|‚úàÔ∏èÂ§©Â§©Âä†ÈÄü|‰∫¨‰∏úAPPÊàëÁöÑ-Êõ¥Â§öÂ∑•ÂÖ∑-Â§©Â§©Âä†ÈÄü| |50|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_speed_invite.js&quot;&gt;jd_speed_invite.js&lt;/a&gt;|Ë∂ÖÁ∫ßÁõ¥Êí≠Èó¥‰ªªÂä°Ëµ¢‰∫¨Ë±Ü|| |51|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_speed_redpocke.js&quot;&gt;jd_speed_redpocke.js&lt;/a&gt;|‰∫¨‰∏úÊûÅÈÄüÁâàÁ∫¢ÂåÖ|‰∫¨‰∏úÊûÅÈÄüÁâà-È¢ÜÁ∫¢ÂåÖ| |52|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_speed_sign.js&quot;&gt;jd_speed_sign.js&lt;/a&gt;|‰∫¨‰∏úÊûÅÈÄüÁâà|‰∫¨‰∏úÊûÅÈÄüÁâàapp-Áé∞ÈáëÁ≠æÂà∞| |53|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_superMarket.js&quot;&gt;jd_superMarket.js&lt;/a&gt;|‰∏ú‰∏úË∂ÖÂ∏Ç|‰∫¨‰∏úAPPÈ¶ñÈ°µ-‰∫¨‰∏úË∂ÖÂ∏Ç-Â∫ïÈÉ®‰∏ú‰∏úË∂ÖÂ∏Ç| |54|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_syj.js&quot;&gt;jd_syj.js&lt;/a&gt;|Ëµö‰∫¨Ë±Ü|Ëµö‰∫¨Ë±Ü(ÂæÆ‰ø°Â∞èÁ®ãÂ∫è)-Ëµö‰∫¨Ë±Ü-Á≠æÂà∞È¢Ü‰∫¨Ë±Ü| |55|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_unsubscribe.js&quot;&gt;jd_unsubscribe.js&lt;/a&gt;|ÂèñÂÖ≥‰∫¨‰∏úÂ∫óÈì∫ÂíåÂïÜÂìÅ|| |56|&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jx_sign.js&quot;&gt;jx_sign.js&lt;/a&gt;|‰∫¨ÂñúÁ≠æÂà∞||&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Êê¨ËøêËÑöÊú¨&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;„Äê &lt;a href=&quot;https://github.com/yangtingxiao&quot;&gt;@yangtingxiao&lt;/a&gt; „Äë ‰∫¨‰∏úÊäΩÂ•ñÊú∫(&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_lotteryMachine.js&quot;&gt;jd_lotteryMachine.js&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;„Äê &lt;a href=&quot;https://github.com/yangtingxiao&quot;&gt;@yangtingxiao&lt;/a&gt; „Äë ‰∫¨‰∏úÊéíË°åÊ¶ú(&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_rankingList.js&quot;&gt;jd_rankingList.js&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;ËÑöÊú¨ÂÖºÂÆπ: &lt;a href=&quot;https://apps.apple.com/us/app/quantumult-x/id1443988620&quot;&gt;QuantumultX&lt;/a&gt;, &lt;a href=&quot;https://apps.apple.com/us/app/surge-4/id1442620678&quot;&gt;Surge&lt;/a&gt;, &lt;a href=&quot;https://apps.apple.com/us/app/loon/id1373567447&quot;&gt;Loon&lt;/a&gt;, Â∞èÁÅ´ÁÆ≠, JSBox, Node.js&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ÈÇÄËØ∑Á†Å‰∫íÂä©&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/jd_get_share_code.js&quot;&gt;Ëé∑ÂèñÂêÑÁ±ªÊ¥ªÂä®‰∫íÂä©Á†ÅËÑöÊú¨ jd_get_share_code.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD/main/githubAction.md#%E4%BA%92%E5%8A%A9%E7%A0%81%E7%B1%BB%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&quot;&gt;ÈÇÄËØ∑Á†Å‰ΩøÁî®ËßÑËåÉ&lt;/a&gt;(‰ªÖÈôê‰∫ëÁ´Ø)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;È£üÁî®ÊñπÊ≥ï&lt;/h2&gt; 
&lt;h3&gt;1. Docker&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD/main/docker&quot;&gt;ÈÉ®ÁΩ≤ÊñπÊ≥ï&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD/main/githubAction.md&quot;&gt;ÁéØÂ¢ÉÂèòÈáèÈõÜÂêà&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ãÂèØÂèÇËÄÉÔºö&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD/main/backUp/GetJdCookie.md&quot;&gt;ÊµèËßàÂô®Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD/main/backUp/GetJdCookie2.md&quot;&gt;Êèí‰ª∂Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;‰∫¨‰∏úAPPÊâ´Á†ÅËé∑Âèñcookie(Ê≠§ÁßçÊñπÂºèËé∑ÂèñÁöÑcookieÊúâÊïàÊúü‰∏∫30Â§©)(ÊâßË°å&lt;code&gt;node getJDCookie.js&lt;/code&gt;Âç≥ÂèØ)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. iOS‰ª£ÁêÜËΩØ‰ª∂ÔºàQuantumultX, Surge, Loon, Â∞èÁÅ´ÁÆ≠Ôºâ&lt;/h3&gt; 
&lt;h5&gt;BoxJsËÆ¢ÈòÖÂú∞ÂùÄÔºö&lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/lxk0301.boxjs.json&quot;&gt;lxk0301.boxjs.json&lt;/a&gt;&lt;/h5&gt; 
&lt;h5&gt;Ëé∑Âèñ‰∫¨‰∏úcookie &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/JD_extra_cookie.js&quot;&gt;JD_extra_cookie.js&lt;/a&gt;&lt;/h5&gt; 
&lt;h5&gt;ËÆ¢ÈòÖÈìæÊé•Ôºö&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;SurgeÔºöTask&amp;amp;CookiesËÑöÊú¨Ê®°ÂùóÂú∞ÂùÄ: &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/Surge/lxk0301_Task.sgmodule.sgmodule&quot;&gt;lxk0301_Task.sgmodule.sgmodule&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;LoonÔºöTask&amp;amp;CookiesËÑöÊú¨ËÆ¢ÈòÖÈìæÊé•: &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/Loon/lxk0301_LoonTask.conf&quot;&gt;lxk0301_LoonTask.conf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;QuantumultX TaskËÑöÊú¨ËÆ¢ÈòÖÈìæÊé•: &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/QuantumultX/lxk0301_gallery.json&quot;&gt;lxk0301_gallery.json&lt;/a&gt;Ôºåcookie(ÈáçÂÜô)ËÆ¢ÈòÖÈìæÊé•: &lt;a href=&quot;https://gitee.com/lxk0301/jd_scripts/raw/master/QuantumultX/lxk0301_cookies.conf&quot;&gt;lxk0301_cookies.conf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÈÄöÁü•È¢ëÈÅì &lt;a href=&quot;https://t.me/jdfruit&quot;&gt;https://t.me/jdfruit&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;ËµûËµèÁ†Å(ÂºÄÂèëÁª¥Êä§‰∏çÊòì,ËØ∑ËµèÊùØËå∂Ê∞¥Ë¥π)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;ÁâπÂà´ÊÑüË∞¢(ÊéíÂêç‰∏çÂàÜÂÖàÂêé)Ôºö&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>eligrey/FileSaver.js</title>
      <link>https://github.com/eligrey/FileSaver.js</link>
      <description>&lt;p&gt;An HTML5 saveAs() FileSaver implementation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;If you need to save really large files bigger than the blob&#39;s size limitation or don&#39;t have enough RAM, then have a look at the more advanced &lt;a href=&quot;https://github.com/jimmywarting/StreamSaver.js&quot;&gt;StreamSaver.js&lt;/a&gt; that can save data directly to the hard drive asynchronously with the power of the new streams API. That will have support for progress, cancelation and knowing when it&#39;s done writing&lt;/p&gt; 
&lt;h1&gt;FileSaver.js&lt;/h1&gt; 
&lt;p&gt;FileSaver.js is the solution to saving files on the client-side, and is perfect for web apps that generates files on the client, However if the file is coming from the server we recommend you to first try to use &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-http-header&quot;&gt;Content-Disposition&lt;/a&gt; attachment response header as it has more cross-browser compatiblity.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;code&gt;canvas.toBlob()&lt;/code&gt; for saving canvases? Check out &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; for a cross-browser implementation.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;| Browser | Constructs as | Filenames | Max Blob Size | Dependencies | | -------------- | ------------- | ------------ | ------------- | ------------ | | Firefox 20+ | Blob | Yes | 800 MiB | None | | Firefox &amp;lt; 20 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Chrome | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;2GB&lt;/a&gt; | None | | Chrome for Android | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;RAM/5&lt;/a&gt; | None | | Edge | Blob | Yes | ? | None | | IE 10+ | Blob | Yes | 600 MiB | None | | Opera 15+ | Blob | Yes | 500 MiB | None | | Opera &amp;lt; 15 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 6.1+* | Blob | No | ? | None | | Safari &amp;lt; 6 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 10.1+ &amp;nbsp; | Blob &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Yes &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | n/a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | None |&lt;/p&gt; 
&lt;p&gt;Feature detection is possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
    var isFileSaverSupported = !!new Blob;
} catch (e) {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IE &amp;lt; 10&lt;/h3&gt; 
&lt;p&gt;It is possible to save text files in IE &amp;lt; 10 without Flash-based polyfills. See &lt;a href=&quot;https://github.com/koffsyrup/FileSaver.js#examples&quot;&gt;ChenWenBrian and koffsyrup&#39;s &lt;code&gt;saveTextAs()&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Safari 6.1+&lt;/h3&gt; 
&lt;p&gt;Blobs may be opened instead of saved sometimes‚Äîyou may have to direct your Safari users to manually press 
 &lt;!-- raw HTML omitted --&gt;‚åò
 &lt;!-- raw HTML omitted --&gt;+
 &lt;!-- raw HTML omitted --&gt;S
 &lt;!-- raw HTML omitted --&gt; to save the file after it is opened. Using the &lt;code&gt;application/octet-stream&lt;/code&gt; MIME type to force downloads &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096&quot;&gt;can cause issues in Safari&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;iOS&lt;/h3&gt; 
&lt;p&gt;saveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=167341&quot;&gt;tell Apple how this WebKit bug is affecting you&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Syntax&lt;/h2&gt; 
&lt;h3&gt;Import &lt;code&gt;saveAs()&lt;/code&gt; from file-saver&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { saveAs } from &#39;file-saver&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver saveAs(Blob/File/Url, optional DOMString filename, optional Object { autoBom })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass &lt;code&gt;{ autoBom: true }&lt;/code&gt; if you want FileSaver.js to automatically provide Unicode text encoding hints (see: &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;byte order mark&lt;/a&gt;). Note that this is only done if your blob type has &lt;code&gt;charset=utf-8&lt;/code&gt; set.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Saving text using &lt;code&gt;require()&lt;/code&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var FileSaver = require(&#39;file-saver&#39;);
var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving text&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving URLs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver.saveAs(&quot;https://httpbin.org/image&quot;, &quot;image.jpg&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using URLs within the same origin will just use &lt;code&gt;a[download]&lt;/code&gt;. Otherwise, it will first check if it supports cors header with a synchronous head request. If it does, it will download the data and save using blob URLs. If not, it will try to download it using &lt;code&gt;a[download]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The standard W3C File API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; interface is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; is a cross-browser &lt;code&gt;Blob&lt;/code&gt; implementation that solves this.&lt;/p&gt; 
&lt;h3&gt;Saving a canvas&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var canvas = document.getElementById(&quot;my-canvas&quot;);
canvas.toBlob(function(blob) {
    saveAs(blob, &quot;pretty image.png&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The standard HTML5 &lt;code&gt;canvas.toBlob()&lt;/code&gt; method is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; is a cross-browser &lt;code&gt;canvas.toBlob()&lt;/code&gt; that polyfills this.&lt;/p&gt; 
&lt;h3&gt;Saving File&lt;/h3&gt; 
&lt;p&gt;You can save a File constructor without specifying a filename. If the file itself already contains a name, there is a hand full of ways to get a file instance (from storage, file input, new constructor, clipboard event). If you still want to change the name, then you can change it in the 2nd argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Note: Ie and Edge don&#39;t support the new File constructor,
// so it&#39;s better to construct blobs and use saveAs(blob, filename)
var file = new File([&quot;Hello, world!&quot;], &quot;hello world.txt&quot;, {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(file);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://in.getclicky.com/212712ns.gif&quot; alt=&quot;Tracking image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Basic Node.JS installation
npm install file-saver --save
bower install file-saver
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, TypeScript definitions can be installed via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Additional typescript definitions
npm install @types/file-saver --save-dev
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>rollup/plugins</title>
      <link>https://github.com/rollup/plugins</link>
      <description>&lt;p&gt;üç£ The one-stop shop for official Rollup plugins&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/rollup/plugins&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/rollup/plugins.svg&quot; alt=&quot;tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/rollup/plugins&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/rollup/plugins/branch/master/graph/badge.svg&quot; alt=&quot;cover&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://is.gd/rollup_chat&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/466787075518365708?color=778cd1&amp;amp;label=chat&quot; alt=&quot;discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://liberamanifesto.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/libera-manifesto-lightgrey.svg&quot; alt=&quot;libera manifesto&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Rollup Plugins&lt;/h1&gt; 
&lt;p&gt;üç£ The one-stop shop for official Rollup plugins&lt;/p&gt; 
&lt;p&gt;This repository houses plugins that Rollup considers critical to every day use of Rollup, plugins which the organization has adopted maintenance of, and plugins that the project recommends to its users.&lt;/p&gt; 
&lt;h2&gt;Plugins Found Here&lt;/h2&gt; 
&lt;p&gt;| | | | --------------------------------------------------- | ----------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/alias&quot;&gt;alias&lt;/a&gt; | Define and resolve aliases for bundle dependencies | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/auto-install&quot;&gt;auto-install&lt;/a&gt; | Automatically install dependencies that are imported by a bundle | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/babel&quot;&gt;babel&lt;/a&gt; | Compile your files with Babel | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/beep&quot;&gt;beep&lt;/a&gt; | System beeps on errors and warnings | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/buble&quot;&gt;buble&lt;/a&gt; | Compile ES2015 with buble | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/commonjs&quot;&gt;commonjs&lt;/a&gt; | Convert CommonJS modules to ES6 | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/data-uri&quot;&gt;data-uri&lt;/a&gt; | Import modules from Data URIs | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/dsv&quot;&gt;dsv&lt;/a&gt; | Convert .csv and .tsv files into JavaScript modules with d3-dsv | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/dynamic-import-vars&quot;&gt;dynamic-import-vars&lt;/a&gt; | Resolving dynamic imports that contain variables. | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/eslint&quot;&gt;eslint&lt;/a&gt; | Verify entry point and all imported files with ESLint | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/graphql&quot;&gt;graphql&lt;/a&gt; | Convert .gql/.graphql files to ES6 modules | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/html&quot;&gt;html&lt;/a&gt; | Create HTML files to serve Rollup bundles | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/image&quot;&gt;image&lt;/a&gt; | Import JPG, PNG, GIF, SVG, and WebP files | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/inject&quot;&gt;inject&lt;/a&gt; | Scan modules for global variables and injects &lt;code&gt;import&lt;/code&gt; statements where necessary | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/json&quot;&gt;json&lt;/a&gt; | Convert .json files to ES6 modules | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/legacy&quot;&gt;legacy&lt;/a&gt; | Add &lt;code&gt;export&lt;/code&gt; declarations to legacy non-module scripts | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/multi-entry&quot;&gt;multi-entry&lt;/a&gt; | Use multiple entry points for a bundle | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/node-resolve&quot;&gt;node-resolve&lt;/a&gt; | Locate and bundle third-party dependencies in node_modules | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/replace&quot;&gt;replace&lt;/a&gt; | Replace strings in files while bundling | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/run&quot;&gt;run&lt;/a&gt; | Run your bundles in Node once they&#39;re built | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/strip&quot;&gt;strip&lt;/a&gt; | Remove debugger statements and functions like assert.equal and console.log from your code | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/sucrase&quot;&gt;sucrase&lt;/a&gt; | Compile TypeScript, Flow, JSX, etc with Sucrase | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/typescript&quot;&gt;typescript&lt;/a&gt; | Integration between Rollup and Typescript | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/url&quot;&gt;url&lt;/a&gt; | Import files as data-URIs or ES Modules | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/virtual&quot;&gt;virtual&lt;/a&gt; | Load virtual modules from memory | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/wasm&quot;&gt;wasm&lt;/a&gt; | Import WebAssembly code with Rollup | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/yaml&quot;&gt;yaml&lt;/a&gt; | Convert YAML files to ES6 modules | | | |&lt;/p&gt; 
&lt;h2&gt;Other Packages Found Here&lt;/h2&gt; 
&lt;p&gt;| | | | ----------------------------------- | ---------------------------------------------------------- | | &lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/packages/pluginutils&quot;&gt;pluginutils&lt;/a&gt; | A set of utility functions commonly used by Rollup plugins | | | |&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This repository is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Monorepo&quot;&gt;monorepo&lt;/a&gt; which leverages &lt;a href=&quot;https://pnpm.js.org/&quot;&gt;pnpm&lt;/a&gt; for dependency management.&lt;/p&gt; 
&lt;p&gt;To begin, please install &lt;code&gt;pnpm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install pnpm -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Working with Plugin Packages&lt;/h3&gt; 
&lt;p&gt;All plugin packages are kept in the &lt;code&gt;/packages&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h4&gt;Adding dependencies:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm add &amp;lt;package&amp;gt; --filter ./packages/&amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; is the name of the NPM package you wish to add for a plugin package, and &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the proper name of the plugin. e.g. &lt;code&gt;@rollup/plugin-beep&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Publishing:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm run publish -- &amp;lt;name&amp;gt; [flags]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the portion of the plugin package name following &lt;code&gt;@rollup/plugin-&lt;/code&gt;. (e.g. &lt;code&gt;beep&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;The publish script performs the following actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gathers commits from the last release tag&lt;/li&gt; 
 &lt;li&gt;Determines the next appropriate version bump (major, minor, or patch)&lt;/li&gt; 
 &lt;li&gt;Updates &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Generates a new ChangeLog entry&lt;/li&gt; 
 &lt;li&gt;Updates &lt;code&gt;CHANGELOG.md&lt;/code&gt; for the target plugin&lt;/li&gt; 
 &lt;li&gt;Commits &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;CHANGELOG.md&lt;/code&gt;, with a commit message is in the form &lt;code&gt;chore(release): &amp;lt;name&amp;gt;-v&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Publishes to NPM&lt;/li&gt; 
 &lt;li&gt;Tags the release in the form &lt;code&gt;&amp;lt;name&amp;gt;-v&amp;lt;version&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;beep-v0.1.0&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Pushes the commit and tag to Github&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Flags&lt;/h5&gt; 
&lt;p&gt;The following flags are available to modify the publish process:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--dry&lt;/code&gt; tells the script to perform a dry-run, skipping any file modifications, NPM, or Git Actions. Results from version determination and new ChangeLog additions are displayed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--major&lt;/code&gt;, &lt;code&gt;--minor&lt;/code&gt;, &lt;code&gt;--patch&lt;/code&gt; can be used to force a particular type of semver bump.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-push&lt;/code&gt; will instruct the script not to push changes and tags to Git.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-tag&lt;/code&gt; will instruct the script not to tag the release.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Running Tests:&lt;/h4&gt; 
&lt;p&gt;To run tests on all packages which have changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run tests on a specific package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm run test --filter ./packages/&amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Linting:&lt;/p&gt; 
&lt;p&gt;To lint all packages which have changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To lint a specific package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ pnpm run lint --filter ./packages/&amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Scripts in the repository will run the root &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;lint&lt;/code&gt; script on those packages which have changes. This is also how the CI pipelines function. To run either on a package outside of that pipeline, use &lt;code&gt;pnpm run &amp;lt;script&amp;gt; -- @rollup/plugin-&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Adding Plugins&lt;/h2&gt; 
&lt;p&gt;While we don&#39;t have an official procedure for adding third-party plugins to this repository, we are absolutely open to the idea. If you&#39;d like to speak about your project being a part of this repo, please reach out to &lt;a href=&quot;https://twitter.com/RollupJS&quot;&gt;@RollupJS&lt;/a&gt; on Twitter.&lt;/p&gt; 
&lt;h2&gt;Meta&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rollup/plugins/master/LICENSE&quot;&gt;LICENSE (Mozilla Public License)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ClearURLs/Addon</title>
      <link>https://github.com/ClearURLs/Addon</link>
      <description>&lt;p&gt;ClearURLs is an add-on based on the new WebExtensions technology and will automatically remove tracking elements from URLs to help protect your privacy.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/firefox/addon/clearurls/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/mdkdmaickkfdekbjdoojfalpbkgaddei&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; &lt;a href=&quot;https://chrome.google.com/webstore/detail/clearurls/lckanjgmijmafbedllaakclkaicjfmnk&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; ClearURLs &lt;a href=&quot;https://gitter.im/ClearURLs/ClearURLs&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/ClearURLs/ClearURLs.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;ClearURLs&lt;/strong&gt; is an add-on based on the new WebExtensions technology and is optimized for &lt;em&gt;Firefox&lt;/em&gt; and &lt;em&gt;Chrome&lt;/em&gt; based browsers.&lt;/p&gt; 
&lt;p&gt;This extension will automatically remove tracking elements from URLs to help protect your privacy when browse through the Internet, which is regularly updated by us and can be found &lt;a href=&quot;https://gitlab.com/anti-tracking/ClearURLs/rules/-/raw/master/data.min.json&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Application&lt;/h2&gt; 
&lt;p&gt;Many websites use tracking elements in the URL (e.g. &lt;code&gt;https://example.com?utm_source=newsletter1&amp;amp;utm_medium=email&amp;amp;utm_campaign=sale&lt;/code&gt;) to mark your online activity. All that tracking code is not necessary for a website to be displayed or work correctly and can therefore be removed‚Äîthat is exactly what ClearURLs does.&lt;/p&gt; 
&lt;p&gt;Another common example are Amazon URLs. If you search for a product on Amazon you will see a very long URL, such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://www.amazon.com/dp/exampleProduct/ref=sxin_0_pb?__mk_de_DE=√ÖM√Ö≈Ω√ï√ë&amp;amp;keywords=tea&amp;amp;pd_rd_i=exampleProduct&amp;amp;pd_rd_r=8d39e4cd-1e4f-43db-b6e7-72e969a84aa5&amp;amp;pd_rd_w=1pcKM&amp;amp;pd_rd_wg=hYrNl&amp;amp;pf_rd_p=50bbfd25-5ef7-41a2-68d6-74d854b30e30&amp;amp;pf_rd_r=0GMWD0YYKA7XFGX55ADP&amp;amp;qid=1517757263&amp;amp;rnid=2914120011
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Indeed most of the above URL is tracking code. Once ClearURLs has cleaned the address, it will look like this: &lt;code&gt;https://www.amazon.com/dp/exampleProduct&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Removes tracking from URLs automatically in the background&lt;/li&gt; 
 &lt;li&gt;Blocks some common ad domains (optional)&lt;/li&gt; 
 &lt;li&gt;Has a built-in tool to clean up multiple URLs at once&lt;/li&gt; 
 &lt;li&gt;Supports redirection to the destination, without tracking services as middleman&lt;/li&gt; 
 &lt;li&gt;Adds an entry to the context menu so that links can be copied quickly and cleanly&lt;/li&gt; 
 &lt;li&gt;Blocks hyperlink auditing, also known as &lt;em&gt;ping tracking&lt;/em&gt; (see also &lt;a href=&quot;https://html.spec.whatwg.org/multipage/links.html#hyperlink-auditing&quot;&gt;this article&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prevents ETag tracking&lt;/li&gt; 
 &lt;li&gt;Prevents tracking injection over history API (see also: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API#The_replaceState()_method&quot;&gt;The replaceState() method&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prevents Google from rewriting the search results (to include tracking elements)&lt;/li&gt; 
 &lt;li&gt;Prevents Yandex from rewriting the search results (to include tracking elements)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Permissons&lt;/h2&gt; 
&lt;p&gt;Reasoning for needed permissions can be found under &lt;a href=&quot;https://gitlab.com/KevinRoebert/ClearUrls/issues/159&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://gitlab.com/KevinRoebert/ClearUrls/raw/master/promotion/screens/Popup_v_1.14.0.png&quot; alt=&quot;Interface (version 1.14.0)&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;CI/CD Artifacts Download (for Firefox- and Chrome-Dev only)&lt;/h2&gt; 
&lt;p&gt;Here you can download the packed files for the Firefox- and Chrome-Dev:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitlab.com/KevinRoebert/ClearUrls/-/jobs/artifacts/master/raw/ClearUrls.zip?job=bundle%20addon&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Test&lt;/h2&gt; 
&lt;p&gt;If you want to test whether ClearURLs works correctly on your system, you can go to this test page: &lt;a href=&quot;https://test.clearurls.xyz/&quot;&gt;https://test.clearurls.xyz/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you have any suggestions or complaints, please &lt;a href=&quot;https://gitlab.com/KevinRoebert/ClearUrls/issues/new&quot;&gt;create an issue.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: If you have any suggestions or complaints regarding the rules, please &lt;a href=&quot;https://gitlab.com/anti-tracking/ClearURLs/rules/-/issues/new&quot;&gt;create an issue in this repo&lt;/a&gt; or email us rules.support (at) clearurls.xyz (this mail will automatically create a new issue in this repo).&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Translate ClearURLs&lt;/h3&gt; 
&lt;p&gt;You want to help translating ClearURLs into many languages? ‚Äì Nice&lt;/p&gt; 
&lt;p&gt;You can choose between two options to contribute. You can create a merge request, or you can use the POEditor to translate ClearURLs.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hint: The description field in the translation files are only an information for what the translation is used. It is not necessary to translate the description field; in the most cases it is empty.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Merge request&lt;/h4&gt; 
&lt;p&gt;If you want to create a merge request, you must open the path &lt;a href=&quot;https://github.com/KevinRoebert/ClearUrls/blob/master/_locales/en/messages.json&quot;&gt;&lt;code&gt;_locales/en/messages.json&lt;/code&gt;&lt;/a&gt; in the ClearURLs repo and translate the english terms into terms of your language. Once you have translated all the terms, you make a pull request of your translation. Please push your translation into the folder &lt;code&gt;_locales/{language code}/messages.json&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;POEditor&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://poeditor.com/join/project/vKTpQWWvk2&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Projects that use parts of ClearURLs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/walterl/uroute&quot;&gt;Uroute&lt;/a&gt; used ClearURLs to filter/clean URL before launching browser&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/CrunchBangDev/cbd-cogs/-/tree/master/Scrub&quot;&gt;Scrub&lt;/a&gt; used ClearURLs to filter/clean URLs as cog for the Red Discord bot&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AmanoTeam/Unalix&quot;&gt;Unalix&lt;/a&gt; a simple Python module that removes tracking fields from URLs and unshort shortened URLs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AmanoTeam/Unalix-nim&quot;&gt;Unalix-nim&lt;/a&gt; a simple Nim library that removes tracking fields from URLs and unshort shortened URLs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recommended by...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ghacksuserjs/ghacks-user.js/wiki/4.1-Extensions&quot;&gt;ghacks-user.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanetech-community/awesome-humane-tech#tracking&quot;&gt;Awesome Humane Tech List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.privacytools.io/browsers/#addons&quot;&gt;PrivacyTools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nytimes.com/wirecutter/reviews/our-favorite-ad-blockers-and-browser-extensions-to-protect-privacy/#cleaner-links-clearurls&quot;&gt;New York Times Wirecutter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ClearURLs is part of Mozilla&#39;s recommended extensions program&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Permissions&lt;/h2&gt; 
&lt;p&gt;Reasoning for needed permissions you can find under &lt;a href=&quot;https://gitlab.com/KevinRoebert/ClearUrls/issues/159&quot;&gt;this discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright&lt;/h2&gt; 
&lt;p&gt;We use some third-party scripts in our add-on. The authors and licenses are listed below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/webextension-polyfill&quot;&gt;WebExtension browser API Polyfill&lt;/a&gt; | Copyright by Mozilla | &lt;a href=&quot;https://github.com/mozilla/webextension-polyfill/blob/master/LICENSE&quot;&gt;MPL-2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/tree/v4.3.1&quot;&gt;Bootstrap v4.3.1&lt;/a&gt; | Copyright 2011-2016 Twitter, Inc. | &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/tree/3.4.1&quot;&gt;jQuery v3.4.1&lt;/a&gt; | Copyright JS Foundation and other contributors | &lt;a href=&quot;https://jquery.org/license/&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DataTables/DataTables/tree/master&quot;&gt;DataTables v1.10.20&lt;/a&gt; | Copyright (c) 2008-2015 SpryMedia Limited | &lt;a href=&quot;https://datatables.net/license/&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Simonwep/pickr/tree/1.7.0&quot;&gt;Pickr v1.7.0&lt;/a&gt; | Copyright (c) 2018 - 2020 Simon Reinisch | &lt;a href=&quot;https://github.com/Simonwep/pickr/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/tree/5.12.0&quot;&gt;Font Awesome v5.12.0&lt;/a&gt; | Copyright (c) @fontawesome | &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt&quot;&gt;Font Awesome Free License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Marak/faker.js</title>
      <link>https://github.com/Marak/faker.js</link>
      <description>&lt;p&gt;generate massive amounts of realistic fake data in Node.js and the browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;faker.js - generate massive amounts of fake data in the browser and node.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/logo.png&quot; alt=&quot;Faker.js&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Marak/faker.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Marak/faker.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/Marak/faker.js?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/Marak/faker.js/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/js/faker&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/faker.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backers/badge.svg&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsors/badge.svg&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/Faker-js/community&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/marak/faker.js.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&quot;&gt;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Faker Cloud&lt;/h3&gt; 
&lt;p&gt;Don&#39;t have a local development setup ready?&lt;/p&gt; 
&lt;p&gt;Try our hosted version of Faker at &lt;a href=&quot;https://fakercloud.com/api&quot;&gt;https://fakercloud.com/api&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;https://github.com/faker/faker-cloud&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;script src = &quot;faker.js&quot; type = &quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      var randomName = faker.name.findName(); // Caitlyn Kerluke
      var randomEmail = faker.internet.email(); // Rusty@arne.info
      var randomCard = faker.helpers.createCard(); // random contact card containing many properties
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    var faker = require(&#39;faker&#39;);

    var randomName = faker.name.findName(); // Rowan Nikolaus
    var randomEmail = faker.internet.email(); // Kassandra.Haley@erich.biz
    var randomCard = faker.helpers.createCard(); // random contact card containing many properties
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;JSDoc API Browser&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://marak.github.io/faker.js/&quot;&gt;http://marak.github.io/faker.js/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;API Methods&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;address 
  &lt;ul&gt; 
   &lt;li&gt;zipCode&lt;/li&gt; 
   &lt;li&gt;zipCodeByState&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;cityPrefix&lt;/li&gt; 
   &lt;li&gt;citySuffix&lt;/li&gt; 
   &lt;li&gt;cityName&lt;/li&gt; 
   &lt;li&gt;streetName&lt;/li&gt; 
   &lt;li&gt;streetAddress&lt;/li&gt; 
   &lt;li&gt;streetSuffix&lt;/li&gt; 
   &lt;li&gt;streetPrefix&lt;/li&gt; 
   &lt;li&gt;secondaryAddress&lt;/li&gt; 
   &lt;li&gt;county&lt;/li&gt; 
   &lt;li&gt;country&lt;/li&gt; 
   &lt;li&gt;countryCode&lt;/li&gt; 
   &lt;li&gt;state&lt;/li&gt; 
   &lt;li&gt;stateAbbr&lt;/li&gt; 
   &lt;li&gt;latitude&lt;/li&gt; 
   &lt;li&gt;longitude&lt;/li&gt; 
   &lt;li&gt;direction&lt;/li&gt; 
   &lt;li&gt;cardinalDirection&lt;/li&gt; 
   &lt;li&gt;ordinalDirection&lt;/li&gt; 
   &lt;li&gt;nearbyGPSCoordinate&lt;/li&gt; 
   &lt;li&gt;timeZone&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;animal 
  &lt;ul&gt; 
   &lt;li&gt;dog&lt;/li&gt; 
   &lt;li&gt;cat&lt;/li&gt; 
   &lt;li&gt;snake&lt;/li&gt; 
   &lt;li&gt;bear&lt;/li&gt; 
   &lt;li&gt;lion&lt;/li&gt; 
   &lt;li&gt;cetacean&lt;/li&gt; 
   &lt;li&gt;horse&lt;/li&gt; 
   &lt;li&gt;bird&lt;/li&gt; 
   &lt;li&gt;cow&lt;/li&gt; 
   &lt;li&gt;fish&lt;/li&gt; 
   &lt;li&gt;crocodilia&lt;/li&gt; 
   &lt;li&gt;insect&lt;/li&gt; 
   &lt;li&gt;rabbit&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;commerce 
  &lt;ul&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;department&lt;/li&gt; 
   &lt;li&gt;productName&lt;/li&gt; 
   &lt;li&gt;price&lt;/li&gt; 
   &lt;li&gt;productAdjective&lt;/li&gt; 
   &lt;li&gt;productMaterial&lt;/li&gt; 
   &lt;li&gt;product&lt;/li&gt; 
   &lt;li&gt;productDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;company 
  &lt;ul&gt; 
   &lt;li&gt;suffixes&lt;/li&gt; 
   &lt;li&gt;companyName&lt;/li&gt; 
   &lt;li&gt;companySuffix&lt;/li&gt; 
   &lt;li&gt;catchPhrase&lt;/li&gt; 
   &lt;li&gt;bs&lt;/li&gt; 
   &lt;li&gt;catchPhraseAdjective&lt;/li&gt; 
   &lt;li&gt;catchPhraseDescriptor&lt;/li&gt; 
   &lt;li&gt;catchPhraseNoun&lt;/li&gt; 
   &lt;li&gt;bsAdjective&lt;/li&gt; 
   &lt;li&gt;bsBuzz&lt;/li&gt; 
   &lt;li&gt;bsNoun&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;database 
  &lt;ul&gt; 
   &lt;li&gt;column&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;collation&lt;/li&gt; 
   &lt;li&gt;engine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;datatype 
  &lt;ul&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;float&lt;/li&gt; 
   &lt;li&gt;datetime&lt;/li&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;uuid&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;hexaDecimal&lt;/li&gt; 
   &lt;li&gt;json&lt;/li&gt; 
   &lt;li&gt;array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;date 
  &lt;ul&gt; 
   &lt;li&gt;past&lt;/li&gt; 
   &lt;li&gt;future&lt;/li&gt; 
   &lt;li&gt;between&lt;/li&gt; 
   &lt;li&gt;betweens&lt;/li&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
   &lt;li&gt;soon&lt;/li&gt; 
   &lt;li&gt;month&lt;/li&gt; 
   &lt;li&gt;weekday&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;fake&lt;/li&gt; 
 &lt;li&gt;finance 
  &lt;ul&gt; 
   &lt;li&gt;account&lt;/li&gt; 
   &lt;li&gt;accountName&lt;/li&gt; 
   &lt;li&gt;routingNumber&lt;/li&gt; 
   &lt;li&gt;mask&lt;/li&gt; 
   &lt;li&gt;amount&lt;/li&gt; 
   &lt;li&gt;transactionType&lt;/li&gt; 
   &lt;li&gt;currencyCode&lt;/li&gt; 
   &lt;li&gt;currencyName&lt;/li&gt; 
   &lt;li&gt;currencySymbol&lt;/li&gt; 
   &lt;li&gt;bitcoinAddress&lt;/li&gt; 
   &lt;li&gt;litecoinAddress&lt;/li&gt; 
   &lt;li&gt;creditCardNumber&lt;/li&gt; 
   &lt;li&gt;creditCardCVV&lt;/li&gt; 
   &lt;li&gt;ethereumAddress&lt;/li&gt; 
   &lt;li&gt;iban&lt;/li&gt; 
   &lt;li&gt;bic&lt;/li&gt; 
   &lt;li&gt;transactionDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;git 
  &lt;ul&gt; 
   &lt;li&gt;branch&lt;/li&gt; 
   &lt;li&gt;commitEntry&lt;/li&gt; 
   &lt;li&gt;commitMessage&lt;/li&gt; 
   &lt;li&gt;commitSha&lt;/li&gt; 
   &lt;li&gt;shortSha&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;hacker 
  &lt;ul&gt; 
   &lt;li&gt;abbreviation&lt;/li&gt; 
   &lt;li&gt;adjective&lt;/li&gt; 
   &lt;li&gt;noun&lt;/li&gt; 
   &lt;li&gt;verb&lt;/li&gt; 
   &lt;li&gt;ingverb&lt;/li&gt; 
   &lt;li&gt;phrase&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;helpers 
  &lt;ul&gt; 
   &lt;li&gt;randomize&lt;/li&gt; 
   &lt;li&gt;slugify&lt;/li&gt; 
   &lt;li&gt;replaceSymbolWithNumber&lt;/li&gt; 
   &lt;li&gt;replaceSymbols&lt;/li&gt; 
   &lt;li&gt;replaceCreditCardSymbols&lt;/li&gt; 
   &lt;li&gt;repeatString&lt;/li&gt; 
   &lt;li&gt;regexpStyleStringParse&lt;/li&gt; 
   &lt;li&gt;shuffle&lt;/li&gt; 
   &lt;li&gt;mustache&lt;/li&gt; 
   &lt;li&gt;createCard&lt;/li&gt; 
   &lt;li&gt;contextualCard&lt;/li&gt; 
   &lt;li&gt;userCard&lt;/li&gt; 
   &lt;li&gt;createTransaction&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;image 
  &lt;ul&gt; 
   &lt;li&gt;image&lt;/li&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;imageUrl&lt;/li&gt; 
   &lt;li&gt;abstract&lt;/li&gt; 
   &lt;li&gt;animals&lt;/li&gt; 
   &lt;li&gt;business&lt;/li&gt; 
   &lt;li&gt;cats&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;food&lt;/li&gt; 
   &lt;li&gt;nightlife&lt;/li&gt; 
   &lt;li&gt;fashion&lt;/li&gt; 
   &lt;li&gt;people&lt;/li&gt; 
   &lt;li&gt;nature&lt;/li&gt; 
   &lt;li&gt;sports&lt;/li&gt; 
   &lt;li&gt;technics&lt;/li&gt; 
   &lt;li&gt;transport&lt;/li&gt; 
   &lt;li&gt;dataUri&lt;/li&gt; 
   &lt;li&gt;lorempixel&lt;/li&gt; 
   &lt;li&gt;unsplash&lt;/li&gt; 
   &lt;li&gt;lorempicsum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;internet 
  &lt;ul&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;email&lt;/li&gt; 
   &lt;li&gt;exampleEmail&lt;/li&gt; 
   &lt;li&gt;userName&lt;/li&gt; 
   &lt;li&gt;protocol&lt;/li&gt; 
   &lt;li&gt;httpMethod&lt;/li&gt; 
   &lt;li&gt;url&lt;/li&gt; 
   &lt;li&gt;domainName&lt;/li&gt; 
   &lt;li&gt;domainSuffix&lt;/li&gt; 
   &lt;li&gt;domainWord&lt;/li&gt; 
   &lt;li&gt;ip&lt;/li&gt; 
   &lt;li&gt;ipv6&lt;/li&gt; 
   &lt;li&gt;port&lt;/li&gt; 
   &lt;li&gt;userAgent&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;mac&lt;/li&gt; 
   &lt;li&gt;password&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;lorem 
  &lt;ul&gt; 
   &lt;li&gt;word&lt;/li&gt; 
   &lt;li&gt;words&lt;/li&gt; 
   &lt;li&gt;sentence&lt;/li&gt; 
   &lt;li&gt;slug&lt;/li&gt; 
   &lt;li&gt;sentences&lt;/li&gt; 
   &lt;li&gt;paragraph&lt;/li&gt; 
   &lt;li&gt;paragraphs&lt;/li&gt; 
   &lt;li&gt;text&lt;/li&gt; 
   &lt;li&gt;lines&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;mersenne 
  &lt;ul&gt; 
   &lt;li&gt;rand&lt;/li&gt; 
   &lt;li&gt;seed&lt;/li&gt; 
   &lt;li&gt;seed_array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;music 
  &lt;ul&gt; 
   &lt;li&gt;genre&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;name 
  &lt;ul&gt; 
   &lt;li&gt;firstName&lt;/li&gt; 
   &lt;li&gt;lastName&lt;/li&gt; 
   &lt;li&gt;middleName&lt;/li&gt; 
   &lt;li&gt;findName&lt;/li&gt; 
   &lt;li&gt;jobTitle&lt;/li&gt; 
   &lt;li&gt;gender&lt;/li&gt; 
   &lt;li&gt;prefix&lt;/li&gt; 
   &lt;li&gt;suffix&lt;/li&gt; 
   &lt;li&gt;title&lt;/li&gt; 
   &lt;li&gt;jobDescriptor&lt;/li&gt; 
   &lt;li&gt;jobArea&lt;/li&gt; 
   &lt;li&gt;jobType&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;phone 
  &lt;ul&gt; 
   &lt;li&gt;phoneNumber&lt;/li&gt; 
   &lt;li&gt;phoneNumberFormat&lt;/li&gt; 
   &lt;li&gt;phoneFormats&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;random 
  &lt;ul&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;float&lt;/li&gt; 
   &lt;li&gt;arrayElement&lt;/li&gt; 
   &lt;li&gt;arrayElements&lt;/li&gt; 
   &lt;li&gt;objectElement&lt;/li&gt; 
   &lt;li&gt;uuid&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;word&lt;/li&gt; 
   &lt;li&gt;words&lt;/li&gt; 
   &lt;li&gt;image&lt;/li&gt; 
   &lt;li&gt;locale&lt;/li&gt; 
   &lt;li&gt;alpha&lt;/li&gt; 
   &lt;li&gt;alphaNumeric&lt;/li&gt; 
   &lt;li&gt;hexaDecimal&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;system 
  &lt;ul&gt; 
   &lt;li&gt;fileName&lt;/li&gt; 
   &lt;li&gt;commonFileName&lt;/li&gt; 
   &lt;li&gt;mimeType&lt;/li&gt; 
   &lt;li&gt;commonFileType&lt;/li&gt; 
   &lt;li&gt;commonFileExt&lt;/li&gt; 
   &lt;li&gt;fileType&lt;/li&gt; 
   &lt;li&gt;fileExt&lt;/li&gt; 
   &lt;li&gt;directoryPath&lt;/li&gt; 
   &lt;li&gt;filePath&lt;/li&gt; 
   &lt;li&gt;semver&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;time 
  &lt;ul&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;unique&lt;/li&gt; 
 &lt;li&gt;vehicle 
  &lt;ul&gt; 
   &lt;li&gt;vehicle&lt;/li&gt; 
   &lt;li&gt;manufacturer&lt;/li&gt; 
   &lt;li&gt;model&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;fuel&lt;/li&gt; 
   &lt;li&gt;vin&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;vrm&lt;/li&gt; 
   &lt;li&gt;bicycle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Faker.fake()&lt;/h3&gt; 
&lt;p&gt;faker.js contains a super useful generator method &lt;code&gt;Faker.fake&lt;/code&gt; for combining faker API methods using a mustache string format.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(faker.fake(&quot;{{name.lastName}}, {{name.firstName}} {{name.suffix}}&quot;));
// outputs: &quot;Marks, Dean Sr.&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will interpolate the format string with the value of methods &lt;code&gt;name.lastName()&lt;/code&gt;, &lt;code&gt;name.firstName()&lt;/code&gt;, and &lt;code&gt;name.suffix()&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;As of version &lt;code&gt;v2.0.0&lt;/code&gt; faker.js has support for multiple localities.&lt;/p&gt; 
&lt;p&gt;The default language locale is set to English.&lt;/p&gt; 
&lt;p&gt;Setting a new locale is simple:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// sets locale to de
faker.locale = &quot;de&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;az&lt;/li&gt; 
 &lt;li&gt;ar&lt;/li&gt; 
 &lt;li&gt;cz&lt;/li&gt; 
 &lt;li&gt;de&lt;/li&gt; 
 &lt;li&gt;de_AT&lt;/li&gt; 
 &lt;li&gt;de_CH&lt;/li&gt; 
 &lt;li&gt;en&lt;/li&gt; 
 &lt;li&gt;en_AU&lt;/li&gt; 
 &lt;li&gt;en_AU_ocker&lt;/li&gt; 
 &lt;li&gt;en_BORK&lt;/li&gt; 
 &lt;li&gt;en_CA&lt;/li&gt; 
 &lt;li&gt;en_GB&lt;/li&gt; 
 &lt;li&gt;en_IE&lt;/li&gt; 
 &lt;li&gt;en_IND&lt;/li&gt; 
 &lt;li&gt;en_US&lt;/li&gt; 
 &lt;li&gt;en_ZA&lt;/li&gt; 
 &lt;li&gt;es&lt;/li&gt; 
 &lt;li&gt;es_MX&lt;/li&gt; 
 &lt;li&gt;fa&lt;/li&gt; 
 &lt;li&gt;fi&lt;/li&gt; 
 &lt;li&gt;fr&lt;/li&gt; 
 &lt;li&gt;fr_CA&lt;/li&gt; 
 &lt;li&gt;fr_CH&lt;/li&gt; 
 &lt;li&gt;ge&lt;/li&gt; 
 &lt;li&gt;hy&lt;/li&gt; 
 &lt;li&gt;hr&lt;/li&gt; 
 &lt;li&gt;id_ID&lt;/li&gt; 
 &lt;li&gt;it&lt;/li&gt; 
 &lt;li&gt;ja&lt;/li&gt; 
 &lt;li&gt;ko&lt;/li&gt; 
 &lt;li&gt;nb_NO&lt;/li&gt; 
 &lt;li&gt;ne&lt;/li&gt; 
 &lt;li&gt;nl&lt;/li&gt; 
 &lt;li&gt;nl_BE&lt;/li&gt; 
 &lt;li&gt;pl&lt;/li&gt; 
 &lt;li&gt;pt_BR&lt;/li&gt; 
 &lt;li&gt;pt_PT&lt;/li&gt; 
 &lt;li&gt;ro&lt;/li&gt; 
 &lt;li&gt;ru&lt;/li&gt; 
 &lt;li&gt;sk&lt;/li&gt; 
 &lt;li&gt;sv&lt;/li&gt; 
 &lt;li&gt;tr&lt;/li&gt; 
 &lt;li&gt;uk&lt;/li&gt; 
 &lt;li&gt;vi&lt;/li&gt; 
 &lt;li&gt;zh_CN&lt;/li&gt; 
 &lt;li&gt;zh_TW&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Individual Localization Packages&lt;/h3&gt; 
&lt;p&gt;faker.js supports incremental loading of locales.&lt;/p&gt; 
&lt;p&gt;By default, requiring &lt;code&gt;faker&lt;/code&gt; will include &lt;em&gt;all&lt;/em&gt; locale data.&lt;/p&gt; 
&lt;p&gt;In a production environment, you may only want to include the locale data for a specific set of locales.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// loads only de locale
var faker = require(&#39;faker/locale/de&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setting a randomness seed&lt;/h2&gt; 
&lt;p&gt;If you want consistent results, you can set your own seed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;faker.seed(123);

var firstRandom = faker.datatype.number();

// Setting the seed again resets the sequence.
faker.seed(123);

var secondRandom = faker.datatype.number();

console.log(firstRandom === secondRandom);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install .
make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can view a code coverage report generated in coverage/lcov-report/index.html.&lt;/p&gt; 
&lt;h2&gt;Building faker.js&lt;/h2&gt; 
&lt;p&gt;faker uses &lt;a href=&quot;http://gulpjs.com/&quot;&gt;gulp&lt;/a&gt; to automate its build process. Each build operation is a separate task which can be run independently.&lt;/p&gt; 
&lt;h3&gt;Browser Bundle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run browser
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building JSDocs&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://jsdoc.app/&quot;&gt;JSDOC&lt;/a&gt; v3 HTML API documentation&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run jsdoc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building ReadMe&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;ReadMe.md&lt;/code&gt; file for &lt;code&gt;faker.js&lt;/code&gt; is automatically generated and should not be modified directly. All updates to &lt;code&gt;ReadMe.md&lt;/code&gt; should be performed in &lt;code&gt;./build/src/docs.md&lt;/code&gt; and then the build script should be run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run readme
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Version Release Schedule&lt;/h2&gt; 
&lt;p&gt;faker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.&lt;/p&gt; 
&lt;p&gt;If you require the absolute latest version of &lt;code&gt;faker.js&lt;/code&gt; the &lt;code&gt;master&lt;/code&gt; branch @ &lt;a href=&quot;http://github.com/marak/faker.js/&quot;&gt;http://github.com/marak/faker.js/&lt;/a&gt; should always be up to date and working.&lt;/p&gt; 
&lt;h2&gt;Maintainer&lt;/h2&gt; 
&lt;h4&gt;Marak Squires&lt;/h4&gt; 
&lt;p&gt;faker.js - Copyright (c) 2020 Marak Squires www.marak.com http://github.com/marak/faker.js/&lt;/p&gt; 
&lt;p&gt;faker.js was inspired by and has used data definitions from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stympy/faker/&quot;&gt;https://github.com/stympy/faker/&lt;/a&gt; - Copyright (c) 2007-2010 Benjamin Curtis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://search.cpan.org/%7Ejasonk/Data-Faker-0.07/&quot;&gt;http://search.cpan.org/~jasonk/Data-Faker-0.07/&lt;/a&gt; - Copyright 2004-2005 by Jason Kohles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/fakerjs#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&quot;https://opencollective.com/fakerjs#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atlassian/react-beautiful-dnd</title>
      <link>https://github.com/atlassian/react-beautiful-dnd</link>
      <description>&lt;p&gt;Beautiful and accessible drag and drop for lists with React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Beautiful&lt;/strong&gt; and &lt;strong&gt;accessible&lt;/strong&gt; drag and drop for lists with &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/atlassian/react-beautiful-dnd/tree/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/atlassian/react-beautiful-dnd/master.svg&quot; alt=&quot;CircleCI branch&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-beautiful-dnd.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53614150-efbed780-3c2c-11e9-9204-a5d2e746faca.gif&quot; alt=&quot;quote application example&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://react-beautiful-dnd.netlify.com/iframe.html?selectedKind=board&amp;amp;selectedStory=simple&quot;&gt;Play with this example if you want!&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Core characteristics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Beautiful and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;natural movement&lt;/a&gt; of items üíê&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessible&lt;/a&gt;: powerful keyboard and screen reader support ‚ôøÔ∏è&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Extremely performant&lt;/a&gt; üöÄ&lt;/li&gt; 
 &lt;li&gt;Clean and powerful api which is simple to get started with&lt;/li&gt; 
 &lt;li&gt;Plays extremely well with standard browser interactions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Unopinionated styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;No creation of additional wrapper dom nodes - flexbox and focus management friendly!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started üë©‚Äçüè´&lt;/h2&gt; 
&lt;p&gt;We have created &lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;a free course on &lt;code&gt;egghead.io&lt;/code&gt; ü•ö&lt;/a&gt; to help you get started with &lt;code&gt;react-beautiful-dnd&lt;/code&gt; as quickly as possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/43372837-8c72d3f8-93e8-11e8-9d92-a82adde7718f.png&quot; alt=&quot;course-logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Currently supported feature set ‚úÖ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vertical lists ‚Üï&lt;/li&gt; 
 &lt;li&gt;Horizontal lists ‚Üî&lt;/li&gt; 
 &lt;li&gt;Movement between lists (‚ñ§ ‚Üî ‚ñ§)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual list support üëæ&lt;/a&gt; - unlocking 10,000 items @ 60fps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining items&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mouse üê≠, keyboard üéπ‚ôøÔ∏è and touch üëâüì± (mobile, tablet and so on) support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Incredible screen reader support ‚ôøÔ∏è - we provide an amazing experience for english screen readers out of the box üì¶. We also provide complete customisation control and internationalisation support for those who need it üíñ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#optional-props&quot;&gt;Conditional dragging&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md#conditionally-dropping&quot;&gt;conditional dropping&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple independent lists on the one page&lt;/li&gt; 
 &lt;li&gt;Flexible item sizes - the draggable items can have different heights (vertical lists) or widths (horizontal lists)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Add and remove items during a drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Compatible with semantic &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; reordering - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;table pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt; - automatically scroll containers and the window as required during a drag (even with keyboard üî•)&lt;/li&gt; 
 &lt;li&gt;Custom drag handles - you can drag a whole item by just a part of it&lt;/li&gt; 
 &lt;li&gt;Able to move the dragging item to another element while dragging (clone, portal) - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting your &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create scripted drag and drop experiences üéÆ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Allows extensions to support for &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;any input type you like üïπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üå≤ Tree support through the &lt;a href=&quot;https://atlaskit.atlassian.com/packages/confluence/tree&quot;&gt;&lt;code&gt;@atlaskit/tree&lt;/code&gt;&lt;/a&gt; package&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt; list can be a scroll container (without a scrollable parent) or be the child of a scroll container (that also does not have a scrollable parent)&lt;/li&gt; 
 &lt;li&gt;Independent nested lists - a list can be a child of another list, but you cannot drag items from the parent list into a child list&lt;/li&gt; 
 &lt;li&gt;Server side rendering (SSR) compatible - see &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;resetServerContext()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Plays well with &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#interactive-child-elements-within-a-draggable-&quot;&gt;nested interactive elements&lt;/a&gt; by default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Motivation ü§î&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;react-beautiful-dnd&lt;/code&gt; exists to create beautiful drag and drop for lists that anyone can use - even people who cannot see. For a good overview of the history and motivations of the project you can take a look at these external resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìñ &lt;a href=&quot;https://medium.com/@alexandereardon/rethinking-drag-and-drop-d9f5770b4e6b&quot;&gt;Rethinking drag and drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üéß &lt;a href=&quot;https://reactpodcast.simplecast.fm/17&quot;&gt;React podcast: fast, accessible and beautiful drag and drop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Not for everyone ‚úåÔ∏è&lt;/h2&gt; 
&lt;p&gt;There are a lot of libraries out there that allow for drag and drop interactions within React. Most notable of these is the amazing &lt;a href=&quot;https://github.com/react-dnd/react-dnd&quot;&gt;&lt;code&gt;react-dnd&lt;/code&gt;&lt;/a&gt;. It does an incredible job at providing a great set of drag and drop primitives which work especially well with the &lt;a href=&quot;https://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html&quot;&gt;wildly inconsistent&lt;/a&gt; html5 drag and drop feature. &lt;code&gt;react-beautiful-dnd&lt;/code&gt; is a higher level abstraction specifically built for lists (vertical, horizontal, movement between lists, nested lists and so on). Within that subset of functionality &lt;code&gt;react-beautiful-dnd&lt;/code&gt; offers a powerful, natural and beautiful drag and drop experience. However, it does not provide the breadth of functionality offered by &lt;code&gt;react-dnd&lt;/code&gt;. So &lt;code&gt;react-beautiful-dnd&lt;/code&gt; might not be for you depending on what your use case is.&lt;/p&gt; 
&lt;h2&gt;Documentation üìñ&lt;/h2&gt; 
&lt;h3&gt;About üëã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/installation.md&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/examples.md&quot;&gt;Examples and samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/design-principles.md&quot;&gt;Design principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;Animations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/browser-support.md&quot;&gt;Browser support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sensors üîâ&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The ways in which somebody can start and control a drag&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/mouse.md&quot;&gt;Mouse dragging üê≠&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/touch.md&quot;&gt;Touch dragging üëâüì±&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/keyboard.md&quot;&gt;Keyboard dragging üéπ‚ôøÔ∏è&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create your own sensor&lt;/a&gt; (allows for any input type as well as scripted experiences)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API üèãÔ∏è‚Äç&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53607406-c8f3a780-3c12-11e9-979c-7f3b5bd1bfbd.gif&quot; alt=&quot;diagram&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/drag-drop-context.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Wraps the part of your application you want to have drag and drop enabled for&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md&quot;&gt;&lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;An area that can be dropped into. Contains &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md&quot;&gt;&lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;What can be dragged around&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;&lt;code&gt;resetServerContext()&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Utility for server side rendering (SSR)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Guides üó∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/responders.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt; responders&lt;/a&gt; - &lt;em&gt;&lt;code&gt;onDragStart&lt;/code&gt;, &lt;code&gt;onDragUpdate&lt;/code&gt;, &lt;code&gt;onDragEnd&lt;/code&gt; and &lt;code&gt;onBeforeDragStart&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/common-setup-issues.md&quot;&gt;Common setup issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/using-inner-ref.md&quot;&gt;Using &lt;code&gt;innerRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/setup-problem-detection-and-error-recovery.md&quot;&gt;Setup problem detection and error recovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/identifiers.md&quot;&gt;Rules for &lt;code&gt;draggableId&lt;/code&gt; and &lt;code&gt;droppableId&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/browser-focus.md&quot;&gt;Browser focus retention&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/drop-animation.md&quot;&gt;Customising or skipping the drop animation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/screen-reader.md&quot;&gt;Controlling the screen reader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/doctype.md&quot;&gt;Use the html5 &lt;code&gt;doctype&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/types.md&quot;&gt;&lt;code&gt;TypeScript&lt;/code&gt; and &lt;code&gt;flow&lt;/code&gt;: type information&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/dragging-svgs.md&quot;&gt;Dragging &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/avoiding-image-flickering.md&quot;&gt;Avoiding image flickering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Non-visible preset styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-detect-scroll-containers.md&quot;&gt;How we detect scroll containers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-use-dom-events.md&quot;&gt;How we use dom events&lt;/a&gt; - &lt;em&gt;Useful if you need to build on top of &lt;code&gt;react-beautiful-dnd&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Adding &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s during a drag (11.x behaviour)&lt;/a&gt; - &lt;em&gt;‚ö†Ô∏è Advanced&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/content-security-policy.md&quot;&gt;Setting up Content Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Patterns üë∑‚Äç&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual lists üëæ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting a &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Using our cloning API or your own portal&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support üë©‚Äç‚öïÔ∏è&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/engineering-health.md&quot;&gt;Engineering health&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/community-and-addons.md&quot;&gt;Community and addons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/releases&quot;&gt;Release notes and changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/upgrading.md&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/issues&quot;&gt;Road map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Read this in other languages üåé&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeeHyungGeun/react-beautiful-dnd-kr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;ÌïúÍ∏Ä/Korean&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vtereshyn/react-beautiful-dnd-ru&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;–ù–∞ —Ä—É—Å—Å–∫–æ–º/Russian&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dudestein/react-beautiful-dnd-pt&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;pt&quot;&gt; &lt;strong&gt;Portugu√™s/Portuguese&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hdks55l/react-beautiful-dnd-gr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Greece.png&quot; alt=&quot;gr&quot;&gt; &lt;strong&gt;ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨/Greek&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author ‚úçÔ∏è&lt;/h2&gt; 
&lt;p&gt;Alex Reardon &lt;a href=&quot;https://twitter.com/alexandereardon&quot;&gt;@alexandereardon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Collaborators ü§ù&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bogdan Chadkin &lt;a href=&quot;https://twitter.com/IAmTrySound&quot;&gt;@IAmTrySound&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Luke Batchelor &lt;a href=&quot;https://twitter.com/alukebatchelor&quot;&gt;@alukebatchelor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jared Crowe &lt;a href=&quot;https://twitter.com/jaredjcrowe&quot;&gt;@jaredjcrowe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Many other &lt;a href=&quot;https://twitter.com/Atlassian&quot;&gt;@Atlassian&lt;/a&gt;&#39;s!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>kgshank/gse-sound-output-device-chooser</title>
      <link>https://github.com/kgshank/gse-sound-output-device-chooser</link>
      <description>&lt;p&gt;Gnome Shell Extension to show a simple chooser to select Input &amp; Output device based on gnome control center&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gnome Shell Extension - Sound Input &amp;amp; Output Device Chooser&lt;/h1&gt; 
&lt;p&gt;A simple selector to enabled selection of sound source and sink based on Gnome Control Center&lt;/p&gt; 
&lt;h3&gt;Dependency&lt;/h3&gt; 
&lt;p&gt;Python 2 or 3. New version needs Python as optional dependency. Use option to turn off new profile identification logic, if Python is to be avoided. But the old logic has language dependency and works only with English display language&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;The official method to install this extension is from &lt;a href=&quot;https://extensions.gnome.org/extension/906/sound-output-device-chooser&quot;&gt;extensions.gnome.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install the extension from source, clone the repository and place it in the &lt;code&gt;$HOME/.local/share/gnome-shell/extensions&lt;/code&gt; directory&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ~/.local/share/gnome-shell/extensions/

# Remove older version
rm -rf &quot;*sound-output-device-chooser*&quot;

# Clone current version
git clone https://github.com/kgshank/gse-sound-output-device-chooser.git

# Install it
cp -r gse-sound-output-device-chooser/sound-output-device-chooser@kgshank.net .
rm -rf &quot;gse-sound-output-device-chooser&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enable the extensions from &lt;a href=&quot;https://wiki.gnome.org/Apps/Tweaks&quot;&gt;GNOME Tweaks&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Gnome shell versions compatible&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;3.38&lt;/li&gt; 
 &lt;li&gt;3.36&lt;/li&gt; 
 &lt;li&gt;3.34&lt;/li&gt; 
 &lt;li&gt;3.32&lt;/li&gt; 
 &lt;li&gt;For older versions install from &lt;a href=&quot;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&quot;&gt;extensions.gnome.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Notes:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;May conflict with extensions which modify volume menu.&lt;/li&gt; 
 &lt;li&gt;Extension works with Volume Mixer extension. Restart shell, if errors encountered.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgshank/gse-sound-output-device-chooser/master/CHANGELOG.md&quot;&gt;Change log&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>typescript-cheatsheets/react</title>
      <link>https://github.com/typescript-cheatsheets/react</link>
      <description>&lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/setup&quot;&gt;&lt;strong&gt;Web docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn&quot;&gt;‰∏≠ÊñáÁøªËØë&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet-es&quot;&gt;&lt;strong&gt;Espa√±ol&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-pt&quot;&gt;&lt;strong&gt;Portugu√™s&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/CONTRIBUTING.md&quot;&gt;Contribute!&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;Ask!&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;:wave: This repo is maintained by &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ferdaber&quot;&gt;@ferdaber&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;@eps1lon&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jsjoeio&quot;&gt;@jsjoeio&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/arvincheenu&quot;&gt;@arvindcheenu&lt;/a&gt;, we&#39;re so happy you want to try out TypeScript with React! If you see anything wrong or missing, please &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;file an issue&lt;/a&gt;! :+1:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/wTGS5z9&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/508357248330760243.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;http://twitter.com/home?status=Awesome%20%40Reactjs%20%2B%20%40TypeScript%20cheatsheet%20by%20%40ferdaber%2C%20%40sebsilbermann%2C%20%40swyx%20%26%20others!%20https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?label=Help%20spread%20the%20word%21&amp;amp;style=social&amp;amp;url=https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;All React + TypeScript Cheatsheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;The Basic Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/README.md#basic-cheatsheet-table-of-contents&quot;&gt;&lt;code&gt;/README.md&lt;/code&gt;&lt;/a&gt;) is focused on helping React devs just start using TS in React &lt;strong&gt;apps&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Focus on opinionated best practices, copy+pastable examples.&lt;/li&gt; 
   &lt;li&gt;Explains some basic TS types usage and setup along the way.&lt;/li&gt; 
   &lt;li&gt;Answers the most Frequently Asked Questions.&lt;/li&gt; 
   &lt;li&gt;Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.&lt;/li&gt; 
   &lt;li&gt;The goal is to get effective with TS without learning &lt;em&gt;too much&lt;/em&gt; TS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Advanced Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro&quot;&gt;&lt;code&gt;/ADVANCED.md&lt;/code&gt;&lt;/a&gt;) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React &lt;strong&gt;libraries&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It also has miscellaneous tips and tricks for pro users.&lt;/li&gt; 
   &lt;li&gt;Advice for contributing to DefinitelyTyped.&lt;/li&gt; 
   &lt;li&gt;The goal is to take &lt;em&gt;full advantage&lt;/em&gt; of TypeScript.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Migrating Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/intro&quot;&gt;&lt;code&gt;/MIGRATING.md&lt;/code&gt;&lt;/a&gt;) helps collate advice for incrementally migrating large codebases from JS or Flow, &lt;strong&gt;from people who have done it&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;We do not try to convince people to switch, only to help people who have already decided.&lt;/li&gt; 
   &lt;li&gt;‚ö†Ô∏èThis is a new cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The HOC Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/hoc/intro&quot;&gt;&lt;code&gt;/HOC.md&lt;/code&gt;&lt;/a&gt;) specifically teaches people to write HOCs with examples. 
  &lt;ul&gt; 
   &lt;li&gt;Familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/generics.html&quot;&gt;Generics&lt;/a&gt; is necessary.&lt;/li&gt; 
   &lt;li&gt;‚ö†Ô∏èThis is the newest cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Basic Cheatsheet Table of Contents&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-1-setup-typescript-with-react&quot;&gt;Section 1: Setup TypeScript with React&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usestate&quot;&gt;useState&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usereducer&quot;&gt;useReducer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useeffect&quot;&gt;useEffect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useref&quot;&gt;useRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useimperativehandle&quot;&gt;useImperativeHandle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#you-may-not-need-defaultprops&quot;&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#consuming-props-of-a-component-with-defaultprops&quot;&gt;Consuming Props of a Component with defaultProps&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#problem-statement&quot;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#solution&quot;&gt;Solution&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#misc-discussions-and-knowledge&quot;&gt;Misc Discussions and Knowledge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getderivedstatefromprops&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#extended-example&quot;&gt;Extended Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#option-1-using-react-error-boundary&quot;&gt;Option 1: Using react-error-boundary&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#options-2-writing-your-custom-error-boundary-component&quot;&gt;Options 2: Writing your custom error boundary component&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-types&quot;&gt;Troubleshooting Handbook: Types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-fixing-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-globals-images-and-other-non-ts-files&quot;&gt;Troubleshooting Handbook: Globals, Images and other non-TS files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources-1&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;
    &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing defaultProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#types-or-interfaces&quot;&gt;Types or Interfaces?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getDerivedStateFromProps&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-troubleshooting-handbook-types&quot;&gt;Basic Troubleshooting Handbook: Types&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;
      &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Bugs in official typings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-codebases-to-learn-from&quot;&gt;Recommended React + TypeScript codebases to learn from&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Section 1: Setup TypeScript with React&lt;/h1&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;good understanding of &lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/basic-types.html&quot;&gt;TypeScript Types&lt;/a&gt; (&lt;a href=&quot;http://2ality.com/2018/04/type-notation-typescript.html&quot;&gt;2ality&#39;s guide&lt;/a&gt; is helpful. If you‚Äôre an absolute beginner in TypeScript, check out &lt;a href=&quot;https://ts.chibicode.com/todo/&quot;&gt;chibicode‚Äôs tutorial&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;https://reactjs.org/docs/static-type-checking.html#typescript&quot;&gt;the TypeScript section in the official React docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=2&amp;amp;esModuleInterop=true&amp;amp;e=181#example/typescript-with-react&quot;&gt;the React section of the new TypeScript playground&lt;/a&gt; (optional: also step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This guide will always assume you are starting with the latest TypeScript version. Notes for older versions will be in expandable &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags.&lt;/p&gt; 
&lt;h2&gt;React + TypeScript Starter Kits&lt;/h2&gt; 
&lt;p&gt;Cloud setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwCwAUKJLHAN5wCuqWAyjMhhYANFx4BRAgSz44AXzhES5Snhi1GjLAA8W8XBAB2qeAGEInQ0KjjtycABsscALxwAFAEpXAPnaM4OANjeABtA0sYUR4Yc0iAXVcxPgEhdwAGT3oGAOTJaXx3L19-BkDAgBMIXE4QLCsAOhhgGCckgAMATQsgh2BcAGssCrgAEjYIqwVmutR27MC5LM0yuEoYTihDD1zAgB4K4AA3H13yvbAfbs5e-qGRiYspuBmsVD2Aekuz-YAjThgMCMcCMpj6gxcbGKLj8MTiVnck3gAGo4ABGTxyU6rcrlMF3OB1H5wT7-QFGbG4z6HE65ZYMOSMIA&quot;&gt;TypeScript Playground with React&lt;/a&gt; just if you are debugging types (and reporting issues), not for running code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ts.react.new&quot;&gt;CodeSandbox&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackblitz.com/edit/react-typescript-base&quot;&gt;Stackblitz&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local dev setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/typescript&quot;&gt;Next.js&lt;/a&gt;: &lt;code&gt;npx create-next-app -e with-typescript&lt;/code&gt; will create in your current folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-typescript&quot;&gt;Create React App&lt;/a&gt;: &lt;code&gt;npx create-react-app name-of-app --template typescript&lt;/code&gt; will create in new folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/build-tool.html#typescript&quot;&gt;Meteor&lt;/a&gt;: &lt;code&gt;meteor create --typescript name-of-my-new-typescript-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infinitered/ignite#use-ignite-andross-infinite-red-andross-boilerplate&quot;&gt;Ignite&lt;/a&gt; for React Native: &lt;code&gt;ignite new myapp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsdx.io/&quot;&gt;TSDX&lt;/a&gt;: &lt;code&gt;npx tsdx create mylib&lt;/code&gt; for Creating React+TS &lt;em&gt;libraries&lt;/em&gt;. (in future: &lt;a href=&quot;https://twitter.com/jaredpalmer/status/1346217789942591488&quot;&gt;TurboRepo&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Less mature tools still worth checking out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1282727239230996480?lang=en&quot;&gt;Vite&lt;/a&gt;: &lt;code&gt;npm init vite-app my-react-project --template react-ts&lt;/code&gt; (note - not yet v1.0, but very fast)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/#create-snowpack-app-(csa)&quot;&gt;Snowpack&lt;/a&gt;: &lt;code&gt;npx create-snowpack-app my-app --template app-template-react-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v2.docusaurus.io/docs/installation&quot;&gt;Docusaurus v2&lt;/a&gt; with &lt;a href=&quot;https://v2.docusaurus.io/docs/typescript-support&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v2.parceljs.org/languages/typescript/&quot;&gt;Parcel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpmorganchase/modular&quot;&gt;JP Morgan&#39;s &lt;code&gt;modular&lt;/code&gt;&lt;/a&gt;: CRA + TS + Yarn Workspaces toolkit. &lt;code&gt;yarn create modular-react-app &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Manual setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/basarat/typescript-react/tree/master/01%20bootstrap&quot;&gt;Basarat&#39;s guide&lt;/a&gt; for &lt;strong&gt;manual setup&lt;/strong&gt; of React + TypeScript + Webpack + Babel&lt;/li&gt; 
 &lt;li&gt;In particular, make sure that you have &lt;code&gt;@types/react&lt;/code&gt; and &lt;code&gt;@types/react-dom&lt;/code&gt; installed (&lt;a href=&quot;https://definitelytyped.org/&quot;&gt;Read more about the DefinitelyTyped project if you are unfamiliar&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;There are also many React + TypeScript boilerplates, please see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/recommended/resources/&quot;&gt;our Other Resources list&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Import React&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;
import * as ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/&quot;&gt;most futureproof way&lt;/a&gt; to import React. If you set &lt;code&gt;--allowSyntheticDefaultImports&lt;/code&gt; (or add &lt;code&gt;&quot;allowSyntheticDefaultImports&quot;: true&lt;/code&gt;) in your &lt;code&gt;tsconfig.json&lt;/code&gt; you can use more familiar imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Why &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; over &lt;code&gt;esModuleInterop&lt;/code&gt;? &lt;a href=&quot;https://twitter.com/drosenwasser/status/1003097042653073408&quot;&gt;Daniel Rosenwasser&lt;/a&gt; has said that it&#39;s better for webpack/parcel. For more discussion check out &lt;a href=&quot;https://github.com/wmonk/create-react-app-typescript/issues/214&quot;&gt;https://github.com/wmonk/create-react-app-typescript/issues/214&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You should also check &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;the new TypeScript docs for official descriptions between each compiler flag&lt;/a&gt;!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Section 2: Getting Started&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Function Components&lt;/h2&gt; 
&lt;p&gt;These can be written as normal functions that take a &lt;code&gt;props&lt;/code&gt; argument and return a JSX element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = { message: string }; /* could also use interface */
const App = ({ message }: AppProps) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You may see this in many React+TypeScript codebases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const App: React.FunctionComponent&amp;lt;{ message: string }&amp;gt; = ({ message }) =&amp;gt; (
  &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, the general consensus today is that &lt;code&gt;React.FunctionComponent&lt;/code&gt; (or the shorthand &lt;code&gt;React.FC&lt;/code&gt;) is &lt;a href=&quot;https://github.com/facebook/create-react-app/pull/8177&quot;&gt;discouraged&lt;/a&gt;. This is a nuanced opinion of course, but if you agree and want to remove &lt;code&gt;React.FC&lt;/code&gt; from your codebase, you can use &lt;a href=&quot;https://github.com/gndelia/codemod-replace-react-fc-typescript&quot;&gt;this jscodeshift codemod&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some differences from the &quot;normal function&quot; version:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;React.FunctionComponent&lt;/code&gt; is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It provides typechecking and autocomplete for static properties like &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note that there are some known issues using &lt;code&gt;defaultProps&lt;/code&gt; with &lt;code&gt;React.FunctionComponent&lt;/code&gt;. See &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;this issue for details&lt;/a&gt;. We maintain a separate &lt;code&gt;defaultProps&lt;/code&gt; section you can also look up.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It provides an implicit definition of &lt;code&gt;children&lt;/code&gt; (see below) - however there are some issues with the implicit &lt;code&gt;children&lt;/code&gt; type (e.g. &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006&quot;&gt;DefinitelyTyped#33006&lt;/a&gt;), and it might be better to be explicit about components that consume &lt;code&gt;children&lt;/code&gt;, anyway.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const Title: React.FunctionComponent&amp;lt;{ title: string }&amp;gt; = ({
  children,
  title,
}) =&amp;gt; &amp;lt;div title={title}&amp;gt;{children}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Using &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; instead&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;As of &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643&quot;&gt;@types/react 16.9.48&lt;/a&gt;, you can also use &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; type if you want to type &lt;code&gt;children&lt;/code&gt; explicitly. This is an interim solution until &lt;code&gt;FunctionComponent&lt;/code&gt; will accept no children by default (planned for &lt;code&gt;@types/react@^18.0.0&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}: Props) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo} {children}
    &amp;lt;/div&amp;gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo}
      {children}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;In the future&lt;/em&gt;, it may&amp;nbsp;automatically mark props as &lt;code&gt;readonly&lt;/code&gt;, though that&#39;s a moot point if the props object is destructured in the parameter list.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of &lt;code&gt;React.FunctionComponent&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;These patterns are not supported:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conditional rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyConditionalComponent = ({ shouldRender = false }) =&amp;gt;
  shouldRender ? &amp;lt;div /&amp;gt; : false; // don&#39;t do this in JS either
const el = &amp;lt;MyConditionalComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because due to limitations in the compiler, function components cannot return anything other than a JSX expression or &lt;code&gt;null&lt;/code&gt;, otherwise it complains with a cryptic error message saying that the other type is not assignable to &lt;code&gt;Element&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; Array(5).fill(&amp;lt;div /&amp;gt;);
const el2 = &amp;lt;MyArrayComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Array.fill&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unfortunately just annotating the function type will not help so if you really need to return other exotic types that React supports, you&#39;d need to perform a type assertion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; (Array(5).fill(&amp;lt;div /&amp;gt;) as any) as JSX.Element;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;Hooks are &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031&quot;&gt;supported in &lt;code&gt;@types/react&lt;/code&gt; from v16.8 up&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;useState&lt;/h2&gt; 
&lt;p&gt;Type inference works very well most of the time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [val, toggle] = React.useState(false);
// `val` is inferred to be a boolean
// `toggle` only takes booleans
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also the &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt; section if you need to use a complex type that you&#39;ve relied on inference for.&lt;/p&gt; 
&lt;p&gt;However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser | null&amp;gt;(null);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;useReducer&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; for reducer actions. Don&#39;t forget to define the return type of reducer, otherwise TypeScript will infer it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = React.useReducer(reducer, initialState);
  return (
    &amp;lt;&amp;gt;
      Count: {state.count}
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&amp;gt;
        -
      &amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&amp;gt;
        +
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;In case you use the &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt; library to write reducer function, It provides a convenient helper of the format &lt;code&gt;Reducer&amp;lt;State, Action&amp;gt;&lt;/code&gt; which takes care of the return type for you.&lt;/p&gt; 
&lt;p&gt;So the above reducer example becomes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Reducer } from &#39;redux&#39;;

export function reducer: Reducer&amp;lt;AppState, Action&amp;gt;() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;useEffect&lt;/h2&gt; 
&lt;p&gt;When using &lt;code&gt;useEffect&lt;/code&gt;, take care not to return anything other than a function or &lt;code&gt;undefined&lt;/code&gt;, otherwise both TypeScript and React will yell at you. This can be subtle when using arrow functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(
    () =&amp;gt;
      setTimeout(() =&amp;gt; {
        /* do stuff */
      }, timerMs),
    [timerMs]
  );
  // bad example! setTimeout implicitly returns a number
  // because the arrow function body isn&#39;t wrapped in curly braces
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(() =&amp;gt; {
    setTimeout(() =&amp;gt; {
      /* do stuff */
    }, timerMs);
  }, [timerMs]);
  // better; use the void keyword to make sure you return undefined
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;useRef&lt;/h2&gt; 
&lt;p&gt;When using &lt;code&gt;useRef&lt;/code&gt;, you have two options when creating a ref container that does not have an initial value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const ref1 = useRef&amp;lt;HTMLElement&amp;gt;(null!);
const ref2 = useRef&amp;lt;HTMLElement&amp;gt;(null);
const ref3 = useRef&amp;lt;HTMLElement | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see the difference in &lt;a href=&quot;https://www.typescriptlang.org/play#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwCwAUI7hAHarwCCYYcAvHAAUASn4A+OAG9GjOHAD0CBLLnKGcxHABiwKBzgQwMYGxS4WUACbBWAczgwIcSxFwBXEFlYxkxtgDoVTQBJVmBjZAAbOAA3KLcsOAB3YEjogCNE1jc0-zgAGQBPG3tHOAAVQrAsAGVcKGAjOHTCuDdUErhWNgBabLSUVFQsWBNWA2qoX2hA9VU4AGFKXyx0AFk3H3TIxOwCOAB5dIArLHwgpHcoSm84MGJJmFbgdG74ZcsDVkjC2Y01f7yFQsdjvLAEACM-EwVBg-naWD2AB4ABLlNb5GpgZCsACiO083jEgn6kQAhMJ6HMQfpKJCFpE2IkBNg8HCEci0RisTj8VhCTBiaSKVSVIoAaoLnBQuFgFFYvFEikBpkujkMps4FgAB7VfCdLmY7F4gleOFwAByEHg7U63VYfXVg2Go1MhhG0ygf3mAHVUtF6jgYLtwUdTvguta4Bstjs9mGznCpVcbvB7u7YM90B8vj9vYgLkDqWxaeCAEzQ1n4eHDTnoo2801EknqykyObii5SmpnNifA5GMZmCzWOwOJwudwC3xjKUyiLROKRBLJf3NLJO9KanV64xj0koVifQ08k38s1Sv0DJZBxIx5DbRGhk6J5Nua5mu4PEZPOAvSNgsgnxsHmXZzIgRZyDSYIEAAzJWsI1k+BCovWp58gKcAAD5qmkQqtqKHbyCexoYRecw7IQugcAs76ptCdIQv4KZmoRcjyMRaGkU28A4aSKiUXAwwgpYtEfrcAh0mWzF0ax7bsZx3Lceetx8eqAlYPAMAABa6KJskSXAdKwTJ4kwGxCjyKy-bfK05SrDA8mWVagHAbZeScOY0CjqUE6uOgqDaRAOSfKqOYgb8KiMaZ9GSeCEIMkyMVyUwRHWYc7nSvAgUQEk6AjMQXpReWyWGdFLHeBZHEuTCQEZT8xVwaV8BxZCzUWZQMDvuMghBHASJVnCWhTLYApiH1chIqgxpGeCfCSIxAC+Yj3o+8YvvgSLyNNOLjeBGhTTNdLzVJy3reGMBbTtrB7RoB3XbNBAneCsHLatcbPhdV3GrdB1WYhw3IKNZq-W2DCLYRO7QPAljgsgORcDwVJAA&quot;&gt;this playground&lt;/a&gt;, thanks to &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/388&quot;&gt;this discussion with @rajivpunjabi&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first option will bypass nullchecks on &lt;code&gt;ref1.current&lt;/code&gt;, and is intended to be passed in to built-in &lt;code&gt;ref&lt;/code&gt; attributes that React will manage (because React handles setting the &lt;code&gt;current&lt;/code&gt; value for you).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;code&gt;null!&lt;/code&gt; is a non-null assertion operator (the &lt;code&gt;!&lt;/code&gt;). It asserts that any expression before it is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so if you have &lt;code&gt;useRef&amp;lt;HTMLElement&amp;gt;(null!)&lt;/code&gt; it means that you&#39;re instantiating the ref with a current value of &lt;code&gt;null&lt;/code&gt; but lying to TypeScript that it&#39;s not &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function MyComponent() {
  const ref1 = useRef&amp;lt;HTMLDivElement&amp;gt;(null!);
  useEffect(() =&amp;gt; {
    doSomethingWith(ref1.current);
    // TypeScript won&#39;t require null-check e.g. ref1 &amp;amp;&amp;amp; ref1.current
  });
  return &amp;lt;div ref={ref1}&amp;gt; etc &amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The second option will infer a &lt;code&gt;RefObject&lt;/code&gt; instead of a &lt;code&gt;MutableRefObject&lt;/code&gt;. This means there will be a type error ifyou try to assign to &lt;code&gt;ref2.current&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The third option will make &lt;code&gt;ref3.current&lt;/code&gt; mutable, and is intended for &quot;instance variables&quot; that you manage yourself.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function TextInputWithFocusButton() {
  // initialise with null, but tell TypeScript we are looking for an HTMLInputElement
  const inputEl = React.useRef&amp;lt;HTMLInputElement&amp;gt;(null);
  const onButtonClick = () =&amp;gt; {
    // strict null checks need us to check if inputEl and current exist.
    // but once current exists, it is of type HTMLInputElement, thus it
    // has the method focus! ‚úÖ
    if (inputEl &amp;amp;&amp;amp; inputEl.current) {
      inputEl.current.focus();
    }
  };
  return (
    &amp;lt;&amp;gt;
      {/* in addition, inputEl only can be used with input elements. Yay! */}
      &amp;lt;input ref={inputEl} type=&quot;text&quot; /&amp;gt;
      &amp;lt;button onClick={onButtonClick}&amp;gt;Focus the input&amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wFgAoCzAVwDsNgJa4AVJADxgElaxqYA6sBgALAGIQ01AM4AhfjCYAKAJRwA3hThwA9DrjBaw4CgA2waUjgB3YSLi1qp0wBo4AI35wYSZ6wCeYEgAymhQwGDw1lYoRHCmEBAA1oYA5nCY0HAozAASLACyADI8fDAAoqZIIEi0MFpwaEzS8IZllXAAvIjEMAB0MkjImAA8+cWl-JXVtTAAfEqOzioA3A1NtC1wTPIwirQAwuZoSV1wql1zGg3aenAt4RgOTqaNIkgn0g5ISAAmcDJvBA3h9TsBMAZeFNXjl-lIoEQ6nAOBZ+jddPpPPAmGgrPDEfAUS1pG5hAYvhAITBAlZxiUoRUqjU6m5RIDhOi7iIUF9RFYaqIIP9MlJpABCOCAUHJ0eDzm1oXAAGSKyHtUx9fGzNSacjaPWq6Ea6gI2Z9EUyVRrXV6gC+DRtVu0RBgxuYSnRIzm6O06h0ACpIdlfr9jExSQyOkxTP5GjkPFZBv9bKIDYSmbNpH04ABNFD+CV+nR2636kby+BETCddTlyo27w0zr4HycfC6L0lvUjLH7baHY5Jas7BRMI7AE42uYSUXed6pkY6HtMDulnQruCrCg2oA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;example from &lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;Stefan Baumgartner&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;useImperativeHandle&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;we dont have much here, but this is from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/106&quot;&gt;a discussion in our issues&lt;/a&gt;. Please contribute if you have anything to add!&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ListProps&amp;lt;ItemType&amp;gt; = {
  items: ItemType[];
  innerRef?: React.Ref&amp;lt;{ scrollToItem(item: ItemType): void }&amp;gt;;
};

function List&amp;lt;ItemType&amp;gt;(props: ListProps&amp;lt;ItemType&amp;gt;) {
  useImperativeHandle(props.innerRef, () =&amp;gt; ({
    scrollToItem() {},
  }));
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Hooks&lt;/h2&gt; 
&lt;p&gt;If you are returning an array in your Custom Hook, you will want to avoid type inference as TypeScript will infer a union type (when you actually want different types in each position of the array). Instead, use &lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#const-assertions&quot;&gt;TS 3.4 const assertions&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?target=5&amp;amp;jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuRgZyQBkIKACbBmAcwAUASjgBvCnDhoO3eAG1g3AcNFiANHF4wAyjBQwkAXTgBeRMRgA6HklPmkEzCgA2vKQG4FJRV4b0EhWzgJFAAFHBBNJAAuODjcRIAeFGYATwA+GRs8uSDFIzcLCRgoRiQA0rgiGEYoTlj4xMdMUR9vHIlpW2Lys0qvXzr68kUAX0DpxqRm1rgNLXDdAzDhaxRuYOZVfzgAehO4UUwkKH21ACMICG9UZgMYHLAkCEw4baFrUSqVARb5RB5PF5wAA+cHen1BfykaksFBmQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This way, when you destructure you actually get the right types based on destructure position.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you are &lt;a href=&quot;https://github.com/babel/babel/issues/9800&quot;&gt;having trouble with const assertions&lt;/a&gt;, you can also assert or define the function return types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as [
    boolean,
    (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; Promise&amp;lt;any&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A helper function that automatically types tuples can also be helpful if you write a lot of custom hooks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function tuplify&amp;lt;T extends any[]&amp;gt;(...elements: T) {
  return elements;
}

function useArray() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return [numberValue, functionValue]; // type is (number | (() =&amp;gt; void))[]
}

function useTuple() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return tuplify(numberValue, functionValue); // type is [number, () =&amp;gt; void]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Note that the React team recommends that custom hooks that return more than two values should use proper objects instead of tuples, however.&lt;/p&gt; 
&lt;h2&gt;More Hooks + TypeScript reading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&lt;/li&gt; 
 &lt;li&gt;https://fettblog.eu/typescript-react/hooks/#useref&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are writing a React Hooks library, don&#39;t forget that you should also expose your types for users to use.&lt;/p&gt; 
&lt;h2&gt;Example React Hooks + TypeScript Libraries:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/mweststrate/use-st8&lt;/li&gt; 
 &lt;li&gt;https://github.com/palmerhq/the-platform&lt;/li&gt; 
 &lt;li&gt;https://github.com/sw-yx/hooks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Class Components&lt;/h2&gt; 
&lt;p&gt;Within TypeScript, &lt;code&gt;React.Component&lt;/code&gt; is a generic type (aka &lt;code&gt;React.Component&amp;lt;PropType, StateType&amp;gt;&lt;/code&gt;), so you want to provide it with (optional) prop and state type parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  // using `interface` is also ok
  message: string;
};
type MyState = {
  count: number; // like this
};
class App extends React.Component&amp;lt;MyProps, MyState&amp;gt; {
  state: MyState = {
    // optional second annotation for better type inference
    count: 0,
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgFlqAFHMAZzgF44BvCuHAD0QuAFd2wAHYBzOAANpMJFEzok8uME4oANuwhwIAawFwQSduxQykALjjsYUaTIDcFAL4fyNOo2oAZRgUZW4+MzQIMSkYBykxEAAjFTdhUV1gY3oYAAttLx80XRQrOABBMDA4JAAPZSkAE05kdBgAOgBhXEgpJFiAHiZWCA4AGgDg0KQAPgjyQSdphyYpsJ5+BcF0ozAYYAgpPUckKKa4FCkpCBD9w7hMaDgUmGUoOD96aUwVfrQkMyCKIxOJwAAMZm8ZiITRUAAoAJTzbZwIgwMRQKRwOGA7YDRrAABuM1xKN4eW07TAbHY7QsVhsSE8fAptKWynawNinlJcAGQgJxNxCJ8gh55E8QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Don&#39;t forget that you can export/import/extend these types/interfaces for reuse.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;It isn&#39;t strictly necessary to annotate the &lt;code&gt;state&lt;/code&gt; class property, but it allows better type inference when accessing &lt;code&gt;this.state&lt;/code&gt; and also initializing the state.&lt;/p&gt; 
&lt;p&gt;This is because they work in two different ways, the 2nd generic type parameter will allow &lt;code&gt;this.setState()&lt;/code&gt; to work correctly, because that method comes from the base class, but initializing &lt;code&gt;state&lt;/code&gt; inside the component overrides the base implementation so you have to make sure that you tell the compiler that you&#39;re not actually doing anything different.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You often see sample code include &lt;code&gt;readonly&lt;/code&gt; to mark props and state immutable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  readonly message: string;
};
type MyState = {
  readonly count: number;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is not necessary as &lt;code&gt;React.Component&amp;lt;P,S&amp;gt;&lt;/code&gt; already marks them as immutable. (&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26813&quot;&gt;See PR and discussion!&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Class Methods&lt;/strong&gt;: Do it like normal, but just remember any arguments for your functions also need to be typed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{ message: string }, { count: number }&amp;gt; {
  state = { count: 0 };
  render() {
    return (
      &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
  increment = (amt: number) =&amp;gt; {
    // like this
    this.setState((state) =&amp;gt; ({
      count: state.count + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN5wQSBigDmSAFxw6MKMB5q4AXwA0cRWggBXHjG09rIAEZIoJgHwWKcHTBTccAC8FnBWtvZwAAwmANw+cET8bgAUAJTe5L6+RDDWUDxwKQnZcLJ8wABucBA8YtTAaADWQfLpwV4wABbAdCIGaETKdikAjGnGHiWlFt29ImA4YH3KqhrGsz19ugFIIuF2xtO+sgD0FZVTWdlp8ddH1wNDMsFFKCCRji5uGUFe8tNTqc4A0mkg4HM6NNISI6EgYABlfzcFI7QJ-IoA66lA6RNF7XFwADUcHeMGmxjStwSxjuxiAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Class Properties&lt;/strong&gt;: If you need to declare class properties for later use, just declare it like &lt;code&gt;state&lt;/code&gt;, but without assignment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  pointer: number; // like this
  componentDidMount() {
    this.pointer = 3;
  }
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} and {this.pointer}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN4U4cEEgYoA5kgBccOjCjAeGgNwUAvgD44i8sshHuUXTwCuIAEZIoJuAHo-OGpgAGskOBgAC2A6JTg0SQhpHhgAEWA+AFkIVxSACgBKGzjlKJiRBxTvOABeOABmMzs4cziifm9C4ublIhhXKB44PJLlOFk+YAA3S1GxmzK6CpwwJdV1LXM4FH4F6KXKp1aesdk-SZnRgqblY-MgA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Typing getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be implemented using hooks which can also help set up memoization.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As per &lt;a href=&quot;https://twitter.com/dan_abramov/status/1133878326358171650&quot;&gt;this tweet&lt;/a&gt;, defaultProps will eventually be deprecated. You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://twitter.com/hswolff/status/1133759319571345408&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The consensus is to use object default values.&lt;/p&gt; 
&lt;p&gt;Function Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age?: number };

const Greet = ({ age = 21 }: GreetProps) =&amp;gt; // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Class Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = {
  age?: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  render() {
    const { age = 21 } = this.props;
    /*...*/
  }
}

let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Type inference improved greatly for &lt;code&gt;defaultProps&lt;/code&gt; in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0+&lt;/a&gt;, although &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61&quot;&gt;some edge cases are still problematic&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Function Components&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age: number } &amp;amp; typeof defaultProps;
const defaultProps = {
  age: 21,
};

const Greet = (props: GreetProps) =&amp;gt; {
  // etc
};
Greet.defaultProps = defaultProps;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAOKVYwAKxY6ALxwA3igDmWAFxwAdgFcQAIyxQ4AXzgAyOM1YQCcACZYCyeQBte-VPVwRZqeCbOXrEAXGEi6cCdLgAJgBGABo6dXo6e0d4TixuLzgACjAbGXjuPg9UAEovAD5RXzhKGHkoWTgAHiNgADcCkTScgDpkSTgAeiQFZVVELvVqrrrGiPpMmFaXcytsz2FZtwXbOiA&quot;&gt;See this in TS Playground&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Class components&lt;/strong&gt;, there are &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/103#issuecomment-481061483&quot;&gt;a couple ways to do it&lt;/a&gt;(including using the &lt;code&gt;Pick&lt;/code&gt; utility type) but the recommendation is to &quot;reverse&quot; the props definition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = typeof Greet.defaultProps &amp;amp; {
  age: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = {
    age: 21,
  };
  /*...*/
}

// Type-checks! No type assertions needed!
let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; nuance for library authors&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The above implementations work fine for App creators, but sometimes you want to be able to export &lt;code&gt;GreetProps&lt;/code&gt; so that others can consume it. The problem here is that the way &lt;code&gt;GreetProps&lt;/code&gt; is defined, &lt;code&gt;age&lt;/code&gt; is a required prop when it isn&#39;t because of &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The insight to have here is that &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/66#issuecomment-453878710&quot;&gt;&lt;code&gt;GreetProps&lt;/code&gt; is the &lt;em&gt;internal&lt;/em&gt; contract for your component, not the &lt;em&gt;external&lt;/em&gt;, consumer facing contract&lt;/a&gt;. You could create a separate type specifically for export, or you could make use of the &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; utility:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// internal contract, should not be exported out
type GreetProps = {
  age?: number;
};

class Greet extends Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = { age: 21 };
}

// external contract
export type ApparentGreetProps = JSX.LibraryManagedAttributes&amp;lt;
  typeof Greet,
  GreetProps
&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;``This will work properly, although hovering over&lt;code&gt;ApparentGreetProps&lt;/code&gt;may be a little intimidating. You can reduce this boilerplate with the`ComponentProps` utility detailed below.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Consuming Props of a Component with defaultProps&lt;/h2&gt; 
&lt;p&gt;A component with &lt;code&gt;defaultProps&lt;/code&gt; may seem to have some required props that actually aren&#39;t.&lt;/p&gt; 
&lt;h3&gt;Problem Statement&lt;/h3&gt; 
&lt;p&gt;Here&#39;s what you want to do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface IProps {
  name: string;
}
const defaultProps = {
  age: 25,
};
const GreetComponent = ({ name, age }: IProps &amp;amp; typeof defaultProps) =&amp;gt; (
  &amp;lt;div&amp;gt;{`Hello, my name is ${name}, ${age}`}&amp;lt;/div&amp;gt;
);
GreetComponent.defaultProps = defaultProps;

const TestComponent = (props: React.ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// Property &#39;age&#39; is missing in type &#39;{ name: string; }&#39; but required in type &#39;{ age: number; }&#39;
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Solution&lt;/h3&gt; 
&lt;p&gt;Define a utility that applies &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ComponentProps&amp;lt;T&amp;gt; = T extends
  | React.ComponentType&amp;lt;infer P&amp;gt;
  | React.Component&amp;lt;infer P&amp;gt;
  ? JSX.LibraryManagedAttributes&amp;lt;T, P&amp;gt;
  : never;

const TestComponent = (props: ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// No error
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAMImQB2W3MABWJhUAHgAqAPjgBeOOLhYAHjD4ATdNjwwAdJ3ARe-cSyyjg3AlihwB0gD6Yqu-Tz4xzl67cl04cAH44ACkAZQANHQAZYAAjKGQoJgBZZG5kAHMsNQBBGBgoOIBXVTFxABofPzgALjheADdrejoLVSgCPDYASSEIETgAb2r0kCw61AKLDPoAXzpcQ0m4NSxOooAbQWF0OWH-TPG4ACYAVnK6WfpF7mWAcUosGFdDd1k4AApB+uQxysO4LM6r0dnAAGRwZisCAEFZrZCbbb9VAASlk0g+1VEamADUkgwABgAJLAbDYQSogJg-MZwYDoAAkg1GWFmlSZh1mBNmogA9Di8XQUfQHlgni8jLpVustn0BnJpQjZTsWrzeXANsh2gwbstxFhJhK3nIPmAdnUjfw5WIoVgYXBReKuK9+JI0TJpPs4JQYEUoNw4KIABYARjgvN8VwYargADkIIooMQoAslvBSe8JAbns7JTSsDIyAQIBAyOHJDQgA&quot;&gt;&lt;em&gt;See this in TS Playground&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Misc Discussions and Knowledge&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&lt;/li&gt; 
 &lt;li&gt;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&lt;/li&gt; 
 &lt;li&gt;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is just the current state and may be fixed in future.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;For TypeScript 2.9 and earlier, there&#39;s more than one way to do it, but this is the best advice we&#39;ve yet seen:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = Required&amp;lt;typeof MyComponent.defaultProps&amp;gt; &amp;amp; {
  /* additional props here */
};

export class MyComponent extends React.Component&amp;lt;Props&amp;gt; {
  static defaultProps = {
    foo: &quot;foo&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our former recommendation used the &lt;code&gt;Partial type&lt;/code&gt; feature in TypeScript, which means that the current interface will fulfill a partial version on the wrapped interface. In that way we can extend defaultProps without any changes in the types!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface IMyComponentProps {
  firstProp?: string;
  secondProp: IPerson[];
}

export class MyComponent extends React.Component&amp;lt;IMyComponentProps&amp;gt; {
  public static defaultProps: Partial&amp;lt;IMyComponentProps&amp;gt; = {
    firstProp: &quot;default&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The problem with this approach is it causes complex issues with the type inference working with &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;. Basically it causes the compiler to think that when creating a JSX expression with that component, that all of its props are optional.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt; and &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/61&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Typing Component Props&lt;/h2&gt; 
&lt;p&gt;This is intended as a basic orientation and reference for React developers familiarizing with TypeScript.&lt;/p&gt; 
&lt;h2&gt;Basic Prop Types Examples&lt;/h2&gt; 
&lt;p&gt;A list of TypeScript types you will likely use in a React+TypeScript app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = {
  message: string;
  count: number;
  disabled: boolean;
  /** array of a type! */
  names: string[];
  /** string literals to specify exact string values, with a union type to join them together */
  status: &quot;waiting&quot; | &quot;success&quot;;
  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */
  obj: object;
  obj2: {}; // almost the same as `object`, exactly the same as `Object`
  /** an object with any number of properties (PREFERRED) */
  obj3: {
    id: string;
    title: string;
  };
  /** array of objects! (common) */
  objArr: {
    id: string;
    title: string;
  }[];
  /** a dict object with any number of properties of the same type */
  dict1: {
    [key: string]: MyTypeHere;
  };
  dict2: Record&amp;lt;string, MyTypeHere&amp;gt;; // equivalent to dict1
  /** any function as long as you don&#39;t invoke it (not recommended) */
  onSomething: Function;
  /** function that doesn&#39;t take or return anything (VERY COMMON) */
  onClick: () =&amp;gt; void;
  /** function with named prop (VERY COMMON) */
  onChange: (id: number) =&amp;gt; void;
  /** alternative function type syntax that takes an event (VERY COMMON) */
  onClick(event: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void;
  /** an optional prop (VERY COMMON!) */
  optional?: OptionalType;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we have used the TSDoc &lt;code&gt;/** comment */&lt;/code&gt; style here on each prop. You can and are encouraged to leave descriptive comments on reusable components. For a fuller example and discussion, see our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/misc_concerns/#commenting-components&quot;&gt;Commenting Components&lt;/a&gt; section in the Advanced Cheatsheet.&lt;/p&gt; 
&lt;h2&gt;Useful React Prop Type Examples&lt;/h2&gt; 
&lt;p&gt;Relevant for components that accept other React components as props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare interface AppProps {
  children1: JSX.Element; // bad, doesnt account for arrays
  children2: JSX.Element | JSX.Element[]; // meh, doesn&#39;t accept strings
  children3: React.ReactChildren; // despite the name, not at all an appropriate type; it is a utility
  children4: React.ReactChild[]; // better, accepts array children
  children: React.ReactNode; // best, accepts everything (see edge case below)
  functionChildren: (name: string) =&amp;gt; React.ReactNode; // recommended function as a child render prop type
  style?: React.CSSProperties; // to pass through style props
  onChange?: React.FormEventHandler&amp;lt;HTMLInputElement&amp;gt;; // form events! the generic parameter is the type of event.target
  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring
  props: Props &amp;amp; React.ComponentPropsWithoutRef&amp;lt;&quot;button&quot;&amp;gt;; // to impersonate all the props of a button element and explicitly not forwarding its ref
  props2: Props &amp;amp; React.ComponentPropsWithRef&amp;lt;MyButtonWithForwardRef&amp;gt;; // to impersonate all the props of MyButtonForwardedRef and explicitly forwarding its ref
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This code typechecks but has a runtime error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = {
  children: React.ReactNode;
};

function Comp({ children }: Props) {
  return &amp;lt;div&amp;gt;{children}&amp;lt;/div&amp;gt;;
}
function App() {
  return &amp;lt;Comp&amp;gt;{{}}&amp;lt;/Comp&amp;gt;; // Runtime Error: Objects not valid as React Child!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because &lt;code&gt;ReactNode&lt;/code&gt; includes &lt;code&gt;ReactFragment&lt;/code&gt; which allows a &lt;code&gt;{}&lt;/code&gt; type, which is &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37596#issue-480260937&quot;&gt;too wide&lt;/a&gt;. Fixing this would break a lot of libraries, so for now you just have to be mindful that &lt;code&gt;ReactNode&lt;/code&gt; is not absolutely bulletproof.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/357&quot;&gt;Thanks @pomle for raising this.&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Quote &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;@ferdaber&lt;/a&gt;: A more technical explanation is that a valid React node is not the same thing as what is returned by &lt;code&gt;React.createElement&lt;/code&gt;. Regardless of what a component ends up rendering, &lt;code&gt;React.createElement&lt;/code&gt; always returns an object, which is the &lt;code&gt;JSX.Element&lt;/code&gt; interface, but &lt;code&gt;React.ReactNode&lt;/code&gt; is the set of all possible return values of a component.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;JSX.Element&lt;/code&gt; -&amp;gt; Return value of &lt;code&gt;React.createElement&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;React.ReactNode&lt;/code&gt; -&amp;gt; Return value of a component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/129&quot;&gt;More discussion: Where ReactNode does not overlap with JSX.Element&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Types or Interfaces?&lt;/h2&gt; 
&lt;p&gt;You can use either Types or Interfaces to type Props and State, so naturally the question arises - which do you use?&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Use Interface until You Need Type - &lt;a href=&quot;https://twitter.com/orta/status/1356129195835973632?s=20&quot;&gt;orta&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;More Advice&lt;/h3&gt; 
&lt;p&gt;Here&#39;s a helpful rule of thumb:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;always use &lt;code&gt;interface&lt;/code&gt; for public API&#39;s definition when authoring a library or 3rd party ambient type definitions, as this allows a consumer to extend them via &lt;em&gt;declaration merging&lt;/em&gt; if some definitions are missing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consider using &lt;code&gt;type&lt;/code&gt; for your React Component Props and State, for consistency and because it is more constrained.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read more about the reasoning behind this rule of thumb in &lt;a href=&quot;https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c&quot;&gt;Interface vs Type alias in TypeScript 2.7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The TypeScript Handbook now also includes guidance on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces&quot;&gt;Differences Between Type Aliases and Interfaces&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: At scale, there are performance reasons to prefer interfaces (&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance#preferring-interfaces-over-intersections&quot;&gt;see official Microsoft notes on this&lt;/a&gt;) but &lt;a href=&quot;https://news.ycombinator.com/item?id=25201887&quot;&gt;take this with a grain of salt&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Types are useful for union types (e.g. &lt;code&gt;type MyType = TypeA | TypeB&lt;/code&gt;) whereas Interfaces are better for declaring dictionary shapes and then &lt;code&gt;implementing&lt;/code&gt; or &lt;code&gt;extending&lt;/code&gt; them.&lt;/p&gt; 
&lt;h3&gt;Useful table for Types vs Interfaces&lt;/h3&gt; 
&lt;p&gt;It&#39;s a nuanced topic, don&#39;t get too hung up on it. Here&#39;s a handy table:&lt;/p&gt; 
&lt;p&gt;| Aspect | Type | Interface | | ----------------------------------------------- | :--: | :-------: | | Can describe functions | ‚úÖ | ‚úÖ | | Can describe constructors | ‚úÖ | ‚úÖ | | Can describe tuples | ‚úÖ | ‚úÖ | | Interfaces can extend it | ‚ö†Ô∏è | ‚úÖ | | Classes can extend it | üö´ | ‚úÖ | | Classes can implement it (&lt;code&gt;implements&lt;/code&gt;) | ‚ö†Ô∏è | ‚úÖ | | Can intersect another one of its kind | ‚úÖ | ‚ö†Ô∏è | | Can create a union with another one of its kind | ‚úÖ | üö´ | | Can be used to create mapped types | ‚úÖ | üö´ | | Can be mapped over with mapped types | ‚úÖ | ‚úÖ | | Expands in error messages and logs | ‚úÖ | üö´ | | Can be augmented | üö´ | ‚úÖ | | Can be recursive | ‚ö†Ô∏è | ‚úÖ |&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è In some cases&lt;/p&gt; 
&lt;p&gt;(source: &lt;a href=&quot;https://twitter.com/karoljmajewski/status/1082413696075382785&quot;&gt;Karol Majewski&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be easily achieved using hooks which can also help set up memoization easily.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Forms and Events&lt;/h2&gt; 
&lt;p&gt;If performance is not an issue (and it usually isn&#39;t!), inlining handlers is easiest as you can just use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing&quot;&gt;type inference and contextual typing&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const el = (
  &amp;lt;button
    onClick={(event) =&amp;gt; {
      /* event will be correctly typed automatically! */
    }}
  /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you need to define your event handler separately, IDE tooling really comes in handy here, as the @type definitions come with a wealth of typing. Type what you are looking for and usually the autocomplete will help you out. Here is what it looks like for an &lt;code&gt;onChange&lt;/code&gt; for a form event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type State = {
  text: string;
};
class App extends React.Component&amp;lt;Props, State&amp;gt; {
  state = {
    text: &quot;&quot;,
  };

  // typing on RIGHT hand side of =
  onChange = (e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void =&amp;gt; {
    this.setState({ text: e.currentTarget.value });
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.text} onChange={this.onChange} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2KA9Drg8IcMDjB1tcblwBccOjCjAeAcwDcmlRQB8W8ovso3HAAvL6KilYwtgBE0R7ulH5wepYAnmBOznAQPIgAkgDiABIAKnAAFij8dsB8SNmYIZo5YpUu9aEAFEi2QhgiAGLQIACiAG4ysqUAsgAyeTxgAK4wI9RIIDJeAJS2YxC1IT5KFjDlwHQidEgwAMowgUidSpacUewiaEtQRDwwJSgoM4biIxihqEt6iptglFCpYXBfnUoJ1tmFwkQYN9cp0LIpZHxgGMvHjwrInMt4DB0khgtFItE4GCIbSlGcLlcHtwRJEVNkeK0qsDgmzzpcWm1gXydCSkuE4LIdITiRYYR4KCogA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Instead of typing the arguments and return values with &lt;code&gt;React.FormEvent&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt;, you may alternatively apply types to the event handler itself (&lt;em&gt;contributed by @TomasHubelbauer&lt;/em&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;  // typing on LEFT hand side of =
  onChange: React.ChangeEventHandler&amp;lt;HTMLInputElement&amp;gt; = (e) =&amp;gt; {
    this.setState({text: e.currentTarget.value})
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The first method uses an inferred method signature &lt;code&gt;(e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void&lt;/code&gt; and the second method enforces a type of the delegate provided by &lt;code&gt;@types/react&lt;/code&gt;. So &lt;code&gt;React.ChangeEventHandler&amp;lt;&amp;gt;&lt;/code&gt; is simply a &quot;blessed&quot; typing by &lt;code&gt;@types/react&lt;/code&gt;, whereas you can think of the inferred method as more... &lt;em&gt;artisanally hand-rolled&lt;/em&gt;. Either way it&#39;s a good pattern to know. &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/24&quot;&gt;See our Github PR for more&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Typing onSubmit, with Uncontrolled components in a Form&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you don&#39;t quite care about the type of the event, you can just use React.SyntheticEvent. If your target form has custom named inputs that you&#39;d like to access, you can use type widening:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;form
  ref={formRef}
  onSubmit={(e: React.SyntheticEvent) =&amp;gt; {
    e.preventDefault();
    const target = e.target as typeof e.target &amp;amp; {
      email: { value: string };
      password: { value: string };
    };
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    // etc...
  }}
&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Email:
      &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Password:
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Log in&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGctoRlM4BeRYmAOgFc6kLABQBKClVoM4AMSbs4o9gD4FFOHAA8mJmrhFMbAN7aozJJgC+u2gGVeAIxDAYRoUgBcndDxsBPGjAAFkgwwGgAogBuSAEiynCGuupI3GBE0QEAIuYovAA2MKIA3Elw1PTwMChQAOYh8ilVtfUodHAwvmBIEKyN1XXwAGQJpckgKMB5noZwkSh5vB5wDFDANDVwFiXk6rtwYK10AO7QACbTs-OLnitrG1ulDzu75VJI45PyTQPc7xN53DmCyQRTgAHowe1Okg0ME0ABrOgAQlKr3gBzoxzOX36IVShxOUFOgKuIPBkI6XVhMMRKOe6ghcBCaG4rN0Fis5CUug0p2AkW59M0eRQ9iQeUFe3U4Q+U1GmjWYF4lWhbAARH9Jmq4DQUCAkOrNXltWDJbsNGCRWKJTywXyBTz7Wb1BoreLnbsAAoEs7ueUaRXKqFddUYrFE7W6-Whn0R8Eei1um3PC1Ox38hOBlUhtV0BxOGDaoGLdUAGQgGzWJrNqYzFAtJhAgpEQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Of course, if you&#39;re making any sort of significant form, &lt;a href=&quot;https://jaredpalmer.com/formik&quot;&gt;you should use Formik&lt;/a&gt; or &lt;a href=&quot;https://react-hook-form.com/&quot;&gt;React Hook Form&lt;/a&gt;, which are written in TypeScript.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Context&lt;/h2&gt; 
&lt;h2&gt;Basic Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

interface AppContextInterface {
  name: string;
  author: string;
  url: string;
}

const AppCtx = React.createContext&amp;lt;AppContextInterface | null&amp;gt;(null);

// Provider in your app

const sampleAppContext: AppContextInterface = {
  name: &quot;Using React Context in a Typescript App&quot;,
  author: &quot;thehappybug&quot;,
  url: &quot;http://www.example.com&quot;,
};

export const App = () =&amp;gt; (
  &amp;lt;AppCtx.Provider value={sampleAppContext}&amp;gt;...&amp;lt;/AppCtx.Provider&amp;gt;
);

// Consume in your app

export const PostInfo = () =&amp;gt; {
  const appContext = React.useContext(AppCtx);
  return (
    &amp;lt;div&amp;gt;
      Name: {appContext.name}, Author: {appContext.author}, Url:{&quot; &quot;}
      {appContext.url}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://reactjs.org/docs/context.html#classcontexttype&quot;&gt;Class.contextType&lt;/a&gt; or &lt;a href=&quot;https://reactjs.org/docs/context.html#contextconsumer&quot;&gt;Context.Consumer&lt;/a&gt; API, let us know if you have trouble with that.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/97&quot;&gt;Thanks to @AlvSovereign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Extended Example&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; with an empty object as default value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ContextState {
  // set the type of state you want to handle with context e.g.
  name: string | null;
}
//set an empty object as default state
const Context = React.createContext({} as ContextState);
// set up context provider as you normally would in JavaScript [React Context API](https://reactjs.org/docs/context.html#api)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;strong&gt;no &lt;code&gt;defaultValue&lt;/code&gt;, yet no need to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as React from &quot;react&quot;;

const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);

function EnthusasticGreeting() {
  const currentUser = React.useContext(currentUserContext);
  return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;currentUserContext.Provider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/currentUserContext.Provider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice the explicit type arguments which we need because we don&#39;t have a default &lt;code&gt;string&lt;/code&gt; value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);
//                                             ^^^^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;along with the non-null assertion to tell TypeScript that &lt;code&gt;currentUser&lt;/code&gt; is definitely going to be there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
//                              ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is unfortunate because &lt;em&gt;we know&lt;/em&gt; that later in our app, a &lt;code&gt;Provider&lt;/code&gt; is going to fill in the context.&lt;/p&gt; 
&lt;p&gt;There are a few solutions for this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can get around this by asserting non null:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string&amp;gt;(undefined!);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;a href=&quot;https://www.typescriptlang.org/play/index.html?jsx=1#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQduEAdqvLgK5SXMwCqqLFADCLGFgAe8ALyYqMAHS5KycaN6SYAHjZRgzAOYA+ABQdmAEywF9WCwEIAlPQLn8wFnACivABYdUNBhgXABxSixgwxNHOABvOjg4JlZ2Lh5+QSg4WWw8RQCsdXEpE05uLF4BIWLNZ0S4ShguZjgtC2AANyMACS8AGX6AeXjyjOqoBRgIPjAwGrQsGIBfey0Aeg7u+mW6V2Z3TwBBOZj4hqaWtrHKzJqxTQUABWJO4CtszuQAGw4saTIAGVfMgAO7MMhGBpJLQ+GD+QJsELhLCRfQGODrKEw9Y3KpZWpSZ6vd5CIw7IA&quot;&gt;Playground here&lt;/a&gt;) This is a quick and easy fix, but this loses type-safety, and if you forget to supply a value to the Provider, you will get an error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We can write a helper function called &lt;code&gt;createCtx&lt;/code&gt; that guards against accessing a &lt;code&gt;Context&lt;/code&gt; whose value wasn&#39;t provided. By doing this, API instead, &lt;strong&gt;we never have to provide a default and never have to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// Usage:

// We still have to specify a type, but no default!
export const [useCurrentUserName, CurrentUserProvider] = createCtx&amp;lt;string&amp;gt;();

function EnthusasticGreeting() {
  const currentUser = useCurrentUserName();
  return &amp;lt;div&amp;gt;HELLO {currentUser.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;CurrentUserProvider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/CurrentUserProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=1&amp;amp;ssl=1&amp;amp;ssc=1&amp;amp;pln=31&amp;amp;pc=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdA9AgnYnAIJwAWWANmCxQ4MCHFyVkMLCjgBhCADtpAD3jJFAEzgAFYgDdgmoXADuwGNziKxAVzBEl8YwWS2+8fcj62sAGhQtNiRzSwhbeG5kQ0UAcxExXF5cAGs4Amg4Wy0sAmBFLG1vPhFeEVAsADpgxjoCbPxgJXFJaTkYFQAeLiw1LC10AG8AXzgAH2t3PgA+AAoASjhBtnElVHh8FTgAXkwqGEqJHDanXphu8aycvILNOeyXfML5+jh0hpgmxSzULHaVBZLFZvXBrDY7PZ4A62X4KZRnWabF7AuDAAhwRE7ba7B65J6aRaWYimaxYEkAUSgxCgszIML+HTgIBh8AARjJ8qgjDJkLoDNzhKErLyvD4sGRkW83pQYLYoN9cK84MMVjK5d8ANr0-4BTaVPQQQzGKAAXRQ6FBinWNDgjEYcAA5GhVlaYA6mcgUlh0AAVACeggAyhJgGB4PkCCZebKwHwsHQVUx7QBVVDIWJYABcDDtcAA6jJ1sA+CUovoZKI4KhBLg0X7ZDAA-44KyItYxC43B4AIR0XqQWAu9ZwLWwuWUZSpoQAOWQIGbcnH-RgU6gBqNQjNuyOUgZXXWUHysTmyLqHy+cHJym4MLQn1wAHFKFhPnFAcsQWDxEvJ79hDixypZdV1necFiVNV5TgTpNGAfRpgACXJAAZZCAHkllwH8Vz-SpRGTMBBCgOQ0CwBZhm7TpGFg+D6ETepFEaZoOEI99VRfdVoMXIDfyEdcBTgUVfG2MhAyiUxFDIaYUU6K9LFvItH2fV94kYaS3io7iJxwvj+WNaY6KAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can go even further and combine this idea using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// usage

export const [useCtx, SettingProvider] = createCtx&amp;lt;string&amp;gt;(); // specify type, but no need to specify value upfront!
export function App() {
  const key = useCustomHook(&quot;key&quot;); // get a value from a hook, must be in a component
  return (
    &amp;lt;SettingProvider value={key}&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/SettingProvider&amp;gt;
  );
}
export function Component() {
  const key = useCtx(); // can still use without null check!
  return &amp;lt;div&amp;gt;{key}&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGd4BXOpAYWZlwAkIIBrOAF44ACj5IAngC44DKMBoBzAJRCAfHADeFOHGr14AbQYoYSADSykMAMoxTSALpDExGADpmSOw5GaAvso6cEQwjFA0svZmhuISjhT+FAD0yXpEDnq0ZgAe8ADuwDAAFnA0EHCMYNjZcAAmSJgojAA2MABqKC2MSClphSUQjPDFKABuCopwnPUVjDQNmApIdXrFSGgCXS3T69OgveSY8xjAtOmoZqwwOQA8AIJqIqra5Lr6DHo3LsjoHmgZK7ZJB5B5wAA+lQWjWWdSe80WsOUAG5gscaKdzl5rjlnlpgu9aJ80D83J4WKxgXkRBgciiCXBgJhRABCNCqEo4fJlJDcgCiUBwUBEACJsd8QBw4AAjJCM+jABpwFBwAAKOAmDSgcAGpRVYy6PRF9LeuhC1nCkTQqNNSVNoUtcEM4pyllp7nVEE1SCgzhQdCyBmRcFScBAKHEcAAKhIwN4AcAwPAFJgfcrplUWhYyhB4ChIihBSgJHAIMz5mdIjBY0g6IkKH1KnQUIpDhQQZBYIHPs6KTdLDZrDBJp7vb6XADLmwbrc5JMniiQ2k6HG0EyS9W45ZpcMczyVtMKiuNuu4AbunKqjUaDAWe2cp2sCdh+d7mAwHjXoSDHA4i5sRw3C8HwopxMawahq2eZnoaco1HgKrFMBliSp8sryum1DgLQSA3sEDoRKIDK3IOMDDkoo6Kmm549IImhxP4agMrotyUthNC4fAyRMaaLHJKR5GKJRWo8boJp2h20BPhiL6RGxkAcTen7BB88B-sILrPBBaRoPmUTAC0OxeDqRRIbuNCtDsaDrJsd72hahG3HUwBjGo9GSP4tzJM5rk2v4QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;a href=&quot;https://github.com/jamiebuilds/unstated&quot;&gt;&lt;code&gt;unstated&lt;/code&gt;&lt;/a&gt;-like context setters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function createCtx&amp;lt;A&amp;gt;(defaultValue: A) {
  type UpdateType = React.Dispatch&amp;lt;
    React.SetStateAction&amp;lt;typeof defaultValue&amp;gt;
  &amp;gt;;
  const defaultUpdate: UpdateType = () =&amp;gt; defaultValue;
  const ctx = React.createContext({
    state: defaultValue,
    update: defaultUpdate,
  });
  function Provider(props: React.PropsWithChildren&amp;lt;{}&amp;gt;) {
    const [state, update] = React.useState(defaultValue);
    return &amp;lt;ctx.Provider value={{ state, update }} {...props} /&amp;gt;;
  }
  return [ctx, Provider] as const; // alternatively, [typeof ctx, typeof Provider]
}

// usage

const [ctx, TextProvider] = createCtx(&quot;someText&quot;);
export const TextContext = ctx;
export function App() {
  return (
    &amp;lt;TextProvider&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/TextProvider&amp;gt;
  );
}
export function Component() {
  const { state, update } = React.useContext(TextContext);
  return (
    &amp;lt;label&amp;gt;
      {state}
      &amp;lt;input type=&quot;text&quot; onChange={(e) =&amp;gt; update(e.target.value)} /&amp;gt;
    &amp;lt;/label&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuNIlGJAYRjUAPAEEAfAAoAJkkwpGAGxgA1FIsZIAXHFEBKOAG8KcODACeYJHACqYabyQAVS9YC8iYjAB0AEWAAzmC8aAAWwsjoPgDKSDDRMI6ibBzCFlYQmHCy8kqq6pri4gDcJlwcAfA5Csp2Dnw6dY4uVnAekgZu4tlyNfkaSKXkpmgV8BjUbZ5R3tyofPwcfNQwksbDpnCVjjrVeWoDADRlpoz2Oz25ted8ZQC+ekOmTKww7JwACjgAbsCyUJIwDgwAEdJEMN4vhAQQB1YAwUL8ULARTSIjMYSGO7iAzrTblZiVOAAbW2fEOcDO9SQAF0puCfIwAkgEo4ZL19gUkI8TnAiDBGFBOMIJpCfn8kFA4N8uW5DIYtolyZSbtY7ncjN4tUDoQENQB6Er3Mr8wWcYkTClQ37-OkoAIEyrFOD6-VwdR8IW8YDfJCKcwU4npJCZLhCCnB0PWiVQGkUO4UCiuykBFAAcyQifIo0J8At4bgThoMGjtqmc0cgmokgARAFcM5izWeeQaHRxmNC8XFsxlvAPBMhm3oFgWClOKIwGAOkYTXEzXBJLzhEWVqXJeJeaZhItwBwkL2XZuNtv9auS+L-sfTC2E63aCOGGO3hw4LvIMwD6tcWUc0SFWSSAUlSjhwBqHgMt4TICEsxaSOePZ9i2pimkKi7LooKAAEZ+te+JGIBd74XAwjAMwYCMPAwZuDWfY1nAHBIigzAZnK7jdCBfCSEg3iJFAGY+DKAx6AaeGnphOGKHht5AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href=&quot;https://gist.github.com/sw-yx/f18fe6dd4c43fddb3a4971e80114a052&quot;&gt;useReducer-based version&lt;/a&gt; may also be helpful.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;em&gt;Contributed by: &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/13&quot;&gt;@jpavon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ProviderState {
  themeColor: string;
}

interface UpdateStateArg {
  key: keyof ProviderState;
  value: string;
}

interface ProviderStore {
  state: ProviderState;
  update: (arg: UpdateStateArg) =&amp;gt; void;
}

const Context = React.createContext({} as ProviderStore); // type assertion on empty object

class Provider extends React.Component&amp;lt;{}, ProviderState&amp;gt; {
  public readonly state = {
    themeColor: &quot;red&quot;,
  };

  private update = ({ key, value }: UpdateStateArg) =&amp;gt; {
    this.setState({ [key]: value });
  };

  public render() {
    const store: ProviderStore = {
      state: this.state,
      update: this.update,
    };

    return (
      &amp;lt;Context.Provider value={store}&amp;gt;{this.props.children}&amp;lt;/Context.Provider&amp;gt;
    );
  }
}

const Consumer = Context.Consumer;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;forwardRef/createRef&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/README.md#hooks&quot;&gt;Hooks section&lt;/a&gt; for &lt;code&gt;useRef&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;createRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class CssThemeProvider extends React.PureComponent&amp;lt;Props&amp;gt; {
  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); // like this
  render() {
    return &amp;lt;div ref={this.rootRef}&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;forwardRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef&amp;lt;Ref, Props&amp;gt;((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Side note: the `ref` you get from `forwardRef` is mutable so you can assign to it if needed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This was done &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43265/&quot;&gt;on purpose&lt;/a&gt;. You can make it immutable if you have to - assign &lt;code&gt;React.Ref&lt;/code&gt; if you want to ensure nobody reassigns it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef((
  props: Props,
  ref: React.Ref&amp;lt;Ref&amp;gt; // &amp;lt;-- here!
) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you are grabbing the props of a component that forwards refs, use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More info: https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&lt;/p&gt; 
&lt;p&gt;You may also wish to do &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/167&quot;&gt;Conditional Rendering with &lt;code&gt;forwardRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Portals&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;ReactDOM.createPortal&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const modalRoot = document.getElementById(&quot;modal-root&quot;) as HTMLElement;
// assuming in your html file has a div with id &#39;modal-root&#39;;

export class Modal extends React.Component {
  el: HTMLElement = document.createElement(&quot;div&quot;);

  componentDidMount() {
    modalRoot.appendChild(this.el);
  }

  componentWillUnmount() {
    modalRoot.removeChild(this.el);
  }

  render() {
    return ReactDOM.createPortal(this.props.children, this.el);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWRYmAEQHkBZObXAo9GAWgBNcZchTQQAdgGd4ICHxQAbBBAjwAvHAFoAriCRiYAOgDmSGAFF5SXfoBCATwCSfABQAiGXPk8cK1wEo4FAk4AAkAFWYAGQsrPRgAbgoAeiTAiQkdYDEjOCy4OwgtKDgACxgQeTZgS1KgwI1gADc4AHdgGBLcvgIPBW9lGHxE4XIkAA9qeDR5IODmWQU4cZg9PmDkbgMAYVxIMTi4AG8KOCX5AC5QiOjLazUNCG07gzQuFZi7tz4m-2GTuFE4HEcXowD48y0+mcAWO5FOp16igGBhQYDAqy2JWqLg6wAkBiQ8j8w1OAF8KP9AXs4gB1aryACqYhkkJg0KO-wRCyRKgMRBkjSQmOxzlx+MJxP+5JGpyIYj4SCg7Nh8LgRBgRTEtG4TGYLzeSAACtAYApRVj8WAcGB8WgsfI+HKADRwMUEokkuDS0lAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Same as above but using hooks&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React, { useEffect, useRef } from &quot;react&quot;;
import { createPortal } from &quot;react-dom&quot;;

const modalRoot = document.querySelector(&quot;#modal-root&quot;) as HTMLElement;

const Modal: React.FC&amp;lt;{}&amp;gt; = ({ children }) =&amp;gt; {
  const el = useRef(document.createElement(&quot;div&quot;));

  useEffect(() =&amp;gt; {
    // Use this in case CRA throws an error about react-hooks/exhaustive-deps
    const current = el.current;

    // We assume `modalRoot` exists with &#39;!&#39;
    modalRoot!.appendChild(current);
    return () =&amp;gt; void modalRoot!.removeChild(current);
  }, []);

  return createPortal(children, el.current);
};

export default Modal;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOAbzjSJRiQAVoYUAbOAXzmy4CTDAFoAJrjLkKAellwUAZyUBXEMAB2Aczha4ATwiqocABYwQPTMC5JzyxXHHAAbnADuwGGb3iCIBDi3KI4EDD4ANwUFGgQmkrwALJB3ABciMQwAHQAYgDCADy0vAB8cAC8cAAU9GhmtuJEmnwAlJXltBRwcPJwAKIgqlzM9j72aCMqDLiQmkiaEUp6CZyaaPauKFDAKABGdp7evihwRJjdM6twSDxVyOg5qkpIyJjVkmjqCzmMqCz9OwgH7VABELlcoNarWiMnIPQeGGyzyQ-UwmCQGGq1XaFU6lx6fQA6vZlGpgXAAAaBYJcBAQcKUm4AD2AiWWXh8BAAhNIej04tcadx6eFKs4IF9gYtsgBHVRIKAGADKt0xMGgYIAxMKuKEGTAoYplgAJAAqSQAMoCkNKYLD+XBdaKYNzsigwGAFuJ8g0uOJqrdsl8oM0YDCCWckDATC0cR04K4IMB-M6DW6iIFXEhfY1A1xgyYwxH4XwADRwADaAF0S5c+gBJVaofwQTBU26UivjK6cLSKvTLHuU86F0M-SmXIgxqAtP6jdiwbjVeqNZoVoMh4uw3iwuQKZ4obRIGLkTCqdYwYDxOAAQU98a6pcFiSrSjMEA8KVpFZeMGVH5fqkXDVuKiJPC8yqcCw1SYNwLwlj006xjUkaFBCpSRoSChGKoDAoC08EQHAYCqPAPhsishjGKYiTMMAaDmJY1i2CepaOuhbh+BUoK6vq4SgqUhSyBhWF0O+n7ftwcAAGQyah7GOnAhRSVwmGKUpykQmJmmJAYdgVLQT6aSZzhsmAIwGBkoLaDs4igmWOkmRZ6BIA2LAgEo1kbIsioOU5mlmEgwDaBY1kAIwAAyRa4Zj+RpplHOIPgZPgUUxWY+COQlpl7OgADWtnGJo4jWVA2h5dUkVltVtXZOFrTxYlSkAF5NuISDMhkACc3XZc1PS8LwAVwOpA1wA2+B4KcurcrQoJwKCw05UphR7GRGotHpBlGXlaCFTgF6lYtYAegYKAeA0YBLfw8T5FwDH5YZ8Z4nAf4AZJwGwfBSCtGUkwQC8wnrTAm1jYlwmiStwmqeDjp-WJa0bTed0Pftz24uU72Aap1QwFACp-aUEkeHAqnA8jmhw-yfREK+bbUSYiiemhIluODrQULwQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Modal Component Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const [showModal, setShowModal] = React.useState(false);
  return (
    &amp;lt;div&amp;gt;
      // you can also put this in your static html file
      &amp;lt;div id=&quot;modal-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
      {showModal &amp;amp;&amp;amp; (
        &amp;lt;Modal&amp;gt;
          &amp;lt;div
            style={{
              display: &quot;grid&quot;,
              placeItems: &quot;center&quot;,
              height: &quot;100vh&quot;,
              width: &quot;100vh&quot;,
              background: &quot;rgba(0,0,0,0.1)&quot;,
              zIndex: 99,
            }}
          &amp;gt;
            I&#39;m a modal!{&quot; &quot;}
            &amp;lt;button
              style={{ background: &quot;papyawhip&quot; }}
              onClick={() =&amp;gt; setShowModal(false)}
            &amp;gt;
              close
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/Modal&amp;gt;
      )}
      &amp;lt;button onClick={() =&amp;gt; setShowModal(true)}&amp;gt;show Modal&amp;lt;/button&amp;gt;
      // rest of your app
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This example is based on the &lt;a href=&quot;https://reactjs.org/docs/portals.html#event-bubbling-through-portals&quot;&gt;Event Bubbling Through Portal&lt;/a&gt; example of React docs.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Error Boundaries&lt;/h2&gt; 
&lt;h3&gt;Option 1: Using react-error-boundary&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bvaughn/react-error-boundary&quot;&gt;React-error-boundary&lt;/a&gt; - is a lightweight package ready to use for this scenario with TS support built-in. This approach also lets you avoid class components that are not that popular anymore.&lt;/p&gt; 
&lt;h3&gt;Options 2: Writing your custom error boundary component&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to add a new npm package for this, you can also write your own &lt;code&gt;ErrorBoundary&lt;/code&gt; component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { Component, ErrorInfo, ReactNode } from &quot;react&quot;;

interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
}

class ErrorBoundary extends Component&amp;lt;Props, State&amp;gt; {
  public state: State = {
    hasError: false
  };

  public static getDerivedStateFromError(_: Error): State {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error(&quot;Uncaught error:&quot;, error, errorInfo);
  }

  public render() {
    if (this.state.hasError) {
      return &amp;lt;h1&amp;gt;Sorry.. there was an error&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}

export default ErrorBoundary;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Concurrent React/React Suspense&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Not written yet.&lt;/em&gt; watch &lt;a href=&quot;https://github.com/sw-yx/fresh-async-react&quot;&gt;https://github.com/sw-yx/fresh-async-react&lt;/a&gt; for more on React Suspense and Time Slicing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Types&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è Have you read &lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/FAQ?&quot;&gt;the TypeScript FAQ&lt;/a&gt; Your answer might be there!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Facing weird type errors? You aren&#39;t alone. This is the hardest part of using TypeScript with React. Be patient - you are learning a new language after all. However, the more you get good at this, the less time you&#39;ll be working &lt;em&gt;against&lt;/em&gt; the compiler and the more the compiler will be working &lt;em&gt;for&lt;/em&gt; you!&lt;/p&gt; 
&lt;p&gt;Try to avoid typing with &lt;code&gt;any&lt;/code&gt; as much as possible to experience the full benefits of TypeScript. Instead, let&#39;s try to be familiar with some of the common strategies to solve these issues.&lt;/p&gt; 
&lt;h2&gt;Union Types and Type Guarding&lt;/h2&gt; 
&lt;p&gt;Union types are handy for solving some of these typing problems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;
  {},
  {
    count: number | null; // like this
  }
&amp;gt; {
  state = {
    count: null,
  };
  render() {
    return &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;{this.state.count}&amp;lt;/div&amp;gt;;
  }
  increment = (amt: number) =&amp;gt; {
    this.setState((state) =&amp;gt; ({
      count: (state.count || 0) + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2K0EAK48YALjg89IAEZIocAD6m91agG44AejdxqwANZI4MAAWwHSaKhQAfFrkinQwKNxwALzRijr6hiZmTmHOmkT81gAUAJSpaUQwelA8cLJ8wABucBA8Yt5oPklKpclRQSEiwDxoRCAyRQCMJSoRSgN0InEJSCK6BjAqsm4NjRF5MXDhh8OjSOOGyXBFKCDGDpbWZUlRStoBwYt0SDAAyvHcIrLRIva5vQ5pODrTLXYGraHwWz2AAMZQA1HBbjB3ioSiUDooVAcVEA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type Guarding&lt;/strong&gt;: Sometimes Union Types solve a problem in one area but create another downstream. If &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both object types, &lt;code&gt;A | B&lt;/code&gt; isn&#39;t &quot;either A or B&quot;, it is &quot;A or B or both at once&quot;, which causes some confusion if you expected it to be the former. Learn how to write checks, guards, and assertions (also see the Conditional Rendering section below). For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface Admin {
  role: string;
}
interface User {
  email: string;
}

// Method 1: use `in` keyword
function redirect(user: Admin | User) {
  if (&quot;role&quot; in user) {
    // use the `in` operator for typeguards since TS 2.7+
    routeToAdminPage(user.role);
  } else {
    routeToHomePage(user.email);
  }
}

// Method 2: custom type guard, does the same thing in older TS versions or where `in` isnt enough
function isAdmin(user: Admin | User): user is Admin {
  return (user as any).role !== undefined;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoC4AOxiSk3STgEEATEGuAbwrjhwAbJAC44AZxhQaAcwDcFAL5Va9RmmYBVcfR584SECmCCxk6dXlKKFTAFdqGYBGoCIdugBUI7TtQAKKDJIABTiwDLUwJjA9ACUeuT80XBhEVExugC8OQR2OlAIEML4CbxJ-AJIMHZQrvi+NGQVinDWlOT2jjDOrjgeSN4AErhIgcFpkdGxUGX6KZMZM3A5WQSGxoKliZVVNXUEIyBIYEFIzfzK5FcUAPS3cACy1QAWEGxwAIxi+cwABjQ-nAANZIACeAHdoGxbA4nC4qmxgEQMCFflAxI1XAAfODaeI7ODREIAIiESBJRNc6LKcHucF+cBgL3+gLgEDA9BQMGgcEwvJgYM5MjsKCgbHEEhoGjgngAynAAEwAOgA7ABqfT8fpeHwcGjjULo5XkuIKFoGQQ6Qna9y6o5jM5ogrKjYmM36K43cj057M95KsRofI8vCCzlwEVitgAGjgbAgSElzOY4hQxyZL1kVPZgjYunlcAAbvRwi5JbyISyiHAAdQgcBxLQDNR3DIXrDur0ieIsc76Jj9Ti8QU4j8Cj3WEPCUR9q5+1A4ChJShqGC4ibiswAIS5Bz5mLUJAw65AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Method 2 is also known as &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards&quot;&gt;User-Defined Type Guards&lt;/a&gt; and can be really handy for readable code. This is how TS itself refines types with &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you need &lt;code&gt;if...else&lt;/code&gt; chains or the &lt;code&gt;switch&lt;/code&gt; statement instead, it should &quot;just work&quot;, but look up &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; if you need help. (See also: &lt;a href=&quot;https://basarat.gitbook.io/typescript/type-system/discriminated-unions&quot;&gt;Basarat&#39;s writeup&lt;/a&gt;). This is handy in typing reducers for &lt;code&gt;useReducer&lt;/code&gt; or Redux.&lt;/p&gt; 
&lt;h2&gt;Optional Types&lt;/h2&gt; 
&lt;p&gt;If a component has an optional prop, add a question mark and assign during destructure (or use defaultProps).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message?: string; // like this
}&amp;gt; {
  render() {
    const { message = &quot;default&quot; } = this.props;
    return &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a &lt;code&gt;!&lt;/code&gt; character to assert that something is not undefined, but this is not encouraged.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Something to add? &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Enum Types&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We recommend avoiding using enums as far as possible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Enums have a few &lt;a href=&quot;https://fettblog.eu/tidy-typescript-avoid-enums/&quot;&gt;documented issues&lt;/a&gt; (the TS team &lt;a href=&quot;https://twitter.com/orta/status/1348966323271987201?s=20&quot;&gt;agrees&lt;/a&gt;). A simpler alternative to enums is just declaring a union type of string literals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare type Position = &quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you must use enums, remember that enums in TypeScript default to numbers. You will usually want to use them as strings instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export enum ButtonSizes {
  default = &quot;default&quot;,
  small = &quot;small&quot;,
  large = &quot;large&quot;,
}

// usage
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; &amp;lt;Button size={ButtonSizes.default} {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Type Assertion&lt;/h2&gt; 
&lt;p&gt;Sometimes you know better than TypeScript that the type you&#39;re using is narrower than it thinks, or union types need to be asserted to a more specific type to work with other APIs, so assert with the &lt;code&gt;as&lt;/code&gt; keyword. This tells the compiler you know better than it does.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  render() {
    const { message } = this.props;
    return (
      &amp;lt;Component2 message={message as SpecialMessageType}&amp;gt;{message}&amp;lt;/Component2&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgGU61gUAbAWSQGduUBzJABVa9ALwFuMKMAB2-fAG4KFOTCRRM6egAUcYbnADeFOHBA8+ggFxwpM+XAA+cAK6yAJkkxykH5eQAvirkaBCyUnAAwriQskiyMABMtsjoMAB0AGJRADx6EAYAfHASABRG5pYCSIEAlKUlZaZwuR7AAG5FLWa5ABYAjEVGFrw1gbkA9IPd5L2T7V0UdSFobCi8cBzUMeDhCfBIAB7qnoZpGBm7cQe5JnNVYzZ20nL8AYEl92ZEnhplDW+ZjgYQi8Eqoys9ECpTgMD6wG4GTA+m4AWBcCIMFcUFkcGaDwxuWu+0SSUeULEI2qgjgG0YzFYnBpwlEn2pT1qUxJ8TJswxdXRcGCQSAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that you cannot assert your way to anything - basically it is only for refining types. Therefore it is not the same as &quot;casting&quot; a type.&lt;/p&gt; 
&lt;p&gt;You can also assert a property is non-null, when accessing it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;element.parentNode!.removeChild(element) // ! before the period
myFunction(document.getElementById(dialog.id!)! // ! after the property accessing
let userID!: string // definite assignment assertion... be careful!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, try to actually handle the null case instead of asserting :)&lt;/p&gt; 
&lt;h2&gt;Simulating Nominal Types&lt;/h2&gt; 
&lt;p&gt;TS&#39; structural typing is handy, until it is inconvenient. However you can simulate nominal typing with &lt;a href=&quot;https://basarat.gitbook.io/typescript/main-1/nominaltyping&quot;&gt;&lt;code&gt;type branding&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type OrderID = string &amp;amp; { readonly brand: unique symbol };
type UserID = string &amp;amp; { readonly brand: unique symbol };
type ID = OrderID | UserID;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can create these values with the Companion Object Pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function OrderID(id: string) {
  return id as OrderID;
}
function UserID(id: string) {
  return id as UserID;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now TypeScript will disallow you from using the wrong ID in the wrong place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function queryForUser(id: UserID) {
  // ...
}
queryForUser(OrderID(&quot;foobar&quot;)); // Error, Argument of type &#39;OrderID&#39; is not assignable to parameter of type &#39;UserID&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In future you can use the &lt;code&gt;unique&lt;/code&gt; keyword to brand. &lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/33038&quot;&gt;See this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Intersection Types&lt;/h2&gt; 
&lt;p&gt;Adding two types together can be handy, for example when your component is supposed to mirror the props of a native component like a &lt;code&gt;button&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export interface Props {
  label: string;
}
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt; // adding my Props together with the @types/react button provided props
) =&amp;gt; &amp;lt;Button {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use Intersection Types to make reusable subsets of props for similar components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type BaseProps = {
   className?: string,
   style?: React.CSSProperties
   name: string // used in both
}
type DogProps = {
  tailsCount: number
}
type HumanProps = {
  handsCount: number
}
export const Human: React.FC&amp;lt;BaseProps &amp;amp; HumanProps&amp;gt; = // ...
export const Dog: React.FC&amp;lt;BaseProps &amp;amp; DogProps&amp;gt; = // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgCEUBnJABRzGbgF44BvCnGFoANi2YA5FCCQB+AFxxmMKMAB2AcwA0Q4Suqj5S5OhgA6AMIBlaxwh1YwJMz1x1MpEpVqtcAPT+cACurAAmcBpwAEYQMAAWFAC+VLT0ACIQmvZcvAJ6MCjAosyWEMHqMErqwSDRSFDJqXRwABK1KOo53HyC5MLxnWGl5ZXVtfWN5CnkSAAekLBwaBDqKm0d6ibEFgBilgA8TKzdcABkGyCd3QB8eQAUAJS8d-d6B2HAAG4BNxSPFAo80W8BWa3gmU02zM5n2RxY7E43AukNuD2ePFe70+P38f3IjyAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Make sure not to confuse Intersection Types (which are &lt;strong&gt;and&lt;/strong&gt; operations) with Union Types (which are &lt;strong&gt;or&lt;/strong&gt; operations).&lt;/p&gt; 
&lt;h2&gt;Union Types&lt;/h2&gt; 
&lt;p&gt;This section is yet to be written (please contribute!). Meanwhile, see our &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/README.md#union-types-and-type-guarding&quot;&gt;commentary on Union Types usecases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The ADVANCED cheatsheet also has information on Discriminated Union Types, which are helpful when TypeScript doesn&#39;t seem to be narrowing your union type as you expect.&lt;/p&gt; 
&lt;h2&gt;Overloading Function Types&lt;/h2&gt; 
&lt;p&gt;Specifically when it comes to functions, you may need to overload instead of union type. The most common way function types are written uses the shorthand:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type FunctionType1 = (x: string, y: number) =&amp;gt; number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But this doesn&#39;t let you do any overloading. If you have the implementation, you can put them after each other with the function keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function pickCard(x: { suit: string; card: number }[]): number;
function pickCard(x: number): { suit: string; card: number };
function pickCard(x): any {
  // implementation with combined signature
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, if you don&#39;t have an implementation and are just writing a &lt;code&gt;.d.ts&lt;/code&gt; definition file, this won&#39;t help you either. In this case you can forego any shorthand and write them the old-school way. The key thing to remember here is as far as TypeScript is concerned, &lt;code&gt;functions are just callable objects with no key&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type pickCard = {
  (x: { suit: string; card: number }[]): number;
  (x: number): { suit: string; card: number };
  // no need for combined signature in this form
  // you can also type static properties of functions here eg `pickCard.wasCalled`
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when you implement the actual overloaded function, the implementation will need to declare the combined call signature that you&#39;ll be handling, it won&#39;t be inferred for you. You can see readily see examples of overloads in DOM APIs, e.g. &lt;code&gt;createElement&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/functions.html#overloads&quot;&gt;Read more about Overloading in the Handbook.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using Inferred Types&lt;/h2&gt; 
&lt;p&gt;Leaning on TypeScript&#39;s Type Inference is great... until you realize you need a type that was inferred, and have to go back and explicitly declare types/interfaces so you can export them for reuse.&lt;/p&gt; 
&lt;p&gt;Fortunately, with &lt;code&gt;typeof&lt;/code&gt;, you won&#39;t have to do that. Just use it on any value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

const someMethod = (obj: typeof state) =&amp;gt; {
  // grabbing the type of state even though it was inferred
  // some code using obj
  setState(obj); // this works
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Partial Types&lt;/h2&gt; 
&lt;p&gt;Working with slicing state and props is common in React. Again, you don&#39;t really have to go and explicitly redefine your types if you use the &lt;code&gt;Partial&lt;/code&gt; generic type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

// NOTE: stale state merging is not actually encouraged in React.useState
// we are just demonstrating how to use Partial here
const partialStateUpdate = (obj: Partial&amp;lt;typeof state&amp;gt;) =&amp;gt;
  setState({ ...state, ...obj });

// later on...
partialStateUpdate({ foo: 2 }); // this works
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Note that there are some TS users who don&#39;t agree with using &lt;code&gt;Partial&lt;/code&gt; as it behaves today. See &lt;a href=&quot;https://twitter.com/ferdaber/status/1084798596027957248&quot;&gt;subtle pitfalls of the above example here&lt;/a&gt;, and check out this long discussion on &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365&quot;&gt;why @types/react uses Pick instead of Partial&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;The Types I need weren&#39;t exported!&lt;/h2&gt; 
&lt;p&gt;This can be annoying but here are ways to grab the types!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the Prop types of a component: Use &lt;code&gt;React.ComponentProps&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt;, and optionally &lt;code&gt;Omit&lt;/code&gt; any overlapping types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Button } from &quot;library&quot;; // but doesn&#39;t export ButtonProps! oh no!
type ButtonProps = React.ComponentProps&amp;lt;typeof Button&amp;gt;; // no problem! grab your own!
type AlertButtonProps = Omit&amp;lt;ButtonProps, &quot;onClick&quot;&amp;gt;; // modify
const AlertButton: React.FC&amp;lt;AlertButtonProps&amp;gt; = (props) =&amp;gt; (
  &amp;lt;Button onClick={() =&amp;gt; alert(&quot;hello&quot;)} {...props} /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L774&quot;&gt;&lt;code&gt;ComponentPropsWithoutRef&lt;/code&gt;&lt;/a&gt; (instead of ComponentProps) and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt; (if your component specifically forwards refs)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the return type of a function: use &lt;code&gt;ReturnType&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// inside some library - return type { baz: number } is inferred but not exported
function foo(bar: string) {
  return { baz: 1 };
}

//  inside your app, if you need { baz: number }
type FooReturn = ReturnType&amp;lt;typeof foo&amp;gt;; // { baz: number }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact you can grab virtually anything public: &lt;a href=&quot;http://ikoshelev.azurewebsites.net/search/id/11/Pragmatic-uses-of-TypeScript-type-system-My-type-of-type&quot;&gt;see this blogpost from Ivan Koshelev&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function foo() {
  return {
    a: 1,
    b: 2,
    subInstArr: [
      {
        c: 3,
        d: 4,
      },
    ],
  };
}

type InstType = ReturnType&amp;lt;typeof foo&amp;gt;;
type SubInstArr = InstType[&quot;subInstArr&quot;];
type SubIsntType = SubInstArr[0];

let baz: SubIsntType = {
  c: 5,
  d: 6, // type checks ok!
};

//You could just write a one-liner,
//But please make sure it is forward-readable
//(you can understand it from reading once left-to-right with no jumps)
type SubIsntType2 = ReturnType&amp;lt;typeof foo&amp;gt;[&quot;subInstArr&quot;][0];
let baz2: SubIsntType2 = {
  c: 5,
  d: 6, // type checks ok!
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;TS also ships with a &lt;code&gt;Parameters&lt;/code&gt; utility type for extracting the parameters of a function&lt;/li&gt; 
 &lt;li&gt;for anything more &quot;custom&quot;, the &lt;code&gt;infer&lt;/code&gt; keyword is the basic building block for this, but takes a bit of getting used to. Look at the source code for the above utility types, and &lt;a href=&quot;https://twitter.com/mgechev/status/1211030455224422401?s=20&quot;&gt;this example&lt;/a&gt; to get the idea. Basarat &lt;a href=&quot;https://www.youtube.com/watch?v=ijK-1R-LFII&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=3&amp;amp;t=0s&quot;&gt;also has a good video on &lt;code&gt;infer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Types I need don&#39;t exist!&lt;/h2&gt; 
&lt;p&gt;What&#39;s more annoying than modules with unexported types? Modules that are &lt;strong&gt;untyped&lt;/strong&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before you proceed - make sure you have checked that types don&#39;t exist in &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Fret not! There are more than a couple of ways in which you can solve this problem.&lt;/p&gt; 
&lt;h3&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;lazier&lt;/strong&gt; way would be to create a new type declaration file, say &lt;code&gt;typedec.d.ts&lt;/code&gt;‚Äì if you don&#39;t already have one. Ensure that the path to file is resolvable by TypeScript by checking the &lt;code&gt;include&lt;/code&gt; array in the &lt;code&gt;tsconfig.json&lt;/code&gt; file at the root of your directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// inside tsconfig.json
{
  // ...
  &quot;include&quot;: [
    &quot;src&quot; // automatically resolves if the path to declaration is src/typedec.d.ts
  ]
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Within this file, add the &lt;code&gt;declare&lt;/code&gt; syntax for your desired module, say &lt;code&gt;my-untyped-module&lt;/code&gt;‚Äì to the declaration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// inside typedec.d.ts
declare module &quot;my-untyped-module&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This one-liner alone is enough if you just need it to work without errors. A even hackier, write-once-and-forget way would be to use &lt;code&gt;&quot;*&quot;&lt;/code&gt; instead which would then apply the &lt;code&gt;Any&lt;/code&gt; type for all existing and future untyped modules.&lt;/p&gt; 
&lt;p&gt;This solution works well as a workaround if you have less than a couple untyped modules. Anything more, you now have a ticking type-bomb in your hands. The only way of circumventing this problem would be to define the missing types for those untyped modules as explained in the following sections.&lt;/p&gt; 
&lt;h3&gt;Autogenerate types&lt;/h3&gt; 
&lt;p&gt;You can use TypeScript with &lt;code&gt;--allowJs&lt;/code&gt; and &lt;code&gt;--declaration&lt;/code&gt; to see TypeScript&#39;s &quot;best guess&quot; at the types of the library.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work well enough, use &lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot;&gt;&lt;code&gt;dts-gen&lt;/code&gt;&lt;/a&gt; to use the runtime shape of the object to accurately enumerate all available properties. This tends to be very accurate, BUT the tool does not yet support scraping JSDoc comments to populate additional types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g dts-gen
dts-gen -m &amp;lt;your-module&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other automated JS to TS conversion tools and migration strategies - see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/from_js&quot;&gt;our MIGRATION cheatsheet&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Typing Exported Hooks&lt;/h3&gt; 
&lt;p&gt;Typing Hooks is just like typing pure functions.&lt;/p&gt; 
&lt;p&gt;The following steps work under two assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have already created a type declaration file as stated earlier in the section.&lt;/li&gt; 
 &lt;li&gt;You have access to the source code - specifically the code that directly exports the functions you will be using. In most cases, it would be housed in an &lt;code&gt;index.js&lt;/code&gt; file. Typically you need a minimum of &lt;strong&gt;two&lt;/strong&gt; type declarations (one for &lt;strong&gt;Input Prop&lt;/strong&gt; and the other for &lt;strong&gt;Return Prop&lt;/strong&gt;) to define a hook completely. Suppose the hook you wish to type follows the following structure,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ...
const useUntypedHook = (prop) =&amp;gt; {
  // some processing happens here
  return {
    /* ReturnProps */
  };
};
export default useUntypedHook;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then, your type declaration should most likely follow the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &#39;use-untyped-hook&#39; {
  export interface InputProps { ... }   // type declaration for prop
  export interface ReturnProps { ... } // type declaration for return props
  export default function useUntypedHook(
    prop: InputProps
    // ...
  ): ReturnProps;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;For instance, the &lt;a href=&quot;https://github.com/donavon/use-dark-mode&quot;&gt;useDarkMode hook&lt;/a&gt; exports the functions that follows a similar structure.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// inside src/index.js
const useDarkMode = (
  initialValue = false, // -&amp;gt; input props / config props to be exported
  {
    // -&amp;gt; input props / config props to be exported
    element,
    classNameDark,
    classNameLight,
    onChange,
    storageKey = &quot;darkMode&quot;,
    storageProvider,
    global,
  } = {}
) =&amp;gt; {
  // ...
  return {
    // -&amp;gt; return props to be exported
    value: state,
    enable: useCallback(() =&amp;gt; setState(true), [setState]),
    disable: useCallback(() =&amp;gt; setState(false), [setState]),
    toggle: useCallback(() =&amp;gt; setState((current) =&amp;gt; !current), [setState]),
  };
};
export default useDarkMode;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As the comments suggest, exporting these config props and return props following the aforementioned structure will result in the following type export.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;use-dark-mode&quot; {
  /**
   * A config object allowing you to specify certain aspects of `useDarkMode`
   */
  export interface DarkModeConfig {
    classNameDark?: string; // A className to set &quot;dark mode&quot;. Default = &quot;dark-mode&quot;.
    classNameLight?: string; // A className to set &quot;light mode&quot;. Default = &quot;light-mode&quot;.
    element?: HTMLElement; // The element to apply the className. Default = `document.body`
    onChange?: (val?: boolean) =&amp;gt; void; // Overide the default className handler with a custom callback.
    storageKey?: string; // Specify the `localStorage` key. Default = &quot;darkMode&quot;. Set to `null` to disable persistent storage.
    storageProvider?: WindowLocalStorage; // A storage provider. Default = `localStorage`.
    global?: Window; // The global object. Default = `window`.
  }
  /**
   * An object returned from a call to `useDarkMode`.
   */
  export interface DarkMode {
    readonly value: boolean;
    enable: () =&amp;gt; void;
    disable: () =&amp;gt; void;
    toggle: () =&amp;gt; void;
  }
  /**
   * A custom React Hook to help you implement a &quot;dark mode&quot; component for your application.
   */
  export default function useDarkMode(
    initialState?: boolean,
    config?: DarkModeConfig
  ): DarkMode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Typing Exported Components&lt;/h3&gt; 
&lt;p&gt;In case of typing untyped class components, there&#39;s almost no difference in approach except for the fact that after declaring the types, you export the extend the type using &lt;code&gt;class UntypedClassComponent extends React.Component&amp;lt;UntypedClassComponentProps, any&amp;gt; {}&lt;/code&gt; where &lt;code&gt;UntypedClassComponentProps&lt;/code&gt; holds the type declaration.&lt;/p&gt; 
&lt;p&gt;For instance, &lt;a href=&quot;https://gist.github.com/sw-yx/37a6a3d248c2d4031801f0d568904df8&quot;&gt;sw-yx&#39;s Gist on React Router 6 types&lt;/a&gt; implemented a similar method for typing the then untyped RR6.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;react-router-dom&quot; {
  import * as React from &#39;react&#39;;
  // ...
  type NavigateProps&amp;lt;T&amp;gt; = {
    to: string | number,
    replace?: boolean,
    state?: T
  }
  //...
  export class Navigate&amp;lt;T = any&amp;gt; extends React.Component&amp;lt;NavigateProps&amp;lt;T&amp;gt;&amp;gt;{}
  // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on creating type definitions for class components, you can refer to this &lt;a href=&quot;https://templecoding.com/blog/2016/03/31/creating-typescript-typings-for-existing-react-components&quot;&gt;post&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Operators&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: type query used for refinement&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyof&lt;/code&gt;: get keys of an object&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O[K]&lt;/code&gt;: property lookup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[K in O]&lt;/code&gt;: mapped types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;: addition and subtraction and readonly and optional modifiers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;x ? Y : Z&lt;/code&gt;: Conditional types for generic types, type aliases, function parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Nonnull assertion for nullable types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Generic type parameter default for generic types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;as&lt;/code&gt;: type assertion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is&lt;/code&gt;: type guard for function return types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional Types are a difficult topic to get around so here are some extra resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fully walked through explanation https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&lt;/li&gt; 
 &lt;li&gt;Bailing out and other advanced topics https://github.com/sw-yx/ts-spec/blob/master/conditional-types.md&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s video https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Utilities&lt;/h1&gt; 
&lt;p&gt;These are all built in, &lt;a href=&quot;https://github.com/microsoft/TypeScript/blob/2c458c0d1ccb96442bca9ce43aa987fb0becf8a9/src/lib/es5.d.ts#L1401-L1474&quot;&gt;see source in es5.d.ts&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ConstructorParameters&lt;/code&gt;: a tuple of class constructor&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Exclude&lt;/code&gt;: exclude a type from another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Extract&lt;/code&gt;: select a subtype that is assignable to another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;InstanceType&lt;/code&gt;: the instance type you get from a &lt;code&gt;new&lt;/code&gt;ing a class constructor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NonNullable&lt;/code&gt;: exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from a type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Parameters&lt;/code&gt;: a tuple of a function&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Partial&lt;/code&gt;: Make all properties in an object optional&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Readonly&lt;/code&gt;: Make all properties in an object readonly&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadonlyArray&lt;/code&gt;: Make an immutable array of the given type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pick&lt;/code&gt;: A subtype of an object type with a subset of its keys&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Record&lt;/code&gt;: A map from a key type to a value type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Required&lt;/code&gt;: Make all properties in an object required&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReturnType&lt;/code&gt;: A function&#39;s return type&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: tsconfig.json&lt;/h1&gt; 
&lt;p&gt;You can find &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;all the Compiler options in the TypeScript docs&lt;/a&gt;. &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;The new TS docs also has per-flag annotations of what each does&lt;/a&gt;. This is the setup I roll with for APPS (not libraries - for libraries you may wish to see the settings we use in &lt;code&gt;tsdx&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;incremental&quot;: true,
    &quot;outDir&quot;: &quot;build/lib&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;lib&quot;: [&quot;dom&quot;, &quot;esnext&quot;],
    &quot;sourceMap&quot;: true,
    &quot;importHelpers&quot;: true,
    &quot;declaration&quot;: true,
    &quot;rootDir&quot;: &quot;src&quot;,
    &quot;strict&quot;: true,
    &quot;noUnusedLocals&quot;: true,
    &quot;noUnusedParameters&quot;: true,
    &quot;noImplicitReturns&quot;: true,
    &quot;noFallthroughCasesInSwitch&quot;: true,
    &quot;allowJs&quot;: false,
    &quot;jsx&quot;: &quot;react&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;baseUrl&quot;: &quot;src&quot;,
    &quot;forceConsistentCasingInFileNames&quot;: true,
    &quot;esModuleInterop&quot;: true,
    &quot;suppressImplicitAnyIndexErrors&quot;: true,
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;experimentalDecorators&quot;: true
  },
  &quot;include&quot;: [&quot;src/**/*&quot;],
  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;build&quot;, &quot;scripts&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more &lt;a href=&quot;https://github.com/tsconfig/bases&quot;&gt;recommended TS config here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please open an issue and discuss if there are better recommended choices for React.&lt;/p&gt; 
&lt;p&gt;Selected flags and why we like them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;esModuleInterop&lt;/code&gt;: disables namespace imports (&lt;code&gt;import * as foo from &quot;foo&quot;&lt;/code&gt;) and enables CJS/AMD/UMD style imports (&lt;code&gt;import fs from &quot;fs&quot;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: &lt;code&gt;strictPropertyInitialization&lt;/code&gt; forces you to initialize class properties or explicitly declare that they can be undefined. You can opt out of this with a definite assignment assertion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;typeRoots&quot;: [&quot;./typings&quot;, &quot;./node_modules/@types&quot;]&lt;/code&gt;: By default, TypeScript looks in &lt;code&gt;node_modules/@types&lt;/code&gt; and parent folders for third party type declarations. You may wish to override this default resolution so you can put all your global type declarations in a special &lt;code&gt;typings&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compilation speed grows linearly with size of codebase. For large projects, you will want to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/project-references.html&quot;&gt;Project References&lt;/a&gt;. See our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro/&quot;&gt;ADVANCED&lt;/a&gt; cheatsheet for commentary.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/h1&gt; 
&lt;p&gt;If you run into bugs with your library&#39;s official typings, you can copy them locally and tell TypeScript to use your local version using the &quot;paths&quot; field. In your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;paths&quot;: {
      &quot;mobx-react&quot;: [&quot;../typings/modules/mobx-react&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AdamRackis/status/1024827730452520963&quot;&gt;Thanks to @adamrackis for the tip.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you just need to add an interface, or add missing members to an existing interface, you don&#39;t need to copy the whole typing package. Instead, you can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot; {
  interface PlotlyHTMLElement {
    removeAllListeners(): void;
  }
}

// MyComponent.tsx
import { PlotlyHTMLElement } from &quot;plotly.js&quot;;

const f = (e: PlotlyHTMLElement) =&amp;gt; {
  e.removeAllListeners();
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You dont always have to implement the module, you can simply import the module as &lt;code&gt;any&lt;/code&gt; for a quick start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot;; // each of its imports are `any`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because you don&#39;t have to explicitly import this, this is known as an &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#pitfalls-of-namespaces-and-modules&quot;&gt;ambient module declaration&lt;/a&gt;. You can do AMD&#39;s in a script-mode &lt;code&gt;.ts&lt;/code&gt; file (no imports or exports), or a &lt;code&gt;.d.ts&lt;/code&gt; file anywhere in your project.&lt;/p&gt; 
&lt;p&gt;You can also do ambient variable and ambient type declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// ambient utiltity type
type ToArray&amp;lt;T&amp;gt; = T extends unknown[] ? T : T[];
// ambient variable
declare let process: {
  env: {
    NODE_ENV: &quot;development&quot; | &quot;production&quot;;
  };
};
process = {
  env: {
    NODE_ENV: &quot;production&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see examples of these included in the built in type declarations in the &lt;code&gt;lib&lt;/code&gt; field of &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: https://blog.mariusschulz.com/series/typescript-evolution with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: https://basarat.gitbook.io/typescript/&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&quot;&gt;10 Bad TypeScript Habits&lt;/a&gt;: 
  &lt;ol&gt; 
   &lt;li&gt;not using &lt;code&gt;&quot;strict&quot;: true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;||&lt;/code&gt; for default values when we have &lt;code&gt;??&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Using &lt;code&gt;any&lt;/code&gt; instead of &lt;code&gt;unknown&lt;/code&gt; for API responses&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;as&lt;/code&gt; assertion instead of Type Guards (&lt;code&gt;function isFoo(obj: unknown): obj is Foo {}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;as any&lt;/code&gt; in tests&lt;/li&gt; 
   &lt;li&gt;Marking optional properties instead of modeling which combinations exist by extending interfaces&lt;/li&gt; 
   &lt;li&gt;One letter generics&lt;/li&gt; 
   &lt;li&gt;Non-boolean &lt;code&gt;if (nonboolean)&lt;/code&gt; checks&lt;/li&gt; 
   &lt;li&gt;bangbang checks &lt;code&gt;if (!!nonboolean)&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;!= null&lt;/code&gt; to check for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/production-typescript/&quot;&gt;Mike North&#39;s Production TypeScript course on Frontend Masters (paid)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jenil.github.io/chota/&quot;&gt;TSX Guide&lt;/a&gt; by &lt;a href=&quot;https://github.com/gojutin/www.tsx.guide&quot;&gt;gojutin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Editor Tooling and Integration&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;VSCode 
  &lt;ul&gt; 
   &lt;li&gt;swyx&#39;s VSCode Extension: https://github.com/sw-yx/swyx-react-typescript-snippets&lt;/li&gt; 
   &lt;li&gt;amVim: https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VIM 
  &lt;ul&gt; 
   &lt;li&gt;https://github.com/Quramy/tsuquyomi&lt;/li&gt; 
   &lt;li&gt;nvim-typescript?&lt;/li&gt; 
   &lt;li&gt;https://github.com/leafgarland/typescript-vim&lt;/li&gt; 
   &lt;li&gt;peitalin/vim-jsx-typescript&lt;/li&gt; 
   &lt;li&gt;NeoVim: https://github.com/neoclide/coc.nvim&lt;/li&gt; 
   &lt;li&gt;other discussion: https://mobile.twitter.com/ryanflorence/status/1085715595994095620&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You are free to use this repo&#39;s TSX logo if you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; alt=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to use alternative logos - &lt;a href=&quot;https://github.com/Protectator/jsx-tsx-logos&quot;&gt;jsx-tsx-logos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot; alt=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Linting&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏èNote that &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint is now in maintenance and you should try to use ESLint instead&lt;/a&gt;. If you are interested in TSLint tips, please check this PR from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/14&quot;&gt;@azdanov&lt;/a&gt;. The rest of this section just focuses on ESLint. &lt;a href=&quot;https://github.com/typescript-eslint/tslint-to-eslint-config&quot;&gt;You can convert TSlint to ESlint with this tool&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏èThis is an evolving topic. &lt;code&gt;typescript-eslint-parser&lt;/code&gt; is no longer maintained and &lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot;&gt;work has recently begun on &lt;code&gt;typescript-eslint&lt;/code&gt; in the ESLint community&lt;/a&gt; to bring ESLint up to full parity and interop with TSLint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the TypeScript + ESLint docs at https://github.com/typescript-eslint/typescript-eslint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;add a &lt;code&gt;lint&lt;/code&gt; script to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint &#39;src/**/*.ts&#39;&quot;
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and a suitable &lt;code&gt;.eslintrc.js&lt;/code&gt; (using &lt;code&gt;.js&lt;/code&gt; over &lt;code&gt;.json&lt;/code&gt; here so we can add comments):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  env: {
    es6: true,
    node: true,
    jest: true,
  },
  extends: &quot;eslint:recommended&quot;,
  parser: &quot;@typescript-eslint/parser&quot;,
  plugins: [&quot;@typescript-eslint&quot;],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: &quot;module&quot;,
  },
  rules: {
    indent: [&quot;error&quot;, 2],
    &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],
    quotes: [&quot;error&quot;, &quot;single&quot;],
    &quot;no-console&quot;: &quot;warn&quot;,
    &quot;no-unused-vars&quot;: &quot;off&quot;,
    &quot;@typescript-eslint/no-unused-vars&quot;: [
      &quot;error&quot;,
      { vars: &quot;all&quot;, args: &quot;after-used&quot;, ignoreRestSiblings: false },
    ],
    &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;warn&quot;, // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    &quot;no-empty&quot;: &quot;warn&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most of this is taken from &lt;a href=&quot;https://github.com/palmerhq/tsdx/pull/70/files&quot;&gt;the &lt;code&gt;tsdx&lt;/code&gt; PR&lt;/a&gt; which is for &lt;strong&gt;libraries&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;More &lt;code&gt;.eslintrc.json&lt;/code&gt; options to consider with more options you may want for &lt;strong&gt;apps&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/react&quot;,
    &quot;plugin:prettier/recommended&quot;,
    &quot;plugin:jest/recommended&quot;,
    &quot;plugin:unicorn/recommended&quot;
  ],
  &quot;plugins&quot;: [&quot;prettier&quot;, &quot;jest&quot;, &quot;unicorn&quot;],
  &quot;parserOptions&quot;: {
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;jest&quot;: true
  },
  &quot;settings&quot;: {
    &quot;import/resolver&quot;: {
      &quot;node&quot;: {
        &quot;extensions&quot;: [&quot;.js&quot;, &quot;.jsx&quot;, &quot;.ts&quot;, &quot;.tsx&quot;]
      }
    }
  },
  &quot;overrides&quot;: [
    {
      &quot;files&quot;: [&quot;**/*.ts&quot;, &quot;**/*.tsx&quot;],
      &quot;parser&quot;: &quot;typescript-eslint-parser&quot;,
      &quot;rules&quot;: {
        &quot;no-undef&quot;: &quot;off&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://blog.matterhorn.dev/posts/learn-typescript-linting-part-1/&quot;&gt;fuller TypeScript + ESLint setup guide here&lt;/a&gt; from Matterhorn, in particular check https://github.com/MatterhornDev/learn-typescript-linting.&lt;/p&gt; 
&lt;p&gt;Another great resource is &lt;a href=&quot;https://dev.to/robertcoopercode/using-eslint-and-prettier-in-a-typescript-project-53jb&quot;&gt;&quot;Using ESLint and Prettier in a TypeScript Project&quot;&lt;/a&gt; by @robertcoopercode.&lt;/p&gt; 
&lt;p&gt;Wes Bos is also working on &lt;a href=&quot;https://github.com/wesbos/eslint-config-wesbos/issues/68&quot;&gt;TypeScript support for his eslint+prettier config.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for information on Prettier, check out the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/blob/main/docs/advanced/misc-concerns.md#prettier&quot;&gt;Prettier&lt;/a&gt; guide.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react&quot;&gt;Stefan Baumgartner&#39;s TypeScript + React Guide&lt;/a&gt;, which serves as a side-by-side guide to the official docs with extra articles on styling, custom hooks and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react&quot;&gt;DefinitelyTyped React source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Recommended React + TypeScript talks&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_PBQ3if6Fmg&quot;&gt;Ultimate React Component Patterns with TypeScript&lt;/a&gt;, by Martin Hochel, GeeCon Prague 2018&lt;/li&gt; 
 &lt;li&gt;Please help contribute this new section!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: https://blog.mariusschulz.com/series/typescript-evolution with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: https://basarat.gitbook.io/typescript/&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Example App&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laststance/create-react-app-typescript-todo-example-2020&quot;&gt;Create React App TypeScript Todo Example 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6ypD7qv3Z8&quot;&gt;Ben Awad&#39;s 14 hour Fullstack React/GraphQL/TypeScript Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-realworld-app&quot;&gt;Cypress Realworld App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;My question isn&#39;t answered here!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. See &lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;CONTRIBUTORS.md&lt;/a&gt; for the full list. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Model      A320-251N
Engine     LEAP 1A-26
FMGS       Honeywell Pegasus II
FWC Std.   H2F9C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h3&gt;SimBrief Integration&lt;/h3&gt; 
&lt;p&gt;‚úà&lt;a href=&quot;https://www.simbrief.com/system/dispatch.php?sharefleet=eyJ0cyI6IjE2MDU4MjAwNzg5NDYiLCJiYXNldHlwZSI6IkEzMjAiLCJjb21tZW50cyI6IkZMWSBCWSBXSVJFIiwiaWNhbyI6IkEyME4iLCJuYW1lIjoiQTMyME5FTyBGQlciLCJlbmdpbmVzIjoiTEVBUC0xQTI2IiwicmVnIjoiQTIwTiIsImZpbiI6IiIsInNlbGNhbCI6IiIsImhleGNvZGUiOiIiLCJjYXQiOiJNIiwicGVyIjoiQyIsImVxdWlwIjoiU0RFM0ZHSElSV1kiLCJ0cmFuc3BvbmRlciI6IkxCMSIsInBibiI6IkExQjFDMUQxTzFTMSIsImV4dHJhcm1rIjoiIiwibWF4cGF4IjoiMTgwIiwid2d0dW5pdHMiOiJLR1MiLCJvZXciOiI0MTAwMCIsIm16ZnciOiI2MjUwMCIsIm10b3ciOiI3OTAwMCIsIm1sdyI6IjY2MDAwIiwibWF4ZnVlbCI6IjIxMjczIiwicGF4d2d0IjoiMTA0IiwiZGVmYXVsdGNpIjoiIiwiZnVlbGZhY3RvciI6IlAwMCIsImNydWlzZW9mZnNldCI6IlAwMDAwIn0-&quot;&gt;SimBrief Airframe with the correct weights&lt;/a&gt; Credits: &lt;a href=&quot;https://github.com/viniciusfont&quot;&gt;@viniciusfont&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pilot ID can be found in the Optional Entries section of the Dispatch Options page.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;h3&gt;A32NX Installer&lt;/h3&gt; 
&lt;p&gt;Download the new A32NX installer where you can select either the Stable or Developer build, and download and install the mod directly into your community folder, &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;download here&lt;/a&gt; (&lt;a href=&quot;https://github.com/flybywiresim/installer/&quot;&gt;source&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Traditional Download Methods&lt;/h3&gt; 
&lt;h4&gt;Latest Stable Release&lt;/h4&gt; 
&lt;p&gt;This is the recommended stable release, as it has been thoroughly tested.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest/download/flybywiresim-a32nx.zip&quot;&gt;Download the stable release here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see the changelog on the releases page: &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases&quot;&gt;View Here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build&lt;/h4&gt; 
&lt;p&gt;This has the latest features, but is much more unstable, use at your own risk.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/download/vmaster/A32NX-master.zip&quot;&gt;Download developer build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/tag/vmaster&quot;&gt;View info about the latest build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build (with custom FBW)&lt;/h4&gt; 
&lt;p&gt;This version is the same as the regular master/development version, but with the WIP custom fly-by-wire system. Expect issues with flight directors/autopilot if you intend to use this version. No support will be provided via Discord.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://api.flybywiresim.com/api/v1/download?url=https://flybywiresim-packages.b-cdn.net/vmaster-cfbw/A32NX-master-cfbw.zip&quot;&gt;Download custom FBW development build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/tree/fbw/docs&quot;&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; view warnings and info for the custom FBW build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Please follow ALL steps in this README if you encounter any issues with installation before seeking support.&lt;/h3&gt; 
&lt;p&gt;Open the zip that you downloaded from one of the links above, and drag the A32NX folder inside the zip into your Community folder.&lt;/p&gt; 
&lt;p&gt;See below for the location of your Community folder:&lt;/p&gt; 
&lt;p&gt;For the Microsoft Store edition AND/OR Gamepass edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\Packages\Microsoft.FlightSimulator_&amp;lt;RANDOMLETTERS&amp;gt;\LocalCache\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Steam edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Roaming\Microsoft Flight Simulator\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Boxed edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\MSFSPackages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above methods do not work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can find your community folder by going into FS2020 general options and enabling developer mode. You will see a menu appear on top. Go to tools and virtual file system. Click on watch bases and your community folder will be listed in one of the folders.&lt;/li&gt; 
 &lt;li&gt;Please make sure you&#39;re copying the &quot;A32NX&quot; folder into your community package folder, NOT the &quot;flybywiresim-a32nx&quot; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues (Please note that most issues are being worked on and some of them may even be fixed in the master branch)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captain&#39;s PFD may occasionally turn off during flight&lt;/li&gt; 
 &lt;li&gt;No Smoking switch doesn&#39;t use a full range of motion.&lt;/li&gt; 
 &lt;li&gt;Automatic ECAM page switching has minor bugs.&lt;/li&gt; 
 &lt;li&gt;AP not following the flight plan (leaking input values affect, but don&#39;t disconnect the AP) [Workaround: Set dead-zones for your input device higher]&lt;/li&gt; 
 &lt;li&gt;Autopilot goes direct to RWY on APP (same with the default A320) [Workaround: Use DIR to a waypoint or selected heading]&lt;/li&gt; 
 &lt;li&gt;Upper ECAM displays wrong THR levers position / N1 rating.&lt;/li&gt; 
 &lt;li&gt;Newly added ASOBO A320 liveries are incompatible with the A32NX mod.&lt;/li&gt; 
 &lt;li&gt;Ruder keybindings not working (you have to set your keybinding to rudder axis right and left)&lt;/li&gt; 
 &lt;li&gt;Wing dips on landing (due to bad transition to direct law in flare, same with the default A320) [Workaround use minimal aileron input on landing]&lt;/li&gt; 
 &lt;li&gt;Black screens / unable to start (conflict with another mod/livery or incorrect installation of the A32NX mod, use the &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;installer&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The original contents of this repository are DUAL LICENSED.&lt;/p&gt; 
&lt;p&gt;Original textual-form source code in this repository is licensed under the GNU General Public License version 3. Artistic assets (including but not limited to images, sound banks, 3D models, and textures) are licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Any other original works found to be not explicitly covered by the above definitions are all rights reserved to avoid ambiguities at the moment, but we are very permissive about their use if you contact us.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Microsoft Flight Simulator ¬© Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft&#39;s &quot;Game Content Usage Rules&quot; using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I download the aircraft in the current state?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Where is the plane in-sim?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The mod is added on top of the default A320neo from Asobo. If you want to uninstall it and revert to the original aircraft, just delete the A32NX folder in your community folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: What are the liveries available?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: All liveries for the default A320 are compatible with the A32NX Mod. You can download some of your favourite liveries at &lt;a href=&quot;https://flightsim.to&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When will it be released?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The project is an ongoing rolling release. See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When is the next update?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We don&#39;t know, since it depends on many factors. We will announce each Stable build update via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;discord&lt;/a&gt; and our social media: &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I join the team?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Head over to &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is it payware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do we report bugs?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Report bugs to us in the &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord server&lt;/a&gt;, under the #help channel, or by creating a GitHub issue. Just make sure to search for existing issues first before creating a new one.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Why is my version not the same as what I see others using?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We have two versions, the Stable and Developer (Master). The Stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The Developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time. If you find this to be the case, you can report these issues in #help in discord or via GitHub Issues (Check there is not an existing issue of the same nature as yours).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tencentyun/TIMSDK</title>
      <link>https://github.com/tencentyun/TIMSDK</link>
      <description>&lt;p&gt;ËÖæËÆØ‰∫ëÂç≥Êó∂ÈÄö‰ø° IM ÊúçÂä°ÔºåÂõΩÂÜÖ‰∏ãËΩΩÈïúÂÉèÔºö&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ÂÖ¨ÂëäÔºöTUIKit Android ‰∏é iOS Á´ØÂºÄÊîæ Pull RequestÔºåmerge ÊàêÂäüÂêé‰ºöÂú® README.md ‰∏äÁïô‰∏ãÊÇ®ÁöÑÂ§ßÂêçÂπ∂Ë∂ÖÈìæÂà∞ÊÇ®ÁöÑ Github ‰∏ªÈ°µÔºÅ&lt;/p&gt; 
&lt;h2&gt;ÈïúÂÉè‰∏ãËΩΩ&lt;/h2&gt; 
&lt;p&gt;ËÖæËÆØ‰∫ëÂàÜÊµÅ‰∏ãËΩΩÂú∞ÂùÄÔºö &lt;a href=&quot;https://github-1252463788.cos.ap-shanghai.myqcloud.com/imsdk/TIMSDK.zip&quot;&gt;DOWNLOAD&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;TUIKitÈõÜÊàê&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Êé•Âè£ÂçáÁ∫ß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tencentyun/TIMSDK/wiki/iOS-IMSDK-%E6%8E%A5%E5%8F%A3%E5%8F%98%E5%8C%96%EF%BC%88v2---v3---v4%EF%BC%89&quot;&gt;iOS v2 v3 v4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tencentyun/TIMSDK/wiki/Android-IMSDK-%E6%8E%A5%E5%8F%A3%E5%8F%98%E5%8C%96%EF%BC%88v2---v3---v4%EF%BC%89&quot;&gt;Android v2 v3 v4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tencentyun/TIMSDK/wiki/Windows-IMSDK-%E6%8E%A5%E5%8F%A3%E5%8F%98%E5%8C%96%EF%BC%88v2---v4%EF%BC%89&quot;&gt;Windows v2 v4&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÈóÆÈ¢òÂèçÈ¶à&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰∏∫‰∫ÜÊõ¥Â•ΩÁöÑ‰∫ÜËß£ÊÇ®‰ΩøÁî®TIMSDKÊâÄÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºåÊñπ‰æøÂø´ÈÄüÊúâÊïàÂÆö‰ΩçËß£ÂÜ≥TIMSDKÈóÆÈ¢òÔºåÂ∏åÊúõÊÇ®ÊåâÂ¶Ç‰∏ãÂèçÈ¶àÊåáÂºïÂèçÈ¶àissueÔºåÊñπ‰æøÊàë‰ª¨Â∞ΩÂø´Ëß£ÂÜ≥ÊÇ®ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tencentyun/TIMSDK/wiki/TIMSDK-issue%E6%9C%89%E6%95%88%E5%8F%8D%E9%A6%88%E6%A8%A1%E6%9D%BF&quot;&gt;TIMSDK issueÂèçÈ¶àÊåáÂºï&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ê†áÂáÜÁâà‰∏éÁ≤æÁÆÄÁâàÂ∑ÆÂºÇÂØπÊØî&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;SDK ‰ªé5.0ÁâàÊú¨ÂºÄÂßãÊñ∞Â¢ûÁ≤æÁÆÄÁâàÔºåÂéüÊúâÁâàÊú¨Áß∞‰∏∫Ê†áÂáÜÁâà„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Á≤æÁÆÄÁâà‰∏éÊ†áÂáÜÁâàÂêåÊó∂ÊîØÊåÅ V2 APIÔºåÂú®Êé•Âè£ËÉΩÂäõ‰∏äÂÆåÂÖ®‰∏ÄËá¥„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Á≤æÁÆÄÁâà‰∏çÂÜçÊîØÊåÅÊóßÁâà APIÔºåÊ†áÂáÜÁâàÁªßÁª≠ÊîØÊåÅÊóßÁâà API„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Âú® SDK ‰ΩìÁßØÂíåÂÆâË£ÖÂåÖÂ¢ûÈáè‰∏äÔºåÁ≤æÁÆÄÁâà‰∏éÊ†áÂáÜÁâàÁõ∏ÊØîÊúâÂ§ßÂπÖÂ∫¶Áº©Âáè„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Á≤æÁÆÄÁâàÁõÆÂâçÊîØÊåÅ Android Âíå iOS ‰∏§‰∏™Âπ≥Âè∞ÔºåÂêéÁª≠‰ºöÈÄêÊ≠•Â¢ûÂä†ÂØπ Windows Âíå Mac Âπ≥Âè∞ÁöÑÊîØÊåÅ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûúÊÇ®Ê≤°ÊúâÊé•ÂÖ•ËøáÊóßÁâà APIÔºåÂª∫ËÆÆÊÇ®Áõ¥Êé•‰ΩøÁî® V2 APIÔºåÈÄâÊã©Á≤æÁÆÄÁâà SDK„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûúÊÇ®Â∑≤ÁªèÊé•ÂÖ•‰∫ÜÊóßÁâà APIÔºåÊé®ËçêÊÇ®ÂçáÁ∫ßÂà∞ V2 APIÔºåÈÄêÊ≠•ÂàáÊç¢Âà∞Á≤æÁÆÄÁâà SDK„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SDK ‰ΩìÁßØÂ§ßÂ∞èÂØπÊØî&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;App ‰ΩìÁßØÂ¢ûÈáèÂØπÊØî&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;ÈõÜÊàêÊñπÂºèÂØπÊØî&lt;/h3&gt; 
&lt;h4&gt;jcenter ÈõÜÊàê (Android Âπ≥Âè∞)&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûú‰ΩøÁî®Ê†áÂáÜÁâà SDKÔºåËØ∑Âú® gradle ÈáåÊ∑ªÂä†Â¶Ç‰∏ã‰æùËµñ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dependencies {
  api &#39;com.tencent.imsdk:imsdk:ÁâàÊú¨Âè∑&#39;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûú‰ΩøÁî®Á≤æÁÆÄÁâà SDKÔºåËØ∑Âú® gradle ÈáåÊ∑ªÂä†Â¶Ç‰∏ã‰æùËµñ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dependencies {
  api &#39;com.tencent.imsdk:imsdk-smart:ÁâàÊú¨Âè∑&#39;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;cocoaPods ÈõÜÊàê (iOS Âπ≥Âè∞)&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûú‰ΩøÁî®Ê†áÂáÜÁâà SDKÔºåËØ∑ÊÇ®ÊåâÁÖßÂ¶Ç‰∏ãÊñπÂºèËÆæÁΩÆ Podfile Êñá‰ª∂&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;platform :ios, &#39;8.0&#39;
source &#39;https://github.com/CocoaPods/Specs.git&#39;

target &#39;App&#39; do
pod &#39;TXIMSDK_iOS&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûú‰ΩøÁî®Á≤æÁÆÄÁâà SDKÔºåËØ∑ÊÇ®ÊåâÁÖßÂ¶Ç‰∏ãÊñπÂºèËÆæÁΩÆ Podfile Êñá‰ª∂&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;platform :ios, &#39;8.0&#39;
source &#39;https://github.com/CocoaPods/Specs.git&#39;

target &#39;App&#39; do
pod &#39;TXIMSDK_Smart_iOS&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Êõ¥Â§öÈõÜÊàêÊñπÂºèËØ∑ÂèÇËÄÉ 
 &lt;!-- raw HTML omitted --&gt;ÈõÜÊàê SDK
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;ÊúÄÊñ∞Á≤æÁÆÄÁâà 5.2.210 @2021.03.12&lt;/h2&gt; 
&lt;h3&gt;SDK&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÈÄöÁî®ÂèòÊõ¥ÁÇπ&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅÊ∂àÊÅØÂêàÂπ∂ËΩ¨ÂèëÁöÑËÉΩÂäõ&lt;/li&gt; 
 &lt;li&gt;ÈïøËøûÊé•ËøûÁΩëÈÄªËæë‰ºòÂåñÔºåÈáçÁÇπÊèêÂçáÊµ∑Â§ñËøûÁΩëË¥®Èáè&lt;/li&gt; 
 &lt;li&gt;ÁªÜÂåñÁôªÂΩïÈîôËØØÁ†ÅÔºåÂØπÁôªÂΩïÊó∂ÁΩëÁªúÊòØÂê¶Ê≠£Â∏∏ËøõË°åÂå∫ÂàÜ&lt;/li&gt; 
 &lt;li&gt;cos ‰∏ä‰º†ÈÄªËæë‰ºòÂåñÔºåÊèêÂçáÂØåÂ™í‰ΩìÊ∂àÊÅØÂèëÈÄÅ‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;Â¢ûÂä†Ëé∑ÂèñÂéÜÂè≤Ê∂àÊÅØÁöÑÈ´òÁ∫ßÊé•Âè£&lt;/li&gt; 
 &lt;li&gt;Â¢ûÂä†ÊâπÈáèËé∑Âèñ‰ºöËØùÁöÑÊé•Âè£&lt;/li&gt; 
 &lt;li&gt;Â¢ûÂä†ÊâπÈáèÊ£ÄÊü•Â•ΩÂèãÂÖ≥Á≥ªÁöÑÊé•Âè£&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÂèëÈÄÅÂ§±Ë¥•ÁöÑÊ∂àÊÅØÂÜçÊ¨°ÂèëÈÄÅ‰πãÂêé‰ºöÂú®Êú¨Âú∞Êï∞ÊçÆÂ∫ìÁîüÊàê‰∏§Êù°Ê∂àÊÅØÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÁæ§ÊàêÂëòËµÑÊñôÂèòÊõ¥Êó∂ÂõûË∞ÉÁöÑÁ¶ÅË®ÄÊó∂Èó¥‰∏çÊ≠£Á°ÆÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÊé•Êî∂ÂõæÁâáÊ∂àÊÅØÊó∂ÂõûË∞ÉÁöÑÂõæÁâáÂÆΩÂ∫¶‰∏çÊ≠£Á°ÆÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§ç logLevel ËÆæÁΩÆ‰∏∫ None ‰πãÂêéÊéßÂà∂Âè∞‰ªçÁÑ∂‰ºöÊâìÂç∞Êó•ÂøóÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÊ∑ªÂä†Â•ΩÂèãÁöÑ add_source Â≠óÊÆµ‰∏çÊ≠£Á°ÆÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÂèëÈÄÅË∂ÖËøá 24M ÁöÑËßÜÈ¢ëÊñá‰ª∂Êó∂ÔºåÂèëÈÄÅËøõÂ∫¶ÂõûË∞ÉÂÅ∂Áé∞Ë¥üÊï∞ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÊúÄÊñ∞Ê†áÂáÜÁâà 5.1.56 @2021.03.03&lt;/h2&gt; 
&lt;h3&gt;SDK&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÈÄöÁî®ÂèòÊõ¥ÁÇπ&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºòÂåñÁΩëÁªúÈïøËøûÊé•ÈÄªËæëÔºåÈáçÁÇπÊèêÂçáÊµ∑Â§ñËøûÁΩëË¥®Èáè&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñÊï∞ÊçÆ‰∏äÊä•ÔºåÁªÜÂåñÁΩëÁªúË∂ÖÊó∂Áõ∏ÂÖ≥ÁöÑÈîôËØØÁ†Å&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çËã•Âπ≤Á®≥ÂÆöÊÄßÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;iOS Âπ≥Âè∞&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§ç IOS SDKÊèêÂèñÊó•ÂøóÂÅ∂Áé∞Â§±Ë¥•ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Android Âπ≥Âè∞&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android SDK ÊõøÊç¢Êñ∞ÁöÑÊó•ÂøóÁªÑ‰ª∂ÔºåÊèêÂçáÁ®≥ÂÆöÊÄß&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Windows Âπ≥Âè∞&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çWindows SDK ÊäõÊñ∞Ê∂àÊÅØÂõûË∞ÉÊó∂ÔºåÂèØËÉΩ‰ºöÂá∫Áé∞ÂÆ¢Êà∑Á∫øÁ®ãÈòªÂ°û SDK ÈÄªËæëÁ∫øÁ®ãÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ë∞ÅÊòØÁ¨¨‰∏Ä‰ΩçËã±ÈõÑÔºåËØ∑Áé∞Ë∫´ÔºÅ&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
