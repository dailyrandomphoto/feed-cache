<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 07 Nov 2021 01:53:47 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>knownsec/KCon</title>
      <link>https://github.com/knownsec/KCon</link>
      <description>&lt;p&gt;KCon is a famous Hacker Con powered by Knownsec Team.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KCon&lt;/h1&gt; 
&lt;p&gt;KCon is a famous Hacker Con powered by Knownsec Team.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://kcon.knownsec.com/&quot;&gt;http://kcon.knownsec.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CesiumGS/cesium</title>
      <link>https://github.com/CesiumGS/cesium</link>
      <description>&lt;p&gt;An open-source JavaScript library for world-class 3D globes and maps üåé&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg&quot; width=&quot;50%&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/CesiumGS/cesium&quot;&gt;&lt;img src=&quot;https://travis-ci.com/CesiumGS/cesium.svg?branch=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/cesium&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/cesium&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cesium.com/learn/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-online-orange.svg?sanitize=true&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://cesium.com/cesiumjs&quot;&gt;CesiumJS Homepage&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist&quot;&gt;CesiumJS Features Checklist&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;üöÄ&lt;/span&gt; Get Started&lt;/h3&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://cesium.com/downloads/&quot;&gt;Downloads page&lt;/a&gt; or install the &lt;a href=&quot;https://www.npmjs.com/package/cesium&quot;&gt;npm package&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install cesium
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Have questions? Ask them on the &lt;a href=&quot;https://community.cesium.com/&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Interested in contributing? See &lt;a href=&quot;https://raw.githubusercontent.com/CesiumGS/cesium/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;. &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;‚ùÑ&lt;/span&gt; Mission&lt;/h3&gt; 
&lt;p&gt;Our mission is to create the leading 3D globe and map for static and time-dynamic content, with the best possible performance, precision, visual quality, platform support, community, and ease of use.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;üìó&lt;/span&gt; License&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;Apache 2.0&lt;/a&gt;. CesiumJS is free for both commercial and non-commercial use.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;üåé&lt;/span&gt; Where Does the 3D Content Come From?&lt;/h3&gt; 
&lt;p&gt;CesiumJS can stream 3D content such as terrain, imagery, and 3D Tiles from the commercial &lt;a href=&quot;https://cesium.com/blog/2018/03/01/hello-cesium-ion/&quot;&gt;Cesium ion&lt;/a&gt; platform and other content sources. You are free to use any combination of content sources with CesiumJS that you please. Using Cesium ion helps support CesiumJS development. &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;üëè&lt;/span&gt; Featured Demos&lt;/h3&gt; 
&lt;p&gt; &lt;a href=&quot;https://cesium.com/blog/2018/08/21/cybercity/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2018-08-21-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://apps.agi.com/SatelliteViewer/?Status=Operational&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2018-03-29-comspoc-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2018/02/05/historic-pharsalia-cabin-point-cloud/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2018-02-05-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2017/12/12/onesky/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2017-12-12-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2017/11/20/nasa-storm-virtual-globe/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2017-11-20-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2017/11/16/gefs/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2017-11-16-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2019/01/04/norad-tracks-santa/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2019-01-04-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2017/07/23/drcog/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2017-07-23-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://demos.cesium.com/NewYork/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2017-05-05-nyc-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2018/09/27/swisstopo-live/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2018-09-27-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2016/12/12/stk-czml/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2016-12-12-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2016/09/29/contextcapture/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2016-09-29-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2016/04/20/flightradar24/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2016-04-20-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2016/02/03/fodarearth/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2016-02-03-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2015/08/19/mars-trek/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2015-08-19-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2015/07/16/hiroshima-archive/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2015-07-16-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://cesium.com/blog/2019/06/13/red-bull-x-alps-in-cesium/&quot;&gt;&lt;img src=&quot;https://images.prismic.io/cesium/2015-10-02-cover.jpg&quot; width=&quot;30%&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://cesium.com/blog/categories/userstories&quot;&gt;See all demos&lt;/a&gt;&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>facebook/react-native</title>
      <link>https://github.com/facebook/react-native</link>
      <description>&lt;p&gt;A framework for building native applications using React&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/&quot;&gt; React Native &lt;/a&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;Learn once, write anywhere:&lt;/strong&gt;&lt;br&gt; Build mobile apps with React. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;React Native is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react-native&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/facebook/react-native.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/react-native&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/react-native?color=brightgreen&amp;amp;label=npm%20package&quot; alt=&quot;Current npm package version.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=reactnative&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/reactnative.svg?label=Follow%20@reactnative&quot; alt=&quot;Follow @reactnative&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/tutorial&quot;&gt;Learn the Basics&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/showcase&quot;&gt;Showcase&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contribute&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/help&quot;&gt;Community&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/.github/SUPPORT.md&quot;&gt;Support&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;React Native brings &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;&#39;s&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&quot;https://reactnative.dev/docs/out-of-tree-platforms&quot;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/ECOSYSTEM.md&quot;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-building-your-first-react-native-app&quot;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã Requirements&lt;/h2&gt; 
&lt;p&gt;React Native apps may target iOS 11.0 and Android 5.0 (API 21) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&quot;https://expo.io&quot;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; 
&lt;h2&gt;üéâ Building your first React Native app&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snack.expo.io/@hramos/hello,-world!&quot;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/integration-with-existing-apps&quot;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Upgrading&lt;/h2&gt; 
&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&quot;https://reactnative.dev/docs/upgrading&quot;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;p&gt;React Native releases are discussed in the React Native Community, &lt;a href=&quot;https://github.com/react-native-community/react-native-releases&quot;&gt;&lt;strong&gt;@react-native-community/react-native-releases&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üëè How to Contribute&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h3&gt;Discussions&lt;/h3&gt; 
&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&quot;https://github.com/react-native-community/discussions-and-proposals&quot;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE-docs&quot;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/hashlips_art_engine</title>
      <link>https://github.com/HashLips/hashlips_art_engine</link>
      <description>&lt;p&gt;HashLips Art Engine is a tool used to create multiple different instances of artworks based on provided layers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips üëÑ&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_art_engine/raw/main/logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;üì∫ YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.com/invite/qh6MWhMJDN&quot;&gt;üëÑ Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;üí¨ Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;üê¶ Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;‚ÑπÔ∏è Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;HashLips Art Engine üî•&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_art_engine/raw/main/banner.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js. Before you use the generation engine, make sure you have node.js installed.&lt;/p&gt; 
&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; 
&lt;p&gt;If you are cloning the project then run this first, otherwise you can download the source code on the release page and skip this step.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/HashLips/hashlips_art_engine.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Go to the root of your folder and run this command if you have yarn installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively you can run this command if you have node installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage ‚ÑπÔ∏è&lt;/h2&gt; 
&lt;p&gt;Create your different layers as folders in the &#39;layers&#39; directory, and add all the layer assets in these directories. You can name the assets anything as long as it has a rarity weight attached in the file name like so: &lt;code&gt;example element#70.png&lt;/code&gt;. You can optionally change the delimiter &lt;code&gt;#&lt;/code&gt; to anything you would like to use in the variable &lt;code&gt;rarityDelimiter&lt;/code&gt; in the &lt;code&gt;src/config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Once you have all your layers, go into &lt;code&gt;src/config.js&lt;/code&gt; and update the &lt;code&gt;layerConfigurations&lt;/code&gt; objects &lt;code&gt;layersOrder&lt;/code&gt; array to be your layer folders name in order of the back layer to the front layer.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear, so your &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    growEditionSizeTo: 100,
    layersOrder: [
      { name: &quot;Head&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;name&lt;/code&gt; of each layer object represents the name of the folder (in &lt;code&gt;/layers/&lt;/code&gt;) that the images reside in.&lt;/p&gt; 
&lt;p&gt;Optionally you can now add multiple different &lt;code&gt;layerConfigurations&lt;/code&gt; to your collection. Each configuration can be unique and have different layer orders, use the same layers or introduce new ones. This gives the artist flexibility when it comes to fine tuning their collections to their needs.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear and you want to create a new race or just simple re-order the layers or even introduce new layers, then you&#39;re &lt;code&gt;layerConfigurations&lt;/code&gt; and &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    // Creates up to 50 artworks
    growEditionSizeTo: 50,
    layersOrder: [
      { name: &quot;Background&quot; },
      { name: &quot;Head&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
    ],
  },
  {
    // Creates an additional 100 artworks
    growEditionSizeTo: 150,
    layersOrder: [
      { name: &quot;Background&quot; },
      { name: &quot;Head&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
      { name: &quot;AlienHeadwear&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update your &lt;code&gt;format&lt;/code&gt; size, ie the outputted image size, and the &lt;code&gt;growEditionSizeTo&lt;/code&gt; on each &lt;code&gt;layerConfigurations&lt;/code&gt; object, which is the amount of variation outputted.&lt;/p&gt; 
&lt;p&gt;You can mix up the &lt;code&gt;layerConfigurations&lt;/code&gt; order on how the images are saved by setting the variable &lt;code&gt;shuffleLayerConfigurations&lt;/code&gt; in the &lt;code&gt;config.js&lt;/code&gt; file to true. It is false by default and will save all images in numerical order.&lt;/p&gt; 
&lt;p&gt;If you want to have logs to debug and see what is happening when you generate images you can set the variable &lt;code&gt;debugLogs&lt;/code&gt; in the &lt;code&gt;config.js&lt;/code&gt; file to true. It is false by default, so you will only see general logs.&lt;/p&gt; 
&lt;p&gt;If you want to play around with different blending modes, you can add a &lt;code&gt;blend: MODE.colorBurn&lt;/code&gt; field to the layersOrder &lt;code&gt;options&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;If you need a layers to have a different opacity then you can add the &lt;code&gt;opacity: 0.7&lt;/code&gt; field to the layersOrder &lt;code&gt;options&lt;/code&gt; object as well.&lt;/p&gt; 
&lt;p&gt;If you want to have a layer &lt;em&gt;ignored&lt;/em&gt; in the DNA uniqueness check, you can set &lt;code&gt;bypassDNA: true&lt;/code&gt; in the &lt;code&gt;options&lt;/code&gt; object. This has the effect of making sure the rest of the traits are unique while not considering the &lt;code&gt;Background&lt;/code&gt; Layers as traits, for example. The layers &lt;em&gt;are&lt;/em&gt; included in the final image.&lt;/p&gt; 
&lt;p&gt;To use a different metadata attribute name you can add the &lt;code&gt;displayName: &quot;Awesome Eye Color&quot;&lt;/code&gt; to the &lt;code&gt;options&lt;/code&gt; object. All options are optional and can be addes on the same layer if you want to.&lt;/p&gt; 
&lt;p&gt;Here is an example on how you can play around with both filter fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    growEditionSizeTo: 5,
    layersOrder: [
      { name: &quot;Background&quot; , {
        options: {
          bypassDNA: false;
        }
      }},
      { name: &quot;Eyeball&quot; },
      {
        name: &quot;Eye color&quot;,
        options: {
          blend: MODE.destinationIn,
          opacity: 0.2,
          displayName: &quot;Awesome Eye Color&quot;,
        },
      },
      { name: &quot;Iris&quot; },
      { name: &quot;Shine&quot; },
      { name: &quot;Bottom lid&quot;, options: { blend: MODE.overlay, opacity: 0.7 } },
      { name: &quot;Top lid&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is a list of the different blending modes that you can optionally use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const MODE = {
  sourceOver: &quot;source-over&quot;,
  sourceIn: &quot;source-in&quot;,
  sourceOut: &quot;source-out&quot;,
  sourceAtop: &quot;source-out&quot;,
  destinationOver: &quot;destination-over&quot;,
  destinationIn: &quot;destination-in&quot;,
  destinationOut: &quot;destination-out&quot;,
  destinationAtop: &quot;destination-atop&quot;,
  lighter: &quot;lighter&quot;,
  copy: &quot;copy&quot;,
  xor: &quot;xor&quot;,
  multiply: &quot;multiply&quot;,
  screen: &quot;screen&quot;,
  overlay: &quot;overlay&quot;,
  darken: &quot;darken&quot;,
  lighten: &quot;lighten&quot;,
  colorDodge: &quot;color-dodge&quot;,
  colorBurn: &quot;color-burn&quot;,
  hardLight: &quot;hard-light&quot;,
  softLight: &quot;soft-light&quot;,
  difference: &quot;difference&quot;,
  exclusion: &quot;exclusion&quot;,
  hue: &quot;hue&quot;,
  saturation: &quot;saturation&quot;,
  color: &quot;color&quot;,
  luminosity: &quot;luminosity&quot;,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you are ready, run the following command and your outputted art will be in the &lt;code&gt;build/images&lt;/code&gt; directory and the json in the &lt;code&gt;build/json&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The program will output all the images in the &lt;code&gt;build/images&lt;/code&gt; directory along with the metadata files in the &lt;code&gt;build/json&lt;/code&gt; directory. Each collection will have a &lt;code&gt;_metadata.json&lt;/code&gt; file that consists of all the metadata in the collection inside the &lt;code&gt;build/json&lt;/code&gt; directory. The &lt;code&gt;build/json&lt;/code&gt; folder also will contain all the single json files that represent each image file. The single json file of a image will look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;dna&quot;: &quot;d956cdf4e460508b5ff90c21974124f68d6edc34&quot;,
  &quot;name&quot;: &quot;#1&quot;,
  &quot;description&quot;: &quot;This is the description of your NFT project&quot;,
  &quot;image&quot;: &quot;https://hashlips/nft/1.png&quot;,
  &quot;edition&quot;: 1,
  &quot;date&quot;: 1731990799975,
  &quot;attributes&quot;: [
    { &quot;trait_type&quot;: &quot;Background&quot;, &quot;value&quot;: &quot;Black&quot; },
    { &quot;trait_type&quot;: &quot;Eyeball&quot;, &quot;value&quot;: &quot;Red&quot; },
    { &quot;trait_type&quot;: &quot;Eye color&quot;, &quot;value&quot;: &quot;Yellow&quot; },
    { &quot;trait_type&quot;: &quot;Iris&quot;, &quot;value&quot;: &quot;Small&quot; },
    { &quot;trait_type&quot;: &quot;Shine&quot;, &quot;value&quot;: &quot;Shapes&quot; },
    { &quot;trait_type&quot;: &quot;Bottom lid&quot;, &quot;value&quot;: &quot;Low&quot; },
    { &quot;trait_type&quot;: &quot;Top lid&quot;, &quot;value&quot;: &quot;Middle&quot; }
  ],
  &quot;compiler&quot;: &quot;HashLips Art Engine&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also add extra metadata to each metadata file by adding your extra items, (key: value) pairs to the &lt;code&gt;extraMetadata&lt;/code&gt; object variable in the &lt;code&gt;config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const extraMetadata = {
  creator: &quot;Daniel Eugene Botha&quot;,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don&#39;t need extra metadata, simply leave the object empty. It is empty by default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const extraMetadata = {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it, you&#39;re done.&lt;/p&gt; 
&lt;h2&gt;Utils&lt;/h2&gt; 
&lt;h3&gt;Updating baseUri for IPFS and description&lt;/h3&gt; 
&lt;p&gt;You might possibly want to update the baseUri and description after you have ran your collection. To update the baseUri and description simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run update_info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate a preview image&lt;/h3&gt; 
&lt;p&gt;Create a preview image collage of your collection, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate pixelated images from collection&lt;/h3&gt; 
&lt;p&gt;In order to convert images into pixelated images you would need a list of images that you want to convert. So run the generator first.&lt;/p&gt; 
&lt;p&gt;Then simply run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run pixelate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All your images will be outputted in the &lt;code&gt;/build/pixel_images&lt;/code&gt; directory. If you want to change the ratio of the pixelation then you can update the ratio property on the &lt;code&gt;pixelFormat&lt;/code&gt; object in the &lt;code&gt;src/config.js&lt;/code&gt; file. The lower the number on the left, the more pixelated the image will be.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const pixelFormat = {
  ratio: 5 / 128,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate pixelated images from collection&lt;/h3&gt; 
&lt;p&gt;In order to export gifs based on the layers created, you just need to set the export on the &lt;code&gt;gif&lt;/code&gt; object in the &lt;code&gt;src/config.js&lt;/code&gt; file to &lt;code&gt;true&lt;/code&gt;. You can also play around with the &lt;code&gt;repeat&lt;/code&gt;, &lt;code&gt;quality&lt;/code&gt; and the &lt;code&gt;delay&lt;/code&gt; of the exported gif.&lt;/p&gt; 
&lt;p&gt;Setting the &lt;code&gt;repeat: -1&lt;/code&gt; will produce a one time render and &lt;code&gt;repeat: 0&lt;/code&gt; will loop forever.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const gif = {
  export: true,
  repeat: 0,
  quality: 100,
  delay: 500,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Printing rarity data (Experimental feature)&lt;/h3&gt; 
&lt;p&gt;To see the percentages of each attribute across your collection, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run rarity
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The output will look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Trait type: Bottom lid
{ trait: &#39;High&#39;, chance: &#39;20&#39;, occurrence: &#39;15% out of 100%&#39; }
{ trait: &#39;Low&#39;, chance: &#39;40&#39;, occurrence: &#39;40% out of 100%&#39; }
{ trait: &#39;Middle&#39;, chance: &#39;40&#39;, occurrence: &#39;45% out of 100%&#39; }

Trait type: Iris
{ trait: &#39;Large&#39;, chance: &#39;20&#39;, occurrence: &#39;15% out of 100%&#39; }
{ trait: &#39;Medium&#39;, chance: &#39;20&#39;, occurrence: &#39;15% out of 100%&#39; }
{ trait: &#39;Small&#39;, chance: &#39;60&#39;, occurrence: &#39;70% out of 100%&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hope you create some awesome artworks with this code üëÑ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.cypress.io&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1268976/20607953/d7ae489c-b24a-11e6-9cc4-91c6c74c5e88.png&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://on.cypress.io&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/changelog&quot;&gt;Changelog&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/roadmap&quot;&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; The web has evolved. Finally, testing has too. &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Fast, easy and reliable testing for anything that runs in a browser. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Join us, we&#39;re &lt;a href=&quot;https://cypress.io/jobs&quot;&gt;hiring&lt;/a&gt;. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/cypress.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/gitter/room/cypress-io/cypress.svg?sanitize=true&quot; alt=&quot;Gitter chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://stackshare.io/cypress&quot;&gt; &lt;img src=&quot;https://img.stackshare.io/misc/follow-on-stackshare-badge.svg?sanitize=true&quot; alt=&quot;StackShare&quot;&gt; &lt;/a&gt;&lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://player.vimeo.com/video/237527670&quot;&gt; &lt;img alt=&quot;Why Cypress Video&quot; src=&quot;https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png&quot; width=&quot;75%&quot; height=&quot;75%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/cypress&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cypress.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href=&quot;https://docs.cypress.io/guides/getting-started/installing-cypress.html&quot;&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif&quot; alt=&quot;installing-cli e1693232&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md&quot;&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg?sanitize=true&quot; alt=&quot;Cypress.io&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. üìäüìàüéâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://d3js.org/logo.svg?sanitize=true&quot; align=&quot;left&quot; hspace=&quot;10&quot; vspace=&quot;6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/learn-d3&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/raw/master/API.md&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. You can also download the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release on GitHub&lt;/a&gt;. For vanilla HTML in modern browsers, import D3 from Skypack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import * as d3 from &quot;https://cdn.skypack.dev/d3@7&quot;;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For legacy environments, you can load D3‚Äôs UMD bundle from an npm-based CDN such as jsDelivr; a &lt;code&gt;d3&lt;/code&gt; global is exported:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/d3@7&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import {selectAll} from &quot;https://cdn.skypack.dev/d3-selection@3&quot;;

const div = selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;D3 is written using &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES2015 modules&lt;/a&gt;. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {scaleLinear} from &quot;d3-scale&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import * as d3 from &quot;d3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using dynamic import:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await import(&quot;d3&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also import individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await Promise.all([
  import(&quot;d3-format&quot;),
  import(&quot;d3-geo&quot;),
  import(&quot;d3-geo-projection&quot;)
]).then(d3 =&amp;gt; Object.assign({}, ...d3));
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/louislam&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors&quot; alt=&quot;GitHub Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true&quot; width=&quot;128&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;It is a self-hosted monitoring tool like &quot;Uptime Robot&quot;.&lt;/p&gt; 
&lt;img src=&quot;https://uptime.kuma.pet/img/dark.jpg&quot; width=&quot;700&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;ü•î Live Demo&lt;/h2&gt; 
&lt;p&gt;Try it!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://demo.uptime.kuma.pet&quot;&gt;https://demo.uptime.kuma.pet&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. The server is located at Tokyo, so if you live far from there it may affect your experience. I suggest that you should install and try it out for the best demo experience.&lt;/p&gt; 
&lt;p&gt;VPS is sponsored by Uptime Kuma sponsors on &lt;a href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;Open Collective&lt;/a&gt;! Thank you so much!&lt;/p&gt; 
&lt;h2&gt;‚≠ê Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / Ping / DNS Record / Push.&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href=&quot;https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications&quot;&gt;70+ notification services, click here for the full list&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;20 second intervals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/tree/master/src/languages&quot;&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Simple Status Page&lt;/li&gt; 
 &lt;li&gt;Ping Chart&lt;/li&gt; 
 &lt;li&gt;Certificate Info&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß How to Install&lt;/h2&gt; 
&lt;h3&gt;üê≥ Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker volume create uptime-kuma
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browse to &lt;a href=&quot;http://localhost:3001&quot;&gt;http://localhost:3001&lt;/a&gt; after starting.&lt;/p&gt; 
&lt;h3&gt;üí™üèª Non-Docker&lt;/h3&gt; 
&lt;p&gt;Required Tools: Node.js &amp;gt;= 14, git and pm2.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Update your npm to the latest version
npm install npm -g

git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in background using PM2
# Install PM2 if you don&#39;t have it: npm install pm2 -g
pm2 start server/server.js --name uptime-kuma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browse to &lt;a href=&quot;http://localhost:3001&quot;&gt;http://localhost:3001&lt;/a&gt; after starting.&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reserve proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üÜô How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üÜï What&#39;s Next?&lt;/h2&gt; 
&lt;p&gt;I will mark requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/milestones&quot;&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Project Plan:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/projects/1&quot;&gt;https://github.com/louislam/uptime-kuma/projects/1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üñº More Screenshots&lt;/h2&gt; 
&lt;p&gt;Light Mode:&lt;/p&gt; 
&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Status Page:&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the close ones is statping. Unfortunately, it is not stable and unmaintained.&lt;/li&gt; 
 &lt;li&gt;Want to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving me a ‚≠ê.&lt;/p&gt; 
&lt;h2&gt;üó£Ô∏è Discussion&lt;/h2&gt; 
&lt;h3&gt;Issues Page&lt;/h3&gt; 
&lt;p&gt;You can discuss or ask for help in &lt;a href=&quot;https://github.com/louislam/uptime-kuma/issues&quot;&gt;Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Subreddit&lt;/h3&gt; 
&lt;p&gt;My Reddit account: louislamlam You can mention me if you ask a question on Reddit. &lt;a href=&quot;https://www.reddit.com/r/UptimeKuma/&quot;&gt;https://www.reddit.com/r/UptimeKuma/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to report a bug or request a new feature. Free feel to open a &lt;a href=&quot;https://github.com/louislam/uptime-kuma/issues&quot;&gt;new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to translate Uptime Kuma into your langauge, please read: &lt;a href=&quot;https://github.com/louislam/uptime-kuma/tree/master/src/languages&quot;&gt;https://github.com/louislam/uptime-kuma/tree/master/src/languages&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to modify Uptime Kuma, this guideline may be useful for you: &lt;a href=&quot;https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md&quot;&gt;https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;English proofreading is needed too because my grammar is not that great sadly. Feel free to correct my grammar in this readme, source code, or wiki.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;‚ö° Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100px&quot; src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true&quot; align=&quot;center&quot; alt=&quot;GitHub Readme Stats&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Get dynamically generated GitHub stats on your readmes!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/actions&quot;&gt; &lt;img alt=&quot;Tests Passing&quot; src=&quot;https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/anuraghazra/github-readme-stats&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues&quot;&gt; &lt;img alt=&quot;Issues&quot; src=&quot;https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pulls&quot;&gt; &lt;img alt=&quot;GitHub pull requests&quot; src=&quot;https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://a.paddle.com/v2/click/16413/119403?link=1227&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-VSCode%20Power%20User%20%E2%86%92-gray.svg?colorA=655BE1&amp;amp;colorB=4F44D6&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://a.paddle.com/v2/click/16413/119403?link=2345&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-Node%20Cli.com%20%E2%86%92-gray.svg?colorA=61c265&amp;amp;colorB=4CAF50&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo&quot;&gt;View Demo&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues/new/choose&quot;&gt;Report Bug&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues/new/choose&quot;&gt;Request Feature&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_fr.md&quot;&gt;Fran√ßais &lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_cn.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_es.md&quot;&gt;Espa√±ol&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_de.md&quot;&gt;Deutsch&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_pt-BR.md&quot;&gt;Portugu√™s Brasileiro&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_it.md&quot;&gt;Italiano&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_kr.md&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_nl.md&quot;&gt;Nederlands&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_np.md&quot;&gt;‡§®‡•á‡§™‡§æ‡§≤‡•Ä&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_tr.md&quot;&gt;T√ºrk√ße&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;Love the project? Please consider &lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;donating&lt;/a&gt; to help it improve! &lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://indiafightscorona.giveindia.org&quot;&gt; &lt;img src=&quot;https://d2wvdrxmr8p0wf.cloudfront.net/static/giveindia.svg?sanitize=true&quot; alt=&quot;Give india logo&quot; width=&quot;200&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Are you considering to support the project by donating to me? Please DON&#39;T!!&lt;/p&gt; 
&lt;p&gt;Instead, Help India fight 2nd deadly wave of COVID,&lt;br&gt; Thousands of people are dying in India for lack of Oxygen &amp;amp; COVID related necessary infrastructure.&lt;/p&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://indiafightscorona.giveindia.org&quot;&gt;https://indiafightscorona.giveindia.org&lt;/a&gt; and make a small donation to help us fight covid and overcome this crisis.&lt;br&gt; Your small help goes a long way. &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card&quot;&gt;GitHub Stats Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins&quot;&gt;GitHub Extra Pins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card&quot;&gt;Top Languages Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-week-stats&quot;&gt;Wakatime Week Stats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;Customization&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options&quot;&gt;Common Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#stats-card-exclusive-options&quot;&gt;Stats Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options&quot;&gt;Repo Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-card-exclusive-options&quot;&gt;Language Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-card-exclusive-options&quot;&gt;Wakatime Card Exclusive Option&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own-vercel-instance&quot;&gt;Deploy Yourself&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy-paste this into your markdown content, and that&#39;s it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub&#39;s username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Available ranks are S+ (top 1%), S (top 25%), A++ (top 45%), A+ (top 60%), and B+ (everyone). The values are calculated by using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;cumulative distribution function&lt;/a&gt; using commits, contributions, issues, stars, pull requests, followers, and owned repositories. The implementation can be investigated at &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/src/calculateRank.js&quot;&gt;src/calculateRank.js&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;To hide any specific stats, you can pass a query parameter &lt;code&gt;?hide=&lt;/code&gt; with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding private contributions count to total commits count&lt;/h3&gt; 
&lt;p&gt;You can add the count of all your private contributions to the total commits count by using the query parameter &lt;code&gt;?count_private=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: If you are deploying this project yourself, the private contributions will be counted by default. Otherwise, you need to choose to share your private contribution counts.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;count_private=true&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;count_private=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :-&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes :-&lt;/h4&gt; 
&lt;p&gt;dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula&lt;/p&gt; 
&lt;img src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png&quot; alt=&quot;GitHub Readme Stats Themes&quot; width=&quot;600px&quot;&gt; 
&lt;p&gt;You can look at a preview for &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt; or checkout the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js&quot;&gt;theme config file&lt;/a&gt; &amp;amp; &lt;strong&gt;you can also contribute new themes&lt;/strong&gt; if you like :D&lt;/p&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of your &lt;code&gt;Stats Card&lt;/code&gt; or &lt;code&gt;Repo Card&lt;/code&gt; however you wish with URL params.&lt;/p&gt; 
&lt;h4&gt;Common Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title_color&lt;/code&gt; - Card&#39;s title color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;text_color&lt;/code&gt; - Body text color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;icon_color&lt;/code&gt; - Icons color if available &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;border_color&lt;/code&gt; - Card&#39;s border color &lt;em&gt;(hex color)&lt;/em&gt;. (Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bg_color&lt;/code&gt; - Card&#39;s background color &lt;em&gt;(hex color)&lt;/em&gt; &lt;strong&gt;or&lt;/strong&gt; a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_border&lt;/code&gt; - Hides the card&#39;s border &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - name of the theme, choose from &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache_seconds&lt;/code&gt; - set the cache header manually &lt;em&gt;(min: 1800, max: 86400)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;locale&lt;/code&gt; - set the language in the card &lt;em&gt;(e.g. cn, de, es, etc.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;border_radius&lt;/code&gt; - Corner rounding on the card_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in bg_color option to render a gradient, the format of the gradient is :-&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note on cache: Repo cards have a default cache of 4 hours (14400 seconds) if the fork count &amp;amp; star count is less than 1k, otherwise, it&#39;s 2 hours (7200 seconds). Also, note that the cache is clamped to a minimum of 2 hours and a maximum of 24 hours.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Stats Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hides the specified items from stats &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_rank&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt; hides the rank and automatically resizes the card width&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;show_icons&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;include_all_commits&lt;/code&gt; - Count total commits instead of just the current year commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;count_private&lt;/code&gt; - Count private commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disable_animations&lt;/code&gt; - Disables all animations in the card &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repo Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;show_owner&lt;/code&gt; - Show the repo&#39;s owner name &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Language Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hide the languages specified from the card &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;card_width&lt;/code&gt; - Set the card&#39;s width manually &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Show more languages on the card, between 1-10, defaults to 5 &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exclude_repo&lt;/code&gt; - Exclude specified repositories &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;strong&gt;Important:&lt;/strong&gt; Language names should be uri-escaped, as specified in &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding&quot;&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href=&quot;https://www.urlencoder.org/&quot;&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Wakatime Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hide the languages specified from the card &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_progress&lt;/code&gt; - Hides the progress bar and percentage &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Limit number of languages on the card, defaults to all reported langauges&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_domain&lt;/code&gt; - Set a custom API domain for the card, e.g. to use services like &lt;a href=&quot;https://github.com/mujx/hakatime&quot;&gt;Hakatime&lt;/a&gt; or &lt;a href=&quot;https://github.com/muety/wakapi&quot;&gt;Wakapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;range&lt;/code&gt; ‚Äì Request a range different from your WakaTime default, e.g. &lt;code&gt;last_7_days&lt;/code&gt;. See &lt;a href=&quot;https://wakatime.com/developers#stats&quot;&gt;WakaTime API docs&lt;/a&gt; for list of available options.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;show_owner&lt;/a&gt; variable to include the repo&#39;s owner username&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card show a GitHub user&#39;s most frequently used top language.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NOTE: Top Languages does not indicate my skill level or anything like that, it&#39;s a GitHub metric of which languages have the most code on GitHub. It&#39;s a new feature of github-readme-stats.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 10 (inclusive), and the default is 5.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Wakatime Week Stats&lt;/h1&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href=&quot;https://wakatime.com&quot;&gt;Wakatime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![willianrod&#39;s wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=willianrod)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;hide_progress=true&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;layout=compact&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;All Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Customized Card&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wakatime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Quick Tip (Align The Repo Cards)&lt;/h3&gt; 
&lt;p&gt;You usually won&#39;t be able to layout the images side by side. To do that you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;https://github.com/anuraghazra/convoychat&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy on your own Vercel instance&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://youtu.be/n6d4KHSKqGk?t=107&quot;&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you don&#39;t have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;p&gt;NOTE: Since &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pull/58&quot;&gt;#58&lt;/a&gt; we should be able to handle more than 5k requests and have no issues with downtime :D&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy to Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt; Guide on setting up Vercel üî® &lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href=&quot;https://vercel.com/&quot;&gt;vercel.com&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/tct1wg.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/btd78j.jpeg&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Sign into GitHub and allow access to all repositories, if prompted&lt;/li&gt; 
  &lt;li&gt;Fork this repo&lt;/li&gt; 
  &lt;li&gt;After forking the repo, open the &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json#L5&quot;&gt;&lt;code&gt;vercel.json&lt;/code&gt;&lt;/a&gt; file and change the &lt;code&gt;maxDuration&lt;/code&gt; field to &lt;code&gt;10&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href=&quot;https://vercel.com/dashboard&quot;&gt;Vercel dashboard&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Import Project&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/qckos0.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Import Git Repository&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/pqub9q.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Select root and keep everything as is, just add your environment variable named PAT_1 (as shown), which will contain a personal access token (PAT), which you can easily create &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;here&lt;/a&gt; (leave everything as is, just name it something, it can be anything you want) &lt;img src=&quot;https://files.catbox.moe/0ez4g7.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you&#39;re good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;span&gt;üíñ&lt;/span&gt; Support the project&lt;/h2&gt; 
&lt;p&gt;I open-source almost everything I can, and I try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are few ways you can do it :-&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project &lt;span&gt;üöÄ&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;&lt;img src=&quot;https://ionicabizau.github.io/badges/paypal.svg?sanitize=true&quot; alt=&quot;paypal.me/anuraghazra&quot;&gt;&lt;/a&gt; - You can make one-time donations via PayPal. I&#39;ll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;üçµ&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&quot; alt=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebookexperimental/Recoil</title>
      <link>https://github.com/facebookexperimental/Recoil</link>
      <description>&lt;p&gt;Recoil is an experimental state management library for React apps. It provides several capabilities that are difficult to achieve with React alone, while being compatible with the newest features of React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recoil ¬∑ &lt;a href=&quot;https://www.npmjs.com/package/recoil&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/recoil&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/actions&quot;&gt;&lt;img src=&quot;https://github.com/facebookexperimental/Recoil/workflows/Node.js%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/recoiljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/recoiljs?label=Follow%20Recoil&amp;amp;style=social&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Recoil is an experimental set of utilities for state management with React.&lt;/p&gt; 
&lt;p&gt;Please see the website: &lt;a href=&quot;https://recoiljs.org&quot;&gt;https://recoiljs.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The Recoil package lives in &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;npm&lt;/a&gt;. To install the latest stable version, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you&#39;re using &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;yarn&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you&#39;re using &lt;a href=&quot;https://cloud.google.com/community/tutorials/install-bower-dependencies-on-google-app-engine&quot;&gt;bower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;bower install --save recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Development of Recoil happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Recoil.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Recoil is &lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/main/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>764763903a/xdd-plus</title>
      <link>https://github.com/764763903a/xdd-plus</link>
      <description>&lt;p&gt;xdd-plus&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Ëá™Áî®„ÄÅÂ≠¶‰π†„ÄÅÁà±Áî®‰∏çÁî®„ÄÇÊàëÂ∞±ÊòØ‰∏ä‰º†Êï∞ÊçÆ‰πü‰∏çÂè´ÂÅ∑ÔºåÊàëËá™Â∑±ËÑöÊú¨Ëøò‰∏çÊòØÊÉ≥ÂíãÂÜôÂ∞±ÂíãÂÜôÔºåÊï¥Â§©ÂÅ∑ÂÅ∑ÂÅ∑ÁöÑÔºåÊØõÁóÖ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;master:ÁöÑÂÄºÂç≥‰∏∫ÂØÜÁ†ÅÔºåÂêéÈù¢‰∏çÂèØÂ∏¶Ê≥®ÈáäÔºåÂÖ®ÂåπÈÖçÊñπÂèØÁôªÂΩïÔºå‰πü‰∏çË¶Åpt_pin ÂèØËá™ÂÆö‰πâ&lt;/li&gt; 
 &lt;li&gt;2.9+ÁâàÊú¨ÈúÄË¶ÅÈÖçÁΩÆ cidÂíåsecret Âú®ÈùíÈæôÈáåÈù¢Á≥ªÁªüËÆæÁΩÆÔºåÊ∑ªÂä†Â∫îÁî®ÂêéÈÖçÁΩÆ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;ÊîØÊåÅ‰ΩúËÄÖ&lt;/h1&gt; 
&lt;p&gt;Â∞±ÂΩìÊòØÊîØÊåÅÊîØÊåÅ‰ΩúËÄÖÊõ¥Êñ∞Âêß Ë∞¢Ë∞¢ÂêÑ‰Ωç‰∫Ü„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/10/26/Av6oWqYS5UpFf2g.jpg&quot; alt=&quot;ÂæÆ‰ø°ÂõæÁâá_20211026143647.jpg&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Êõ¥Êñ∞Êó•Âøó&lt;/h1&gt; 
&lt;h2&gt;10-26&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫ÜÊé®‰∏ÄÊé®‰∏çÊ≠£Â∏∏Êâ£‰ΩôÈ¢ùÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;ÊÅ¢Â§çsohaÁ≠âÂäüËÉΩ ÊÖéÁî®&lt;/li&gt; 
 &lt;li&gt;‰∏ã‰∏™ÁâàÊú¨Êé®Âá∫Á†ç‰ª∑ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;ÂèëË¥¢Â§ßËµ¢ÂÆ∂Âä©ÂäõÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-11&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÈÄÇÈÖçV2.8+ÁâàÊú¨ÂåÖÊã¨Âç≥Â∞ÜÊù•ÁöÑ3.0ÁâàÊú¨ÈÉΩÈÄÇÈÖç‰∫Ü = - Âü∫Êú¨‰Ω†‰ª¨ËÉΩÁî®Âà∞ÈªÑ‰∫ÜÊää&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫ÜQQËΩ¨Ë¥¶ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-07&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÂª∂Êó∂ËÆæÁΩÆÔºåÊÄïÈªëÂè∑Ë∞ÉÈ´òÔºå‰∏çÊÄïÁöÑË∞É‰Ωé&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-04&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûQQËΩ¨Ë¥¶ÂäüËÉΩ Ê†ºÂºè QQËΩ¨Ë¥¶ QQ Èí± ‰æãÂ¶Ç QQËΩ¨Ë¥¶ 7647 100&lt;/li&gt; 
 &lt;li&gt;ÂêÑ‰ΩçÂ§ßËÄÅÁà∑ÊîØÊåÅÊîØÊåÅ‰ΩúËÄÖÂêß Ë∞¢Ë∞¢Âï¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-03&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÁ©∫pinÂèØÂØºÂÖ•ÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;ÂâîÈô§ckÊâπÈáèÂØºÂÖ•ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-02&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÂà†Èô§Êåá‰ª§Ê≤°ÊúâÂà†Èô§jdcookiepool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10-01&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â§ßÂÆ∂ÂÆâÂøÉËøáËäÇ ÂõΩÂ∫ÜÂø´‰πê&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çWSkeyËá™Âä®Êó†ÈôêÊõ¥Êñ∞ÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÂà†Èô§Êåá‰ª§‰∏çÂ§üÂΩªÂ∫ïÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9-27&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Â¢ûÂä†ÈÖçÁΩÆÊòØÂê¶Ëá™Âä®Ê∑ªÂä†Â•ΩÂèã Ê≥®ÊÑèÁúãÈÖçÁΩÆ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â¢ûÂä†Áü≠‰ø°Ëá™Âä®ÁªëÂÆöQQ ÔºàÊ≠§Êé•Âè£Èù¢ÂêëÂÇªÂ¶ûÂØπÊé•Ôºâ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â¢ûÂä†limÈÖçÁΩÆÔºåÂèØÂØπÊü•ËØ¢Á≠âÂêÑÁßçÂëΩ‰ª§ËøõË°åÊ¨°Êï∞ÈôêÂà∂„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ºöÂëò‰∏≠ÂøÉ‰ª£Á†ÅÂÜÖÊµã‰∏≠&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9-24&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âç≥Â∞Ü‰∏äÁ∫øCKÊèê‰∫§È°µÈù¢Ôºå‰ºöÂëò‰∏≠ÂøÉÈ°µÈù¢&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9-21&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÂä†Â•ΩÂèãËá™Âä®ÂêåÊÑè&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÊ∏ÖÁêÜËøáÊúüË¥¶Âè∑Êåá‰ª§&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊâ´Á†ÅÁôªÂΩïÔºàÊöÇÂÅúÔºâ&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÂà†Èô§WCKÊåá‰ª§ Âà†Èô§ËøáÊúüwskey&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§ç‰πãÂâç‰∏¥Êó∂Â±èËîΩÂ§±ÊïàÈÄöÁü•Ôºå‰∏¥Êó∂ÂÖ≥Èó≠Â§±ÊïàË¥¶Âè∑Â§ÑÁêÜ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰∏ã‰∏™ÂºÄÂèëÈáçÁÇπÊòØÁôªÂΩïÈ°µÈù¢Âíå‰ºöÂëò‰∏≠ÂøÉ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9-20&lt;/h2&gt; 
&lt;p&gt;ÊÑüË∞¢Â§ß‰Ω¨Â¢ûÂä†xddÁöÑÊé•ÂÖ•&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rubyangxg/jd-qinglong&quot;&gt;Y‰Ω¨ÁöÑJD-qinglong&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÈÖçÁΩÆconfig‰∏≠ÁöÑapiTokenÔºåÂç≥ÂèØÂÆåÊàê‰∏éY‰Ω¨ÁöÑÁü≠‰ø°ÂØπÊé•&lt;/p&gt; 
&lt;p&gt;XDD_URLÊ†ºÂºè‰∏∫&lt;a href=&quot;http://IP%E5%9C%B0%E5%9D%80:%E7%AB%AF%E5%8F%A3/api/login/smslogin&quot;&gt;http://IPÂú∞ÂùÄ:Á´ØÂè£/api/login/smslogin&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;C:%5CUsers%5C76476%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210920125520315.png&quot; alt=&quot;image-20210920125520315&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ÂÜçÊ¨°ÊÑüË∞¢Y‰Ω¨ ÂÖ∑‰ΩìÊïôÁ®ãÈóÆÈóÆÁæ§ÈáåÊàñËÄÖÁ≠âÂ•ΩÂøÉÁæ§ÂèãÊèê‰æõÊàëÈ°∂ÁΩÆÊõ¥Êñ∞&lt;/p&gt; 
&lt;h2&gt;9-19&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Áü≠‰ø°ÂØπÊé•Êé•Âè£Á≠âÂæÖYÂØπÊé•&lt;/li&gt; 
 &lt;li&gt;fix ‰∏ÉËøûÂ§±ÊïàÈÄöÁü•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;09-18‰πãÂâç&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂèëÈÄÅwskeyÂç≥ÂèØËá™Âä®Ê∑ªÂä†Ë¥¶Âè∑&lt;/li&gt; 
 &lt;li&gt;Ë¥¶Âè∑ËøáÊúüËá™Âä®Êç¢key&lt;/li&gt; 
 &lt;li&gt;ÂÆöÊó∂ÂçÅ‰∫åÂ∞èÊó∂Ëá™Âä®Êç¢key&lt;/li&gt; 
 &lt;li&gt;ÁºìÂ≠òtoken&lt;/li&gt; 
 &lt;li&gt;ÊâπÈáèÁªëÂÆöwskey&lt;/li&gt; 
 &lt;li&gt;Â§öÂÆπÂô® tokenÁºìÂ≠òËøáÊúüÈóÆÈ¢ò‰øÆÂ§ç&lt;/li&gt; 
 &lt;li&gt;Ëß£ÂÜ≥%!(EXTRA ÈîôËØØ&lt;/li&gt; 
 &lt;li&gt;ÊâãÂä®Êåá‰ª§Êõ¥Êñ∞&lt;/li&gt; 
 &lt;li&gt;ÂèØÊõøÊç¢Â§±Êïàwskey&lt;/li&gt; 
 &lt;li&gt;wskeyÂ§±ÊïàÊ£ÄÊµã&lt;/li&gt; 
 &lt;li&gt;WhiskeyÊõ¥Êñ∞&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÂà†Èô§Ë¥¶Âè∑Êåá‰ª§&lt;/li&gt; 
 &lt;li&gt;Ê∏ÖÁêÜËøáÊúüË¥¶Âè∑Êåá‰ª§&lt;/li&gt; 
 &lt;li&gt;ÂêàÂπ∂ËØ¶ÁªÜÊü•ËØ¢ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÊâÄÊúâÊ†ºÂºèÂæóCK ALOOK ‰∫¨‰∏úAPPÁ≠âÂï•ÈÉΩË°å&lt;/li&gt; 
 &lt;li&gt;ÂÜôÂÖ•Â§±Ë¥•ÈóÆÈ¢òÂ∑≤Ëß£ÂÜ≥wskeyÂ§±Êïà‰∏§Ê¨°ËΩ¨Êç¢&lt;/li&gt; 
 &lt;li&gt;wskeyËøáÊúüÊèêÁ§∫&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÊõ¥Êñ∞ÊåáÂÆöË∑≥ËøáÁ©∫wskey&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çËΩ¨Êç¢ÈîôËØØËá™Âä®Êîπ‰∏∫false ‰øÆÂ§ç‰∏ÉÊ¨°Êó†ÈôêËΩ¨Êç¢ÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢û AtTimeÂèÇÊï∞ ‰∏çÈÖçÁΩÆÂØºËá¥Â§±Ë¥•ÂæóÂà´ÊÄ™Êàë&lt;/li&gt; 
 &lt;li&gt;AtTime: #Â°´ÂÜô1-12‰πãÈó¥ÁöÑÊï∞ Â°´ÈîôËá™Ë¥üÈªòËÆ§‰∏∫10 10ÁÇπÂÆπÊòìÂá∫Áé∞È´òÂ≥∞Ë∂ÖÊó∂„ÄÇ&lt;/li&gt; 
 &lt;li&gt;IsHelp: #Â°´ÂÜôtrueÊàñËÄÖfalse ÈªòËÆ§false ÊòØÂê¶ÂæÄÂÆπÂô®Ê∑ªÂä†Âä©ÂäõÁ†Å&lt;/li&gt; 
 &lt;li&gt;IsOldV4: #Â°´ÂÜôtrueÊàñËÄÖfalse ÈªòËÆ§false ÊòØÂê¶Êñ∞ÁâàÊàñËÄÖÊóßÁâàV4&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;p&gt;fix ÈáçÂ§ßBUG‰øÆÂ§çÔºåËß£ÂÜ≥‰ª•‰∏ãÂá†‰∏™ÈóÆÈ¢òÔºå&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûË¥¶Âè∑ÈÉ®ÂàÜÂèÇÊï∞Á©∫ÁôΩ&lt;/li&gt; 
 &lt;li&gt;‰∏çÁÆ°ÊòØCKÊñ∞Â¢ûËøòÊòØWSKEYÊñ∞Â¢ûË¥¶Âè∑ÂØºËá¥Ê∏ÖÁ©∫CKÔºåÁî±1ÂØºËá¥ÁöÑ&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊ∑ªÂä†ÂêéËá™Âä®ÂõûÂ§çÊü•ËØ¢ÂèÇÊï∞„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çË¥¶Âè∑Êó†ÈôêÂà§ÈîôÈóÆÈ¢ò„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÁ∫ØCKÁâàÊú¨ ÂèØÈÖçÁΩÆË∞ÉÊï¥‰∏∫WSKEY+CK ÂíåÁ∫ØCKÁâàÊú¨&lt;/li&gt; 
 &lt;li&gt;Wskey: # Â°´Á©∫ÈªòËÆ§Á¶ÅÁî®wskeyËΩ¨Êç¢ ÈúÄË¶ÅÁöÑÂ°´trueÊñ∞Â¢ûÈÖçÁΩÆ ÈªòËÆ§ÂÖ≥Èó≠wskey ÈúÄË¶ÅÁöÑËá™Â∑±ËÆæÁΩÆ‰∏ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÂºÄÂèëÁõÆÊ†á&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;plusÁôªÈôÜÈ°µÈù¢&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÂ§¥ÈÉ®Ë¥¶Âè∑ÊåâÊ¨°Â∫èËøõÂÖ•ÂÆπÂô®Âä©ÂäõÊ®°Âºè&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñÊ£ÄÊµãCk‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;Â¢ûÂä†Êâ´Á†ÅÁôªÂΩïÔºåÈóÆÈ¢òÊòØÂè™ËÉΩQQÊâ´Á†ÅÁôªÂΩïÔºåÊúâÁÇπÁ∫†ÁªìË¶Å‰∏çË¶ÅÂä†&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;È∏£Ë∞¢&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rubyangxg/jd-qinglong&quot;&gt;jd-qinglong&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rubyangxg/jd-qinglong&quot;&gt;ÂÇªÂ¶û&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ufuckee/jd_cookie&quot;&gt;fuckeeÁöÑÊãìÂ±ïÊèí‰ª∂&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‰ª•ÂèäÂ§ßÂ§ßÂ∞èÂ∞èÁöÑÊ®°Âùó‰ΩúËÄÖ&lt;/p&gt; 
&lt;h1&gt;ÂÆâË£ÖÊïôÁ®ã&lt;/h1&gt; 
&lt;p&gt;xdd-plusÂÆâË£ÖÊïôÁ®ã Á¨¨‰∏ÄÊ≠•Ôºö‰∏ãËΩΩgo cd /usr/local &amp;amp;&amp;amp; wget &lt;a href=&quot;https://golang.google.cn/dl/go1.16.7.linux-amd64.tar.gz&quot;&gt;https://golang.google.cn/dl/go1.16.7.linux-amd64.tar.gz&lt;/a&gt; -O go1.16.7.linux-amd64.tar.gz Á¨¨‰∫åÊ≠•ÔºöËß£Âéãgo tar -xvzf go1.16.7.linux-amd64.tar.gz Á¨¨‰∏âÊ≠•ÔºöËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè vi /etc/profile Â∞ÜÊñáÊú¨Â§çÂà∂Âà∞ÊúÄÂêé‰∏ÄË°å export GO111MODULE=on export GOPROXY=&lt;a href=&quot;https://goproxy.cn&quot;&gt;https://goproxy.cn&lt;/a&gt; export GOROOT=/usr/local/go export GOPATH=/usr/local/go/path export PATH=$PATH:$GOROOT/bin:$GOPATH/bin Á¨¨‰∫îÊ≠•ÔºöÂÖàÊåâ esc ÁÑ∂ÂêéËæìÂÖ• :wq ‰øùÂ≠òÊñá‰ª∂Âêé source /etc/profile Á¨¨ÂÖ≠Ê≠•ÔºöÊ£ÄÊü•goÂÆâË£Ö go env Á¨¨‰∏ÉÊ≠•ÔºöÊãâxdd-plusÁöÑÂ∫ì cd ~ &amp;amp;&amp;amp; git clone &lt;a href=&quot;https://ghproxy.com/https://github.com/764763903a/xdd-plus.git&quot;&gt;https://ghproxy.com/https://github.com/764763903a/xdd-plus.git&lt;/a&gt; Á¨¨ÂÖ´Ê≠•ÔºöÁºñËØëxdd-plus cd /root/xdd-plus &amp;amp;&amp;amp; go build&lt;/p&gt; 
&lt;h1&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h1&gt; 
&lt;p&gt;ÁºñÁ†ÅÈóÆÈ¢òÂèÇËÄÉ &lt;a href=&quot;https://blog.csdn.net/qq_29499107/article/details/83583983&quot;&gt;https://blog.csdn.net/qq_29499107/article/details/83583983&lt;/a&gt; /usr/lib64/python3.6/http&lt;/p&gt; 
&lt;p&gt;TokenÊïÖÈöúËØ∑ÂÖàÁî®ÂÆòÊñπÊïôÁ®ãÈáçË£Ö Â∑≤ÊéíÊü•ÊòØnginxÈóÆÈ¢ò &lt;a href=&quot;https://thin-hill-428.notion.site/2-8Faker-QL-pannel-Faker-Repository-environment-Setup-45edcbfe90d74d8abb2d71896eab3be7&quot;&gt;https://thin-hill-428.notion.site/2-8Faker-QL-pannel-Faker-Repository-environment-Setup-45edcbfe90d74d8abb2d71896eab3be7&lt;/a&gt; ËØ∑‰ΩøÁî®ÂÆòÊñπ‰∏ÄÈîÆÂÆâË£Ö Â∞±Ëß£ÂÜ≥Ê≠§ÈóÆÈ¢ò‰∫Ü&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Â¶Ç‰ΩïËá™Âä®Êõ¥Êñ∞Áü≠‰ø°ÈïúÂÉè&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d \
    --name watchtower \
    --restart always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    containrrr/watchtower \
    --cleanup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÊúâÈóÆÈ¢òËá™Â∑±ÊèêÈúÄÊ±ÇÂïä„ÄÇ„ÄÇ„ÄÇÊúâÁ©∫Â∞±Ëß£ÂÜ≥Ê≤°Á©∫Èù†Ëá™Â∑±‰∫ÜÂêÑ‰ΩçÈìÅÂ≠ê&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2142.12-brightgreen.svg?sanitize=true&quot; alt=&quot;WhatsApp_Web 2.2142.12&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wwebjs.dev/guide&quot;&gt;Guide / Getting Started&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.wwebjs.dev/&quot;&gt;Reference documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.org/package/whatsapp-web.js&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);

const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Remote Access&lt;/h2&gt; 
&lt;p&gt;You could also connect to any previously existing browser instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const client = new Client({ 
    puppeteer: {
        browserWSEndpoint: `ws://localhost:3000`
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Installing a browser using browserless:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  --rm \
  -p 3000:3000 \
  -e &quot;MAX_CONCURRENT_SESSIONS=1&quot; \
  browserless/chrome:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://docs.browserless.io/docs/docker-quickstart.html&quot;&gt;https://docs.browserless.io/docs/docker-quickstart.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Remote Debugging&lt;/h3&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Running a browser with websocket remote debugging enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;chrome.exe --remote-debugging-port=9222&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After that check the following webpage and check &lt;a href=&quot;http://127.0.0.1:9220/json&quot;&gt;http://127.0.0.1:9220/json&lt;/a&gt; and get the &lt;strong&gt;webSocketDebuggerUrl&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;‚úÖ &lt;a href=&quot;https://wwebjs.dev/guide/handling-attachments.html#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send buttons&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send lists&lt;/td&gt; 
   &lt;td&gt;‚úÖ (business accounts not supported)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&quot;https://whatsapp.com&quot;&gt;https://whatsapp.com&lt;/a&gt;. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wix/Detox</title>
      <link>https://github.com/wix/Detox</link>
      <description>&lt;p&gt;Gray box end-to-end testing and automation framework for mobile apps&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Detox&quot; width=&quot;380&quot; src=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/img/DetoxLogo.png&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Detox &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;Gray box end-to-end testing and automation library for mobile apps.&lt;/b&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Demo&quot; src=&quot;http://i.imgur.com/eoaDEYp.gif&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png&quot; alt=&quot;&quot; height=&quot;24&quot; width=&quot;1&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/detox.svg?style=flat&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/detox.svg?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins-oss.wixpress.com/job/multi-detox-master/&quot;&gt;&lt;img src=&quot;https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-detox-master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/wix/Detox?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Detox is released under the MIT license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Guide.Contributing.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PR&#39;s welcome!&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/detoxe2e&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/detoxe2e?label=Follow&amp;amp;style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What Does a Detox Test Look Like?&lt;/h2&gt; 
&lt;p&gt;This is a test for a login screen, it runs on a device/simulator like an actual user:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;describe(&#39;Login flow&#39;, () =&amp;gt; {
    
  it(&#39;should login successfully&#39;, async () =&amp;gt; {
    await device.reloadReactNative();
    
    await element(by.id(&#39;email&#39;)).typeText(&#39;john@example.com&#39;);
    await element(by.id(&#39;password&#39;)).typeText(&#39;123456&#39;);
    await element(by.text(&#39;Login&#39;)).tap();
      
    await expect(element(by.text(&#39;Welcome&#39;))).toBeVisible();
    await expect(element(by.id(&#39;email&#39;))).toNotExist();
  });
  
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.GettingStarted.md&quot;&gt;Get started with Detox now!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;High velocity native mobile development requires us to adopt continuous integration workflows, which means our reliance on manual QA has to drop significantly. Detox tests your mobile app while it&#39;s running in a real device/simulator, interacting with it just like a real user.&lt;/p&gt; 
&lt;p&gt;The most difficult part of automated testing on mobile is the tip of the testing pyramid - E2E. The core problem with E2E tests is flakiness - tests are usually not deterministic. We believe the only way to tackle flakiness head on is by moving from black box testing to gray box testing. That&#39;s where Detox comes into play.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cross Platform:&lt;/strong&gt; Write cross-platform tests in JavaScript. Currently supports iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runs on Devices&lt;/strong&gt; (not yet supported on iOS): Gain confidence to ship by testing your app on a device/simulator just like a real user.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatically Synchronized:&lt;/strong&gt; Stops flakiness at the core by monitoring asynchronous operations in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Made For CI:&lt;/strong&gt; Execute your E2E tests on CI platforms like Travis without grief.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Runner Independent:&lt;/strong&gt; Use Jest, Mocha, AVA, or any other JavaScript test runner you like (spoiler: we have our favorite).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Debuggable:&lt;/strong&gt; Modern async-await API allows breakpoints in asynchronous tests to work as expected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Versions&lt;/h2&gt; 
&lt;h3&gt;Environment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OS&lt;/strong&gt;: macOS 10.15 (Catalina) or higher&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Xcode&lt;/strong&gt;: 11.0 or higher 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;iOS Simulator Runtime&lt;/strong&gt;: iOS 13.0 or higher&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React Native&lt;/h3&gt; 
&lt;p&gt;Detox is built from the ground up to support React Native projects as well as pure native ones.&lt;/p&gt; 
&lt;p&gt;The following React Native versions have been tested:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;iOS&lt;/th&gt; 
   &lt;th&gt;Android&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚â§0.64.x&lt;/td&gt; 
   &lt;td&gt;‚â•0.59, ‚â§0.64 - Visibility edge-case: see this &lt;a href=&quot;https://github.com/facebook/react-native/issues/23870&quot;&gt;RN issue&lt;/a&gt;*&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Future versions are most likely supported, but have not been tested yet. Please open issues if you find specific issues with newer React Native versions.&lt;/p&gt; 
&lt;h2&gt;Get Started with Detox!&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.GettingStarted.md&quot;&gt;Getting Started Guide&lt;/a&gt; to get Detox running on your app in less than 10 minutes.&lt;/p&gt; 
&lt;h2&gt;Documents Directory&lt;/h2&gt; 
&lt;p&gt;Explore further about using Detox from the &lt;a href=&quot;https://github.com/wix/Detox/tree/master/docs&quot;&gt;documents directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Principles&lt;/h2&gt; 
&lt;p&gt;We believe that the only way to address the core difficulties with mobile end-to-end testing is by rethinking some of the principles of the entire approach. See what Detox &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.DesignPrinciples.md&quot;&gt;does differently&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Detox&lt;/h2&gt; 
&lt;p&gt;Detox has been open-source from the first commit. If you&#39;re interested in helping out with our roadmap, please see issues tagged with the &lt;a href=&quot;https://github.com/wix/detox/labels/user%3A%20looking%20for%20contributors&quot;&gt;&lt;img src=&quot;https://placehold.it/15/c4532d/000000?text=+&quot; alt=&quot; &quot;&gt; looking for contributors&lt;/a&gt; label. If you have encountered a bug or would like to suggest a new feature, please open an issue.&lt;/p&gt; 
&lt;p&gt;Dive into Detox core by reading the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Guide.Contributing.md&quot;&gt;Detox Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detox is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-English Resources (Community)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/quia-digital/iniciando-com-detox-framework-1-4-ce31ad7ae812&quot;&gt;Getting Started (Brazilian Portuguese)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>AkiyamaKunka/rtconfer-whiteboard</title>
      <link>https://github.com/AkiyamaKunka/rtconfer-whiteboard</link>
      <description>&lt;p&gt;Web conference platform, provide collaborative canvas + video-streaming + real-time code + rich-text editing + file displaying, team and session management. | Do contact us if you wanna join in!&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.linkpicture.com/view.php?img=LPic617768bc317c51963078982&quot;&gt;&lt;img src=&quot;https://www.linkpicture.com/q/LOGO6.png&quot; alt=&quot;image&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache-blue?style=for-the-badge&amp;amp;logo=apache&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/React-17.0.1-brightgreen?style=for-the-badge&amp;amp;logo=react&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Chakra-1.6.5-brightgreen?style=for-the-badge&amp;amp;logo=chakra-ui&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Node-12.16.1-9cf?style=for-the-badge&amp;amp;logo=node.js&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/express-4.17.1-ff69b4?style=for-the-badge&amp;amp;logo=express&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MongoDB-4.0.1-orange?style=for-the-badge&amp;amp;logo=mongodb&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Docker-20.10.7-9cf?style=for-the-badge&amp;amp;logo=docker&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;‚ö°&lt;strong&gt;RTConfer&lt;/strong&gt;‚ö° is an Online Rich-Media Collaborative Whiteboard Platform.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Bring Teams Together, anywhere.&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;‚öôÔ∏è Feature Hightlight&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üë• Teams &amp;amp; Meetings: Easily create teams and manage them. View meetings and resume at any time.&lt;/li&gt; 
 &lt;li&gt;‚úèÔ∏è Canvas: Real-time collaborative web painting canvas enables you to keep everyone in the loop.&lt;/li&gt; 
 &lt;li&gt;üíª Live Streaming: Engaging experience for group real-time online video streaming in session.&lt;/li&gt; 
 &lt;li&gt;üìë Code &amp;amp; Rich-Text Editor: Share insparing code and text with teammater within canvas, in real-time.&lt;/li&gt; 
 &lt;li&gt;üìé File Display: Upload and share your file on canvas and make notes supported by canvas painting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- 
[![image](https://www.linkpicture.com/q/meeting-room.png)](https://www.linkpicture.com/view.php?img=LPic617769959bff31447176570)

[![image](https://www.linkpicture.com/q/session-creation.png)](https://www.linkpicture.com/view.php?img=LPic61780344101cd2018067068)
 --&gt; 
&lt;h2&gt;üöÄ Exhibition Cabinet&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; I&#39;m pleased to show you the demo website here: ‚ö° www.rtconfer.com ‚ö° to try all the feature by your own! &lt;/p&gt; 
&lt;div align=&quot;center&quot; width=&quot;93%&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AkiyamaKunka/rtconfer-whiteboard/master/public/website-gif.gif&quot; alt=&quot;website&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;üé¨ Demo Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/U80gxszblNo&quot;&gt;Click Here for video on Youtube!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;üì¶ Build and Deploy&lt;/h1&gt; 
&lt;h2&gt;‚úàÔ∏è If you are a client who want to deploy our service or test:&lt;/h2&gt; 
&lt;p&gt;Please follow the steps to deploy our web service as quickly as possible!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;git clone this repo to your computer, turn on your Windows shell or Unix Terminal command line tools.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;cd richmedia-project/client&lt;/code&gt; to enter the directory of our web demo project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;npm install&lt;/code&gt; to install all the dependencies that front-end needs, this might need to wait for a few seconds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;npm run start&lt;/code&gt; to start the React.js serve.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter &lt;code&gt;http://localhost:3000/welcome&lt;/code&gt; in your Chrome browser&#39;s URL bar.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Simply wait for a few seconds, and enjoy your usage of our &lt;strong&gt;RTConfer&lt;/strong&gt; platform!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîç If you are a engineer who wanna further development:&lt;/h2&gt; 
&lt;h3&gt;Prerequisites:&lt;/h3&gt; 
&lt;p&gt;Have Docker Installed in your System, and also a clear mind to follow these steps.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Light&quot; src=&quot;https://github.com/sujaykundu777/mern-docker/raw/master/3-tier-diagram.png?raw=true&quot; width=&quot;93%&quot;&gt; &lt;/p&gt; 
&lt;h5&gt;In Development Mode :&lt;/h5&gt; 
&lt;p&gt;First copy the content of &lt;strong&gt;docker-compose-dev.yml&lt;/strong&gt; to &lt;strong&gt;docker-compose.yml&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;and also copy the content of &lt;strong&gt;server/src/index.dev.js&lt;/strong&gt; to &lt;strong&gt;server/src/index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Run the app using :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;$ docker-compose up --build --remove-orphans&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;$ docker-compose up -d&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Above command will start the services on (-d) detach mode (similar like running the app in background)&lt;/p&gt; 
&lt;p&gt;Then you can check the status of the containers by running:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;$ docker ps&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The App should be App :&lt;/p&gt; 
&lt;p&gt;visit client : &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;visit server : &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To check the status of the running containers :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;docker-compose ps&lt;/code&gt;&lt;/p&gt; 
&lt;h5&gt;In Production Mode :&lt;/h5&gt; 
&lt;p&gt;First copy the content of &lt;strong&gt;docker-compose-prod.yml&lt;/strong&gt; to &lt;strong&gt;docker-compose.yml&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;and also copy the content of &lt;strong&gt;server/src/index.prod.js&lt;/strong&gt; to &lt;strong&gt;server/src/index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Run the app using :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt; $ docker-compose up --build -remove-orphans&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The App should be up at &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build the image for server :&lt;/h3&gt; 
&lt;p&gt;docker build -t myapp-server:1 . docker images docker run --name &quot;myapp-server&quot; -p 80:8080 myapp-server:1 docker ps&lt;/p&gt; 
&lt;h2&gt;üìÑ Complete Guidebook&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/docs/share/894368bd-aea0-4871-8ee1-92ecfa3ff202?#&quot;&gt;Click here for Developers&#39; Guidebook!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üîß Tech Outline&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Designed website with robust session security and multi-person video &amp;amp; audio call stability with Socket.IO based on WebSocket&lt;/li&gt; 
 &lt;li&gt;Applied MERN: MongoDB, Express.js RESTful API, React.js, Node.js, JWT authentication, Chakra UI with Heroku in development&lt;/li&gt; 
 &lt;li&gt;Implemented real-time collaborative code and rich-text editing with Firepad, file uploading with AliCloud Open Storage Service&lt;/li&gt; 
 &lt;li&gt;Integrated Google Real-time Firebase handling input conflicts, realizing message playback to client-side of code/text editing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ù§Ô∏è Specially Thanks:&lt;/h2&gt; 
&lt;p&gt;@Jisuanke Inc.&lt;/p&gt; 
&lt;p&gt;@Nankai University.&lt;/p&gt; 
&lt;h2&gt;&lt;img alt=&quot;octocat&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&quot;&gt;) Contributors:&lt;/h2&gt; 
&lt;p&gt;@AkiyamaKunka, @JamesYang, @WenBiming, @SweetieLee, @worldpresident&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mercurius-js/mercurius</title>
      <link>https://github.com/mercurius-js/mercurius</link>
      <description>&lt;p&gt;Implement GraphQL servers and gateways with Fastify&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mercurius&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mercurius-js/mercurius/workflows/CI%20workflow/badge.svg?sanitize=true&quot; alt=&quot;CI workflow&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mercurius is a &lt;a href=&quot;https://graphql.org/&quot;&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/a&gt; adapter for &lt;a href=&quot;https://www.fastify.io&quot;&gt;&lt;strong&gt;Fastify&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Caching of query parsing and validation.&lt;/li&gt; 
 &lt;li&gt;Automatic loader integration to avoid 1 + N queries.&lt;/li&gt; 
 &lt;li&gt;Just-In-Time compiler via &lt;a href=&quot;http://npm.im/graphql-jit&quot;&gt;graphql-jit&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Subscriptions.&lt;/li&gt; 
 &lt;li&gt;Federation support.&lt;/li&gt; 
 &lt;li&gt;Federated subscriptions support.&lt;/li&gt; 
 &lt;li&gt;Gateway implementation, including Subscriptions.&lt;/li&gt; 
 &lt;li&gt;Batched query support.&lt;/li&gt; 
 &lt;li&gt;Customisable persisted queries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/#install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/#examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/api/options.md&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/context.md&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/loaders.md&quot;&gt;Loaders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/hooks.md&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/lifecycle.md&quot;&gt;Lifecycle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/federation.md&quot;&gt;Federation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/subscriptions.md&quot;&gt;Subscriptions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/batched-queries.md&quot;&gt;Batched Queries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/persisted-queries.md&quot;&gt;Persisted Queries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/typescript.md&quot;&gt;TypeScript Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/integrations/&quot;&gt;Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/plugins.md&quot;&gt;Related Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/docs/protocol-extension.md&quot;&gt;Protocol Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/#acknowledgements&quot;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mercurius-js/mercurius/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i fastify mercurius graphql
# or
yarn add fastify mercurius graphql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous name of this module was &lt;a href=&quot;http://npm.im/fastify-gql&quot;&gt;fastify-gql&lt;/a&gt; (&amp;lt; 6.0.0).&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;use strict&#39;

const Fastify = require(&#39;fastify&#39;)
const mercurius = require(&#39;mercurius&#39;)

const app = Fastify()

const schema = `
  type Query {
    add(x: Int, y: Int): Int
  }
`

const resolvers = {
  Query: {
    add: async (_, { x, y }) =&amp;gt; x + y
  }
}

app.register(mercurius, {
  schema,
  resolvers
})

app.get(&#39;/&#39;, async function (req, reply) {
  const query = &#39;{ add(x: 2, y: 2) }&#39;
  return reply.graphql(query)
})

app.listen(3000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Check &lt;a href=&quot;https://github.com/mercurius-js/mercurius/tree/master/examples&quot;&gt;GitHub repo&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;The project is kindly sponsored by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nearform.com&quot;&gt;NearForm&lt;/a&gt; for &lt;a href=&quot;https://github.com/mcollina&quot;&gt;Matteo&lt;/a&gt;&#39;s time in maintaining this module.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Mercurius name was gracefully donated by &lt;a href=&quot;https://github.com/marco-c&quot;&gt;Marco Castelluccio&lt;/a&gt;. The usage of that library was described in &lt;a href=&quot;https://hacks.mozilla.org/2015/12/web-push-notifications-from-irssi/&quot;&gt;https://hacks.mozilla.org/2015/12/web-push-notifications-from-irssi/&lt;/a&gt;, and you can find that codebase in &lt;a href=&quot;https://github.com/marco-c/mercurius&quot;&gt;https://github.com/marco-c/mercurius&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EastWorld/wechat-app-mall</title>
      <link>https://github.com/EastWorld/wechat-app-mall</link>
      <description>&lt;p&gt;ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÔºåÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂæÆÂ∫ó&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüé&lt;/h1&gt; 
&lt;p&gt;ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÔºåÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂæÆÂ∫óÔºåÈïøÊúüÁª¥Êä§ÁâàÊú¨ÔºåÊ¨¢ËøéÂ§ßÂÆ∂Ë∏äË∑ÉÊèê‰∫§Ë¥°ÁåÆ‰ª£Á†ÅÔºõ&lt;/p&gt; 
&lt;p&gt;‰ΩøÁî®ËØ¥ÊòéÂíåÂ∏∏ËßÅÈóÆÈ¢òÔºåÂèØÂèÇÈòÖ‰∏ãÈù¢ÁöÑËØ¥ÊòéÔºåÂ¶ÇËøòÊúâÁñëÈóÆÔºåÂèØËÆøÈóÆÂ∑•ÂéÇÂÆòÁΩë &lt;a href=&quot;https://www.it120.cc/&quot;&gt;https://www.it120.cc/&lt;/a&gt; ÂØªÊ±ÇÂ∏ÆÂä©ÔºÅ&lt;/p&gt; 
&lt;p&gt;Êñ∞Â¢ûÁõ¥Êí≠Â∏¶Ë¥ßÊîØÊåÅÔºåÂÖ∑‰ΩìËØ¶ËßÅ‰ΩøÁî®ËØ¥Êòé&lt;/p&gt; 
&lt;h1&gt;‰ªäÊó•Â§¥Êù°/ÊäñÈü≥Â∞èÁ®ãÂ∫èÁâàÊú¨&lt;/h1&gt; 
&lt;p&gt;Êú¨È°πÁõÆÁöÑ‰ªäÊó•Â§¥Êù°/ÊäñÈü≥Â∞èÁ®ãÂ∫èÁâàÊú¨ÔºåËØ∑ÁßªÊ≠•Ëá≥‰∏ãÈù¢ÁöÑÂú∞ÂùÄÔºö&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/EastWorld/tt-app-mall&quot;&gt;https://github.com/EastWorld/tt-app-mall&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Êâ´Á†Å‰ΩìÈ™å&lt;/h2&gt; 
&lt;img src=&quot;https://7.s2m.cc/2021/10/05/d15d243a-951f-4ec8-8f34-422368a20d91.jpeg&quot; width=&quot;200px&quot;&gt; 
&lt;h2&gt;ËØ¶ÁªÜÈÖçÁΩÆ/‰ΩøÁî®ÊïôÁ®ã&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help/ikfe2k.html&quot;&gt;https://www.it120.cc/help/ikfe2k.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÈÅáÂà∞‰ΩøÁî®ÈóÆÈ¢òÔºü&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help.html&quot;&gt;ÁÇπÂáªËøôÈáåÊâæÁ≠îÊ°àÔºåÂèØÁî®ÂÖ≥ÈîÆËØçÊêúÁ¥¢&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÂÖ∂‰ªñÂºÄÊ∫êÊ®°Êùø&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;ËàîÊûúÊûúÂ∞èÈì∫ÔºàÂçáÁ∫ßÁâàÔºâ&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Èù¢È¶ÜÈ£éÊ†ºÂ∞èÁ®ãÂ∫è&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;AIÂêçÁâá&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://dcdn.it120.cc/2020/08/30/fd095c58-e655-4785-af0a-89e0b4da7cfe.jpg&quot; width=&quot;200px&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://dcdn.it120.cc/2021/06/25/5caa3793-2e70-43ef-b86a-356c26d89e19.jpeg&quot; width=&quot;200px&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://cdn.it120.cc/apifactory/2018/12/18/c2324da4eea91602f385db5b523b13ca.jpg&quot; width=&quot;200px&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gooking/TianguoguoXiaopu&quot;&gt;ÂºÄÊ∫êÂú∞ÂùÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gitee.com/javazj/noodle_shop_procedures&quot;&gt;ÂºÄÊ∫êÂú∞ÂùÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gooking/visitingCard&quot;&gt;ÂºÄÊ∫êÂú∞ÂùÄ&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;ËÅîÁ≥ª‰ΩúËÄÖ&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;ÂæÆ‰ø°Â•ΩÂèã&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;QQÂ•ΩÂèã&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://dcdn.it120.cc/2021/09/13/61a80363-9085-4a10-9447-e276a3d40ab3.jpeg&quot; width=&quot;200px&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://dcdn.it120.cc/2021/09/13/08a598d8-8186-4159-9930-2e4908accc5e.png&quot; width=&quot;200px&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Êú¨È°πÁõÆ‰ΩøÁî®‰∫Ü‰∏ãÈù¢ÁöÑÁªÑ‰ª∂ÔºåÂú®Ê≠§È∏£Ë∞¢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/gooking/apifm-wxapi&quot;&gt;Êé•Âè£ SDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://admin.it120.cc&quot;&gt;apiÂ∑•ÂéÇ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://youzan.github.io/vant-weapp&quot;&gt;vant-weapp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jin-yufeng/Parser&quot;&gt;Â∞èÁ®ãÂ∫èÂØåÊñáÊú¨Êèí‰ª∂Ôºàhtml Ê∏≤ÊüìÔºâ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jasondu/wxa-plugin-canvas&quot;&gt;Â∞èÁ®ãÂ∫èÊµ∑Êä•ÁªÑ‰ª∂-ÁîüÊàêÊúãÂèãÂúàÂàÜ‰∫´Êµ∑Êä•Âπ∂ÁîüÊàêÂõæÁâá&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ecomfe/echarts-for-weixin&quot;&gt;Apache ECharts&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Â∫ïÈÉ®ICONÂõæÊ†á‰ΩøÁî®Ôºö &lt;a href=&quot;https://www.iconfont.cn/collections/detail?spm=a313x.7781069.0.da5a778a4&amp;amp;cid=18904&quot;&gt;https://www.iconfont.cn/collections/detail?spm=a313x.7781069.0.da5a778a4&amp;amp;cid=18904&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Â¶Ç‰ΩïÂçáÁ∫ßÂà∞ÊúÄÊñ∞Áâà&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â∞èÁ®ãÂ∫èÁ®ãÂ∫èÁöÑ‰øÆÊîπÂíåÊÇ®ÂêéÂè∞ÁöÑÊï∞ÊçÆÊòØÁã¨Á´ãÁöÑÔºåÊâÄ‰ª•‰∏çÁî®ÊãÖÂøÉÊÇ®‰ºö‰∏¢Â§±Êï∞ÊçÆ&lt;/li&gt; 
 &lt;li&gt;ÂÖàÊää‰Ω†ÂºÄÂèëÂ∑•ÂÖ∑‰∏ãÁöÑÁé∞ÊúâÁâàÊú¨Á®ãÂ∫èÂ§á‰ªΩ&lt;/li&gt; 
 &lt;li&gt;‰∏ãËΩΩÊúÄÊñ∞ÁâàÁöÑÁ®ãÂ∫èÔºåÁõ¥Êé•Ë¶ÜÁõñÊÇ®Êú¨Âú∞ÁöÑÁ®ãÂ∫è&lt;/li&gt; 
 &lt;li&gt;Áî®ÂºÄÂèëÂ∑•ÂÖ∑‰øÆÊîπÂüüÂêç mall ‰∏∫‰Ω†Ëá™Â∑±ÁöÑÂüüÂêç&lt;/li&gt; 
 &lt;li&gt;ÂºÄÂèëÂ∑•ÂÖ∑ÈáåÈù¢‰∏ä‰º†‰ª£Á†ÅÊèê‰∫§ÂæÆ‰ø°ÂÆ°Ê†∏&lt;/li&gt; 
 &lt;li&gt;ÂÆ°Ê†∏ÈÄöËøáÂêéÔºåÂ∞èÁ®ãÂ∫èÂêéÂè∞ÂéªÂèëÂ∏ÉÊñ∞ÁâàÊú¨Âç≥ÂèØ&lt;/li&gt; 
 &lt;li&gt;Áî®Êà∑Êó†ÈúÄÈáçÊñ∞Êâ´Á†ÅÔºåÂÖ≥Èó≠Â∞èÁ®ãÂ∫èÈáçÊñ∞ÊâìÂºÄÂ∞±ÊòØÊñ∞ÁâàÊú¨‰∫Ü&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/facebook/react/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render &quot;Hello Taylor&quot; into a container on the page.&lt;/p&gt; 
&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/main/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jitsi/jitsi-meet</title>
      <link>https://github.com/jitsi/jitsi-meet</link>
      <description>&lt;p&gt;Jitsi Meet - Secure, Simple and Scalable Video Conferences that you use as a standalone app or embed in your web application.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&quot;center&quot;&gt;Jitsi Meet&lt;/p&gt;&lt;/h1&gt; 
&lt;p&gt;Jitsi Meet is a set of Open Source projects which empower users to use and deploy video conferencing platforms with state-of-the-art video quality and features.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/readme-img1.png&quot; width=&quot;900&quot;&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Amongst others here are the main features Jitsi Meet offers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for all current browsers&lt;/li&gt; 
 &lt;li&gt;Mobile applications&lt;/li&gt; 
 &lt;li&gt;Web and native SDKs for integration&lt;/li&gt; 
 &lt;li&gt;HD audio and video&lt;/li&gt; 
 &lt;li&gt;Content sharing&lt;/li&gt; 
 &lt;li&gt;End-to-End Encryption&lt;/li&gt; 
 &lt;li&gt;Raise hand and reactions&lt;/li&gt; 
 &lt;li&gt;Chat with private conversations&lt;/li&gt; 
 &lt;li&gt;Polls&lt;/li&gt; 
 &lt;li&gt;Virtual backgrounds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And many more!&lt;/p&gt; 
&lt;h2&gt;Using Jitsi Meet&lt;/h2&gt; 
&lt;p&gt;Using Jitsi Meet is straightforward, as it&#39;s browser based. Head over to &lt;a href=&quot;https://meet.jit.si&quot;&gt;meet.jit.si&lt;/a&gt; and give it a try. It&#39;s anonymous, scalable and free to use. All browsers are supported!&lt;/p&gt; 
&lt;p&gt;Using mobile? No problem, you can either use your mobile web browser or our fully-featured mobile apps:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Android&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Android (F-Droid)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;iOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.jitsi.meet&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/google-play-badge.png&quot; height=&quot;50&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://f-droid.org/en/packages/org.jitsi.meet/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/f-droid-badge.png&quot; height=&quot;50&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/jitsi-meet/id1165103905&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/appstore-badge.png&quot; height=&quot;50&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are feeling adventurous and want to get an early scoop of the features as they are being developed you can also sign up for our open beta testing here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://play.google.com/apps/testing/org.jitsi.meet&quot;&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testflight.apple.com/join/isy6ja7S&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running your own instance&lt;/h2&gt; 
&lt;p&gt;If you&#39;d like to run your own Jitsi Meet installation head over to the &lt;a href=&quot;https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-start&quot;&gt;handbook&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;We provide Debian packages and a comprehensive Docker setup to make deployments as simple as possible. Advanced users also have the possibility of building all the components from source.&lt;/p&gt; 
&lt;p&gt;You can check the latest releases &lt;a href=&quot;https://jitsi.github.io/handbook/docs/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Jitsi as a Service&lt;/h2&gt; 
&lt;p&gt;If you like the branding capabilities of running your own instance but you&#39;d like to avoid dealing with the complexity of monitoring, scaling and updates, JaaS might be for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://jaas.8x8.vc&quot;&gt;8x8 Jitsi as a Service (JaaS)&lt;/a&gt; is an enterprise-ready video meeting platform that allows developers, organizations and businesses to easily build and deploy video solutions. With Jitsi as a Service we now give you all the power of Jitsi running on our global platform so you can focus on building secure and branded video experiences.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the Jitsi Meet documentation is available in &lt;a href=&quot;https://jitsi.github.io/handbook/&quot;&gt;the handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For a comprehensive description of all Jitsi Meet&#39;s security aspects, please check &lt;a href=&quot;https://jitsi.org/security&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a detailed description of Jitsi Meet&#39;s End-to-End Encryption (E2EE) implementation, please check &lt;a href=&quot;https://jitsi.org/e2ee-whitepaper/&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Jitsi Meet, see &lt;a href=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are looking to contribute to Jitsi Meet, first of all, thank you! Please see our &lt;a href=&quot;https://raw.githubusercontent.com/jitsi/jitsi-meet/master/CONTRIBUTING.md&quot;&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;footer&gt; 
 &lt;p align=&quot;center&quot; style=&quot;font-size: smaller;&quot;&gt; Built with ‚ù§Ô∏è by the Jitsi team at &lt;a href=&quot;https://8x8.com&quot; target=&quot;_blank&quot;&gt;8x8&lt;/a&gt; and our community. &lt;/p&gt; 
&lt;/footer&gt;</description>
    </item>
    
    <item>
      <title>TanaStudy/Java-Study</title>
      <link>https://github.com/TanaStudy/Java-Study</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;JavaÂ≠¶‰π†ËøáÁ®ã‰∏≠ÁúãÁöÑ‰∏Ä‰∫õËßÜÈ¢ëÂíå‰ª£Á†ÅÁ¨îËÆ∞„ÄÇ&lt;/p&gt; 
&lt;h1&gt;1. Spring&lt;/h1&gt; 
&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÔºö&lt;a href=&quot;https://www.bilibili.com/video/BV1WE411d7Dv?from=search&amp;amp;seid=10874099015421652957&amp;amp;spm_id_from=333.337.0.0&quot;&gt;„ÄêÁãÇÁ•ûËØ¥Java„ÄëSpring5ÊúÄÊñ∞ÂÆåÊï¥ÊïôÁ®ãIDEAÁâàÈÄö‰øóÊòìÊáÇ&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;2. SpringBoot&lt;/h1&gt; 
&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÔºö&lt;a href=&quot;https://www.bilibili.com/video/BV1PE411i7CV?from=search&amp;amp;seid=673203727658245324&amp;amp;spm_id_from=333.337.0.0&quot;&gt;„ÄêÁãÇÁ•ûËØ¥Java„ÄëSpringBootÊúÄÊñ∞ÊïôÁ®ãIDEAÁâàÈÄö‰øóÊòìÊáÇ&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;3. SpringBootWeb&lt;/h1&gt; 
&lt;p&gt;Spring Boot ÂºÄÂèëÁÆÄÂçïÁΩëÈ°µÔºàÂëòÂ∑•ÁÆ°ÁêÜÁ≥ªÁªüÔºâ&lt;/p&gt; 
&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÔºö&lt;a href=&quot;https://www.bilibili.com/video/BV19E411v7Ty?spm_id_from=333.999.0.0&quot;&gt;„ÄêÁãÇÁ•ûËØ¥Java„ÄëSpringBootÂºÄÂèëÁÆÄÂçïÁöÑÁΩëÁ´ô&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Á¨îËÆ∞Âú∞ÂùÄÔºö&lt;a href=&quot;https://blog.csdn.net/weixin_43901865/article/details/116596476&quot;&gt;Spring BootÂºÄÂèëÁÆÄÂçïÁΩëÈ°µ&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>badges/shields</title>
      <link>https://github.com/badges/shields</link>
      <description>&lt;p&gt;Concise, consistent, and legible badges in SVG and raster format&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/badges/shields/master/readme-logo.svg?sanitize=true&quot; height=&quot;130&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/badges/shields/graphs/contributors&quot; alt=&quot;Contributors&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/badges/shields&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/badges/shields/master/#backers&quot; alt=&quot;Backers on Open Collective&quot;&gt; &lt;img src=&quot;https://img.shields.io/opencollective/backers/shields&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/badges/shields/master/#sponsors&quot; alt=&quot;Sponsors on Open Collective&quot;&gt; &lt;img src=&quot;https://img.shields.io/opencollective/sponsors/shields&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/badges/shields/pulse&quot; alt=&quot;Activity&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/badges/shields&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/badges/shields/tree/master&quot;&gt; &lt;img src=&quot;https://img.shields.io/circleci/project/github/badges/shields/master&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/badges/daily-tests&quot;&gt; &lt;img src=&quot;https://img.shields.io/circleci/project/github/badges/daily-tests?label=service%20tests&quot; alt=&quot;service-test status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/badges/shields&quot;&gt; &lt;img src=&quot;https://img.shields.io/coveralls/github/badges/shields&quot; alt=&quot;coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/badges/shields/alerts/&quot;&gt; &lt;img src=&quot;https://img.shields.io/lgtm/alerts/g/badges/shields&quot; alt=&quot;Total alerts&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/HjJCwm5&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/308323056592486420?logo=discord&quot; alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=shields_io&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/shields_io?style=social&amp;amp;logo=twitter&quot; alt=&quot;follow on Twitter&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is home to &lt;a href=&quot;https://shields.io/&quot;&gt;Shields.io&lt;/a&gt;, a service for concise, consistent, and legible badges in SVG and raster format, which can easily be included in GitHub readmes or any other web page. The service supports dozens of continuous integration services, package registries, distributions, app stores, social networks, code coverage services, and code analysis services. Every month it serves over 770 million images and is used by some of the world&#39;s most popular open-source projects, &lt;a href=&quot;https://github.com/Microsoft/vscode&quot;&gt;VS Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;Vue.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/twbs/bootstrap&quot;&gt;Bootstrap&lt;/a&gt; to name a few.&lt;/p&gt; 
&lt;p&gt;This repo hosts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://shields.io/&quot;&gt;Shields.io&lt;/a&gt; frontend and server code&lt;/li&gt; 
 &lt;li&gt;An &lt;a href=&quot;https://www.npmjs.com/package/badge-maker&quot;&gt;NPM library for generating badges&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/badges/shields/tree/master/badge-maker/README.md&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/badges/shields/tree/master/badge-maker/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/badges/shields/tree/master/spec&quot;&gt;badge design specification&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;code coverage percentage: &lt;img src=&quot;https://img.shields.io/badge/coverage-80%25-yellowgreen&quot; alt=&quot;coverage&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;stable release version: &lt;img src=&quot;https://img.shields.io/badge/version-1.2.3-blue&quot; alt=&quot;version&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;package manager release: &lt;img src=&quot;https://img.shields.io/badge/gem-2.2.0-blue&quot; alt=&quot;gem&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;status of third-party dependencies: &lt;img src=&quot;https://img.shields.io/badge/dependencies-out%20of%20date-orange&quot; alt=&quot;dependencies&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;static code analysis grade: &lt;img src=&quot;https://img.shields.io/badge/codacy-B-green&quot; alt=&quot;codacy&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://semver.org/&quot;&gt;SemVer&lt;/a&gt; version observance: &lt;img src=&quot;https://img.shields.io/badge/semver-2.0.0-blue&quot; alt=&quot;semver&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;amount of &lt;a href=&quot;https://liberapay.com/&quot;&gt;Liberapay&lt;/a&gt; donations per week: &lt;img src=&quot;https://img.shields.io/badge/receives-2.00%20USD%2Fweek-yellow&quot; alt=&quot;receives&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Python package downloads: &lt;img src=&quot;https://img.shields.io/badge/downloads-13k%2Fmonth-brightgreen&quot; alt=&quot;downloads&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Chrome Web Store extension rating: &lt;img src=&quot;https://img.shields.io/badge/rating-%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86-brightgreen&quot; alt=&quot;rating&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uptimerobot.com&quot;&gt;Uptime Robot&lt;/a&gt; percentage: &lt;img src=&quot;https://img.shields.io/badge/uptime-100%25-brightgreen&quot; alt=&quot;uptime&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://shields.io/#your-badge&quot;&gt;Make your own badges!&lt;/a&gt; (Quick example: &lt;code&gt;https://img.shields.io/badge/left-right-f39f37&lt;/code&gt;)&lt;/p&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;Browse a &lt;a href=&quot;https://shields.io/&quot;&gt;complete list of badges&lt;/a&gt; and locate a particular badge by using the search bar or by browsing the categories. Click on the badge to fill in required data elements for that badge type (like your username or repo) and optionally customize (label, colors etc.). And it&#39;s ready for use!&lt;/p&gt; 
&lt;p&gt;Use the button at the bottom to copy your badge url or snippet, which can then be added to places like your GitHub readme files or other web pages.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Shields is a community project. We invite your participation through issues and pull requests! You can peruse the &lt;a href=&quot;https://github.com/badges/shields/raw/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When adding or changing a service &lt;a href=&quot;https://github.com/badges/shields/raw/master/doc/service-tests.md&quot;&gt;please add tests&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project has quite a backlog of suggestions! If you&#39;re new to the project, maybe you&#39;d like to open a pull request to address one of them.&lt;/p&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://github.com/badges/shields/raw/master/doc/TUTORIAL.md&quot;&gt;tutorial on how to add a badge&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/badges/shields/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/badges/shields/good%20first%20issue&quot; alt=&quot;GitHub issues by-label&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Node 14 or later. You can use the &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;package manager&lt;/a&gt; of your choice. Tests need to pass in Node 14 and 16.&lt;/li&gt; 
 &lt;li&gt;Clone this repository.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm ci&lt;/code&gt; to install the dependencies.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt; to start the badge server and the frontend dev server.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:3000/&lt;/code&gt; to view the frontend.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When server source files change, the badge server should automatically restart itself (using &lt;a href=&quot;https://nodemon.io/&quot;&gt;nodemon&lt;/a&gt;). When the frontend files change, the frontend dev server (&lt;code&gt;gatsby dev&lt;/code&gt;) should also automatically reload. However the badge definitions are built only before the server first starts. To regenerate those, either run &lt;code&gt;npm run defs&lt;/code&gt; or manually restart the server.&lt;/p&gt; 
&lt;p&gt;To debug a badge from the command line, run &lt;code&gt;npm run badge -- /npm/v/nock&lt;/code&gt;. It also works with full URLs like &lt;code&gt;npm run badge -- https://img.shields.io/npm/v/nock&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;npm run debug:server&lt;/code&gt; to start server in debug mode. &lt;a href=&quot;https://github.com/Microsoft/vscode-recipes/tree/master/nodemon&quot;&gt;This recipe&lt;/a&gt; shows how to debug Node.js application in &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Shields has experimental support for &lt;a href=&quot;https://www.gitpod.io/&quot;&gt;Gitpod&lt;/a&gt;, a pre-configured development environment that runs in your browser. To use Gitpod, click the button below and sign in with GitHub. Gitpod also offers a browser add-on, though it is not required. Please report any Gitpod bugs, questions, or suggestions in issue &lt;a href=&quot;https://github.com/badges/shields/issues/2772&quot;&gt;#2772&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/badges/shields&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Edit with Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/snapshot-testing/&quot;&gt;Snapshot tests&lt;/a&gt; ensure we don&#39;t inadvertently make changes that affect the SVG or JSON output. When deliberately changing the output, run &lt;code&gt;SNAPSHOT_DRY=1 npm run test:package&lt;/code&gt; to preview changes to the saved snapshots, and &lt;code&gt;SNAPSHOT_UPDATE=1 npm run test:package&lt;/code&gt; to update them.&lt;/p&gt; 
&lt;p&gt;The server can be configured to use &lt;a href=&quot;https://sentry.io/&quot;&gt;Sentry&lt;/a&gt; (&lt;a href=&quot;https://github.com/badges/shields/raw/master/doc/self-hosting.md#sentry&quot;&gt;configuration&lt;/a&gt;) and &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; (&lt;a href=&quot;https://github.com/badges/shields/raw/master/doc/self-hosting.md#prometheus&quot;&gt;configuration&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Daily tests, including a full run of the service tests and overall code coverage, are run via &lt;a href=&quot;https://github.com/badges/daily-tests&quot;&gt;badges/daily-tests&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Hosting your own server&lt;/h2&gt; 
&lt;p&gt;There is documentation about &lt;a href=&quot;https://github.com/badges/shields/raw/master/doc/self-hosting.md&quot;&gt;hosting your own server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Status badges are used widely across open-source and private software projects. Academics have studied the &quot;signal&quot; badges provide about software project quality. There are many existing libraries for rendering these badges, and alternatives to the hosted Shields badge service. &lt;a href=&quot;https://github.com/badges/awesome-badges&quot;&gt;awesome-badges&lt;/a&gt; is a curated collection of such resources. &lt;a href=&quot;https://github.com/badges/awesome-badges/raw/main/CONTRIBUTING.md&quot;&gt;Contributions&lt;/a&gt; may be considered there. (The presence of a project in that collection should not be interpreted as an endorsement nor promotion from the Shields project)&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;b.adge.me was the original website for this service. Heroku back then had a thing which made it hard to use a toplevel domain with it, hence the odd domain. It used code developed in 2013 from a library called &lt;a href=&quot;https://github.com/badges/gh-badges&quot;&gt;gh-badges&lt;/a&gt;, both developed by &lt;a href=&quot;https://github.com/espadrine&quot;&gt;Thadd√©e Tyl&lt;/a&gt;. The project merged with shields.io by making it use the b.adge.me code and closed b.adge.me.&lt;/p&gt; 
&lt;p&gt;The original badge specification was developed in 2013 by &lt;a href=&quot;https://github.com/olivierlacan&quot;&gt;Olivier Lacan&lt;/a&gt;. It was inspired by the Travis CI and similar badges (there were a lot fewer, back then). In 2014 Thadd√©e Tyl redesigned it with help from a Travis CI employee and convinced everyone to switch to it. The old design is what today is called the plastic style; the new one is the flat style.&lt;/p&gt; 
&lt;p&gt;You can read more about &lt;a href=&quot;https://github.com/h5bp/lazyweb-requests/issues/150&quot;&gt;the project&#39;s inception&lt;/a&gt;, &lt;a href=&quot;https://github.com/badges/shields/raw/master/spec/motivation.md&quot;&gt;the motivation of the SVG badge specification&lt;/a&gt;, and &lt;a href=&quot;https://github.com/badges/shields/raw/master/spec/SPECIFICATION.md&quot;&gt;the specification itself&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project leaders&lt;/h2&gt; 
&lt;p&gt;Maintainers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calebcartwright&quot;&gt;calebcartwright&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chris48s&quot;&gt;chris48s&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daniel15&quot;&gt;Daniel15&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulmelnikow&quot;&gt;paulmelnikow&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/platan&quot;&gt;platan&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PyvesB&quot;&gt;PyvesB&lt;/a&gt; (core team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RedSparr0w&quot;&gt;RedSparr0w&lt;/a&gt; (core team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Operations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calebcartwright&quot;&gt;calebcartwright&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chris48s&quot;&gt;chris48s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulmelnikow&quot;&gt;paulmelnikow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PyvesB&quot;&gt;PyvesB&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alumni:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/espadrine&quot;&gt;espadrine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/olivierlacan&quot;&gt;olivierlacan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All assets and code are under the &lt;a href=&quot;https://raw.githubusercontent.com/badges/shields/master/LICENSE&quot;&gt;CC0 LICENSE&lt;/a&gt; and in the public domain unless specified otherwise.&lt;/p&gt; 
&lt;p&gt;The assets in &lt;code&gt;logo/&lt;/code&gt; are trademarks of their respective companies and are under their terms and license.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Thanks to the people and companies who donate money, services or time to keep the project running. &lt;a href=&quot;https://shields.io/community&quot;&gt;https://shields.io/community&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Expensify/App</title>
      <link>https://github.com/Expensify/App</link>
      <description>&lt;p&gt;Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://new.expensify.com&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Expensify/App/main/web/favicon.png&quot; width=&quot;64&quot; height=&quot;64&quot; alt=&quot;New Expensify Icon&quot;&gt; &lt;/a&gt; 
 &lt;h1&gt; &lt;a href=&quot;https://new.expensify.com&quot;&gt; New Expensify &lt;/a&gt; &lt;/h1&gt; 
&lt;/div&gt; 
&lt;h4&gt;Table of contents&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#local-development&quot;&gt;Local Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#running-the-tests&quot;&gt;Running The Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#structure-of-the-app&quot;&gt;Structure of the app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#Philosophy&quot;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#Internationalization&quot;&gt;Internationalization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/#deploying&quot;&gt;Deploying&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Additional Reading&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/CONTRIBUTING.md&quot;&gt;Contributing to Expensify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/CODE_OF_CONDUCT.md&quot;&gt;Expensify Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/CLA.md&quot;&gt;Contributor License Agreement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Local development&lt;/h1&gt; 
&lt;p&gt;These instructions should get you set up ready to work on New Expensify üôå&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;node&lt;/code&gt; &amp;amp; &lt;code&gt;npm&lt;/code&gt;: &lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;code&gt;watchman&lt;/code&gt;: &lt;code&gt;brew install watchman&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can use any IDE or code editing tool for developing on any platform. Use your favorite!&lt;/p&gt; 
&lt;h2&gt;Running the web app üï∏&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run the &lt;strong&gt;development web app&lt;/strong&gt;: &lt;code&gt;npm run web&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Changes applied to Javascript will be applied automatically via WebPack as configured in &lt;code&gt;webpack.dev.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running the iOS app üì±&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To install the iOS dependencies, run: &lt;code&gt;npm install &amp;amp;&amp;amp; cd ios/ &amp;amp;&amp;amp; pod install &amp;amp;&amp;amp; cd ..&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To run a on a &lt;strong&gt;Development Simulator&lt;/strong&gt;: &lt;code&gt;npm run ios&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running the Android app ü§ñ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To install the Android dependencies, run: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure you have Java installed &lt;code&gt;java -version&lt;/code&gt;. If not, install it by running &lt;code&gt;npm install -g openjdk8&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run a on a &lt;strong&gt;Development Emulator&lt;/strong&gt;: &lt;code&gt;npm run android&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running the MacOS desktop app üñ•&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run the &lt;strong&gt;Development app&lt;/strong&gt;, run: &lt;code&gt;npm run desktop&lt;/code&gt;, this will start a new Electron process running on your MacOS desktop in the &lt;code&gt;dist/Mac&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you are having issues with &lt;strong&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/strong&gt;, please reference &lt;a href=&quot;https://reactnative.dev/docs/environment-setup&quot;&gt;React Native&#39;s Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If you are running into CORS errors like (in the browser dev console) &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Access to fetch at &#39;https://www.expensify.com/api?command=GetAccountStatus&#39; from origin &#39;http://localhost:8080&#39; has been blocked by CORS policy
&lt;/code&gt;&lt;/pre&gt; You probably have a misconfigured &lt;code&gt;.env&lt;/code&gt; file - remove it (&lt;code&gt;rm .env&lt;/code&gt;) and try again&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Expensify engineers that will be testing with the API in your local dev environment please refer to &lt;a href=&quot;https://stackoverflow.com/c/expensify/questions/7699/7700&quot;&gt;these additional instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;Creating an &lt;code&gt;.env&lt;/code&gt; file is not necessary. We advise external contributors against it. It can lead to errors when variables referenced here get updated since your local &lt;code&gt;.env&lt;/code&gt; file is ignored.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;EXPENSIFY_URL_CASH&lt;/code&gt; - The root URL used for the website&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXPENSIFY_URL_SECURE&lt;/code&gt; - The URL used to hit the Expensify secure API&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXPENSIFY_URL_COM&lt;/code&gt; - The URL used to hit the Expensify API&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXPENSIFY_PARTNER_NAME&lt;/code&gt; - Constant used for the app when authenticating.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXPENSIFY_PARTNER_PASSWORD&lt;/code&gt; - Another constant used for the app when authenticating. (This is OK to be public)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUSHER_APP_KEY&lt;/code&gt; - Key used to authenticate with Pusher.com&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_NGROK_URL&lt;/code&gt; - Secure URL used for &lt;code&gt;ngrok&lt;/code&gt; when testing&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NGROK_URL&lt;/code&gt; - URL used for &lt;code&gt;ngrok&lt;/code&gt; when testing&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;USE_NGROK&lt;/code&gt; - Flag to turn &lt;code&gt;ngrok&lt;/code&gt; testing on or off&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;USE_WDYR&lt;/code&gt; - Flag to turn &lt;a href=&quot;https://github.com/welldone-software/why-did-you-render&quot;&gt;&lt;code&gt;Why Did You Render&lt;/code&gt;&lt;/a&gt; testing on or off&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;USE_WEB_PROXY&lt;/code&gt;‚ö†Ô∏è- Used in web/desktop development, it starts a server along the local development server to proxy requests to the backend. External contributors should set this to &lt;code&gt;true&lt;/code&gt; otherwise they&#39;ll have CORS errors. If you don&#39;t want to start the proxy server set this explicitly to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CAPTURE_METRICS&lt;/code&gt; (optional) - Set this to &lt;code&gt;true&lt;/code&gt; to capture performance metrics and see them in Flipper see &lt;a href=&quot;https://raw.githubusercontent.com/Expensify/App/main/PERFORMANCE.md#performance-metrics-opt-in-on-local-release-builds&quot;&gt;PERFORMANCE.md&lt;/a&gt; for more information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ONYX_METRICS&lt;/code&gt; (optional) - Set this to &lt;code&gt;true&lt;/code&gt; to capture even more performance metrics and see them in Flipper see &lt;a href=&quot;https://github.com/Expensify/react-native-onyx#benchmarks&quot;&gt;React-Native-Onyx#benchmarks&lt;/a&gt; for more information&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Running the tests&lt;/h1&gt; 
&lt;h2&gt;Unit tests&lt;/h2&gt; 
&lt;p&gt;Unit tests are valuable when you want to test one component. They should be short, fast, and ideally only test one thing. Often times in order to write a unit test, you may need to mock data, a component, or library. We use the library &lt;a href=&quot;https://jestjs.io/&quot;&gt;Jest&lt;/a&gt; to help run our Unit tests.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run the &lt;strong&gt;Jest unit tests&lt;/strong&gt;: &lt;code&gt;npm run test&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;End to end tests&lt;/h2&gt; 
&lt;p&gt;End to end tests are valuable when we do not want to mock data and run against the actual compiled app on iOS or Android. In order to run the end to end tests, we have to compile the iOS or Android app, then launch a simulator, then run tests. We use &lt;a href=&quot;https://github.com/wix/Detox&quot;&gt;Detox&lt;/a&gt; a &lt;em&gt;&quot;Gray box end-to-end testing and automation library&quot;&lt;/em&gt; to help with our end to end testing.&lt;/p&gt; 
&lt;p&gt;You are first required to build the tests, then you can run them:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;To build the &lt;strong&gt;Detox end to end tests&lt;/strong&gt;: &lt;code&gt;npm run detox-build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To run the &lt;strong&gt;Detox end to end tests&lt;/strong&gt;: &lt;code&gt;npm run detox-test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h1&gt;Debugging&lt;/h1&gt; 
&lt;h3&gt;iOS&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;If running on the iOS simulator pressing &lt;code&gt;‚åòD&lt;/code&gt; will open the debugging menu.&lt;/li&gt; 
 &lt;li&gt;This will allow you to attach a debugger in your IDE, React Developer Tools, or your browser.&lt;/li&gt; 
 &lt;li&gt;For more information on how to attach a debugger, see &lt;a href=&quot;https://reactnative.dev/docs/debugging#chrome-developer-tools&quot;&gt;React Native Debugging Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Alternatively, you can also setup debugger using &lt;a href=&quot;https://fbflipper.com/&quot;&gt;Flipper&lt;/a&gt;. After installation, press &lt;code&gt;‚åòD&lt;/code&gt; and select &quot;Open Debugger&quot;. This will open Flipper window. To view data stored by Onyx, go to Plugin Manager and install &lt;code&gt;async-storage&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;h2&gt;Android&lt;/h2&gt; 
&lt;p&gt;Our React Native Android app now uses the &lt;code&gt;Hermes&lt;/code&gt; JS engine which requires your browser for remote debugging. These instructions are specific to Chrome since that&#39;s what the Hermes documentation provided.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to &lt;code&gt;chrome://inspect&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Use the &lt;code&gt;Configure...&lt;/code&gt; button to add the Metro server address (typically &lt;code&gt;localhost:8081&lt;/code&gt;, check your &lt;code&gt;Metro&lt;/code&gt; output)&lt;/li&gt; 
 &lt;li&gt;You should now see a &quot;Hermes React Native&quot; target with an &quot;inspect&quot; link which can be used to bring up a debugger. If you don&#39;t see the &quot;inspect&quot; link, make sure the Metro server is running.&lt;/li&gt; 
 &lt;li&gt;You can now use the Chrome debug tools. See &lt;a href=&quot;https://reactnative.dev/docs/hermes#debugging-hermes-using-google-chromes-devtools&quot;&gt;React Native Debugging Hermes&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h1&gt;App structure and conventions&lt;/h1&gt; 
&lt;h2&gt;Onyx&lt;/h2&gt; 
&lt;p&gt;This is a persistent storage solution wrapped in a Pub/Sub library. In general that means:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Onyx stores and retrieves data from persistent storage&lt;/li&gt; 
 &lt;li&gt;Data is stored as key/value pairs, where the value can be anything from a single piece of data to a complex object&lt;/li&gt; 
 &lt;li&gt;Collections of data are usually not stored as a single key (eg. an array with multiple objects), but as individual keys+ID (eg. &lt;code&gt;report_1234&lt;/code&gt;, &lt;code&gt;report_4567&lt;/code&gt;, etc.). Store collections as individual keys when a component will bind directly to one of those keys. For example: reports are stored as individual keys because &lt;code&gt;OptionRow.js&lt;/code&gt; binds to the individual report keys for each link. However, report actions are stored as an array of objects because nothing binds directly to a single report action.&lt;/li&gt; 
 &lt;li&gt;Onyx allows other code to subscribe to changes in data, and then publishes change events whenever data is changed&lt;/li&gt; 
 &lt;li&gt;Anything needing to read Onyx data needs to: 
  &lt;ol&gt; 
   &lt;li&gt;Know what key the data is stored in (for web, you can find this by looking in the JS console &amp;gt; Application &amp;gt; local storage)&lt;/li&gt; 
   &lt;li&gt;Subscribe to changes of the data for a particular key or set of keys. React components use &lt;code&gt;withOnyx()&lt;/code&gt; and non-React libs use &lt;code&gt;Onyx.connect()&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Get initialized with the current value of that key from persistent storage (Onyx does this by calling &lt;code&gt;setState()&lt;/code&gt; or triggering the &lt;code&gt;callback&lt;/code&gt; with the values currently on disk as part of the connection process)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Subscribing to Onyx keys is done using a constant defined in &lt;code&gt;ONYXKEYS&lt;/code&gt;. Each Onyx key represents either a collection of items or a specific entry in storage. For example, since all reports are stored as individual keys like &lt;code&gt;report_1234&lt;/code&gt;, if code needs to know about all the reports (eg. display a list of them in the nav menu), then it would subscribe to the key &lt;code&gt;ONYXKEYS.COLLECTION.REPORT&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Actions&lt;/h2&gt; 
&lt;p&gt;Actions are responsible for managing what is on disk. This is usually:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Subscribing to Pusher events to receive data from the server that will get put immediately into Onyx&lt;/li&gt; 
 &lt;li&gt;Making XHRs to request necessary data from the server and then immediately putting that data into Onyx&lt;/li&gt; 
 &lt;li&gt;Handling any business logic with input coming from the UI layer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The UI layer&lt;/h2&gt; 
&lt;p&gt;This layer is solely responsible for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reflecting exactly the data that is in persistent storage by using &lt;code&gt;withOnyx()&lt;/code&gt; to bind to Onyx data.&lt;/li&gt; 
 &lt;li&gt;Taking user input and passing it to an action&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As a convention, the UI layer should never interact with device storage directly or call &lt;code&gt;Onyx.set()&lt;/code&gt; or &lt;code&gt;Onyx.merge()&lt;/code&gt;. Use an action! For example, check out this action that is signing in the user &lt;a href=&quot;https://github.com/Expensify/App/raw/919c890cc391ad38b670ca1b266c114c8b3c3285/src/pages/signin/PasswordForm.js#L78-L78&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;validateAndSubmitForm() {
    // validate...
    signIn(this.state.password, this.state.twoFactorAuthCode);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That action will then call &lt;code&gt;Onyx.merge()&lt;/code&gt; to &lt;a href=&quot;https://github.com/Expensify/App/raw/919c890cc391ad38b670ca1b266c114c8b3c3285/src/libs/actions/Session.js#L228-L247&quot;&gt;set default data and a loading state, then make an API request, and set the response with another &lt;code&gt;Onyx.merge()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function signIn(password, twoFactorAuthCode) {
    Onyx.merge(ONYXKEYS.ACCOUNT, {loading: true});
    API.Authenticate({
        ...defaultParams,
        password,
        twoFactorAuthCode,
    })
        .then((response) =&amp;gt; {
            Onyx.merge(ONYXKEYS.SESSION, {authToken: response.authToken});
        })
        .catch((error) =&amp;gt; {
            Onyx.merge(ONYXKEYS.ACCOUNT, {error: error.message});
        })
        .finally(() =&amp;gt; {
            Onyx.merge(ONYXKEYS.ACCOUNT, {loading: false});
        });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keeping our &lt;code&gt;Onyx.merge()&lt;/code&gt; out of the view layer and in actions helps organize things as all interactions with device storage and API handling happen in the same place. In addition, actions that are called from inside views should not ever use the &lt;code&gt;.then()&lt;/code&gt; method to set loading/error states, navigate or do any additional data processing. All of this stuff should ideally go into &lt;code&gt;Onyx&lt;/code&gt; and be fed back to the component via &lt;code&gt;withOnyx()&lt;/code&gt;. Design your actions so they clearly describe what they will do and encapsulate all their logic in that action.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Bad
validateAndSubmitForm() {
    // validate...
    this.setState({loading: true});
    signIn()
        .then((response) =&amp;gt; {
            if (result.jsonCode === 200) {
                return;
            }

            this.setState({error: response.message});
        })
        .finally(() =&amp;gt; {
            this.setState({loading: false});
        });
}

// Good
validateAndSubmitForm() {
    // validate...
    signIn();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Directory structure&lt;/h2&gt; 
&lt;p&gt;Almost all the code is located in the &lt;code&gt;src&lt;/code&gt; folder, inside it there&#39;s some organization, we chose to name directories that are created to house a collection of items in plural form and using camelCase (eg: pages, libs, etc), the main ones we have for now are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;components: React native components that are re-used in several places.&lt;/li&gt; 
 &lt;li&gt;libs: Library classes/functions, these are not React native components (ie: they are not UI)&lt;/li&gt; 
 &lt;li&gt;pages: These are components that define pages in the app. The component that defines the page itself should be named &lt;code&gt;&amp;lt;pageName&amp;gt;Page&lt;/code&gt; if there are components used only inside one page, they should live in its own directory named after the &lt;code&gt;&amp;lt;pageName&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;styles: These files define styles used among components/pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;File naming/structure&lt;/h2&gt; 
&lt;p&gt;Files should be named after the component/function/constants they export, respecting the casing used for it. ie:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you export a constant named &lt;code&gt;CONST&lt;/code&gt; it&#39;s file/directory should be named the &lt;code&gt;CONST&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you export a component named &lt;code&gt;Text&lt;/code&gt; the file/directory should be named &lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you export a function named &lt;code&gt;guid&lt;/code&gt; the file/directory should be named &lt;code&gt;guid&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;For files that are utilities that export several functions/classes use the UpperCamelCase version ie: &lt;code&gt;DateUtils&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;HOCs should be named in camelCase like withOnyx.&lt;/li&gt; 
 &lt;li&gt;All React components should be PascalCase (a.k.a. UpperCamelCase üê´).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Platform-Specific File Extensions&lt;/h2&gt; 
&lt;p&gt;In most cases, the code written for this repo should be platform-independent. In such cases, each module should have a single file, &lt;code&gt;index.js&lt;/code&gt;, which defines the module&#39;s exports. There are, however, some cases in which a feature is intrinsically tied to the underlying platform. In such cases, the following file extensions can be used to export platform-specific code from a module:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mobile =&amp;gt; &lt;code&gt;index.native.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;iOS/Android =&amp;gt; &lt;code&gt;index.ios.js&lt;/code&gt;/&lt;code&gt;index.android.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Web =&amp;gt; &lt;code&gt;index.website.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Desktop =&amp;gt; &lt;code&gt;index.desktop.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that &lt;code&gt;index.js&lt;/code&gt; should be the default and only platform-specific implementations should be done in their respective files. i.e: If you have mobile-specific implementation in &lt;code&gt;index.native.js&lt;/code&gt;, then the desktop/web implementation can be contained in a shared &lt;code&gt;index.js&lt;/code&gt;. Furthermore, &lt;code&gt;index.native.js&lt;/code&gt; should not be included in the same module as &lt;code&gt;index.ios.js&lt;/code&gt; or &lt;code&gt;index.android.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API building&lt;/h2&gt; 
&lt;p&gt;When adding new API commands (and preferably when starting using a new one that was not yet used in this codebase) always prefer to return the created/updated data in the command itself, instead of saving and reloading. ie: if we call &lt;code&gt;CreateTransaction&lt;/code&gt;, we should prefer making &lt;code&gt;CreateTransaction&lt;/code&gt; return the data it just created instead of calling &lt;code&gt;CreateTransaction&lt;/code&gt; then &lt;code&gt;Get&lt;/code&gt; rvl=transactionList&lt;/p&gt; 
&lt;h2&gt;Storage Eviction&lt;/h2&gt; 
&lt;p&gt;Different platforms come with varying storage capacities and Onyx has a way to gracefully fail when those storage limits are encountered. When Onyx fails to set or modify a key the following steps are taken:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Onyx looks at a list of recently accessed keys (access is defined as subscribed to or modified) and locates the key that was least recently accessed&lt;/li&gt; 
 &lt;li&gt;It then deletes this key and retries the original operation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default, Onyx will not evict anything from storage and will presume all keys are &quot;unsafe&quot; to remove unless explicitly told otherwise.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;To flag a key as safe for removal:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add the key to the &lt;code&gt;safeEvictionKeys&lt;/code&gt; option in &lt;code&gt;Onyx.init(options)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Implement &lt;code&gt;canEvict&lt;/code&gt; in the Onyx config for each component subscribing to a key&lt;/li&gt; 
 &lt;li&gt;The key will only be deleted when all subscribers return &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;canEvict&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Onyx.init({
    safeEvictionKeys: [ONYXKEYS.COLLECTION.REPORT_ACTIONS],
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default withOnyx({
    reportActions: {
        key: ({reportID}) =&amp;gt; `${ONYXKEYS.COLLECTION.REPORT_ACTIONS}${reportID}`,
        canEvict: props =&amp;gt; !props.isActiveReport,
    },
})(ReportActionsView);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Things to know or brush up on before jumping into the code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;The major difference between React Native and React are the &lt;a href=&quot;https://reactnative.dev/docs/components-and-apis&quot;&gt;components&lt;/a&gt; that are used in the &lt;code&gt;render()&lt;/code&gt; method. Everything else is exactly the same. Any React skills you have can be applied to React Native.&lt;/li&gt; 
 &lt;li&gt;The application uses &lt;a href=&quot;https://reactnavigation.org/&quot;&gt;&lt;code&gt;react-navigation&lt;/code&gt;&lt;/a&gt; for navigating between parts of the app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/higher-order-components.html&quot;&gt;Higher Order Components&lt;/a&gt; are used to connect React components to persistent storage via &lt;a href=&quot;https://github.com/Expensify/react-native-onyx&quot;&gt;&lt;code&gt;react-native-onyx&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h1&gt;Philosophy&lt;/h1&gt; 
&lt;p&gt;This application is built with the following principles.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Flow&lt;/strong&gt; - Ideally, this is how data flows through the app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Server pushes data to the disk of any client (Server -&amp;gt; Pusher event -&amp;gt; Action listening to pusher event -&amp;gt; Onyx).&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Currently the code only does this with report comments. Until we make more server changes, this steps is actually done by the client requesting data from the server via XHR and then storing the response in Onyx.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;Disk pushes data to the UI (Onyx -&amp;gt; withOnyx() -&amp;gt; React component).&lt;/li&gt; 
   &lt;li&gt;UI pushes data to people&#39;s brains (React component -&amp;gt; device screen).&lt;/li&gt; 
   &lt;li&gt;Brain pushes data into UI inputs (Device input -&amp;gt; React component).&lt;/li&gt; 
   &lt;li&gt;UI inputs push data to the server (React component -&amp;gt; Action -&amp;gt; XHR to server).&lt;/li&gt; 
   &lt;li&gt;Go to 1 &lt;img src=&quot;https://raw.githubusercontent.com/Expensify/App/main/web/data_flow.png&quot; alt=&quot;New Expensify Data Flow Chart&quot;&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Offline first&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;All data that is brought into the app and is necessary to display the app when offline should be stored on disk in persistent storage (eg. localStorage on browser platforms). &lt;a href=&quot;https://reactnative.dev/docs/asyncstorage&quot;&gt;AsyncStorage&lt;/a&gt; is a cross-platform abstraction layer that is used to access persistent storage.&lt;/li&gt; 
   &lt;li&gt;All data that is displayed, comes from persistent storage.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;UI Binds to data on disk&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Onyx is a Pub/Sub library to connect the application to the data stored on disk.&lt;/li&gt; 
   &lt;li&gt;UI components subscribe to Onyx (using &lt;code&gt;withOnyx()&lt;/code&gt;) and any change to the Onyx data is published to the component by calling &lt;code&gt;setState()&lt;/code&gt; with the changed data.&lt;/li&gt; 
   &lt;li&gt;Libraries subscribe to Onyx (with &lt;code&gt;Onyx.connect()&lt;/code&gt;) and any change to the Onyx data is published to the callback with the changed data.&lt;/li&gt; 
   &lt;li&gt;The UI should never call any Onyx methods except for &lt;code&gt;Onyx.connect()&lt;/code&gt;. That is the job of Actions (see next section).&lt;/li&gt; 
   &lt;li&gt;The UI always triggers an Action when something needs to happen (eg. a person inputs data, the UI triggers an Action with this data).&lt;/li&gt; 
   &lt;li&gt;The UI should be as flexible as possible when it comes to: 
    &lt;ul&gt; 
     &lt;li&gt;Incomplete or missing data. Always assume data is incomplete or not there. For example, when a comment is pushed to the client from a pusher event, it&#39;s possible that Onyx does not have data for that report yet. That&#39;s OK. A partial report object is added to Onyx for the report key &lt;code&gt;report_1234 = {reportID: 1234, isUnread: true}&lt;/code&gt;. Then there is code that monitors Onyx for reports with incomplete data, and calls &lt;code&gt;fetchChatReportsByIDs(1234)&lt;/code&gt; to get the full data for that report. The UI should be able to gracefully handle the report object not being complete. In this example, the sidebar wouldn&#39;t display any report that doesn&#39;t have a report name.&lt;/li&gt; 
     &lt;li&gt;The order that actions are done in. All actions should be done in parallel instead of sequence. 
      &lt;ul&gt; 
       &lt;li&gt;Parallel actions are asynchronous methods that don&#39;t return promises. Any number of these actions can be called at one time and it doesn&#39;t matter what order they happen in or when they complete.&lt;/li&gt; 
       &lt;li&gt;In-Sequence actions are asynchronous methods that return promises. This is necessary when one asynchronous method depends on the results from a previous asynchronous method. Example: Making an XHR to &lt;code&gt;command=CreateChatReport&lt;/code&gt; which returns a reportID which is used to call &lt;code&gt;command=Get&amp;amp;rvl=reportStuff&lt;/code&gt;.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Actions manage Onyx Data&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When data needs to be written to or read from the server, this is done through Actions only.&lt;/li&gt; 
   &lt;li&gt;Action methods should only have return values (data or a promise) if they are called by other actions. This is done to encourage that action methods can be called in parallel with no dependency on other methods (see discussion above).&lt;/li&gt; 
   &lt;li&gt;Actions should favor using &lt;code&gt;Onyx.merge()&lt;/code&gt; over &lt;code&gt;Onyx.set()&lt;/code&gt; so that other values in an object aren&#39;t completely overwritten.&lt;/li&gt; 
   &lt;li&gt;Views should not call &lt;code&gt;Onyx.merge()&lt;/code&gt; or &lt;code&gt;Onyx.set()&lt;/code&gt; directly and should call an action instead.&lt;/li&gt; 
   &lt;li&gt;In general, the operations that happen inside an action should be done in parallel and not in sequence (eg. don&#39;t use the promise of one Onyx method to trigger a second Onyx method). Onyx is built so that every operation is done in parallel and it doesn&#39;t matter what order they finish in. XHRs on the other hand need to be handled in sequence with promise chains in order to access and act upon the response.&lt;/li&gt; 
   &lt;li&gt;If an Action needs to access data stored on disk, use a local variable and &lt;code&gt;Onyx.connect()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Data should be optimistically stored on disk whenever possible without waiting for a server response. Example of creating a new optimistic comment: 
    &lt;ol&gt; 
     &lt;li&gt;user adds a comment&lt;/li&gt; 
     &lt;li&gt;comment is shown in the UI (by mocking the expected response from the server)&lt;/li&gt; 
     &lt;li&gt;comment is created in the server&lt;/li&gt; 
     &lt;li&gt;server responds&lt;/li&gt; 
     &lt;li&gt;UI updates with data from the server&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross Platform 99.9999%&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A feature isn&#39;t done until it works on all platforms. Accordingly, don&#39;t even bother writing a platform-specific code block because you&#39;re just going to need to undo it.&lt;/li&gt; 
   &lt;li&gt;If the reason you can&#39;t write cross platform code is because there is a bug in ReactNative that is preventing it from working, the correct action is to fix RN and submit a PR upstream -- not to hack around RN bugs with platform-specific code paths.&lt;/li&gt; 
   &lt;li&gt;If there is a feature that simply doesn&#39;t exist on all platforms and thus doesn&#39;t exist in RN, rather than doing if (platform=iOS) { }, instead write a &quot;shim&quot; library that is implemented with NOOPs on the other platforms. For example, rather than injecting platform-specific multi-tab code (which can only work on browsers, because it&#39;s the only platform with multiple tabs), write a TabManager class that just is NOOP for non-browser platforms. This encapsulates the platform-specific code into a platform library, rather than sprinkling through the business logic.&lt;/li&gt; 
   &lt;li&gt;Put all platform specific code in dedicated files and folders, like /platform, and reject any PR that attempts to put platform-specific code anywhere else. This maintains a strict separation between business logic and platform code.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h1&gt;Internationalization&lt;/h1&gt; 
&lt;p&gt;This application is built with Internationalization (I18n) / Localization (L10n) support, so it&#39;s important to always localize the following types of data when presented to the user (even accessibility texts that are not rendered):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Texts: See &lt;a href=&quot;https://github.com/Expensify/App/raw/655ba416d552d5c88e57977a6e0165fb7eb7ab58/src/libs/translate.js#L15&quot;&gt;translate method&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Date/time: see &lt;a href=&quot;https://github.com/Expensify/App/raw/f579946fbfbdc62acc5bd281dc75cabb803d9af0/src/libs/DateUtils.js&quot;&gt;DateUtils&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Numbers and amounts: see &lt;a href=&quot;https://github.com/Expensify/App/tree/965f92fc2a5a2a0d01e6114bf5aa8755b9d9fd1a/src/libs/numberFormat&quot;&gt;numberFormat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Phones: see &lt;a href=&quot;https://github.com/Expensify/App/raw/bdfbafe18ee2d60f766c697744f23fad64b62cad/src/libs/LocalePhoneNumber.js#L51-L52&quot;&gt;LocalPhoneNumber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In most cases, you will be needing to localize data used in a component, if that&#39;s the case, there&#39;s a HOC &lt;a href=&quot;https://github.com/Expensify/App/raw/37465dbd07da1feab8347835d82ed3d2302cde4c/src/components/withLocalize.js&quot;&gt;withLocalize&lt;/a&gt;. It will abstract most of the logic you need (mostly subscribe to the &lt;a href=&quot;https://github.com/Expensify/App/raw/6cf1a56df670a11bf61aa67eeb64c1f87161dea1/src/ONYXKEYS.js#L88&quot;&gt;NVP_PREFERRED_LOCALE&lt;/a&gt; Onyx key) and is the preferred way of localizing things inside components.&lt;/p&gt; 
&lt;p&gt;Some pointers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All translations are stored in language files in &lt;a href=&quot;https://github.com/Expensify/App/tree/b114bc86ff38e3feca764e75b3f5bf4f60fcd6fe/src/languages&quot;&gt;src/languages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We try to group translations by their pages/components&lt;/li&gt; 
 &lt;li&gt;A common rule of thumb is to move a common word/phrase to be shared when it&#39;s in 3 places&lt;/li&gt; 
 &lt;li&gt;Always prefer longer and more complex strings in the translation files. For example if you need to generate the text &lt;code&gt;User has sent $20.00 to you on Oct 25th at 10:05am&lt;/code&gt;, add just one key to the translation file and use the arrow function version, like so: &lt;code&gt;nameOfTheKey: ({amount, dateTime}) =&amp;gt; &quot;User has sent &quot; + amount + &quot; to you on &quot; + dateTime,&lt;/code&gt;. This is because the order of the phrases might vary from one language to another.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Deploying&lt;/h1&gt; 
&lt;h2&gt;QA and deploy cycles&lt;/h2&gt; 
&lt;p&gt;We utilize a CI/CD deployment system built using &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt; to ensure that new code is automatically deployed to our users as fast as possible. As part of this process, all code is first deployed to our staging environments, where it undergoes quality assurance (QA) testing before it is deployed to production. Typically, pull requests are deployed to staging immediately after they are merged.&lt;/p&gt; 
&lt;p&gt;Every time a PR is deployed to staging, it is added to a &lt;a href=&quot;https://github.com/Expensify/App/issues?q=is%3Aopen+is%3Aissue+label%3AStagingDeployCash&quot;&gt;special tracking issue&lt;/a&gt; with the label &lt;code&gt;StagingDeployCash&lt;/code&gt; (there will only ever be one open at a time). This tracking issue contains information about the new application version, a list of recently deployed pull requests, and any issues found on staging that are not present on production. Every weekday at 9am PST, our QA team adds the &lt;code&gt;üîêLockCashDeploysüîê&lt;/code&gt; label to that tracking issue, and that signifies that they are starting their daily QA cycle. They will perform both regular regression testing and the QA steps listed for every pull request on the &lt;code&gt;StagingDeployCash&lt;/code&gt; checklist.&lt;/p&gt; 
&lt;p&gt;Once the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, we won&#39;t run any staging deploys until it is either unlocked, or we run a production deploy. If severe issues are found on staging that are not present on production, a new issue (or the PR that caused the issue) will be labeled with &lt;code&gt;DeployBlockerCash&lt;/code&gt;, and added to the &lt;code&gt;StagingDeployCash&lt;/code&gt; deploy checklist. If we want to resolve a deploy blocker by reverting a pull request or deploying a hotfix directly to the staging environment, we can merge a pull request with the &lt;code&gt;CP Staging&lt;/code&gt; label.&lt;/p&gt; 
&lt;p&gt;Once we have confirmed to the best of our ability that there are no deploy-blocking issues and that all our new features are working as expected on staging, we&#39;ll close the &lt;code&gt;StagingDeployCash&lt;/code&gt;. That will automatically trigger a production deployment, open a new &lt;code&gt;StagingDeployCash&lt;/code&gt; checklist, and deploy to staging any pull requests that were merged while the previous checklist was locked.&lt;/p&gt; 
&lt;h2&gt;Key GitHub workflows&lt;/h2&gt; 
&lt;p&gt;These are some of the most central &lt;a href=&quot;https://github.com/Expensify/App/tree/main/.github/workflows&quot;&gt;GitHub Workflows&lt;/a&gt;. There is more detailed information in the README &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;preDeploy&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/preDeploy.yml&quot;&gt;preDeploy workflow&lt;/a&gt; executes whenever a pull request is merged to &lt;code&gt;main&lt;/code&gt;, and at a high level does the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, comment on the merged PR that it will be deployed later.&lt;/li&gt; 
 &lt;li&gt;Otherwise: 
  &lt;ul&gt; 
   &lt;li&gt;Create a new version by triggering the &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/createNewVersion.yml&quot;&gt;&lt;code&gt;createNewVersion&lt;/code&gt; workflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Use the &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/updateProtectedBranch.yml&quot;&gt;&lt;code&gt;updateProtectedBranch&lt;/code&gt; workflow&lt;/a&gt; to update the &lt;code&gt;staging&lt;/code&gt; branch.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Also, if the pull request has the &lt;code&gt;CP Staging&lt;/code&gt; label, it will execute the &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/cherryPick.yml&quot;&gt;&lt;code&gt;cherryPick&lt;/code&gt; workflow&lt;/a&gt; to deploy the pull request directly to staging, even if the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;deploy&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/deploy.yml&quot;&gt;&lt;code&gt;deploy&lt;/code&gt; workflow&lt;/a&gt; is really quite simple. It runs when code is pushed to the &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; branches, and:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;staging&lt;/code&gt; was updated, it creates a tag matching the new version, and pushes tags.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;production&lt;/code&gt; was updated, it creates a GitHub Release for the new version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;platformDeploy&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/platformDeploy.yml&quot;&gt;&lt;code&gt;platformDeploy&lt;/code&gt; workflow&lt;/a&gt; is what actually runs the deployment on all four platforms (iOS, Android, Web, macOS Desktop). It runs a staging deploy whenever a new tag is pushed to GitHub, and runs a production deploy whenever a new release is created.&lt;/p&gt; 
&lt;h3&gt;lockDeploys&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/lockDeploys.yml&quot;&gt;&lt;code&gt;lockDeploys&lt;/code&gt; workflow&lt;/a&gt; executes when the &lt;code&gt;StagingDeployCash&lt;/code&gt; is locked, and it prepares the staging branch for a production release by creating a new &lt;code&gt;PATCH&lt;/code&gt; version (i.e: &lt;code&gt;1.0.57-5&lt;/code&gt; -&amp;gt; &lt;code&gt;1.0.58.0&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;finishReleaseCycle&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Expensify/App/raw/main/.github/workflows/finishReleaseCycle.yml&quot;&gt;&lt;code&gt;finishReleaseCycle&lt;/code&gt; workflow&lt;/a&gt; executes when the &lt;code&gt;StagingDeployCash&lt;/code&gt; is closed. It updates the &lt;code&gt;production&lt;/code&gt; branch from &lt;code&gt;staging&lt;/code&gt; (triggering a production deploy), deploys &lt;code&gt;main&lt;/code&gt; to staging, and creates a new &lt;code&gt;StagingDeployCash&lt;/code&gt; deploy checklist.&lt;/p&gt; 
&lt;h2&gt;Local production builds&lt;/h2&gt; 
&lt;p&gt;Sometimes it might be beneficial to generate a local production version instead of testing on production. Follow the steps below for each client:&lt;/p&gt; 
&lt;h4&gt;Local production build of the web app&lt;/h4&gt; 
&lt;p&gt;In order to generate a production web build, run &lt;code&gt;npm run build&lt;/code&gt;, this will generate a production javascript build in the &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h4&gt;Local production build of the MacOS desktop app&lt;/h4&gt; 
&lt;p&gt;In order to compile a production desktop build, run &lt;code&gt;npm run desktop-build&lt;/code&gt;, this will generate a production app in the &lt;code&gt;dist/Mac&lt;/code&gt; folder named &lt;code&gt;Chat.app&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Local production build the iOS app&lt;/h4&gt; 
&lt;p&gt;In order to compile a production iOS build, run &lt;code&gt;npm run ios-build&lt;/code&gt;, this will generate a &lt;code&gt;Chat.ipa&lt;/code&gt; in the root directory of this project.&lt;/p&gt; 
&lt;h4&gt;Local production build the Android app&lt;/h4&gt; 
&lt;p&gt;To build an APK to share run (e.g. via Slack), run &lt;code&gt;npm run android-build&lt;/code&gt;, this will generate a new APK in the &lt;code&gt;android/app&lt;/code&gt; folder.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tannerlinsley/react-table</title>
      <link>https://github.com/tannerlinsley/react-table</link>
      <description>&lt;p&gt;‚öõÔ∏è Hooks for building fast and extendable tables and datagrids for React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/tannerlinsley/react-table/raw/master/media/repo-dark.png&quot; alt=&quot;React Table Header&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Hooks for building &lt;strong&gt;lightweight, fast and extendable datagrids&lt;/strong&gt; for React&lt;/p&gt; 
&lt;a href=&quot;https://twitter.com/intent/tweet?button_hashtag=TanStack&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;#TanStack&quot; src=&quot;https://img.shields.io/twitter/url?color=%2308a0e9&amp;amp;label=%23TanStack&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table/actions?table=workflow%3A%22react-table+tests%22&quot;&gt; &lt;img src=&quot;https://github.com/tannerlinsley/react-table/workflows/react-table%20tests/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://npmjs.com/package/react-table&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/dm/react-table.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://bundlephobia.com/result?p=react-table@latest&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://badgen.net/bundlephobia/minzip/react-table@latest&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://raw.githubusercontent.com/tannerlinsley/react-table/master/#badge&quot;&gt; &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table/discussions&quot;&gt; &lt;img alt=&quot;Join the discussion on Github&quot; src=&quot;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tannerlinsley/react-table.svg?style=social&amp;amp;label=Star&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://twitter.com/tannerlinsley&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;amp;label=Follow&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Enjoy this library? Try them all! &lt;a href=&quot;https://github.com/tannerlinsley/react-query&quot;&gt;React Query&lt;/a&gt;, &lt;a href=&quot;https://github.com/tannerlinsley/react-form&quot;&gt;React Form&lt;/a&gt;, &lt;a href=&quot;https://github.com/tannerlinsley/react-charts&quot;&gt;React Charts&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Visit &lt;a href=&quot;https://react-table.tanstack.com&quot;&gt;react-table.tanstack.com&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt; 
&lt;h2&gt;Quick Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lightweight (5kb - 14kb+ depending on features used and tree-shaking)&lt;/li&gt; 
 &lt;li&gt;Headless (100% customizable, Bring-your-own-UI)&lt;/li&gt; 
 &lt;li&gt;Auto out of the box, fully controllable API&lt;/li&gt; 
 &lt;li&gt;Sorting (Multi and Stable)&lt;/li&gt; 
 &lt;li&gt;Filters&lt;/li&gt; 
 &lt;li&gt;Pivoting &amp;amp; Aggregation&lt;/li&gt; 
 &lt;li&gt;Row Selection&lt;/li&gt; 
 &lt;li&gt;Row Expansion&lt;/li&gt; 
 &lt;li&gt;Column Ordering&lt;/li&gt; 
 &lt;li&gt;Animatable&lt;/li&gt; 
 &lt;li&gt;Virtualizable&lt;/li&gt; 
 &lt;li&gt;Resizable&lt;/li&gt; 
 &lt;li&gt;Server-side/controlled data/state&lt;/li&gt; 
 &lt;li&gt;Extensible via hook-based plugin system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/sponsors/tannerlinsley/&quot;&gt;Become a Sponsor&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Previous Versions&lt;/h2&gt; 
&lt;h3&gt;Version 6&lt;/h3&gt; 
&lt;p&gt;v6 is a great library and while it is still available to install and use, I am no longer offering any long-term support for it. If you intend to keep using v6, I recommend maintaining your own fork of the library and keeping it up to date for your version of React.&lt;/p&gt; 
&lt;h4&gt;Where are the docs for the older v6 version?&lt;/h4&gt; 
&lt;p&gt;Please &lt;a href=&quot;https://github.com/tannerlinsley/react-table/tree/v6&quot;&gt;visit the v6 branch&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;I want to migrate from v6 to v7. How do I do that?&lt;/h4&gt; 
&lt;p&gt;The differences between the 2 versions are incredibly massive. Unfortunately, I cannot write a one-to-one upgrade guide for any of v6&#39;s API, simply because much of it is irrelevant with v7&#39;s headless approach. The best approach for migrating to v7 is to learn its API by reading the documentation and then following some of the examples to begin building your own table component.&lt;/p&gt; 
&lt;p&gt;In case you would need to have both v6 and v7 in one app during the migration process (large codebase, complex use cases), you can either (1) fork and maintain your own local version of React Table v6 or (2) install the &lt;a href=&quot;https://www.npmjs.com/package/react-table-6&quot;&gt;&lt;code&gt;react-table-6&lt;/code&gt; alias package&lt;/a&gt; for use alongside the &lt;code&gt;react-table&lt;/code&gt; package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/zx</title>
      <link>https://github.com/google/zx</link>
      <description>&lt;p&gt;A tool for writing better scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üêö zx&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env zx

await $`cat package.json | grep name`

let branch = await $`git branch --show-current`
await $`dep deploy --branch=${branch}`

await Promise.all([
  $`sleep 1; echo 1`,
  $`sleep 2; echo 2`,
  $`sleep 3; echo 3`,
])

let name = &#39;foo bar&#39;
await $`mkdir /tmp/${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bash is great, but when it comes to writing scripts, people usually choose a more convenient programming language. JavaScript is a perfect choice, but standard Node.js library requires additional hassle before using. The &lt;code&gt;zx&lt;/code&gt; package provides useful wrappers around &lt;code&gt;child_process&lt;/code&gt;, escapes arguments and gives sensible defaults.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Requirement&lt;/h3&gt; 
&lt;p&gt;Node.js &amp;gt;= 14.13.1&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Write your scripts in a file with &lt;code&gt;.mjs&lt;/code&gt; extension in order to be able to use &lt;code&gt;await&lt;/code&gt; on top level. If you prefer the &lt;code&gt;.js&lt;/code&gt; extension, wrap your scripts in something like &lt;code&gt;void async function () {...}()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Add the following shebang to the beginning of your &lt;code&gt;zx&lt;/code&gt; scripts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/usr/bin/env zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you will be able to run your script like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;chmod +x ./script.mjs
./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or via the &lt;code&gt;zx&lt;/code&gt; executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx ./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All functions (&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;, etc) are available straight away without any imports.&lt;/p&gt; 
&lt;p&gt;Or import globals explicitly (for better autocomplete in VS Code).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;zx/globals&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;$`command` &lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Executes a given string using the &lt;code&gt;spawn&lt;/code&gt; function from the &lt;code&gt;child_process&lt;/code&gt; package and returns &lt;code&gt;ProcessPromise&amp;lt;ProcessOutput&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Everything passed through &lt;code&gt;${...}&lt;/code&gt; will be automatically escaped and quoted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let name = &#39;foo &amp;amp; bar&#39;
await $`mkdir ${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;There is no need to add extra quotes.&lt;/strong&gt; Read more about it in &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/quotes.md&quot;&gt;quotes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can pass an array of arguments if needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let flags = [
  &#39;--oneline&#39;,
  &#39;--decorate&#39;,
  &#39;--color&#39;,
]
await $`git log ${flags}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the executed program returns a non-zero exit code, &lt;code&gt;ProcessOutput&lt;/code&gt; will be thrown.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
  await $`exit 1`
} catch (p) {
  console.log(`Exit code: ${p.exitCode}`)
  console.log(`Error: ${p.stderr}`)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;ProcessPromise&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessPromise&amp;lt;T&amp;gt; extends Promise&amp;lt;T&amp;gt; {
  readonly stdin: Writable
  readonly stdout: Readable
  readonly stderr: Readable
  readonly exitCode: Promise&amp;lt;number&amp;gt;
  pipe(dest): ProcessPromise&amp;lt;T&amp;gt;
  kill(signal = &#39;SIGTERM&#39;): Promise&amp;lt;void&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;pipe()&lt;/code&gt; method can be used to redirect stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cat file.txt`.pipe(process.stdout)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/pipelines.md&quot;&gt;pipelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;ProcessOutput&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessOutput {
  readonly stdout: string
  readonly stderr: string
  readonly exitCode: number
  toString(): string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;cd()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes the current working directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;cd(&#39;/tmp&#39;)
await $`pwd` // outputs /tmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;node-fetch&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let resp = await fetch(&#39;http://wttr.in&#39;)
if (resp.ok) {
  console.log(await resp.text())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;question()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://nodejs.org/api/readline.html&quot;&gt;readline&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let bear = await question(&#39;What kind of bear is best? &#39;)
let token = await question(&#39;Choose env variable: &#39;, {
  choices: Object.keys(process.env)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In second argument, array of choices for Tab autocompletion can be specified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function question(query?: string, options?: QuestionOptions): Promise&amp;lt;string&amp;gt;
type QuestionOptions = { choices: string[] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;code&gt;setTimeout&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await sleep(1000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;nothrow()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes behavior of &lt;code&gt;$&lt;/code&gt; to not throw an exception on non-zero exit codes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function nothrow&amp;lt;P&amp;gt;(p: P): P
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await nothrow($`grep something from-file`)

// Inside a pipe():

await $`find ./examples -type f -print0`
  .pipe(nothrow($`xargs -0 grep something`))
  .pipe($`wc -l`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only the &lt;code&gt;exitCode&lt;/code&gt; is needed, you can use the next code instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (await $`[[ -d path ]]`.exitCode == 0) {
  ...
}

// Equivalent of:

if ((await nothrow($`[[ -d path ]]`)).exitCode == 0) {
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Packages&lt;/h3&gt; 
&lt;p&gt;Following packages are available without importing inside scripts.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;chalk&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/chalk&quot;&gt;chalk&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(chalk.blue(&#39;Hello world!&#39;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fs&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/fs-extra&quot;&gt;fs-extra&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let content = await fs.readFile(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;globby&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/sindresorhus/globby&quot;&gt;globby&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let packages = await globby([&#39;package.json&#39;, &#39;packages/*/package.json&#39;])

let pictures = globby.globbySync(&#39;content/*.(jpg|png)&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, globby available via the &lt;code&gt;glob&lt;/code&gt; shortcut:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`svgo ${await glob(&#39;*.svg&#39;)}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;os&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/os.html&quot;&gt;os&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cd ${os.homedir()} &amp;amp;&amp;amp; mkdir example`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;path&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;path&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`mkdir ${path.join(basedir, &#39;output&#39;)}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;minimist&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/minimist&quot;&gt;minimist&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Available as global const &lt;code&gt;argv&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;$.shell&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies what shell is used. Default is &lt;code&gt;which bash&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$.shell = &#39;/usr/bin/bash&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--shell=/bin/bash&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.prefix&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies the command that will be prefixed to all commands run.&lt;/p&gt; 
&lt;p&gt;Default is &lt;code&gt;set -euo pipefail;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--prefix=&#39;set -e;&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.quote&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies a function for escaping special characters during command substitution.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.verbose&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies verbosity. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In verbose mode, the &lt;code&gt;zx&lt;/code&gt; prints all executed commands alongside with their outputs.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument &lt;code&gt;--quiet&lt;/code&gt; to set &lt;code&gt;$.verbose = false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;__filename&lt;/code&gt; &amp;amp; &lt;code&gt;__dirname&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/esm.html&quot;&gt;ESM&lt;/a&gt; modules, Node.js does not provide &lt;code&gt;__filename&lt;/code&gt; and &lt;code&gt;__dirname&lt;/code&gt; globals. As such globals are really handy in scripts, &lt;code&gt;zx&lt;/code&gt; provides these for use in &lt;code&gt;.mjs&lt;/code&gt; files (when using the &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; modules, the &lt;code&gt;require()&lt;/code&gt; function is not defined. The &lt;code&gt;zx&lt;/code&gt; provides &lt;code&gt;require()&lt;/code&gt; function, so it can be used with imports in &lt;code&gt;.mjs&lt;/code&gt; files (when using &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let {version} = require(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;Passing env variables&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;process.env.FOO = &#39;bar&#39;
await $`echo $FOO`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Passing array of values&lt;/h4&gt; 
&lt;p&gt;If array of values passed as argument to &lt;code&gt;$&lt;/code&gt;, items of the array will be escaped individually and concatenated via space.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let files = [...]
await $`tar cz ${files}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Importing from other scripts&lt;/h4&gt; 
&lt;p&gt;It is possible to make use of &lt;code&gt;$&lt;/code&gt; and other functions via explicit imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env node
import {$} from &#39;zx&#39;
await $`date`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scripts without extensions&lt;/h4&gt; 
&lt;p&gt;If script does not have a file extension (like &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;), zx assumes that it is an &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; module.&lt;/p&gt; 
&lt;h4&gt;Markdown scripts&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can execute scripts written in markdown (&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/markdown.md&quot;&gt;docs/markdown.md&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx docs/markdown.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TypeScript scripts&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import {$} from &#39;zx&#39;
// Or 
import &#39;zx/globals&#39;

void async function () {
  await $`ls -la`
}()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compile the TypeScript to JS and run it. Or use something like ts-node.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ts-node script.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing remote scripts&lt;/h4&gt; 
&lt;p&gt;If the argument to the &lt;code&gt;zx&lt;/code&gt; executable starts with &lt;code&gt;https://&lt;/code&gt;, the file will be downloaded and executed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/example-script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/game-of-life.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing scripts from stdin&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; supports executing scripts from stdin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;zx &amp;lt;&amp;lt;&#39;EOF&#39;
await $`pwd`
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/LICENSE&quot;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Disclaimer: &lt;em&gt;This is not an officially supported Google product.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereum-boilerplate/ethereum-boilerplate</title>
      <link>https://github.com/ethereum-boilerplate/ethereum-boilerplate</link>
      <description>&lt;p&gt;The ultimate full-stack Ethereum Dapp Boilerplate which gives you maximum flexibility and speed. Feel free to fork and contribute. Although this repo is called &quot;Ethereum Boilerplate&quot; it works with any EVM system and even Solana support is coming soon! Happy BUIDL!üë∑‚Äç‚ôÇÔ∏è&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;ethereum-boilerplate&lt;/code&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;React components and hooks for fast building dApps without running own backend&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This boilerplate is built on &lt;a href=&quot;https://github.com/MoralisWeb3/react-moralis&quot;&gt;react-moralis&lt;/a&gt; and &lt;a href=&quot;https://moralis.io?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=ethereum-boilerplate&quot;&gt;Moralis&lt;/a&gt;. Also has its own context provider for quick access to &lt;code&gt;chainId&lt;/code&gt; or &lt;code&gt;ethAddress&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;There are many components in this boilerplate that do not require an active web3 provider, they use Moralis Web3 API. Moralis supports the most popular blockchains and their test networks. You can find a list of all available networks in &lt;a href=&quot;https://docs.moralis.io/moralis-server/web3-sdk/intro#supported-chains&quot;&gt;Moralis Supported Chains&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://docs.moralis.io/#user&quot;&gt;official documentation of Moralis&lt;/a&gt; for all the functionalities of Moralis.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/140418251-18b4b3bc-2241-4174-886d-daafe9d6ad3b.gif&quot; alt=&quot;dapp3&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;‚≠êÔ∏è &lt;code&gt;Star us&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;If this boilerplate helps you build Ethereum dapps faster - please star this project, every star makes us very happy!&lt;/p&gt; 
&lt;h1&gt;üöÄ Quick Start&lt;/h1&gt; 
&lt;p&gt;üìÑ Clone or fork &lt;code&gt;ethereum-boilerplate&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/ethereum-boilerplate/ethereum-boilerplate.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üíø Install all dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd ethereum-boilerplate
yarn install 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚úè Rename &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; in the main folder and provide your &lt;code&gt;appId&lt;/code&gt; and &lt;code&gt;serverUrl&lt;/code&gt; from Moralis (&lt;a href=&quot;https://docs.moralis.io/moralis-server/getting-started/create-a-moralis-server&quot;&gt;How to start Moralis Server&lt;/a&gt;) Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;REACT_APP_MORALIS_APPLICATION_ID = xxxxxxxxxxxx
REACT_APP_MORALIS_SERVER_URL = https://xxxxxx.grandmoralis.com:2053/server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üö¥‚Äç‚ôÇÔ∏è Run your App:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;üß≠ Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#ethereum-boilerplate&quot;&gt;&lt;code&gt;ethereum-boilerplate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#-quick-start&quot;&gt;üöÄ Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#-table-of-contents&quot;&gt;üß≠ Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#-ethereum-components&quot;&gt;üèó Ethereum Components&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#addressinput-&quot;&gt;&lt;code&gt;&amp;lt;AddressInput /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#chains-&quot;&gt;&lt;code&gt;&amp;lt;Chains /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#coinprice-&quot;&gt;&lt;code&gt;&amp;lt;CoinPrice /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#erc20balance-&quot;&gt;&lt;code&gt;&amp;lt;ERC20Balance /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#erc20transfers-&quot;&gt;&lt;code&gt;&amp;lt;ERC20Transfers /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#dex-&quot;&gt;&lt;code&gt;&amp;lt;DEX /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#wallet-&quot;&gt;&lt;code&gt;&amp;lt;Wallet /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#blockie-&quot;&gt;&lt;code&gt;&amp;lt;Blockie /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#nativebalance-&quot;&gt;&lt;code&gt;&amp;lt;NativeBalance /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#contract-&quot;&gt;&lt;code&gt;&amp;lt;Contract /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#-ethereum-hooks&quot;&gt;üß∞ Ethereum Hooks&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useapicontract&quot;&gt;&lt;code&gt;useAPIContract()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useweb3contract&quot;&gt;&lt;code&gt;useWeb3Contract()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useerc20balance&quot;&gt;&lt;code&gt;useERC20Balance()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useerc20transfers&quot;&gt;&lt;code&gt;useERC20Transfers()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usenativebalance&quot;&gt;&lt;code&gt;useNativeBalance()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usenativetransactions&quot;&gt;&lt;code&gt;useNativeTransactions()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usenftbalance&quot;&gt;&lt;code&gt;useNFTBalance()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usenfttransfers&quot;&gt;&lt;code&gt;useNFTTransfers()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usenfttransfers&quot;&gt;&lt;code&gt;useNFTTransfers()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useipfs&quot;&gt;&lt;code&gt;useIPFS()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usechain&quot;&gt;&lt;code&gt;useChain()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#usetokenprice&quot;&gt;&lt;code&gt;useTokenPrice()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum-boilerplate/ethereum-boilerplate/main/#useinchdex&quot;&gt;&lt;code&gt;useInchDex()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;üèó Ethereum Components&lt;/h1&gt; 
&lt;p&gt;üõ† The ready for use react-components are located in &lt;code&gt;src/components&lt;/code&gt;. They are designed to be used anywhere in your dApp.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö° Note that many components may get params like &lt;code&gt;chain&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and etc.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;Address /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/138753150-aefb426c-9481-4f41-91a3-d4e4fd424b8f.gif&quot; alt=&quot;address&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üì® &lt;code&gt;&amp;lt;Address /&amp;gt;&lt;/code&gt; : Displays an Ethereum address with &lt;a href=&quot;https://www.npmjs.com/package/react-blockies&quot;&gt;Blockie&lt;/a&gt; avatar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;copyable (optional): display icon for copying.&lt;/li&gt; 
 &lt;li&gt;avatar (optional): display blockie avatar.&lt;/li&gt; 
 &lt;li&gt;size (optional): text size.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Address /&amp;gt;
&amp;lt;Address avatar /&amp;gt;
&amp;lt;Address avatar copyable /&amp;gt;
&amp;lt;Address avatar copyable size=&quot;4&quot;  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;AddressInput /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/138753917-53007fa1-b053-4723-8c18-aec9ecfe5479.gif&quot; alt=&quot;addressInput&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üì´ &lt;code&gt;&amp;lt;AddressInput /&amp;gt;&lt;/code&gt; : Input for eth address. Displays &lt;a href=&quot;https://www.npmjs.com/package/react-blockies&quot;&gt;Blockie&lt;/a&gt; avatar for the entered wallet. Helps to validate addresses. After entering 42 characters (wallet length) freezes inout and calls &lt;code&gt;setValidatedAddress&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;autoFocus (optional): focuses object after rendering the component.&lt;/li&gt; 
 &lt;li&gt;placeholder (optional): text to display before entering address.&lt;/li&gt; 
 &lt;li&gt;onChange (required): your setState hook.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const [address, setAddress] = useState();

&amp;lt;AddressInput autoFocus placeholder=&quot;Input your Address&quot; onChange={setAddress} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;Chains /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/138943009-560c3501-8b83-4643-a6f5-0b8f9ff5ef0a.gif&quot; alt=&quot;chains&quot;&gt;&lt;/p&gt; 
&lt;p&gt;‚õì &lt;code&gt;&amp;lt;Chains /&amp;gt;&lt;/code&gt; : Active network switch. Supports Ethereum, Polygon, BSC and Avalacnhe blockchains. Works only with networks that have already been added to Injected Wallet. You can find a guide on how to programmatically add a new network &lt;a href=&quot;https://docs.moralis.io/moralis-server/web3/web3#addnetwork&quot;&gt;here&lt;/a&gt;. Easily customizable, you can add other networks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;props (optional): networks to display. Added by default: polygon, eth, bsc and avalanche&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Chains polygon eth bsc avalanche /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;CoinPrice /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/138944095-ac5aebb0-0e69-4b9e-83ec-2a29d0404cbd.gif&quot; alt=&quot;price&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üíµ &lt;code&gt;&amp;lt;CoinPrice /&amp;gt;&lt;/code&gt; : displays the price of the token specified in the settings. Uses Moralis Web3API (does not require an active web3 provider).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;address (required): Token contract address&lt;/li&gt; 
 &lt;li&gt;chain (optional): The network to which the token is deployed. Default: ETH&lt;/li&gt; 
 &lt;li&gt;image (optional): local path or link to token logo&lt;/li&gt; 
 &lt;li&gt;size (optional): logo size&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;CoinPrice address=&quot;0x1...3&quot; chain=&quot;eth&quot; image=&quot;https://img.png&quot; size=&quot;40px&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;ERC20Balance /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/139561267-7a1be577-ad13-4158-a7ea-aa4e7db358a3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üí∞ &lt;code&gt;&amp;lt;ERC20Balance /&amp;gt;&lt;/code&gt; : displays the ERC20 balance of an address. Uses Moralis Web3API (does not require an active web3 provider).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;chain (optional): network for displaying balances on. Will use your wallet network if you do not specify &lt;code&gt;chain&lt;/code&gt; yourself&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ERC20Balance chain=&quot;polygon&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;ERC20Transfers /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/139561270-7e0964ec-65f9-4909-b7c1-5706a22cca86.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üí∏ &lt;code&gt;&amp;lt;ERC20Transfers /&amp;gt;&lt;/code&gt; : displays the ERC20 transfers of an address. Uses Moralis Web3API (does not require an active web3 provider).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;chain (optional): network for displaying transfers on. Will use your wallet network if you do not specify &lt;code&gt;chain&lt;/code&gt; yourself&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ERC20Transfers chain=&quot;polygon&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;DEX /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/139118630-9c98dbcf-73bc-4b47-af09-9f81a1181d0b.gif&quot; alt=&quot;dex2&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üí± &lt;code&gt;&amp;lt;InchDex /&amp;gt;&lt;/code&gt; : interface for &lt;a href=&quot;https://moralis.io/plugins/1inch?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=ethereum-boilerplate&quot;&gt;Moralis 1Inch Plugin&lt;/a&gt;. This plugin integrates the DeFi / DEX aggregator 1Inch to any project that uses Moralis.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;chain (optional): network. Available: Ethereum (‚Äúeth‚Äù), Binance Smart Chain (‚Äúbsc‚Äù), Polygon (‚Äúpolygon‚Äù)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;InchDex chain=&quot;eth&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;Wallet /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78314301/138942356-f72346dc-14c7-43c5-9ae3-802d219f866f.gif&quot; alt=&quot;wallet&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üíº &lt;code&gt;&amp;lt;Wallet /&amp;gt;&lt;/code&gt; : example interface for interacting with your wallet. Uses components from the boilerplate: &lt;code&gt;&amp;lt;Blockie /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Address /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;NativeBalance /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;AddressInput /&amp;gt;&lt;/code&gt;. Has the functionality to send tokens&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Wallet /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;Blockie /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;NativeBalance /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;&amp;lt;Contract /&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;h1&gt;üß∞ Ethereum Hooks&lt;/h1&gt; 
&lt;h3&gt;&lt;code&gt;useAPIContract()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üìã Runs a given function of a contract abi and returns readonly data. Uses Moralis Web3API (does not require an active web3 provider).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value Eth.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;functionName&lt;/code&gt; (required): The function name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;address&lt;/code&gt; (required): A smart contract address&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;abi&lt;/code&gt; (required): contract or function ABI(should be provided as an array)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ShowUniswapTotalSupplyLP = () =&amp;gt; {
  const { runContractFunction, contractResponse, error, isLoading } = useAPIContract({
    abi: usdcEthPoolAbi,
    address: usdcEthPoolAddress,
    functionName: &quot;totalSupply&quot;,
  });

  return (&amp;lt;div&amp;gt;
    {error &amp;amp;&amp;amp; &amp;lt;ErrorMessage error={error} /&amp;gt;}
    &amp;lt;button onClick={() =&amp;gt; runContractFunction()} disabled={isLoading}&amp;gt;Fetch data&amp;lt;/button&amp;gt;
    {data &amp;amp;&amp;amp; &amp;lt;pre&amp;gt;
      {JSON.stringify(contractResponse),
        null,
        2,
      )}
    &amp;lt;/pre&amp;gt;}
  &amp;lt;/div&amp;gt;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;useWeb3Contract()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üìã Runs on-chain functions. Requires active Web3 Provider.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value Eth.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;functionName&lt;/code&gt; (required): The function name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;contractAddress&lt;/code&gt; (required): A smart contract address&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;abi&lt;/code&gt; (required): contract or function ABI(should be provided as an array)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;params&lt;/code&gt; (optional): Parameters needed for your specific function&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ShowUniswapObserveValues = () =&amp;gt; {
  const { runContractFunction, contractResponse, error, isRunning, isLoading } = useWeb3Contract({
    abi: usdcEthPoolAbi,
    contractAddress: usdcEthPoolAddress,
    functionName: &quot;observe&quot;,
    params: {
      secondsAgos: [0, 10],
    },
  });

  return (&amp;lt;div&amp;gt;
    {error &amp;amp;&amp;amp; &amp;lt;ErrorMessage error={error} /&amp;gt;}
    &amp;lt;button onClick={() =&amp;gt; runContractFunction()} disabled={isLoading}&amp;gt;Fetch data&amp;lt;/button&amp;gt;
    {data &amp;amp;&amp;amp; &amp;lt;pre&amp;gt;
      {JSON.stringify(contractResponse),
        null,
        2,
      )}
    &amp;lt;/pre&amp;gt;}
  &amp;lt;/div&amp;gt;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;useERC20Balance()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üí∞ Gets all token balances of a current user or specified address.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value: current chain.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;address&lt;/code&gt; (optional): A user address (i.e. 0x1a2b3x...). If specified, the user attached to the query is ignored and the address will be used instead.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_block&lt;/code&gt; (optional): The block number on which the balances should be checked&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt; (Object) : number of tokens and the array of token objects&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const { fetchERC20Balance, assets } = useERC20Balance({ chain : &quot;eth&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;useERC20Transfers()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üßæ Gets ERC20 token transfers of a current user or specified address.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value: current chain.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;address&lt;/code&gt; (optional): A user address (i.e. 0x1a2b3x...). If specified, the user attached to the query is ignored and the address will be used instead.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;from_date&lt;/code&gt; (optional): The date from where to get the transactions (any format that is accepted by momentjs). Provide the param &#39;from_block&#39; or &#39;from_date&#39; If &#39;from_date&#39; and &#39;from_block&#39; are provided, &#39;from_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_date&lt;/code&gt; (optional): Get the transactions to this date (any format that is accepted by momentjs). Provide the param &#39;to_block&#39; or &#39;to_date&#39; If &#39;to_date&#39; and &#39;to_block&#39; are provided, &#39;to_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;from_block&lt;/code&gt; (optional): The minimum block number from where to get the transactions Provide the param &#39;from_block&#39; or &#39;from_date&#39; If &#39;from_date&#39; and &#39;from_block&#39; are provided, &#39;from_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_block&lt;/code&gt; (optional): The maximum block number from where to get the transactions. Provide the param &#39;to_block&#39; or &#39;to_date&#39; If &#39;to_date&#39; and &#39;to_block&#39; are provided, &#39;to_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;offset&lt;/code&gt; (optional): Offset.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;limit&lt;/code&gt; (optional): Limit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt; (Array) : ERC20 token transfers&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const { fetchERC20Transfers, ERC20Transfers } = useERC20Transfers({ chain : &quot;eth&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;useNativeBalance()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üí∞ Gets native balance for a current user or specified address. The &lt;code&gt;nativeName&lt;/code&gt; from &lt;code&gt;useNativeBalance()&lt;/code&gt; shows name of chain(Example: &quot;BNB&quot;, &quot;ETH&quot;, ...)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value: current chain.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;address&lt;/code&gt; (optional): A user address (i.e. 0x1a2b3x...). If specified, the user attached to the query is ignored and the address will be used instead.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_block&lt;/code&gt; (optional): The block number on which the balances should be checked&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt; (Object) : { inWei: balance in Wei , formatted: balance in Eth style }&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function NativeBalance() {
  const { getBalance, balance, nativeName, error, isLoading } = useNativeBalance({ chain : &quot;eth&quot; });
  return (
    &amp;lt;div&amp;gt;{`${balance.formatted} ${nativeName}`}&amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;useNativeTransactions()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;üßæ Gets the transactions from the current user or specified address. Returns an object with the number of transactions and the array of native transactions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chain&lt;/code&gt; (optional): The blockchain to get data from. Valid values are listed on the intro page in the Transactions and Balances section. Default value: current chain.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;address&lt;/code&gt; (optional): A user address (i.e. 0x1a2b3x...). If specified, the user attached to the query is ignored and the address will be used instead.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;from_date&lt;/code&gt; (optional): The date from where to get the transactions (any format that is accepted by momentjs). Provide the param &#39;from_block&#39; or &#39;from_date&#39; If &#39;from_date&#39; and &#39;from_block&#39; are provided, &#39;from_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_date&lt;/code&gt; (optional): Get the transactions to this date (any format that is accepted by momentjs). Provide the param &#39;to_block&#39; or &#39;to_date&#39; If &#39;to_date&#39; and &#39;to_block&#39; are provided, &#39;to_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;from_block&lt;/code&gt; (optional): The minimum block number from where to get the transactions Provide the param &#39;from_block&#39; or &#39;from_date&#39; If &#39;from_date&#39; and &#39;from_block&#39; are provided, &#39;from_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;to_block&lt;/code&gt; (optional): The maximum block number from where to get the transactions. Provide the param &#39;to_block&#39; or &#39;to_date&#39; If &#39;to_date&#39; and &#39;to_block&#39; are provided, &#39;to_block&#39; will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;offset&lt;/code&gt; (optional): Offset.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;limit&lt;/code&gt; (optional): Limit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt; (Array) : native transactions&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;useNFTBalance()&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;useNFTTransfers()&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;useChain()&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;useInchDex()&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;useTokenPrice()&lt;/code&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;code&gt;useIPFS()&lt;/code&gt;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it‚Äôs easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function‚Äôs definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it‚Äôs time to extract it to its own module! Don‚Äôt forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error‚Äôs call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn‚Äôt mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn‚Äôt have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs cleaner, you don‚Äôt need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It‚Äôs okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let‚Äôs start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// ‚Ä¶ some other imports ‚Ä¶ //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don‚Äôt use iterators. Prefer JavaScript‚Äôs higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don‚Äôt use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don‚Äôt transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don‚Äôt chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It‚Äôs important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn‚Äôt work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;https://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;https://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer‚Äôs intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you‚Äôre using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block‚Äôs closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it‚Äôs on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you‚Äôre pointing out a problem that needs to be revisited, or if you‚Äôre suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn‚Äôt use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
‚àô‚àô‚àô‚àôlet name;
}

// bad
function bar() {
‚àôlet name;
}

// good
function baz() {
‚àô‚àôlet name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don‚Äôt have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That‚Äôs impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That‚Äôs impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn‚Äôt guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you‚Äôre doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean ‚Äúprivate‚Äù, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won‚Äôt count as breaking, or that tests aren‚Äôt needed. tl;dr: if you want something to be ‚Äúprivate‚Äù, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don‚Äôt save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function‚Äôs name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It‚Äôs okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;‚Äôs ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it‚Äôs not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mob√¶k, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don‚Äôt Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury‚Äôs Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team‚Äôs style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>bilibili/flv.js</title>
      <link>https://github.com/bilibili/flv.js</link>
      <description>&lt;p&gt;HTML5 FLV Player&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flv.js &lt;a href=&quot;https://www.npmjs.com/package/flv.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/flv.js.svg?style=flat&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;An HTML5 Flash Video (FLV) Player written in pure JavaScript without Flash. LONG LIVE FLV!&lt;/p&gt; 
&lt;p&gt;This project relies on &lt;a href=&quot;https://w3c.github.io/media-source/&quot;&gt;Media Source Extensions&lt;/a&gt; to work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For FLV live stream playback, please consider &lt;a href=&quot;https://github.com/xqq/mpegts.js&quot;&gt;mpegts.js&lt;/a&gt; which is under active development.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project will become rarely maintained.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;flv.js works by transmuxing FLV file stream into ISO BMFF (Fragmented MP4) segments, followed by feeding mp4 segments into an HTML5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element through &lt;a href=&quot;https://w3c.github.io/media-source/&quot;&gt;Media Source Extensions&lt;/a&gt; API.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://bilibili.github.io/flv.js/demo/&quot;&gt;http://bilibili.github.io/flv.js/demo/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;FLV container with H.264 + AAC / MP3 codec playback&lt;/li&gt; 
 &lt;li&gt;Multipart segmented video playback&lt;/li&gt; 
 &lt;li&gt;HTTP FLV low latency live stream playback&lt;/li&gt; 
 &lt;li&gt;FLV over WebSocket live stream playback&lt;/li&gt; 
 &lt;li&gt;Compatible with Chrome, FireFox, Safari 10, IE11 and Edge&lt;/li&gt; 
 &lt;li&gt;Extremely low overhead, and hardware accelerated by your browser!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install --save flv.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm ci                 # install dependencies / dev-dependences
npm run build:debug    # debug version flv.js will be emitted to /dist
npm run build          # minimized release version flv.min.js will be emitted to /dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cnpm/cnpm&quot;&gt;cnpm&lt;/a&gt; mirror is recommended if you are in Mainland China.&lt;/p&gt; 
&lt;h2&gt;CORS&lt;/h2&gt; 
&lt;p&gt;If you use standalone video server for FLV stream, &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header must be configured correctly on video server for cross-origin resource fetching.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/cors.md&quot;&gt;cors.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;flv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;video id=&quot;videoElement&quot;&amp;gt;&amp;lt;/video&amp;gt;
&amp;lt;script&amp;gt;
    if (flvjs.isSupported()) {
        var videoElement = document.getElementById(&#39;videoElement&#39;);
        var flvPlayer = flvjs.createPlayer({
            type: &#39;flv&#39;,
            url: &#39;http://example.com/flv/video.flv&#39;
        });
        flvPlayer.attachMediaElement(videoElement);
        flvPlayer.load();
        flvPlayer.play();
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MP3 audio codec is currently not working on IE11 / Edge&lt;/li&gt; 
 &lt;li&gt;HTTP FLV live stream is not currently working on all browsers, see &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/livestream.md&quot;&gt;livestream.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Multipart playback&lt;/h2&gt; 
&lt;p&gt;You only have to provide a playlist for &lt;code&gt;MediaDataSource&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/multipart.md&quot;&gt;multipart.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Livestream playback&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/livestream.md&quot;&gt;livestream.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API and Configuration&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/api.md&quot;&gt;api.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Debug&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm ci         # install dependencies / dev-dependences
npm run dev    # watch file changes and build debug version on the fly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/bilibili/flv.js/master/docs/design.md&quot;&gt;design.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2016 Bilibili. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
