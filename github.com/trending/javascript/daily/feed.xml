<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Mon, 30 Nov 2020 01:28:18 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>hakimel/reveal.js</title>
      <link>https://github.com/hakimel/reveal.js</link>
      <description>&lt;p&gt;The HTML Presentation Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. &lt;a href=&quot;https://revealjs.com/&quot;&gt;Check out the live demo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The framework comes with a broad range of features including &lt;a href=&quot;https://revealjs.com/vertical-slides/&quot;&gt;nested slides&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/markdown/&quot;&gt;Markdown support&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/auto-animate/&quot;&gt;Auto-Animate&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/pdf-export/&quot;&gt;PDF export&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/speaker-view/&quot;&gt;speaker notes&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/math/&quot;&gt;LaTeX support&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/code/&quot;&gt;syntax highlighted code&lt;/a&gt; and much more.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The full reveal.js documentation is available at &lt;a href=&quot;https://revealjs.com&quot;&gt;revealjs.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Online Editor&lt;/h2&gt; 
&lt;p&gt;Want to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at &lt;a href=&quot;https://slides.com&quot;&gt;Slides.com&lt;/a&gt;. It&#39;s made by the same people behind reveal.js.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT licensed&lt;/p&gt; 
&lt;p&gt;Copyright (C) 2011-2020 Hakim El Hattab, https://hakim.se&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LAB-MI/attestation-deplacement-derogatoire-q4-2020</title>
      <link>https://github.com/LAB-MI/attestation-deplacement-derogatoire-q4-2020</link>
      <description>&lt;p&gt;attestation-deplacement-derogatoire-q4-2020 public&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Générateur de certificat de déplacement&lt;/h1&gt; 
&lt;h2&gt;Développer&lt;/h2&gt; 
&lt;h3&gt;Installer le projet&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;git clone https://github.com/LAB-MI/attestation-deplacement-derogatoire-q4-2020.git
cd attestation-deplacement-derogatoire-q4-2020
npm i
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Générer et tester le code de production&lt;/h2&gt; 
&lt;h3&gt;Tester le code de production en local&lt;/h3&gt; 
&lt;h4&gt;Générer le code de production pour tester que le build fonctionne en entier&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;npm run build:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Tester le code de production en local&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;npx serve dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Et visiter http://localhost:5000&lt;/p&gt; 
&lt;p&gt;Le code à déployer sera le contenu du dossier &lt;code&gt;dist&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Crédits&lt;/h2&gt; 
&lt;p&gt;Ce projet a été réalisé à partir d&#39;un fork du dépôt &lt;a href=&quot;https://github.com/nesk/deplacement-covid-19&quot;&gt;deplacement-covid-19&lt;/a&gt; de lui-même réalisé à partir d&#39;un fork du dépôt &lt;a href=&quot;https://github.com/nesk/covid-19-certificate&quot;&gt;covid-19-certificate&lt;/a&gt; de &lt;a href=&quot;https://github.com/nesk&quot;&gt;Johann Pardanaud&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Les projets open source suivants ont été utilisés pour le développement de ce service :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pdf-lib.js.org/&quot;&gt;PDF-LIB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soldair/node-qrcode&quot;&gt;qrcode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/license&quot;&gt;Font Awesome&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GitSquared/edex-ui</title>
      <link>https://github.com/GitSquared/edex-ui</link>
      <description>&lt;p&gt;A cross-platform, customizable science fiction terminal emulator with advanced monitoring &amp; touchscreen support.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.&lt;/p&gt; 
&lt;p&gt;Heavily inspired from the &lt;a href=&quot;https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671&quot;&gt;TRON Legacy movie effects&lt;/a&gt; (especially the &lt;a href=&quot;https://gmunk.com/TRON-Board-Room&quot;&gt;Board Room sequence&lt;/a&gt;), the eDEX-UI project was originally meant to be &lt;em&gt;&quot;&lt;a href=&quot;https://github.com/seenaburns/dex-ui&quot;&gt;DEX-UI&lt;/a&gt; with less « art » and more « distributable software »&quot;&lt;/em&gt;. While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.&lt;/p&gt; 
&lt;p&gt;It might or might not be a joke taken too seriously.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;( Jump to: &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#screenshots&quot;&gt;Screenshots&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#qa&quot;&gt;Questions &amp;amp; Answers&lt;/a&gt; - &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&quot;&gt;Featured In&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#useful-commands-for-the-nerds&quot;&gt;Developer Instructions&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#credits&quot;&gt;Credits&lt;/a&gt; )&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Click the banner below and sign up to &lt;strong&gt;Bytes&lt;/strong&gt;, the only newsletter cool enough to be recommended by eDEX-UI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ui.dev/bytes/?r=gabriel&quot;&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/sponsor-uidev-bytes.jpg&quot; alt=&quot;Bytes by UI.dev&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully featured terminal emulator with tabs, colors, mouse events, and support for &lt;code&gt;curses&lt;/code&gt; and &lt;code&gt;curses&lt;/code&gt;-like applications.&lt;/li&gt; 
 &lt;li&gt;Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.&lt;/li&gt; 
 &lt;li&gt;Full support for touch-enabled displays, including an on-screen keyboard.&lt;/li&gt; 
 &lt;li&gt;Directory viewer that follows the CWD (current working directory) of the terminal.&lt;/li&gt; 
 &lt;li&gt;Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki&quot;&gt;wiki&lt;/a&gt; for more info.&lt;/li&gt; 
 &lt;li&gt;Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_default.png&quot; alt=&quot;Default screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt; on eDEX-UI 2.2 with the default &quot;tron&quot; theme &amp;amp; QWERTY keyboard)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_white.png&quot; alt=&quot;Interstellar screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(Graphical settings editor and list of keyboard shortcuts on eDEX-UI 2.2 with the &quot;interstellar&quot; bright theme)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_disrupted.png&quot; alt=&quot;Disrupted screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://github.com/abishekvashok/cmatrix&quot;&gt;cmatrix&lt;/a&gt; on eDEX-UI 2.2 with the experimental &quot;tron-disrupted&quot; theme, and the user-contributed DVORAK keyboard)&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; 
&lt;h4&gt;How do I get it?&lt;/h4&gt; 
&lt;p&gt;Click on the little badges under the eDEX logo at the top of this page, or go to the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases&quot;&gt;Releases&lt;/a&gt; tab, or download it through &lt;a href=&quot;https://repology.org/project/edex-ui/versions&quot;&gt;one of the available repositories&lt;/a&gt; (Homebrew, AUR...).&lt;/p&gt; 
&lt;p&gt;Public release binaries are unsigned (&lt;a href=&quot;https://gaby.dev/posts/code-signing&quot;&gt;why&lt;/a&gt;). On Linux, you will need to &lt;code&gt;chmod +x&lt;/code&gt; the AppImage file in order to run it.&lt;/p&gt; 
&lt;h4&gt;I have a problem!&lt;/h4&gt; 
&lt;p&gt;Search through the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues&quot;&gt;Issues&lt;/a&gt; to see if yours has already been reported. If you&#39;re confident it hasn&#39;t been reported yet, feel free to open up a new one. If you see your issue and it&#39;s been closed, it probably means that the fix for it will ship in the next version, and you&#39;ll have to wait a bit.&lt;/p&gt; 
&lt;h4&gt;Can you disable the keyboard/the filesystem display?&lt;/h4&gt; 
&lt;p&gt;You can&#39;t disable them (yet) but you can hide them. See the &lt;code&gt;tron-notype&lt;/code&gt; theme.&lt;/p&gt; 
&lt;h4&gt;Why is the file browser saying that &quot;Tracking Failed&quot;? (Windows only)&lt;/h4&gt; 
&lt;p&gt;On Linux and macOS, eDEX tracks where you&#39;re going in your terminal tab to display the content of the current folder on-screen. Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &quot;detached&quot; mode. You can still use it to browse files &amp;amp; directories and click on files to input their path in the terminal.&lt;/p&gt; 
&lt;h4&gt;Can this run on a Raspberry Pi / ARM device?&lt;/h4&gt; 
&lt;p&gt;We provide prebuilt arm64 builds. For other platforms, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345&quot;&gt;this issue comment&lt;/a&gt;, and the thread on issue &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/818&quot;&gt;#818&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Is this repo actively maintained?&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/769&quot;&gt;See this notice&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;How did you make this?&lt;/h4&gt; 
&lt;p&gt;Glad you&#39;re interested! See &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/272&quot;&gt;#272&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;This is so cool.&lt;/h4&gt; 
&lt;p&gt;Thanks! If you feel like it, you can &lt;a href=&quot;https://buymeacoff.ee/gaby&quot;&gt;buy me a coffee&lt;/a&gt; or &lt;a href=&quot;https://github.com/sponsors/GitSquared&quot;&gt;sponsor me on GitHub&lt;/a&gt; to encourage me to build more awesome stuff.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Featured in...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html&quot;&gt;Linux Uprising Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/&quot;&gt;My post on r/unixporn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html&quot;&gt;Korben article (in french)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18509828&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mikemaccana/status/1065615451940667396&quot;&gt;This tweet that made me smile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boingboing.net/2018/11/23/simulacrum-sf.html&quot;&gt;BoingBoing article&lt;/a&gt; - Apparently i&#39;m a &quot;French hacker&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/ideas/four-short-links-23-november-2018&quot;&gt;OReilly 4 short links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hackaday.com/2018/11/23/look-like-a-movie-hacker/&quot;&gt;Hackaday&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/&quot;&gt;Developpez.com (another french link)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.github.com/2018-12-21-release-radar-november-2018/&quot;&gt;GitHub Blog&#39;s Release Radar November 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opensource.com/article/19/1/productivity-tool-edex-ui&quot;&gt;opensource.com Productive Tools for 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/radar/four-short-links-7-july-2020/&quot;&gt;O&#39;Reilly 4 short links (again)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/&quot;&gt;LinuxLinks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gbzqCAjm--g&quot;&gt;Linux For Everyone (Youtube)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Useful commands for the nerds&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#39;d like to get stable software instead, refer to &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;these&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;h4&gt;Starting from source:&lt;/h4&gt; 
&lt;p&gt;on *nix systems (You&#39;ll need the Xcode command line tools on macOS):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-linux&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;on Windows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;start cmd or powershell &lt;strong&gt;as administrator&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-windows&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Building&lt;/h4&gt; 
&lt;p&gt;Note: Due to native modules, you can only build targets for the host OS you are using.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (NOT &lt;code&gt;install-linux&lt;/code&gt; or &lt;code&gt;install-windows&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run build-linux&lt;/code&gt; or &lt;code&gt;build-windows&lt;/code&gt; or &lt;code&gt;build-darwin&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The script will minify the source code, recompile native dependencies and create distributable assets in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h4&gt;Getting the bleeding edge&lt;/h4&gt; 
&lt;p&gt;If you&#39;re interested in running the latest in-development version but don&#39;t want to compile source code yourself, you can can get pre-built nightly binaries on &lt;a href=&quot;https://github.com/GitSquared/edex-ui/actions&quot;&gt;GitHub Actions&lt;/a&gt;: click the latest commits, and download the artifacts bundle for your OS.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;eDEX-UI&#39;s source code was primarily written by me, &lt;a href=&quot;https://github.com/GitSquared&quot;&gt;Squared&lt;/a&gt;. If you want to get in touch with me or find other projects I&#39;m involved in, check out &lt;a href=&quot;https://gaby.dev&quot;&gt;my website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/PixelyIon&quot;&gt;PixelyIon&lt;/a&gt; helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://soundcloud.com/iamicewolf&quot;&gt;IceWolf&lt;/a&gt; composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Of course, eDEX would never have existed if I hadn&#39;t stumbled upon the amazing work of &lt;a href=&quot;https://github.com/seenaburns&quot;&gt;Seena&lt;/a&gt; on &lt;a href=&quot;https://reddit.com/r/unixporn&quot;&gt;r/unixporn&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project uses a bunch of open-source libraries, frameworks and tools, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/network/dependencies&quot;&gt;the full dependency graph&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I want to namely thank the developers behind &lt;a href=&quot;https://github.com/xtermjs/xterm.js&quot;&gt;xterm.js&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation&quot;&gt;systeminformation&lt;/a&gt; and &lt;a href=&quot;https://github.com/joewalnes/smoothie&quot;&gt;SmoothieCharts&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/arscan&quot;&gt;Rob &quot;Arscan&quot; Scanlon&lt;/a&gt; for making the fantastic &lt;a href=&quot;https://github.com/arscan/encom-globe&quot;&gt;ENCOM Globe&lt;/a&gt;, also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/blob/master/LICENSE&quot;&gt;GPLv3.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>harryheman/Modern-HTML-Starter-Template</title>
      <link>https://github.com/harryheman/Modern-HTML-Starter-Template</link>
      <description>&lt;p&gt;Modern HTML Starter Template&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modern HTML Starter Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-blue.svg&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://htmltemplate.site/assets/logo.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Homepage&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://htmltemplate.site/&quot;&gt;https://htmltemplate.site/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;VSCode Extension&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=igor-agapov.htmltemplate&quot;&gt;https://marketplace.visualstudio.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;CLI&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/create-modern-template&quot;&gt;https://www.npmjs.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Includes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;All Meta &amp;amp; Link Tags&lt;/li&gt; 
 &lt;li&gt;HTML5 Tags Example&lt;/li&gt; 
 &lt;li&gt;CSS3 Props Example&lt;/li&gt; 
 &lt;li&gt;CSS Modules Example&lt;/li&gt; 
 &lt;li&gt;JavaScript Modules Example&lt;/li&gt; 
 &lt;li&gt;manifest.json&lt;/li&gt; 
 &lt;li&gt;Sevice Worker Example&lt;/li&gt; 
 &lt;li&gt;robots.txt&lt;/li&gt; 
 &lt;li&gt;sitemap.xml&lt;/li&gt; 
 &lt;li&gt;browserconfig.xml&lt;/li&gt; 
 &lt;li&gt;.gitignore&lt;/li&gt; 
 &lt;li&gt;Local Express.js Server Example&lt;/li&gt; 
 &lt;li&gt;Error 404 Page Example&lt;/li&gt; 
 &lt;li&gt;And More&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/harryheman/Modern-HTML-Starter-Template.git
cd Modern-HTML-Starter-Template
npm i / yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Development Server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run dev / yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm start / yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Lighthouse&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://htmltemplate.site/assets/lighthouse.png&quot; alt=&quot;lighthouse&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/harryheman&quot;&gt;Igor Agapov&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is open source and available under the &lt;a href=&quot;https://raw.githubusercontent.com/harryheman/Modern-HTML-Starter-Template/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlyByWire A32NX&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;h3&gt;A32NX Installer&lt;/h3&gt; 
&lt;p&gt;Download the new A32NX installer where you can select either the Stable or Developer build, and download and install the mod directly into your community folder, &lt;a href=&quot;https://github.com/Externoak/A32NX-installer/releases/latest/download/A32NX_Downloader.zip&quot;&gt;download here&lt;/a&gt; (&lt;a href=&quot;https://github.com/Externoak/A32NX-installer/&quot;&gt;source&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Traditional Download Methods&lt;/h3&gt; 
&lt;h4&gt;Latest Stable Release&lt;/h4&gt; 
&lt;p&gt;This is the recommended stable release, as it has been thoroughly tested.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest/download/flybywiresim-a32nx.zip&quot;&gt;Download the stable release here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see the changelog on the releases page: &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases&quot;&gt;View Here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build&lt;/h4&gt; 
&lt;p&gt;This has the latest features, but is much more unstable, use at your own risk.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/download/vmaster/A32NX-master.zip&quot;&gt;Download developer build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/tag/vmaster&quot;&gt;View info about the latest build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Please follow ALL steps in this README if you encounter any issues with installation before seeking support.&lt;/h3&gt; 
&lt;p&gt;Open the zip that you downloaded from one of the links above, and drag the A32NX folder inside the zip into your Community folder.&lt;/p&gt; 
&lt;p&gt;See below for the location of your Community folder:&lt;/p&gt; 
&lt;p&gt;For the Microsoft Store edition AND/OR Gamepass edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\Packages\Microsoft.FlightSimulator_&amp;lt;RANDOMLETTERS&amp;gt;\LocalCache\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Steam edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Roaming\Microsoft Flight Simulator\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Boxed edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\MSFSPackages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above methods do not work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can find your community folder by going into FS2020 general options and enabling developer mode. You will see a menu appear on top. Go to tools and virtual file system. Click on watch bases and your community folder will be listed in one of the folders.&lt;/li&gt; 
 &lt;li&gt;Please make sure you&#39;re copying the &quot;A32NX&quot; folder into your community package folder, NOT the &quot;flybywiresim-a32nx&quot; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues (Please note that most issues are being worked on and some of them may even be fixed in the master branch)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captain&#39;s PFD may occasionally turn off during flight&lt;/li&gt; 
 &lt;li&gt;No Smoking switch doesn&#39;t use a full range of motion.&lt;/li&gt; 
 &lt;li&gt;F/CTL page does not have working speedbrake integration&lt;/li&gt; 
 &lt;li&gt;BLEED page is not fully functional&lt;/li&gt; 
 &lt;li&gt;Automatic ECAM page switching has minor bugs&lt;/li&gt; 
 &lt;li&gt;APU/Engine fire covers cannot be retracted once opened&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The contents of this repository are DUAL LICENSED.&lt;/p&gt; 
&lt;p&gt;Textual-form source code in this repository is licensed under the GNU General Public License version 3. Artistic assets (including but not limited to images, sound banks, 3D models, and textures) are licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Any other works found to be not explicitly covered by the above definitions are all rights reserved to avoid ambiguities at the moment, but we are very permissive about their use if you contact us.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I download the aircraft in the current state?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Where is the plane in-sim?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The mod is added on top of the default A320neo from Asobo. If you want to uninstall it and revert to the original aircraft, just delete the A32NX folder in your community folder. &lt;strong&gt;Q: What are the liveries available?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: This project modifies the default A320neo from Asobo, therefore all liveries should be compatible.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When will it be released?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The project is an ongoing rolling release. See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When is the next update?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We don&#39;t know, since it depends on many factors. We&#39;ll however announce it each time there&#39;s an update!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I join the team?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Head over to &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is it payware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do we report bugs?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Report bugs to us in the Discord server, under the #help channel, or by creating a GitHub issue. Just make sure to search for existing issues first before creating a new one.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ben-rogerson/twin.macro</title>
      <link>https://github.com/ben-rogerson/twin.macro</link>
      <description>&lt;p&gt;🦹‍♂️ Twin blends the magic of Tailwind with the flexibility of css-in-js (emotion, styled-components and goober) at build time.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;Use Twin’s &lt;code&gt;tw&lt;/code&gt; prop to add Tailwind classes onto jsx elements:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;twin.macro&#39;

const Input = () =&amp;gt; &amp;lt;input tw=&quot;border hover:border-black&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Nest Twin’s &lt;code&gt;tw&lt;/code&gt; import within a css prop to add conditional styles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw from &#39;twin.macro&#39;

const Input = ({ hasHover }) =&amp;gt; (
  &amp;lt;input css={[tw`border`, hasHover &amp;amp;&amp;amp; tw`hover:border-black`]} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or mix sass styles with the css import:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw, { css } from &#39;twin.macro&#39;

const hoverStyles = css`
  &amp;amp;:hover {
    border-color: black;
    ${tw`text-black`}
  }
`
const Input = ({ hasHover }) =&amp;gt; (
  &amp;lt;input css={[tw`border`, hasHover &amp;amp;&amp;amp; hoverStyles]} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Styled Components&lt;/h3&gt; 
&lt;p&gt;You can also use the tw import to create and style new components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw from &#39;twin.macro&#39;

const Input = tw.input`border hover:border-black`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And clone and style existing components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const PurpleInput = tw(Input)`border-purple-500`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Switch to the styled import to add conditional styling:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw, { styled } from &#39;twin.macro&#39;

const Input = styled.input(({ hasHover }) =&amp;gt; [
  `color: purple;`,
  tw`border rounded`,
  hasHover &amp;amp;&amp;amp; tw`hover:border-black`,
])
const Component = () =&amp;gt; &amp;lt;Input hasHover /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use backticks to mix with sass styles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw, { styled } from &#39;twin.macro&#39;

const Input = styled.input`
  color: purple;
  ${tw`border rounded`}
  ${({ hasHover }) =&amp;gt; hasHover &amp;amp;&amp;amp; tw`hover:border-black`}
`
const Component = () =&amp;gt; &amp;lt;Input hasHover /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;When babel runs over your code, Twin’s &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;styled&lt;/code&gt; imports get swapped with the real imports from libraries like &lt;a href=&quot;https://styled-components.com/&quot;&gt;💅&amp;nbsp;styled‑components&lt;/a&gt; and &lt;a href=&quot;https://emotion.sh/docs/introduction&quot;&gt;👩‍🎤&amp;nbsp;emotion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Twin offers import presets for both libraries or you can fully customise the imports.&lt;/p&gt; 
&lt;p&gt;When you use &lt;code&gt;tw&lt;/code&gt;, Twin converts your classes into css objects, ready for passing to your chosen css-in-js library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import tw from &#39;twin.macro&#39;

tw`text-sm md:text-lg`

// ↓ ↓ ↓ ↓ ↓ ↓

{
  fontSize: &#39;0.875rem&#39;,
  &#39;@media (min-width: 768px)&#39;: {
    fontSize: &#39;1.125rem&#39;,
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;🎨 Style with all classes and variants available in &lt;a href=&quot;https://github.com/tailwindcss/tailwindcss/releases&quot;&gt;Tailwind v2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🐹 Adds no size to your build&lt;/strong&gt; - Twin converts classes you’ve used into css objects using Babel and then compiles away, leaving no runtime code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🛎 Helpful suggestions for mistypings&lt;/strong&gt; - Twin chimes in with class and variant values from your Tailwind config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;✕ ml-7 was not found

Try one of these classes:
ml-0 [0] / ml-1 [0.25rem] / ml-2 [0.5rem] / ml-3 [0.75rem] / ml-4 [1rem] / ml-5 [1.25rem] / ml-6 [1.5rem]
ml-8 [2rem] / ml-10 [2.5rem] / ml-12 [3rem] / ml-16 [4rem] / ml-20 [5rem] / ml-24 [6rem] / ml-32 [8rem]
ml-40 [10rem] / ml-48 [12rem] / ml-56 [14rem] / ml-64 [16rem] / ml-auto [auto] / ml-px [1px]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;🖌️ Use the theme import to add values from your tailwind config&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { theme, css } from &#39;twin.macro&#39;

const Input = () =&amp;gt; &amp;lt;input css={css({ color: theme`colors.purple.500` })} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more examples &lt;a href=&quot;https://github.com/ben-rogerson/twin.macro/pull/106&quot;&gt;using the theme import →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;💥 Add important to any class with a trailing bang!&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;tw`hidden!`
// ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓
{ &quot;display&quot;: &quot;none !important&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;🚥 Over 40 variants to prefix on your classes&lt;/strong&gt; - Unlike Tailwind, the prefixes are always available to add to your classes&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prefix with &lt;code&gt;before:&lt;/code&gt; and &lt;code&gt;after:&lt;/code&gt; to style pseudo-elements&lt;/li&gt; 
 &lt;li&gt;Prefix with &lt;code&gt;hocus:&lt;/code&gt; to style hover + focus at the same time&lt;/li&gt; 
 &lt;li&gt;Style with extra group states like &lt;code&gt;group-hocus:&lt;/code&gt; and &lt;code&gt;group-active:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Style form field states with &lt;code&gt;checked:&lt;/code&gt;, &lt;code&gt;invalid:&lt;/code&gt; and &lt;code&gt;required:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Stack up variants whenever you need them &lt;code&gt;sm:hover:first:bg-black&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/ben-rogerson/twin.macro/blob/master/src/config/variantConfig.js&quot;&gt;full list of variants →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🍱 Apply variants to multiple classes at once with variant groups&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;twin.macro&#39;

const interactionStyles = () =&amp;gt; (
  &amp;lt;div tw=&quot;hover:(text-black underline) focus:(text-blue-500 underline)&quot; /&amp;gt;
)

const mediaStyles = () =&amp;gt; &amp;lt;div tw=&quot;sm:(w-4 mt-3) lg:(w-8 mt-6)&quot; /&amp;gt;

const pseudoElementStyles = () =&amp;gt; (
  &amp;lt;div tw=&quot;before:(content block w-10 h-10 bg-black)&quot; /&amp;gt;
)

const stackedVariants = () =&amp;gt; &amp;lt;div tw=&quot;sm:hover:(bg-black text-white)&quot; /&amp;gt;

const variantsInGroups = () =&amp;gt; &amp;lt;div tw=&quot;sm:(bg-black hover:bg-white)&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Take a look at these examples to get started:&lt;/p&gt; 
&lt;h4&gt;React&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/react-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/react-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Preact&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/preact-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/preact-goober&quot;&gt;🥜 goober&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Create React App&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/cra-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/cra-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Gatsby&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/gatsby-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/gatsby-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Next.js&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/next-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/next-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Snowpack&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/snowpack-react-styled-components&quot;&gt;💅 styled-components&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/snowpack-react-emotion-typescript&quot;&gt;💅 styled-components (TypeScript)&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/snowpack-react-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Storybook&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/storybook-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Monorepo component library&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/component-library-styled-components&quot;&gt;💅 styled-components (TypeScript)&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Laravel&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/laravel-styled-components-typescript&quot;&gt;💅 styled-components (TypeScript)&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Vue&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ben-rogerson/twin.examples/tree/master/vue-emotion&quot;&gt;👩‍🎤 emotion&lt;/a&gt; (Experimental)&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;You can use many Tailwind plugins with twin, like &lt;a href=&quot;https://tailwindui.com/components&quot;&gt;Tailwind UI&lt;/a&gt; and &lt;a href=&quot;https://github.com/tailwindcss/custom-forms&quot;&gt;Custom forms&lt;/a&gt; but there’s no compatibility with other plugins that use the &lt;code&gt;addVariant&lt;/code&gt; or &lt;code&gt;addBase&lt;/code&gt; functions - those features are coming soon.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twin-docs.netlify.app/plugin-support&quot;&gt;See list of supported plugins →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;Twin fully supports TypeScript projects and includes types for every import &lt;em&gt;except&lt;/em&gt; the &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;styled&lt;/code&gt; imports.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ben-rogerson/twin.macro/master/docs/typescript.md&quot;&gt;How to add the missing &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;styled&lt;/code&gt; types →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/Xj6x9z7&quot;&gt;Drop into our Discord server&lt;/a&gt; for announcements, help and styling chat.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lookup that elusive class on &lt;a href=&quot;https://nerdcave.com/tailwind-cheat-sheet&quot;&gt;Nerdcave’s Tailwind cheat sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Add more TypeScript features with &lt;a href=&quot;https://github.com/kingdaro/typescript-plugin-tw-template&quot;&gt;typescript-plugin-tw-template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mxstbr.com/thoughts/css-in-js&quot;&gt;Why I Write CSS in JavaScript&lt;/a&gt; by Max Stoiber&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special thanks&lt;/h2&gt; 
&lt;p&gt;This project stemmed from &lt;a href=&quot;https://github.com/bradlc/babel-plugin-tailwind-components&quot;&gt;babel-plugin-tailwind-components&lt;/a&gt; so a big shout out goes to &lt;a href=&quot;https://github.com/bradlc&quot;&gt;Brad Cornes&lt;/a&gt; for the amazing work he produced. Styling with tailwind.macro has been such a pleasure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;🛁 Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures&quot;&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid&quot;&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting&quot;&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.osnews.com/images/comics/wtfm.jpg&quot; alt=&quot;Humorous image of software quality estimation as a count of how many expletives you shout when reading code&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin&#39;s book &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It&#39;s a guide to producing &lt;a href=&quot;https://github.com/ryanmcdermott/3rs-of-software-architecture&quot;&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won&#39;t immediately make you a better software developer, and working with them for many years doesn&#39;t mean you won&#39;t make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don&#39;t beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It&#39;s important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href=&quot;https://github.com/danielstjules/buddy.js&quot;&gt;buddy.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/eslint/eslint/blob/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md&quot;&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Declare them as capitalized named constants.
const MILLISECONDS_IN_A_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_IN_A_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don&#39;t repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car) {
  car.carColor = &quot;Red&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car) {
  car.color = &quot;Red&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default arguments instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default arguments are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other &quot;falsy&quot; values such as &lt;code&gt;&#39;&#39;&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it&#39;s not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it&#39;s immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you&#39;ll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#39;s hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there&#39;s more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there&#39;s only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that&#39;s why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don&#39;t repeat yourself, otherwise you&#39;ll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#39;body&#39; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don&#39;t have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it&#39;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#39;Ryan McDermott&#39;;
console.log(newName); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it&#39;s important to handle them carefully when they&#39;re passed as parameters to a function. A JavaScript function can change an object&#39;s properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there&#39;s a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let&#39;s imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the &quot;Purchase&quot; button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an &quot;Add to Cart&quot; button on an item they don&#39;t actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn&#39;t be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn&#39;t a big issue in practice because there are &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let&#39;s think about an example: what if you wanted to extend JavaScript&#39;s native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn&#39;t a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, &quot;how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?&quot; The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, &quot;well that&#39;s great but why would I want to do that?&quot; The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case &quot;777&quot;:
        return this.getMaxAltitude() - this.getPassengerCount();
      case &quot;Air Force One&quot;:
        return this.getMaxAltitude();
      case &quot;Cessna&quot;:
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location(&quot;texas&quot;));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location(&quot;texas&quot;));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location(&quot;texas&quot;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can&#39;t use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux &quot;type-safety&quot; you get doesn&#39;t make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  if (
    (typeof val1 === &quot;number&quot; &amp;amp;&amp;amp; typeof val2 === &quot;number&quot;) ||
    (typeof val1 === &quot;string&quot; &amp;amp;&amp;amp; typeof val2 === &quot;string&quot;)
  ) {
    return val1 + val2;
  }

  throw new Error(&quot;Must be of type String or Number&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href=&quot;https://github.com/petkaantonov/bluebird/wiki/Optimization-killers&quot;&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There&#39;s no reason to keep it in your codebase. If it&#39;s not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. &quot;Why?&quot; you might ask. Well, here&#39;s an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don&#39;t have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object&#39;s properties, let&#39;s say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a &quot;getter&quot;, made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a &quot;setter&quot;, made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It&#39;s very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error(&quot;Instantiate Animal with `new`&quot;);
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error(&quot;Instantiate Mammal with `new`&quot;);
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error(&quot;Instantiate Human with `new`&quot;);
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;);
car.setColor(&quot;pink&quot;);
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;).setColor(&quot;pink&quot;).save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href=&quot;https://en.wikipedia.org/wiki/Design_Patterns&quot;&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, &quot;when should I use inheritance?&quot; It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an &quot;is-a&quot; relationship and not a &quot;has-a&quot; relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees &quot;have&quot; tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, &quot;There should never be more than one reason for a class to change&quot;. It&#39;s tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won&#39;t be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It&#39;s important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, &quot;software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification.&quot; What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === &quot;ajaxAdapter&quot;) {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === &quot;nodeAdapter&quot;) {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It&#39;s formally defined as &quot;If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.).&quot; That&#39;s an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let&#39;s take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the &quot;is-a&quot; relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn&#39;t have interfaces so this principle doesn&#39;t apply as strictly as others. However, it&#39;s important and relevant even with JavaScript&#39;s lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that &quot;Clients should not be forced to depend upon interfaces that they do not use.&quot; Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won&#39;t need all of the settings. Making them optional helps prevent having a &quot;fat interface&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  animationModule() {} // Most of the time, we won&#39;t need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you&#39;ve worked with AngularJS, you&#39;ve seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn&#39;t have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker([&quot;apples&quot;, &quot;bananas&quot;]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = [&quot;WS&quot;];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  [&quot;apples&quot;, &quot;bananas&quot;],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won&#39;t be sure that you didn&#39;t break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href=&quot;https://gotwarlost.github.io/istanbul/&quot;&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There&#39;s no excuse to not write tests. There are &lt;a href=&quot;https://jstherightway.org/#testing-tools&quot;&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles date boundaries&quot;, () =&amp;gt; {
    let date;

    date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);

    date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);

    date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles 30-day months&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);
  });

  it(&quot;handles leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);
  });

  it(&quot;handles non-leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren&#39;t clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request&quot;;
import { writeFile } from &quot;fs&quot;;

get(
  &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;,
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile(&quot;article.html&quot;, body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log(&quot;File written&quot;);
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

async function getCleanCodeArticle() {
  try {
    const body = await get(
      &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;
    );
    await writeFile(&quot;article.html&quot;, body);
    console.log(&quot;File written&quot;);
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it&#39;s letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don&#39;t ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn&#39;t give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn&#39;t much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don&#39;t ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn&#39;t ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href=&quot;https://standardjs.com/rules.html&quot;&gt;tons of tools&lt;/a&gt; to automate this. Use one! It&#39;s a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don&#39;t fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const Artists = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const ARTISTS = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There&#39;s no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/**
 * 2016-12-20: Removed monads, didn&#39;t understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png&quot; alt=&quot;am&quot;&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hanumanum/clean-code-javascript&quot;&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png&quot; alt=&quot;bd&quot;&gt; &lt;strong&gt;Bangla(বাংলা)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/InsomniacSabbir/clean-code-javascript/&quot;&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fesnt/clean-code-javascript&quot;&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alivebao/clean-code-js&quot;&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/beginor/clean-code-javascript&quot;&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AllJointTW/clean-code-javascript&quot;&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GavBaros/clean-code-javascript-fr&quot;&gt;GavBaros/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/marcbruederlin/clean-code-javascript&quot;&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png&quot; alt=&quot;id&quot;&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andirkh/clean-code-javascript/&quot;&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/frappacchio/clean-code-javascript/&quot;&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;ja&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/clean-code-javascript/&quot;&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/qkraudghgh/clean-code-javascript-ko&quot;&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png&quot; alt=&quot;pl&quot;&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greg-dev/clean-code-javascript-pl&quot;&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/BoryaMogila/clean-code-javascript-ru/&quot;&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/maksugr/clean-code-javascript&quot;&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tureey/clean-code-javascript&quot;&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andersontr15/clean-code-javascript-es&quot;&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation&quot;&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mindfr1k/clean-code-javascript-ua&quot;&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vi&quot;&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hienvd/clean-code-javascript/&quot;&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ccxt/ccxt</title>
      <link>https://github.com/ccxt/ccxt</link>
      <description>&lt;p&gt;A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CCXT – CryptoCurrency eXchange Trading Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/ccxt/ccxt&quot;&gt;&lt;img src=&quot;https://travis-ci.com/ccxt/ccxt.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/ccxt.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/ccxt.svg&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/ccxt.svg&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Exchange-Markets&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/exchanges-122-blue.svg&quot; alt=&quot;Supported Exchanges&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/backers/badge.svg&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ccxt_official.svg?style=social&amp;amp;label=CCXT&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A JavaScript / Python / PHP library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#install&quot;&gt;Install&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#usage&quot;&gt;Usage&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/tree/master/examples&quot;&gt;Examples&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#social&quot;&gt;Social&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;CCXT&lt;/strong&gt; library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.&lt;/p&gt; 
&lt;p&gt;It is intended to be used by &lt;strong&gt;coders, developers, technically-skilled traders, data-scientists and financial analysts&lt;/strong&gt; for building trading algorithms.&lt;/p&gt; 
&lt;p&gt;Current feature list:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;support for many cryptocurrency exchanges — more coming soon&lt;/li&gt; 
 &lt;li&gt;fully implemented public and private APIs&lt;/li&gt; 
 &lt;li&gt;optional normalized data for cross-exchange analytics and arbitrage&lt;/li&gt; 
 &lt;li&gt;an out of the box unified API that is extremely easy to integrate&lt;/li&gt; 
 &lt;li&gt;works in Node 7.6+, Python 3, PHP 5.4+, and web browsers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsored Promotion&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/93346896-22dfb080-f83d-11ea-957f-6b8ae008f62a.png&quot; alt=&quot;CCXT Pro – A JavaScript / Python / PHP cryptocurrency exchange trading WebSocket API for professionals&quot;&gt;&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;A JavaScript / Python / PHP cryptocurrency exchange trading WebSocket API for professionals&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://quadency.com?utm_source=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69334382-a0618100-0c6b-11ea-9ba9-40aa97440cfa.png&quot; alt=&quot;Quadency&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;&amp;nbsp; &lt;strong&gt;&lt;a href=&quot;https://quadency.com?utm_source=ccxt&quot;&gt;Quadency&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;—&amp;nbsp;trading automation terminal for leading exchanges with streaming APIs + Python IDE.&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png&quot; alt=&quot;TabTrader&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;&amp;nbsp; &lt;strong&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;TabTrader&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;—&amp;nbsp;trading on all exchanges in one app. Avaliable on &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.tabtrader.android&amp;amp;referrer=utm_source%3Dccxt&quot;&gt;Android&lt;/a&gt; and &lt;a href=&quot;https://itunes.apple.com/app/apple-store/id1095716562?mt=8&quot;&gt;iOS&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Certified Cryptocurrency Exchanges&lt;/h2&gt; 
&lt;p&gt;| logo | id | name | ver | doc | certified | pro | |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|-----------------------------------------------------------------------------|:---:|:----------------------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------| | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt; | binance | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;Binance&lt;/a&gt; | * | &lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex&quot;&gt;&lt;/a&gt; | bitfinex | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitfinex.com/v1/docs&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg&quot; alt=&quot;bittrex&quot;&gt;&lt;/a&gt; | bittrex | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;Bittrex&lt;/a&gt; | 3 | &lt;a href=&quot;https://bittrex.github.io/api/v3&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt; | bitvavo | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg&quot; alt=&quot;bytetrade&quot;&gt;&lt;/a&gt; | bytetrade | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;ByteTrade&lt;/a&gt; | * | &lt;a href=&quot;https://docs.byte-trade.com/#description&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt; | currencycom | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt; | 1 | &lt;a href=&quot;https://currency.com/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/82067900-faeb0f80-96d9-11ea-9f22-0071cfcb9871.jpg&quot; alt=&quot;eterbase&quot;&gt;&lt;/a&gt; | eterbase | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;Eterbase&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.eterbase.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt; | ftx | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;FTX&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt; | idex | &lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.idex.io/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.kraken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg&quot; alt=&quot;kraken&quot;&gt;&lt;/a&gt; | kraken | &lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt; | 0 | &lt;a href=&quot;https://www.kraken.com/features/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://upbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg&quot; alt=&quot;upbit&quot;&gt;&lt;/a&gt; | upbit | &lt;a href=&quot;https://upbit.com&quot;&gt;Upbit&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt; | wavesexchange | &lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://docs.waves.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://xena.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg&quot; alt=&quot;xena&quot;&gt;&lt;/a&gt; | xena | &lt;a href=&quot;https://xena.exchange&quot;&gt;Xena Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://support.xena.exchange/support/solutions/44000808700&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | |&lt;/p&gt; 
&lt;h2&gt;Supported Cryptocurrency Exchange Markets&lt;/h2&gt; 
&lt;p&gt;The CCXT library currently supports the following 122 cryptocurrency exchange markets and trading APIs:&lt;/p&gt; 
&lt;p&gt;| logo | id | name | ver | doc | certified | pro | |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|-----------------------------------------------------------------------------------------|:---:|:-------------------------------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------| | &lt;a href=&quot;https://acx.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg&quot; alt=&quot;acx&quot;&gt;&lt;/a&gt; | acx | &lt;a href=&quot;https://acx.io&quot;&gt;ACX&lt;/a&gt; | 2 | &lt;a href=&quot;https://acx.io/documents/api_v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77670271-056d1080-6f97-11ea-9ac2-4268e9ed0c1f.jpg&quot; alt=&quot;aofex&quot;&gt;&lt;/a&gt; | aofex | &lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;AOFEX&lt;/a&gt; | * | &lt;a href=&quot;https://aofex.zendesk.com/hc/en-us/sections/360005576574-API&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bcex.top/register?invite_code=758978&amp;amp;lang=en&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77231516-851c6900-6bac-11ea-8fd6-ee5c23eddbd4.jpg&quot; alt=&quot;bcex&quot;&gt;&lt;/a&gt; | bcex | &lt;a href=&quot;https://www.bcex.top/register?invite_code=758978&amp;amp;lang=en&quot;&gt;BCEX&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/BCEX-TECHNOLOGY-LIMITED/API_Docs/wiki/Interface&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bequant.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg&quot; alt=&quot;bequant&quot;&gt;&lt;/a&gt; | bequant | &lt;a href=&quot;https://bequant.io&quot;&gt;Bequant&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.bequant.io/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77257418-3262b000-6c85-11ea-8fb8-20bdf20b3592.jpg&quot; alt=&quot;bibox&quot;&gt;&lt;/a&gt; | bibox | &lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;Bibox&lt;/a&gt; | 1 | &lt;a href=&quot;https://biboxcom.github.io/en/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg&quot; alt=&quot;bigone&quot;&gt;&lt;/a&gt; | bigone | &lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;BigONE&lt;/a&gt; | 3 | &lt;a href=&quot;https://open.big.one/docs/api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt; | binance | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;Binance&lt;/a&gt; | * | &lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg&quot; alt=&quot;binanceus&quot;&gt;&lt;/a&gt; | binanceus | &lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;Binance US&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/binance-us/binance-official-api-docs&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg&quot; alt=&quot;bit2c&quot;&gt;&lt;/a&gt; | bit2c | &lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;Bit2C&lt;/a&gt; | * | &lt;a href=&quot;https://www.bit2c.co.il/home/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitbank.cc/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg&quot; alt=&quot;bitbank&quot;&gt;&lt;/a&gt; | bitbank | &lt;a href=&quot;https://bitbank.cc/&quot;&gt;bitbank&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitbank.cc/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg&quot; alt=&quot;bitbay&quot;&gt;&lt;/a&gt; | bitbay | &lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;BitBay&lt;/a&gt; | * | &lt;a href=&quot;https://bitbay.net/public-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg&quot; alt=&quot;bitcoincom&quot;&gt;&lt;/a&gt; | bitcoincom | &lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;bitcoin.com&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.exchange.bitcoin.com/api/2/explore&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex&quot;&gt;&lt;/a&gt; | bitfinex | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitfinex.com/v1/docs&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex2&quot;&gt;&lt;/a&gt; | bitfinex2 | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitfinex.com/v2/docs/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitflyer.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg&quot; alt=&quot;bitflyer&quot;&gt;&lt;/a&gt; | bitflyer | &lt;a href=&quot;https://bitflyer.com&quot;&gt;bitFlyer&lt;/a&gt; | 1 | &lt;a href=&quot;https://lightning.bitflyer.com/docs?lang=en&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295553-1160ec00-c50e-11ea-8ea0-df79276a9646.jpg&quot; alt=&quot;bitforex&quot;&gt;&lt;/a&gt; | bitforex | &lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;Bitforex&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/githubdev2020/API_Doc_en/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/88317935-a8a21c80-cd22-11ea-8e2b-4b9fac5975eb.jpg&quot; alt=&quot;bitget&quot;&gt;&lt;/a&gt; | bitget | &lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;Bitget&lt;/a&gt; | 3 | &lt;a href=&quot;https://bitgetlimited.github.io/apidoc/en/swap&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bithumb.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg&quot; alt=&quot;bithumb&quot;&gt;&lt;/a&gt; | bithumb | &lt;a href=&quot;https://www.bithumb.com&quot;&gt;Bithumb&lt;/a&gt; | * | &lt;a href=&quot;https://apidocs.bithumb.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitkk.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;bitkk&quot;&gt;&lt;/a&gt; | bitkk | &lt;a href=&quot;https://www.bitkk.com&quot;&gt;bitkk&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitkk.com/i/developer&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/61835713-a2662f80-ae85-11e9-9d00-6442919701fd.jpg&quot; alt=&quot;bitmart&quot;&gt;&lt;/a&gt; | bitmart | &lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;BitMart&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/bitmartexchange/bitmart-official-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitmax.io/#/register?inviteCode=EL6BXBQM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66820319-19710880-ef49-11e9-8fbe-16be62a11992.jpg&quot; alt=&quot;bitmax&quot;&gt;&lt;/a&gt; | bitmax | &lt;a href=&quot;https://bitmax.io/#/register?inviteCode=EL6BXBQM&quot;&gt;BitMax&lt;/a&gt; | 1 | &lt;a href=&quot;https://bitmax-exchange.github.io/bitmax-pro-api/#bitmax-pro-api-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg&quot; alt=&quot;bitmex&quot;&gt;&lt;/a&gt; | bitmex | &lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;BitMEX&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitmex.com/app/apiOverview&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87591171-9a377d80-c6f0-11ea-94ac-97a126eac3bc.jpg&quot; alt=&quot;bitpanda&quot;&gt;&lt;/a&gt; | bitpanda | &lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;Bitpanda Pro&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.bitpanda.com/exchange/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295554-11f98280-c50e-11ea-80d6-15b3bafa8cbf.jpg&quot; alt=&quot;bitso&quot;&gt;&lt;/a&gt; | bitso | &lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;Bitso&lt;/a&gt; | 3 | &lt;a href=&quot;https://bitso.com/api_info&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp&quot;&gt;&lt;/a&gt; | bitstamp | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp1&quot;&gt;&lt;/a&gt; | bitstamp1 | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg&quot; alt=&quot;bittrex&quot;&gt;&lt;/a&gt; | bittrex | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;Bittrex&lt;/a&gt; | 3 | &lt;a href=&quot;https://bittrex.github.io/api/v3&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt; | bitvavo | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443304-fec5e000-c5fd-11ea-98f8-ba8e67f7eaff.jpg&quot; alt=&quot;bitz&quot;&gt;&lt;/a&gt; | bitz | &lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;Bit-Z&lt;/a&gt; | 2 | &lt;a href=&quot;https://apidoc.bitz.com/en/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bl3p.eu&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg&quot; alt=&quot;bl3p&quot;&gt;&lt;/a&gt; | bl3p | &lt;a href=&quot;https://bl3p.eu&quot;&gt;BL3P&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/BitonicNL/bl3p-api/tree/master/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bleutrade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30303000-b602dbe6-976d-11e7-956d-36c5049c01e7.jpg&quot; alt=&quot;bleutrade&quot;&gt;&lt;/a&gt; | bleutrade | &lt;a href=&quot;https://bleutrade.com&quot;&gt;Bleutrade&lt;/a&gt; | * | &lt;a href=&quot;https://app.swaggerhub.com/apis-docs/bleu/white-label/3.0.0&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://braziliex.com/?ref=5FE61AB6F6D67DA885BC98BA27223465&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg&quot; alt=&quot;braziliex&quot;&gt;&lt;/a&gt; | braziliex | &lt;a href=&quot;https://braziliex.com/?ref=5FE61AB6F6D67DA885BC98BA27223465&quot;&gt;Braziliex&lt;/a&gt; | * | &lt;a href=&quot;https://braziliex.com/exchange/api.php&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg&quot; alt=&quot;btcalpha&quot;&gt;&lt;/a&gt; | btcalpha | &lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;BTC-Alpha&lt;/a&gt; | 1 | &lt;a href=&quot;https://btc-alpha.github.io/api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87327317-98c55400-c53c-11ea-9a11-81f7d951cc74.jpg&quot; alt=&quot;btcbox&quot;&gt;&lt;/a&gt; | btcbox | &lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;BtcBox&lt;/a&gt; | 1 | &lt;a href=&quot;https://blog.btcbox.jp/en/archives/8762&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btcmarkets.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/89731817-b3fb8480-da52-11ea-817f-783b08aaf32b.jpg&quot; alt=&quot;btcmarkets&quot;&gt;&lt;/a&gt; | btcmarkets | &lt;a href=&quot;https://btcmarkets.net&quot;&gt;BTC Markets&lt;/a&gt; | 3 | &lt;a href=&quot;https://api.btcmarkets.net/doc/v3&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg&quot; alt=&quot;btctradeua&quot;&gt;&lt;/a&gt; | btctradeua | &lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;BTC Trade UA&lt;/a&gt; | * | &lt;a href=&quot;https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.btcturk.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153926-efbef500-c2c0-11ea-9842-05b63612c4b9.jpg&quot; alt=&quot;btcturk&quot;&gt;&lt;/a&gt; | btcturk | &lt;a href=&quot;https://www.btcturk.com&quot;&gt;BTCTurk&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/BTCTrader/broker-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.buda.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg&quot; alt=&quot;buda&quot;&gt;&lt;/a&gt; | buda | &lt;a href=&quot;https://www.buda.com&quot;&gt;Buda&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.buda.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg&quot; alt=&quot;bw&quot;&gt;&lt;/a&gt; | bw | &lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;BW&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/bw-exchange/api_docs_en/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76547799-daff5b80-649e-11ea-87fb-3be9bac08954.jpg&quot; alt=&quot;bybit&quot;&gt;&lt;/a&gt; | bybit | &lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;Bybit&lt;/a&gt; | 2 | &lt;a href=&quot;https://bybit-exchange.github.io/docs/inverse/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg&quot; alt=&quot;bytetrade&quot;&gt;&lt;/a&gt; | bytetrade | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;ByteTrade&lt;/a&gt; | * | &lt;a href=&quot;https://docs.byte-trade.com/#description&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg&quot; alt=&quot;cex&quot;&gt;&lt;/a&gt; | cex | &lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;CEX.IO&lt;/a&gt; | * | &lt;a href=&quot;https://cex.io/cex-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://chilebit.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg&quot; alt=&quot;chilebit&quot;&gt;&lt;/a&gt; | chilebit | &lt;a href=&quot;https://chilebit.net&quot;&gt;ChileBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg&quot; alt=&quot;coinbase&quot;&gt;&lt;/a&gt; | coinbase | &lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;Coinbase&lt;/a&gt; | 2 | &lt;a href=&quot;https://developers.coinbase.com/api/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://prime.coinbase.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg&quot; alt=&quot;coinbaseprime&quot;&gt;&lt;/a&gt; | coinbaseprime | &lt;a href=&quot;https://prime.coinbase.com&quot;&gt;Coinbase Prime&lt;/a&gt; | * | &lt;a href=&quot;https://docs.prime.coinbase.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg&quot; alt=&quot;coinbasepro&quot;&gt;&lt;/a&gt; | coinbasepro | &lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;Coinbase Pro&lt;/a&gt; | * | &lt;a href=&quot;https://docs.pro.coinbase.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://coincheck.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg&quot; alt=&quot;coincheck&quot;&gt;&lt;/a&gt; | coincheck | &lt;a href=&quot;https://coincheck.com&quot;&gt;coincheck&lt;/a&gt; | * | &lt;a href=&quot;https://coincheck.com/documents/exchange/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg&quot; alt=&quot;coinegg&quot;&gt;&lt;/a&gt; | coinegg | &lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;CoinEgg&lt;/a&gt; | * | &lt;a href=&quot;https://www.coinegg.com/explain.api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg&quot; alt=&quot;coinex&quot;&gt;&lt;/a&gt; | coinex | &lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;CoinEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/coinexcom/coinex_exchange_api/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg&quot; alt=&quot;coinfalcon&quot;&gt;&lt;/a&gt; | coinfalcon | &lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;CoinFalcon&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.coinfalcon.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153925-ef265e80-c2c0-11ea-91b5-020c804b90e0.jpg&quot; alt=&quot;coinfloor&quot;&gt;&lt;/a&gt; | coinfloor | &lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;coinfloor&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/coinfloor/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coingi.com/?r=XTPPMC&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg&quot; alt=&quot;coingi&quot;&gt;&lt;/a&gt; | coingi | &lt;a href=&quot;https://www.coingi.com/?r=XTPPMC&quot;&gt;Coingi&lt;/a&gt; | * | &lt;a href=&quot;https://coingi.docs.apiary.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinmarketcap.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182086-1cd4cd00-c2ec-11ea-9ec4-d0cf2a2abf62.jpg&quot; alt=&quot;coinmarketcap&quot;&gt;&lt;/a&gt; | coinmarketcap | &lt;a href=&quot;https://coinmarketcap.com&quot;&gt;CoinMarketCap&lt;/a&gt; | 1 | &lt;a href=&quot;https://coinmarketcap.com/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg&quot; alt=&quot;coinmate&quot;&gt;&lt;/a&gt; | coinmate | &lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;CoinMate&lt;/a&gt; | * | &lt;a href=&quot;https://coinmate.docs.apiary.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinone.co.kr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg&quot; alt=&quot;coinone&quot;&gt;&lt;/a&gt; | coinone | &lt;a href=&quot;https://coinone.co.kr&quot;&gt;CoinOne&lt;/a&gt; | 2 | &lt;a href=&quot;https://doc.coinone.co.kr&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg&quot; alt=&quot;coinspot&quot;&gt;&lt;/a&gt; | coinspot | &lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;CoinSpot&lt;/a&gt; | * | &lt;a href=&quot;https://www.coinspot.com.au/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg&quot; alt=&quot;crex24&quot;&gt;&lt;/a&gt; | crex24 | &lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;CREX24&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.crex24.com/trade-api/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt; | currencycom | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt; | 1 | &lt;a href=&quot;https://currency.com/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg&quot; alt=&quot;deribit&quot;&gt;&lt;/a&gt; | deribit | &lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;Deribit&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.deribit.com/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg/3798****5114&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg&quot; alt=&quot;digifinex&quot;&gt;&lt;/a&gt; | digifinex | &lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg/3798****5114&quot;&gt;DigiFinex&lt;/a&gt; | 3 | &lt;a href=&quot;https://docs.digifinex.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://dsxglobal.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76909626-cb2bb100-68bc-11ea-99e0-28ba54f04792.jpg&quot; alt=&quot;dsx&quot;&gt;&lt;/a&gt; | dsx | &lt;a href=&quot;https://dsxglobal.com&quot;&gt;DSX&lt;/a&gt; | 3 | &lt;a href=&quot;https://dsxglobal.com/developers/publicApi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/82067900-faeb0f80-96d9-11ea-9f22-0071cfcb9871.jpg&quot; alt=&quot;eterbase&quot;&gt;&lt;/a&gt; | eterbase | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;Eterbase&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.eterbase.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg&quot; alt=&quot;exmo&quot;&gt;&lt;/a&gt; | exmo | &lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;EXMO&lt;/a&gt; | 1.1 | &lt;a href=&quot;https://exmo.me/en/api_doc?ref=131685&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg&quot; alt=&quot;exx&quot;&gt;&lt;/a&gt; | exx | &lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;EXX&lt;/a&gt; | * | &lt;a href=&quot;https://www.exx.com/help/restApi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.fcoin.com/i/Z5P7V&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/42244210-c8c42e1e-7f1c-11e8-8710-a5fb63b165c4.jpg&quot; alt=&quot;fcoin&quot;&gt;&lt;/a&gt; | fcoin | &lt;a href=&quot;https://www.fcoin.com/i/Z5P7V&quot;&gt;FCoin&lt;/a&gt; | 2 | &lt;a href=&quot;https://developer.fcoin.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.fcoinjp.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/54219174-08b66b00-4500-11e9-862d-f522d0fe08c6.jpg&quot; alt=&quot;fcoinjp&quot;&gt;&lt;/a&gt; | fcoinjp | &lt;a href=&quot;https://www.fcoinjp.com&quot;&gt;FCoinJP&lt;/a&gt; | 2 | &lt;a href=&quot;https://developer.fcoin.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443317-01c0d080-c5fe-11ea-95c2-9ebe1a8fafd9.jpg&quot; alt=&quot;flowbtc&quot;&gt;&lt;/a&gt; | flowbtc | &lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;flowBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.flowbtc.com.br/api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://foxbit.com.br/exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443320-01c0d080-c5fe-11ea-92e2-4ef56d32b026.jpg&quot; alt=&quot;foxbit&quot;&gt;&lt;/a&gt; | foxbit | &lt;a href=&quot;https://foxbit.com.br/exchange&quot;&gt;FoxBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://foxbit.com.br/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt; | ftx | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;FTX&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.gate.io/signup/2436035&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg&quot; alt=&quot;gateio&quot;&gt;&lt;/a&gt; | gateio | &lt;a href=&quot;https://www.gate.io/signup/2436035&quot;&gt;Gate.io&lt;/a&gt; | 2 | &lt;a href=&quot;https://gate.io/api2&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://gemini.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg&quot; alt=&quot;gemini&quot;&gt;&lt;/a&gt; | gemini | &lt;a href=&quot;https://gemini.com/&quot;&gt;Gemini&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.gemini.com/rest-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.hbtc.com/register/O2S8NS&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/80134449-70663300-85a7-11ea-8942-e204cdeaab5d.jpg&quot; alt=&quot;hbtc&quot;&gt;&lt;/a&gt; | hbtc | &lt;a href=&quot;https://www.hbtc.com/register/O2S8NS&quot;&gt;HBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/bhexopen/BHEX-OpenApi/tree/master/doc&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg&quot; alt=&quot;hitbtc&quot;&gt;&lt;/a&gt; | hitbtc | &lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;HitBTC&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.hitbtc.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg&quot; alt=&quot;hollaex&quot;&gt;&lt;/a&gt; | hollaex | &lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;HollaEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://apidocs.hollaex.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.huobi.co.jp/register/?invite_code=znnq3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg&quot; alt=&quot;huobijp&quot;&gt;&lt;/a&gt; | huobijp | &lt;a href=&quot;https://www.huobi.co.jp/register/?invite_code=znnq3&quot;&gt;Huobi Japan&lt;/a&gt; | 1 | &lt;a href=&quot;https://api-doc.huobi.co.jp&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.huobi.com/en-us/topic/invited/?invite_code=rwrd3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg&quot; alt=&quot;huobipro&quot;&gt;&lt;/a&gt; | huobipro | &lt;a href=&quot;https://www.huobi.com/en-us/topic/invited/?invite_code=rwrd3&quot;&gt;Huobi Pro&lt;/a&gt; | 1 | &lt;a href=&quot;https://huobiapi.github.io/docs/spot/v1/cn/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.huobi.com.ru/invite?invite_code=esc74&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/52978816-e8552e00-33e3-11e9-98ed-845acfece834.jpg&quot; alt=&quot;huobiru&quot;&gt;&lt;/a&gt; | huobiru | &lt;a href=&quot;https://www.huobi.com.ru/invite?invite_code=esc74&quot;&gt;Huobi Russia&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/cloudapidoc/API_Docs_en&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://ice3x.com?ref=14341802&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460809-1dd06c00-c616-11ea-98ad-7d5e1cb7fcdd.jpg&quot; alt=&quot;ice3x&quot;&gt;&lt;/a&gt; | ice3x | &lt;a href=&quot;https://ice3x.com?ref=14341802&quot;&gt;ICE3X&lt;/a&gt; | 1 | &lt;a href=&quot;https://ice3x.co.za/ice-cubed-bitcoin-exchange-api-documentation-1-june-2017&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt; | idex | &lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.idex.io/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.independentreserve.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg&quot; alt=&quot;independentreserve&quot;&gt;&lt;/a&gt; | independentreserve | &lt;a href=&quot;https://www.independentreserve.com&quot;&gt;Independent Reserve&lt;/a&gt; | * | &lt;a href=&quot;https://www.independentreserve.com/API&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg&quot; alt=&quot;indodax&quot;&gt;&lt;/a&gt; | indodax | &lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;INDODAX&lt;/a&gt; | 2.0 | &lt;a href=&quot;https://github.com/btcid/indodax-official-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.itbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg&quot; alt=&quot;itbit&quot;&gt;&lt;/a&gt; | itbit | &lt;a href=&quot;https://www.itbit.com&quot;&gt;itBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.itbit.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.kraken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg&quot; alt=&quot;kraken&quot;&gt;&lt;/a&gt; | kraken | &lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt; | 0 | &lt;a href=&quot;https://www.kraken.com/features/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg&quot; alt=&quot;kucoin&quot;&gt;&lt;/a&gt; | kucoin | &lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;KuCoin&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.kucoin.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg&quot; alt=&quot;kuna&quot;&gt;&lt;/a&gt; | kuna | &lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;Kuna&lt;/a&gt; | 2 | &lt;a href=&quot;https://kuna.io/documents/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lakebtc.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg&quot; alt=&quot;lakebtc&quot;&gt;&lt;/a&gt; | lakebtc | &lt;a href=&quot;https://www.lakebtc.com&quot;&gt;LakeBTC&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.lakebtc.com/s/api_v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://latoken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg&quot; alt=&quot;latoken&quot;&gt;&lt;/a&gt; | latoken | &lt;a href=&quot;https://latoken.com&quot;&gt;Latoken&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.latoken.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg&quot; alt=&quot;lbank&quot;&gt;&lt;/a&gt; | lbank | &lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;LBank&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/LBank-exchange/lbank-official-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg&quot; alt=&quot;liquid&quot;&gt;&lt;/a&gt; | liquid | &lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;Liquid&lt;/a&gt; | 2 | &lt;a href=&quot;https://developers.liquid.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://livecoin.net/?from=Livecoin-CQ1hfx44&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27980768-f22fc424-638a-11e7-89c9-6010a54ff9be.jpg&quot; alt=&quot;livecoin&quot;&gt;&lt;/a&gt; | livecoin | &lt;a href=&quot;https://livecoin.net/?from=Livecoin-CQ1hfx44&quot;&gt;LiveCoin&lt;/a&gt; | * | &lt;a href=&quot;https://www.livecoin.net/api?lang=en&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg&quot; alt=&quot;luno&quot;&gt;&lt;/a&gt; | luno | &lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;luno&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.luno.com/en/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lykke.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg&quot; alt=&quot;lykke&quot;&gt;&lt;/a&gt; | lykke | &lt;a href=&quot;https://www.lykke.com&quot;&gt;Lykke&lt;/a&gt; | 1 | &lt;a href=&quot;https://hft-api.lykke.com/swagger/ui/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg&quot; alt=&quot;mercado&quot;&gt;&lt;/a&gt; | mercado | &lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;Mercado Bitcoin&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.mercadobitcoin.com.br/api-doc&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://mixcoins.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460810-1dd06c00-c616-11ea-9276-956f400d6ffa.jpg&quot; alt=&quot;mixcoins&quot;&gt;&lt;/a&gt; | mixcoins | &lt;a href=&quot;https://mixcoins.com&quot;&gt;MixCoins&lt;/a&gt; | 1 | &lt;a href=&quot;https://mixcoins.com/help/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg&quot; alt=&quot;novadax&quot;&gt;&lt;/a&gt; | novadax | &lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;NovaDAX&lt;/a&gt; | 1 | &lt;a href=&quot;https://doc.novadax.com/pt-BR/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg&quot; alt=&quot;oceanex&quot;&gt;&lt;/a&gt; | oceanex | &lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;OceanEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.oceanex.pro/doc/v1&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg&quot; alt=&quot;okcoin&quot;&gt;&lt;/a&gt; | okcoin | &lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;OKCoin&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.okcoin.com/docs/en/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg&quot; alt=&quot;okex&quot;&gt;&lt;/a&gt; | okex | &lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;OKEX&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.okex.com/docs/en/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg&quot; alt=&quot;paymium&quot;&gt;&lt;/a&gt; | paymium | &lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;Paymium&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/Paymium/api-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg&quot; alt=&quot;phemex&quot;&gt;&lt;/a&gt; | phemex | &lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;Phemex&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/phemex/phemex-api-docs&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg&quot; alt=&quot;poloniex&quot;&gt;&lt;/a&gt; | poloniex | &lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;Poloniex&lt;/a&gt; | * | &lt;a href=&quot;https://docs.poloniex.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg&quot; alt=&quot;probit&quot;&gt;&lt;/a&gt; | probit | &lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;ProBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs-en.probit.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/80491487-74a99c00-896b-11ea-821e-d307e832f13e.jpg&quot; alt=&quot;qtrade&quot;&gt;&lt;/a&gt; | qtrade | &lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;qTrade&lt;/a&gt; | 1 | &lt;a href=&quot;https://qtrade-exchange.github.io/qtrade-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.rightbtc.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182092-1f372700-c2ec-11ea-8f9e-01b4d3ff8941.jpg&quot; alt=&quot;rightbtc&quot;&gt;&lt;/a&gt; | rightbtc | &lt;a href=&quot;https://www.rightbtc.com&quot;&gt;RightBTC&lt;/a&gt; | * | &lt;a href=&quot;https://docs.rightbtc.com/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://exchange.ripio.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/94507548-a83d6a80-0218-11eb-9998-28b9cec54165.jpg&quot; alt=&quot;ripio&quot;&gt;&lt;/a&gt; | ripio | &lt;a href=&quot;https://exchange.ripio.com&quot;&gt;Ripio&lt;/a&gt; | 1 | &lt;a href=&quot;https://exchange.ripio.com/en/api/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.southxchange.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg&quot; alt=&quot;southxchange&quot;&gt;&lt;/a&gt; | southxchange | &lt;a href=&quot;https://www.southxchange.com&quot;&gt;SouthXchange&lt;/a&gt; | * | &lt;a href=&quot;https://www.southxchange.com/Home/Api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg&quot; alt=&quot;stex&quot;&gt;&lt;/a&gt; | stex | &lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;STEX&lt;/a&gt; | 3 | &lt;a href=&quot;https://help.stex.com/en/collections/1593608-api-v3-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://surbitcoin.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg&quot; alt=&quot;surbitcoin&quot;&gt;&lt;/a&gt; | surbitcoin | &lt;a href=&quot;https://surbitcoin.com&quot;&gt;SurBitcoin&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://therocktrading.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg&quot; alt=&quot;therock&quot;&gt;&lt;/a&gt; | therock | &lt;a href=&quot;https://therocktrading.com&quot;&gt;TheRockTrading&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.therocktrading.com/doc/v1/index.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460811-1e690280-c616-11ea-8652-69f187305add.jpg&quot; alt=&quot;tidebit&quot;&gt;&lt;/a&gt; | tidebit | &lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;TideBit&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.tidebit.com/documents/api/guide&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg&quot; alt=&quot;tidex&quot;&gt;&lt;/a&gt; | tidex | &lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;Tidex&lt;/a&gt; | 3 | &lt;a href=&quot;https://tidex.com/exchange/public-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg&quot; alt=&quot;timex&quot;&gt;&lt;/a&gt; | timex | &lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;TimeX&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.timex.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://upbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg&quot; alt=&quot;upbit&quot;&gt;&lt;/a&gt; | upbit | &lt;a href=&quot;https://upbit.com&quot;&gt;Upbit&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.vaultoro.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg&quot; alt=&quot;vaultoro&quot;&gt;&lt;/a&gt; | vaultoro | &lt;a href=&quot;https://www.vaultoro.com&quot;&gt;Vaultoro&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.vaultoro.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://vbtc.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg&quot; alt=&quot;vbtc&quot;&gt;&lt;/a&gt; | vbtc | &lt;a href=&quot;https://vbtc.exchange&quot;&gt;VBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt; | wavesexchange | &lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://docs.waves.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg&quot; alt=&quot;whitebit&quot;&gt;&lt;/a&gt; | whitebit | &lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;WhiteBit&lt;/a&gt; | 2 | &lt;a href=&quot;https://documenter.getpostman.com/view/7473075/Szzj8dgv?version=latest&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://xbtce.com/?agent=XX97BTCXXXG687021000B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg&quot; alt=&quot;xbtce&quot;&gt;&lt;/a&gt; | xbtce | &lt;a href=&quot;https://xbtce.com/?agent=XX97BTCXXXG687021000B&quot;&gt;xBTCe&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.xbtce.com/tradeapi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://xena.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg&quot; alt=&quot;xena&quot;&gt;&lt;/a&gt; | xena | &lt;a href=&quot;https://xena.exchange&quot;&gt;Xena Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://support.xena.exchange/support/solutions/44000808700&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://www.yobit.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg&quot; alt=&quot;yobit&quot;&gt;&lt;/a&gt; | yobit | &lt;a href=&quot;https://www.yobit.net&quot;&gt;YoBit&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.yobit.net/en/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://zaif.jp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg&quot; alt=&quot;zaif&quot;&gt;&lt;/a&gt; | zaif | &lt;a href=&quot;https://zaif.jp&quot;&gt;Zaif&lt;/a&gt; | 1 | &lt;a href=&quot;https://techbureau-api-document.readthedocs.io/ja/latest/index.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.zb.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;zb&quot;&gt;&lt;/a&gt; | zb | &lt;a href=&quot;https://www.zb.com&quot;&gt;ZB&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.zb.com/i/developer&quot;&gt;API&lt;/a&gt; | | |&lt;/p&gt; 
&lt;p&gt;The list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details. If you can&#39;t find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.&lt;/p&gt; 
&lt;p&gt;The library is under &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;, that means it&#39;s absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install the CCXT library is to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt; (JavaScript / Node v7.6+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt; (Python 3.5.3+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/js/&quot;&gt;&lt;code&gt;js/&lt;/code&gt;&lt;/a&gt; in JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/python/&quot;&gt;&lt;code&gt;python/&lt;/code&gt;&lt;/a&gt; in Python (generated from JS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/php/&quot;&gt;&lt;code&gt;php/&lt;/code&gt;&lt;/a&gt; in PHP (generated from JS)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also clone it into your project directory from &lt;a href=&quot;https://github.com/ccxt/ccxt&quot;&gt;ccxt GitHub repository&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/ccxt/ccxt.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (NPM)&lt;/h3&gt; 
&lt;p&gt;JavaScript version of CCXT works in both Node and web browsers. Requires ES6 and &lt;code&gt;async/await&lt;/code&gt; syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is &lt;a href=&quot;https://github.com/ccxt/ccxt/issues/225#issuecomment-331905178&quot;&gt;not excluded&lt;/a&gt; in your &lt;code&gt;babel-loader&lt;/code&gt; config.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;var ccxt = require (&#39;ccxt&#39;)

console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (for use with the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag):&lt;/h3&gt; 
&lt;p&gt;All-in-one browser bundle (dependencies included), served from a CDN of your choice:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;jsDelivr: https://cdn.jsdelivr.net/npm/ccxt@1.38.55/dist/ccxt.browser.js&lt;/li&gt; 
 &lt;li&gt;unpkg: https://unpkg.com/ccxt@1.38.55/dist/ccxt.browser.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/ccxt@1.38.55/dist/ccxt.browser.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Creates a global &lt;code&gt;ccxt&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt
print(ccxt.exchanges) # print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.5.3+&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt.async_support as ccxt # link against the asynchronous version of ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in PHP with &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/p&gt; 
&lt;p&gt;It requires common PHP modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cURL&lt;/li&gt; 
 &lt;li&gt;mbstring (using UTF-8 is highly recommended)&lt;/li&gt; 
 &lt;li&gt;PCRE&lt;/li&gt; 
 &lt;li&gt;iconv&lt;/li&gt; 
 &lt;li&gt;gmp (this is a built-in extension as of PHP 7.2+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &quot;ccxt.php&quot;;
var_dump (\ccxt\Exchange::$exchanges); // print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests — please see the &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; document for the details on that).&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;docker-compose&lt;/code&gt; (in the cloned CCXT repository):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose run --rm ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You don&#39;t need the Docker image if you&#39;re not going to develop CCXT. If you just want to use CCXT –&amp;nbsp;just install it as a regular package into your project.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Intro&lt;/h3&gt; 
&lt;p&gt;The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.&lt;/p&gt; 
&lt;p&gt;Public APIs include the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;market data&lt;/li&gt; 
 &lt;li&gt;instruments/trading pairs&lt;/li&gt; 
 &lt;li&gt;price feeds (exchange rates)&lt;/li&gt; 
 &lt;li&gt;order books&lt;/li&gt; 
 &lt;li&gt;trade history&lt;/li&gt; 
 &lt;li&gt;tickers&lt;/li&gt; 
 &lt;li&gt;OHLC(V) for charting&lt;/li&gt; 
 &lt;li&gt;other public endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to trade with private APIs you need to obtain API keys from an exchange&#39;s website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don&#39;t. You will have to sign up and create API keys on their websites.&lt;/p&gt; 
&lt;p&gt;Private APIs allow the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;manage personal account info&lt;/li&gt; 
 &lt;li&gt;query account balances&lt;/li&gt; 
 &lt;li&gt;trade by making market and limit orders&lt;/li&gt; 
 &lt;li&gt;deposit and withdraw fiat and crypto funds&lt;/li&gt; 
 &lt;li&gt;query personal orders&lt;/li&gt; 
 &lt;li&gt;get ledger history&lt;/li&gt; 
 &lt;li&gt;transfer funds between accounts&lt;/li&gt; 
 &lt;li&gt;use merchant services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library implements full public and private REST APIs for all exchanges. WebSocket and FIX implementations in JavaScript, PHP, Python are available in &lt;a href=&quot;https://ccxt.pro&quot;&gt;CCXT Pro&lt;/a&gt;, which is a professional addon to CCXT with support for WebSocket streams.&lt;/p&gt; 
&lt;p&gt;The CCXT library supports both camelcase notation (preferred in JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;// both of these notations work in JavaScript/Python/PHP
exchange.methodName ()  // camelcase pseudocode
exchange.method_name () // underscore pseudocode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;&#39;use strict&#39;;
const ccxt = require (&#39;ccxt&#39;);

(async function () {
    let kraken    = new ccxt.kraken ()
    let bitfinex  = new ccxt.bitfinex ({ verbose: true })
    let huobipro  = new ccxt.huobipro ()
    let okcoinusd = new ccxt.okcoinusd ({
        apiKey: &#39;YOUR_PUBLIC_API_KEY&#39;,
        secret: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
    })

    const exchangeId = &#39;binance&#39;
        , exchangeClass = ccxt[exchangeId]
        , exchange = new exchangeClass ({
            &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
            &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
            &#39;timeout&#39;: 30000,
            &#39;enableRateLimit&#39;: true,
        })

    console.log (kraken.id,    await kraken.loadMarkets ())
    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())
    console.log (huobipro.id,  await huobipro.loadMarkets ())

    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))
    console.log (bitfinex.id,  await bitfinex.fetchTicker (&#39;BTC/USD&#39;))
    console.log (huobipro.id,  await huobipro.fetchTrades (&#39;ETH/USDT&#39;))

    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())

    // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately
    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder (&#39;BTC/USD&#39;, 1))

    // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed
    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder (&#39;BTC/USD&#39;, 1, 2500.00))

    // pass/redefine custom exchange-specific order params: type, amount, price or whatever
    // use a custom order type
    bitfinex.createLimitSellOrder (&#39;BTC/USD&#39;, 1, 10, { &#39;type&#39;: &#39;trailing-stop&#39; })

}) ();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# coding=utf-8

import ccxt

hitbtc   = ccxt.hitbtc({&#39;verbose&#39;: True})
bitmex   = ccxt.bitmex()
huobipro = ccxt.huobipro()
exmo     = ccxt.exmo({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})
kraken = ccxt.kraken({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})

exchange_id = &#39;binance&#39;
exchange_class = getattr(ccxt, exchange_id)
exchange = exchange_class({
    &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
    &#39;timeout&#39;: 30000,
    &#39;enableRateLimit&#39;: True,
})

hitbtc_markets = hitbtc.load_markets()

print(hitbtc.id, hitbtc_markets)
print(bitmex.id, bitmex.load_markets())
print(huobipro.id, huobipro.load_markets())

print(hitbtc.fetch_order_book(hitbtc.symbols[0]))
print(bitmex.fetch_ticker(&#39;BTC/USD&#39;))
print(huobipro.fetch_trades(&#39;LTC/USDT&#39;))

print(exmo.fetch_balance())

# sell one ฿ for market price and receive $ right now
print(exmo.id, exmo.create_market_sell_order(&#39;BTC/USD&#39;, 1))

# limit buy BTC/EUR, you pay €2500 and receive ฿1  when the order is closed
print(exmo.id, exmo.create_limit_buy_order(&#39;BTC/EUR&#39;, 1, 2500.00))

# pass/redefine custom exchange-specific order params: type, amount, price, flags, etc...
kraken.create_market_buy_order(&#39;BTC/USD&#39;, 1, {&#39;trading_agreement&#39;: &#39;agree&#39;})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &#39;ccxt.php&#39;;

$poloniex = new \ccxt\poloniex ();
$bittrex  = new \ccxt\bittrex  (array (&#39;verbose&#39; =&amp;gt; true));
$quoinex  = new \ccxt\quoinex   ();
$zaif     = new \ccxt\zaif     (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));
$hitbtc   = new \ccxt\hitbtc   (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));

$exchange_id = &#39;binance&#39;;
$exchange_class = &quot;\\ccxt\\$exchange_id&quot;;
$exchange = new $exchange_class (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET&#39;,
    &#39;timeout&#39; =&amp;gt; 30000,
    &#39;enableRateLimit&#39; =&amp;gt; true,
));

$poloniex_markets = $poloniex-&amp;gt;load_markets ();

var_dump ($poloniex_markets);
var_dump ($bittrex-&amp;gt;load_markets ());
var_dump ($quoinex-&amp;gt;load_markets ());

var_dump ($poloniex-&amp;gt;fetch_order_book ($poloniex-&amp;gt;symbols[0]));
var_dump ($bittrex-&amp;gt;fetch_trades (&#39;BTC/USD&#39;));
var_dump ($quoinex-&amp;gt;fetch_ticker (&#39;ETH/EUR&#39;));
var_dump ($zaif-&amp;gt;fetch_ticker (&#39;BTC/JPY&#39;));

var_dump ($zaif-&amp;gt;fetch_balance ());

// sell 1 BTC/JPY for market price, you pay ¥ and receive ฿ immediately
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_market_sell_order (&#39;BTC/JPY&#39;, 1));

// buy BTC/JPY, you receive ฿1 for ¥285000 when the order closes
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_limit_buy_order (&#39;BTC/JPY&#39;, 1, 285000));

// set a custom user-defined id to your order
$hitbtc-&amp;gt;create_order (&#39;BTC/USD&#39;, &#39;limit&#39;, &#39;buy&#39;, 1, 3000, array (&#39;clientOrderId&#39; =&amp;gt; &#39;123&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; document before making changes that you would like adopted in the code. Also, read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Support Developer Team&lt;/h2&gt; 
&lt;p&gt;We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Supporters&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a supporter. Your avatar will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#supporter&quot;&gt;Become a supporter&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! [&lt;a href=&quot;https://opencollective.com/ccxt#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Crypto&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ETH 0x26a3CB49578F07000575405a57888681249c35Fd (ETH only)
BTC 33RmVRfhK2WZVQR1R83h2e9yXoqRNDvJva
BCH 1GN9p233TvNcNQFthCgfiHUnj5JRKEc2Ze
LTC LgM5hkvPzytEFfQGGDFGKYkE743jwUA7qv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thank you!&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ccxt&quot;&gt;Read our blog on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;For business inquiries: info@ccxt.trade&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>feross/simple-peer</title>
      <link>https://github.com/feross/simple-peer</link>
      <description>&lt;p&gt;📡 Simple WebRTC video, voice, and data channels&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;simple-peer &lt;a href=&quot;https://travis-ci.org/feross/simple-peer&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/feross/simple-peer/master.svg&quot; alt=&quot;travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/feross/simple-peer?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/feross/simple-peer/badge.svg?branch=master&quot; alt=&quot;coveralls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/simple-peer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/simple-peer.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/simple-peer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/simple-peer.svg&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://standardjs.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-standard-brightgreen.svg&quot; alt=&quot;javascript style guide&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://saucelabs.com/u/simple-peer&quot;&gt;&lt;img src=&quot;https://saucelabs.com/buildstatus/simple-peer&quot; alt=&quot;javascript style guide&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;h4&gt;Simple WebRTC video, voice, and data channels&lt;/h4&gt; 
&lt;h2&gt;features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;concise, &lt;strong&gt;node.js style&lt;/strong&gt; API for &lt;a href=&quot;https://en.wikipedia.org/wiki/WebRTC&quot;&gt;WebRTC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;works in node and the browser!&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;supports &lt;strong&gt;video/voice streams&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;supports &lt;strong&gt;data channel&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;text and binary data&lt;/li&gt; 
   &lt;li&gt;node.js &lt;a href=&quot;http://nodejs.org/api/stream.html&quot;&gt;duplex stream&lt;/a&gt; interface&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;supports advanced options like: 
  &lt;ul&gt; 
   &lt;li&gt;enable/disable &lt;a href=&quot;http://webrtchacks.com/trickle-ice/&quot;&gt;trickle ICE candidates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;manually set config options&lt;/li&gt; 
   &lt;li&gt;transceivers and renegotiation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This package is used by &lt;a href=&quot;https://webtorrent.io&quot;&gt;WebTorrent&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#who-is-using-simple-peer&quot;&gt;many others&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#install&quot;&gt;install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#usage&quot;&gt;examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#a-simpler-example&quot;&gt;A simpler example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#data-channels&quot;&gt;data channels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#videovoice&quot;&gt;video/voice&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#dynamic-videovoice&quot;&gt;dynamic video/voice&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#in-node&quot;&gt;in node&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#api&quot;&gt;api&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#events&quot;&gt;events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#error-codes&quot;&gt;error codes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#connecting-more-than-2-peers&quot;&gt;connecting more than 2 peers?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#memory-usage&quot;&gt;memory usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#connection-does-not-work-on-some-networks&quot;&gt;connection does not work on some networks?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#who-is-using-simple-peer&quot;&gt;Who is using &lt;code&gt;simple-peer&lt;/code&gt;?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#license&quot;&gt;license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;install&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install simple-peer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This package works in the browser with &lt;a href=&quot;https://browserify.org&quot;&gt;browserify&lt;/a&gt;. If you do not use a bundler, you can use the &lt;code&gt;simplepeer.min.js&lt;/code&gt; standalone script directly in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. This exports a &lt;code&gt;SimplePeer&lt;/code&gt; constructor on &lt;code&gt;window&lt;/code&gt;. Wherever you see &lt;code&gt;Peer&lt;/code&gt; in the examples below, substitute that with &lt;code&gt;SimplePeer&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;usage&lt;/h2&gt; 
&lt;p&gt;Let&#39;s create an html page that lets you manually connect two peers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;style&amp;gt;
      #outgoing {
        width: 600px;
        word-wrap: break-word;
        white-space: normal;
      }
    &amp;lt;/style&amp;gt;
    &amp;lt;form&amp;gt;
      &amp;lt;textarea id=&quot;incoming&quot;&amp;gt;&amp;lt;/textarea&amp;gt;
      &amp;lt;button type=&quot;submit&quot;&amp;gt;submit&amp;lt;/button&amp;gt;
    &amp;lt;/form&amp;gt;
    &amp;lt;pre id=&quot;outgoing&quot;&amp;gt;&amp;lt;/pre&amp;gt;
    &amp;lt;script src=&quot;simplepeer.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      const p = new SimplePeer({
        initiator: location.hash === &#39;#1&#39;,
        trickle: false
      })

      p.on(&#39;error&#39;, err =&amp;gt; console.log(&#39;error&#39;, err))

      p.on(&#39;signal&#39;, data =&amp;gt; {
        console.log(&#39;SIGNAL&#39;, JSON.stringify(data))
        document.querySelector(&#39;#outgoing&#39;).textContent = JSON.stringify(data)
      })

      document.querySelector(&#39;form&#39;).addEventListener(&#39;submit&#39;, ev =&amp;gt; {
        ev.preventDefault()
        p.signal(JSON.parse(document.querySelector(&#39;#incoming&#39;).value))
      })

      p.on(&#39;connect&#39;, () =&amp;gt; {
        console.log(&#39;CONNECT&#39;)
        p.send(&#39;whatever&#39; + Math.random())
      })

      p.on(&#39;data&#39;, data =&amp;gt; {
        console.log(&#39;data: &#39; + data)
      })
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;index.html#1&lt;/code&gt; from one browser (the initiator) and &lt;code&gt;index.html&lt;/code&gt; from another browser (the receiver).&lt;/p&gt; 
&lt;p&gt;An &quot;offer&quot; will be generated by the initiator. Paste this into the receiver&#39;s form and hit submit. The receiver generates an &quot;answer&quot;. Paste this into the initiator&#39;s form and hit submit.&lt;/p&gt; 
&lt;p&gt;Now you have a direct P2P connection between two browsers!&lt;/p&gt; 
&lt;h3&gt;A simpler example&lt;/h3&gt; 
&lt;p&gt;This example create two peers &lt;strong&gt;in the same web page&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;In a real-world application, &lt;em&gt;you would never do this&lt;/em&gt;. The sender and receiver &lt;code&gt;Peer&lt;/code&gt; instances would exist in separate browsers. A &quot;signaling server&quot; (usually implemented with websockets) would be used to exchange signaling data between the two browsers until a peer-to-peer connection is established.&lt;/p&gt; 
&lt;h3&gt;data channels&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Peer = require(&#39;simple-peer&#39;)

var peer1 = new Peer({ initiator: true })
var peer2 = new Peer()

peer1.on(&#39;signal&#39;, data =&amp;gt; {
  // when peer1 has signaling data, give it to peer2 somehow
  peer2.signal(data)
})

peer2.on(&#39;signal&#39;, data =&amp;gt; {
  // when peer2 has signaling data, give it to peer1 somehow
  peer1.signal(data)
})

peer1.on(&#39;connect&#39;, () =&amp;gt; {
  // wait for &#39;connect&#39; event before using the data channel
  peer1.send(&#39;hey peer2, how is it going?&#39;)
})

peer2.on(&#39;data&#39;, data =&amp;gt; {
  // got a data channel message
  console.log(&#39;got a message from peer1: &#39; + data)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;video/voice&lt;/h3&gt; 
&lt;p&gt;Video/voice is also super simple! In this example, peer1 sends video to peer2.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Peer = require(&#39;simple-peer&#39;)

// get video/voice stream
navigator.mediaDevices.getUserMedia({
  video: true,
  audio: true
}).then(gotMedia).catch(() =&amp;gt; {})

function gotMedia (stream) {
  var peer1 = new Peer({ initiator: true, stream: stream })
  var peer2 = new Peer()

  peer1.on(&#39;signal&#39;, data =&amp;gt; {
    peer2.signal(data)
  })

  peer2.on(&#39;signal&#39;, data =&amp;gt; {
    peer1.signal(data)
  })

  peer2.on(&#39;stream&#39;, stream =&amp;gt; {
    // got remote video stream, now let&#39;s show it in a video tag
    var video = document.querySelector(&#39;video&#39;)

    if (&#39;srcObject&#39; in video) {
      video.srcObject = stream
    } else {
      video.src = window.URL.createObjectURL(stream) // for older browsers
    }

    video.play()
  })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For two-way video, simply pass a &lt;code&gt;stream&lt;/code&gt; option into both &lt;code&gt;Peer&lt;/code&gt; constructors. Simple!&lt;/p&gt; 
&lt;p&gt;Please notice that &lt;code&gt;getUserMedia&lt;/code&gt; only works in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Encryption_based_security&quot;&gt;pages loaded via &lt;strong&gt;https&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;dynamic video/voice&lt;/h3&gt; 
&lt;p&gt;It is also possible to establish a data-only connection at first, and later add a video/voice stream, if desired.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Peer = require(&#39;simple-peer&#39;) // create peer without waiting for media

var peer1 = new Peer({ initiator: true }) // you don&#39;t need streams here
var peer2 = new Peer()

peer1.on(&#39;signal&#39;, data =&amp;gt; {
  peer2.signal(data)
})

peer2.on(&#39;signal&#39;, data =&amp;gt; {
  peer1.signal(data)
})

peer2.on(&#39;stream&#39;, stream =&amp;gt; {
  // got remote video stream, now let&#39;s show it in a video tag
  var video = document.querySelector(&#39;video&#39;)

  if (&#39;srcObject&#39; in video) {
    video.srcObject = stream
  } else {
    video.src = window.URL.createObjectURL(stream) // for older browsers
  }

  video.play()
})

function addMedia (stream) {
  peer1.addStream(stream) // &amp;lt;- add streams to peer dynamically
}

// then, anytime later...
navigator.mediaDevices.getUserMedia({
  video: true,
  audio: true
}).then(addMedia).catch(() =&amp;gt; {})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;in node&lt;/h3&gt; 
&lt;p&gt;To use this library in node, pass in &lt;code&gt;opts.wrtc&lt;/code&gt; as a parameter (see &lt;a href=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/#peer--new-peeropts&quot;&gt;the constructor options&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Peer = require(&#39;simple-peer&#39;)
var wrtc = require(&#39;wrtc&#39;)

var peer1 = new Peer({ initiator: true, wrtc: wrtc })
var peer2 = new Peer({ wrtc: wrtc })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;api&lt;/h2&gt; 
&lt;h3&gt;&lt;code&gt;peer = new Peer([opts])&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Create a new WebRTC peer connection.&lt;/p&gt; 
&lt;p&gt;A &quot;data channel&quot; for text/binary communication is always established, because it&#39;s cheap and often useful. For video/voice communication, pass the &lt;code&gt;stream&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;opts&lt;/code&gt; is specified, then the default options (shown below) will be overridden.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  initiator: false,
  channelConfig: {},
  channelName: &#39;&amp;lt;random string&amp;gt;&#39;,
  config: { iceServers: [{ urls: &#39;stun:stun.l.google.com:19302&#39; }, { urls: &#39;stun:global.stun.twilio.com:3478?transport=udp&#39; }] },
  offerOptions: {},
  answerOptions: {},
  sdpTransform: function (sdp) { return sdp },
  stream: false,
  streams: [],
  trickle: true,
  allowHalfTrickle: false,
  wrtc: {}, // RTCPeerConnection/RTCSessionDescription/RTCIceCandidate
  objectMode: false
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The options do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;initiator&lt;/code&gt; - set to &lt;code&gt;true&lt;/code&gt; if this is the initiating peer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;channelConfig&lt;/code&gt; - custom webrtc data channel configuration (used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel&quot;&gt;&lt;code&gt;createDataChannel&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;channelName&lt;/code&gt; - custom webrtc data channel name&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;config&lt;/code&gt; - custom webrtc configuration (used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; constructor)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;offerOptions&lt;/code&gt; - custom offer options (used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer&quot;&gt;&lt;code&gt;createOffer&lt;/code&gt;&lt;/a&gt; method)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;answerOptions&lt;/code&gt; - custom answer options (used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer&quot;&gt;&lt;code&gt;createAnswer&lt;/code&gt;&lt;/a&gt; method)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sdpTransform&lt;/code&gt; - function to transform the generated SDP signaling data (for advanced users)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;stream&lt;/code&gt; - if video/voice is desired, pass stream returned from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;getUserMedia&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;streams&lt;/code&gt; - an array of MediaStreams returned from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;getUserMedia&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;trickle&lt;/code&gt; - set to &lt;code&gt;false&lt;/code&gt; to disable &lt;a href=&quot;http://webrtchacks.com/trickle-ice/&quot;&gt;trickle ICE&lt;/a&gt; and get a single &#39;signal&#39; event (slower)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;wrtc&lt;/code&gt; - custom webrtc implementation, mainly useful in node to specify in the &lt;a href=&quot;https://npmjs.com/package/wrtc&quot;&gt;wrtc&lt;/a&gt; package. Contains an object with the properties:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/webrtc/#dom-rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/webrtc/#dom-rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/webrtc/#dom-rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;objectMode&lt;/code&gt; - set to &lt;code&gt;true&lt;/code&gt; to create the stream in &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_object_mode&quot;&gt;Object Mode&lt;/a&gt;. In this mode, incoming string data is not automatically converted to &lt;code&gt;Buffer&lt;/code&gt; objects.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;peer.signal(data)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Call this method whenever the remote peer emits a &lt;code&gt;peer.on(&#39;signal&#39;)&lt;/code&gt; event.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; will encapsulate a webrtc offer, answer, or ice candidate. These messages help the peers to eventually establish a direct connection to each other. The contents of these strings are an implementation detail that can be ignored by the user of this module; simply pass the data from &#39;signal&#39; events to the remote peer and call &lt;code&gt;peer.signal(data)&lt;/code&gt; to get connected.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.send(data)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Send text/binary data to the remote peer. &lt;code&gt;data&lt;/code&gt; can be any of several types: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; (see &lt;a href=&quot;https://github.com/feross/buffer&quot;&gt;buffer&lt;/a&gt;), &lt;code&gt;ArrayBufferView&lt;/code&gt; (&lt;code&gt;Uint8Array&lt;/code&gt;, etc.), &lt;code&gt;ArrayBuffer&lt;/code&gt;, or &lt;code&gt;Blob&lt;/code&gt; (in browsers that support it).&lt;/p&gt; 
&lt;p&gt;Note: If this method is called before the &lt;code&gt;peer.on(&#39;connect&#39;)&lt;/code&gt; event has fired, then an exception will be thrown. Use &lt;code&gt;peer.write(data)&lt;/code&gt; (which is inherited from the node.js &lt;a href=&quot;http://nodejs.org/api/stream.html&quot;&gt;duplex stream&lt;/a&gt; interface) if you want this data to be buffered instead.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.addStream(stream)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Add a &lt;code&gt;MediaStream&lt;/code&gt; to the connection.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.removeStream(stream)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Remove a &lt;code&gt;MediaStream&lt;/code&gt; from the connection.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.addTrack(track, stream)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Add a &lt;code&gt;MediaStreamTrack&lt;/code&gt; to the connection. Must also pass the &lt;code&gt;MediaStream&lt;/code&gt; you want to attach it to.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.removeTrack(track, stream)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Remove a &lt;code&gt;MediaStreamTrack&lt;/code&gt; from the connection. Must also pass the &lt;code&gt;MediaStream&lt;/code&gt; that it was attached to.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.replaceTrack(oldTrack, newTrack, stream)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Replace a &lt;code&gt;MediaStreamTrack&lt;/code&gt; with another track. Must also pass the &lt;code&gt;MediaStream&lt;/code&gt; that the old track was attached to.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.addTransceiver(kind, init)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Add a &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; to the connection. Can be used to add transceivers before adding tracks. Automatically called as neccesary by &lt;code&gt;addTrack&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.destroy([err])&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Destroy and cleanup this peer connection.&lt;/p&gt; 
&lt;p&gt;If the optional &lt;code&gt;err&lt;/code&gt; parameter is passed, then it will be emitted as an &lt;code&gt;&#39;error&#39;&lt;/code&gt; event on the stream.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;Peer.WEBRTC_SUPPORT&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Detect native WebRTC support in the javascript environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Peer = require(&#39;simple-peer&#39;)

if (Peer.WEBRTC_SUPPORT) {
  // webrtc support!
} else {
  // fallback
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;duplex stream&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Peer&lt;/code&gt; objects are instances of &lt;code&gt;stream.Duplex&lt;/code&gt;. They behave very similarly to a &lt;code&gt;net.Socket&lt;/code&gt; from the node core &lt;code&gt;net&lt;/code&gt; module. The duplex stream reads/writes to the data channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var peer = new Peer(opts)
// ... signaling ...
peer.write(new Buffer(&#39;hey&#39;))
peer.on(&#39;data&#39;, function (chunk) {
  console.log(&#39;got a chunk&#39;, chunk)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;events&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Peer&lt;/code&gt; objects are instance of &lt;code&gt;EventEmitter&lt;/code&gt;. Take a look at the &lt;a href=&quot;https://nodejs.org/api/events.html&quot;&gt;nodejs events documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;Example of removing all registered &lt;strong&gt;close&lt;/strong&gt;-event listeners:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;peer.removeAllListeners(&#39;close&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;signal&#39;, data =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Fired when the peer wants to send signaling data to the remote peer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;It is the responsibility of the application developer (that&#39;s you!) to get this data to the other peer.&lt;/strong&gt; This usually entails using a websocket signaling server. This data is an &lt;code&gt;Object&lt;/code&gt;, so remember to call &lt;code&gt;JSON.stringify(data)&lt;/code&gt; to serialize it first. Then, simply call &lt;code&gt;peer.signal(data)&lt;/code&gt; on the remote peer.&lt;/p&gt; 
&lt;p&gt;(Be sure to listen to this event immediately to avoid missing it. For &lt;code&gt;initiator: true&lt;/code&gt; peers, it fires right away. For &lt;code&gt;initatior: false&lt;/code&gt; peers, it fires when the remote offer is received.)&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;connect&#39;, () =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Fired when the peer connection and data channel are ready to use.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;data&#39;, data =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Received a message from the remote peer (via the data channel).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; will be either a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer/Uint8Array&lt;/code&gt; (see &lt;a href=&quot;https://github.com/feross/buffer&quot;&gt;buffer&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;stream&#39;, stream =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Received a remote video stream, which can be displayed in a video tag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;peer.on(&#39;stream&#39;, stream =&amp;gt; {
  var video = document.querySelector(&#39;video&#39;)
  if (&#39;srcObject&#39; in video) {
    video.srcObject = stream
  } else {
    video.src = window.URL.createObjectURL(stream)
  }
  video.play()
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;track&#39;, (track, stream) =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Received a remote audio/video track. Streams may contain multiple tracks.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;close&#39;, () =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Called when the peer connection has closed.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;peer.on(&#39;error&#39;, (err) =&amp;gt; {})&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Fired when a fatal error occurs. Usually, this means bad signaling data was received from the remote peer.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;err&lt;/code&gt; is an &lt;code&gt;Error&lt;/code&gt; object.&lt;/p&gt; 
&lt;h2&gt;error codes&lt;/h2&gt; 
&lt;p&gt;Errors returned by the &lt;code&gt;error&lt;/code&gt; event have an &lt;code&gt;err.code&lt;/code&gt; property that will indicate the origin of the failure.&lt;/p&gt; 
&lt;p&gt;Possible error codes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ERR_WEBRTC_SUPPORT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_CREATE_OFFER&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_CREATE_ANSWER&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_SET_LOCAL_DESCRIPTION&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_SET_REMOTE_DESCRIPTION&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_ADD_ICE_CANDIDATE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_ICE_CONNECTION_FAILURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_SIGNALING&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_DATA_CHANNEL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ERR_CONNECTION_FAILURE&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;connecting more than 2 peers?&lt;/h2&gt; 
&lt;p&gt;The simplest way to do that is to create a full-mesh topology. That means that every peer opens a connection to every other peer. To illustrate:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/img/full-mesh.png&quot; alt=&quot;full mesh topology&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To broadcast a message, just iterate over all the peers and call &lt;code&gt;peer.send&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So, say you have 3 peers. Then, when a peer wants to send some data it must send it 2 times, once to each of the other peers. So you&#39;re going to want to be a bit careful about the size of the data you send.&lt;/p&gt; 
&lt;p&gt;Full mesh topologies don&#39;t scale well when the number of peers is very large. The total number of edges in the network will be &lt;img src=&quot;https://raw.githubusercontent.com/feross/simple-peer/master/img/full-mesh-formula.png&quot; alt=&quot;full mesh formula&quot;&gt; where &lt;code&gt;n&lt;/code&gt; is the number of peers.&lt;/p&gt; 
&lt;p&gt;For clarity, here is the code to connect 3 peers together:&lt;/p&gt; 
&lt;h4&gt;Peer 1&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// These are peer1&#39;s connections to peer2 and peer3
var peer2 = new Peer({ initiator: true })
var peer3 = new Peer({ initiator: true })

peer2.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer2 somehow
})

peer2.on(&#39;connect&#39;, () =&amp;gt; {
  peer2.send(&#39;hi peer2, this is peer1&#39;)
})

peer2.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer2: &#39; + data)
})

peer3.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer3 somehow
})

peer3.on(&#39;connect&#39;, () =&amp;gt; {
  peer3.send(&#39;hi peer3, this is peer1&#39;)
})

peer3.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer3: &#39; + data)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Peer 2&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// These are peer2&#39;s connections to peer1 and peer3
var peer1 = new Peer()
var peer3 = new Peer({ initiator: true })

peer1.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer1 somehow
})

peer1.on(&#39;connect&#39;, () =&amp;gt; {
  peer1.send(&#39;hi peer1, this is peer2&#39;)
})

peer1.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer1: &#39; + data)
})

peer3.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer3 somehow
})

peer3.on(&#39;connect&#39;, () =&amp;gt; {
  peer3.send(&#39;hi peer3, this is peer2&#39;)
})

peer3.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer3: &#39; + data)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Peer 3&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// These are peer3&#39;s connections to peer1 and peer2
var peer1 = new Peer()
var peer2 = new Peer()

peer1.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer1 somehow
})

peer1.on(&#39;connect&#39;, () =&amp;gt; {
  peer1.send(&#39;hi peer1, this is peer3&#39;)
})

peer1.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer1: &#39; + data)
})

peer2.on(&#39;signal&#39;, data =&amp;gt; {
  // send this signaling data to peer2 somehow
})

peer2.on(&#39;connect&#39;, () =&amp;gt; {
  peer2.send(&#39;hi peer2, this is peer3&#39;)
})

peer2.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;got a message from peer2: &#39; + data)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;memory usage&lt;/h2&gt; 
&lt;p&gt;If you call &lt;code&gt;peer.send(buf)&lt;/code&gt;, &lt;code&gt;simple-peer&lt;/code&gt; is not keeping a reference to &lt;code&gt;buf&lt;/code&gt; and sending the buffer at some later point in time. We immediately call &lt;code&gt;channel.send()&lt;/code&gt; on the data channel. So it should be fine to mutate the buffer right afterward.&lt;/p&gt; 
&lt;p&gt;However, beware that &lt;code&gt;peer.write(buf)&lt;/code&gt; (a writable stream method) does not have the same contract. It will potentially buffer the data and call &lt;code&gt;channel.send()&lt;/code&gt; at a future point in time, so definitely don&#39;t assume it&#39;s safe to mutate the buffer.&lt;/p&gt; 
&lt;h2&gt;connection does not work on some networks?&lt;/h2&gt; 
&lt;p&gt;If a direct connection fails, in particular, because of NAT traversal and/or firewalls, WebRTC ICE uses an intermediary (relay) TURN server. In other words, ICE will first use STUN with UDP to directly connect peers and, if that fails, will fall back to a TURN relay server.&lt;/p&gt; 
&lt;p&gt;In order to use a TURN server, you must specify the &lt;code&gt;config&lt;/code&gt; option to the &lt;code&gt;Peer&lt;/code&gt; constructor. See the API docs above.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/feross/standard&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/feross/standard/master/badge.svg&quot; alt=&quot;js-standard-style&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Who is using &lt;code&gt;simple-peer&lt;/code&gt;?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;http://webtorrent.io&quot;&gt;WebTorrent&lt;/a&gt; - Streaming torrent client in the browser&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://virus.cafe&quot;&gt;Virus Cafe&lt;/a&gt; - Make a friend in 2 minutes&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://instant.io&quot;&gt;Instant.io&lt;/a&gt; - Secure, anonymous, streaming file transfer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://zencastr.com&quot;&gt;Zencastr&lt;/a&gt; - Easily record your remote podcast interviews in studio quality.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/moose-team/friends&quot;&gt;Friends&lt;/a&gt; - Peer-to-peer chat powered by the web&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/socketio/socket.io-p2p&quot;&gt;Socket.io-p2p&lt;/a&gt; - Official Socket.io P2P communication library&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://maxogden.github.io/screencat/&quot;&gt;ScreenCat&lt;/a&gt; - Screen sharing + remote collaboration app&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/webcat&quot;&gt;WebCat&lt;/a&gt; - P2P pipe across the web using Github private/public key for auth&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/rtcat&quot;&gt;RTCCat&lt;/a&gt; - WebRTC netcat&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/peernet&quot;&gt;PeerNet&lt;/a&gt; - Peer-to-peer gossip network using randomized algorithms&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;http://pushertc.herokuapp.com&quot;&gt;PusherTC&lt;/a&gt; - Video chat with using Pusher. See &lt;a href=&quot;http://blog.carbonfive.com/2014/10/16/webrtc-made-simple/&quot;&gt;guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/feross/lxjs-chat&quot;&gt;lxjs-chat&lt;/a&gt; - Omegle-like video chat site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/feross/whiteboard&quot;&gt;Whiteboard&lt;/a&gt; - P2P Whiteboard powered by WebRTC and WebTorrent&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://peercalls.com&quot;&gt;Peer Calls&lt;/a&gt; - WebRTC group video calling. Create a room. Share the link.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://mmorainville.github.io/netsix-gh-pages/&quot;&gt;Netsix&lt;/a&gt; - Send videos to your friends using WebRTC so that they can watch them right away.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.stealthy.im&quot;&gt;Stealthy&lt;/a&gt; - Stealthy is a decentralized, end-to-end encrypted, p2p chat application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/akshayKMR/oorja&quot;&gt;oorja.io&lt;/a&gt; - Effortless video-voice chat with realtime collaborative features. Extensible using react components 🙌&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://talktome.space&quot;&gt;TalktoMe&lt;/a&gt; - Skype alternative for audio/video conferencing based on WebRTC, but without the loss of packets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/cdnbye/hlsjs-p2p-engine&quot;&gt;CDNBye&lt;/a&gt; - CDNBye implements WebRTC datachannel to scale live/vod video streaming by peer-to-peer network using bittorrent-like protocol&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Detox&quot;&gt;Detox&lt;/a&gt; - Overlay network for distributed anonymous P2P communications entirely in the browser&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/samuelmaddock/metastream&quot;&gt;Metastream&lt;/a&gt; - Watch streaming media with friends.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/natzcam/firepeer&quot;&gt;firepeer&lt;/a&gt; - secure signalling and authentication using firebase realtime database&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/elavoie/webrtc-tree-overlay&quot;&gt;Genet&lt;/a&gt; - Fat-tree overlay to scale the number of concurrent WebRTC connections to a single source (&lt;a href=&quot;https://arxiv.org/abs/1904.11402&quot;&gt;paper&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/elavoie/webrtc-connection-testing&quot;&gt;WebRTC Connection Testing&lt;/a&gt; - Quickly test direct connectivity between all pairs of participants (&lt;a href=&quot;https://webrtc-connection-testing.herokuapp.com/&quot;&gt;demo&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://firstdate.co&quot;&gt;Firstdate.co&lt;/a&gt; - Online video dating for actually meeting people and not just messaging them&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/EhsaanIqbal/tensorchat&quot;&gt;TensorChat&lt;/a&gt; - It&#39;s simple - Create. Share. Chat.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://onoffice.app&quot;&gt;On/Office&lt;/a&gt; - View your desktop in a WebVR-powered environment&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.cyph.com&quot;&gt;Cyph&lt;/a&gt; - Cryptographically secure messaging and social networking service, providing an extreme level of privacy combined with best-in-class ease of use&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/HR/ciphora&quot;&gt;Ciphora&lt;/a&gt; - A peer-to-peer end-to-end encrypted messaging chat app.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.whisthub.com&quot;&gt;Whisthub&lt;/a&gt; - Online card game Color Whist with the possibility to start a video chat while playing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://brie.fi/ng&quot;&gt;Brie.fi/ng&lt;/a&gt; - Secure anonymous video chat&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/holtwick/peer2school&quot;&gt;Peer.School&lt;/a&gt; - Simple virtual classroom starting from the 1st class including video chat and real time whiteboard&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://filefire.ca&quot;&gt;FileFire&lt;/a&gt; - Transfer large files and folders at high speed without size limits.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/vj-abishek/airdrop&quot;&gt;safeShare&lt;/a&gt; - Transfer files easily with text and voice communication.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://cubechat.io&quot;&gt;CubeChat&lt;/a&gt; - Party in 3D 🎉&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://homelyschool.com&quot;&gt;Homely School&lt;/a&gt; - A virtual schooling system&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://anydrop.io&quot;&gt;AnyDrop&lt;/a&gt; - Cross-platform AirDrop alternative &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.benjijanssens.anydrop&quot;&gt;with an Android app available at Google Play&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://share-anywhere.com/&quot;&gt;Share-Anywhere&lt;/a&gt; - Cross-platform file transfer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://quarantime.io/&quot;&gt;QuaranTime.io&lt;/a&gt; - The Activity board-game in video!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://web.trango.io&quot;&gt;Trango&lt;/a&gt; - Cross-platform calling and file sharing solution.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/subins2000/p2pt&quot;&gt;P2PT&lt;/a&gt; - Use WebTorrent trackers as signalling servers for making WebRTC connections&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/subins2000/vett&quot;&gt;Dots&lt;/a&gt; - Online multiplayer Dots &amp;amp; Boxes game. &lt;a href=&quot;https://vett.space&quot;&gt;Play Here!&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/subins2000/simple-peer-files&quot;&gt;simple-peer-files&lt;/a&gt; - A simple library to easily transfer files over WebRTC. Has a feature to resume file transfer after uploader interruption.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://WebDrop.Space&quot;&gt;WebDrop.Space&lt;/a&gt; - Share files and messages across devices. Cross-platform, no installation alternative to AirDrop, Xender. &lt;a href=&quot;https://github.com/subins2000/WebDrop&quot;&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://speakrandom.com&quot;&gt;Speakrandom&lt;/a&gt; - Voice-chat social network using simple-peer to create audio conferences!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;Your app here! - send a PR!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;license&lt;/h2&gt; 
&lt;p&gt;MIT. Copyright (c) &lt;a href=&quot;http://feross.org&quot;&gt;Feross Aboukhadijeh&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ebazhanov/in-quiz-questions</title>
      <link>https://github.com/Ebazhanov/in-quiz-questions</link>
      <description>&lt;p&gt;Linkedin quiz assessment, linkedin test, questions and answers (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, css, python, machine-learning ...) ответы на квиз, LinkedIn quiz lösungen, linkedin quiz las respuestas&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linkedin-quiz-questions&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/in-quiz-questions/master/#contributors-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-179-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository does not pretend to give you all answers for LinkedIn questions, rather it&#39;s a starting guide to help you prepare for the LinkedIn skills quiz and to know what to expect in the main exam or which areas to target in your exam preparations. Should you have found some incorrect answers, or want to contribute your answers, please feel free to create any PR changes - all are welcome!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;:point_right: If you want to improve your skills on another test platform &lt;a href=&quot;https://www.pluralsight.com/product/skill-iq&quot;&gt;&lt;strong&gt;Pluralsight IQ Skill&lt;/strong&gt;&lt;/a&gt; find &lt;strong&gt;questions and answers&lt;/strong&gt; in &lt;strong&gt;@Timo Körner&lt;/strong&gt; &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-test&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| Pluralsight IQ Skill quiz | Status | | ------------------------------------------------------------------------------------------------------------------------ | ----------- | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/angular.md&quot;&gt;Angular&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/aws_big_data.md&quot;&gt;Aws Big Data&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/aws_machine_learning.md&quot;&gt;Aws Machine Learning&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/building-websites.md&quot;&gt;Building Websites with HTML, CSS, and JavaScript&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/java.md&quot;&gt;Java&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/mysql.md&quot;&gt;Mysql&lt;/a&gt; | ok | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/powershell.md&quot;&gt;Powershell&lt;/a&gt; | non-offical | | &lt;a href=&quot;https://github.com/tik9/pluralsight/blob/master/python_core.md&quot;&gt;Python&lt;/a&gt; | ok |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| Linkedin-quiz-questions | Status | | --------------------------------------------------------------------------------------------------------------------------------------- | ------------------ | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/adobe-illustrator/adobe-illustrator-quiz.md&quot;&gt;Adobe-Illustrator&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/adobe-photoshop/adobe-photoshop-quiz.md&quot;&gt;Adobe-Photoshop&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/agile-methodologies/agile-methodologies-quiz.md&quot;&gt;Agile Methodologies&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/android/android-quiz.md&quot;&gt;Android&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/AngularJS/angularjs-quiz.md&quot;&gt;AngularJs 🔥&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/aws/aws-quiz.md&quot;&gt;AWS&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/aws-lambda/aws-lambda-quiz.md&quot;&gt;AWS-Lambda&lt;/a&gt; :fire: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/bash/bash-quiz.md&quot;&gt;Bash&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/c%23/c-sharp-quiz.md&quot;&gt;C#&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/c%2B%2B/c%2B%2Bquiz.md&quot;&gt;C++&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/css/css-quiz.md&quot;&gt;CSS&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/django/django-quiz.md&quot;&gt;Django&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/dotnet-framework/dotnet-framework-quiz.md&quot;&gt;.NET Framework&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/git/git-quiz.md&quot;&gt;Git&lt;/a&gt; :star: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/google-analytics/google-analytics-quiz.md&quot;&gt;Google Analytics&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/google-cloud-platform/gcp-quiz.md&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/hadoop/hadoop-quiz.md&quot;&gt;Hadoop&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/html/html-quiz.md&quot;&gt;HTML&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/java/java-quiz.md&quot;&gt;Java&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/javascript/javascript-quiz.md&quot;&gt;Javascript&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/jquery/jquery-quiz.md&quot;&gt;jQuery&lt;/a&gt; :open_mouth: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/json/json-quiz.md&quot;&gt;JSON&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/machine-learning/machine-learning-quiz.md&quot;&gt;Machine Learning&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/matlab/matlab-quiz.md&quot;&gt;MATLAB&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/maven/maven-quiz.md&quot;&gt;Maven&lt;/a&gt; :fire: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-azure/microsoft-azure-quiz.md&quot;&gt;Microsoft Azure&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-excel/microsoft-excel-quiz.md&quot;&gt;Microsoft Excel&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-power-bi/microsoft-power-bi-quiz.md&quot;&gt;Microsoft Power BI&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-power-point/microsoft-power-point-quiz.md&quot;&gt;Microsoft Power Point&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-project/microsoft-project-quiz.md&quot;&gt;Microsoft Project&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-word/microsoft-word-quiz.md&quot;&gt;Microsoft Word&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/mongodb/mongodb-quiz.md&quot;&gt;MongoDB&lt;/a&gt; :green_heart: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/mysql/mysql-quiz.md&quot;&gt;MySQL&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/node.js/node.js-quiz.md&quot;&gt;node.js&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/nosql/nosql-quiz.md&quot;&gt;NoSQL&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/objective-c/objective-c_quiz.md&quot;&gt;objective-c&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/oop/object-oriented-programming-quiz.md&quot;&gt;OOP&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/php/php-quiz.md&quot;&gt;PHP&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/python/python-quiz.md&quot;&gt;Python&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/r/r-quiz.md&quot;&gt;R&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/react/reactjs-quiz.md&quot;&gt;React.js&lt;/a&gt; :rose: | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/rest-api/rest-api-quiz.md&quot;&gt;REST API&lt;/a&gt; :+1: | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/scala/scala-quiz.md&quot;&gt;Scala&lt;/a&gt; | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/seo/search-engine-optimization-quiz.md&quot;&gt;Search Engine Optimization (SEO)&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/sharepoint/sharepoint-quiz.md&quot;&gt;SharePoint&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/swift/swift-quiz.md&quot;&gt;Swift&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/t-sql/t-sql-quiz.md&quot;&gt;Transact-SQL (T-SQL)&lt;/a&gt; | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/windows-server/windows-server-quiz.md&quot;&gt;Windows Server&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/wordpress/wordpress-quiz.md&quot;&gt;WordPress&lt;/a&gt; | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/xml/xml-quiz.md&quot;&gt;XML&lt;/a&gt; | answers required |&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Format&lt;/h2&gt; 
&lt;p&gt;We recommend to format files using &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; code formatter. Prettier comes installed with the IDE &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/in-quiz-questions/master/code.visualstudio.com&quot;&gt;Vscode&lt;/a&gt; which we recommend for preparing the md files. It works on all OS. If you want to run it independently, get &lt;strong&gt;npm&lt;/strong&gt; and:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Ebazhanov/in-quiz-questions&quot;&gt;&lt;img src=&quot;https://starchart.cc/Ebazhanov/in-quiz-questions.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zettlr/Zettlr</title>
      <link>https://github.com/Zettlr/Zettlr</link>
      <description>&lt;p&gt;A Markdown Editor for the 21st century.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Zettlr/Zettlr/develop/resources/screenshots/zettlr_view.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;With Zettlr, writing professional texts is easy and motivating: Whether you are a college student, a researcher, a journalist, or an author — Zettlr has the right tools for you. &lt;a href=&quot;https://www.youtube.com/watch?v=BJ27r6YGpAs&quot;&gt;Watch the video&lt;/a&gt; or continue reading to see what they are!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://zettlr.com/&quot;&gt;Visit our Website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Available in over a dozen languages&lt;/li&gt; 
 &lt;li&gt;Tight and ever-growing &lt;strong&gt;integration with your favourite reference manager&lt;/strong&gt; (such as Zotero or JabRef)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cite with Zettlr&lt;/strong&gt; using &lt;code&gt;citeproc&lt;/code&gt; and your existing literature database&lt;/li&gt; 
 &lt;li&gt;Five &lt;strong&gt;themes and dark mode support&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;File-agnostic writing: Enjoy &lt;strong&gt;full control over your own files&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Keep all your notes and texts &lt;strong&gt;in one place&lt;/strong&gt; — searchable and accessible&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code highlighting&lt;/strong&gt; for many languages&lt;/li&gt; 
 &lt;li&gt;Simple and beautiful &lt;strong&gt;exports&lt;/strong&gt; with &lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt;, &lt;a href=&quot;https://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt;, and &lt;a href=&quot;http://textbundle.org/&quot;&gt;Textbundle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for state of the art knowledge management techniques (&lt;strong&gt;Zettelkasten&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;A revolutionary &lt;strong&gt;search algorithm&lt;/strong&gt; with integrated heatmap&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;… and the best is: &lt;strong&gt;Zettlr is &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_and_open-source_software&quot;&gt;Open Source (FOSS)&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;To install Zettlr, just &lt;a href=&quot;https://www.zettlr.com/download/&quot;&gt;download the latest release&lt;/a&gt; for your operating system! Currently supported are macOS, Windows, and most Linux distributions (via Debian- and Fedora-packages as well as AppImages).&lt;/p&gt; 
&lt;p&gt;All other &lt;a href=&quot;https://www.electronjs.org/docs/tutorial/support#supported-platforms&quot;&gt;platforms that Electron supports&lt;/a&gt; are supported as well, but you will need to build the app yourself for this to work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please also consider &lt;a href=&quot;https://www.patreon.com/zettlr&quot;&gt;becoming a patron&lt;/a&gt; or making a &lt;a href=&quot;https://paypal.me/hendrikerz&quot;&gt;one-time donation&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;If you have downloaded Zettlr, &lt;a href=&quot;https://docs.zettlr.com/&quot;&gt;head over to our website&lt;/a&gt; to get to know Zettlr. Refer to the &lt;a href=&quot;https://docs.zettlr.com/en/5-minutes/&quot;&gt;Quick Start Guide&lt;/a&gt;, if you prefer to use software heads-on.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Zettlr/Zettlr/develop/resources/screenshots/zettlr_view_dark.png&quot; alt=&quot;The central window of Zettlr using the Night Theme&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Zettlr is an &lt;a href=&quot;https://www.electronjs.org/&quot;&gt;Electron&lt;/a&gt;-based app, so to start developing, you&#39;ll need to have:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://nodejs.org/&quot;&gt;NodeJS&lt;/a&gt;-stack installed on your computer. Make sure it&#39;s at least Node 12 (&lt;code&gt;lts/erbium&lt;/code&gt;). To test what version you have, run &lt;code&gt;node -v&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; installed. Yarn is the required package manager for the project, as we do not commit &lt;code&gt;package-lock.json&lt;/code&gt;-files and many commands require yarn. You can install this globally using &lt;code&gt;npm install -g yarn&lt;/code&gt; or Homebrew, if you are on macOS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Then, simply clone the repository and install the dependencies on your local computer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/Zettlr/Zettlr.git
$ cd Zettlr
$ yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optionally add the &lt;code&gt;--frozen-lockfile&lt;/code&gt; flag to ensure yarn will stick to the versions as listed in the &lt;code&gt;yarn.lock&lt;/code&gt; and not attempt to update them.&lt;/p&gt; 
&lt;p&gt;During development, hot module reloading is active so that you can edit the renderer&#39;s code easily and hit &lt;code&gt;F5&lt;/code&gt; after the changes have been compiled by &lt;code&gt;electron-forge&lt;/code&gt;. You can keep the developer tools open to see when HMR has finished loading your changes.&lt;/p&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;p&gt;This section lists all available commands that you can use during application development. These are defined within the &lt;code&gt;package.json&lt;/code&gt; and can be run from the command line by prefixing them with &lt;code&gt;yarn&lt;/code&gt;. Run them from within the base directory of the repository.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;start&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Starts &lt;code&gt;electron-forge&lt;/code&gt;, which will build the application and launch it in development mode. This will use the normal settings, so if you use Zettlr on the same computer in production, it will use the same configuration files as the regular application. This means: be careful when breaking things. In that case, it&#39;s better to use &lt;code&gt;test-gui&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Packages the application, but not bundle it into an installer. Without any suffix, this command will package the application for your current platform. To create specific packages (may require running on the corresponding platform), the following suffixes are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;package:mac&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package:win&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package:win-arm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package:linux-x32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package:linux-x64&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The resulting application packages are stored in &lt;code&gt;./out&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;release:{platform}&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Packages the application and then bundles it into an installer for the corresponding platform. To create such a bundle (may require running on the corresponding platform), one of the following values for &lt;code&gt;{platform}&lt;/code&gt; is required:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;release:mac&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release:win&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release:win-arm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release:linux-x32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release:linux-x64&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release:linux&lt;/code&gt; (shorthand for calling &lt;code&gt;yarn release:linux-x32 &amp;amp;&amp;amp; yarn release:linux-x64&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The resulting setup bundles are stored in &lt;code&gt;./release&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please note that, while you can &lt;code&gt;package&lt;/code&gt; directly for your platform without any suffix, for creating a release specifying the platform is required as electron-builder would otherwise include the development-dependencies in the &lt;code&gt;app.asar&lt;/code&gt;, resulting in a bloated application.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;lang:refresh&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This downloads the four default translations of the application from &lt;a href=&quot;https://translate.zettlr.com/&quot;&gt;Zettlr Translate&lt;/a&gt;, with which it is shipped by default. It places the files in the &lt;code&gt;source/common/lang&lt;/code&gt;-directory. Currently, the default languages are: German (Germany), English (USA), English (UK), and French (France).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please note, that this command is intended for an automated workflow that runs from time to time on the repository to perform this action. This means: Do &lt;strong&gt;not&lt;/strong&gt; commit updated files to the repository. Instead, the updated files will be downloaded whenever you &lt;code&gt;git fetch&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;csl:refresh&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This downloads the &lt;a href=&quot;https://citationstyles.org/&quot;&gt;Citation Style Language&lt;/a&gt; (CSL) files with which the application is shipped, and places them in the &lt;code&gt;source/main/assets/csl-locales&lt;/code&gt;- and &lt;code&gt;source/main/assets/csl-styles&lt;/code&gt;-directories respectively.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please note, that this command is intended for an automated workflow that runs from time to time on the repository to perform this action. This means: Do &lt;strong&gt;not&lt;/strong&gt; commit updated files to the repository. Instead, the updated files will be downloaded whenever you &lt;code&gt;git fetch&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;lint&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This simply runs &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt; with the configuration and outputs a file &lt;code&gt;eslint_report.htm&lt;/code&gt; into the base directory of the repository with the results. Apps such as &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; will automatically run ESLint in the background, but if you want to be extra-safe, make sure to run this command prior to submitting a Pull Request.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command will run automatically on each Pull Request to check your code for inconsistencies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;reveal:build&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This re-compiles the source-files needed by the exporter for building &lt;a href=&quot;https://revealjs.com/&quot;&gt;reveal.js&lt;/a&gt;-presentations. Due to the nature of how &lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt; creates such presentations, Zettlr needs to modify the output by Pandoc, which is why these files need to be pre-compiled.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;test&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This runs the unit tests in the directory &lt;code&gt;./test&lt;/code&gt;. Make sure to run this command prior to submitting a Pull Request, as this will be run every time you commit to the PR, and this way you can make sure that your changes don&#39;t break any tests, making the whole PR-process easier.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;test-gui&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Use this command to carefree test any changes you make to the application. This command will start the application as if you ran &lt;code&gt;yarn start&lt;/code&gt;, but will provide a custom configuration and a custom directory.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The first time you start this command&lt;/strong&gt;, pass the &lt;code&gt;--clean&lt;/code&gt;-flag to copy a bunch of test-files to your &lt;code&gt;./resources&lt;/code&gt;-directory, create a &lt;code&gt;test-config.yml&lt;/code&gt; in your project root, and start the application with this clean configuration. Then, you can adapt the &lt;code&gt;test-config.yml&lt;/code&gt; to your liking (so that certain settings which you would otherwise &lt;em&gt;always&lt;/em&gt; set will be pre-set without you having to open the preferences).&lt;/p&gt; 
&lt;p&gt;Whenever you want to reset the test directory to its initial state (or you removed the directory, or cloned the whole project anew), pass the flag &lt;code&gt;--clean&lt;/code&gt; to the command in order to create or reset the directory. &lt;strong&gt;This is also necessary if you changed something in &lt;code&gt;test-config.yml&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You can pass additional command-line switches such as &lt;code&gt;--clear-cache&lt;/code&gt; to this command as well. They will be passed to the child process.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Attention: Before first running the command, you &lt;strong&gt;must&lt;/strong&gt; run it with the &lt;code&gt;--clean&lt;/code&gt;-flag to create the directory in the first place!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To dive deeper into the development process, have a look at our &lt;a href=&quot;https://docs.zettlr.com/en/get-involved&quot;&gt;full development documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Command-Line Switches&lt;/h2&gt; 
&lt;p&gt;The Zettlr binary features a few command line switches that you can make use of for different purposes.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--clear-cache&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This will direct the File System Abstraction Layer to fully clear its cache on boot. This can be used to mitigate issues regarding changes in the code base. To ensure compatibility with any changes to the information stored in the cache, the cache is also automatically cleared when the version field in your &lt;code&gt;config.json&lt;/code&gt; does not match the one in the &lt;code&gt;package.json&lt;/code&gt;, which means that, as long as you do not explicitly set the &lt;code&gt;version&lt;/code&gt;-field in your &lt;code&gt;test-config.yml&lt;/code&gt;, the cache will always be cleared on each run when you type &lt;code&gt;yarn test-gui&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--config=path&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Use this switch to temporarily override the default configuration file stored in your AppData-equivalent folder. This path should be absolute. In case you need to provide a relative path, the base for resolving the path will be: either the binary&#39;s directory name (when the app is packaged), or the repository root (when the app is not packaged). If the path contains spaces, don&#39;t forget to escape it in quotes.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This software is licensed via the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GNU GPL v3-License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The brand (including name, icons and everything Zettlr can be identified with) is excluded and all rights reserved. If you want to fork Zettlr to develop another app, feel free but please change name and icons. &lt;a href=&quot;https://www.zettlr.com/press#usage-rights&quot;&gt;Read about the logo usage&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fossasia/open-event-frontend</title>
      <link>https://github.com/fossasia/open-event-frontend</link>
      <description>&lt;p&gt;The frontend for the Open Event API Server https://open-event-frontend.now.sh&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Event Frontend&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/docs/images/Frontend_Branding.png&quot; alt=&quot;Open Event Frontend&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/fossasia/open-event-frontend&quot;&gt;&lt;img src=&quot;https://travis-ci.org/fossasia/open-event-frontend.svg?branch=development&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.netlify.com/sites/open-event/deploys&quot;&gt;&lt;img src=&quot;https://img.shields.io/netlify/89d57fdc-826c-400b-af13-c542e9513f62&quot; alt=&quot;Netlify&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codacy.com/app/fossasia/open-event-frontend?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=fossasia/open-event-frontend&amp;amp;utm_campaign=Badge_Grade&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/Grade/0d51cf60fc734d3699fd6eff6054e483&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/fossasia/open-event-frontend&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/fossasia/open-event-frontend/branch/development/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/fossasia/open-event-frontend&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/fossasia/open-event-frontend/badge.svg&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/projects/open-event/frontend/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/open-event/-/frontend/svg-badge.svg&quot; alt=&quot;Weblate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/fossasia/open-event-frontend&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20gitter-ff006f.svg?style=flat-square&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://groups.google.com/forum/#!forum/open-event&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Mailing-List-red.svg&quot; alt=&quot;Mailing&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/eventyay&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/eventyay.svg?style=social&amp;amp;label=Follow&amp;amp;maxAge=2592000?style=flat-square&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The front end for the &lt;strong&gt;Open Event Server&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;API Documentation:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every installation of the &lt;strong&gt;Open Event Server&lt;/strong&gt; project includes API docs, (e.g. here on the test install &lt;a href=&quot;https://open-event-api.herokuapp.com&quot;&gt;https://open-event-api.herokuapp.com&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;A hosted version of the API docs is available in the &lt;code&gt;gh-pages&lt;/code&gt; branch of the &lt;strong&gt;Open Event Server&lt;/strong&gt; repository at &lt;a href=&quot;http://dev.eventyay.com/api/v1&quot;&gt;http://dev.eventyay.com/api/v1&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;Please join our &lt;a href=&quot;https://groups.google.com/forum/#!forum/open-event&quot;&gt;Mailing list&lt;/a&gt; or &lt;a href=&quot;https://gitter.im/fossasia/open-event-frontend&quot;&gt;chat channel&lt;/a&gt; to get in touch with the developers.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The Open Event Frontend can be easily deployed on a variety of platforms. Detailed platform specific instructions have been provided below.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/docs/installation/local.md&quot;&gt;Local Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/docs/installation/Publish-to-GitHub-Pages.md&quot;&gt;Publish to GitHub Pages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/docs/installation/docker.md&quot;&gt;Running in Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Running / Development&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://asciinema.org/a/370458?speed=5&amp;amp;autoplay=1&quot;&gt;Click to see installation video&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Please follow &lt;a href=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/docs/installation/local.md#steps&quot;&gt;installation steps&lt;/a&gt; listed above carefully before running&lt;/p&gt; 
&lt;p&gt;Unfortunately, no one reads the note above, so please just run the following commands when setting up for the first time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cp .env.example .env&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn l10n:generate&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Running:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Visit your app at &lt;a href=&quot;http://localhost:4200&quot;&gt;http://localhost:4200&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Code Generators&lt;/h3&gt; 
&lt;p&gt;Make use of the many generators for code, try &lt;code&gt;ember help generate&lt;/code&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;This project has acceptance, integration and unit tests located inside the &lt;code&gt;tests/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn test&lt;/code&gt; - CLI output&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn test --server&lt;/code&gt; - Live browser preview and console access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn build&lt;/code&gt; (development)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn build -prod&lt;/code&gt; (production)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployments, Docker images and Releases&lt;/h2&gt; 
&lt;h3&gt;Deployments&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Master branch&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The master branch of open-event-frontend gets deployed in a production environment at &lt;a href=&quot;https://eventyay.com&quot;&gt;https://eventyay.com&lt;/a&gt; It consumes the API exposed by master branch deployment of open event server, hosted at &lt;a href=&quot;https://api.eventyay.com&quot;&gt;https://api.eventyay.com&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Development branch&lt;/h4&gt; 
&lt;p&gt;The &lt;strong&gt;development&lt;/strong&gt; branch of open-event-frontend gets deployed at &lt;a href=&quot;https://open-event-frontend.now.sh/&quot;&gt;https://open-event-frontend.now.sh/&lt;/a&gt; It consumes the API exposed by development branch of open event server, hosted at &lt;a href=&quot;https://open-event-api-dev.herokuapp.com&quot;&gt;https://open-event-api-dev.herokuapp.com&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Release Cycle&lt;/h3&gt; 
&lt;p&gt;Stable versions will be released periodically, starting from version 1.0.0 when open-event-frontend went into production. Version names will follow &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Hub Images&lt;/h3&gt; 
&lt;p&gt;Docker images hosted on &lt;a href=&quot;https://cloud.docker.com/u/eventyay/repository/docker/eventyay/open-event-frontend&quot;&gt;open-event-frontend repository&lt;/a&gt; under eventyay organisation on docker hub are updated for each push on master and development branch. Separate tags for each version release are also maintained. They are as follows:&lt;/p&gt; 
&lt;p&gt;| Branch/Release | Image | | --------------- | ---------------------------------------- | | Master | eventyay/open-event-frontend:latest | | Development | eventyay/open-event-frontend:development | | Version(vx.y.z) | eventyay/open-event-frontend:vx.y.z |&lt;/p&gt; 
&lt;h2&gt;Further Reading / Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://emberjs.com/&quot;&gt;ember.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://ember-cli.com/&quot;&gt;ember-cli&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://semantic-ui.com/&quot;&gt;Semantic UI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://semantic-org.github.io/Semantic-UI-Ember/&quot;&gt;Semantic-UI-Ember&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development Browser Extensions&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi&quot;&gt;ember inspector for chrome&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/&quot;&gt;ember inspector for firefox&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions Best Practices&lt;/h2&gt; 
&lt;h3&gt;Commits&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write clear meaningful git commit messages (Do read &lt;a href=&quot;https://chris.beams.io/posts/git-commit/&quot;&gt;https://chris.beams.io/posts/git-commit/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Make sure your PR&#39;s description contains GitHub&#39;s special keyword references that automatically close the related issue when the PR is merged. (More info at &lt;a href=&quot;https://github.com/blog/1506-closing-issues-via-pull-requests&quot;&gt;https://github.com/blog/1506-closing-issues-via-pull-requests&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;When you make very minor changes to a PR of yours (like for example fixing a failing Travis build or some small style corrections or minor changes requested by reviewers) make sure you squash your commits afterward so that you don&#39;t have an absurd number of commits for a very small fix. (Learn how to squash at &lt;a href=&quot;https://davidwalsh.name/squash-commits-git&quot;&gt;https://davidwalsh.name/squash-commits-git&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;When you&#39;re submitting a PR for a UI-related issue, it would be really awesome if you add a screenshot of your change or a link to a deployment where it can be tested out along with your PR. It makes it very easy for the reviewers and you&#39;ll also get reviews quicker.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature Requests and Bug Reports&lt;/h3&gt; 
&lt;p&gt;When you file a feature request or when you are submitting a bug report to the &lt;a href=&quot;https://github.com/fossasia/open-event-frontend/issues&quot;&gt;issue tracker&lt;/a&gt;, make sure you add steps to reproduce it. Especially if that bug is some weird/rare one.&lt;/p&gt; 
&lt;h3&gt;Join the development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before you join development, please set up the project on your local machine, run it and go through the application completely. Press on any button you can find and see where it leads to. Explore. (Don&#39;t worry ... Nothing will happen to the app or to you due to the exploring :wink: Only thing that will happen is, you&#39;ll be more familiar with what is where and might even get some cool ideas on how to improve various aspects of the app.)&lt;/li&gt; 
 &lt;li&gt;If you would like to work on an issue, drop in a comment at the issue. If it is already assigned to someone, but there is no sign of any work being done, please feel free to drop in a comment so that the issue can be assigned to you if the previous assignee has dropped it entirely.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is currently licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/fossasia/open-event-frontend/development/LICENSE&quot;&gt;Apache License version 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To obtain the software under a different license, Please contact &lt;strong&gt;&lt;a href=&quot;https://blog.fossasia.org/contact/&quot;&gt;FOSSASIA&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>neoclide/coc.nvim</title>
      <link>https://github.com/neoclide/coc.nvim</link>
      <description>&lt;p&gt;Intellisense engine for Vim8 &amp; Neovim, full language server protocol support as VSCode&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;em&gt;True snippet and additional text editing support&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Why?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Fast&lt;/strong&gt;: &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Completion-with-sources&quot;&gt;instant increment completion&lt;/a&gt;, increment buffer sync using buffer update events.&lt;/li&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Reliable&lt;/strong&gt;: typed language, tested with CI.&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;strong&gt;Featured&lt;/strong&gt;: &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Language-servers#supported-features&quot;&gt;full LSP support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;❤️ &lt;strong&gt;Flexible&lt;/strong&gt;: &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Using-the-configuration-file&quot;&gt;configured like VSCode&lt;/a&gt;, &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Using-coc-extensions&quot;&gt;extensions work like in VSCode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;nodejs&lt;/a&gt; &amp;gt;= 10.12:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -sL install-node.now.sh/lts | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt; users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;&quot; Use release branch (recommend)
Plug &#39;neoclide/coc.nvim&#39;, {&#39;branch&#39;: &#39;release&#39;}

&quot; Or build from source code by using yarn: https://yarnpkg.com
Plug &#39;neoclide/coc.nvim&#39;, {&#39;branch&#39;: &#39;master&#39;, &#39;do&#39;: &#39;yarn install --frozen-lockfile&#39;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;in your &lt;code&gt;.vimrc&lt;/code&gt; or &lt;code&gt;init.vim&lt;/code&gt;, then restart Vim and run &lt;code&gt;:PlugInstall&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Checkout &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Install-coc.nvim&quot;&gt;Install coc.nvim&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;You &lt;strong&gt;have to&lt;/strong&gt; install coc extension or configure language servers for LSP support.&lt;/p&gt; 
&lt;p&gt;Install extensions like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;:CocInstall coc-json coc-tsserver
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or configure language server in &lt;code&gt;coc-settings.json&lt;/code&gt; opened by &lt;code&gt;:CocConfig&lt;/code&gt;, like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;languageserver&quot;: {
    &quot;go&quot;: {
      &quot;command&quot;: &quot;gopls&quot;,
      &quot;rootPatterns&quot;: [&quot;go.mod&quot;],
      &quot;trace.server&quot;: &quot;verbose&quot;,
      &quot;filetypes&quot;: [&quot;go&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Checkout wiki for more details:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Completion-with-sources&quot;&gt;Completion with sources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Using-the-configuration-file&quot;&gt;Using the configuration file&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Using-coc-extensions&quot;&gt;Using coc extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Language-servers&quot;&gt;Configure language servers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/F.A.Q&quot;&gt;F.A.Q&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Checkout &lt;code&gt;:h coc-nvim&lt;/code&gt; for vim interface.&lt;/p&gt; 
&lt;h2&gt;Example vim configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is required to make coc.nvim easier to work with, since it doesn&#39;t change your key-mappings or Vim options. This is done as much as possible to avoid conflict with your other plugins.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;❗️Important&lt;/strong&gt;: Some Vim plugins could change key mappings. Please use &lt;code&gt;:verbose imap &amp;lt;tab&amp;gt;&lt;/code&gt; to make sure that your keymap has taken effect.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;&quot; TextEdit might fail if hidden is not set.
set hidden

&quot; Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

&quot; Give more space for displaying messages.
set cmdheight=2

&quot; Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
&quot; delays and poor user experience.
set updatetime=300

&quot; Don&#39;t pass messages to |ins-completion-menu|.
set shortmess+=c

&quot; Always show the signcolumn, otherwise it would shift the text each time
&quot; diagnostics appear/become resolved.
if has(&quot;patch-8.1.1564&quot;)
  &quot; Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif

&quot; Use tab for trigger completion with characters ahead and navigate.
&quot; NOTE: Use command &#39;:verbose imap &amp;lt;tab&amp;gt;&#39; to make sure tab is not mapped by
&quot; other plugin before putting this into your config.
inoremap &amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;TAB&amp;gt;
      \ pumvisible() ? &quot;\&amp;lt;C-n&amp;gt;&quot; :
      \ &amp;lt;SID&amp;gt;check_back_space() ? &quot;\&amp;lt;TAB&amp;gt;&quot; :
      \ coc#refresh()
inoremap &amp;lt;expr&amp;gt;&amp;lt;S-TAB&amp;gt; pumvisible() ? &quot;\&amp;lt;C-p&amp;gt;&quot; : &quot;\&amp;lt;C-h&amp;gt;&quot;

function! s:check_back_space() abort
  let col = col(&#39;.&#39;) - 1
  return !col || getline(&#39;.&#39;)[col - 1]  =~# &#39;\s&#39;
endfunction

&quot; Use &amp;lt;c-space&amp;gt; to trigger completion.
if has(&#39;nvim&#39;)
  inoremap &amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;c-space&amp;gt; coc#refresh()
else
  inoremap &amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;c-@&amp;gt; coc#refresh()
endif

&quot; Make &amp;lt;CR&amp;gt; auto-select the first completion item and notify coc.nvim to
&quot; format on enter, &amp;lt;cr&amp;gt; could be remapped by other vim plugin
inoremap &amp;lt;silent&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;cr&amp;gt; pumvisible() ? coc#_select_confirm()
                              \: &quot;\&amp;lt;C-g&amp;gt;u\&amp;lt;CR&amp;gt;\&amp;lt;c-r&amp;gt;=coc#on_enter()\&amp;lt;CR&amp;gt;&quot;

&quot; Use `[g` and `]g` to navigate diagnostics
&quot; Use `:CocDiagnostics` to get all diagnostics of current buffer in location list.
nmap &amp;lt;silent&amp;gt; [g &amp;lt;Plug&amp;gt;(coc-diagnostic-prev)
nmap &amp;lt;silent&amp;gt; ]g &amp;lt;Plug&amp;gt;(coc-diagnostic-next)

&quot; GoTo code navigation.
nmap &amp;lt;silent&amp;gt; gd &amp;lt;Plug&amp;gt;(coc-definition)
nmap &amp;lt;silent&amp;gt; gy &amp;lt;Plug&amp;gt;(coc-type-definition)
nmap &amp;lt;silent&amp;gt; gi &amp;lt;Plug&amp;gt;(coc-implementation)
nmap &amp;lt;silent&amp;gt; gr &amp;lt;Plug&amp;gt;(coc-references)

&quot; Use K to show documentation in preview window.
nnoremap &amp;lt;silent&amp;gt; K :call &amp;lt;SID&amp;gt;show_documentation()&amp;lt;CR&amp;gt;

function! s:show_documentation()
  if (index([&#39;vim&#39;,&#39;help&#39;], &amp;amp;filetype) &amp;gt;= 0)
    execute &#39;h &#39;.expand(&#39;&amp;lt;cword&amp;gt;&#39;)
  elseif (coc#rpc#ready())
    call CocActionAsync(&#39;doHover&#39;)
  else
    execute &#39;!&#39; . &amp;amp;keywordprg . &quot; &quot; . expand(&#39;&amp;lt;cword&amp;gt;&#39;)
  endif
endfunction

&quot; Highlight the symbol and its references when holding the cursor.
autocmd CursorHold * silent call CocActionAsync(&#39;highlight&#39;)

&quot; Symbol renaming.
nmap &amp;lt;leader&amp;gt;rn &amp;lt;Plug&amp;gt;(coc-rename)

&quot; Formatting selected code.
xmap &amp;lt;leader&amp;gt;f  &amp;lt;Plug&amp;gt;(coc-format-selected)
nmap &amp;lt;leader&amp;gt;f  &amp;lt;Plug&amp;gt;(coc-format-selected)

augroup mygroup
  autocmd!
  &quot; Setup formatexpr specified filetype(s).
  autocmd FileType typescript,json setl formatexpr=CocAction(&#39;formatSelected&#39;)
  &quot; Update signature help on jump placeholder.
  autocmd User CocJumpPlaceholder call CocActionAsync(&#39;showSignatureHelp&#39;)
augroup end

&quot; Applying codeAction to the selected region.
&quot; Example: `&amp;lt;leader&amp;gt;aap` for current paragraph
xmap &amp;lt;leader&amp;gt;a  &amp;lt;Plug&amp;gt;(coc-codeaction-selected)
nmap &amp;lt;leader&amp;gt;a  &amp;lt;Plug&amp;gt;(coc-codeaction-selected)

&quot; Remap keys for applying codeAction to the current buffer.
nmap &amp;lt;leader&amp;gt;ac  &amp;lt;Plug&amp;gt;(coc-codeaction)
&quot; Apply AutoFix to problem on the current line.
nmap &amp;lt;leader&amp;gt;qf  &amp;lt;Plug&amp;gt;(coc-fix-current)

&quot; Map function and class text objects
&quot; NOTE: Requires &#39;textDocument.documentSymbol&#39; support from the language server.
xmap if &amp;lt;Plug&amp;gt;(coc-funcobj-i)
omap if &amp;lt;Plug&amp;gt;(coc-funcobj-i)
xmap af &amp;lt;Plug&amp;gt;(coc-funcobj-a)
omap af &amp;lt;Plug&amp;gt;(coc-funcobj-a)
xmap ic &amp;lt;Plug&amp;gt;(coc-classobj-i)
omap ic &amp;lt;Plug&amp;gt;(coc-classobj-i)
xmap ac &amp;lt;Plug&amp;gt;(coc-classobj-a)
omap ac &amp;lt;Plug&amp;gt;(coc-classobj-a)

&quot; Remap &amp;lt;C-f&amp;gt; and &amp;lt;C-b&amp;gt; for scroll float windows/popups.
if has(&#39;nvim-0.4.0&#39;) || has(&#39;patch-8.2.0750&#39;)
  nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-f&amp;gt; coc#float#has_scroll() ? coc#float#scroll(1) : &quot;\&amp;lt;C-f&amp;gt;&quot;
  nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-b&amp;gt; coc#float#has_scroll() ? coc#float#scroll(0) : &quot;\&amp;lt;C-b&amp;gt;&quot;
  inoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-f&amp;gt; coc#float#has_scroll() ? &quot;\&amp;lt;c-r&amp;gt;=coc#float#scroll(1)\&amp;lt;cr&amp;gt;&quot; : &quot;\&amp;lt;Right&amp;gt;&quot;
  inoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-b&amp;gt; coc#float#has_scroll() ? &quot;\&amp;lt;c-r&amp;gt;=coc#float#scroll(0)\&amp;lt;cr&amp;gt;&quot; : &quot;\&amp;lt;Left&amp;gt;&quot;
  vnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-f&amp;gt; coc#float#has_scroll() ? coc#float#scroll(1) : &quot;\&amp;lt;C-f&amp;gt;&quot;
  vnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-b&amp;gt; coc#float#has_scroll() ? coc#float#scroll(0) : &quot;\&amp;lt;C-b&amp;gt;&quot;
endif

&quot; NeoVim-only mapping for visual mode scroll
&quot; Useful on signatureHelp after jump placeholder of snippet expansion
if has(&#39;nvim&#39;)
  vnoremap &amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-f&amp;gt; coc#float#has_scroll() ? coc#float#nvim_scroll(1, 1) : &quot;\&amp;lt;C-f&amp;gt;&quot;
  vnoremap &amp;lt;nowait&amp;gt;&amp;lt;expr&amp;gt; &amp;lt;C-b&amp;gt; coc#float#has_scroll() ? coc#float#nvim_scroll(0, 1) : &quot;\&amp;lt;C-b&amp;gt;&quot;
endif

&quot; Use CTRL-S for selections ranges.
&quot; Requires &#39;textDocument/selectionRange&#39; support of language server.
nmap &amp;lt;silent&amp;gt; &amp;lt;C-s&amp;gt; &amp;lt;Plug&amp;gt;(coc-range-select)
xmap &amp;lt;silent&amp;gt; &amp;lt;C-s&amp;gt; &amp;lt;Plug&amp;gt;(coc-range-select)

&quot; Add `:Format` command to format current buffer.
command! -nargs=0 Format :call CocAction(&#39;format&#39;)

&quot; Add `:Fold` command to fold current buffer.
command! -nargs=? Fold :call     CocAction(&#39;fold&#39;, &amp;lt;f-args&amp;gt;)

&quot; Add `:OR` command for organize imports of the current buffer.
command! -nargs=0 OR   :call     CocAction(&#39;runCommand&#39;, &#39;editor.action.organizeImport&#39;)

&quot; Add (Neo)Vim&#39;s native statusline support.
&quot; NOTE: Please see `:h coc-status` for integrations with external plugins that
&quot; provide custom statusline: lightline.vim, vim-airline.
set statusline^=%{coc#status()}%{get(b:,&#39;coc_current_function&#39;,&#39;&#39;)}

&quot; Mappings for CoCList
&quot; Show all diagnostics.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;a  :&amp;lt;C-u&amp;gt;CocList diagnostics&amp;lt;cr&amp;gt;
&quot; Manage extensions.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;e  :&amp;lt;C-u&amp;gt;CocList extensions&amp;lt;cr&amp;gt;
&quot; Show commands.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;c  :&amp;lt;C-u&amp;gt;CocList commands&amp;lt;cr&amp;gt;
&quot; Find symbol of current document.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;o  :&amp;lt;C-u&amp;gt;CocList outline&amp;lt;cr&amp;gt;
&quot; Search workspace symbols.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;s  :&amp;lt;C-u&amp;gt;CocList -I symbols&amp;lt;cr&amp;gt;
&quot; Do default action for next item.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;j  :&amp;lt;C-u&amp;gt;CocNext&amp;lt;CR&amp;gt;
&quot; Do default action for previous item.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;k  :&amp;lt;C-u&amp;gt;CocPrev&amp;lt;CR&amp;gt;
&quot; Resume latest coc list.
nnoremap &amp;lt;silent&amp;gt;&amp;lt;nowait&amp;gt; &amp;lt;space&amp;gt;p  :&amp;lt;C-u&amp;gt;CocListResume&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/65524706&quot;&gt;coc.nvim 插件体系介绍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/71846145&quot;&gt;CocList 入坑指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@chemzqm/create-coc-nvim-extension-to-improve-vim-experience-4461df269173&quot;&gt;Create coc.nvim extension to improve Vim experience&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://samroeca.com/coc-plugin.html&quot;&gt;How to write a coc.nvim extension (and why)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Trouble shooting&lt;/h2&gt; 
&lt;p&gt;Try these steps when you have problem with coc.nvim.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure your Vim version &amp;gt;= 8.0 by command &lt;code&gt;:version&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If service failed to start, use command &lt;code&gt;:CocInfo&lt;/code&gt; or &lt;code&gt;:checkhealth&lt;/code&gt; on Neovim.&lt;/li&gt; 
 &lt;li&gt;Checkout the log of coc.nvim by command &lt;code&gt;:CocOpenLog&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;When you have issues with the language server, it&#39;s recommended to &lt;a href=&quot;https://github.com/neoclide/coc.nvim/wiki/Debug-language-server#using-output-channel&quot;&gt;checkout the output&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you think Coc is useful, consider giving it a star.&lt;/li&gt; 
 &lt;li&gt;If you have a question, &lt;a href=&quot;https://gitter.im/neoclide/coc.nvim&quot;&gt;ask on gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;中文用户请到 &lt;a href=&quot;https://gitter.im/neoclide/coc-cn&quot;&gt;中文 gitter&lt;/a&gt; 讨论&lt;/li&gt; 
 &lt;li&gt;If something is not working, &lt;a href=&quot;https://github.com/neoclide/coc.nvim/issues/new&quot;&gt;create an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/cocnvim#backer&quot;&gt;Become a backer&lt;/a&gt; and get your image on our README on Github with a link to your site.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GitHub Docs 
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href=&quot;https://docs.github.com&quot;&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub&#39;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;In this article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#readmes&quot;&gt;READMEs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Start contributing right now:&lt;/h3&gt; 
&lt;p&gt;We accept a lot of &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md/#types-of-contributions-memo&quot;&gt;different contributions&lt;/a&gt;, including some that don&#39;t require you to write a single line of code.&lt;/p&gt; 
&lt;h4&gt;Click &lt;strong&gt;make a contribution&lt;/strong&gt; from docs&lt;/h4&gt; 
&lt;p&gt;As you&#39;re using the GitHub Docs, you may find something in an article that you&#39;d like to add to, update, or change. Click on &lt;strong&gt;make a contribution&lt;/strong&gt; to navigate directly to that article in the codebase, so that you can begin making your contribution.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Open an issue&lt;/h4&gt; 
&lt;p&gt;If you&#39;ve found a problem, you can open an issue using a &lt;a href=&quot;https://github.com/github/docs/issues/new/choose&quot;&gt;template&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Solve an issue&lt;/h4&gt; 
&lt;p&gt;If you have a solution to one of the open issues, you will need to fork the repository and submit a PR using the &lt;a href=&quot;https://github.com/github/docs/blob/main/CONTRIBUTING.md#pull-request-template&quot;&gt;template&lt;/a&gt; that is visible automatically in the pull request body. For more details about this process, please check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Join us in discussions&lt;/h4&gt; 
&lt;p&gt;We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you&#39;d like help troubleshooting a PR, have a great new idea, or want to share something amazing you&#39;ve learned in our docs, join us in &lt;a href=&quot;https://github.com/github/docs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;And that&#39;s it!&lt;/h4&gt; 
&lt;p&gt;That&#39;s how you can get started easily as a member of the GitHub Documentation community. :sparkles:&lt;/p&gt; 
&lt;p&gt;If you want to know more, or you&#39;re making a more complex contribution, check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few more things to know when you&#39;re getting started with this repo:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you&#39;re having trouble with your GitHub account, contact &lt;a href=&quot;https://support.github.com/contact&quot;&gt;Support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We do not accept pull requests for translated content - see &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you&#39;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/README.md&quot;&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/contributing/README.md&quot;&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/README.md&quot;&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md&quot;&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/variables/README.md&quot;&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/liquid-tags/README.md&quot;&gt;includes/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/README.md&quot;&gt;includes/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/javascripts/README.md&quot;&gt;javascripts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/layouts/README.md&quot;&gt;layouts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/lib/liquid-tags/README.md&quot;&gt;lib/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/middleware/README.md&quot;&gt;middleware/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/script/README.md&quot;&gt;script/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/stylesheets/README.md&quot;&gt;stylesheets/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE&quot;&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Working-Title-MSFS-Mods/fspackages</title>
      <link>https://github.com/Working-Title-MSFS-Mods/fspackages</link>
      <description>&lt;p&gt;Working Title FS Packages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Working Title MSFS Mods&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Working-Title-MSFS-Mods/fspackages/total?style=flat-square&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors-anon/Working-Title-MSFS-Mods/fspackages?style=flat-square&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/Fa6w2xK&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/750764704175226992.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This is the home of mods for the new Microsoft Flight Simulator from the Working Title team. We have a number of projects either in the works or planned. Here is the status of what is currently being worked on and links to downloadable releases.&lt;/p&gt; 
&lt;p&gt;Track Updates and Progress on Discord &lt;a href=&quot;https://discord.com/invite/Fa6w2xK&quot;&gt;https://discord.com/invite/Fa6w2xK&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Project | Description | Current Version | Documentation --------|-------------|-----------------|-------------- CJ4 | Performance and avionics improvements for the Citation CJ4 | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/cj4-v0.7.2&quot;&gt;v0.7.2&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-cj4&quot;&gt;docs&lt;/a&gt; G1000 | Fixes and enhancements for the stock G1000 avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/g1000-v0.3.2&quot;&gt;v0.3.2&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-g1000&quot;&gt;docs&lt;/a&gt; G3000 | Fixes and enhancements for the stock G3000 avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/g3000-v0.3.2&quot;&gt;v0.3.2&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-g3000&quot;&gt;docs&lt;/a&gt; GX | Fixes and enhancements for the stock G3X Touch avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/gx-v0.1.0-dev3&quot;&gt;v0.1.0-dev3&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-gx&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Materials to help you rock your next coding interview&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Carefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;&quot;Front-end Job Interview Questions&quot; answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/bitwarden_rs</title>
      <link>https://github.com/dani-garcia/bitwarden_rs</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;This is a Bitwarden server API implementation written in Rust compatible with &lt;a href=&quot;https://bitwarden.com/#download&quot;&gt;upstream Bitwarden clients&lt;/a&gt;*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs.svg?branch=master&quot; alt=&quot;Travis Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/bitwardenrs/server&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/bitwardenrs/server.svg&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs/status.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/blob/master/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GPL-3.0 Licensed&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/matrix/bitwarden_rs:matrix.org.svg?logo=matrix&quot; alt=&quot;Matrix Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Image is based on &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs&quot;&gt;Rust implementation of Bitwarden API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with the &lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt; project nor 8bit Solutions LLC.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;⚠️&lt;strong&gt;IMPORTANT&lt;/strong&gt;⚠️: When using this server, please report any bugs or suggestions to us directly (look at the bottom of this page for ways to get in touch), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official support channels.&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Basically full implementation of Bitwarden API is provided including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Organizations support&lt;/li&gt; 
 &lt;li&gt;Attachments&lt;/li&gt; 
 &lt;li&gt;Vault API support&lt;/li&gt; 
 &lt;li&gt;Serving the static files for Vault interface&lt;/li&gt; 
 &lt;li&gt;Website icons API&lt;/li&gt; 
 &lt;li&gt;Authenticator and U2F support&lt;/li&gt; 
 &lt;li&gt;YubiKey and Duo support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Pull the docker image and mount a volume from the host for persistent storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker pull bitwardenrs/server:latest
docker run -d --name bitwarden -v /bw-data/:/data/ -p 80:80 bitwardenrs/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under /bw-data/, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Some web browsers, like Chrome, disallow the use of Web Crypto APIs in insecure contexts. In this case, you might get an error like &lt;code&gt;Cannot read property &#39;importKey&#39;&lt;/code&gt;. To solve this problem, you need to access the web vault from HTTPS.&lt;/p&gt; 
&lt;p&gt;This can be configured in &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Enabling-HTTPS&quot;&gt;bitwarden_rs directly&lt;/a&gt; or using a third-party reverse proxy (&lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Proxy-examples&quot;&gt;some examples&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;If you have an available domain name, you can get HTTPS certificates with &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let&#39;s Encrypt&lt;/a&gt;, or you can generate self-signed certificates with utilities like &lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;mkcert&lt;/a&gt;. Some proxies automatically do this step, like Caddy (see examples linked above).&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki&quot;&gt;bitwarden_rs wiki&lt;/a&gt; for more information on how to configure and run the bitwarden_rs server.&lt;/p&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;To ask a question, offer suggestions or new features or to get help configuring or installing the software, please &lt;a href=&quot;https://bitwardenrs.discourse.group/&quot;&gt;use the forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you spot any bugs or crashes with bitwarden_rs itself, please &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/issues/&quot;&gt;create an issue&lt;/a&gt;. Make sure there aren&#39;t any similar issues open, though!&lt;/p&gt; 
&lt;p&gt;If you prefer to chat, we&#39;re usually hanging around at &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;#bitwarden_rs:matrix.org&lt;/a&gt; room on Matrix. Feel free to join us!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChonoN&quot;&gt;@ChonoN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/themightychris&quot;&gt;@themightychris&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>victornpb/deleteDiscordMessages</title>
      <link>https://github.com/victornpb/deleteDiscordMessages</link>
      <description>&lt;p&gt;Undiscord - Delete all messages in a Discord channel or DM (Easy and fast) Bulk delete&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Undiscord - Delete all messages in a Discord channel or DM&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install a &lt;strong&gt;browser extension&lt;/strong&gt; for managing &lt;strong&gt;user scripts&lt;/strong&gt; (skip if you already have one):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Chrome: &lt;a href=&quot;https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag&quot;&gt;Violentmonkey&lt;/a&gt; or &lt;a href=&quot;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&quot;&gt;Tampermonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Firefox: &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/greasemonkey/&quot;&gt;Greasemonkey&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/tampermonkey/&quot;&gt;Tampermonkey&lt;/a&gt;, or &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/violentmonkey/&quot;&gt;Violentmonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Safari: ~&lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages/issues/91#issuecomment-654514364&quot;&gt;Tampermonkey&lt;/a&gt;~&lt;/li&gt; 
   &lt;li&gt;Microsoft Edge: &lt;a href=&quot;https://www.microsoft.com/store/p/tampermonkey/9nblggh5162s&quot;&gt;Tampermonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Opera: &lt;a href=&quot;https://addons.opera.com/extensions/details/tampermonkey-beta/&quot;&gt;Tampermonkey&lt;/a&gt; or &lt;a href=&quot;https://addons.opera.com/extensions/details/violent-monkey/&quot;&gt;Violentmonkey&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Undiscord &lt;strong&gt;
    &lt;!-- raw HTML omitted --&gt;Install from OpenUserJS
    &lt;!-- raw HTML omitted --&gt; or 
    &lt;!-- raw HTML omitted --&gt;Install from GreasyFork
    &lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open 
   &lt;!-- raw HTML omitted --&gt;Discord
   &lt;!-- raw HTML omitted --&gt; in your &lt;strong&gt;browser&lt;/strong&gt; (Not the App) and go to the Channel/Conversation you want to delete&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;em&gt;Trash icon&lt;/em&gt; that was added in the &lt;em&gt;top right corner&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click on the blue buttons near &lt;strong&gt;Authorization&lt;/strong&gt;, &lt;strong&gt;Author&lt;/strong&gt; and &lt;strong&gt;Channel&lt;/strong&gt;.&lt;br&gt; &lt;em&gt;(Optional: getting &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authToken.md&quot;&gt;authToken&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authorId.md&quot;&gt;authorId&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/channelId.md&quot;&gt;channelId&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/messageId.md&quot;&gt;messageId&lt;/a&gt; manually)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;START&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3372598/86538983-b60c7980-becf-11ea-8cad-1a33950e77fc.gif&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made this tool just for you ❤️ , it would be awesome if you could just click the &lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages&quot;&gt;⭐️ Star button&lt;/a&gt; at the top!&lt;/p&gt; 
&lt;p&gt;If you have issues or just need help &lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages/issues&quot;&gt;open an issue here&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A few extra generous people asked for this, so here you can &lt;a href=&quot;https://www.buymeacoffee.com/vitim&quot;&gt;buy me a coffee&lt;/a&gt;. Thank you! You&#39;ll be in my special list ^_^&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;* Looking for the old Copy/Paste version? &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/copyPaste.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h4&gt;Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fastest script out there, it auto adjusts the delay to be the fastest your internet and discords allows!&lt;/li&gt; 
 &lt;li&gt;Easy interface with instructions&lt;/li&gt; 
 &lt;li&gt;Respect discord API rate limits&lt;/li&gt; 
 &lt;li&gt;Auto detect current &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authToken.md&quot;&gt;authToken&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authorId.md&quot;&gt;authorId&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/channelId.md&quot;&gt;channelId&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It can delete a specific &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/messageId.md&quot;&gt;range of messages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It can delete only &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/filters.md&quot;&gt;links or attached files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Comprehensive log of messages being deleted (with their content)&lt;/li&gt; 
 &lt;li&gt;Hide private information for taking screenshots&lt;/li&gt; 
 &lt;li&gt;Detects system messages and skips them like &quot;You started a voice call&quot;&lt;/li&gt; 
 &lt;li&gt;You can use your computer and discord while it is running (unlike macro key scripts)&lt;/li&gt; 
 &lt;li&gt;Start/stop whenever you want&lt;/li&gt; 
 &lt;li&gt;Works with even thousands of messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;Originally from https://gist.github.com/victornpb/135f5b346dea4decfc8f63ad7d9cc182&lt;/p&gt; 
&lt;hr&gt; 
&lt;h4&gt;About running code on your console&lt;/h4&gt; 
&lt;p&gt;I don&#39;t recommend running code from random places you get on the internet. For that same reason, I deliberately choose to make it readable (that&#39;s why it is a bit lenthy). That way people can analyze it and understand what does it does before running it, and be sure that nothing sketchy is happening under the hood.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;DO NOT SHARE YOUR &lt;code&gt;authToken&lt;/code&gt;!&lt;/h1&gt; 
&lt;p&gt;Sharing your authToken on the internet will give full access to your account! &lt;a href=&quot;https://github.com/rndinfosecguy/Scavenger&quot;&gt;There are bots gathering credentials all over the internet&lt;/a&gt;. If you post your token by accident, LOGOUT from discord on that &lt;strong&gt;same browser&lt;/strong&gt; you got that token imediately. Changing your password will make sure that you get logged out of every device. I advice that you turn on &lt;a href=&quot;https://support.discordapp.com/hc/en-us/articles/219576828-Setting-up-Two-Factor-Authentication&quot;&gt;2FA&lt;/a&gt; afterwards.&lt;/p&gt; 
&lt;p&gt;If you are unsure do not share screenshots, or copy paste logs on the internet.&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; THE SOFTWARE AND ALL INFORMATION HERE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
 &lt;p&gt;By using any code or information provided here you are agreeing to all parts of the above Disclaimer.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Bogdanp/awesome-advent-of-code</title>
      <link>https://github.com/Bogdanp/awesome-advent-of-code</link>
      <description>&lt;p&gt;A collection of awesome resources related to the yearly Advent of Code challenge.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Advent of Code&lt;/h1&gt; 
&lt;p&gt;This is a collection of awesome resources related to the yearly &lt;a href=&quot;https://adventofcode.com/&quot;&gt;Advent of Code&lt;/a&gt; challenge.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adventofcode.com/&quot;&gt;The Official AoC Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/&quot;&gt;The AoC Subreddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#project-templates&quot;&gt;Project Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#tools-and-utilities&quot;&gt;Tools and Utilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#other-advent-calendars&quot;&gt;Other Advent Calendars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/2018.md&quot;&gt;2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/2019.md&quot;&gt;2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#2020&quot;&gt;2020&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#solutions&quot;&gt;Solutions&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#awk&quot;&gt;AWK&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#ada&quot;&gt;Ada&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#Bash&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#c&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#c-1&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#c-2&quot;&gt;C++&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#clojure&quot;&gt;Clojure&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#common-lisp&quot;&gt;Common Lisp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#crystal&quot;&gt;Crystal&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#d&quot;&gt;D&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#dart&quot;&gt;Dart&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#elixir&quot;&gt;Elixir&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#elm&quot;&gt;Elm&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#erlang&quot;&gt;Erlang&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#f&quot;&gt;F#&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#go&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#groovy&quot;&gt;Groovy&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#haskell&quot;&gt;Haskell&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#haxe&quot;&gt;Haxe&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#idris&quot;&gt;Idris&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#J&quot;&gt;J&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#java&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#javascript&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#julia&quot;&gt;Julia&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#kotlin&quot;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#ldpl&quot;&gt;LDPL&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#nim&quot;&gt;Nim&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#ocaml&quot;&gt;OCaml&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#perl&quot;&gt;Perl&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#pony&quot;&gt;Pony&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#powershell&quot;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#prolog&quot;&gt;Prolog&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#python&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#r&quot;&gt;R&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#racket&quot;&gt;Racket&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#reasonml&quot;&gt;ReasonML&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#red&quot;&gt;Red&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#rust&quot;&gt;Rust&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#smalltalk&quot;&gt;Smalltalk&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#scala&quot;&gt;Scala&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#scheme&quot;&gt;Scheme&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#swift&quot;&gt;Swift&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#unison&quot;&gt;Unison&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#zig&quot;&gt;Zig&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/#live-streams&quot;&gt;Live Streams&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Project Templates&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Templates, cookiecutters and skeletons for quickly setting up projects in your favourite language.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dave-burke/advent-of-code-java-starter&quot;&gt;dave-burke/advent-of-code-java-starter&lt;/a&gt; &lt;em&gt;(Java)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gobanos/cargo-aoc&quot;&gt;gobanos/cargo-aoc&lt;/a&gt; &lt;em&gt;(Rust)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hughjdavey/aoc-kotlin-starter&quot;&gt;hughjdavey/aoc-kotlin-starter&lt;/a&gt; &lt;em&gt;(Kotlin)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kindermoumoute/adventofcode/tree/master/template&quot;&gt;kindermoumoute/adventofcode&lt;/a&gt; &lt;em&gt;(Go)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/staylorwr/elixir_aoc&quot;&gt;staylorwr/elixir_aoc&lt;/a&gt; &lt;em&gt;(Elixir)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhanberg/advent-of-code-elixir-starter&quot;&gt;mhanberg/advent-of-code-elixir-starter&lt;/a&gt; &lt;em&gt;(Elixir)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexeSimon/adventofcode&quot;&gt;AlexeSimon/adventofcode&lt;/a&gt; &lt;em&gt;(Python)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindrekjr/AdventOfCodeBase&quot;&gt;sindrekjr/AdventOfCodeBase&lt;/a&gt; &lt;em&gt;(C#)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhanberg/advent-of-code-clojure-starter&quot;&gt;mhanberg/advent-of-code-clojure-starter&lt;/a&gt; &lt;em&gt;(Clojure)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/caderek/aoc-starter-js&quot;&gt;caderek/aoc-starter-js&lt;/a&gt; &lt;em&gt;(JavaScript)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/caderek/aoc-starter-ts&quot;&gt;caderek/aoc-starter-ts&lt;/a&gt; &lt;em&gt;(TypeScript)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariotacke/template-advent-of-code&quot;&gt;mariotacke/template-advent-of-code&lt;/a&gt; &lt;em&gt;(JavaScript)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arkadye/advent_of_code_framework&quot;&gt;arkadye/advent_of_code&lt;/a&gt; &lt;em&gt;(C++)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eduherminio/AdventOfCode.Template&quot;&gt;eduherminio/AdventOfCode.Template&lt;/a&gt; &lt;em&gt;(C#)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tools and Utilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alfie.prodo.ai/&quot;&gt;Alfie&lt;/a&gt; -- Online JS editor that helps users solve AoC problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/advent-of-code-ranking/jbnlafikncgjjhdkmfhokcplgahebmjl&quot;&gt;Chrome extension&lt;/a&gt; -- Browser extension for private leaderboard visualization&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/aoc-ranking/&quot;&gt;Firefox extension&lt;/a&gt; -- Browser extension for private leaderboard visualization&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.maurits.vdschee.nl/scatterplot/medals.html&quot;&gt;Globals medals overview&lt;/a&gt; -- Alternative global leaderboard showing first, second and third places as gold, silver and bronze medals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.maurits.vdschee.nl/scatterplot/&quot;&gt;Scatterplot of first 100&lt;/a&gt; -- Scatterplot of the time taken to solve the parts of each puzzle by the first 100 people that solved it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GreenLightning/advent-of-code-downloader&quot;&gt;aocdl&lt;/a&gt; -- Command-line utility that automatically downloads your personal input file while you read the puzzle description &lt;em&gt;(Go)&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keirua/aoc-cli&quot;&gt;aoc-cli&lt;/a&gt; -- Command-line utility that helps solve problems in ruby: it downloads your personal input file, creates the sample source files and benchmarks your solutions &lt;em&gt;(Ruby)&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eduherminio/AoCHelper&quot;&gt;AoCHelper&lt;/a&gt; -- NuGet library that simplifies puzzle solving and provides benchmarking &lt;em&gt;(.NET)&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scarvalhojr/aocleaderboard&quot;&gt;aocleaderboard&lt;/a&gt; -- get over the 200-member limit for private leaderboards and combine multiple leaderboards in a single page with recalculated scores.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Advent Calendars&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;24 days of cool stuff regarding 
  &lt;!-- raw HTML omitted --&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://perl6advent.wordpress.com/&quot;&gt;Perl6 Advent Calendar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.qemu-advent-calendar.org/&quot;&gt;QEMU Advent Calendar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;2020&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; All of these likely contain spoilers.&lt;/p&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/Bogdanp/awesome-advent-of-code/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; to learn how to add your own repos.&lt;/p&gt; 
&lt;h3&gt;Solutions&lt;/h3&gt; 
&lt;h4&gt;AWK&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in AWK.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Ada&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Ada.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Bash&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Bash.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;C&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in C.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;C#&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in C#.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eduherminio/AoC2020&quot;&gt;eduherminio/AoC2020&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--28-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;C++&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in C++.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kazhuu/advent-of-code-2020&quot;&gt;Kazhuu/advent-of-code-2020&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--29-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DarthGandalf/advent-of-code&quot;&gt;DarthGandalf/advent-of-code&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--29-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Clojure&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Clojure.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Common Lisp&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Common Lisp.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Crystal&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Crystal.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;D&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in D.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Dart&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Dart.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Elixir&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Elixir.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Elm&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Elm and Literate Elm.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Erlang&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Erlang.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;F#&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in F#.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Go&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Groovy&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Groovy.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Haskell&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Haskell.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haskelling/aoc2020&quot;&gt;haskelling/aoc2020&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--21-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jitwit/aoc&quot;&gt;jitwit/aoc&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--29-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Haxe&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Haxe.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Idris&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Idris.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;J&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in J.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jitwit/aoc&quot;&gt;jitwit/aoc&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--29-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Java&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Java.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in JavaScript.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariotacke/advent-of-code-2020&quot;&gt;mariotacke/advent-of-code-2020&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--26-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Julia&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Julia.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Kotlin&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Kotlin.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;LDPL&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in LDPL.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Nim&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Nim.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;OCaml&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in OCaml.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;PHP&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in PHP.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Perl&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Perl.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Pony&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Pony.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Prolog&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Prolog.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;PowerShell&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in PowerShell.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Python&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Python.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IanFindlay/advent-of-code&quot;&gt;IanFindlay/advent-of-code&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--01--13-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;R&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in R.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Racket&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Racket.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;ReasonML&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in ReasonML.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Red&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Red.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Ruby&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Ruby.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Rust&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Rust.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Smalltalk&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Smalltalk.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Scala&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Scala.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sim642/adventofcode&quot;&gt;sim642/adventofcode&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--28-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Scheme&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Scheme.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jitwit/aoc&quot;&gt;jitwit/aoc&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--29-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Swift&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Swift.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;TypeScript&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in TypeScript.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexAegis/advent-of-code&quot;&gt;AlexAegis/advent-of-code&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--21-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RubenVerg/aoc2020&quot;&gt;RubenVerg/aoc2020&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/last%20commit-2020--11--17-brightgreen&quot; alt=&quot;Last Commit on GitHub&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Unison&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Unison.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Zig&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Solutions to AoC in Zig.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Live Streams&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Folks who are live streaming their process.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quiec/WhatsAsena</title>
      <link>https://github.com/Quiec/WhatsAsena</link>
      <description>&lt;p&gt;WhatsAsena project - Makes it easy and fun to use Whatsapp. Also first userbot for Whatsapp&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/fusuf/whatsasena?style=flat-square&quot; alt=&quot;Docker Pulls&quot;&gt; &lt;img src=&quot;https://img.shields.io/docker/image-size/fusuf/whatsasena?style=flat-square&quot; alt=&quot;Docker Image Size (latest by date)&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;🇬🇧 English Support&lt;/h2&gt; 
&lt;p&gt;As of version 0.8, we added English language support. When deploying Heroku, only write &lt;code&gt;EN&lt;/code&gt; to LANGUAGE. &lt;a href=&quot;https://t.me/AsenaSupport&quot;&gt;Also for support &amp;amp; help please come our Telegram group.&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/Quiec/WhatsAsena/wiki/Set-Up&quot;&gt;Install Guide&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Həm də Azərbaycan dilində AZ yazmaq kifayətdir.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://crowdin.com/project/whatsasena&quot;&gt;You can translate other languages from Crowdin&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🔎 WhatsAsena nedir?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WhatsAsena,&lt;/strong&gt; &lt;a href=&quot;https://github.com/Quiec&quot;&gt;Yusuf Usta&lt;/a&gt; tarafından yazılmış WhatsApp yardımcı bir bottur. Hesabınıza giriş yapmaz; WhatsApp Web API üzerine yazılmıştır.&lt;/p&gt; 
&lt;h2&gt;Kurulum&lt;/h2&gt; 
&lt;h3&gt;Çok Basit Yöntem&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Üzerinde Çalışıyoruz...&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Basit Yöntem&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/Quiec/WhatsAsena&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Zor Yöntem&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;git clone https://github.com/Quiec/WhatsAsena.git
cd WhatsAsena
npm i
# Config.env oluşturun ve düzenleyin. #
node bot.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;S.S.S&lt;/h2&gt; 
&lt;p&gt;Sıkça gelen birkaç soruya cevap;&lt;/p&gt; 
&lt;h3&gt;Mesajlarımı okuyabilir misiniz?&lt;/h3&gt; 
&lt;p&gt;Bu proje açık kaynaklıdır yani tüm kodları bellidir. Ne eksik ne fazla; istediğinize bakabilirsiniz. &lt;strong&gt;Kesinlikle hesaplarınıza erişimimiz yok.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Peki güvenliğimiz?&lt;/h3&gt; 
&lt;p&gt;Güvenlik konusunda endişeleriniz varsa kendi bilgisayarınıza kurabilirsiniz. Eğer başkası verilerinizi ele geçirdiğini düşünüyorsanız &lt;strong&gt;Whatsapp &amp;gt; Üç Nokta &amp;gt; Whatsapp Web &amp;gt; Tüm oturumlardan çıkış yap&lt;/strong&gt; butonuna tıklamanız yeterlidir.&lt;/p&gt; 
&lt;h3&gt;Ücretli mi?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Tabii ki de hayır. Asla da olmayacak.&lt;/strong&gt; Ama bize bağış yapabilirsiniz. &lt;a href=&quot;https://t.me/fusuf&quot;&gt;Telegram&lt;/a&gt; üzerinden bana ulaşabilirsiniz.&lt;/p&gt; 
&lt;h3&gt;Asena ne demek?&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://tr.wikipedia.org/wiki/Asena&quot;&gt;Asena&lt;/a&gt;, Türk mitolojisinden gelmektedir. Türk mitolojisine göre Asena önemli bir rol oynayan dişi kurttur.&lt;/p&gt; 
&lt;h3&gt;⚠️ Uyarı!&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Userbottan dolayı; WhatsApp hesabınız yasaklanabilir.
Bu bir açık kaynaklı projedir, yaptığınız her işlemden kendiniz sorumlusunuz. Kesinlikle Asena yöneticileri sorumluluk kabul etmemektedir.
Asenayı kurarak bu sorumlulukları kabul etmiş sayılırsınız.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Geliştiriciler&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://quiec.tech&quot;&gt;&lt;img src=&quot;https://github.com/quiec.png?size=100&quot; alt=&quot;Yusuf Usta&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/xacnio&quot;&gt;&lt;img src=&quot;https://github.com/xacnio.png?size=100&quot; alt=&quot;Alperen Ç&quot;&gt;&lt;/a&gt; ---|--- &lt;a href=&quot;https://t.me/fusuf&quot;&gt;Yusuf Usta&lt;/a&gt; | &lt;a href=&quot;https://t.me/xacnio&quot;&gt;Alperen Ç&lt;/a&gt; Taban, Geliştirme, Fikir, Modüller |&amp;nbsp;Hata Düzeltmeleri, Modüller&lt;/p&gt; 
&lt;h2&gt;Thanks To&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/adiwajshing&quot;&gt;@adiwajshing&lt;/a&gt; for coded &lt;a href=&quot;https://github.com/adiwajshing/Baileys&quot;&gt;Baileys&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/itacirgabral&quot;&gt;@itacirgabral&lt;/a&gt; for helps&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Ikarus#7808 (Discord)&lt;/code&gt; for helps&lt;/p&gt; 
&lt;h2&gt;Lisans&lt;/h2&gt; 
&lt;p&gt;Bu proje &lt;code&gt;GNU General Public Licence v3.0&lt;/code&gt; lisansı ile korunmaktadır.&lt;/p&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;WhatsApp&lt;/code&gt; name, its variations and the logo are registered trademarks of Facebook. We have nothing to do with the registered trademark&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>btholt/complete-intro-to-react-v5</title>
      <link>https://github.com/btholt/complete-intro-to-react-v5</link>
      <description>&lt;p&gt;The Complete Intro to React, the fifth version&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;All PRs and issues for the course code and website have been resolved as of November 29th, 2019. The code for each commit and branch has also been tested! 😀&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome to the Complete Intro to React v5 and Intermediate React v2!&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://bit.ly/react-v5&quot;&gt;See the course website here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before starting the course, please have &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt; or another code editor installed.&lt;/p&gt; 
&lt;p&gt;The master branch and commits within are all covered in &lt;a href=&quot;https://frontendmasters.com/courses/complete-react-v5/&quot;&gt;Introduction to React v5&lt;/a&gt;. The other branches, excluding the &lt;a href=&quot;https://github.com/btholt/complete-intro-to-react-v5/tree/gh-pages-src&quot;&gt;gh-pages-src&lt;/a&gt; and gh-pages branches (these create the &lt;a href=&quot;https://bit.ly/react-v5&quot;&gt;course website&lt;/a&gt;), are all covered in &lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react-v2/&quot;&gt;Intermediate React&lt;/a&gt; as modular segments that can be taken individually, or out of order.&lt;/p&gt; 
&lt;p&gt;Brian is using a font called &lt;a href=&quot;https://dank.sh/&quot;&gt;Dankmono&lt;/a&gt; (not necessary to install -- just for those curious), but &lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;FiraCode&lt;/a&gt; is another great option. This course was written for and recorded by &lt;a href=&quot;https://frontendmasters.com/&quot;&gt;Frontend Masters&lt;/a&gt;. The code here is licensed under the Apache 2.0 license and the &lt;a href=&quot;https://bit.ly/react-v5&quot;&gt;course notes&lt;/a&gt; are licensed under the Creative Commons Attribution-NonCommercial 4.0 International license.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;h3&gt;npm install Issues:&lt;/h3&gt; 
&lt;p&gt;Try running &lt;code&gt;npm upgrade&lt;/code&gt; before &lt;code&gt;npm install&lt;/code&gt; to update package.json dependencies.&lt;/p&gt; 
&lt;h3&gt;Parcel Issues:&lt;/h3&gt; 
&lt;p&gt;Parcel is an ever evolving project that&#39;s just getting better. If you run into problems with it not respecting changes (particularly to your &lt;code&gt;.babelrc&lt;/code&gt; or &lt;code&gt;.env&lt;/code&gt; files) then delete the &lt;code&gt;dist/&lt;/code&gt; and the &lt;code&gt;.cache/&lt;/code&gt; directories. You can do this in bash by running from the root directoy of your project &lt;code&gt;rm -rf dist/ .cache/&lt;/code&gt; or just by deleting those directories in your editor. This will force Parcel to start over and not cache anything.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/btholt/complete-intro-to-react-v4/issues/3#issuecomment-425124265&quot;&gt;this issue&lt;/a&gt; for more specific instructions.&lt;/p&gt; 
&lt;h3&gt;Solution to &quot;regeneratorRuntime is not defined&quot;&lt;/h3&gt; 
&lt;p&gt;The simplest solution is to cut the supported browsers list in your &lt;code&gt;package.json&lt;/code&gt; file down to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    &quot;browserslist&quot;: [
        &quot;last 2 Chrome versions&quot;,
    ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is a more involved solution if you want to &lt;a href=&quot;https://github.com/btholt/complete-intro-to-react-v5/issues/58#issuecomment-559882582&quot;&gt;support more browsers in the issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you run into anything else, open an issue and we&#39;ll try to clarify or help!&lt;/p&gt; 
&lt;h2&gt;See a Bug or Typo?&lt;/h2&gt; 
&lt;p&gt;Pull requests are extremely welcome! If you see a typo in the course website, you can access the website code through the &lt;a href=&quot;https://github.com/btholt/complete-intro-to-react-v5/tree/gh-pages-src&quot;&gt;gh-pages-src&lt;/a&gt; branch of this repository.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Orz-3/QuantumultX</title>
      <link>https://github.com/Orz-3/QuantumultX</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;QuantumultX小白配置&lt;/h2&gt; 
&lt;h3&gt;配置说明：&lt;/h3&gt; 
&lt;p&gt;本配置由神机规则修改而来，修改了默认策略组，增加了正则筛选策略组，并集成了Nobyda的去广告脚本和重写，同时集合了大量task类签到脚本，默认皆为禁用，可按需求启用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;补充说明：&lt;/h3&gt; 
&lt;p&gt;喜欢简洁的可以使用Orz-3lite.conf，去掉了正则筛选和部分策略组，如果你是自建节点，请务必选择这个
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;使用方法：&lt;/h3&gt; 
&lt;p&gt;1.点击库中的Orz-3.conf文件，点击raw获取真实地址，复制地址备用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;2.Quan X主界面，点击右下角风车，然后弹出界面下拉至 配置文件-下载，点击下载，将上一步复制的地址粘贴到弹出窗口，然后点确定
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;3.Quan X主界面，点击右下角风车，然后弹出界面下拉至 Mitm ，点击生成证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;4.然后回到Quan X，继续点击配置证书，根据提示安装证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;5.安装成功后启用证书，并到系统的 设置-通用-关于本机 点击信任证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;6.打开重写和Mitm
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;7.添加节点/订阅，并左滑添加订阅标签（重要，不添加标签是无法筛选的）
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;8.开始使用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;注意事项：&lt;/h3&gt; 
&lt;p&gt;1.默认16个策略组，其中8个为正则筛选，分别将 香港，台湾，新加坡，美国，日本和韩国地区节点筛选出来，同时把IPLC或IEPL这种高倍率的游戏，或禁止下载的节点单独放进了IPLC策略组中，其余地区节点则放进了特殊地区策略组中
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;2.其余8个策略组均是套用上面的筛选策略组，因此请先确定8个地区策略中选中的节点可用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;3.分流中，已将动画疯默认为台湾地区
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;4.集成了Nobyda库中的去广告类js
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;5.集成大量task，默认皆为禁用，请根据需求启用，启用需额外在重写中启用JS-GetCookie，并按脚本中说明获取cookie方可用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;6.如果你购买Quantumult X还不足30天，无法一键更新，在启用Get-Cookie时，请搜索并单独缓存你需要的获取cookie脚本
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;7.默认已解锁Tiktok
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h6&gt;配置中内容收集整理自以下大佬 （Task脚本由于作者，贡献者众多，这里仅标出我采集脚本的库，同样感谢未能标出的各位贡献者）&lt;/h6&gt; 
&lt;h4&gt;特别感谢：&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ConnersHua&quot;&gt;@ConnersHua&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/KOP-XIAO&quot;&gt;@KOP-XIAO&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JasonLee-Go&quot;&gt;@JasonLee-Go&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;JS脚本作者：&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/yichahucha&quot;&gt;@yichahucha&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/onewayticket255&quot;&gt;@onewayticket255&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Choler&quot;&gt;@Choler&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Task脚本作者：&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Peng-YM&quot;&gt;@Peng-YM&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/zZPiglet&quot;&gt;@zZPiglet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Sunert&quot;&gt;@Sunert&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lowking&quot;&gt;@lowking&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/songyangzz&quot;&gt;@songyangzz&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/toulanboy&quot;&gt;@toulanboy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/lxk0301&quot;&gt;@lxk0301&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://ooxx.be/js/&quot;&gt;@vinewx&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chouchoui&quot;&gt;@chouchoui&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/evilbutcher&quot;&gt;@evilbutcher&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/id77&quot;&gt;@id77&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/dompling&quot;&gt;@dompling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/iepngs&quot;&gt;@iepngs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/barrym-chen&quot;&gt;@barrym-chen&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/iisams&quot;&gt;@iisams&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/congcong0806&quot;&gt;@congcong0806&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/XidNDD&quot;&gt;@XidNDD&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wangdelu2020&quot;&gt;@wangdelu2020&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/passerby-b&quot;&gt;@passerby-b&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/photonmang&quot;&gt;@photonmang&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 concepts every JavaScript developer should know.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;﻿
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&amp;lt;img src=&quot;https://i.imgur.com/dsHmk6H.jpg&quot; alt=&quot;33 Concepts Every JS Developer Should Know&quot; width=200&quot;&amp;gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 33 Concepts Every JavaScript Developer Should Know 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/leonardomso&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/leonardomso.svg?style=for-the-badge&quot; alt=&quot;Follow me&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by &lt;a href=&quot;https://twitter.com/stephenthecurt&quot;&gt;Stephen Curtis&lt;/a&gt; and you can read it &lt;a href=&quot;https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href=&quot;https://blog.github.com/2018-12-13-new-open-source-projects/&quot;&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eldrinf/33-js-concepts-albanian.git&quot;&gt;Albanian&lt;/a&gt; — Eldrin Ereqi&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amrsekilly/33-js-concepts&quot;&gt;Arabic&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephentian/33-js-concepts&quot;&gt;Chinese&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tiagoboeing/33-js-concepts&quot;&gt;Portuguese-BR&lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yjs03057/33-js-concepts.git&quot;&gt;Korean&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adonismendozaperez/33-js-conceptos&quot;&gt;Spanish&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilker0/33-js-concepts&quot;&gt;Turkish&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gumennii/33-js-concepts&quot;&gt;Russian&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyentranchung/33-js-concepts&quot;&gt;Tiếng Việt&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lip3k/33-js-concepts&quot;&gt;Polish&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majidalavizadeh/33-js-concepts&quot;&gt;Persian&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rijdz/33-js-concepts&quot;&gt;Indonesian&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robinmetral/33-concepts-js&quot;&gt;French&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vikaschauhan/33-js-concepts&quot;&gt;Hindi&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimitrisZx/33-js-concepts&quot;&gt;Greek&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oimo23/33-js-concepts&quot;&gt;Japanese&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/burhannn/33-js-concepts&quot;&gt;German&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation&quot;&gt;Ukrainian&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ududsha/33-js-concepts&quot;&gt;Sinhala&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Donearm/33-js-concepts&quot;&gt;Italian&lt;/a&gt; - Gianluca Fiore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack&quot;&gt;Call Stack&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types&quot;&gt;Primitive Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types&quot;&gt;Value Types and Reference Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing&quot;&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof&quot;&gt;== vs === vs typeof&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope&quot;&gt;Function Scope, Block Scope and Lexical Scope&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement&quot;&gt;Expression vs Statement&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces&quot;&gt;IIFE, Modules and Namespaces&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop&quot;&gt;Message Queue and Event Loop&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe&quot;&gt;setTimeout, setInterval and requestAnimationFrame&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines&quot;&gt;JavaScript Engines&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers&quot;&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees&quot;&gt;DOM and Layout Trees&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes&quot;&gt;Factories and Classes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind&quot;&gt;this, call, apply and bind&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances&quot;&gt;new, Constructor, instanceof and Instances&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain&quot;&gt;Prototype Inheritance and Prototype Chain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign&quot;&gt;Object.create and Object.assign&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter&quot;&gt;map, reduce, filter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-and-state-mutation&quot;&gt;Pure Functions, Side Effects and State Mutation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures&quot;&gt;Closures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions&quot;&gt;High Order Functions&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion&quot;&gt;Recursion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators&quot;&gt;Collections and Generators&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises&quot;&gt;Promises&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait&quot;&gt;async/await&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures&quot;&gt;Data Structures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation&quot;&gt;Expensive Operation and Big O Notation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms&quot;&gt;Algorithms&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse&quot;&gt;Inheritance, Polymorphism and Code Reuse&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns&quot;&gt;Design Patterns&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe&quot;&gt;Partial Applications, Currying, Compose and Pipe&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code&quot;&gt;Clean Code&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec&quot;&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4&quot;&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://web.archive.org/web/20180701233338/https://www.valentinog.com/blog/js-execution-context-call-stack/&quot;&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0&quot;&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Call_stack&quot;&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0&quot;&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf&quot;&gt;How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o&quot;&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w6QGEiQceOM&quot;&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=W8AeMrVtFLY&quot;&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jT0USJeNFEA&quot;&gt;JavaScript Execution Stack — Codecademy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w7QWQlkLY_s&quot;&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Q2sFmqvpBe0&quot;&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD&quot;&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Nt-qa_LlUH0&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ygA5U7Wgsg8&quot;&gt;La PILA DE EJECUCIÓN (Call Stack) de JavaScript — La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2012/04/number-encoding.html&quot;&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascripts-number-type-8d59199db1b6&quot;&gt;What You Need to Know About JavaScript Number Type — Max Wizard K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/&quot;&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/&quot;&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flow.org/en/docs/types/primitives/&quot;&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d4nyll/not-everything-in-javascript-is-an-object&quot;&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12&quot;&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c&quot;&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9ooYYRLdg_g&quot;&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HsbWQsSCE5Y&quot;&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-_mDyqm2oU&quot;&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qw3j0A3DIzQ&quot;&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=MqHDDtVYJRI&quot;&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=B4Bbmei_thw&quot;&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cC65D2q5f8I&quot;&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0&quot;&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zsoltnagy.eu/understand-value-and-reference-types-in-javascript/&quot;&gt;Understand Value and Reference Types in JavaScript — Zsolt Nagy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c&quot;&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851&quot;&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18&quot;&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293&quot;&gt;Grasp “By Value” and “By Reference” in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0&quot;&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/&quot;&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value&quot;&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f&quot;&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=E-dAnFdq8k8&quot;&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fD0t_DKREbE&quot;&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AvkyOrWkuQc&quot;&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23&quot;&gt;What you need to know about Javascript&#39;s Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839&quot;&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-coercion-explained-545c895213d3&quot;&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript&quot;&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed/types%20%26%20grammar&quot;&gt;You Don&#39;t Know JS: Types &amp;amp; Grammar, 1st Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thedevs.network/blog/type-coercion-in-javascript-and-why-everyone-gets-it-wrong&quot;&gt;Type Coercion in JavaScript, and why everyone gets it wrong.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t&quot;&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=b04Q_vyqEG8&quot;&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=z4-8wMSPJyI&quot;&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=C5fr0LZLMAs&quot;&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ei4nb49GKo&quot;&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a&quot;&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bytearcher.com/articles/equality-comparison-operator-javascript/&quot;&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/javascript/tutorial/double-equals-and-coercion-in-javascript&quot;&gt;== vs === JavaScript: Double Equals and Coercion — AJ Meyghani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.impressivewebs.com/why-use-triple-equals-javascipt/&quot;&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript&quot;&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object&quot;&gt;Why javascript&#39;s typeof always return &quot;object&quot;? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://tobyho.com/2011/01/28/checking-types-in-javascript/&quot;&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://webbjocke.com/javascript-check-data-types/&quot;&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html&quot;&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ol_su88I3kw&quot;&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qPYhTPt_SbQ&quot;&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures&quot;&gt;You Don&#39;t Know JS Yet: Scope &amp;amp; Closures, 2nd Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99&quot;&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/&quot;&gt;The battle between Function Scope and Block Scope — Marius Herring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html&quot;&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe&quot;&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://edgecoders.com/function-scopes-and-block-scopes-in-javascript-25bbd7f293d7&quot;&gt;Function Scopes and Block Scopes in JavaScript — Samer Buna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://ryanmorr.com/understanding-scope-and-context-in-javascript/&quot;&gt;Understanding Scope and Context in JavaScript | Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/javascript-scope-closures/&quot;&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/&quot;&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://speakingjs.com/es5/ch16.html&quot;&gt;Speaking JavaScript - Variables: Scopes, Environments, and Closures — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-scope-in-javascript&quot;&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0&quot;&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai&quot;&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and “this” ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SBwoFkRjZvE&quot;&gt;What Makes Javascript Weird ... and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dhp57T3p760&quot;&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aK_nuUAdr8E&quot;&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhNA0r10MmA&quot;&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2&quot;&gt;All you need to know about Javascript&#39;s Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/function-expressions-vs-declarations/&quot;&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38&quot;&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052&quot;&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/&quot;&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=WVyCrI1cHi8&quot;&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3jDpNGJkupA&quot;&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oB5rH_9bqAI&quot;&gt;Function Statements and Function Expressions — Codeacademy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6&quot;&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hashnode.com/post/do-es6-modules-make-the-case-of-iifes-obsolete-civ96wet80scqgc538un20es0&quot;&gt;Do ES6 Modules make the case of IIFEs obsolete?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/&quot;&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive — Lin Clark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/understanding-es6-modules/&quot;&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/&quot;&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-modules-in-depth&quot;&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b&quot;&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc&quot;&gt;JavaScript Modules: A Beginner’s Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot;&gt;Using JavaScript modules on the web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-from-iifes-to-commonjs-to-es6-modules-4d10c16f55d4&quot;&gt;JavaScript Modules: From IIFEs to CommonJS to ES6 Modules — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5&quot;&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3cbiZV4H22c&quot;&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=I5EntfMeIIQ&quot;&gt;Understanding JavaScript IIFE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=_3oSWwapPKQ&quot;&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aQr2bV1BPyE&quot;&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fIP4pjAqCtQ&quot;&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5P04OK6KlXA&quot;&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4&quot;&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot;&gt;The JavaScript Event Loop: Explained — Erin Sweson-Healey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.wptutor.io/web/js/javascript-event-loop&quot;&gt;What is the Event Loop in Javascript — WP Tutor.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40&quot;&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zeolearn.com/magazine/understanding-the-javascript-event-loop&quot;&gt;Understanding the JavaScript Event Loop — Ashish Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/what-the-heck-is-event-loop-1e414fccef49&quot;&gt;Event Loop in Javascript — Manjula Dube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-event-loop/&quot;&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&quot;&gt;How JavaScript works: Event loop — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8&quot;&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif&quot;&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XzXIMZMN9k4&quot;&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6MXRNXXgP_0&quot;&gt;I&#39;m stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cCOL7MC4Pl0&quot;&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Eqq2Rb7LzYE&quot;&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/settimeout-setinterval&quot;&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9&quot;&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://develoger.com/settimeout-vs-setinterval-cff85142555b&quot;&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/using-requestanimationframe/&quot;&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascriptkit.com/javatutors/requestanimationframe.shtml&quot;&gt;Understanding JavaScript&#39;s requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/&quot;&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6bPKyl8WYWI&quot;&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=TbCgGWe8LN8&quot;&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0VVJSvlUgtg&quot;&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mVKfrWCOB60&quot;&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.softwaremag.com/javascript-engines/&quot;&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964&quot;&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&quot;&gt;Understanding V8’s Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.mediacurrent.com/blog/brief-history-googles-v8-javascript-engine/&quot;&gt;A Brief History of Google’s V8 Javascript Engine — Clair Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553&quot;&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/shapes-ics&quot;&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://v8.dev/blog/elements-kinds&quot;&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5nmpokoRaZI&quot;&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4&quot;&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5&quot;&gt;Using JavaScript’s Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.w3resource.com/javascript/operators/bitwise-operator.php&quot;&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3&quot;&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04&quot;&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript&quot;&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mesu75PTDC8&quot;&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/introduction-to-the-dom&quot;&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d&quot;&gt;What’s the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html&quot;&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/dom/&quot;&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://zellwk.com/blog/dom-traversals/&quot;&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/14_dom.html&quot;&gt;Eloquent JavaScript [Book] — The Document Object Model&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/dom-nodes&quot;&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e&quot;&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot;&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bitsofco.de/what-exactly-is-the-dom/&quot;&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bouhm/a-vanilla-js-guide-on-mastering-the-dom-3l9b&quot;&gt;A Vanilla JS Guide On Mastering the DOM — Brian Pak&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FIORjGvT0kk&quot;&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ik6X4DJKCc&quot;&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript&quot;&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677&quot;&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.javascriptjanuary.com/blog/es6-classes&quot;&gt;ES6 Classes — Nathaniel Foster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes&quot;&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd&quot;&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://atendesigngroup.com/blog/factory-functions-javascript&quot;&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9&quot;&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15&quot;&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a&quot;&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jordankasper.com/understanding-super-in-javascript&quot;&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm&quot;&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jpegXpQpb3o&quot;&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ImwrezYhw4w&quot;&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=R7-IwpH80UE&quot;&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b&quot;&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/niladrisekhardutta/how-to-call-apply-and-bind-in-javascript-8i1jca6jp&quot;&gt;How-to: call() , apply() and bind() in JavaScript — Niladri Sekhar Dutta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/&quot;&gt;JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/this-keyword-call-apply-bind-javascript/&quot;&gt;WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb&quot;&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b&quot;&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce&quot;&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/&quot;&gt;Mastering &#39;this&#39; in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo&quot;&gt;JavaScript’s apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb&quot;&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.hacksparrow.com/javascript-bind-vs-apply-and-call.html&quot;&gt;JavaScript .bind() vs .apply() and .call() — Hack Sparrow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.brew.com.hk/what-is-this-in-javascript/&quot;&gt;What is &#39;this&#39; in JavaScript? — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja&quot;&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8&quot;&gt;Understanding the “this” Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8&quot;&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1&quot;&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam&quot;&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf&quot;&gt;3 Techniques for Maintaining Your Sanity Using &quot;This&quot; in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa&quot;&gt;Mastering the JavaScript &quot;this&quot; Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n&quot;&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp&quot;&gt;A quick intro to &#39;this&#39; in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/cat__logic/explaining-javascript-this-to-my-cat-1kig&quot;&gt;Explaining JavaScript &#39;this&#39; to my cat — Andrey K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g&quot;&gt;A conversation with the &#39;this&#39; keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jscurious.com/what-are-call-apply-and-bind-in-javascript/&quot;&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=c0mLRpw-9rI&quot;&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AYVYxezrMWA&quot;&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uy0NOXLBraE&quot;&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AOSYY1_np_4&quot;&gt;Understanding Functions and &#39;this&#39; In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhbhD1HR5vk&quot;&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uBdH0iB1VDM&quot;&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e&quot;&gt;JavaScript For Beginners: the ‘new’ operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c&quot;&gt;Let’s demystify JavaScript’s ‘new’ keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/constructor-new&quot;&gt;Constructor, operator &quot;new&quot; — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/understanding-javascript-constructors/&quot;&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions&quot;&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2017/08/type-right.html&quot;&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appendto.com/2016/10/what-is-the-instanceof-operator-in-javascript/&quot;&gt;What Is the Instanceof Operator in JavaScript — appendTo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac&quot;&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b&quot;&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-prototype-cb29d82b8809&quot;&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/sandeepranjan2007/prototype-in-javascipt-knbve0lqo&quot;&gt;Prototype in Javascript — Sandeep Ranjan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/prototypes-in-javascript-5bba2990e04b&quot;&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872&quot;&gt;Prototype in JavaScript: it’s quirky, but here’s how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2&quot;&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d&quot;&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl&quot;&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/prototype-inheritance&quot;&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript&quot;&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e&quot;&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed/this%20%26%20object%20prototypes&quot;&gt;You Don&#39;t Know JS: this &amp;amp; Object Prototypes, 1st Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4&quot;&gt;JavaScript’s Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/derhuerst/a585c4916b1c361cc6f0&quot;&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.competa.com/blog/classical-prototypical-inheritance-javascript/&quot;&gt;Classical and Prototypical Inheritance in JavaScript — Danny Cornelisse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&quot;&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/danny/intro-to-prototypal-inheritance---js-9di&quot;&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.brew.com.hk/classes-in-javascript-explained/&quot;&gt;Classes in JavaScript - Explained — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm&quot;&gt;Let’s Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b&quot;&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/shoupn/javascript-prototypes-and-object-creation-2onh&quot;&gt;JavaScript Prototypal Inheritance and Object Creation — Nick Shoup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg&quot;&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4&quot;&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie&quot;&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=sOrtAjyk4lQ&quot;&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7oNWNlMrkpc&quot;&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uIlj6_z_wL8&quot;&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qMO-LTOrJaE&quot;&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=G6l5CHl67HQ&quot;&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=phwzuiJJPpQ&quot;&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4jb4AYEyhRc&quot;&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2rkEbcptR64&quot;&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oCwCcNvaXAQ&quot;&gt;JavaScript Using Prototypes — O&#39;Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XskMWBXNbp0&quot;&gt;A Beginner&#39;s Guide to Javascript&#39;s Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hS_WqkyUah8&quot;&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/object-create-in-javascript-fa8674df6ed2&quot;&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html&quot;&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html&quot;&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.geeksforgeeks.org/object-create-javascript/&quot;&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358&quot;&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/&quot;&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/dealing-with-objects/&quot;&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/copying-objects-in-javascript&quot;&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-object-assign-bc9696dcbb6e&quot;&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/how-to-clone-javascript-object/&quot;&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nas5w/object-assignment-vs-primitive-assignment-in-javascript-for-beginners-2moi&quot;&gt;Object Assignment vs. Primitive Assignment in JavaScript for Beginners — Nick Scialli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/vzing/object-create-when-and-why-to-use-20m9&quot;&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aw7NfYhR5rc&quot;&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9Ky4X6inpi4&quot;&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d&quot;&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4&quot;&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter&quot;&gt;JavaScript’s Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209&quot;&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4&quot;&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf&quot;&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464&quot;&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f&quot;&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/functional-javascript-map-filter-reduce/&quot;&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/&quot;&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc&quot;&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26&quot;&gt;When (and why) you should use ES6 arrow functions — and when you shouldn’t — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946&quot;&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83&quot;&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@panderson.dev/javascript-reduce-79aab078da23&quot;&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gofore.com/en/why-you-should-replace-foreach/&quot;&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d&quot;&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/&quot;&gt;JavaScript’s Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160&quot;&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/map-filter-reduce-ebbed4be4201&quot;&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6&quot;&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26&quot;&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/&quot;&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f&quot;&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/pickleat/map-filter-and-reduce-2efb&quot;&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan&quot;&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47&quot;&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209&quot;&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24&quot;&gt;How to Use JavaScript’s .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://towardsdatascience.com/javascript-performance-test-for-vs-for-each-vs-map-reduce-filter-find-32c1113f19d7&quot;&gt;Javascript performance test - for vs for each vs (map, reduce, filter, find) — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2&quot;&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj&quot;&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=UXiYii0Y7Nw&quot;&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vytzLlY_wmU&quot;&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qTeeVd8hOFY&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=gIm9xLYudL0&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zYBeEPxNSbw&quot;&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4qWlqD0yYTU&quot;&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6sQDTgOqh-I&quot;&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s&quot;&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s&quot;&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl98eZpkp-c&quot;&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s&quot;&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=IXp06KekEjM&quot;&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=P4RAFdZDn3M&quot;&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects and State Mutation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c&quot;&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot;&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c&quot;&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/functional-programming-pure-functions/&quot;&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appdividend.com/2017/04/10/pure-functions-in-javascript/&quot;&gt;Pure Functions In Javascript — Krunal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alistapart.com/article/making-your-javascript-pure&quot;&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://slemgrim.com/mutate-or-not-to-mutate/&quot;&gt;To mutate, or not to mutate, in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa&quot;&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310&quot;&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/&quot;&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/preventing-sideeffects-javascript&quot;&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/wielding-pure-functions-in-javascript-and-function-composition&quot;&gt;Wielding Pure Functions in JavaScript and Function Composition — Peleke Sengstacke &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/javascript-pure-functions/&quot;&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1&quot;&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3&quot;&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08&quot;&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dZ41D6LDSBg&quot;&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Jh_Uzqzz_wM&quot;&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=frT3H-eBmPc&quot;&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AHbRVJzpB54&quot;&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8&quot;&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/closure&quot;&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/understand-javascript-closures-with-ease/&quot;&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-javascript-closures-da6aab330302&quot;&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understand-closures-in-javascript-d07852fa51e7&quot;&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4&quot;&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach&quot;&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b&quot;&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b&quot;&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example&quot;&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-closures-and-scope-3784c75b9290&quot;&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7&quot;&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/simplified-javascript-getting-started-with-closures-f40f65317d00&quot;&gt;Simplified JavaScript: Getting Started with Closures — Code Like A Girl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://reallifejs.com/the-meat/getting-closure/&quot;&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9&quot;&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda&quot;&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e&quot;&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/closures-using-memoization-3597&quot;&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232&quot;&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/stereobooster/demystify-closures-5g42&quot;&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj&quot;&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d&quot;&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://whatthefuck.is/closure&quot;&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/brandonleboeuf/closure-in-javascript-49n7&quot;&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XTAzsODSCsM&quot;&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=71AtaJpJHw0&quot;&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=CQqwU2Ixu-U&quot;&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-xqJo5VRP4A&quot;&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yiEeiMN2Khs&quot;&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1JsJx1x35c0&quot;&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-rLrGAXK8WE&quot;&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/05_higher_order.html&quot;&gt;Higher-Order Functions — Eloquent JavaScript [Book]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/higher-order-functions-javascript/&quot;&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528&quot;&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a&quot;&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.lullabot.com/articles/higher-order-functions-in-javascript&quot;&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/tag/higher-order-functions/&quot;&gt;Higher-order Functions — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.zsoltnagy.eu/higher-order-functions-in-javascript/&quot;&gt;Higher Order Functions in JavaScript — Zsolt Nagy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://derickbailey.com/2015/10/21/fun-with-higher-order-functions-in-javascript/&quot;&gt;Fun With Higher Order Functions In JavaScript — Derick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/pedroapfilho/high-order-functions&quot;&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad&quot;&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nas5w/what-is-a-higher-order-function-5gk9&quot;&gt;What is a Higher-Order Function? — Nick Scialli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb&quot;&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=rRgD1yVwIvE&quot;&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dTlpYnmBW9I&quot;&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GYRMNp1SKXA&quot;&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H4awPsyugS0&quot;&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7E8ctomPQJw&quot;&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=28MXziDZkE4&quot;&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f&quot;&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03&quot;&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea&quot;&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/recursion-functional-javascript/&quot;&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-recursion-31371e2bf808&quot;&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/simov/anonymous-recursion-in-javascript&quot;&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/&quot;&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.thecodingdelight.com/understanding-recursion-javascript/&quot;&gt;Understanding Recursion in JavaScript with Confidence — Jay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b&quot;&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datadriveninvestor/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3&quot;&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m&quot;&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VtG0WAUvq2w&quot;&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=k7-N8R0-KY4&quot;&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vLhHyGTkjCs&quot;&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=kGXVsd8pBLw&quot;&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uyjsR9eNTIw&quot;&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mv9NEXX1VHc&quot;&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9NO5dXSlbv8&quot;&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FmiQr4nfoPQ&quot;&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-collections/&quot;&gt;ES6 In Depth: Collections — Jason Orendorff&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/&quot;&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth&quot;&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/sets-introduction/&quot;&gt;Introduction to Sets in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/maps-introduction/&quot;&gt;Introduction to Maps in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/map-set-weakmap-weakset&quot;&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk&quot;&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a&quot;&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373&quot;&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/es6-working-with-sets-in-javascript/&quot;&gt;ES6: Working with Sets in JavaScript — Dead Code Rising&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b&quot;&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6&quot;&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e&quot;&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-maps-in-depth&quot;&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&quot;&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e&quot;&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5&quot;&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/es6-generators&quot;&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/parkroolucas/here-s-everything-you-d-want-to-know-about-es2015-generators-13an&quot;&gt;Here&#39;s everything you&#39;d want to know about ES2015+ generators — Lucas Chen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224&quot;&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ycohYSx5h9w&quot;&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=m4abICrldQI&quot;&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO07THdLWQo&quot;&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/javascript-promises-for-dummies&quot;&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1&quot;&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261&quot;&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/overview-javascript-promises/&quot;&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de&quot;&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51&quot;&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138&quot;&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_promises.html&quot;&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/&quot;&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918&quot;&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a&quot;&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/the-es6-promises-87a979ab27e4&quot;&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3&quot;&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8&quot;&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c&quot;&gt;A Coding Writer’s Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/full_stackgeek/asynchronous-javascript-callbacks-closures-promises-353h&quot;&gt;Asynchronous JavaScript | Callbacks | Closures | Promises — Full Stack Geek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/itnext/reverse-engineering-understand-promises-1jfc&quot;&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zellwk/converting-callbacks-to-promises-nhn&quot;&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa&quot;&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/promises-javascript-concepts-293c&quot;&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/iggredible/javascript-promise-101-3idl&quot;&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sunnysingh/simplify-javascript-promises-4djb&quot;&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-low-down-on-promises-af4a96bbb95f&quot;&gt;The Lowdown on Promises — Aphinya Dechalert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/peterklingelhofer/promises-in-javascript-3h5k&quot;&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/somedood/best-practices-for-es6-promises-36da&quot;&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vQ3MoXnKfuQ&quot;&gt;Let&#39;s Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XJEHuBZQ5dU&quot;&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2d7s3spWAzo&quot;&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=f8IgdnYIwOU&quot;&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO4NXhWo_NM&quot;&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c&quot;&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/11_async.html&quot;&gt;Asynchronous Programming — Eloquent JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/async-functions/&quot;&gt;Exploring Async/Await Functions in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/asynchronous-javascript-using-async-await&quot;&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-async-await/&quot;&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.toptal.com/javascript/asynchronous-javascript-async-await-tutorial&quot;&gt;Asynchronous JavaScript: From Callback Hell to Async and Await — Demir Selmanovic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a&quot;&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c&quot;&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;Understanding JavaScript’s async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://techbrij.com/javascript-async-await-parallel-sequence&quot;&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_async.html&quot;&gt;Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.pusher.com/promises-async-await/&quot;&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/flow-control-callbacks-promises-async-await/&quot;&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dzone.com/articles/javascript-promises-and-why-asyncawait-wins-the-ba&quot;&gt;JavaScript: Promises and Why Async/Await Wins the Battle — Nick Parsons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-master-async-await-with-this-real-world-example-19107e7558ad&quot;&gt;How To Master Async/Await With This Real World Example — Adrian Hajdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda&quot;&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6&quot;&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9&quot;&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b&quot;&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/joeyhub/async-await-a-slight-design-flaw-2h2j&quot;&gt;Async/await: A slight design flaw. — Joey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789&quot;&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22&quot;&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9YkUCxvaLEk&quot;&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SrNQS8J67zc&quot;&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6&quot;&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=krAYA4rvbdA&quot;&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c&quot;&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays&quot;&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot;&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d&quot;&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9&quot;&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/barretlee/algorithms&quot;&gt;All algorithms writing with JavaScript in the book &#39;Algorithms Fourth Edition&#39;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/nzakas/computer-science-in-javascript&quot;&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/jamiebuilds/itsy-bitsy-data-structures&quot;&gt;All the things you didn&#39;t know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/miku86/series/3259&quot;&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5&quot;&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61&quot;&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60&quot;&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn&quot;&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=PylQlISSH8U&amp;amp;list=PLujX4CIdBGCa-65N3uN8CDbUMrYsHBrz-&quot;&gt;Algorithms in JavaScript — Seth Koch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa&quot;&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ&quot;&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Ymh_AurrMbA&quot;&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b&quot;&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b&quot;&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051&quot;&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html&quot;&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jenniferbland.com/time-complexity-analysis-in-javascript/&quot;&gt;Time Complexity Analysis in JavaScript — Jennifer Bland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c&quot;&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o&quot;&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HgA5VOFan5E&quot;&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=KatlvCFHPRo&quot;&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ALl86xJiTD8&quot;&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/Crizstian/data-structure-and-algorithms-with-ES6&quot;&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms&quot;&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.thatjsdude.com/interview/js1.html&quot;&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038&quot;&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158&quot;&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/felipernb/algorithms.js&quot;&gt;Atwood&#39;s Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/idosela/algorithms-in-javascript&quot;&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/class-inheritance&quot;&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance&quot;&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f&quot;&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/simple-inheritance-javascript/&quot;&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-inheritance-25fe61ab9f85&quot;&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/&quot;&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/yld-engineering-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2&quot;&gt;Program Like Proteus — A beginner’s guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/&quot;&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yXlFR81tDBM&quot;&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RBLIm5LMrmc&quot;&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zdovG9cuEBA&quot;&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know&quot;&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15&quot;&gt;JavaScript Design Patterns – Beginner&#39;s Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81&quot;&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://seesparkbox.com/foundry/javascript_design_patterns&quot;&gt;Javascript Design Patterns: What They Are &amp;amp; How To Use Them — Patrick Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd&quot;&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/fbeline/Design-Patterns-JS&quot;&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8&quot;&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://addyosmani.com/resources/essentialjsdesignpatterns/book/&quot;&gt;Learning JavaScript Design Patterns — Addy Osmani &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e&quot;&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39&quot;&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca&quot;&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd&quot;&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p&quot;&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd&quot;&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/design-patterns-null-object-5ee839e37892&quot;&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/strategy-pattern-5oh&quot;&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/adapter-pattern-5bjk&quot;&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732&quot;&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bytebodger/in-defense-of-defensive-programming-k45&quot;&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.udacity.com/course/javascript-design-patterns--ud989&quot;&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hO7mzO83N1Q&quot;&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/michelre/use-function-composition-in-javascript-gkmxos5mj&quot;&gt;Use function composition in JavaScript — Rémi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.benestudio.co/currying-in-javascript-es6-540d2ad09400&quot;&gt;Currying in JavaScript ES6 — Adam Bene&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b&quot;&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10&quot;&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f&quot;&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://busypeoples.github.io/post/functional-composing-javascript/&quot;&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/&quot;&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/&quot;&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://vanslaars.io/post/create-pipe-function/&quot;&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/featured/practical-functional-javascript-ramda/&quot;&gt;Practical Functional JavaScript with Ramda — Andrew D&#39;Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574&quot;&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8&quot;&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://benalman.com/news/2012/09/partial-application-in-javascript/&quot;&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/partial-application-of-functions-dbe7d9b80760&quot;&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8&quot;&gt;Currying vs Partial Application — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://raganwald.com/2015/04/01/partial-application.html&quot;&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://joecortopassi.com/articles/functional-composition-in-javascript/&quot;&gt;Functional Composition in Javascript — Joe Cortopassi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536&quot;&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a&quot;&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7&quot;&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49&quot;&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a&quot;&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch3.md&quot;&gt;Functional-Light JavaScript Chapter 3: Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84&quot;&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa&quot;&gt;Concepts of Functional Programming in Javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064&quot;&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71&quot;&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj&quot;&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl2ejJOqHUU&quot;&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jigHxo9YR30&quot;&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mth5WpEc4Qs&quot;&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uam37AlzPYw&quot;&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VGB9HbL1GHk&quot;&gt;Let&#39;s code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=DzLkRsUN2vE&quot;&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jkebgHEcvac&quot;&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/&quot;&gt;JavaScript Clean Coding Best Practices — András Tóth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b&quot;&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/keeping-your-code-clean-d30bcffd1a10&quot;&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/modern-javascript-best-practices/&quot;&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/cross-js/cross-js&quot;&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ganderzz/on-writing-clean-code-57cm&quot;&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k&quot;&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm&quot;&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4&quot;&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mus_vwhTCq0&quot;&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RR_dQ4sBSBM&quot;&gt;Clean Code: Functions(Part 1) - Beau teaches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ahmadawais/create-node-cli</title>
      <link>https://github.com/ahmadawais/create-node-cli</link>
      <description>&lt;p&gt;📟 CLI to create new Node.js CLI applications in minutes not hours.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;📟 CLI to create new Node.js CLI applications. &lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;Learn to build Node.js CLI apps&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/create-node-cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/create-node-cli?label=DOWNLOADS%20%20%E2%9D%AF&amp;amp;colorA=6cc24a&amp;amp;colorB=6cc24a&amp;amp;style=flat&quot; alt=&quot;DOWNLOADS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nodecli.com/?utm_source=GitHubFOSS&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-NodeCLI.com%20%E2%86%92-gray.svg?colorB=6cc24a&amp;amp;style=flat&quot; alt=&quot;Learn Node.js CLI Automation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/mrahmadawais/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/FOLLOW%20@MRAHMADAWAIS%20%E2%86%92-gray.svg?colorA=6cc24a&amp;amp;colorB=6cc24a&amp;amp;style=flat&quot; alt=&quot;Follow @MrAhmadAwais on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;create-node-cli&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;📦 Create a Node.js CLI in a minute&lt;/li&gt; 
 &lt;li&gt;🤯 Automatic argument parsing, help text, and welcome message&lt;/li&gt; 
 &lt;li&gt;🗃️ History to maintain the last input data like the Author &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, and &lt;code&gt;URL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;👨‍🏫 Awais taught and created this CLI project in his &lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;NodeCLI.com&lt;/a&gt; automation course&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/install.png&quot; alt=&quot;📟&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Recommended.
npx create-node-cli

# OR an alternative global install.
npm install -g create-node-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/usage.png&quot; alt=&quot;⚙️&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run the CLI using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-node-cli

# OR for global install
create-node-cli
# OR alias for global install
ncli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Then answer the following questions to generate a Node.js CLI.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;CLI name?
CLI command?
CLI description?
CLI version?
CLI license?
CLI author name?
CLI author email?
CLI author URL?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;BASIC USAGE&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;create-node-cli &amp;lt;command&amp;gt; [option]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;COMMANDS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;help  Print help info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;OPTIONS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;-c, --clear    Clear the console Default: true
-d, --debug    Print debug info Default: false
-v, --version  Print CLI version Default: false
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ahmadawais/create-node-cli/master/changelog.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/log.png&quot; alt=&quot;📝&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ahmadawais/create-node-cli/master/changelog.md&quot;&gt;❯ Read the changelog here →&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;KEY&lt;/strong&gt;: &lt;code&gt;📦 NEW&lt;/code&gt;, &lt;code&gt;👌 IMPROVE&lt;/code&gt;, &lt;code&gt;🐛 FIX&lt;/code&gt;, &lt;code&gt;📖 DOC&lt;/code&gt;, &lt;code&gt;🚀 RELEASE&lt;/code&gt;, and &lt;code&gt;🤖 TEST&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;I use &lt;a href=&quot;https://github.com/ahmadawais/Emoji-Log&quot;&gt;Emoji-log&lt;/a&gt;, you should try it and simplify your git commits.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/license.png&quot; alt=&quot;📃&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License &amp;amp; Conduct&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT © &lt;a href=&quot;https://twitter.com/MrAhmadAwais/&quot;&gt;Ahmad Awais&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks Liran Tal for the npm pkg name&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ahmadawais/create-node-cli/master/code-of-conduct.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/connect.png&quot; alt=&quot;🙌&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Connect&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/images/git/sponsor.png&quot; alt=&quot;👌&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;Me (&lt;a href=&quot;https://twitter.com/mrahmadawais/&quot;&gt;Ahmad Awais&lt;/a&gt;) and my incredible wife (&lt;a href=&quot;https://twitter.com/MaedahBatool/&quot;&gt;Maedah Batool&lt;/a&gt;) are two engineers who fell in love with open source and then with each other. You can read more &lt;a href=&quot;https://ahmadawais.com/about&quot;&gt;about me here&lt;/a&gt;. If you or your company use any of my projects or like what I’m doing then consider backing me. I&#39;m in this for the long run. An open-source developer advocate.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AhmadAwais/sponsor&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/sponsor/sponsor.jpg&quot; alt=&quot;Support Open-Source Work&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;How to build a Node CLI?&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Or you can back me by checking out my super fun video course. After building hundreds of developer automation tools used by millions of developers, I am teaching exactly how you can do it yourself with minimum effective effort. Learn to build Node.js &amp;amp; JavaScript based CLI (Command Line Interface) apps &amp;amp; npm packages. Automate the grunt work, do more in less time, impress your manager, make more salary, and help the community. I&#39;m sharing it all in this step-by-step 100-videos course. &lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;Node CLI Automation without wasting a thousand hours&lt;/a&gt; →&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ahmadawais/stuff/master/nodecli/featured.jpg&quot; alt=&quot;NodeCLI.com&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodecli.com/?utm_source=FOSS&amp;amp;utm_medium=FOSS&amp;amp;utm_campaign=create-node-cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-NodeCLI.com%20%E2%86%92-gray.svg?colorB=488640&amp;amp;style=flat&quot; alt=&quot;Node CLI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/mrahmadawais/&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/mrahmadawais.svg?style=social&amp;amp;label=Follow%20@MrAhmadAwais&quot; alt=&quot;Ahmad on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>codetheweb/tuyapi</title>
      <link>https://github.com/codetheweb/tuyapi</link>
      <description>&lt;p&gt;🌧 An easy-to-use API for devices that use Tuya&#39;s cloud services. Documentation: https://codetheweb.github.io/tuyapi.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TuyAPI 🌧 🔌&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/xo&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-XO-5ed9c7.svg&quot; alt=&quot;XO code style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/codetheweb/tuyapi&quot;&gt;&lt;img src=&quot;https://travis-ci.org/codetheweb/tuyapi.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/codetheweb/tuyapi?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/codetheweb/tuyapi/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/node-%3E=8-blue.svg&quot; alt=&quot;Node Version&quot;&gt;&lt;/p&gt; 
&lt;p&gt;A library for communicating with devices that use the &lt;a href=&quot;http://tuya.com&quot;&gt;Tuya&lt;/a&gt; cloud network. These devices are branded under many different names, but if your device works with the TuyaSmart app or port 6668 is open on your device chances are this library will work.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;npm install codetheweb/tuyapi&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Basic Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/codetheweb/tuyapi/master/docs/SETUP.md&quot;&gt;setup instructions&lt;/a&gt; for how to find the needed parameters.&lt;/p&gt; 
&lt;p&gt;These examples should report the current status, set the default property to the opposite of what it currently is, then report the changed status. They will need to be adapted if your device does not have a boolean property at index 1 (i.e. it doesn&#39;t have an on/off property).&lt;/p&gt; 
&lt;h3&gt;Asynchronous (event based, recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const TuyAPI = require(&#39;tuyapi&#39;);

const device = new TuyAPI({
  id: &#39;xxxxxxxxxxxxxxxxxxxx&#39;,
  key: &#39;xxxxxxxxxxxxxxxx&#39;});

let stateHasChanged = false;

// Find device on network
device.find().then(() =&amp;gt; {
  // Connect to device
  device.connect();
});

// Add event listeners
device.on(&#39;connected&#39;, () =&amp;gt; {
  console.log(&#39;Connected to device!&#39;);
});

device.on(&#39;disconnected&#39;, () =&amp;gt; {
  console.log(&#39;Disconnected from device.&#39;);
});

device.on(&#39;error&#39;, error =&amp;gt; {
  console.log(&#39;Error!&#39;, error);
});

device.on(&#39;data&#39;, data =&amp;gt; {
  console.log(&#39;Data from device:&#39;, data);

  console.log(`Boolean status of default property: ${data.dps[&#39;1&#39;]}.`);

  // Set default property to opposite
  if (!stateHasChanged) {
    device.set({set: !(data.dps[&#39;1&#39;])});

    // Otherwise we&#39;ll be stuck in an endless
    // loop of toggling the state.
    stateHasChanged = true;
  }
});

// Disconnect after 10 seconds
setTimeout(() =&amp;gt; { device.disconnect(); }, 10000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Synchronous&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const TuyAPI = require(&#39;tuyapi&#39;);

const device = new TuyAPI({
  id: &#39;xxxxxxxxxxxxxxxxxxxx&#39;,
  key: &#39;xxxxxxxxxxxxxxxx&#39;,
  issueGetOnConnect: false});

(async () =&amp;gt; {
  await device.find();

  await device.connect();

  let status = await device.get();

  console.log(`Current status: ${status}.`);

  await device.set({set: !status});

  status = await device.get();

  console.log(`New status: ${status}.`);

  device.disconnect();
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📝 Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only one TCP connection can be in use with a device at once. If using this, do not have the app on your phone open.&lt;/li&gt; 
 &lt;li&gt;Some devices ship with older firmware that may not work with &lt;code&gt;tuyapi&lt;/code&gt;. If you&#39;re experiencing issues, please try updating the device&#39;s firmware in the official app.&lt;/li&gt; 
 &lt;li&gt;Newer firmware may use protocol 3.3. If you are not using &lt;code&gt;find()&lt;/code&gt;, you will need to manually pass &lt;code&gt;version: 3.3&lt;/code&gt; to the constructor.&lt;/li&gt; 
 &lt;li&gt;TuyAPI does not support sensors due to the fact that they only connect to the network when their state changes. There are no plans to add support as it&#39;s out of scope to intercept network requests.&lt;/li&gt; 
 &lt;li&gt;The key parameter for devices changes every time a device is removed and re-added to the TuyaSmart app. If you&#39;re getting decrypt errors, try getting the key again - it might have changed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📓 Documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://codetheweb.github.io/tuyapi/index.html&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/codetheweb/tuyapi/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codetheweb&quot;&gt;codetheweb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blackrozes&quot;&gt;blackrozes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clach04&quot;&gt;clach04&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jepsonrob&quot;&gt;jepsonrob&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tjfontaine&quot;&gt;tjfontaine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NorthernMan54&quot;&gt;NorthernMan54&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Apollon77&quot;&gt;Apollon77&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dresende&quot;&gt;dresende&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaveet&quot;&gt;kaveet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnyorke&quot;&gt;johnyorke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpillora&quot;&gt;jpillora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neojski&quot;&gt;neojski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unparagoned&quot;&gt;unparagoned&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kueblc&quot;&gt;kueblc&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(If you&#39;re not on the above list, open a PR.)&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;h3&gt;Flash alternative firmware&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ct-Open-Source/tuya-convert&quot;&gt;tuya-convert&lt;/a&gt; a project that allows you to flash custom firmware OTA on devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ports&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clach04/python-tuya&quot;&gt;python-tuya&lt;/a&gt; a Python port by &lt;a href=&quot;https://github.com/clach04&quot;&gt;clach04&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/frawau/aiotuya&quot;&gt;aiotuya&lt;/a&gt; a Python port by &lt;a href=&quot;https://github.com/frawau&quot;&gt;frawau&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Marcus-L/m4rcus.TuyaCore&quot;&gt;m4rcus.TuyaCore&lt;/a&gt; a .NET port by &lt;a href=&quot;https://github.com/Marcus-L&quot;&gt;Marcus-L&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eppz/.NET.Library.TuyaKit&quot;&gt;TuyaKit&lt;/a&gt; a .NET port by &lt;a href=&quot;https://github.com/eppz&quot;&gt;eppz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/py60800/tuya&quot;&gt;py60800/tuya&lt;/a&gt; a Go port by &lt;a href=&quot;https://github.com/py60800&quot;&gt;py60800&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Clients for Tuya&#39;s Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unparagoned/cloudtuya&quot;&gt;cloudtuya&lt;/a&gt; by &lt;a href=&quot;https://github.com/unparagoned/&quot;&gt;unparagoned&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Projects built with TuyAPI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TuyaAPI/cli&quot;&gt;tuya-cli&lt;/a&gt;: a CLI interface for Tuya devices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iRayanKhan/homebridge-tuya&quot;&gt;homebridge-tuya&lt;/a&gt;: a &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt; plugin for Tuya devices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmachek/tuyaweb&quot;&gt;tuyaweb&lt;/a&gt;: a web interface for controlling devices by &lt;a href=&quot;https://github.com/bmachek&quot;&gt;bmachek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ellneal/homebridge-igenix-air-conditioner&quot;&gt;homebridge-igenix-air-conditioner&lt;/a&gt;: a &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt; plugin for the Igenix IG9901WIFI air conditioner&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cajonKA/magichome-led-controller-node&quot;&gt;magichome-led-controller&lt;/a&gt;: a node to use magichome led RGB controller in &lt;a href=&quot;https://github.com/node-red/node-red&quot;&gt;node-red&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Apollon77/ioBroker.tuya&quot;&gt;ioBroker.tuya&lt;/a&gt;: an ioBroker (http://iobroker.net/) adapter to get data and control devices incl. schema parsing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hgross/node-red-contrib-tuya-smart&quot;&gt;node-red-contrib-tuya-smart&lt;/a&gt;: A NodeRED input node utilizing tuyapi to connect the smart home&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/py60800/tuyadump&quot;&gt;tuyadump&lt;/a&gt; a Go project to decode device traffic in real time&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TheAgentK/tuya-mqtt&quot;&gt;tuya-mqtt&lt;/a&gt; a simple MQTT interface for TuyAPI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To add your project to either of the above lists, please open a pull request.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://forthebadge.com&quot;&gt;&lt;img src=&quot;https://forthebadge.com/images/badges/made-with-javascript.svg&quot; alt=&quot;forthebadge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forthebadge.com&quot;&gt;&lt;img src=&quot;https://forthebadge.com/images/badges/built-with-love.svg&quot; alt=&quot;forthebadge&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
