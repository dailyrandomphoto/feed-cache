<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Mon, 18 Jan 2021 02:40:06 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>EvineDeng/jd-base</title>
      <link>https://github.com/EvineDeng/jd-base</link>
      <description>&lt;p&gt;京东薅羊毛脚本 https://github.com/LXK9301/jd_scripts 的shell套壳工具&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;请仔细阅读&lt;a href=&quot;https://github.com/EvineDeng/jd-base/wiki&quot;&gt;WIKI&lt;/a&gt;和各文件注释，90%的问题都能找到答案&lt;/h2&gt; 
&lt;h2&gt;如有帮助到你，请点亮Star&lt;/h2&gt; 
&lt;h2&gt;如有二次使用，请注明来源&lt;/h2&gt; 
&lt;p&gt;本脚本是&lt;a href=&quot;https://github.com/LXK9301/jd_scripts&quot;&gt;https://github.com/LXK9301/jd_scripts&lt;/a&gt;的shell套壳工具，适用于以下系统：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ArmBian/Debian/Ubuntu/OpenMediaVault/CentOS/Fedora/RHEL等Linux系统&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;OpenWRT&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Android&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MacOS&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Docker&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;宠汪汪赛跑助力先让用户提供的各个账号之间相互助力，助力完成你提供的所有账号以后，再给我和lxk0301大佬助力，每个账号助力后可得30g狗粮。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;将部分临时活动修改为了我的邀请码，已取得lxk0301大佬的同意。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;只记录大的更新，小修小改不记录。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;2021-01-15，每天定时任务中git_pull.sh只执行2次；每天12:00前运行git_pull.sh时随机生成当天下午执行git_pull.sh的任务时间，生成的时间范围：13:00-20:59；每天12:00后运行git_pull.sh时随机生成第二天上行执行git_pull.sh的任务时间，生成的时间范围：7:00-11:59；不影响手动执行，手动执行会刷新下一次git_pull.sh的执行时间。如果本机上安装了pm2，则挂机程序以pm2启动，否则以nohup启动。&lt;/p&gt; 
&lt;h2&gt;Star趋势&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/EvineDeng/jd-base&quot;&gt;&lt;img src=&quot;https://starchart.cc/EvineDeng/jd-base.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player with support M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h2&gt;Playlists by category&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by language&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by country&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;language&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;country&quot;: {
      &quot;code&quot;: &quot;us&quot;,
      &quot;name&quot;: &quot;United States&quot;
    },
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request.&lt;/p&gt; 
&lt;p&gt;If you find an error or have any suggestions on how to organize a playlist, please send an &lt;a href=&quot;https://github.com/iptv-org/iptv/issues/new/choose&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If your favorite channel is not on playlist you can let us know about it &lt;a href=&quot;https://github.com/iptv-org/iptv/issues/new?assignees=&amp;amp;labels=channel+request&amp;amp;template=channel-request.md&amp;amp;title=Add%3A+xxx&quot;&gt;here&lt;/a&gt; (IMPORTANT: an issue should contain a request for only one channel, otherwise it will be closed).&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue.&lt;/p&gt; 
&lt;p&gt;However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/svelte</title>
      <link>https://github.com/sveltejs/svelte</link>
      <description>&lt;p&gt;Cybernetically enhanced web apps&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is Svelte?&lt;/h2&gt; 
&lt;p&gt;Svelte is a new way to build web applications. It&#39;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.&lt;/p&gt; 
&lt;p&gt;Learn more at the &lt;a href=&quot;https://svelte.dev&quot;&gt;Svelte website&lt;/a&gt;, or stop by the &lt;a href=&quot;https://svelte.dev/chat&quot;&gt;Discord chatroom&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Svelte&lt;/h2&gt; 
&lt;p&gt;Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by the support of awesome volunteers. If you&#39;d like to support their efforts, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/svelte&quot;&gt;Becoming a backer on Open Collective&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Funds donated via Open Collective will be used for compensating expenses related to Svelte&#39;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#39;s development more directly.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Pull requests are encouraged and always welcome. &lt;a href=&quot;https://github.com/sveltejs/svelte/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc&quot;&gt;Pick an issue&lt;/a&gt; and help us out!&lt;/p&gt; 
&lt;p&gt;To install and work on Svelte locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/sveltejs/svelte.git
cd svelte
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Do not use Yarn to install the dependencies, as the specific package versions in &lt;code&gt;package-lock.json&lt;/code&gt; are used to build and test Svelte.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To build the compiler, and all the other modules included in the package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To watch for changes and continually rebuild the package (this is useful if you&#39;re using &lt;a href=&quot;https://docs.npmjs.com/cli/link.html&quot;&gt;npm link&lt;/a&gt; to test out changes in a project locally):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The compiler is written in &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, but don&#39;t let that put you off — it&#39;s basically just JavaScript with type annotations. You&#39;ll pick it up in no time. If you&#39;re using an editor other than &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; you may need to install a plugin in order to get syntax highlighting and code hints etc.&lt;/p&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To filter tests, use &lt;code&gt;-g&lt;/code&gt; (aka &lt;code&gt;--grep&lt;/code&gt;). For example, to only run tests involving transitions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run test -- -g transition
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;svelte.dev&lt;/h2&gt; 
&lt;p&gt;The source code for https://svelte.dev, including all the documentation, lives in the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/svelte/master/site&quot;&gt;site&lt;/a&gt; directory. The site is built with &lt;a href=&quot;https://sapper.svelte.dev&quot;&gt;Sapper&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Is svelte.dev down?&lt;/h3&gt; 
&lt;p&gt;Probably not, but it&#39;s possible. If you can&#39;t seem to access any &lt;code&gt;.dev&lt;/code&gt; sites, check out &lt;a href=&quot;https://superuser.com/q/1413402&quot;&gt;this SuperUser question and answer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/svelte/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>snowpackjs/snowpack</title>
      <link>https://github.com/snowpackjs/snowpack</link>
      <description>&lt;p&gt;WASM-powered frontend build tool. Fast, lightweight, unbundled ESM. ✌️&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Snowpack is a lightning-fast frontend build tool, designed to leverage JavaScript&#39;s native module system (
 &lt;!-- raw HTML omitted --&gt;known as ESM
 &lt;!-- raw HTML omitted --&gt;). It is an alternative to heavier, more complex bundlers like webpack or Parcel in your development workflow.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Develop faster, with a dev server that starts up in &lt;strong&gt;50ms or less.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;See changes reflected &lt;a href=&quot;https://www.snowpack.dev/concepts/hot-module-replacement&quot;&gt;instantly in the browser.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Integrate your favorite bundler for a &lt;a href=&quot;https://www.snowpack.dev/concepts/build-pipeline&quot;&gt;production-optimized build.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Enjoy out-of-the-box support for &lt;a href=&quot;https://www.snowpack.dev/reference/supported-files&quot;&gt;TypeScript, JSX, CSS Modules and more.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Connect your favorite tools with &lt;a href=&quot;https://www.snowpack.dev/plugins&quot;&gt;third-party plugins.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;💁 More info at the official &lt;a href=&quot;https://snowpack.dev&quot;&gt;Snowpack website ➞&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Contributor Guidelines:&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/snowpackjs/snowpack/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;br&gt; &lt;strong&gt;License:&lt;/strong&gt; &lt;a href=&quot;https://github.com/snowpackjs/snowpack/blob/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-React</title>
      <link>https://github.com/Asabeneh/30-Days-Of-React</link>
      <description>&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. This challenge needs an intermediate level of HTML, CSS, and JavaScript knowledge. It is recommended to feel good at JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; October, 2020
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------: | |00|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt;| |01|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;JavaScript Refresher&lt;/a&gt;| |02|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;Getting Started React&lt;/a&gt;| |03|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&quot;&gt;Setting Up&lt;/a&gt;| |04|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&quot;&gt;Components&lt;/a&gt;| |05|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&quot;&gt;Props&lt;/a&gt;| |06|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&quot;&gt;List, Map and Keys&lt;/a&gt;| |07|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&quot;&gt;Class Components&lt;/a&gt;| |08|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&quot;&gt;States&lt;/a&gt;| |09|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&quot;&gt;Conditional Rendering&lt;/a&gt;| |10|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&quot;&gt;React Project Folder Structure&lt;/a&gt;| |11|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&quot;&gt;Events&lt;/a&gt;| |12|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&quot;&gt;Forms&lt;/a&gt;| |13|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&quot;&gt;Controlled and Uncontrolled Component&lt;/a&gt;| |14|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&quot;&gt;Component Life Cycles&lt;/a&gt;| |15|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&quot;&gt;Third Party Packages&lt;/a&gt;| |16|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&quot;&gt;Higher Order Components&lt;/a&gt;| |17|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&quot;&gt;React Router&lt;/a&gt;| |18|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&quot;&gt;Fetch versus Axios&lt;/a&gt;| |19|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&quot;&gt;Projects&lt;/a&gt;| |20|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&quot;&gt;Projects&lt;/a&gt;| |21|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&quot;&gt;Hooks&lt;/a&gt;| |22|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&quot;&gt;Forms Using Hook&lt;/a&gt;| |23|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&quot;&gt;Fetching Data Using Hooks&lt;/a&gt;| |24|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&quot;&gt;Project using Hooks&lt;/a&gt;| |25|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&quot;&gt;Custom Hooks&lt;/a&gt;| |26|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&quot;&gt;Context&lt;/a&gt;| |27|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&quot;&gt;Ref&lt;/a&gt;| |28|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&quot;&gt;project&lt;/a&gt;| |29|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&quot;&gt;Explore&lt;/a&gt;| |30|&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&quot;&gt;Conclusions&lt;/a&gt;|&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Support &lt;a href=&quot;https://www.patreon.com/asabeneh?fan_landing=true&quot;&gt;&lt;em&gt;Asabeneh&lt;/em&gt;&lt;/a&gt; to create more educational materials
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/asabeneh?fan_landing=true&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&quot;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&quot;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&quot;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&quot;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&quot;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&quot;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&quot;&gt;Browser&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/thirtydaysofreact&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; 
&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&quot;https://github.com/Asabeneh/30-Days-Of-JavaScript&quot;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&quot;https://t.me/thirtydaysofreact/992&quot;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
 &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use Repo&lt;/h2&gt; 
&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; 
&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; 
&lt;h3&gt;Clone your Fork&lt;/h3&gt; 
&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# note that an `ssh` link is used here, but an `https` link will work the same
git clone git@github.com:username/30-Days-Of-React.git
cd 30-Days-Of-React
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a New Branch&lt;/h3&gt; 
&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add solutions/day-01/level1.js
git commit -m &quot;chore: exercise level1 complete&quot;
git push origin exercise-solutions # branch `exercise-solutions` was created earlier
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; 
&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git merge upstream/master exercise-solutions
git push origin exercise-solutions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;Hello, World!&quot;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DrkSephy/es6-cheatsheet</title>
      <link>https://github.com/DrkSephy/es6-cheatsheet</link>
      <description>&lt;p&gt;ES2015 [ES6] cheatsheet containing tips, tricks, best practices and code snippets&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;es6-cheatsheet&lt;/h1&gt; 
&lt;p&gt;A cheatsheet containing ES2015 [ES6] tips, tricks, best practices and code snippet examples for your day to day workflow. Contributions are welcome!&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#var-versus-let--const&quot;&gt;var versus let / const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#replacing-iifes-with-blocks&quot;&gt;Replacing IIFEs with Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#parameters&quot;&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#symbols&quot;&gt;Symbols&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#maps&quot;&gt;Maps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#weakmaps&quot;&gt;WeakMaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#promises&quot;&gt;Promises&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#generators&quot;&gt;Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#async-await&quot;&gt;Async Await&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#getter-and-setter-functions&quot;&gt;Getter/Setter functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;var versus let / const&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Besides &lt;code&gt;var&lt;/code&gt;, we now have access to two new identifiers for storing values —&lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;. Unlike &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; statements are not hoisted to the top of their enclosing scope.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;An example of using &lt;code&gt;var&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var snack = &#39;Meow Mix&#39;;

function getFood(food) {
    if (food) {
        var snack = &#39;Friskies&#39;;
        return snack;
    }
    return snack;
}

getFood(false); // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, observe what happens when we replace &lt;code&gt;var&lt;/code&gt; using &lt;code&gt;let&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let snack = &#39;Meow Mix&#39;;

function getFood(food) {
    if (food) {
        let snack = &#39;Friskies&#39;;
        return snack;
    }
    return snack;
}

getFood(false); // &#39;Meow Mix&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This change in behavior highlights that we need to be careful when refactoring legacy code which uses &lt;code&gt;var&lt;/code&gt;. Blindly replacing instances of &lt;code&gt;var&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt; may lead to unexpected behavior.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped. Therefore, referencing block-scoped identifiers before they are defined will produce a &lt;code&gt;ReferenceError&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(x); // ReferenceError: x is not defined

let x = &#39;hi&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practice&lt;/strong&gt;: Leave &lt;code&gt;var&lt;/code&gt; declarations inside of legacy code to denote that it needs to be carefully refactored. When working on a new codebase, use &lt;code&gt;let&lt;/code&gt; for variables that will change their value over time, and &lt;code&gt;const&lt;/code&gt; for variables which cannot be reassigned.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Replacing IIFEs with Blocks&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A common use of &lt;strong&gt;Immediately Invoked Function Expressions&lt;/strong&gt; is to enclose values within its scope. In ES6, we now have the ability to create block-based scopes and therefore are not limited purely to function-based scope.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function () {
    var food = &#39;Meow Mix&#39;;
}());

console.log(food); // Reference Error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using ES6 Blocks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{
    let food = &#39;Meow Mix&#39;;
};

console.log(food); // Reference Error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;Often times we have nested functions in which we would like to preserve the context of &lt;code&gt;this&lt;/code&gt; from its lexical scope. An example is shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name) {
    this.name = name;
}

Person.prototype.prefixName = function (arr) {
    return arr.map(function (character) {
        return this.name + character; // Cannot read property &#39;name&#39; of undefined
    });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;One common solution to this problem is to store the context of &lt;code&gt;this&lt;/code&gt; using a variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name) {
    this.name = name;
}

Person.prototype.prefixName = function (arr) {
    var that = this; // Store the context of this
    return arr.map(function (character) {
        return that.name + character;
    });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also pass in the proper context of &lt;code&gt;this&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name) {
    this.name = name;
}

Person.prototype.prefixName = function (arr) {
    return arr.map(function (character) {
        return this.name + character;
    }, this);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As well as bind the context:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name) {
    this.name = name;
}

Person.prototype.prefixName = function (arr) {
    return arr.map(function (character) {
        return this.name + character;
    }.bind(this));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;strong&gt;Arrow Functions&lt;/strong&gt;, the lexical value of &lt;code&gt;this&lt;/code&gt; isn&#39;t shadowed and we can re-write the above as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name) {
    this.name = name;
}

Person.prototype.prefixName = function (arr) {
    return arr.map(character =&amp;gt; this.name + character);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practice&lt;/strong&gt;: Use &lt;strong&gt;Arrow Functions&lt;/strong&gt; whenever you need to preserve the lexical value of &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Arrow Functions are also more concise when used in function expressions which simply return a value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var squares = arr.map(function (x) { return x * x }); // Function Expression
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4, 5];
const squares = arr.map(x =&amp;gt; x * x); // Arrow Function for terser implementation
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practice&lt;/strong&gt;: Use &lt;strong&gt;Arrow Functions&lt;/strong&gt; in place of function expressions when possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;With ES6, the standard library has grown immensely. Along with these changes are new methods which can be used on strings, such as &lt;code&gt;.includes()&lt;/code&gt; and &lt;code&gt;.repeat()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;.includes( )&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var string = &#39;food&#39;;
var substring = &#39;foo&#39;;

console.log(string.indexOf(substring) &amp;gt; -1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead of checking for a return value &lt;code&gt;&amp;gt; -1&lt;/code&gt; to denote string containment, we can simply use &lt;code&gt;.includes()&lt;/code&gt; which will return a boolean:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const string = &#39;food&#39;;
const substring = &#39;foo&#39;;

console.log(string.includes(substring)); // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.repeat( )&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function repeat(string, count) {
    var strings = [];
    while(strings.length &amp;lt; count) {
        strings.push(string);
    }
    return strings.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In ES6, we now have access to a terser implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// String.repeat(numberOfRepetitions)
&#39;meow&#39;.repeat(3); // &#39;meowmeowmeow&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Template Literals&lt;/h3&gt; 
&lt;p&gt;Using &lt;strong&gt;Template Literals&lt;/strong&gt;, we can now construct strings that have special characters in them without needing to escape them explicitly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = &quot;This string contains \&quot;double quotes\&quot; which are escaped.&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let text = `This string contains &quot;double quotes&quot; which don&#39;t need to be escaped anymore.`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Template Literals&lt;/strong&gt; also support interpolation, which makes the task of concatenating strings and values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &#39;Tiger&#39;;
var age = 13;

console.log(&#39;My cat is named &#39; + name + &#39; and is &#39; + age + &#39; years old.&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Much simpler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const name = &#39;Tiger&#39;;
const age = 13;

console.log(`My cat is named ${name} and is ${age} years old.`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In ES5, we handled new lines as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = (
    &#39;cat\n&#39; +
    &#39;dog\n&#39; +
    &#39;nickelodeon&#39;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = [
    &#39;cat&#39;,
    &#39;dog&#39;,
    &#39;nickelodeon&#39;
].join(&#39;\n&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Template Literals&lt;/strong&gt; will preserve new lines for us without having to explicitly place them in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let text = ( `cat
dog
nickelodeon`
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Template Literals&lt;/strong&gt; can accept expressions, as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let today = new Date();
let text = `The time and date is ${today.toLocaleString()}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;Destructuring allows us to extract values from arrays and objects (even deeply nested) and store them in variables with a more convenient syntax.&lt;/p&gt; 
&lt;h3&gt;Destructuring Arrays&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var arr = [1, 2, 3, 4];
var a = arr[0];
var b = arr[1];
var c = arr[2];
var d = arr[3];
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, b, c, d] = [1, 2, 3, 4];

console.log(a); // 1
console.log(b); // 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Destructuring Objects&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var luke = { occupation: &#39;jedi&#39;, father: &#39;anakin&#39; };
var occupation = luke.occupation; // &#39;jedi&#39;
var father = luke.father; // &#39;anakin&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let luke = { occupation: &#39;jedi&#39;, father: &#39;anakin&#39; };
let {occupation, father} = luke;

console.log(occupation); // &#39;jedi&#39;
console.log(father); // &#39;anakin&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;Prior to ES6, we used libraries such as &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; to create modules on the client-side, and &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_require_id&quot;&gt;require&lt;/a&gt; in &lt;strong&gt;Node.js&lt;/strong&gt;. With ES6, we can now directly use modules of all types (AMD and CommonJS).&lt;/p&gt; 
&lt;h3&gt;Exporting in CommonJS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;module.exports = 1;
module.exports = { foo: &#39;bar&#39; };
module.exports = [&#39;foo&#39;, &#39;bar&#39;];
module.exports = function bar () {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exporting in ES6&lt;/h3&gt; 
&lt;p&gt;With ES6, we have various flavors of exporting. We can perform &lt;strong&gt;Named Exports&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export let name = &#39;David&#39;;
export let age  = 25;​​
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As well as &lt;strong&gt;exporting a list&lt;/strong&gt; of objects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sumTwo(a, b) {
    return a + b;
}

function sumThree(a, b, c) {
    return a + b + c;
}

export { sumTwo, sumThree };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also export functions, objects and values (etc.) simply by using the &lt;code&gt;export&lt;/code&gt; keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export function sumTwo(a, b) {
    return a + b;
}

export function sumThree(a, b, c) {
    return a + b + c;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And lastly, we can &lt;strong&gt;export default bindings&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sumTwo(a, b) {
    return a + b;
}

function sumThree(a, b, c) {
    return a + b + c;
}

let api = {
    sumTwo,
    sumThree
};

export default api;

/* Which is the same as
 * export { api as default };
 */
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practices&lt;/strong&gt;: Always use the &lt;code&gt;export default&lt;/code&gt; method at &lt;strong&gt;the end&lt;/strong&gt; of the module. It makes it clear what is being exported, and saves time by having to figure out what name a value was exported as. More so, the common practice in CommonJS modules is to export a single value or object. By sticking to this paradigm, we make our code easily readable and allow ourselves to interpolate between CommonJS and ES6 modules.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Importing in ES6&lt;/h3&gt; 
&lt;p&gt;ES6 provides us with various flavors of importing. We can import an entire file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;underscore&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is important to note that simply &lt;strong&gt;importing an entire file will execute all code at the top level of that file&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Similar to Python, we have named imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { sumTwo, sumThree } from &#39;math/addition&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also rename the named imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import {
    sumTwo as addTwoNumbers,
    sumThree as sumThreeNumbers
} from &#39;math/addition&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition, we can &lt;strong&gt;import all the things&lt;/strong&gt; (also called namespace import):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as util from &#39;math/addition&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, we can import a list of values from a module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as additionUtil from &#39;math/addition&#39;;
const { sumTwo, sumThree } = additionUtil;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Importing from the default binding like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import api from &#39;math/addition&#39;;
// Same as: import { default as api } from &#39;math/addition&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While it is better to keep the exports simple, but we can sometimes mix default import and mixed import if needed. When we are exporting like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// foos.js
export { foo as default, foo1, foo2 };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can import them like the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import foo, { foo1, foo2 } from &#39;foos&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When importing a module exported using commonjs syntax (such as React) we can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;;
const { Component, PropTypes } = React;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can also be simplified further, using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component, PropTypes } from &#39;react&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Values that are exported are &lt;strong&gt;bindings&lt;/strong&gt;, not references. Therefore, changing the binding of a variable in one module will affect the value within the exported module. Avoid changing the public interface of these exported values.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Parameters&lt;/h2&gt; 
&lt;p&gt;In ES5, we had varying ways to handle functions which needed &lt;strong&gt;default values&lt;/strong&gt;, &lt;strong&gt;indefinite arguments&lt;/strong&gt;, and &lt;strong&gt;named parameters&lt;/strong&gt;. With ES6, we can accomplish all of this and more using more concise syntax.&lt;/p&gt; 
&lt;h3&gt;Default Parameters&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addTwoNumbers(x, y) {
    x = x || 0;
    y = y || 0;
    return x + y;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In ES6, we can simply supply default values for parameters in a function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addTwoNumbers(x=0, y=0) {
    return x + y;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;addTwoNumbers(2, 4); // 6
addTwoNumbers(2); // 2
addTwoNumbers(); // 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rest Parameters&lt;/h3&gt; 
&lt;p&gt;In ES5, we handled an indefinite number of arguments like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logArguments() {
    for (var i=0; i &amp;lt; arguments.length; i++) {
        console.log(arguments[i]);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using the &lt;strong&gt;rest&lt;/strong&gt; operator, we can pass in an indefinite amount of arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logArguments(...args) {
    for (let arg of args) {
        console.log(arg);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Named Parameters&lt;/h3&gt; 
&lt;p&gt;One of the patterns in ES5 to handle named parameters was to use the &lt;strong&gt;options object&lt;/strong&gt; pattern, adopted from jQuery.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function initializeCanvas(options) {
    var height = options.height || 600;
    var width  = options.width  || 400;
    var lineStroke = options.lineStroke || &#39;black&#39;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can achieve the same functionality using destructuring as a formal parameter to a function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function initializeCanvas(
    { height=600, width=400, lineStroke=&#39;black&#39;}) {
        // Use variables height, width, lineStroke here
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If we want to make the entire value optional, we can do so by destructuring an empty object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function initializeCanvas(
    { height=600, width=400, lineStroke=&#39;black&#39;} = {}) {
        // ...
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Spread Operator&lt;/h3&gt; 
&lt;p&gt;In ES5, we could find the max of values in an array by using the &lt;code&gt;apply&lt;/code&gt; method on &lt;code&gt;Math.max&lt;/code&gt; like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.max.apply(null, [-1, 100, 9001, -32]); // 9001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In ES6, we can now use the spread operator to pass an array of values to be used as parameters to a function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.max(...[-1, 100, 9001, -32]); // 9001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can concat array literals easily with this intuitive syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let cities = [&#39;San Francisco&#39;, &#39;Los Angeles&#39;];
let places = [&#39;Miami&#39;, ...cities, &#39;Chicago&#39;]; // [&#39;Miami&#39;, &#39;San Francisco&#39;, &#39;Los Angeles&#39;, &#39;Chicago&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Classes&lt;/h2&gt; 
&lt;p&gt;Prior to ES6, we implemented Classes by creating a constructor function and adding properties by extending the prototype:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name, age, gender) {
    this.name   = name;
    this.age    = age;
    this.gender = gender;
}

Person.prototype.incrementAge = function () {
    return this.age += 1;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And created extended classes by the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Personal(name, age, gender, occupation, hobby) {
    Person.call(this, name, age, gender);
    this.occupation = occupation;
    this.hobby = hobby;
}

Personal.prototype = Object.create(Person.prototype);
Personal.prototype.constructor = Personal;
Personal.prototype.incrementAge = function () {
    Person.prototype.incrementAge.call(this);
    this.age += 20;
    console.log(this.age);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ES6 provides much needed syntactic sugar for doing this under the hood. We can create Classes directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
    constructor(name, age, gender) {
        this.name   = name;
        this.age    = age;
        this.gender = gender;
    }

    incrementAge() {
      this.age += 1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And extend them using the &lt;code&gt;extends&lt;/code&gt; keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Personal extends Person {
    constructor(name, age, gender, occupation, hobby) {
        super(name, age, gender);
        this.occupation = occupation;
        this.hobby = hobby;
    }

    incrementAge() {
        super.incrementAge();
        this.age += 20;
        console.log(this.age);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practice&lt;/strong&gt;: While the syntax for creating classes in ES6 obscures how implementation and prototypes work under the hood, it is a good feature for beginners and allows us to write cleaner code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Symbols&lt;/h2&gt; 
&lt;p&gt;Symbols have existed prior to ES6, but now we have a public interface to using them directly. Symbols are immutable and unique and can be used as keys in any hash.&lt;/p&gt; 
&lt;h3&gt;Symbol( )&lt;/h3&gt; 
&lt;p&gt;Calling &lt;code&gt;Symbol()&lt;/code&gt; or &lt;code&gt;Symbol(description)&lt;/code&gt; will create a unique symbol that cannot be looked up globally. A Use case for &lt;code&gt;Symbol()&lt;/code&gt; is to patch objects or namespaces from third parties with your own logic, but be confident that you won&#39;t collide with updates to that library. For example, if you wanted to add a method &lt;code&gt;refreshComponent&lt;/code&gt; to the &lt;code&gt;React.Component&lt;/code&gt; class, and be certain that you didn&#39;t trample a method they add in a later update:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const refreshComponent = Symbol();

React.Component.prototype[refreshComponent] = () =&amp;gt; {
    // do something
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Symbol.for(key)&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Symbol.for(key)&lt;/code&gt; will create a Symbol that is still immutable and unique, but can be looked up globally. Two identical calls to &lt;code&gt;Symbol.for(key)&lt;/code&gt; will return the same Symbol instance. NOTE: This is not true for &lt;code&gt;Symbol(description)&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Symbol(&#39;foo&#39;) === Symbol(&#39;foo&#39;) // false
Symbol.for(&#39;foo&#39;) === Symbol(&#39;foo&#39;) // false
Symbol.for(&#39;foo&#39;) === Symbol.for(&#39;foo&#39;) // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A common use case for Symbols, and in particular with &lt;code&gt;Symbol.for(key)&lt;/code&gt; is for interoperability. This can be achieved by having your code look for a Symbol member on object arguments from third parties that contain some known interface. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function reader(obj) {
    const specialRead = Symbol.for(&#39;specialRead&#39;);
    if (obj[specialRead]) {
        const reader = obj[specialRead]();
        // do something with reader
    } else {
        throw new TypeError(&#39;object cannot be read&#39;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then in another library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const specialRead = Symbol.for(&#39;specialRead&#39;);

class SomeReadableType {
    [specialRead]() {
        const reader = createSomeReaderFrom(this);
        return reader;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A notable example of Symbol use for interoperability is &lt;code&gt;Symbol.iterator&lt;/code&gt; which exists on all iterable types in ES6: Arrays, strings, generators, etc. When called as a method it returns an object with an Iterator interface.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Maps&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Maps&lt;/strong&gt; is a much needed data structure in JavaScript. Prior to ES6, we created &lt;strong&gt;hash&lt;/strong&gt; maps through objects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var map = new Object();
map[key1] = &#39;value1&#39;;
map[key2] = &#39;value2&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, this does not protect us from accidentally overriding functions with specific property names:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; getOwnProperty({ hasOwnProperty: &#39;Hah, overwritten&#39;}, &#39;Pwned&#39;);
&amp;gt; TypeError: Property &#39;hasOwnProperty&#39; is not a function
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Actual &lt;strong&gt;Maps&lt;/strong&gt; allow us to &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;search&lt;/code&gt; for values (and much more).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let map = new Map();
&amp;gt; map.set(&#39;name&#39;, &#39;david&#39;);
&amp;gt; map.get(&#39;name&#39;); // david
&amp;gt; map.has(&#39;name&#39;); // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The most amazing part of Maps is that we are no longer limited to just using strings. We can now use any type as a key, and it will not be type-cast to a string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let map = new Map([
    [&#39;name&#39;, &#39;david&#39;],
    [true, &#39;false&#39;],
    [1, &#39;one&#39;],
    [{}, &#39;object&#39;],
    [function () {}, &#39;function&#39;]
]);

for (let key of map.keys()) {
    console.log(typeof key);
    // &amp;gt; string, boolean, number, object, function
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using non-primitive values such as functions or objects won&#39;t work when testing equality using methods such as &lt;code&gt;map.get()&lt;/code&gt;. As such, stick to primitive values such as Strings, Booleans and Numbers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We can also iterate over maps using &lt;code&gt;.entries()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (let [key, value] of map.entries()) {
    console.log(key, value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;WeakMaps&lt;/h2&gt; 
&lt;p&gt;In order to store private data versions &amp;lt; ES6, we had various ways of doing this. One such method was using naming conventions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
    constructor(age) {
        this._age = age;
    }

    _incrementAge() {
        this._age += 1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But naming conventions can cause confusion in a codebase and are not always going to be upheld. Instead, we can use WeakMaps to store our values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let _age = new WeakMap();
class Person {
    constructor(age) {
        _age.set(this, age);
    }

    incrementAge() {
        let age = _age.get(this) + 1;
        _age.set(this, age);
        if (age &amp;gt; 50) {
            console.log(&#39;Midlife crisis&#39;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cool thing about using WeakMaps to store our private data is that their keys do not give away the property names, which can be seen by using &lt;code&gt;Reflect.ownKeys()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; const person = new Person(50);
&amp;gt; person.incrementAge(); // &#39;Midlife crisis&#39;
&amp;gt; Reflect.ownKeys(person); // []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A more practical example of using WeakMaps is to store data which is associated to a DOM element without having to pollute the DOM itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let map = new WeakMap();
let el  = document.getElementById(&#39;someElement&#39;);

// Store a weak reference to the element with a key
map.set(el, &#39;reference&#39;);

// Access the value of the element
let value = map.get(el); // &#39;reference&#39;

// Remove the reference
el.parentNode.removeChild(el);
el = null;

// map is empty, since the element is destroyed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As shown above, once the object is destroyed by the garbage collector, the WeakMap will automatically remove the key-value pair which was identified by that object.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: To further illustrate the usefulness of this example, consider how jQuery stores a cache of objects corresponding to DOM elements which have references. Using WeakMaps, jQuery can automatically free up any memory that was associated with a particular DOM element once it has been removed from the document. In general, WeakMaps are very useful for any library that wraps DOM elements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Promises&lt;/h2&gt; 
&lt;p&gt;Promises allow us to turn our horizontal code (callback hell):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;func1(function (value1) {
    func2(value1, function (value2) {
        func3(value2, function (value3) {
            func4(value3, function (value4) {
                func5(value4, function (value5) {
                    // Do something with value 5
                });
            });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Into vertical code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;func1(value1)
    .then(func2)
    .then(func3)
    .then(func4)
    .then(func5, value5 =&amp;gt; {
        // Do something with value 5
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prior to ES6, we used &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;bluebird&lt;/a&gt; or &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;Q&lt;/a&gt;. Now we have Promises natively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Promise((resolve, reject) =&amp;gt;
    reject(new Error(&#39;Failed to fulfill Promise&#39;)))
        .catch(reason =&amp;gt; console.log(reason));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where we have two handlers, &lt;strong&gt;resolve&lt;/strong&gt; (a function called when the Promise is &lt;strong&gt;fulfilled&lt;/strong&gt;) and &lt;strong&gt;reject&lt;/strong&gt; (a function called when the Promise is &lt;strong&gt;rejected&lt;/strong&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Benefits of Promises&lt;/strong&gt;: Error Handling using a bunch of nested callbacks can get chaotic. Using Promises, we have a clear path to bubbling errors up and handling them appropriately. Moreover, the value of a Promise after it has been resolved/rejected is immutable - it will never change.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Here is a practical example of using Promises:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var request = require(&#39;request&#39;);

return new Promise((resolve, reject) =&amp;gt; {
  request.get(url, (error, response, body) =&amp;gt; {
    if (body) {
        resolve(JSON.parse(body));
      } else {
        resolve({});
      }
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also &lt;strong&gt;parallelize&lt;/strong&gt; Promises to handle an array of asynchronous operations by using &lt;code&gt;Promise.all()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let urls = [
  &#39;/api/commits&#39;,
  &#39;/api/issues/opened&#39;,
  &#39;/api/issues/assigned&#39;,
  &#39;/api/issues/completed&#39;,
  &#39;/api/issues/comments&#39;,
  &#39;/api/pullrequests&#39;
];

let promises = urls.map((url) =&amp;gt; {
  return new Promise((resolve, reject) =&amp;gt; {
    $.ajax({ url: url })
      .done((data) =&amp;gt; {
        resolve(data);
      });
  });
});

Promise.all(promises)
  .then((results) =&amp;gt; {
    // Do something with results of all our promises
 });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Generators&lt;/h2&gt; 
&lt;p&gt;Similar to how &lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet#promises&quot;&gt;Promises&lt;/a&gt; allow us to avoid &lt;a href=&quot;http://callbackhell.com/&quot;&gt;callback hell&lt;/a&gt;, Generators allow us to flatten our code - giving our asynchronous code a synchronous feel. Generators are essentially functions which we can &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield&quot;&gt;pause their execution&lt;/a&gt; and subsequently return the value of an expression.&lt;/p&gt; 
&lt;p&gt;A simple example of using generators is shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* sillyGenerator() {
    yield 1;
    yield 2;
    yield 3;
    yield 4;
}

var generator = sillyGenerator();
&amp;gt; console.log(generator.next()); // { value: 1, done: false }
&amp;gt; console.log(generator.next()); // { value: 2, done: false }
&amp;gt; console.log(generator.next()); // { value: 3, done: false }
&amp;gt; console.log(generator.next()); // { value: 4, done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next&quot;&gt;next&lt;/a&gt; will allow us to push our generator forward and evaluate a new expression. While the above example is extremely contrived, we can utilize Generators to write asynchronous code in a synchronous manner:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Hiding asynchronousity with Generators

function request(url) {
    getJSON(url, function(response) {
        generator.next(response);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And here we write a generator function that will return our data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* getData() {
    var entry1 = yield request(&#39;http://some_api/item1&#39;);
    var data1  = JSON.parse(entry1);
    var entry2 = yield request(&#39;http://some_api/item2&#39;);
    var data2  = JSON.parse(entry2);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By the power of &lt;code&gt;yield&lt;/code&gt;, we are guaranteed that &lt;code&gt;entry1&lt;/code&gt; will have the data needed to be parsed and stored in &lt;code&gt;data1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;While generators allow us to write asynchronous code in a synchronous manner, there is no clear and easy path for error propagation. As such, as we can augment our generator with Promises:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function request(url) {
    return new Promise((resolve, reject) =&amp;gt; {
        getJSON(url, resolve);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And we write a function which will step through our generator using &lt;code&gt;next&lt;/code&gt; which in turn will utilize our &lt;code&gt;request&lt;/code&gt; method above to yield a Promise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function iterateGenerator(gen) {
    var generator = gen();
    (function iterate(val) {
        var ret = generator.next();
        if(!ret.done) {
            ret.value.then(iterate);
        }
    })();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By augmenting our Generator with Promises, we have a clear way of propagating errors through the use of our Promise &lt;code&gt;.catch&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt;. To use our newly augmented Generator, it is as simple as before:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;iterateGenerator(function* getData() {
    var entry1 = yield request(&#39;http://some_api/item1&#39;);
    var data1  = JSON.parse(entry1);
    var entry2 = yield request(&#39;http://some_api/item2&#39;);
    var data2  = JSON.parse(entry2);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We were able to reuse our implementation to use our Generator as before, which shows their power. While Generators and Promises allow us to write asynchronous code in a synchronous manner while retaining the ability to propagate errors in a nice way, we can actually begin to utilize a simpler construction that provides the same benefits: &lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet#async-await&quot;&gt;async-await&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Async Await&lt;/h2&gt; 
&lt;p&gt;While this is actually an upcoming ES2016 feature, &lt;code&gt;async await&lt;/code&gt; allows us to perform the same thing we accomplished using Generators and Promises with less effort:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var request = require(&#39;request&#39;);

function getJSON(url) {
  return new Promise(function(resolve, reject) {
    request(url, function(error, response, body) {
      resolve(body);
    });
  });
}

async function main() {
  var data = await getJSON();
  console.log(data); // NOT undefined!
}

main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Under the hood, it performs similarly to Generators. I highly recommend using them over Generators + Promises. A great resource for getting up and running with ES7 and Babel can be found &lt;a href=&quot;http://masnun.com/2015/11/11/using-es7-asyncawait-today-with-babel.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Getter and setter functions&lt;/h2&gt; 
&lt;p&gt;ES6 has started supporting getter and setter functions within classes. Using the following example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {

    constructor(name) {
        this._name = name;
    }

    get name() {
      if(this._name) {
        return &#39;Mr. &#39; + this._name.toUpperCase();  
      } else {
        return undefined;
      }  
    }

    set name(newName) {
      if (newName == this._name) {
        console.log(&#39;I already have this name.&#39;);
      } else if (newName) {
        this._name = newName;
      } else {
        return false;
      }
    }
}

var emp = new Employee(&quot;James Bond&quot;);

// uses the get method in the background
if (emp.name) {
  console.log(emp.name);  // Mr. JAMES BOND
}

// uses the setter in the background
emp.name = &quot;Bond 007&quot;;
console.log(emp.name);  // Mr. BOND 007  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Latest browsers are also supporting getter/setter functions in Objects and we can use them for computed properties, adding listeners and preprocessing before setting/getting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var person = {
  firstName: &#39;James&#39;,
  lastName: &#39;Bond&#39;,
  get fullName() {
      console.log(&#39;Getting FullName&#39;);
      return this.firstName + &#39; &#39; + this.lastName;
  },
  set fullName (name) {
      console.log(&#39;Setting FullName&#39;);
      var words = name.toString().split(&#39; &#39;);
      this.firstName = words[0] || &#39;&#39;;
      this.lastName = words[1] || &#39;&#39;;
  }
}

person.fullName; // James Bond
person.fullName = &#39;Bond 007&#39;;
person.fullName; // Bond 007
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The MIT License (MIT)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2015 David Leonard&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DrkSephy/es6-cheatsheet/master/#table-of-contents&quot;&gt;(back to table of contents)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leerob/leerob.io</title>
      <link>https://github.com/leerob/leerob.io</link>
      <description>&lt;p&gt;✨ My portfolio built with Next.js, MDX, Tailwind CSS, and Vercel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fleerob%2Fleerob.io&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy with Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;leerob.io&lt;/h1&gt; 
&lt;p&gt;My portfolio has transformed over the years - from a static HTML site, to Jekyll, to Hugo, and finally to Next.js/React/MDX. My personal slice of the internet provides a platform for my writing and to showcase my latest work.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pages/api/*&lt;/code&gt; - &lt;a href=&quot;https://nextjs.org/docs/api-routes/introduction&quot;&gt;API routes&lt;/a&gt; powering &lt;a href=&quot;https://leerob.io/dashboard&quot;&gt;&lt;code&gt;/dashboard&lt;/code&gt;&lt;/a&gt;, newsletter subscription, and post views.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/blog/*&lt;/code&gt; - Static pre-rendered blog pages using &lt;a href=&quot;https://github.com/mdx-js/mdx&quot;&gt;MDX&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/dashboard&lt;/code&gt; - &lt;a href=&quot;https://leerob.io/dashboard&quot;&gt;Personal dashboard&lt;/a&gt; containing metrics like sales, views, and subscribers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/*&lt;/code&gt; - All other static pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running Locally&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/leerob/leerob.io.git
$ cd leerob.io
$ yarn
$ yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file similar to &lt;a href=&quot;https://github.com/leerob/leerob.io/blob/master/.env.example&quot;&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Built Using&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vercel.com&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdx-js/mdx&quot;&gt;MDX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/web.dev</title>
      <link>https://github.com/GoogleChrome/web.dev</link>
      <description>&lt;p&gt;The frontend, backend, and content source code for web.dev&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;web.dev&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GoogleChrome/web.dev/workflows/Continuous%20integration/badge.svg&quot; alt=&quot;Continuous integration&quot;&gt;&lt;/p&gt; 
&lt;p&gt;web.dev is the ultimate resource for developers of all backgrounds to learn, create, and solve on the web. It&#39;s meant to not only educate developers, but help them apply what they&#39;ve learned to any site they work on, be it personal or business.&lt;/p&gt; 
&lt;h2&gt;Found a bug? 👷‍♀️&lt;/h2&gt; 
&lt;p&gt;Thanks for letting us know! Please &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=&quot;&gt;file an issue&lt;/a&gt; and a team member should reply shortly.&lt;/p&gt; 
&lt;h2&gt;Authoring content ✍️&lt;/h2&gt; 
&lt;p&gt;Before you start writing take a moment to look over the &lt;a href=&quot;https://web.dev/handbook&quot;&gt;web.dev handbook&lt;/a&gt; and familiarize yourself with the process. When you&#39;re ready, follow the steps in the &lt;a href=&quot;https://web.dev/handbook/quick-start/&quot;&gt;Quickstart&lt;/a&gt; to create your content proposal.&lt;/p&gt; 
&lt;h2&gt;Building the site 🏗&lt;/h2&gt; 
&lt;p&gt;You&#39;ll need a recent version of &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt;: v12.10 or higher.&lt;/p&gt; 
&lt;h3&gt;Clone the repo&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/GoogleChrome/web.dev.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm ci
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start a local server to preview the site&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:8080/&lt;/code&gt; to see the site locally. Changes to assets will rebuild the site. Refresh to see your changes.&lt;/p&gt; 
&lt;h3&gt;Speeding up builds&lt;/h3&gt; 
&lt;p&gt;⚠️ This is an experimental feature 🧪🔬&lt;/p&gt; 
&lt;p&gt;Any change to the site will cause Eleventy to rebuild. This can take 10-20s. If you want to speed things up you can isolate your directory using the &lt;code&gt;isolate&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run isolate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will move all of the markdown files for the site into the &lt;code&gt;_exile&lt;/code&gt; directory and it will ignore them for builds.&lt;/p&gt; 
&lt;p&gt;You may pass an optional glob (or space separated list of globs) to the &lt;code&gt;isolate&lt;/code&gt; command to tell it to preserve a directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Example 1: Preserve the style-focus directory
# note the -- which is needed to pass options to npm scripts
npm run isolate -- src/site/content/en/accessible/style-focus/**

# Example 2: Preserve everything in the accessible directory
npm run isolate -- src/site/content/en/accessible/**/*
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you&#39;re finished making your edits, run the &lt;code&gt;integrate&lt;/code&gt; command to restore all of the project files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run integrate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;☝️ A git commit hook will prevent you from being able to run &lt;code&gt;git commit&lt;/code&gt; until you have run the &lt;code&gt;integrate&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Environments 🌳&lt;/h2&gt; 
&lt;p&gt;Set &lt;code&gt;ELEVENTY_ENV=prod&lt;/code&gt; to force production builds. This is the default when running &quot;stage&quot; or &quot;deploy&quot;. No other options for &lt;code&gt;ELEVENTY_ENV&lt;/code&gt; are supported, although our Eleventy site config will default to &#39;dev&#39; if unspecified.&lt;/p&gt; 
&lt;h2&gt;Staging 🕺&lt;/h2&gt; 
&lt;p&gt;When you send in a pull request it will be automatically staged for you. Keep an eye out for the netlify bot to comment on the pull request with your unique URL.&lt;/p&gt; 
&lt;h2&gt;Deploying the site 🚀&lt;/h2&gt; 
&lt;h3&gt;Automatic deploys&lt;/h3&gt; 
&lt;p&gt;The site will build and deploy the master branch automatically every hour, Mon-Fri. If you&#39;ve just merged an article then it should go live at the top of the next hour.&lt;/p&gt; 
&lt;h3&gt;Manual deploys&lt;/h3&gt; 
&lt;p&gt;To manually deploy the site you&#39;ll need to be a member of one of these GitHub teams:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;@GoogleChrome/web-dev-admins&lt;/li&gt; 
 &lt;li&gt;@GoogleChrome/web-dev-content&lt;/li&gt; 
 &lt;li&gt;@GoogleChrome/web-dev-contributors&lt;/li&gt; 
 &lt;li&gt;@GoogleChrome/web-dev-eng&lt;/li&gt; 
 &lt;li&gt;@GoogleChrome/web-devrel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/actions?query=workflow%3ADeploy&quot;&gt;the Deploy workflow in the Actions panel&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Run workflow&lt;/strong&gt; button. Make sure the branch says &lt;code&gt;master&lt;/code&gt;, then click the green &lt;strong&gt;Run workflow&lt;/strong&gt; button.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1066253/89584965-da6eb500-d7f1-11ea-8a43-d8b1abe2cd3b.png&quot; alt=&quot;An expanded workflow popup with a green run workflow button inside of it.&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Debugging 🐛&lt;/h2&gt; 
&lt;p&gt;If you need to debug the site&#39;s build process:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add a &lt;code&gt;debugger&lt;/code&gt; statement to &lt;code&gt;.eleventy.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run debug:eleventy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to &lt;code&gt;chrome://inspect&lt;/code&gt; to attach to the running process.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ix64/unlock-music</title>
      <link>https://github.com/ix64/unlock-music</link>
      <description>&lt;p&gt;Unlock encrypted music file in browser. 在浏览器中解锁加密的音乐文件。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unlock Music 音乐解锁&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;在浏览器中解锁加密的音乐文件。 Unlock encrypted music file in the browser.&lt;/li&gt; 
 &lt;li&gt;unlock-music项目是以学习和技术研究的初衷创建的，修改、再分发时请遵循&lt;a href=&quot;https://github.com/ix64/unlock-music/blob/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Unlock Music的CLI版本正在开发中。&lt;/li&gt; 
 &lt;li&gt;我们新建了Telegram群组，欢迎加入！&lt;a href=&quot;https://t.me/unlock_music_chat&quot;&gt;https://t.me/unlock_music_chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unlock-music/cli&quot;&gt;CLI版本 Alpha&lt;/a&gt; 大批量转换建议使用CLI版本&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ix64/unlock-music/wiki/%E5%92%8CUnlockMusic%E7%9B%B8%E5%85%B3%E7%9A%84%E9%A1%B9%E7%9B%AE&quot;&gt;相关的其他项目&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://github.com/ix64/unlock-music/workflows/Release%20and%20GitHub%20Pages/badge.svg&quot; alt=&quot;Release and GitHub Pages&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;特性&lt;/h1&gt; 
&lt;h2&gt;支持的格式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] QQ音乐 (.qmc0/.qmc2/.qmc3/.qmcflac/.qmcogg/&lt;a href=&quot;https://github.com/ix64/unlock-music/issues/9&quot;&gt;.tkm&lt;/a&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;[x] 写入封面图片&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] Moo音乐格式 (&lt;a href=&quot;https://github.com/ix64/unlock-music/issues/11&quot;&gt;.bkcmp3/.bkcflac&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] QQ音乐Tm格式 (.tm0/.tm2/.tm3/.tm6)&lt;/li&gt; 
 &lt;li&gt;[x] QQ音乐新格式 (实验性支持) 
  &lt;ul&gt; 
   &lt;li&gt;[x] .mflac&lt;/li&gt; 
   &lt;li&gt;[x] &lt;a href=&quot;https://github.com/ix64/unlock-music/issues/3&quot;&gt;.mgg&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] 网易云音乐格式 (.ncm) 
  &lt;ul&gt; 
   &lt;li&gt;[x] 补全ncm的ID3/FlacMeta信息&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] 虾米音乐格式 (.xm) (测试阶段)&lt;/li&gt; 
 &lt;li&gt;[x] 酷我音乐格式 (.kwm) (测试阶段)&lt;/li&gt; 
 &lt;li&gt;[x] 酷狗音乐格式 (.kgm) (&lt;a href=&quot;https://github.com/ix64/unlock-music/wiki/%E5%85%B6%E4%BB%96%E9%9F%B3%E4%B9%90%E6%A0%BC%E5%BC%8F%E5%B7%A5%E5%85%B7#%E9%85%B7%E7%8B%97%E9%9F%B3%E4%B9%90-kgmvpr%E8%A7%A3%E9%94%81%E5%B7%A5%E5%85%B7&quot;&gt;CLI版本&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;其他特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] 在浏览器中解锁&lt;/li&gt; 
 &lt;li&gt;[x] 拖放文件&lt;/li&gt; 
 &lt;li&gt;[x] 在线播放&lt;/li&gt; 
 &lt;li&gt;[x] 批量解锁&lt;/li&gt; 
 &lt;li&gt;[x] 渐进式Web应用&lt;/li&gt; 
 &lt;li&gt;[x] 多线程&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;使用方法&lt;/h1&gt; 
&lt;h2&gt;使用已构建版本&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;从&lt;a href=&quot;https://github.com/ix64/unlock-music/releases/latest&quot;&gt;GitHub Release&lt;/a&gt;下载已构建的版本 
  &lt;ul&gt; 
   &lt;li&gt;本地使用请下载&lt;code&gt;legacy版本&lt;/code&gt;（&lt;code&gt;modern版本&lt;/code&gt;只能通过&lt;strong&gt;http/https协议&lt;/strong&gt;访问）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;解压缩后即可部署或本地使用（&lt;strong&gt;请勿直接运行源代码&lt;/strong&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;自行构建&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境要求 
  &lt;ul&gt; 
   &lt;li&gt;nodejs&lt;/li&gt; 
   &lt;li&gt;npm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;获取项目源代码后执行 &lt;code&gt;npm install&lt;/code&gt; 安装相关依赖&lt;/li&gt; 
 &lt;li&gt;执行 &lt;code&gt;npm run build&lt;/code&gt; 即可进行构建，构建输出为 dist 目录&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run serve&lt;/code&gt; 可用于开发&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn&#39;t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu&#39;s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_mern_memories</title>
      <link>https://github.com/adrianhajdin/project_mern_memories</link>
      <description>&lt;p&gt;This is a code repository for the corresponding video tutorial. Using React, Node.js, Express &amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memories&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/Z8Y0CJv/Screenshot-2020-10-30-at-11-10-04.png&quot; alt=&quot;Memories&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial - https://youtube.com/playlist?list=PL6QREj8te1P7VSwhrMf3D3Xt4V6_SRkhu.&lt;/p&gt; 
&lt;p&gt;Using React, Node.js, Express &amp;amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will have a strong understanding of how the MERN Stack works.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the app&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>iamadamdev/bypass-paywalls-chrome</title>
      <link>https://github.com/iamadamdev/bypass-paywalls-chrome</link>
      <description>&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download this repo as a &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&quot;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Enable Developer Mode.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/releases/latest/download/bypass-paywalls-firefox.xpi&quot;&gt;Download and install the latest version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ✕ to keep the extension enabled.&lt;/li&gt; 
 &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; 
 &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; 
 &lt;li&gt;On the Firefox version automatic updates are enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bypass the following sites&#39; paywalls with this extension:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.adweek.com&quot;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ad.nl&quot;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.americanbanker.com&quot;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ambito.com/&quot;&gt;Ámbito&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.baltimoresun.com&quot;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.barrons.com&quot;&gt;Barron&#39;s&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloombergquint.com&quot;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloomberg.com&quot;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bndestem.nl&quot;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bd.nl&quot;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.brisbanetimes.com.au&quot;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.businessinsider.com&quot;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.caixinglobal.com&quot;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.centralwesterndaily.com.au&quot;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://cen.acs.org&quot;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagotribune.com&quot;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.corriere.it&quot;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagobusiness.com&quot;&gt;Crain&#39;s Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailypress.com&quot;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.gelderlander.nl&quot;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.groene.nl&quot;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.destentor.nl&quot;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tijd.be&quot;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.volkskrant.nl&quot;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.delfi.ee&quot;&gt;DELFI&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.demorgen.be&quot;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.denverpost.com&quot;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.df.cl&quot;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.editorialedomani.it/&quot;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dynamed.com&quot;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ed.nl&quot;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elmercurio.com&quot;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elpais.com/&quot;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elu24.ee&quot;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.britannica.com&quot;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.estadao.com.br&quot;&gt;Estadão&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.examiner.com.au&quot;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fnlondon.com&quot;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.financialpost.com&quot;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ft.com&quot;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.firstthings.com&quot;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.foreignpolicy.com&quot;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fortune.com&quot;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.genomeweb.com&quot;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.glassdoor.com&quot;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.globes.co.il&quot;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.grubstreet.com&quot;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.co.il&quot;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.com&quot;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.handelsblatt.com&quot;&gt;Handelsblatt&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://harpers.org&quot;&gt;Harper&#39;s Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.courant.com&quot;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.hbr.org&quot;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.heraldsun.com.au&quot;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://fd.nl&quot;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.historyextra.com&quot;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.humo.be&quot;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ilmanifesto.it&quot;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inc.com&quot;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.interest.co.nz&quot;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.investorschronicle.co.uk&quot;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&quot;https://www.lecho.be&quot;&gt;L&#39;Écho&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://labusinessjournal.com&quot;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lanacion.com.ar&quot;&gt;La Nación&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.repubblica.it&quot;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lastampa.it&quot;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latercera.com&quot;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lavoixdunord.fr/&quot;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ledevoir.com&quot;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://www.leparisien.fr&quot;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lesechos.fr&quot;&gt;Les Échos&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.loebclassics.com&quot;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lrb.co.uk&quot;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latimes.com&quot;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sloanreview.mit.edu&quot;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.technologyreview.com&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medium.com&quot;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medscape.com&quot;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://mexiconewsdaily.com&quot;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mv-voice.com&quot;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nydailynews.com/&quot;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nrc.nl&quot;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ntnews.com.au&quot;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalpost.com&quot;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzz.ch&quot;&gt;Neue Zürcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nymag.com&quot;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzherald.co.nz&quot;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://asia.nikkei.com&quot;&gt;Nikkei Asian Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ocregister.com&quot;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.orlandosentinel.com&quot;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.pzc.nl&quot;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.paloaltoonline.com&quot;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.parool.nl&quot;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.postimees.ee&quot;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://qz.com&quot;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.quora.com&quot;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://republic.ru&quot;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sandiegouniontribune.com&quot;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sfchronicle.com&quot;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.scientificamerican.com&quot;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://seekingalpha.com&quot;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://slate.com&quot;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sofrep.com&quot;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.statista.com&quot;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.startribune.com&quot;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.stuff.co.nz&quot;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sun-sentinel.com&quot;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.techinasia.com&quot;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraaf.nl&quot;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.adelaidenow.com.au&quot;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theadvocate.com.au&quot;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theage.com.au&quot;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-american-interest.com&quot;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theatlantic.com&quot;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.afr.com&quot;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theaustralian.com.au&quot;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bizjournals.com&quot;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.canberratimes.com.au&quot;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecourier.com.au&quot;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.couriermail.com.au&quot;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecut.com&quot;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailytelegraph.com.au&quot;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thediplomat.com&quot;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.economist.com&quot;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theglobeandmail.com&quot;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theherald.com.au&quot;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thehindu.com&quot;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.irishtimes.com&quot;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.japantimes.co.jp&quot;&gt;The Japan Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.kansascity.com&quot;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mercurynews.com&quot;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themercury.com.au&quot;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mcall.com&quot;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenation.com&quot;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenational.scot&quot;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newstatesman.com&quot;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nytimes.com&quot;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newyorker.com&quot;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.news-gazette.com&quot;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inquirer.com&quot;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thesaturdaypaper.com.au&quot;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.seattletimes.com&quot;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.com.au&quot;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.co.uk&quot;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.smh.com.au&quot;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraph.co.uk&quot;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thetimes.co.uk&quot;&gt;The Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thestar.com&quot;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wsj.com&quot;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.washingtonpost.com&quot;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thewrap.com&quot;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themarker.com&quot;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-tls.co.uk&quot;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.towardsdatascience.com&quot;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.trouw.nl&quot;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tubantia.nl&quot;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vanityfair.com&quot;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vn.nl&quot;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vulture.com/&quot;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://journalnow.com&quot;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wired.com&quot;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.worldpoliticsreview.com&quot;&gt;World Politics Review&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; 
&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; 
&lt;p&gt;Install the Cookie Remover extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; 
&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;New site requests&lt;/h3&gt; 
&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the uBlock Origin extension if it hasn&#39;t been installed already. See if you are still getting a paywall.&lt;/li&gt; 
 &lt;li&gt;Check if using Cookie Remover (&lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; 
 &lt;li&gt;First search &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&quot;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; 
 &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; 
 &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; 
 &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; 
 &lt;li&gt;If it loads without a paywall you can &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word &quot;Confirmed&quot;. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&quot;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If a site doesn&#39;t work, try turning off uBlock and refreshing.&lt;/li&gt; 
 &lt;li&gt;Try clearing &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;cookies&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make sure you&#39;re running the latest version of Bypass Paywalls.&lt;/li&gt; 
 &lt;li&gt;If a site is having problems try unchecking &quot;*General Paywall Bypass*&quot; in Options.&lt;/li&gt; 
 &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; 
&lt;p&gt;PRs are welcome.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; 
 &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://github.com/standard/semistandard&quot;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don&#39;t need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Show your support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow me on Twitter &lt;a href=&quot;https://twitter.com/iamadamdev&quot;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; 
 &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This software is provided for educational purposes only and is provided &quot;AS IS&quot;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/javascript-interview-questions</title>
      <link>https://github.com/sudheerj/javascript-interview-questions</link>
      <description>&lt;p&gt;List of 1000 JavaScript Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click :star:if you like the project. Pull Requests are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Go to &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#coding-exercise&quot;&gt;Coding Exercise&lt;/a&gt; for coding specific questions&lt;/p&gt; 
&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/JavaScript-Interview-Questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The questions provided in this repository are the summary of frequently asked questions across numerous companies. We cannot guarantee that these questions will actually be asked during your interview process, nor should you focus on memorizing all of them. The primary purpose is for you to get a sense of what some companies might ask — do not get discouraged if you don&#39;t know the answer to all of them ⁠— that is ok!&lt;/p&gt; 
&lt;p&gt;Good luck with your interview 😊&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| No. | Questions | |---- | --------- |1 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-possible-ways-to-create-objects-in-javascript&quot;&gt;What are the possible ways to create objects in JavaScript&lt;/a&gt; | |2 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-prototype-chain&quot;&gt;What is prototype chain&lt;/a&gt;| |3 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-call-apply-and-bind&quot;&gt;What is the difference between Call, Apply and Bind&lt;/a&gt;| |4 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json-and-its-common-operations&quot;&gt;What is JSON and its common operations&lt;/a&gt;| |5 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-slice-method&quot;&gt;What is the purpose of the array slice method&lt;/a&gt;| |6 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-splice-method&quot;&gt;What is the purpose of the array splice method&lt;/a&gt;| |7 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-slice-and-splice&quot;&gt;What is the difference between slice and splice&lt;/a&gt;| |8 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-object-and-map&quot;&gt;How do you compare Object and Map&lt;/a&gt;| |9 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-==-and-===-operators&quot;&gt;What is the difference between == and === operators&lt;/a&gt;| |10 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-lambda-or-arrow-functions&quot;&gt;What are lambda or arrow functions&lt;/a&gt;| |11 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-class-function&quot;&gt;What is a first class function&lt;/a&gt;| |12 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-order-function&quot;&gt;What is a first order function&lt;/a&gt;| |13 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-higher-order-function&quot;&gt;What is a higher order function&lt;/a&gt;| |14 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-unary-function&quot;&gt;What is a unary function&lt;/a&gt;| |15 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-currying-function&quot;&gt;What is the currying function&lt;/a&gt;| |16 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-pure-function&quot;&gt;What is a pure function&lt;/a&gt;| |17 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-let-keyword&quot;&gt;What is the purpose of the let keyword&lt;/a&gt;| |18 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-let-and-var&quot;&gt;What is the difference between let and var&lt;/a&gt;| |19 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-reason-to-choose-the-name-let-as-a-keyword&quot;&gt;What is the reason to choose the name let as a keyword&lt;/a&gt;| |20 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redeclare-variables-in-switch-block-without-an-error&quot;&gt;How do you redeclare variables in switch block without an error&lt;/a&gt;| |21 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-temporal-dead-zone&quot;&gt;What is the Temporal Dead Zone&lt;/a&gt;| |22 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-iife(immediately-invoked-function-expression)&quot;&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/a&gt;| |23 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-benefit-of-using-modules&quot;&gt;What is the benefit of using modules&lt;/a&gt;| |24 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-memoization&quot;&gt;What is memoization&lt;/a&gt;| |25 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-hoisting&quot;&gt;What is Hoisting&lt;/a&gt;| |26 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-classes-in-es6&quot;&gt;What are classes in ES6&lt;/a&gt;| |27 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-closures&quot;&gt;What are closures&lt;/a&gt;| |28 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modules&quot;&gt;What are modules&lt;/a&gt;| |29 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-modules&quot;&gt;Why do you need modules&lt;/a&gt;| |30 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-scope-in-javascript&quot;&gt;What is scope in javascript&lt;/a&gt;| |31 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-service-worker&quot;&gt;What is a service worker&lt;/a&gt;| |32 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-manipulate-dom-using-a-service-worker&quot;&gt;How do you manipulate DOM using a service worker&lt;/a&gt;| |33 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reuse-information-across-service-worker-restarts&quot;&gt;How do you reuse information across service worker restarts&lt;/a&gt;| |34 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-indexeddb&quot;&gt;What is IndexedDB&lt;/a&gt;| |35 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-storage&quot;&gt;What is web storage&lt;/a&gt;| |36 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-post-message&quot;&gt;What is a post message&lt;/a&gt;| |37 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-cookie&quot;&gt;What is a cookie&lt;/a&gt;| |38 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-cookie&quot;&gt;Why do you need a Cookie&lt;/a&gt;| |39 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-options-in-a-cookie&quot;&gt;What are the options in a cookie&lt;/a&gt;| |40 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-delete-a-cookie&quot;&gt;How do you delete a cookie&lt;/a&gt;| |41 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-are-the-differences-between-cookie-local-storage-and-session-storage&quot;&gt;What are the differences between cookie, local storage and session storage&lt;/a&gt;| |42 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-localstorage-and-sessionstorage&quot;&gt;What is the main difference between localStorage and sessionStorage&lt;/a&gt;| |43 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-web-storage&quot;&gt;How do you access web storage&lt;/a&gt;| |44 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-methods-available-on-session-storage&quot;&gt;What are the methods available on session storage&lt;/a&gt;| |45 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-storage-event-and-its-event-handler&quot;&gt;What is a storage event and its event handler&lt;/a&gt;| |46 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-web-storage&quot;&gt;Why do you need web storage&lt;/a&gt;| |47 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-storage-browser-support&quot;&gt;How do you check web storage browser support&lt;/a&gt;| |48 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-workers-browser-support&quot;&gt;How do you check web workers browser support&lt;/a&gt;| |49 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-of-web-worker&quot;&gt;Give an example of web worker&lt;/a&gt;| |50 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-restrictions-of-web-workers-on-dom&quot;&gt;What are the restrictions of web workers on DOM&lt;/a&gt;| |51 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-promise&quot;&gt;What is a promise&lt;/a&gt;| |52 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-promise&quot;&gt;Why do you need a promise&lt;/a&gt;| |53 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-three-states-of-promise&quot;&gt;What are the three states of promise&lt;/a&gt;| |54 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-function&quot;&gt;What is a callback function&lt;/a&gt;| |55 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-need-callbacks&quot;&gt;Why do we need callbacks&lt;/a&gt;| |56 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-hell&quot;&gt;What is a callback hell&lt;/a&gt;| |57 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-server-sent-events&quot;&gt;What is server-sent events&lt;/a&gt;| |58 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-receive-server-sent-event-notifications&quot;&gt;How do you receive server-sent event notifications&lt;/a&gt;| |59 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-browser-support-for-server-sent-events&quot;&gt;How do you check browser support for server-sent events&lt;/a&gt;| |60 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-events-available-for-server-sent-events&quot;&gt;What are the events available for server sent events&lt;/a&gt;| |61 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-main-rules-of-promise&quot;&gt;What are the main rules of promise&lt;/a&gt;| |62 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-callback-in-callback&quot;&gt;What is callback in callback&lt;/a&gt;| |63 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise-chaining&quot;&gt;What is promise chaining&lt;/a&gt;| |64 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise.all&quot;&gt;What is promise.all&lt;/a&gt;| |65 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-race-method-in-promise&quot;&gt;What is the purpose of race method in promise&lt;/a&gt;| |66 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-strict-mode-in-javascript&quot;&gt;What is a strict mode in javascript&lt;/a&gt;| |67 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-strict-mode&quot;&gt;Why do you need strict mode&lt;/a&gt;| |68 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-strict-mode&quot;&gt;How do you declare strict mode&lt;/a&gt;| |69 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-exclamation&quot;&gt;What is the purpose of double exclamation&lt;/a&gt;| |70 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-delete-operator&quot;&gt;What is the purpose of delete operator&lt;/a&gt;| |71 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typeof-operator&quot;&gt;What is typeof operator&lt;/a&gt;| |72 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-undefined-property&quot;&gt;What is undefined property&lt;/a&gt;| |73 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-null-value&quot;&gt;What is null value&lt;/a&gt;| |74 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-null-and-undefined&quot;&gt;What is the difference between null and undefined&lt;/a&gt;| |75 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-eval&quot;&gt;What is eval&lt;/a&gt;| |76 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-window-and-document&quot;&gt;What is the difference between window and document&lt;/a&gt;| |77 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-history-in-javascript&quot;&gt;How do you access history in javascript&lt;/a&gt;| |78 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-javascript-data-types&quot;&gt;What are the javascript data types&lt;/a&gt;| |79 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-isnan&quot;&gt;What is isNaN&lt;/a&gt;| |80 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-undeclared-and-undefined-variables&quot;&gt;What are the differences between undeclared and undefined variables&lt;/a&gt;| |81 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-global-variables&quot;&gt;What are global variables&lt;/a&gt;| |82 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-global-variables&quot;&gt;What are the problems with global variables&lt;/a&gt;| |83 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nan-property&quot;&gt;What is NaN property&lt;/a&gt;| |84 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-isfinite-function&quot;&gt;What is the purpose of isFinite function&lt;/a&gt; |85 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-flow&quot;&gt;What is an event flow&lt;/a&gt;| |86 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-bubbling&quot;&gt;What is event bubbling&lt;/a&gt;| |87 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-capturing&quot;&gt;What is event capturing&lt;/a&gt;| |88 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-submit-a-form-using-javascript&quot;&gt;How do you submit a form using JavaScript&lt;/a&gt;| |89 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-operating-system-details&quot;&gt;How do you find operating system details&lt;/a&gt;| |90 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-document-load-and-domcontentloaded-events&quot;&gt;What is the difference between document load and DOMContentLoaded events&lt;/a&gt;| |91 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-native,-host-and-user-objects&quot;&gt;What is the difference between native, host and user objects&lt;/a&gt;| |92 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-tools-or-techniques-used-for-debugging-javascript-code&quot;&gt;What are the tools or techniques used for debugging JavaScript code&lt;/a&gt;| |93 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-promises-over-callbacks&quot;&gt;What are the pros and cons of promises over callbacks&lt;/a&gt;| |94 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-an-attribute-and-a-property&quot;&gt;What is the difference between an attribute and a property&lt;/a&gt;| |95 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-same-origin-policy&quot;&gt;What is same-origin policy&lt;/a&gt;| |96 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-void-0&quot;&gt;What is the purpose of void 0&lt;/a&gt;| |97 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-compiled-or-interpreted-language&quot;&gt;Is JavaScript a compiled or interpreted language&lt;/a&gt;| |98 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-case-sensitive-language&quot;&gt;Is JavaScript a case-sensitive language&lt;/a&gt;| |99 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-there-any-relation-between-java-and-javascript&quot;&gt;Is there any relation between Java and JavaScript&lt;/a&gt;| |100| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-events&quot;&gt;What are events&lt;/a&gt;| |101| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#who-created-javascript&quot;&gt;Who created javascript&lt;/a&gt;| |102| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-preventdefault-method&quot;&gt;What is the use of preventDefault method&lt;/a&gt;| |103| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-stoppropagation-method&quot;&gt;What is the use of stopPropagation method&lt;/a&gt;| |104| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-steps-involved-in-return-false&quot;&gt;What are the steps involved in return false&lt;/a&gt;| |105| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-bom&quot;&gt;What is BOM&lt;/a&gt;| |106| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-settimeout&quot;&gt;What is the use of setTimeout&lt;/a&gt;| |107| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-setinterval&quot;&gt;What is the use of setInterval&lt;/a&gt;| |108| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-is-javascript-treated-as-single-threaded&quot;&gt;Why is JavaScript treated as Single threaded&lt;/a&gt;| |109| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-delegation&quot;&gt;What is an event delegation&lt;/a&gt;| |110| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ecmascript&quot;&gt;What is ECMAScript&lt;/a&gt;| |111| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json&quot;&gt;What is JSON&lt;/a&gt;| |112| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-syntax-rules-of-json&quot;&gt;What are the syntax rules of JSON&lt;/a&gt;| |113| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-json-stringify&quot;&gt;What is the purpose JSON stringify&lt;/a&gt;| |114| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-parse-json-string&quot;&gt;How do you parse JSON string&lt;/a&gt;| |115| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-json&quot;&gt;Why do you need JSON&lt;/a&gt;| |116| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-pwas?&quot;&gt;What are PWAs&lt;/a&gt;| |117| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-cleartimeout-method&quot;&gt;What is the purpose of clearTimeout method&lt;/a&gt;| |118| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-clearinterval-method&quot;&gt;What is the purpose of clearInterval method&lt;/a&gt;| |119| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redirect-new-page-in-javascript&quot;&gt;How do you redirect new page in javascript&lt;/a&gt;| |120| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-a-string-contains-a-substring&quot;&gt;How do you check whether a string contains a substring&lt;/a&gt;| |121| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-validate-an-email-in-javascript&quot;&gt;How do you validate an email in javascript&lt;/a&gt;| |122| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-current-url-with-javascript&quot;&gt;How do you get the current url with javascript&lt;/a&gt;| |123| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-url-properties-of-location-object&quot;&gt;What are the various url properties of location object&lt;/a&gt;| |124| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-query-string-values-in-javascript&quot;&gt;How do get query string values in javascript&lt;/a&gt;| |125| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-key-exists-in-an-object&quot;&gt;How do you check if a key exists in an object&lt;/a&gt;| |126| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-loop-through-or-enumerate-javascript-object&quot;&gt;How do you loop through or enumerate javascript object&lt;/a&gt;| |127| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-test-for-an-empty-object&quot;&gt;How do you test for an empty object&lt;/a&gt;| |128| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-arguments-object&quot;&gt;What is an arguments object&lt;/a&gt;| |129| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-first-letter-of-the-string-in-an-uppercase&quot;&gt;How do you make first letter of the string in an uppercase&lt;/a&gt;| |130| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-for-loop&quot;&gt;What are the pros and cons of for loop&lt;/a&gt;| |131| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-the-current-date-in-javascript&quot;&gt;How do you display the current date in javascript&lt;/a&gt;| |132| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-two-date-objects&quot;&gt;How do you compare two date objects&lt;/a&gt;| |133| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-string-starts-with-another-string&quot;&gt;How do you check if a string starts with another string&lt;/a&gt;| |134| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-in-javascript&quot;&gt;How do you trim a string in javascript&lt;/a&gt;| |135| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-add-a-key-value-pair-in-javascript&quot;&gt;How do you add a key value pair in javascript&lt;/a&gt;| |136| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-the-&#39;!--&#39;-notation-represents-a-special-operator&quot;&gt;Is the &#39;!--&#39; notation represents a special operator&lt;/a&gt;| |137| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-assign-default-values-to-variables&quot;&gt;How do you assign default values to variables&lt;/a&gt;| |138| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiline-strings&quot;&gt;How do you define multiline strings&lt;/a&gt;| |139| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-app-shell-model&quot;&gt;What is an app shell model&lt;/a&gt;| |140| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-we-define-properties-for-functions&quot;&gt;Can we define properties for functions&lt;/a&gt;| |141| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-way-to-find-the-number-of-parameters-expected-by-a-function&quot;&gt;What is the way to find the number of parameters expected by a function&lt;/a&gt;| |142| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-polyfill&quot;&gt;What is a polyfill&lt;/a&gt;| |143| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-break-and-continue-statements&quot;&gt;What are break and continue statements&lt;/a&gt;| |144| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-js-labels&quot;&gt;What are js labels&lt;/a&gt;| |145| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-keeping-declarations-at-the-top&quot;&gt;What are the benefits of keeping declarations at the top&lt;/a&gt;| |146| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-initializing-variables&quot;&gt;What are the benefits of initializing variables&lt;/a&gt;| |147| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-recommendations-to-create-new-object&quot;&gt;What are the recommendations to create new object&lt;/a&gt;| |148| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-json-arrays&quot;&gt;How do you define JSON arrays&lt;/a&gt;| |149| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-generate-random-integers&quot;&gt;How do you generate random integers&lt;/a&gt;| |150| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-you-write-a-random-integers-function-to-print-integers-with-in-a-range&quot;&gt;Can you write a random integers function to print integers with in a range&lt;/a&gt;| |151| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-tree-shaking&quot;&gt;What is tree shaking&lt;/a&gt;| |152| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-need-of-tree-shaking&quot;&gt;What is the need of tree shaking&lt;/a&gt;| |153| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-recommended-to-use-eval&quot;&gt;Is it recommended to use eval&lt;/a&gt;| |154| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regular-expression&quot;&gt;What is a Regular Expression&lt;/a&gt;| |155| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-string-methods-available-in-regular-expression&quot;&gt;What are the string methods available in Regular expression&lt;/a&gt;| |156| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modifiers-in-regular-expression&quot;&gt;What are modifiers in regular expression&lt;/a&gt;| |157| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-regular-expression-patterns&quot;&gt;What are regular expression patterns&lt;/a&gt;| |158| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regexp-object&quot;&gt;What is a RegExp object&lt;/a&gt;| |159| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-search-a-string-for-a-pattern&quot;&gt;How do you search a string for a pattern&lt;/a&gt;| |160| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-exec-method&quot;&gt;What is the purpose of exec method&lt;/a&gt;| |161| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-change-style-of-a-html-element&quot;&gt;How do you change style of a HTML element&lt;/a&gt;| |162| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-would-be-the-result-of-1+2+&#39;3&#39;&quot;&gt;What would be the result of 1+2+&#39;3&#39;&lt;/a&gt;| |163| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-debugger-statement&quot;&gt;What is a debugger statement&lt;/a&gt;| |164| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-breakpoints-indebugging&quot;&gt;What is the purpose of breakpoints in debugging&lt;/a&gt;| |165| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-use-reserved-words-as-identifiers&quot;&gt;Can I use reserved words as identifiers&lt;/a&gt;| |166| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser&quot;&gt;How do you detect a mobile browser&lt;/a&gt;| |167| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser-without-regexp&quot;&gt;How do you detect a mobile browser without regexp&lt;/a&gt;| |168| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-image-width-and-height-using-js&quot;&gt;How do you get the image width and height using JS&lt;/a&gt;| |169| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-synchronous-http-request&quot;&gt;How do you make synchronous HTTP request&lt;/a&gt;| |170| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-asynchronous-http-request&quot;&gt;How do you make asynchronous HTTP request&lt;/a&gt;| |171| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-date-to-another-timezone-in-javascript&quot;&gt;How do you convert date to another timezone in javascript&lt;/a&gt;| |172| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-used-to-get-size-of-window&quot;&gt;What are the properties used to get size of window&lt;/a&gt;| |173| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-conditional-operator-in-javascript&quot;&gt;What is a conditional operator in javascript&lt;/a&gt;| |174| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#Can-you-apply-chaining-on-conditional-operator&quot;&gt;Can you apply chaining on conditional operator&lt;/a&gt;| |175| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-ways-to-execute-javascript-after-page-load&quot;&gt;What are the ways to execute javascript after page load&lt;/a&gt;| |176| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-proto-and-prototype&quot;&gt;What is the difference between proto and prototype&lt;/a&gt;| |177| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-where-do-you-really-need-semicolon&quot;&gt;Give an example where do you really need semicolon&lt;/a&gt;| |178| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-freeze-method&quot;&gt;What is a freeze method&lt;/a&gt;| |179| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-freeze-method&quot;&gt;What is the purpose of freeze method&lt;/a&gt;| |180| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-i-need-to-use-freeze-method&quot;&gt;Why do I need to use freeze method&lt;/a&gt;| |181| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-browser-language-preference&quot;&gt;How do you detect a browser language preference&lt;/a&gt;| |182| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-convert-string-to-title-case-with-javascript&quot;&gt;How to convert string to title case with javascript&lt;/a&gt;| |183| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-javascript-disabled-in-the-page&quot;&gt;How do you detect javascript disabled in the page&lt;/a&gt;| |184| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-various-operators-supported-by-javascript&quot;&gt;What are various operators supported by javascript&lt;/a&gt;| |185| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-rest-parameter&quot;&gt;What is a rest parameter&lt;/a&gt;| |186| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-do-not-use-rest-parameter-as-a-last-argument&quot;&gt;What happens if you do not use rest parameter as a last argument&lt;/a&gt;| |187| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-bitwise-operators-available-in-javascript&quot;&gt;What are the bitwise operators available in javascript&lt;/a&gt;| |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-spread-operator&quot;&gt;What is a spread operator&lt;/a&gt;| |189| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-whether-object-is-frozen-or-not&quot;&gt;How do you determine whether object is frozen or not&lt;/a&gt;| |190| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-two-values-same-or-not-using-object&quot;&gt;How do you determine two values same or not using object&lt;/a&gt;| |191| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-using-object-is-method&quot;&gt;What is the purpose of using object is method&lt;/a&gt;| |192| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-copy-properties-from-one-object-to-other&quot;&gt;How do you copy properties from one object to other&lt;/a&gt;| |193| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-assign-method&quot;&gt;What are the applications of assign method&lt;/a&gt;| |194| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proxy-object&quot;&gt;What is a proxy object&lt;/a&gt;| |195| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-seal-method&quot;&gt;What is the purpose of seal method&lt;/a&gt;| |196| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-seal-method&quot;&gt;What are the applications of seal method&lt;/a&gt;| |197| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-freeze-and-seal-methods&quot;&gt;What are the differences between freeze and seal methods&lt;/a&gt;| |198| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-if-an-object-is-sealed-or-not&quot;&gt;How do you determine if an object is sealed or not&lt;/a&gt;| |199| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-enumerable-key-and-value-pairs&quot;&gt;How do you get enumerable key and value pairs&lt;/a&gt;| |200| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-object.values-and-object.entries-method&quot;&gt;What is the main difference between Object.values and Object.entries method&lt;/a&gt;| |201| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-can-you-get-the-list-of-keys-of-any-object&quot;&gt;How can you get the list of keys of any object&lt;/a&gt;| |202| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-object-with-prototype&quot;&gt;How do you create an object with prototype&lt;/a&gt;| |203| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakset&quot;&gt;What is a WeakSet&lt;/a&gt;| |204| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakset-and-set&quot;&gt;What are the differences between WeakSet and Set&lt;/a&gt;| |205| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakset&quot;&gt;List down the collection of methods available on WeakSet&lt;/a&gt;| |206| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakmap&quot;&gt;What is a WeakMap&lt;/a&gt;| |207| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakmap-and-map&quot;&gt;What are the differences between WeakMap and Map&lt;/a&gt;| |208| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakmap&quot;&gt;List down the collection of methods available on WeakMap&lt;/a&gt;| |209| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-uneval&quot;&gt;What is the purpose of uneval&lt;/a&gt;| |210| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-encode-an-url&quot;&gt;How do you encode an URL&lt;/a&gt;| |211| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-decode-an-url&quot;&gt;How do you decode an URL&lt;/a&gt;| |212| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-the-contents-of-web-page&quot;&gt;How do you print the contents of web page&lt;/a&gt;| |213| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-uneval-and-eval&quot;&gt;What is the difference between uneval and eval&lt;/a&gt;| |214| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-anonymous-function&quot;&gt;What is an anonymous function&lt;/a&gt;| |215| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-precedence-order-between-local-and-global-variables&quot;&gt;What is the precedence order between local and global variables&lt;/a&gt;| |216| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-javascript-accessors&quot;&gt;What are javascript accessors&lt;/a&gt;| |217| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-property-on-object-constructor&quot;&gt;How do you define property on Object constructor&lt;/a&gt;| |218| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-get-and-defineproperty&quot;&gt;What is the difference between get and defineProperty&lt;/a&gt;| |219| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-getters-and-setters&quot;&gt;What are the advantages of Getters and Setters&lt;/a&gt;| |220| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-add-getters-and-setters-using-defineproperty-method&quot;&gt;Can I add getters and setters using defineProperty method&lt;/a&gt;| |221| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-switch-case&quot;&gt;What is the purpose of switch-case&lt;/a&gt;| |222| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-conventions-to-be-followed-for-the-usage-of-swtich-case&quot;&gt;What are the conventions to be followed for the usage of swtich case&lt;/a&gt;| |223| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-primitive-data-types&quot;&gt;What are primitive data types&lt;/a&gt;| |224| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-access-object-properties&quot;&gt;What are the different ways to access object properties&lt;/a&gt;| |225| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-function-parameter-rules&quot;&gt;What are the function parameter rules&lt;/a&gt;| |226| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-error-object&quot;&gt;What is an error object&lt;/a&gt;| |227| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#when-you-get-a-syntax-error&quot;&gt;When you get a syntax error&lt;/a&gt;| |228| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-error-names-from-error-object&quot;&gt;What are the different error names from error object&lt;/a&gt;| |229| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-statements-in-error-handling&quot;&gt;What are the various statements in error handling&lt;/a&gt;| |230| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-two-types-of-loops-in-javascript&quot;&gt;What are the two types of loops in javascript&lt;/a&gt;| |231| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nodejs&quot;&gt;What is nodejs&lt;/a&gt;| |232| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-intl-object&quot;&gt;What is an Intl object&lt;/a&gt;| |233| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-language-specific-date-and-time-formatting&quot;&gt;How do you perform language specific date and time formatting&lt;/a&gt;| |234| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-iterator&quot;&gt;What is an Iterator&lt;/a&gt;| |235| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-does-synchronous-iteration-works&quot;&gt;How does synchronous iteration works&lt;/a&gt;| |236| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-loop&quot;&gt;What is an event loop&lt;/a&gt;| |237| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-call-stack&quot;&gt;What is call stack&lt;/a&gt;| |238| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-queue&quot;&gt;What is an event queue&lt;/a&gt;| |239| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-decorator&quot;&gt;What is a decorator&lt;/a&gt;| |240| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-of-intl-object&quot;&gt;What are the properties of Intl object&lt;/a&gt;| |241| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-unary-operator&quot;&gt;What is an Unary operator&lt;/a&gt;| |242| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-sort-elements-in-an-array&quot;&gt;How do you sort elements in an array&lt;/a&gt;| |243| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-comparefunction-while-sorting-arrays&quot;&gt;What is the purpose of compareFunction while sorting arrays&lt;/a&gt;| |244| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reversing-an-array&quot;&gt;How do you reversing an array&lt;/a&gt;| |245| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-value-in-an-array&quot;&gt;How do you find min and max value in an array&lt;/a&gt;| |246| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-values-without--math-functions&quot;&gt;How do you find min and max values without Math functions&lt;/a&gt;| |247| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-empty-statement-and-purpose-of-it&quot;&gt;What is an empty statement and purpose of it&lt;/a&gt;| |248| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-meta-data-of-a-module&quot;&gt;How do you get meta data of a module&lt;/a&gt;| |249| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-comma-operator&quot;&gt;What is a comma operator&lt;/a&gt;| |250| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-advantage-of-a-comma-operator&quot;&gt;What is the advantage of a comma operator&lt;/a&gt;| |251| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typescript&quot;&gt;What is typescript&lt;/a&gt;| |252| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-javascript-and-typescript&quot;&gt;What are the differences between javascript and typescript&lt;/a&gt;| |253| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-typescript-over-javascript&quot;&gt;What are the advantages of typescript over javascript&lt;/a&gt;| |254| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-object-initializer&quot;&gt;What is an object initializer&lt;/a&gt;| |255| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-constructor-method&quot;&gt;What is a constructor method&lt;/a&gt;| |256| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-write-constructor-more-than-once-in-a-class&quot;&gt;What happens if you write constructor more than once in a class&lt;/a&gt;| |257| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-call-the-constructor-of-a-parent-class&quot;&gt;How do you call the constructor of a parent class&lt;/a&gt;| |258| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-prototype-of-an-object&quot;&gt;How do you get the prototype of an object&lt;/a&gt;| |259| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-i-pass-string-type-for-getprototype-method&quot;&gt;What happens If I pass string type for getPrototype method&lt;/a&gt;| |260| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-set-prototype-of-one-object-to-another&quot;&gt;How do you set prototype of one object to another&lt;/a&gt;| |261| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-object-can-be-extendable-or-not&quot;&gt;How do you check whether an object can be extendable or not&lt;/a&gt;| |262| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-an-object-to-extend&quot;&gt;How do you prevent an object to extend&lt;/a&gt;| |263| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-make-an-object-non-extensible&quot;&gt;What are the different ways to make an object non-extensible&lt;/a&gt;| |264| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiple-properties-on-an-object&quot;&gt;How do you define multiple properties on an object&lt;/a&gt;| |265| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-mean-in-javascript&quot;&gt;What is MEAN in javascript&lt;/a&gt;| |266| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-obfuscation-in-javascript&quot;&gt;What Is Obfuscation in javascript&lt;/a&gt;| |267| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-obfuscation&quot;&gt;Why do you need Obfuscation&lt;/a&gt;| |268| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minification&quot;&gt;What is Minification&lt;/a&gt;| |269| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-minification&quot;&gt;What are the advantages of minification&lt;/a&gt;| |270| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-obfuscation-and-encryption&quot;&gt;What are the differences between Obfuscation and Encryption&lt;/a&gt;| |271| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-tools-used-for-minification&quot;&gt;What are the common tools used for minification&lt;/a&gt;| |272| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-using-javascript&quot;&gt;How do you perform form validation using javascript&lt;/a&gt;| |273| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-without-javascript&quot;&gt;How do you perform form validation without javascript&lt;/a&gt;| |274| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-dom-methods-available-for-constraint-validation&quot;&gt;What are the DOM methods available for constraint validation&lt;/a&gt;| |275| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-available-constraint-validation-dom-properties&quot;&gt;What are the available constraint validation DOM properties&lt;/a&gt;| |276| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-validity-properties&quot;&gt;What are the list of validity properties&lt;/a&gt;| |277| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-usage-of-rangeoverflow-property&quot;&gt;Give an example usage of rangeOverflow property&lt;/a&gt;| |278| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-enums-feature-available-in-javascript&quot;&gt;Is enums feature available in javascript&lt;/a&gt;| |279| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-an-enum&quot;&gt;What is an enum&lt;/a&gt;| |280| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-list-all-properties-of-an-object&quot;&gt;How do you list all properties of an object&lt;/a&gt;| |281| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-property-descriptors-of-an-object&quot;&gt;How do you get property descriptors of an object&lt;/a&gt;| |282| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-attributes-provided-by-a-property-descriptor&quot;&gt;What are the attributes provided by a property descriptor&lt;/a&gt;| |283| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-extend-classes&quot;&gt;How do you extend classes&lt;/a&gt;| |284| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-i-modify-the-url-without-reloading-the-page&quot;&gt;How do I modify the url without reloading the page&lt;/a&gt;| |285| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-array-includes-a-particular-value-or-not&quot;&gt;How do you check whether an array includes a particular value or not&lt;/a&gt;| |286| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-scalar-arrays&quot;&gt;How do you compare scalar arrays&lt;/a&gt;| |287| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-get-the-value-from-get-parameters&quot;&gt;How to get the value from get parameters&lt;/a&gt;| |288| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-numbers-with-commas-as-thousand-separators&quot;&gt;How do you print numbers with commas as thousand separators&lt;/a&gt;| |289| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-java-and-javascript&quot;&gt;What is the difference between java and javascript&lt;/a&gt;| |290| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-supports-namespace&quot;&gt;Is javascript supports namespace&lt;/a&gt;| |291| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-namespace&quot;&gt;How do you declare namespace&lt;/a&gt;| |292| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-invoke-javascript-code-in-an-iframe-from-parent-page&quot;&gt;How do you invoke javascript code in an iframe from parent page&lt;/a&gt;| |293| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-the-timezone-offset-from-date&quot;&gt;How do get the timezone offset from date&lt;/a&gt;| |294| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-load-css-and-js-files-dynamically&quot;&gt;How do you load CSS and JS files dynamically&lt;/a&gt;| |295| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-methods-to-find-html-elements-in-dom&quot;&gt;What are the different methods to find HTML elements in DOM&lt;/a&gt;| |296| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-jquery&quot;&gt;What is jQuery&lt;/a&gt;| |297| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-v8-javascript-engine&quot;&gt;What is V8 JavaScript engine&lt;/a&gt;| |298| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-call-javascript-as-dynamic-language&quot;&gt;Why do we call javascript as dynamic language&lt;/a&gt;| |299| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-void-operator&quot;&gt;What is a void operator&lt;/a&gt;| |300| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-set-the-cursor-to-wait&quot;&gt;How to set the cursor to wait&lt;/a&gt;| |301| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-infinite-loop&quot;&gt;How do you create an infinite loop&lt;/a&gt;| |302| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-to-avoid-with-statement&quot;&gt;Why do you need to avoid with statement&lt;/a&gt;| |303| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-for-loops&quot;&gt;What is the output of below for loops&lt;/a&gt;| |304| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-some-of-the-features-of-es6&quot;&gt;List down some of the features of ES6&lt;/a&gt;| |305| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-es6&quot;&gt;What is ES6&lt;/a&gt;| |306| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-I-redeclare-let-and-const-variables&quot;&gt;Can I redeclare let and const variables&lt;/a&gt;| |307| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-const-variable-makes-the-value-immutable&quot;&gt;Is const variable makes the value immutable&lt;/a&gt;| |308| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-parameters&quot;&gt;What are default parameters&lt;/a&gt;| |309| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-template-literals&quot;&gt;What are template literals&lt;/a&gt;| |310| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-write-multi-line-strings-in-template-literals&quot;&gt;How do you write multi-line strings in template literals&lt;/a&gt;| |311| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-nesting-templates&quot;&gt;What are nesting templates&lt;/a&gt;| |312| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tagged-templates&quot;&gt;What are tagged templates&lt;/a&gt;| |313| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-raw-strings&quot;&gt;What are raw strings&lt;/a&gt;| |314| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-assignment&quot;&gt;What is destructuring assignment&lt;/a&gt;| |315| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-values-in-destructuring-assignment&quot;&gt;What are default values in destructuring assignment&lt;/a&gt;| |316| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-swap-variables-in-destructuring-assignment&quot;&gt;How do you swap variables in destructuring assignment&lt;/a&gt;| |317| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-enhanced-object-literals&quot;&gt;What are enhanced object literals&lt;/a&gt;| |318| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-dynamic-imports&quot;&gt;What are dynamic imports&lt;/a&gt;| |319| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-use-cases-for-dynamic-imports&quot;&gt;What are the use cases for dynamic imports&lt;/a&gt;| |320| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-typed-arrays&quot;&gt;What are typed arrays&lt;/a&gt;| |321| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-module-loaders&quot;&gt;What are the advantages of module loaders&lt;/a&gt;| |322| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-collation&quot;&gt;What is collation&lt;/a&gt;| |323| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-for...of-statement&quot;&gt;What is for...of statement&lt;/a&gt;| |324| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-spread-operator-array&quot;&gt;What is the output of below spread operator array&lt;/a&gt;| |325| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessage-secure&quot;&gt;Is PostMessage secure&lt;/a&gt;| |326| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-postmessage-target-origin-as-wildcard&quot;&gt;What are the problems with postmessage target origin as wildcard&lt;/a&gt;| |327| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-avoid-receiving-postmessages-from-attackers&quot;&gt;How do you avoid receiving postMessages from attackers&lt;/a&gt;| |328| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-avoid-using-postmessages-completely&quot;&gt;Can I avoid using postMessages completely&lt;/a&gt;| |329| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessages-synchronous&quot;&gt;Is postMessages synchronous&lt;/a&gt;| |330| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-paradigm-is-javascript&quot;&gt;What paradigm is Javascript&lt;/a&gt;| |331| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-internal-and-external-javascript&quot;&gt;What is the difference between internal and external javascript&lt;/a&gt;| |332| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-faster-than-server-side-script&quot;&gt;Is JavaScript faster than server side script&lt;/a&gt;| |333| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-status-of-a-checkbox&quot;&gt;How do you get the status of a checkbox&lt;/a&gt;| |334| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-tilde-operator&quot;&gt;What is the purpose of double tilde operator&lt;/a&gt;| |335| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-character-to-ascii-code&quot;&gt;How do you convert character to ASCII code&lt;/a&gt;| |336| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-arraybuffer&quot;&gt;What is ArrayBuffer&lt;/a&gt;| |337| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-string-expression&quot;&gt;What is the output of below string expression&lt;/a&gt;| |338| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-error-object&quot;&gt;What is the purpose of Error object&lt;/a&gt;| |339| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-evalerror-object&quot;&gt;What is the purpose of EvalError object&lt;/a&gt;| |340| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-cases-error-thrown-from-non-strict-mode-to-strict-mode&quot;&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/a&gt;| |341| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-all-objects-have-prototypes&quot;&gt;Is all objects have prototypes&lt;/a&gt;| |342| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-a-parameter-and-an-argument&quot;&gt;What is the difference between a parameter and an argument&lt;/a&gt;| |343| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-some-method-in-arrays&quot;&gt;What is the purpose of some method in arrays&lt;/a&gt;| |344| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-combine-two-or-more-arrays&quot;&gt;How do you combine two or more arrays&lt;/a&gt;| |345| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shallow-and-deep-copy&quot;&gt;What is the difference between Shallow and Deep copy&lt;/a&gt;| |346| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-specific-number-of-copies-of-a-string&quot;&gt;How do you create specific number of copies of a string&lt;/a&gt;| |347| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-return-all-matching-strings-against-a-regular-expression&quot;&gt;How do you return all matching strings against a regular expression&lt;/a&gt;| |348| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-at-the-beginning-or-ending&quot;&gt;How do you trim a string at the beginning or ending&lt;/a&gt;| |349| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-console-statement-with-unary-operator&quot;&gt;What is the output of below console statement with unary operator&lt;/a&gt;| |350| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#does-javascript-uses-mixins&quot;&gt;Does javascript uses mixins&lt;/a&gt;| |351| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-thunk-function&quot;&gt;What is a thunk function&lt;/a&gt;| |352| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-asynchronous-thunks&quot;&gt;What are asynchronous thunks&lt;/a&gt;| |353| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-function-calls&quot;&gt;What is the output of below function calls&lt;/a&gt;| |354| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-remove-all-line-breaks-from-a-string&quot;&gt;How to remove all line breaks from a string&lt;/a&gt;| |355| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-reflow-and-repaint&quot;&gt;What is the difference between reflow and repaint&lt;/a&gt;| |356| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-with-negating-an-array&quot;&gt;What happens with negating an array&lt;/a&gt;| |357| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-we-add-two-arrays&quot;&gt;What happens if we add two arrays&lt;/a&gt;| |358| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-prepend-additive-operator-on-falsy-values&quot;&gt;What is the output of prepend additive operator on falsy values&lt;/a&gt;| |359| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-self-string-using-special-characters&quot;&gt;How do you create self string using special characters&lt;/a&gt;| |360| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-remove-falsy-values-from-an-array&quot;&gt;How do you remove falsy values from an array&lt;/a&gt;| |361| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-unique-values-of-an-array&quot;&gt;How do you get unique values of an array&lt;/a&gt;| |362| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-aliases&quot;&gt;What is destructuring aliases&lt;/a&gt;| |363| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-map-the-array-values-without-using-map-method&quot;&gt;How do you map the array values without using map method&lt;/a&gt;| |364| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-empty-an-array&quot;&gt;How do you empty an array&lt;/a&gt;| |365| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-rounding-numbers-to-certain-decimals&quot;&gt;How do you rounding numbers to certain decimals&lt;/a&gt;| |366| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-convert-an-array-to-an-object&quot;&gt;What is the easiest way to convert an array to an object&lt;/a&gt;| |367| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-array-with-some-data&quot;&gt;How do you create an array with some data&lt;/a&gt;| |368| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-placeholders-from-console-object&quot;&gt;What are the placeholders from console object&lt;/a&gt;| |369| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-add-css-to-console-messages&quot;&gt;Is it possible to add CSS to console messages&lt;/a&gt;| |370| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-dir-method-of-console-object&quot;&gt;What is the purpose of dir method of console object&lt;/a&gt;| |371| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-debug-html-elements-in-console&quot;&gt;Is it possible to debug HTML elements in console&lt;/a&gt;| |372| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-data-in-a-tabular-format-using-console-object&quot;&gt;How do you display data in a tabular format using console object&lt;/a&gt;| |373| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-verify-that-an-argument-is-a-number-or-not&quot;&gt;How do you verify that an argument is a Number or not&lt;/a&gt;| |374| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-copy-to-clipboard-button&quot;&gt;How do you create copy to clipboard button&lt;/a&gt;| |375| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-shortcut-to-get-timestamp&quot;&gt;What is the shortcut to get timestamp&lt;/a&gt;| |376| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-flattening-multi-dimensional-arrays&quot;&gt;How do you flattening multi dimensional arrays&lt;/a&gt;| |377| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-multi-condition-checking&quot;&gt;What is the easiest multi condition checking&lt;/a&gt;| |378| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-capture-browser-back-button&quot;&gt;How do you capture browser back button&lt;/a&gt;| |379| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-disable-right-click-in-the-web-page&quot;&gt;How do you disable right click in the web page&lt;/a&gt;| |380| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-wrapper-objects&quot;&gt;What are wrapper objects&lt;/a&gt;| |381| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ajax&quot;&gt;What is AJAX&lt;/a&gt;| |382| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-deal-with-asynchronous-code&quot;&gt;What are the different ways to deal with Asynchronous Code&lt;/a&gt;| |383| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-cancel-a-fetch-request&quot;&gt;How to cancel a fetch request&lt;/a&gt;| |384| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-speech-api&quot;&gt;What is web speech API&lt;/a&gt;| |385| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minimum-timeout-throttling&quot;&gt;What is minimum timeout throttling&lt;/a&gt;| |386| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-implement-zero-timeout-in-modern-browsers&quot;&gt;How do you implement zero timeout in modern browsers&lt;/a&gt;| |387| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tasks-in-event-loop&quot;&gt;What are tasks in event loop&lt;/a&gt;| |388| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-microtasks&quot;&gt;What are microtasks&lt;/a&gt;| |389| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-different-event-loops&quot;&gt;What are different event loops&lt;/a&gt;| |390| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-queuemicrotask&quot;&gt;What is the purpose of queueMicrotask&lt;/a&gt;| |391| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-use-javascript-libraries-in-typescript-file&quot;&gt;How do you use javascript libraries in typescript file&lt;/a&gt;| |392| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-promises-and-observables&quot;&gt;What are the differences between promises and observables&lt;/a&gt;| |393| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-heap&quot;&gt;What is heap&lt;/a&gt;| |394| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-table&quot;&gt;What is an event table&lt;/a&gt;| |395| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-microtask-queue&quot;&gt;What is a microTask queue&lt;/a&gt;| |396| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shim-and-polyfill&quot;&gt;What is the difference between shim and polyfill&lt;/a&gt;| |397| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-primitive-or-non-primitive-value-type&quot;&gt;How do you detect primitive or non primitive value type&lt;/a&gt;| |398| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-babel&quot;&gt;What is babel&lt;/a&gt;| |399| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-node.js-completely-single-threaded&quot;&gt;Is Node.js completely single threaded&lt;/a&gt;| |400| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-use-cases-of-observables&quot;&gt;What are the common use cases of observables&lt;/a&gt;| |401| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-rxjs&quot;&gt;What is RxJS&lt;/a&gt;| |402| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-constructor-and-function-declaration&quot;&gt;What is the difference between Function constructor and function declaration&lt;/a&gt;| |403| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-short-circuit-condition&quot;&gt;What is a Short circuit condition&lt;/a&gt;| |404| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-resize-an-array&quot;&gt;What is the easiest way to resize an array&lt;/a&gt;| |405| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-observable&quot;&gt;What is an observable&lt;/a&gt;| |406| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-and-class-declarations&quot;&gt;What is the difference between function and class declarations&lt;/a&gt;| |407| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-async-function&quot;&gt;What is an async function&lt;/a&gt;| |408| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-promises-swallowing-errors&quot;&gt;How do you prevent promises swallowing errors&lt;/a&gt;| |409| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-deno&quot;&gt;What is deno&lt;/a&gt;| |410| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-an-object-iterable-in-javascript&quot;&gt;How do you make an object iterable in javascript&lt;/a&gt;| |411| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proper-tail-call&quot;&gt;What is a Proper Tail Call&lt;/a&gt;| |412| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-an-object-is-a-promise-or-not&quot;&gt;How do you check an object is a promise or not&lt;/a&gt;| |413| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-detect-if-a-function-is-called-as-constructor&quot;&gt;How to detect if a function is called as constructor&lt;/a&gt;| |414| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-arguments-object-and-rest-parameter&quot;&gt;What are the differences between arguments object and rest parameter&lt;/a&gt;| |415| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-spread-operator-and-rest-parameter&quot;&gt;What are the differences between spread operator and rest parameter&lt;/a&gt;| |416| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-kinds-of-generators&quot;&gt;What are the different kinds of generators&lt;/a&gt;| |417| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-built-in-iterables&quot;&gt;What are the built-in iterables&lt;/a&gt;| |418| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-for...of-and-for...in-statements&quot;&gt;What are the differences between for...of and for...in statements&lt;/a&gt;| |419| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-instance-and-non-instance-properties&quot;&gt;How do you define instance and non-instance properties&lt;/a&gt;| |420| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-isnan-and-number.isnan&quot;&gt;What is the difference between isNaN and Number.isNaN?&lt;/a&gt;| |421| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-invoke-an-iife-without-any-extra-brackets&quot;&gt;How to invoke an IIFE without any extra brackets?&lt;/a&gt;| |422| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-that-possible-to-use-expressions-in-switch-cases&quot;&gt;Is that possible to use expressions in switch cases?&lt;/a&gt;| |423| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-ignore-promise-errors&quot;&gt;What is the easiest way to ignore promise errors?&lt;/a&gt;| |424| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-style-the-console-output-using-css&quot;&gt;How do style the console output using CSS?&lt;/a&gt;|&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways to create objects in JavaScript&lt;/h3&gt; &lt;p&gt;There are many ways to create objects in javascript as below&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The simplest way to create an empty object is using the Object constructor. Currently this approach is not recommended.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new Object();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object&#39;s create method:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The create method of Object creates a new object by passing the prototype object as a parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = Object.create(null);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object literal syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The object literal syntax is equivalent to create method when it passes null as parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create any function and apply the new operator to create object instances,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name){
   var object = {};
   object.name=name;
   object.age=21;
   return object;
}
var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor with prototype:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This is similar to function constructor but it uses prototype for their properties and methods,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(){}
Person.prototype.name = &quot;Sudheer&quot;;
var object = new Person();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is equivalent to an instance created with an object create method with a function prototype and then call that function with an instance and parameters as arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func {};

new func(x, y, z);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Create a new instance using function prototype.
var newInstance = Object.create(func.prototype)

// Call the function
var result = func.call(newInstance, x, y, z),

// If the result is a non-null object then use it otherwise just use the new instance.
console.log(result &amp;amp;&amp;amp; typeof result === &#39;object&#39; ? result : newInstance);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ES6 Class syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;ES6 introduces class feature to create the objects&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
   constructor(name) {
      this.name = name;
   }
}

var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Singleton pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;A Singleton is an object which can only be instantiated one time. Repeated calls to its constructor return the same instance and this way one can ensure that they don&#39;t accidentally create multiple instances.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new function(){
   this.name = &quot;Sudheer&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a prototype chain&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Prototype chaining&lt;/strong&gt; is used to build new types of objects based on existing ones. It is similar to inheritance in a class based language. The prototype on object instance is available through &lt;strong&gt;Object.getPrototypeOf(object)&lt;/strong&gt; or &lt;strong&gt;proto&lt;/strong&gt; property whereas prototype on constructors function is available through object.prototype.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/prototype_chain.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Call, Apply and Bind&lt;/h3&gt; &lt;p&gt;The difference between Call, Apply and Bind can be explained with below examples,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Call:&lt;/strong&gt; The call() method invokes a function with a given &lt;code&gt;this&lt;/code&gt; value and arguments provided one by one&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.call(employee1, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
invite.call(employee2, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Apply:&lt;/strong&gt; Invokes the function and allows you to pass in arguments as an array&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.apply(employee1, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello John Rodson, How are you?
invite.apply(employee2, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;bind:&lt;/strong&gt; returns a new function, allowing you to pass in an array and any number of arguments&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

var inviteEmployee1 = invite.bind(employee1);
var inviteEmployee2 = invite.bind(employee2);
inviteEmployee1(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
inviteEmployee2(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Call and apply are pretty interchangeable. Both execute the current function immediately. You need to decide whether it’s easier to send in an array or a comma separated list of arguments. You can remember by treating Call is for comma (separated list) and Apply is for Array. Whereas Bind creates a new function that will have &lt;code&gt;this&lt;/code&gt; set to the first parameter passed to bind().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON and its common operations&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt; is a text-based data format following JavaScript object syntax, which was popularized by &lt;code&gt;Douglas Crockford&lt;/code&gt;. It is useful when you want to transmit data across a network and it is basically just a text file with an extension of .json, and a MIME type of application/json &lt;strong&gt;Parsing:&lt;/strong&gt; Converting a string to a native object&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.parse(text)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Stringification: **converting a native object to a string so it can be transmitted across the network&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.stringify(object)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array slice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;slice()&lt;/strong&gt; method returns the selected elements in an array as a new array object. It selects the elements starting at the given start argument, and ends at the given optional end argument without including the last element. If you omit the second argument then it selects till the end. Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegers = [1, 2, 3, 4, 5];
let arrayIntegers1 = arrayIntegers.slice(0,2); // returns [1,2]
let arrayIntegers2 = arrayIntegers.slice(2,3); // returns [3]
let arrayIntegers3 = arrayIntegers.slice(4); //returns [5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Slice method won&#39;t mutate the original array but it returns the subset as a new array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array splice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;splice()&lt;/strong&gt; method is used either adds/removes items to/from an array, and then returns the removed item. The first argument specifies the array position for insertion or deletion whereas the option second argument indicates the number of elements to be deleted. Each additional argument is added to the array. Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegersOriginal1 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal2 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal3 = [1, 2, 3, 4, 5];

let arrayIntegers1 = arrayIntegersOriginal1.splice(0,2); // returns [1, 2]; original array: [3, 4, 5]
let arrayIntegers2 = arrayIntegersOriginal2.splice(3); // returns [4, 5]; original array: [1, 2, 3]
let arrayIntegers3 = arrayIntegersOriginal3.splice(3, 1, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;); //returns [4]; original array: [1, 2, 3, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, 5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Splice method modifies the original array and returns the deleted array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between slice and splice&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; &lt;p&gt;| Slice | Splice | |---- | --------- | Doesn&#39;t modify the original array(immutable) | Modifies the original array(mutable) | | Returns the subset of original array | Returns the deleted elements as array | | Used to pick the elements from array | Used to insert or delete elements to/from array|&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare Object and Map&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt; are similar to &lt;strong&gt;Maps&lt;/strong&gt; in that both let you set keys to values, retrieve those values, delete keys, and detect whether something is stored at a key. Due to this reason, Objects have been used as Maps historically. But there are important differences that make using a Map preferable in certain cases.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The keys of an Object are Strings and Symbols, whereas they can be any value for a Map, including functions, objects, and any primitive.&lt;/li&gt; 
   &lt;li&gt;The keys in Map are ordered while keys added to Object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.&lt;/li&gt; 
   &lt;li&gt;You can get the size of a Map easily with the size property, while the number of properties in an Object must be determined manually.&lt;/li&gt; 
   &lt;li&gt;A Map is an iterable and can thus be directly iterated, whereas iterating over an Object requires obtaining its keys in some fashion and iterating over them.&lt;/li&gt; 
   &lt;li&gt;An Object has a prototype, so there are default keys in the map that could collide with your keys if you&#39;re not careful. As of ES5 this can be bypassed by using map = Object.create(null), but this is seldom done.&lt;/li&gt; 
   &lt;li&gt;A Map may perform better in scenarios involving frequent addition and removal of key pairs.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between == and === operators&lt;/h3&gt; &lt;p&gt;JavaScript provides both strict(===, !==) and type-converting(==, !=) equality comparison. The strict operators take type of variable in consideration, while non-strict operators make type correction/conversion based upon values of variables. The strict operators follow the below conditions for different types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two strings are strictly equal when they have the same sequence of characters, same length, and same characters in corresponding positions.&lt;/li&gt; 
   &lt;li&gt;Two numbers are strictly equal when they are numerically equal. i.e, Having the same number value. There are two special cases in this, 
    &lt;ol&gt; 
     &lt;li&gt;NaN is not equal to anything, including NaN.&lt;/li&gt; 
     &lt;li&gt;Positive and negative zeros are equal to one another.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Two Boolean operands are strictly equal if both are true or both are false.&lt;/li&gt; 
   &lt;li&gt;Two objects are strictly equal if they refer to the same Object.&lt;/li&gt; 
   &lt;li&gt;Null and Undefined types are not equal with ===, but equal with ==. i.e, null===undefined --&amp;gt; false but null==undefined --&amp;gt; true&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Some of the example which covers the above cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;0 == false   // true
0 === false  // false
1 == &quot;1&quot;     // true
1 === &quot;1&quot;    // false
null == undefined // true
null === undefined // false
&#39;0&#39; == false // true
&#39;0&#39; === false // false
[]==[] or []===[] //false, refer different objects in memory
{}=={} or {}==={} //false, refer different objects in memory
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are lambda or arrow functions&lt;/h3&gt; &lt;p&gt;An arrow function is a shorter syntax for a function expression and does not have its own &lt;strong&gt;this, arguments, super, or new.target&lt;/strong&gt;. These functions are best suited for non-method functions, and they cannot be used as constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first class function&lt;/h3&gt; &lt;p&gt;In Javascript, functions are first class objects. First-class functions means when functions in that language are treated like any other variable.&lt;/p&gt; &lt;p&gt;For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable. For example, in the below example, handler functions assigned to a listener&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const handler = () =&amp;gt; console.log (&#39;This is a click handler function&#39;);
document.addEventListener (&#39;click&#39;, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first order function&lt;/h3&gt; &lt;p&gt;First-order function is a function that doesn’t accept another function as an argument and doesn’t return a function as its return value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrder = () =&amp;gt; console.log (&#39;I am a first order function!&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a higher order function&lt;/h3&gt; &lt;p&gt;Higher-order function is a function that accepts another function as an argument or returns a function as a return value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrderFunc = () =&amp;gt; console.log (&#39;Hello I am a First order function&#39;);
const higherOrder = ReturnFirstOrderFunc =&amp;gt; ReturnFirstOrderFunc ();
higherOrder (firstOrderFunc);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a unary function&lt;/h3&gt; &lt;p&gt;Unary function (i.e. monadic) is a function that accepts exactly one argument. Let us take an example of unary function. It stands for a single argument accepted by a function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const unaryFunction = a =&amp;gt; console.log (a + 10); // Add 10 to the given argument and display the value
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the currying function&lt;/h3&gt; &lt;p&gt;Currying is the process of taking a function with multiple arguments and turning it into a sequence of functions each with only a single argument. Currying is named after a mathematician Haskell Curry. By applying currying, a n-ary function turns it into a unary function. Let&#39;s take an example of n-ary function and how it turns into a currying function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const multiArgFunction = (a, b, c) =&amp;gt; a + b + c;
const curryUnaryFunction = a =&amp;gt; b =&amp;gt; c =&amp;gt; a + b + c;
curryUnaryFunction (1); // returns a function: b =&amp;gt; c =&amp;gt;  1 + b + c
curryUnaryFunction (1) (2); // returns a function: c =&amp;gt; 3 + c
curryUnaryFunction (1) (2) (3); // returns the number 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Curried functions are great to improve code reusability and functional composition.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a pure function&lt;/h3&gt; &lt;p&gt;A &lt;strong&gt;Pure function&lt;/strong&gt; is a function where the return value is only determined by its arguments without any side effects. i.e, If you call a function with the same arguments &#39;n&#39; number of times and &#39;n&#39; number of places in the application then it will always return the same value. Let&#39;s take an example to see the difference between pure and impure functions,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Impure
let numberArray = [];
const impureAddNumber = number =&amp;gt; numberArray.push (number);
//Pure
const pureAddNumber = number =&amp;gt; argNumberArray =&amp;gt;
  argNumberArray.concat ([number]);

//Display the results
console.log (impureAddNumber (6)); // returns 1
console.log (numberArray); // returns [6]
console.log (pureAddNumber (7) (numberArray)); // returns [6, 7]
console.log (numberArray); // returns [6]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per above code snippets, Push function is impure itself by altering the array and returning an push number index which is independent of parameter value. Whereas Concat on the other hand takes the array and concatenates it with the other array producing a whole new array without side effects. Also, the return value is a concatenation of the previous array. Remember that Pure functions are important as they simplify unit testing without any side effects and no need for dependency injection. They also avoid tight coupling and make it harder to break your application by not having any side effects. These principles are coming together with &lt;strong&gt;Immutability&lt;/strong&gt; concept of ES6 by giving preference to &lt;strong&gt;const&lt;/strong&gt; over &lt;strong&gt;let&lt;/strong&gt; usage.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the let keyword&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;let&lt;/code&gt; statement declares a &lt;strong&gt;block scope local variable&lt;/strong&gt;. Hence the variables defined with let keyword are limited in scope to the block, statement, or expression on which it is used. Whereas variables declared with the var keyword used to define a variable globally, or locally to an entire function regardless of block scope. Let&#39;s take an example to demonstrate the usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 30;
if (counter === 30) {
  let counter = 31;
  console.log(counter); // 31
}
console.log(counter); // 30 (because if block variable won&#39;t exist here)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between let and var&lt;/h3&gt; &lt;p&gt;You can list out the differences in a tabular format&lt;/p&gt; &lt;p&gt;| var | let | |---- | --------- | It is been available from the beginning of JavaScript | Introduced as part of ES6 | | It has function scope | It has block scope | | Variables will be hoisted | Hoisted but not initialized |&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to see the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function userDetails(username) {
   if(username) {
     console.log(salary); // undefined(due to hoisting)
     console.log(age); // error: age is not defined
     let age = 30;
     var salary = 10000;
   }
   console.log(salary); //10000 (accessible to due function scope)
   console.log(age); //error: age is not defined(due to block scope)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the reason to choose the name let as a keyword&lt;/h3&gt; &lt;p&gt;Let is a mathematical statement that was adopted by early programming languages like Scheme and Basic. It has been borrowed from dozens of other languages that use let already as a traditional keyword as close to var as possible.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redeclare variables in switch block without an error&lt;/h3&gt; &lt;p&gt;If you try to redeclare variables in a &lt;code&gt;switch block&lt;/code&gt; then it will cause errors because there is only one block. For example, the below code block throws a syntax error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
switch(x) {
  case 0:
    let name;
    break;

  case 1:
    let name; // SyntaxError for redeclaration.
    break;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To avoid this error, you can create a nested block inside a case clause and create a new block scoped lexical environment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
    switch(x) {
      case 0: {
        let name;
        break;
      }
      case 1: {
        let name; // No SyntaxError for redeclaration.
        break;
      }
    }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the Temporal Dead Zone&lt;/h3&gt; &lt;p&gt;The Temporal Dead Zone is a behavior in JavaScript that occurs when declaring a variable with the let and const keywords, but not with var. In ECMAScript 6, accessing a let or const variable before its declaration (within its scope) causes a ReferenceError. The time span when that happens, between the creation of a variable’s binding and its declaration, is called the temporal dead zone. Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function somemethod() {
  console.log(counter1); // undefined
  console.log(counter2); // ReferenceError
  var counter1 = 1;
  let counter2 = 2;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/h3&gt; &lt;p&gt;IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined. The signature of it would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
    {
      // logic here
    }
 )
();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The primary reason to use an IIFE is to obtain data privacy because any variables declared within the IIFE cannot be accessed by the outside world. i.e, If you try to access variables with IIFE then it throws an error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
        {
          var message = &quot;IIFE&quot;;
          console.log(message);
        }
 )
();
console.log(message); //Error: message is not defined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of using modules&lt;/h3&gt; &lt;p&gt;There are a lot of benefits to using modules in favour of a sprawling. Some of the benefits are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maintainability&lt;/li&gt; 
   &lt;li&gt;Reusability&lt;/li&gt; 
   &lt;li&gt;Namespacing&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is memoization&lt;/h3&gt; &lt;p&gt;Memoization is a programming technique which attempts to increase a function’s performance by caching its previously computed results. Each time a memoized function is called, its parameters are used to index the cache. If the data is present, then it can be returned, without executing the entire function. Otherwise the function is executed and then the result is added to the cache. Let&#39;s take an example of adding function with memoization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const memoizAddition = () =&amp;gt; {
  let cache = {};
 return (value) =&amp;gt; {
  if (value in cache) {
   console.log(&#39;Fetching from cache&#39;);
   return cache[value]; // Here, cache.value cannot be used as property name starts with the number which is not a valid JavaScript  identifier. Hence, can only be accessed using the square bracket notation.
  }
  else {
   console.log(&#39;Calculating result&#39;);
   let result = value + 20;
   cache[value] = result;
   return result;
  }
 }
}
// returned function from memoizAddition
const addition = memoizAddition();
console.log(addition(20)); //output: 40 calculated
console.log(addition(20)); //output: 40 cached
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Hoisting&lt;/h3&gt; &lt;p&gt;Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their scope before code execution. Remember that JavaScript only hoists declarations, not initialisation. Let&#39;s take a simple example of variable hoisting,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(message); //output : undefined
var message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code looks like as below to the interpreter,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var message;
console.log(message);
message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are classes in ES6&lt;/h3&gt; &lt;p&gt;In ES6, Javascript classes are primarily syntactic sugar over JavaScript’s existing prototype-based inheritance. For example, the prototype based inheritance written in function expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Bike(model,color) {
    this.model = model;
    this.color = color;
}

Bike.prototype.getDetails = function() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas ES6 classes can be defined as an alternative&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Bike{
  constructor(color, model) {
    this.color= color;
    this.model= model;
  }

  getDetails() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are closures&lt;/h3&gt; &lt;p&gt;A closure is the combination of a function and the lexical environment within which that function was declared. i.e, It is an inner function that has access to the outer or enclosing function’s variables. The closure has three scope chains&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Own scope where variables defined between its curly brackets&lt;/li&gt; 
   &lt;li&gt;Outer function’s variables&lt;/li&gt; 
   &lt;li&gt;Global variables Let&#39;s take an example of closure concept,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Welcome(name){
  var greetingInfo = function(message){
   console.log(message+&#39; &#39;+name);
  }
return greetingInfo;
}
var myFunction = Welcome(&#39;John&#39;);
myFunction(&#39;Welcome &#39;); //Output: Welcome John
myFunction(&#39;Hello Mr.&#39;); //output: Hello Mr.John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above code, the inner function(greetingInfo) has access to the variables in the outer function scope(Welcome) even after the outer function has returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modules&lt;/h3&gt; &lt;p&gt;Modules refer to small units of independent, reusable code and also act as the foundation of many JavaScript design patterns. Most of the JavaScript modules export an object literal, a function, or a constructor&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need modules&lt;/h3&gt; &lt;p&gt;Below are the list of benefits using modules in javascript ecosystem&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maintainability&lt;/li&gt; 
   &lt;li&gt;Reusability&lt;/li&gt; 
   &lt;li&gt;Namespacing&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is scope in javascript&lt;/h3&gt; &lt;p&gt;Scope is the accessibility of variables, functions, and objects in some particular part of your code during runtime. In other words, scope determines the visibility of variables and other resources in areas of your code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a service worker&lt;/h3&gt; &lt;p&gt;A Service worker is basically a script (JavaScript file) that runs in the background, separate from a web page and provides features that don&#39;t need a web page or user interaction. Some of the major features of service workers are Rich offline experiences(offline first web application development), periodic background syncs, push notifications, intercept and handle network requests and programmatically managing a cache of responses.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you manipulate DOM using a service worker&lt;/h3&gt; &lt;p&gt;Service worker can&#39;t access the DOM directly. But it can communicate with the pages it controls by responding to messages sent via the &lt;code&gt;postMessage&lt;/code&gt; interface, and those pages can manipulate the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reuse information across service worker restarts&lt;/h3&gt; &lt;p&gt;The problem with service worker is that it gets terminated when not in use, and restarted when it&#39;s next needed, so you cannot rely on global state within a service worker&#39;s &lt;code&gt;onfetch&lt;/code&gt; and &lt;code&gt;onmessage&lt;/code&gt; handlers. In this case, service workers will have access to IndexedDB API in order to persist and reuse across restarts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IndexedDB&lt;/h3&gt; &lt;p&gt;IndexedDB is a low-level API for client-side storage of larger amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web storage&lt;/h3&gt; &lt;p&gt;Web storage is an API that provides a mechanism by which browsers can store key/value pairs locally within the user&#39;s browser, in a much more intuitive fashion than using cookies. The web storage provides two mechanisms for storing data on the client.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Local storage:&lt;/strong&gt; It stores data for current origin with no expiration date.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Session storage:&lt;/strong&gt; It stores data for one session and the data is lost when the browser tab is closed.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a post message&lt;/h3&gt; &lt;p&gt;Post message is a method that enables cross-origin communication between Window objects.(i.e, between a page and a pop-up that it spawned, or between a page and an iframe embedded within it). Generally, scripts on different pages are allowed to access each other if and only if the pages follow same-origin policy(i.e, pages share the same protocol, port number, and host).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Cookie&lt;/h3&gt; &lt;p&gt;A cookie is a piece of data that is stored on your computer to be accessed by your browser. Cookies are saved as key/value pairs. For example, you can create a cookie named username as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/cookie.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a Cookie&lt;/h3&gt; &lt;p&gt;Cookies are used to remember information about the user profile(such as username). It basically involves two steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a user visits a web page, the user profile can be stored in a cookie.&lt;/li&gt; 
   &lt;li&gt;Next time the user visits the page, the cookie remembers the user profile.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the options in a cookie&lt;/h3&gt; &lt;p&gt;There are few below options available for a cookie,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie is deleted when the browser is closed but you can change this behavior by setting expiry date (in UTC time).&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; expires=Sat, 8 Jun 2019 12:00:00 UTC&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie belongs to a current page. But you can tell the browser what path the cookie belongs to using a path parameter.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; path=/services&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you delete a cookie&lt;/h3&gt; &lt;p&gt;You can delete a cookie by setting the expiry date as a passed date. You don&#39;t need to specify a cookie value in this case. For example, you can delete a username cookie in the current page as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=; expires=Fri, 07 Jun 2019 00:00:00 UTC; path=/;&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should define the cookie path option to ensure that you delete the right cookie. Some browsers doesn&#39;t allow to delete a cookie unless you specify a path parameter.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between cookie, local storage and session storage&lt;/h3&gt; &lt;p&gt;Below are some of the differences between cookie, local storage and session storage,&lt;/p&gt; &lt;p&gt;| Feature | Cookie | Local storage | Session storage | |---- | --------- | ----- | ----- | | Accessed on client or server side | Both server-side &amp;amp; client-side | client-side only | client-side only | | Lifetime | As configured using Expires option | until deleted | until tab is closed | | SSL support | Supported | Not supported | Not supported | | Maximum data size | 4KB | 5 MB | 5MB |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between localStorage and sessionStorage&lt;/h3&gt; &lt;p&gt;LocalStorage is the same as SessionStorage but it persists the data even when the browser is closed and reopened(i.e it has no expiration time) whereas in sessionStorage data gets cleared when the page session ends.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access web storage&lt;/h3&gt; &lt;p&gt;The Window object implements the &lt;code&gt;WindowLocalStorage&lt;/code&gt; and &lt;code&gt;WindowSessionStorage&lt;/code&gt; objects which has &lt;code&gt;localStorage&lt;/code&gt;(window.localStorage) and &lt;code&gt;sessionStorage&lt;/code&gt;(window.sessionStorage) properties respectively. These properties create an instance of the Storage object, through which data items can be set, retrieved and removed for a specific domain and storage type (session or local). For example, you can read and write on local storage objects as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;localStorage.setItem(&#39;logo&#39;, document.getElementById(&#39;logo&#39;).value);
localStorage.getItem(&#39;logo&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods available on session storage&lt;/h3&gt; &lt;p&gt;The session storage provided methods for reading, writing and clearing the session data&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Save data to sessionStorage
sessionStorage.setItem(&#39;key&#39;, &#39;value&#39;);

// Get saved data from sessionStorage
let data = sessionStorage.getItem(&#39;key&#39;);

// Remove saved data from sessionStorage
sessionStorage.removeItem(&#39;key&#39;);

// Remove all saved data from sessionStorage
sessionStorage.clear();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a storage event and its event handler&lt;/h3&gt; &lt;p&gt;The StorageEvent is an event that fires when a storage area has been changed in the context of another document. Whereas onstorage property is an EventHandler for processing storage events. The syntax would be as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onstorage = functionRef;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take the example usage of onstorage event handler which logs the storage key and it&#39;s values&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onstorage = function(e) {
  console.log(&#39;The &#39; + e.key +
    &#39; key has been changed from &#39; + e.oldValue +
    &#39; to &#39; + e.newValue + &#39;.&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need web storage&lt;/h3&gt; &lt;p&gt;Web storage is more secure, and large amounts of data can be stored locally, without affecting website performance. Also, the information is never transferred to the server. Hence this is a more recommended approach than Cookies.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web storage browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for localStorage and sessionStorage before using web storage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Storage) !== &quot;undefined&quot;) {
  // Code for localStorage/sessionStorage.
} else {
  // Sorry! No Web Storage support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web workers browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for web workers before using it&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Worker) !== &quot;undefined&quot;) {
  // code for Web worker support.
} else {
  // Sorry! No Web Worker support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of a web worker&lt;/h3&gt; &lt;p&gt;You need to follow below steps to start using web workers for counting example&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker File: You need to write a script to increment the count value. Let&#39;s name it as counter.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let i = 0;

function timedCount() {
  i = i + 1;
  postMessage(i);
  setTimeout(&quot;timedCount()&quot;,500);
}

timedCount();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here postMessage() method is used to post a message back to the HTML page&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker Object: You can create a web worker object by checking for browser support. Let&#39;s name this file as web_worker_example.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(w) == &quot;undefined&quot;) {
  w = new Worker(&quot;counter.js&quot;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and we can receive messages from web worker&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.onmessage = function(event){
  document.getElementById(&quot;message&quot;).innerHTML = event.data;
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Terminate a Web Worker: Web workers will continue to listen for messages (even after the external script is finished) until it is terminated. You can use the terminate() method to terminate listening to the messages.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.terminate();
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Reuse the Web Worker: If you set the worker variable to undefined you can reuse the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w = undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the restrictions of web workers on DOM&lt;/h3&gt; &lt;p&gt;WebWorkers don&#39;t have access to below javascript objects since they are defined in an external files&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Window object&lt;/li&gt; 
   &lt;li&gt;Document object&lt;/li&gt; 
   &lt;li&gt;Parent object&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a promise&lt;/h3&gt; &lt;p&gt;A promise is an object that may produce a single value some time in the future with either a resolved value or a reason that it’s not resolved(for example, network error). It will be in one of the 3 possible states: fulfilled, rejected, or pending.&lt;/p&gt; &lt;p&gt;The syntax of Promise creation looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    const promise = new Promise(function(resolve, reject) {
      // promise description
    })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The usage of a promise would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const promise = new Promise(resolve =&amp;gt; {
  setTimeout(() =&amp;gt; {
    resolve(&quot;I&#39;m a Promise!&quot;);
  }, 5000);
}, reject =&amp;gt; {

});

promise.then(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The action flow of a promise will be as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/promises.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a promise&lt;/h3&gt; &lt;p&gt;Promises are used to handle asynchronous operations. They provide an alternative approach for callbacks by reducing the callback hell and writing the cleaner code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the three states of promise&lt;/h3&gt; &lt;p&gt;Promises have three states:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Pending:&lt;/strong&gt; This is an initial state of the Promise before an operation begins&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Fulfilled:&lt;/strong&gt; This state indicates that the specified operation was completed.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Rejected:&lt;/strong&gt; This state indicates that the operation did not complete. In this case an error value will be thrown.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback function&lt;/h3&gt; &lt;p&gt;A callback function is a function passed into another function as an argument. This function is invoked inside the outer function to complete an action. Let&#39;s take a simple example of how to use callback function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function callbackFunction(name) {
  console.log(&#39;Hello &#39; + name);
}

function outerFunction(callback) {
  let name = prompt(&#39;Please enter your name.&#39;);
  callback(name);
}

outerFunction(callbackFunction);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we need callbacks&lt;/h3&gt; &lt;p&gt;The callbacks are needed because javascript is an event driven language. That means instead of waiting for a response javascript will keep executing while listening for other events. Let&#39;s take an example with the first function invoking an API call(simulated by setTimeout) and the next function which logs the message.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function firstFunction(){
  // Simulate a code delay
  setTimeout( function(){
    console.log(&#39;First function called&#39;);
  }, 1000 );
}
function secondFunction(){
  console.log(&#39;Second function called&#39;);
}
firstFunction();
secondFunction();

Output
// Second function called
// First function called
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed from the output, javascript didn&#39;t wait for the response of the first function and the remaining code block got executed. So callbacks are used in a way to make sure that certain code doesn’t execute until the other code finishes execution.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback hell&lt;/h3&gt; &lt;p&gt;Callback Hell is an anti-pattern with multiple nested callbacks which makes code hard to read and debug when dealing with asynchronous logic. The callback hell looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async1(function(){
    async2(function(){
        async3(function(){
            async4(function(){
                ....
            });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are server-sent events&lt;/h3&gt; &lt;p&gt;Server-sent events (SSE) is a server push technology enabling a browser to receive automatic updates from a server via HTTP connection without resorting to polling. These are a one way communications channel - events flow from server to client only. This has been used in Facebook/Twitter updates, stock price updates, news feeds etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you receive server-sent event notifications&lt;/h3&gt; &lt;p&gt;The EventSource object is used to receive server-sent event notifications. For example, you can receive messages from server as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  var source = new EventSource(&quot;sse_generator.js&quot;);
  source.onmessage = function(event) {
    document.getElementById(&quot;output&quot;).innerHTML += event.data + &quot;&amp;lt;br&amp;gt;&quot;;
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check browser support for server-sent events&lt;/h3&gt; &lt;p&gt;You can perform browser support for server-sent events before using it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  // Server-sent events supported. Let&#39;s have some code here!
} else {
  // No server-sent events supported
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the events available for server sent events&lt;/h3&gt; &lt;p&gt;Below are the list of events available for server sent events | Event | Description | |---- | --------- | onopen | It is used when a connection to the server is opened | | onmessage | This event is used when a message is received | | onerror | It happens when an error occurs|&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main rules of promise&lt;/h3&gt; &lt;p&gt;A promise must follow a specific set of rules,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A promise is an object that supplies a standard-compliant &lt;code&gt;.then()&lt;/code&gt; method&lt;/li&gt; 
   &lt;li&gt;A pending promise may transition into either fulfilled or rejected state&lt;/li&gt; 
   &lt;li&gt;A fulfilled or rejected promise is settled and it must not transition into any other state.&lt;/li&gt; 
   &lt;li&gt;Once a promise is settled, the value must not change.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is callback in callback&lt;/h3&gt; &lt;p&gt;You can nest one callback inside in another callback to execute the actions sequentially one by one. This is known as callbacks in callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;loadScript(&#39;/script1.js&#39;, function(script) {
   console.log(&#39;first script is loaded&#39;);

  loadScript(&#39;/script2.js&#39;, function(script) {

    console.log(&#39;second script is loaded&#39;);

    loadScript(&#39;/script3.js&#39;, function(script) {

        console.log(&#39;third script is loaded&#39;);
      // after all scripts are loaded
    });

  })

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise chaining&lt;/h3&gt; &lt;p&gt;The process of executing a sequence of asynchronous tasks one after another using promises is known as Promise chaining. Let&#39;s take an example of promise chaining for calculating the final result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Promise(function(resolve, reject) {

  setTimeout(() =&amp;gt; resolve(1), 1000);

}).then(function(result) {

  console.log(result); // 1
  return result * 2;

}).then(function(result) {

  console.log(result); // 2
  return result * 3;

}).then(function(result) {

  console.log(result); // 6
  return result * 4;

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above handlers, the result is passed to the chain of .then() handlers with the below work flow,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The initial promise resolves in 1 second,&lt;/li&gt; 
   &lt;li&gt;After that &lt;code&gt;.then&lt;/code&gt; handler is called by logging the result(1) and then return a promise with the value of result * 2.&lt;/li&gt; 
   &lt;li&gt;After that the value passed to the next &lt;code&gt;.then&lt;/code&gt; handler by logging the result(2) and return a promise with result * 3.&lt;/li&gt; 
   &lt;li&gt;Finally the value passed to the last &lt;code&gt;.then&lt;/code&gt; handler by logging the result(6) and return a promise with result * 4.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise.all&lt;/h3&gt; &lt;p&gt;Promise.all is a promise that takes an array of promises as an input (an iterable), and it gets resolved when all the promises get resolved or any one of them gets rejected. For example, the syntax of promise.all method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.all([Promise1, Promise2, Promise3]) .then(result) =&amp;gt; {   console.log(result) }) .catch(error =&amp;gt; console.log(`Error in promises ${error}`))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that the order of the promises(output the result) is maintained as per input order.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the race method in promise&lt;/h3&gt; &lt;p&gt;Promise.race() method will return the promise instance which is firstly resolved or rejected. Let&#39;s take an example of race() method where promise2 is resolved first&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var promise1 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 500, &#39;one&#39;);
});
var promise2 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 100, &#39;two&#39;);
});

Promise.race([promise1, promise2]).then(function(value) {
  console.log(value); // &quot;two&quot; // Both promises will resolve, but promise2 is faster
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a strict mode in javascript&lt;/h3&gt; &lt;p&gt;Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a “strict” operating context. This way it prevents certain actions from being taken and throws more exceptions. The literal expression &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; instructs the browser to use the javascript code in the Strict mode.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need strict mode&lt;/h3&gt; &lt;p&gt;Strict mode is useful to write &quot;secure&quot; JavaScript by notifying &quot;bad syntax&quot; into real errors. For example, it eliminates accidentally creating a global variable by throwing an error and also throws an error for assignment to a non-writable property, a getter-only property, a non-existing property, a non-existing variable, or a non-existing object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare strict mode&lt;/h3&gt; &lt;p&gt;The strict mode is declared by adding &quot;use strict&quot;; to the beginning of a script or a function. If declared at the beginning of a script, it has global scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;use strict&quot;;
x = 3.14; // This will cause an error because x is not declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and if you declare inside a function, it has local scope&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;x = 3.14;       // This will not cause an error.
myFunction();

function myFunction() {
  &quot;use strict&quot;;
  y = 3.14;   // This will cause an error
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double exclamation&lt;/h3&gt; &lt;p&gt;The double exclamation or negation(!!) ensures the resulting type is a boolean. If it was falsey (e.g. 0, null, undefined, etc.), it will be false, otherwise, true. For example, you can test IE version using this expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let isIE8 = false;
isIE8 = !! navigator.userAgent.match(/MSIE 8.0/);
console.log(isIE8); // returns true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use this expression then it returns the original value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.userAgent.match(/MSIE 8.0/));  // returns either an Array or null
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The expression !! is not an operator, but it is just twice of ! operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the delete operator&lt;/h3&gt; &lt;p&gt;The delete keyword is used to delete the property as well as its value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user= {name: &quot;John&quot;, age:20};
delete user.age;

console.log(user); // {name: &quot;John&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typeof operator&lt;/h3&gt; &lt;p&gt;You can use the JavaScript typeof operator to find the type of a JavaScript variable. It returns the type of a variable or an expression.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;typeof &quot;John Abraham&quot;     // Returns &quot;string&quot;
typeof (1 + 2)        // Returns &quot;number&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is undefined property&lt;/h3&gt; &lt;p&gt;The undefined property indicates that a variable has not been assigned a value, or not declared at all. The type of undefined value is undefined too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user;    // Value is undefined, type is undefined
console.log(typeof(user)) //undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Any variable can be emptied by setting the value to undefined.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;user = undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is null value&lt;/h3&gt; &lt;p&gt;The value null represents the intentional absence of any object value. It is one of JavaScript&#39;s primitive values. The type of null value is object. You can empty the variable by setting the value to null.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = null;
console.log(typeof(user)) //object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between null and undefined&lt;/h3&gt; &lt;p&gt;Below are the main differences between null and undefined,&lt;/p&gt; &lt;p&gt;| Null | Undefined | |---- | -----------| | It is an assignment value which indicates that variable points to no object. | It is not an assignment value where a variable has been declared but has not yet been assigned a value. | | Type of null is object | Type of undefined is undefined | | The null value is a primitive value that represents the null, empty, or non-existent reference. | The undefined value is a primitive value used when a variable has not been assigned a value.| | Indicates the absence of a value for a variable | Indicates absence of variable itself | | Converted to zero (0) while performing primitive operations | Converted to NaN while performing primitive operations |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is eval&lt;/h3&gt; &lt;p&gt;The eval() function evaluates JavaScript code represented as a string. The string can be a JavaScript expression, variable, statement, or sequence of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(eval(&#39;1 + 2&#39;)); //  3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between window and document&lt;/h3&gt; &lt;p&gt;Below are the main differences between window and document,&lt;/p&gt; &lt;p&gt;| Window | Document | |---- | --------- | It is the root level element in any web page | It is the direct child of the window object. This is also known as Document Object Model(DOM) | | By default window object is available implicitly in the page | You can access it via window.document or document. | | It has methods like alert(), confirm() and properties like document, location | It provides methods like getElementById, getElementByTagName, createElement etc |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access history in javascript&lt;/h3&gt; &lt;p&gt;The window.history object contains the browser&#39;s history. You can load previous and next URLs in the history using back() and next() methods.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function goBack() {
  window.history.back()
}
function goForward() {
  window.history.forward()
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also access history without window prefix.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the javascript data types&lt;/h3&gt; &lt;p&gt;Below are the list of javascript data types available&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Number&lt;/li&gt; 
   &lt;li&gt;String&lt;/li&gt; 
   &lt;li&gt;Boolean&lt;/li&gt; 
   &lt;li&gt;Object&lt;/li&gt; 
   &lt;li&gt;Undefined&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is isNaN&lt;/h3&gt; &lt;p&gt;The isNaN() function is used to determine whether a value is an illegal number (Not-a-Number) or not. i.e, This function returns true if the value equates to NaN. Otherwise it returns false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(&#39;Hello&#39;) //true
isNaN(&#39;100&#39;) //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between undeclared and undefined variables&lt;/h3&gt; &lt;p&gt;Below are the major differences between undeclared and undefined variables,&lt;/p&gt; &lt;p&gt;| undeclared | undefined | |---- | --------- | These variables do not exist in a program and are not declared | These variables declared in the program but have not assigned any value | | If you try to read the value of an undeclared variable, then a runtime error is encountered | If you try to read the value of an undefined variable, an undefined value is returned. |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are global variables&lt;/h3&gt; &lt;p&gt;Global variables are those that are available throughout the length of the code without any scope. The var keyword is used to declare a local variable but if you omit it then it will become global variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;msg = &quot;Hello&quot; // var is missing, it becomes global variable
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with global variables&lt;/h3&gt; &lt;p&gt;The problem with global variables is the conflict of variable names of local and global scope. It is also difficult to debug and test the code that relies on global variables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is NaN property&lt;/h3&gt; &lt;p&gt;The NaN property is a global property that represents &quot;Not-a-Number&quot; value. i.e, It indicates that a value is not a legal number. It is very rare to use NaN in a program but it can be used as return value for few cases&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.sqrt(-1)
parseInt(&quot;Hello&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of isFinite function&lt;/h3&gt; &lt;p&gt;The isFinite() function is used to determine whether a number is a finite, legal number. It returns false if the value is +infinity, -infinity, or NaN (Not-a-Number), otherwise it returns true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isFinite(Infinity);  // false
isFinite(NaN);       // false
isFinite(-Infinity); // false

isFinite(100);         // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event flow&lt;/h3&gt; &lt;p&gt;Event flow is the order in which event is received on the web page. When you click an element that is nested in various other elements, before your click actually reaches its destination, or target element, it must trigger the click event for each of its parent elements first, starting at the top with the global window object. There are two ways of event flow&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Top to Bottom(Event Capturing)&lt;/li&gt; 
   &lt;li&gt;Bottom to Top (Event Bubbling)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event bubbling&lt;/h3&gt; &lt;p&gt;Event bubbling is a type of event propagation where the event first triggers on the innermost target element, and then successively triggers on the ancestors (parents) of the target element in the same nesting hierarchy till it reaches the outermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event capturing&lt;/h3&gt; &lt;p&gt;Event capturing is a type of event propagation where the event is first captured by the outermost element, and then successively triggers on the descendants (children) of the target element in the same nesting hierarchy till it reaches the innermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you submit a form using JavaScript&lt;/h3&gt; &lt;p&gt;You can submit a form using JavaScript use document.form[0].submit(). All the form input&#39;s information is submitted using onsubmit event handler&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function submit() {
    document.form[0].submit();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find operating system details&lt;/h3&gt; &lt;p&gt;The window.navigator object contains information about the visitor&#39;s browser OS details. Some of the OS properties are available under platform property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.platform);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between document load and DOMContentLoaded events&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;DOMContentLoaded&lt;/code&gt; event is fired when the initial HTML document has been completely loaded and parsed, without waiting for assets(stylesheets, images, and subframes) to finish loading. Whereas The load event is fired when the whole page has loaded, including all dependent resources(stylesheets, images).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between native, host and user objects&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Native objects&lt;/code&gt; are objects that are part of the JavaScript language defined by the ECMAScript specification. For example, String, Math, RegExp, Object, Function etc core objects defined in the ECMAScript spec. &lt;code&gt;Host objects&lt;/code&gt; are objects provided by the browser or runtime environment (Node). For example, window, XmlHttpRequest, DOM nodes etc are considered as host objects. &lt;code&gt;User objects&lt;/code&gt; are objects defined in the javascript code. For example, User objects created for profile information.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the tools or techniques used for debugging JavaScript code&lt;/h3&gt; &lt;p&gt;You can use below tools or techniques for debugging javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Chrome Devtools&lt;/li&gt; 
   &lt;li&gt;debugger statement&lt;/li&gt; 
   &lt;li&gt;Good old console.log statement&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of promises over callbacks&lt;/h3&gt; &lt;p&gt;Below are the list of pros and cons of promises over callbacks,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It avoids callback hell which is unreadable&lt;/li&gt; 
   &lt;li&gt;Easy to write sequential asynchronous code with .then()&lt;/li&gt; 
   &lt;li&gt;Easy to write parallel asynchronous code with Promise.all()&lt;/li&gt; 
   &lt;li&gt;Solves some of the common problems of callbacks(call the callback too late, too early, many times and swallow errors/exceptions)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It makes little complex code&lt;/li&gt; 
   &lt;li&gt;You need to load a polyfill if ES6 is not supported&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between an attribute and a property&lt;/h3&gt; &lt;p&gt;Attributes are defined on the HTML markup whereas properties are defined on the DOM. For example, the below HTML element has 2 attributes type and value,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;input type=&quot;text&quot; value=&quot;Name:&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can retrieve the attribute value as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const input = document.querySelector(&#39;input&#39;);
console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good morning
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after you change the value of the text field to &quot;Good evening&quot;, it becomes like&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good evening
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is same-origin policy&lt;/h3&gt; &lt;p&gt;The same-origin policy is a policy that prevents JavaScript from making requests across domain boundaries. An origin is defined as a combination of URI scheme, hostname, and port number. If you enable this policy then it prevents a malicious script on one page from obtaining access to sensitive data on another web page using Document Object Model(DOM).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of void 0&lt;/h3&gt; &lt;p&gt;Void(0) is used to prevent the page from refreshing. This will be helpful to eliminate the unwanted side-effect, because it will return the undefined primitive value. It is commonly used for HTML documents that use href=&quot;JavaScript:Void(0);&quot; within an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element. i.e, when you click a link, the browser loads a new page or refreshes the same page. But this behavior will be prevented using this expression. For example, the below link notify the message without reloading the page&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;JavaScript:void(0);&quot; onclick=&quot;alert(&#39;Well done!&#39;)&quot;&amp;gt;Click Me!&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a compiled or interpreted language&lt;/h3&gt; &lt;p&gt;JavaScript is an interpreted language, not a compiled language. An interpreter in the browser reads over the JavaScript code, interprets each line, and runs it. Nowadays modern browsers use a technology known as Just-In-Time (JIT) compilation, which compiles JavaScript to executable bytecode just as it is about to run.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a case-sensitive language&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is a case sensitive language. The language keywords, variables, function &amp;amp; object names, and any other identifiers must always be typed with a consistent capitalization of letters.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is there any relation between Java and JavaScript&lt;/h3&gt; &lt;p&gt;No, they are entirely two different programming languages and have nothing to do with each other. But both of them are Object Oriented Programming languages and like many other languages, they follow similar syntax for basic features(if, else, for, switch, break, continue etc).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are events&lt;/h3&gt; &lt;p&gt;Events are &quot;things&quot; that happen to HTML elements. When JavaScript is used in HTML pages, JavaScript can &lt;code&gt;react&lt;/code&gt; on these events. Some of the examples of HTML events are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Web page has finished loading&lt;/li&gt; 
   &lt;li&gt;Input field was changed&lt;/li&gt; 
   &lt;li&gt;Button was clicked&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s describe the behavior of click event for button element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
   &amp;lt;script&amp;gt;
     function greeting() {
       alert(&#39;Hello! Good morning&#39;);
     }
   &amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
   &amp;lt;button type=&quot;button&quot; onclick=&quot;greeting()&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Who created javascript&lt;/h3&gt; &lt;p&gt;JavaScript was created by Brendan Eich in 1995 during his time at Netscape Communications. Initially it was developed under the name &lt;code&gt;Mocha&lt;/code&gt;, but later the language was officially called &lt;code&gt;LiveScript&lt;/code&gt; when it first shipped in beta releases of Netscape.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of preventDefault method&lt;/h3&gt; &lt;p&gt;The preventDefault() method cancels the event if it is cancelable, meaning that the default action or behaviour that belongs to the event will not occur. For example, prevent form submission when clicking on submit button and prevent opening the page URL when clicking on hyperlink are some common use cases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;link&quot;).addEventListener(&quot;click&quot;, function(event){
 event.preventDefault();
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that not all events are cancelable.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of stopPropagation method&lt;/h3&gt; &lt;p&gt;The stopPropagation method is used to stop the event from bubbling up the event chain. For example, the below nested divs with stopPropagation method prevents default event propagation when clicking on nested div(Div1)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;p&amp;gt;Click DIV1 Element&amp;lt;/p&amp;gt;
&amp;lt;div onclick=&quot;secondFunc()&quot;&amp;gt;DIV 2
  &amp;lt;div onclick=&quot;firstFunc(event)&quot;&amp;gt;DIV 1&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
function firstFunc(event) {
  alert(&quot;DIV 1&quot;);
  event.stopPropagation();
}

function secondFunc() {
  alert(&quot;DIV 2&quot;);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the steps involved in return false usage&lt;/h3&gt; &lt;p&gt;The return false statement in event handlers performs the below steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;First it stops the browser&#39;s default action or behaviour.&lt;/li&gt; 
   &lt;li&gt;It prevents the event from propagating the DOM&lt;/li&gt; 
   &lt;li&gt;Stops callback execution and returns immediately when called.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is BOM&lt;/h3&gt; &lt;p&gt;The Browser Object Model (BOM) allows JavaScript to &quot;talk to&quot; the browser. It consists of the objects navigator, history, screen, location and document which are children of the window. The Browser Object Model is not standardized and can change based on different browsers.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/bom.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setTimeout&lt;/h3&gt; &lt;p&gt;The setTimeout() method is used to call a function or evaluate an expression after a specified number of milliseconds. For example, let&#39;s log a message after 2 seconds using setTimeout method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setTimeout(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setInterval&lt;/h3&gt; &lt;p&gt;The setInterval() method is used to call a function or evaluate an expression at specified intervals (in milliseconds). For example, let&#39;s log a message after 2 seconds using setInterval method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setInterval(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why is JavaScript treated as Single threaded&lt;/h3&gt; &lt;p&gt;JavaScript is a single-threaded language. Because the language specification does not allow the programmer to write code so that the interpreter can run parts of it in parallel in multiple threads or processes. Whereas languages like java, go, C++ can make multi-threaded and multi-process programs.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event delegation&lt;/h3&gt; &lt;p&gt;Event delegation is a technique for listening to events where you delegate a parent element as the listener for all of the events that happen inside it.&lt;/p&gt; &lt;p&gt;For example, if you wanted to detect field changes in inside a specific form, you can use event delegation technique,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var form = document.querySelector(&#39;#registration-form&#39;);

// Listen for changes to fields inside the form
form.addEventListener(&#39;input&#39;, function (event) {

// Log the field that was changed
console.log(event.target);

}, false);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ECMAScript&lt;/h3&gt; &lt;p&gt;ECMAScript is the scripting language that forms the basis of JavaScript. ECMAScript standardized by the ECMA International standards organization in the ECMA-262 and ECMA-402 specifications. The first edition of ECMAScript was released in 1997.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON&lt;/h3&gt; &lt;p&gt;JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language in the way objects are built in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the syntax rules of JSON&lt;/h3&gt; &lt;p&gt;Below are the list of syntax rules of JSON&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The data is in name/value pairs&lt;/li&gt; 
   &lt;li&gt;The data is separated by commas&lt;/li&gt; 
   &lt;li&gt;Curly braces hold objects&lt;/li&gt; 
   &lt;li&gt;Square brackets hold arrays&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose JSON stringify&lt;/h3&gt; &lt;p&gt;When sending data to a web server, the data has to be in a string format. You can achieve this by converting JSON object into a string using stringify() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userJSON = {&#39;name&#39;: &#39;John&#39;, age: 31}
var userString = JSON.stringify(user);
console.log(userString); //&quot;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you parse JSON string&lt;/h3&gt; &lt;p&gt;When receiving the data from a web server, the data is always in a string format. But you can convert this string value to a javascript object using parse() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userString = &#39;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&#39;;
var userJSON = JSON.parse(userString);
console.log(userJSON);// {name: &quot;John&quot;, age: 31}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need JSON&lt;/h3&gt; &lt;p&gt;When exchanging data between a browser and a server, the data can only be text. Since JSON is text only, it can easily be sent to and from a server, and used as a data format by any programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are PWAs&lt;/h3&gt; &lt;p&gt;Progressive web applications (PWAs) are a type of mobile app delivered through the web, built using common web technologies including HTML, CSS and JavaScript. These PWAs are deployed to servers, accessible through URLs, and indexed by search engines.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearTimeout method&lt;/h3&gt; &lt;p&gt;The clearTimeout() function is used in javascript to clear the timeout which has been set by setTimeout()function before that. i.e, The return value of setTimeout() function is stored in a variable and it’s passed into the clearTimeout() function to clear the timer.&lt;/p&gt; &lt;p&gt;For example, the below setTimeout method is used to display the message after 3 seconds. This timeout can be cleared by the clearTimeout() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg =setTimeout(greeting, 3000);

}

function stop() {
    clearTimeout(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearInterval method&lt;/h3&gt; &lt;p&gt;The clearInterval() function is used in javascript to clear the interval which has been set by setInterval() function. i.e, The return value returned by setInterval() function is stored in a variable and it’s passed into the clearInterval() function to clear the interval.&lt;/p&gt; &lt;p&gt;For example, the below setInterval method is used to display the message for every 3 seconds. This interval can be cleared by the clearInterval() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg = setInterval(greeting, 3000);

}

function stop() {
    clearInterval(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redirect new page in javascript&lt;/h3&gt; &lt;p&gt;In vanilla javascript, you can redirect to a new page using the &lt;code&gt;location&lt;/code&gt; property of window object. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function redirect() {
   window.location.href = &#39;newPage.html&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether a string contains a substring&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to check whether a string contains a substring or not,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using includes:&lt;/strong&gt; ES6 provided &lt;code&gt;String.prototype.includes&lt;/code&gt; method to test a string contains a substring&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.includes(subString)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using indexOf:&lt;/strong&gt; In an ES5 or older environment, you can use &lt;code&gt;String.prototype.indexOf&lt;/code&gt; which returns the index of a substring. If the index value is not equal to -1 then it means the substring exists in the main string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.indexOf(subString) !== -1
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using RegEx:&lt;/strong&gt; The advanced solution is using Regular expression&#39;s test method(&lt;code&gt;RegExp.test&lt;/code&gt;), which allows for testing for against regular expressions&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, regex = &quot;/hell/&quot;;
regex.test(mainString)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you validate an email in javascript&lt;/h3&gt; &lt;p&gt;You can validate an email in javascript using regular expressions. It is recommended to do validations on the server side instead of the client side. Because the javascript can be disabled on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateEmail(email) {
    var re = /^(([^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+(\.[^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+)*)|(&quot;.+&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The above regular expression accepts unicode characters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the current url with javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;window.location.href&lt;/code&gt; expression to get the current url path and you can use the same expression for updating the URL too. You can also use &lt;code&gt;document.URL&lt;/code&gt; for read-only purposes but this solution has issues in FF.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;location.href&#39;, window.location.href); // Returns full URL
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various url properties of location object&lt;/h3&gt; &lt;p&gt;The below &lt;code&gt;Location&lt;/code&gt; object properties can be used to access URL components of the page,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;href - The entire URL&lt;/li&gt; 
   &lt;li&gt;protocol - The protocol of the URL&lt;/li&gt; 
   &lt;li&gt;host - The hostname and port of the URL&lt;/li&gt; 
   &lt;li&gt;hostname - The hostname of the URL&lt;/li&gt; 
   &lt;li&gt;port - The port number in the URL&lt;/li&gt; 
   &lt;li&gt;pathname - The path name of the URL&lt;/li&gt; 
   &lt;li&gt;search - The query portion of the URL&lt;/li&gt; 
   &lt;li&gt;hash - The anchor portion of the URL&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get query string values in javascript&lt;/h3&gt; &lt;p&gt;You can use URLSearchParams to get query string values in javascript. Let&#39;s see an example to get the client code value from URL query string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const urlParams = new URLSearchParams(window.location.search);
const clientCode = urlParams.get(&#39;clientCode&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a key exists in an object&lt;/h3&gt; &lt;p&gt;You can check whether a key exists in an object or not using three approaches,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using in operator:&lt;/strong&gt; You can use the in operator whether a key exists in an object or not&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;key&quot; in obj
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and If you want to check if a key doesn&#39;t exist, remember to use parenthesis,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;!(&quot;key&quot; in obj)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using hasOwnProperty method:&lt;/strong&gt; You can use &lt;code&gt;hasOwnProperty&lt;/code&gt; to particularly test for properties of the object instance (and not inherited properties)&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj.hasOwnProperty(&quot;key&quot;) // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using undefined comparison:&lt;/strong&gt; If you access a non-existing property from an object, the result is undefined. Let’s compare the properties against undefined to determine the existence of the property.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;
};

console.log(user.name !== undefined);     // true
console.log(user.nickName !== undefined); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you loop through or enumerate javascript object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;for-in&lt;/code&gt; loop to loop through javascript object. You can also make sure that the key you get is an actual property of an object, and doesn&#39;t come from the prototype using &lt;code&gt;hasOwnProperty&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    &quot;k1&quot;: &quot;value1&quot;,
    &quot;k2&quot;: &quot;value2&quot;,
    &quot;k3&quot;: &quot;value3&quot;
};

for (var key in object) {
    if (object.hasOwnProperty(key)) {
        console.log(key + &quot; -&amp;gt; &quot; + object[key]); // k1 -&amp;gt; value1 ...
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you test for an empty object&lt;/h3&gt; &lt;p&gt;There are different solutions based on ECMAScript versions&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object entries(ECMA 7+):&lt;/strong&gt; You can use object entries length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.entries(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object keys(ECMA 5+):&lt;/strong&gt; You can use object keys length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.keys(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using for-in with hasOwnProperty(Pre-ECMA 5):&lt;/strong&gt; You can use a for-in loop along with hasOwnProperty.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isEmpty(obj) {
  for(var prop in obj) {
    if(obj.hasOwnProperty(prop)) {
      return false;
    }
  }

  return JSON.stringify(obj) === JSON.stringify({});
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an arguments object&lt;/h3&gt; &lt;p&gt;The arguments object is an Array-like object accessible inside functions that contains the values of the arguments passed to that function. For example, let&#39;s see how to use arguments object inside sum function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum() {
    var total = 0;
    for (var i = 0, len = arguments.length; i &amp;lt; len; ++i) {
        total += arguments[i];
    }
    return total;
}

sum(1, 2, 3) // returns 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can&#39;t apply array methods on arguments object. But you can convert into a regular array as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var argsArray = Array.prototype.slice.call(arguments);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make first letter of the string in an uppercase&lt;/h3&gt; &lt;p&gt;You can create a function which uses a chain of string methods such as charAt, toUpperCase and slice methods to generate a string with the first letter in uppercase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of for loop&lt;/h3&gt; &lt;p&gt;The for-loop is a commonly used iteration syntax in javascript. It has both pros and cons ####Pros&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Works on every environment&lt;/li&gt; 
   &lt;li&gt;You can use break and continue flow control statements&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;####Cons&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Too verbose&lt;/li&gt; 
   &lt;li&gt;Imperative&lt;/li&gt; 
   &lt;li&gt;You might face one-by-off errors&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display the current date in javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date()&lt;/code&gt; to generate a new Date object containing the current date and time. For example, let&#39;s display the current date in mm/dd/yyyy&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var today = new Date();
var dd = String(today.getDate()).padStart(2, &#39;0&#39;);
var mm = String(today.getMonth() + 1).padStart(2, &#39;0&#39;); //January is 0!
var yyyy = today.getFullYear();

today = mm + &#39;/&#39; + dd + &#39;/&#39; + yyyy;
document.write(today);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare two date objects&lt;/h3&gt; &lt;p&gt;You need to use date.getTime() method to compare date values instead of comparison operators (==, !=, ===, and !== operators)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var d1 = new Date();
var d2 = new Date(d1);
console.log(d1.getTime() === d2.getTime()); //True
console.log(d1 === d2); // False
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a string starts with another string&lt;/h3&gt; &lt;p&gt;You can use ECMAScript 6&#39;s &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; method to check if a string starts with another string or not. But it is not yet supported in all browsers. Let&#39;s see an example to see this usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;Good morning&quot;.startsWith(&quot;Good&quot;); // true
&quot;Good morning&quot;.startsWith(&quot;morning&quot;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string in javascript&lt;/h3&gt; &lt;p&gt;JavaScript provided a trim method on string types to trim any whitespaces present at the beginning or ending of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;  Hello World   &quot;.trim(); //Hello World
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your browser(&amp;lt;IE9) doesn&#39;t support this method then you can use below polyfill.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (!String.prototype.trim) {
    (function() {
        // Make sure we trim BOM and NBSP
        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        String.prototype.trim = function() {
            return this.replace(rtrim, &#39;&#39;);
        };
    })();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you add a key value pair in javascript&lt;/h3&gt; &lt;p&gt;There are two possible solutions to add new properties to an object. Let&#39;s take a simple object to explain these solutions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    key1: value1,
    key2: value2
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using dot notation:&lt;/strong&gt; This solution is useful when you know the name of the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;object.key3 = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using square bracket notation:&lt;/strong&gt; This solution is useful when the name of the property is dynamically determined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj[&quot;key3&quot;] = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is the !-- notation represents a special operator&lt;/h3&gt; &lt;p&gt;No,that&#39;s not a special operator. But it is a combination of 2 standard operators one after the other,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A logical not (!)&lt;/li&gt; 
   &lt;li&gt;A prefix decrement (--)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;At first, the value decremented by one and then tested to see if it is equal to zero or not for determining the truthy/falsy value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you assign default values to variables&lt;/h3&gt; &lt;p&gt;You can use the logical or operator &lt;code&gt;||&lt;/code&gt; in an assignment expression to provide a default value. The syntax looks like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = b || c;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above expression, variable &#39;a &#39;will get the value of &#39;c&#39; only if &#39;b&#39; is falsy (if is null, false, undefined, 0, empty string, or NaN), otherwise &#39;a&#39; will get the value of &#39;b&#39;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiline strings&lt;/h3&gt; &lt;p&gt;You can define multiline string literals using the &#39;&#39; character followed by line terminator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var str = &quot;This is a \
very lengthy \
sentence!&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you have a space after the &#39;&#39; character, the code will look exactly the same, but it will raise a SyntaxError.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an app shell model&lt;/h3&gt; &lt;p&gt;An application shell (or app shell) architecture is one way to build a Progressive Web App that reliably and instantly loads on your users&#39; screens, similar to what you see in native applications. It is useful for getting some initial HTML to the screen fast without a network.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can we define properties for functions&lt;/h3&gt; &lt;p&gt;Yes, We can define properties for functions because functions are also objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fn = function(x) {
   //Function code goes here
}

fn.name = &quot;John&quot;;

fn.profile = function(y) {
  //Profile code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the way to find the number of parameters expected by a function&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;function.length&lt;/code&gt; syntax to find the number of parameters expected by a function. Let&#39;s take an example of &lt;code&gt;sum&lt;/code&gt; function to calculate the sum of numbers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum(num1, num2, num3, num4){
    return num1 + num2 + num3 + num4;
}
sum.length // 4 is the number of parameters expected.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a polyfill&lt;/h3&gt; &lt;p&gt;A polyfill is a piece of JS code used to provide modern functionality on older browsers that do not natively support it. For example, Silverlight plugin polyfill can be used to mimic the functionality of an HTML Canvas element on Microsoft Internet Explorer 7.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are break and continue statements&lt;/h3&gt; &lt;p&gt;The break statement is used to &quot;jump out&quot; of a loop. i.e, It breaks the loop and continues executing the code after the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
  if (i === 5) { break; }
  text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The continue statement is used to &quot;jump over&quot; one iteration in the loop. i.e, It breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
    if (i === 5) { continue; }
    text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are js labels&lt;/h3&gt; &lt;p&gt;The label statement allows us to name loops and blocks in JavaScript. We can then use these labels to refer back to the code later. For example, the below code with labels avoids printing the numbers when they are same,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var i, j;

loop1:
for (i = 0; i &amp;lt; 3; i++) {
   loop2:
   for (j = 0; j &amp;lt; 3; j++) {
      if (i === j) {
         continue loop1;
      }
      console.log(&#39;i = &#39; + i + &#39;, j = &#39; + j);
   }
}

// Output is:
//   &quot;i = 1, j = 0&quot;
//   &quot;i = 2, j = 0&quot;
//   &quot;i = 2, j = 1&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of keeping declarations at the top&lt;/h3&gt; &lt;p&gt;It is recommended to keep all declarations at the top of each script or function. The benefits of doing this are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to look for local variables&lt;/li&gt; 
   &lt;li&gt;Easy to avoid unwanted global variables&lt;/li&gt; 
   &lt;li&gt;It reduces the possibility of unwanted re-declarations&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of initializing variables&lt;/h3&gt; &lt;p&gt;It is recommended to initialize variables because of the below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to initialize variables&lt;/li&gt; 
   &lt;li&gt;Avoid undefined values in the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommendations to create new object&lt;/h3&gt; &lt;p&gt;It is recommended to avoid creating new objects using &lt;code&gt;new Object()&lt;/code&gt;. Instead you can initialize values based on it&#39;s type to create the objects.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Assign {} instead of new Object()&lt;/li&gt; 
   &lt;li&gt;Assign &quot;&quot; instead of new String()&lt;/li&gt; 
   &lt;li&gt;Assign 0 instead of new Number()&lt;/li&gt; 
   &lt;li&gt;Assign false instead of new Boolean()&lt;/li&gt; 
   &lt;li&gt;Assign [] instead of new Array()&lt;/li&gt; 
   &lt;li&gt;Assign /()/ instead of new RegExp()&lt;/li&gt; 
   &lt;li&gt;Assign function (){} instead of new Function()&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can define them as an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var v1 = {};
var v2 = &quot;&quot;;
var v3 = 0;
var v4 = false;
var v5 = [];
var v6 = /()/;
var v7 = function(){};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define JSON arrays&lt;/h3&gt; &lt;p&gt;JSON arrays are written inside square brackets and arrays contain javascript objects. For example, the JSON array of users would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;users&quot;:[
  {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Abrahm&quot;},
  {&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;},
  {&quot;firstName&quot;:&quot;Shane&quot;, &quot;lastName&quot;:&quot;Warn&quot;}
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you generate random integers&lt;/h3&gt; &lt;p&gt;You can use Math.random() with Math.floor() to return random integers. For example, if you want generate random integers between 1 to 10, the multiplication factor should be 10,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.floor(Math.random() * 10) + 1;     // returns a random integer from 1 to 10
Math.floor(Math.random() * 100) + 1;     // returns a random integer from 1 to 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Math.random() returns a random number between 0 (inclusive), and 1 (exclusive)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you write a random integers function to print integers with in a range&lt;/h3&gt; &lt;p&gt;Yes, you can create a proper random function to return a random number between min and max (both included)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function randomInteger(min, max) {
  return Math.floor(Math.random() * (max - min + 1) ) + min;
}
randomInteger(1, 100); // returns a random integer from 1 to 100
randomInteger(1, 1000); // returns a random integer from 1 to 1000
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is tree shaking&lt;/h3&gt; &lt;p&gt;Tree shaking is a form of dead code elimination. It means that unused modules will not be included in the bundle during the build process and for that it relies on the static structure of ES2015 module syntax,( i.e. import and export). Initially this has been popularized by the ES2015 module bundler &lt;code&gt;rollup&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the need of tree shaking&lt;/h3&gt; &lt;p&gt;Tree Shaking can significantly reduce the code size in any application. i.e, The less code we send over the wire the more performant the application will be. For example, if we just want to create a “Hello World” Application using SPA frameworks then it will take around a few MBs, but by tree shaking it can bring down the size to just a few hundred KBs. Tree shaking is implemented in Rollup and Webpack bundlers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use eval&lt;/h3&gt; &lt;p&gt;No, it allows arbitrary code to be run which causes a security problem. As we know that the eval() function is used to run text as code. In most of the cases, it should not be necessary to use it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Regular Expression&lt;/h3&gt; &lt;p&gt;A regular expression is a sequence of characters that forms a search pattern. You can use this search pattern for searching data in a text. These can be used to perform all types of text search and text replace operations. Let&#39;s see the syntax format now,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/pattern/modifiers;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, the regular expression or search pattern with case-insensitive username would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/John/i
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the string methods available in Regular expression&lt;/h3&gt; &lt;p&gt;Regular Expressions has two string methods: search() and replace(). The search() method uses an expression to search for a match, and returns the position of the match.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.search(/John/i); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The replace() method is used to return a modified string where the pattern is replaced.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.replace(/John/i, &quot;Buttler&quot;); // Hello Buttler
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modifiers in regular expression&lt;/h3&gt; &lt;p&gt;Modifiers can be used to perform case-insensitive and global searches. Let&#39;s list down some of the modifiers,&lt;/p&gt; &lt;p&gt;| Modifier | Description | |---- | --------- | i | Perform case-insensitive matching | | g | Perform a global match rather than stops at first match | | m | Perform multiline matching|&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of global modifier,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = &quot;Learn JS one by one&quot;;
var pattern = /one/g;
var result = text.match(pattern); // one,one
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are regular expression patterns&lt;/h3&gt; &lt;p&gt;Regular Expressions provide a group of patterns in order to match characters. Basically they are categorized into 3 types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Brackets:&lt;/strong&gt; These are used to find a range of characters. For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;[abc]: Used to find any of the characters between the brackets(a,b,c)&lt;/li&gt; 
     &lt;li&gt;[0-9]: Used to find any of the digits between the brackets&lt;/li&gt; 
     &lt;li&gt;(a|b): Used to find any of the alternatives separated with |&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Metacharacters:&lt;/strong&gt; These are characters with a special meaning For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;\d: Used to find a digit&lt;/li&gt; 
     &lt;li&gt;\s: Used to find a whitespace character&lt;/li&gt; 
     &lt;li&gt;\b: Used to find a match at the beginning or ending of a word&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Quantifiers:&lt;/strong&gt; These are useful to define quantities For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;n+: Used to find matches for any string that contains at least one n&lt;/li&gt; 
     &lt;li&gt;n*: Used to find matches for any string that contains zero or more occurrences of n&lt;/li&gt; 
     &lt;li&gt;n?: Used to find matches for any string that contains zero or one occurrences of n&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a RegExp object&lt;/h3&gt; &lt;p&gt;RegExp object is a regular expression object with predefined properties and methods. Let&#39;s see the simple usage of RegExp object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var regexp = new RegExp(&#39;\\w+&#39;);
console.log(regexp);
// expected output: /\w+/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you search a string for a pattern&lt;/h3&gt; &lt;p&gt;You can use the test() method of regular expression in order to search a string for a pattern, and return true or false depending on the result.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.test(&quot;How are you?&quot;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of exec method&lt;/h3&gt; &lt;p&gt;The purpose of exec method is similar to test method but it executes a search for a match in a specified string and returns a result array, or null instead of returning true/false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.exec(&quot;How are you?&quot;)); //[&quot;you&quot;, index: 8, input: &quot;How are you?&quot;, groups: undefined]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you change the style of a HTML element&lt;/h3&gt; &lt;p&gt;You can change inline style or classname of a HTML element using javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using style property:&lt;/strong&gt; You can modify inline style using style property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;title&quot;).style.fontSize = &quot;30px&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using ClassName property:&lt;/strong&gt; It is easy to modify element class using className property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; document.getElementById(&quot;title&quot;).style.className = &quot;custom-title&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the result of 1+2+&#39;3&#39;&lt;/h3&gt; &lt;p&gt;The output is going to be &lt;code&gt;33&lt;/code&gt;. Since &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; are numeric values, the result of the first two digits is going to be a numeric value &lt;code&gt;3&lt;/code&gt;. The next digit is a string type value because of that the addition of numeric value &lt;code&gt;3&lt;/code&gt; and string type value &lt;code&gt;3&lt;/code&gt; is just going to be a concatenation value &lt;code&gt;33&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a debugger statement&lt;/h3&gt; &lt;p&gt;The debugger statement invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect. For example, in the below function a debugger statement has been inserted. So execution is paused at the debugger statement just like a breakpoint in the script source.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function getProfile() {
// code goes here
debugger;
// code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of breakpoints in debugging&lt;/h3&gt; &lt;p&gt;You can set breakpoints in the javascript code once the debugger statement is executed and the debugger window pops up. At each breakpoint, javascript will stop executing, and let you examine the JavaScript values. After examining values, you can resume the execution of code using the play button.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use reserved words as identifiers&lt;/h3&gt; &lt;p&gt;No, you cannot use the reserved words as variables, labels, object or function names. Let&#39;s see one simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var else = &quot;hello&quot;; // Uncaught SyntaxError: Unexpected token else
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser&lt;/h3&gt; &lt;p&gt;You can use regex which returns a true or false value depending on whether or not the user is browsing with a mobile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.mobilecheck = function() {
  var mobileCheck = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) mobileCheck = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return mobileCheck;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser without regexp&lt;/h3&gt; &lt;p&gt;You can detect mobile browsers by simply running through a list of devices and checking if the useragent matches anything. This is an alternative solution for RegExp usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function detectmob() {
 if( navigator.userAgent.match(/Android/i)
 || navigator.userAgent.match(/webOS/i)
 || navigator.userAgent.match(/iPhone/i)
 || navigator.userAgent.match(/iPad/i)
 || navigator.userAgent.match(/iPod/i)
 || navigator.userAgent.match(/BlackBerry/i)
 || navigator.userAgent.match(/Windows Phone/i)
 ){
    return true;
  }
 else {
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the image width and height using JS&lt;/h3&gt; &lt;p&gt;You can programmatically get the image and check the dimensions(width and height) using Javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var img = new Image();
img.onload = function() {
  console.log(this.width + &#39;x&#39; + this.height);
}
img.src = &#39;http://www.google.com/intl/en_ALL/images/logo.gif&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make synchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make synchronous HTTP requests from JavaScript&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGet(theUrl)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.open( &quot;GET&quot;, theUrl, false ); // false for synchronous request
    xmlHttpReq.send( null );
    return xmlHttpReq.responseText;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make asynchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make asynchronous HTTP requests from JavaScript by passing the 3rd parameter as true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGetAsync(theUrl, callback)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.onreadystatechange = function() {
        if (xmlHttpReq.readyState == 4 &amp;amp;&amp;amp; xmlHttpReq.status == 200)
            callback(xmlHttpReq.responseText);
    }
    xmlHttp.open(&quot;GET&quot;, theUrl, true); // true for asynchronous
    xmlHttp.send(null);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert date to another timezone in javascript&lt;/h3&gt; &lt;p&gt;You can use the toLocaleString() method to convert dates in one timezone to another. For example, let&#39;s convert current date to British English timezone as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(event.toLocaleString(&#39;en-GB&#39;, { timeZone: &#39;UTC&#39; })); //29/06/2019, 09:56:00
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties used to get size of window&lt;/h3&gt; &lt;p&gt;You can use innerWidth, innerHeight, clientWidth, clientHeight properties of windows, document element and document body objects to find the size of a window. Let&#39;s use them combination of these properties to calculate the size of a window or document,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var width = window.innerWidth
|| document.documentElement.clientWidth
|| document.body.clientWidth;

var height = window.innerHeight
|| document.documentElement.clientHeight
|| document.body.clientHeight;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a conditional operator in javascript&lt;/h3&gt; &lt;p&gt;The conditional (ternary) operator is the only JavaScript operator that takes three operands which acts as a shortcut for if statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var isAuthenticated = false;
console.log(isAuthenticated ? &#39;Hello, welcome&#39; : &#39;Sorry, you are not authenticated&#39;); //Sorry, you are not authenticated
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you apply chaining on conditional operator&lt;/h3&gt; &lt;p&gt;Yes, you can apply chaining on conditional operators similar to if … else if … else if … else chain. The syntax is going to be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function traceValue(someParam) {
    return condition1 ? value1
         : condition2 ? value2
         : condition3 ? value3
         : value4;
}

// The above conditional operator is equivalent to:

function traceValue(someParam) {
    if (condition1) { return value1; }
    else if (condition2) { return value2; }
    else if (condition3) { return value3; }
    else { return value4; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the ways to execute javascript after page load&lt;/h3&gt; &lt;p&gt;You can execute javascript after page load in many different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;window.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;document.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;body onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;body onload=&quot;script();&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between proto and prototype&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;__proto__&lt;/code&gt; object is the actual object that is used in the lookup chain to resolve methods, etc. Whereas &lt;code&gt;prototype&lt;/code&gt; is the object that is used to build &lt;code&gt;__proto__&lt;/code&gt; when you create an object with new&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;( new Employee ).__proto__ === Employee.prototype;
( new Employee ).prototype === undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example where do you really need semicolon&lt;/h3&gt; &lt;p&gt;It is recommended to use semicolons after every statement in JavaScript. For example, in the below case it throws an error &quot;.. is not a function&quot; at runtime due to missing semicolon.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// define a function
var fn = function () {
    //...
} // semicolon missing at this line

// then execute some code inside a closure
(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and it will be interpreted as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fn = function () {
    //...
}(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this case, we are passing the second function as an argument to the first function and then trying to call the result of the first function call as a function. Hence, the second function will fail with a &quot;... is not a function&quot; error at runtime.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a freeze method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;freeze()&lt;/strong&gt; method is used to freeze an object. Freezing an object does not allow adding new properties to an object,prevents from removing and prevents changing the enumerability, configurability, or writability of existing properties. i.e, It returns the passed object and does not create a frozen copy.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop: 100
};

Object.freeze(obj);
obj.prop = 200; // Throws an error in strict mode

console.log(obj.prop); //100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It causes a TypeError if the argument passed is not an object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of freeze method&lt;/h3&gt; &lt;p&gt;Below are the main benefits of using freeze method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for freezing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do I need to use freeze method&lt;/h3&gt; &lt;p&gt;In the Object-oriented paradigm, an existing API contains certain elements that are not intended to be extended, modified, or re-used outside of their current context. Hence it works as the &lt;code&gt;final&lt;/code&gt; keyword which is used in various languages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a browser language preference&lt;/h3&gt; &lt;p&gt;You can use navigator object to detect a browser language preference as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var language = navigator.languages &amp;amp;&amp;amp; navigator.languages[0] || // Chrome / Firefox
               navigator.language ||   // All browsers
               navigator.userLanguage; // IE &amp;lt;= 10

console.log(language);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to convert string to title case with javascript&lt;/h3&gt; &lt;p&gt;Title case means that the first letter of each word is capitalized. You can convert a string to title case using the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    function toTitleCase(str) {
        return str.replace(
            /\w\S*/g,
            function(txt) {
                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            }
        );
    }
    toTitleCase(&quot;good morning john&quot;); // Good Morning John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect javascript disabled in the page&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; tag to detect javascript disabled or not. The code block inside &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; gets executed when JavaScript is disabled, and is typically used to display alternative content when the page generated in JavaScript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;javascript&quot;&amp;gt;
    // JS related code goes here
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;
    &amp;lt;a href=&quot;next_page.html?noJS=true&quot;&amp;gt;JavaScript is disabled in the page. Please click Next Page&amp;lt;/a&amp;gt;
&amp;lt;/noscript&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are various operators supported by javascript&lt;/h3&gt; &lt;p&gt;An operator is capable of manipulating(mathematical and logical computations) a certain value or operand. There are various operators supported by JavaScript as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Arithmetic Operators:&lt;/strong&gt; Includes + (Addition),– (Subtraction), * (Multiplication), / (Division), % (Modulus), + + (Increment) and – – (Decrement)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison Operators:&lt;/strong&gt; Includes = =(Equal),!= (Not Equal), ===(Equal with type), &amp;gt; (Greater than),&amp;gt; = (Greater than or Equal to),&amp;lt; (Less than),&amp;lt;= (Less than or Equal to)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Logical Operators:&lt;/strong&gt; Includes &amp;amp;&amp;amp;(Logical AND),||(Logical OR),!(Logical NOT)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Assignment Operators:&lt;/strong&gt; Includes = (Assignment Operator), += (Add and Assignment Operator), – = (Subtract and Assignment Operator), *= (Multiply and Assignment), /= (Divide and Assignment), %= (Modules and Assignment)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Ternary Operators:&lt;/strong&gt; It includes conditional(: ?) Operator&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;typeof Operator:&lt;/strong&gt; It uses to find type of variable. The syntax looks like &lt;code&gt;typeof variable&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter is an improved way to handle function parameters which allows us to represent an indefinite number of arguments as an array. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function f(a, b, ...theArgs) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, let&#39;s take a sum example to calculate on dynamic number of parameters,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function total(…args){
let sum = 0;
for(let i of args){
sum+=i;
}
return sum;
}
console.log(fun(1,2)); //3
console.log(fun(1,2,3)); //6
console.log(fun(1,2,3,4)); //13
console.log(fun(1,2,3,4,5)); //15
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rest parameter is added in ES2015 or ES6&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you do not use rest parameter as a last argument&lt;/h3&gt; &lt;p&gt;The rest parameter should be the last argument, as its job is to collect all the remaining arguments into an array. For example, if you define a function like below it doesn’t make any sense and will throw an error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function someFunc(a,…b,c){
//You code goes here
return;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the bitwise operators available in javascript&lt;/h3&gt; &lt;p&gt;Below are the list of bitwise logical operators used in JavaScript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Bitwise AND ( &amp;amp; )&lt;/li&gt; 
   &lt;li&gt;Bitwise OR ( | )&lt;/li&gt; 
   &lt;li&gt;Bitwise XOR ( ^ )&lt;/li&gt; 
   &lt;li&gt;Bitwise NOT ( ~ )&lt;/li&gt; 
   &lt;li&gt;Left Shift ( &amp;lt;&amp;lt; )&lt;/li&gt; 
   &lt;li&gt;Sign Propagating Right Shift ( &amp;gt;&amp;gt; )&lt;/li&gt; 
   &lt;li&gt;Zero fill Right Shift ( &amp;gt;&amp;gt;&amp;gt; )&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a spread operator&lt;/h3&gt; &lt;p&gt;Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. Let&#39;s take an example to see this behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function calculateSum(x, y, z) {
  return x + y + z;
}

const numbers = [1, 2, 3];

console.log(calculateSum(...numbers)); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine whether object is frozen or not&lt;/h3&gt; &lt;p&gt;Object.isFrozen() method is used to determine if an object is frozen or not.An object is frozen if all of the below conditions hold true,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If all its data properties are non-writable. The usage is going to be as follows,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
   property: &#39;Welcome JS world&#39;
};
Object.freeze(object);
console.log(Object.isFrozen(object));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine two values same or not using object&lt;/h3&gt; &lt;p&gt;The Object.is() method determines whether two values are the same value. For example, the usage with different types of values would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.is(&#39;hello&#39;, &#39;hello&#39;);     // true
Object.is(window, window);   // true
Object.is([], []) // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Two values are the same if one of the following holds:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;both undefined&lt;/li&gt; 
   &lt;li&gt;both null&lt;/li&gt; 
   &lt;li&gt;both true or both false&lt;/li&gt; 
   &lt;li&gt;both strings of the same length with the same characters in the same order&lt;/li&gt; 
   &lt;li&gt;both the same object (means both object have same reference)&lt;/li&gt; 
   &lt;li&gt;both numbers and both +0 both -0 both NaN both non-zero and both not NaN and both have the same value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using object is method&lt;/h3&gt; &lt;p&gt;Some of the applications of Object&#39;s &lt;code&gt;is&lt;/code&gt; method are follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for comparison of two strings.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparing the polarity of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two objects.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you copy properties from one object to other&lt;/h3&gt; &lt;p&gt;You can use the Object.assign() method which is used to copy the values and properties from one or more source objects to a target object. It returns the target object which has properties and values copied from the target object. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.assign(target, ...sources)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take example with one source and one target object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const target = { a: 1, b: 2 };
const source = { b: 3, c: 4 };

const returnedTarget = Object.assign(target, source);

console.log(target); // { a: 1, b: 3, c: 4 }

console.log(returnedTarget); // { a: 1, b: 3, c: 4 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed in the above code, there is a common property(&lt;code&gt;b&lt;/code&gt;) from source to target so it&#39;s value has been overwritten.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of assign method&lt;/h3&gt; &lt;p&gt;Below are the some of main applications of Object.assign() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for cloning an object.&lt;/li&gt; 
   &lt;li&gt;It is used to merge objects with the same properties.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a proxy object&lt;/h3&gt; &lt;p&gt;The Proxy object is used to define custom behavior for fundamental operations such as property lookup, assignment, enumeration, function invocation, etc. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var p = new Proxy(target, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of proxy object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var handler = {
    get: function(obj, prop) {
        return prop in obj ?
            obj[prop] :
            100;
    }
};

var p = new Proxy({}, handler);
p.a = 10;
p.b = null;

console.log(p.a, p.b); // 10, null
console.log(&#39;c&#39; in p, p.c); // false, 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, it uses &lt;code&gt;get&lt;/code&gt; handler which define the behavior of the proxy when an operation is performed on it&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of seal method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Object.seal()&lt;/strong&gt; method is used to seal an object, by preventing new properties from being added to it and marking all existing properties as non-configurable. But values of present properties can still be changed as long as they are writable. Let&#39;s see the below example to understand more about seal() method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
    property: &#39;Welcome JS world&#39;
 };
 Object.seal(object);
 object.property = &#39;Welcome to object world&#39;;
 console.log(Object.isSealed(object)); // true
 delete object.property; // You cannot delete when sealed
 console.log(object.property); //Welcome to object world
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of seal method&lt;/h3&gt; &lt;p&gt;Below are the main applications of Object.seal() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for sealing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between freeze and seal methods&lt;/h3&gt; &lt;p&gt;If an object is frozen using the Object.freeze() method then its properties become immutable and no changes can be made in them whereas if an object is sealed using the Object.seal() method then the changes can be made in the existing properties of the object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine if an object is sealed or not&lt;/h3&gt; &lt;p&gt;The Object.isSealed() method is used to determine if an object is sealed or not. An object is sealed if all of the below conditions hold true&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If it is not removable (but not necessarily non-writable). Let&#39;s see it in the action&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
property: &#39;Hello, Good morning&#39;
};

Object.seal(object); // Using seal() method to seal the object

console.log(Object.isSealed(object));      // checking whether the object is sealed or not
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get enumerable key and value pairs&lt;/h3&gt; &lt;p&gt;The Object.entries() method is used to return an array of a given object&#39;s own enumerable string-keyed property [key, value] pairs, in the same order as that provided by a for...in loop. Let&#39;s see the functionality of object.entries() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
  a: &#39;Good morning&#39;,
  b: 100
};

for (let [key, value] of Object.entries(object)) {
  console.log(`${key}: ${value}`); // a: &#39;Good morning&#39;
                                   // b: 100
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The order is not guaranteed as object defined.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between Object.values and Object.entries method&lt;/h3&gt; &lt;p&gt;The Object.values() method&#39;s behavior is similar to Object.entries() method but it returns an array of values instead [key,value] pairs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
   a: &#39;Good morning&#39;,
   b: 100
 };

 for (let value of Object.values(object)) {
   console.log(`${value}`); // &#39;Good morning&#39;
                                100
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How can you get the list of keys of any object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.keys()&lt;/code&gt; method which is used to return an array of a given object&#39;s own property names, in the same order as we get with a normal loop. For example, you can get the keys of a user object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;,
  gender: &#39;male&#39;,
  age: 40
};

console.log(Object.keys(user)); //[&#39;name&#39;, &#39;gender&#39;, &#39;age&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an object with prototype&lt;/h3&gt; &lt;p&gt;The Object.create() method is used to create a new object with the specified prototype object and properties. i.e, It uses an existing object as the prototype of the newly created object. It returns a new object with the specified prototype object and properties.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = {
   name: &#39;John&#39;,
   printInfo: function () {
     console.log(`My name is ${this.name}.`);
   }
 };

 const admin = Object.create(user);

 admin.name = &quot;Nick&quot;; // Remember that &quot;name&quot; is a property set on &quot;admin&quot; but not on &quot;user&quot; object

 admin.printInfo(); // My name is Nick
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakSet&lt;/h3&gt; &lt;p&gt;WeakSet is used to store a collection of weakly(weak references) held objects. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakSet([iterable]);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ws = new WeakSet();
var user = {};
ws.add(user);
ws.has(user);    // true
ws.delete(user); // removes user from the set
ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakSet and Set&lt;/h3&gt; &lt;p&gt;The main difference is that references to objects in Set are strong while references to objects in WeakSet are weak. i.e, An object in WeakSet can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Sets can store any value Whereas WeakSets can store only collections of objects&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have size property unlike Set&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakSet is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakSet&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakSet,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;add(value): A new object is appended with the given value to the weakset&lt;/li&gt; 
   &lt;li&gt;delete(value): Deletes the value from the WeakSet collection.&lt;/li&gt; 
   &lt;li&gt;has(value): It returns true if the value is present in the WeakSet Collection, otherwise it returns false.&lt;/li&gt; 
   &lt;li&gt;length(): It returns the length of weakSetObject Let&#39;s see the functionality of all the above methods in an example,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakSetObject = new WeakSet();
var firstObject = {};
var secondObject = {};
// add(value)
weakSetObject.add(firstObject);
weakSetObject.add(secondObject);
console.log(weakSetObject.has(firstObject)); //true
console.log(weakSetObject.length()); //2
weakSetObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakMap&lt;/h3&gt; &lt;p&gt;The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. In this case, keys must be objects and the values can be arbitrary values. The syntax is looking like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakMap([iterable])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var ws = new WeakMap();
 var user = {};
 ws.set(user);
 ws.has(user);    // true
 ws.delete(user); // removes user from the map
 ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakMap and Map&lt;/h3&gt; &lt;p&gt;The main difference is that references to key objects in Map are strong while references to key objects in WeakMap are weak. i.e, A key object in WeakMap can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maps can store any key type Whereas WeakMaps can store only collections of key objects&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have size property unlike Map&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakMap is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakMap&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakMap,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;set(key, value): Sets the value for the key in the WeakMap object. Returns the WeakMap object.&lt;/li&gt; 
   &lt;li&gt;delete(key): Removes any value associated to the key.&lt;/li&gt; 
   &lt;li&gt;has(key): Returns a Boolean asserting whether a value has been associated to the key in the WeakMap object or not.&lt;/li&gt; 
   &lt;li&gt;get(key): Returns the value associated to the key, or undefined if there is none. Let&#39;s see the functionality of all the above methods in an example,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakMapObject = new WeakMap();
var firstObject = {};
var secondObject = {};
// set(key, value)
weakMapObject.set(firstObject, &#39;John&#39;);
weakMapObject.set(secondObject, 100);
console.log(weakMapObject.has(firstObject)); //true
console.log(weakMapObject.get(firstObject)); // John
weakMapObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of uneval&lt;/h3&gt; &lt;p&gt;The uneval() is an inbuilt function which is used to create a string representation of the source code of an Object. It is a top-level function and is not associated with any object. Let&#39;s see the below example to know more about it&#39;s functionality,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 1;
uneval(a); // returns a String containing 1
uneval(function user() {}); // returns &quot;(function user(){})&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you encode an URL&lt;/h3&gt; &lt;p&gt;The encodeURI() function is used to encode complete URI which has special characters except (, / ? : @ &amp;amp; = + $ #) characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var uri = &#39;https://mozilla.org/?x=шеллы&#39;;
var encoded = encodeURI(uri);
console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you decode an URL&lt;/h3&gt; &lt;p&gt;The decodeURI() function is used to decode a Uniform Resource Identifier (URI) previously created by encodeURI().&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var uri = &#39;https://mozilla.org/?x=шеллы&#39;;
 var encoded = encodeURI(uri);
 console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
try {
  console.log(decodeURI(encoded)); // &quot;https://mozilla.org/?x=шеллы&quot;
} catch(e) { // catches a malformed URI
  console.error(e);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print the contents of web page&lt;/h3&gt; &lt;p&gt;The window object provided a print() method which is used to print the contents of the current window. It opens a Print dialog box which lets you choose between various printing options. Let&#39;s see the usage of print method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;   &amp;lt;input type=&quot;button&quot; value=&quot;Print&quot; onclick=&quot;window.print()&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In most browsers, it will block while the print dialog is open.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between uneval and eval&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;uneval&lt;/code&gt; function returns the source of a given object; whereas the &lt;code&gt;eval&lt;/code&gt; function does the opposite, by evaluating that source code in a different memory area. Let&#39;s see an example to clarify the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = uneval(function greeting() { return &#39;Hello, Good morning&#39;; });
var greeting = eval(msg);
greeting(); // returns &quot;Hello, Good morning&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an anonymous function&lt;/h3&gt; &lt;p&gt;An anonymous function is a function without a name! Anonymous functions are commonly assigned to a variable name or used as a callback function. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function (optionalParameters) {
  //do something
}

const myFunction = function(){ //Anonymous function assigned to a variable
  //do something
};

[1, 2, 3].map(function(element){ //Anonymous function used as a callback function
  //do something
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the above anonymous function in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = function (a, b) {return a * b};
var z = x(5, 10);
console.log(z); // 50
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the precedence order between local and global variables&lt;/h3&gt; &lt;p&gt;A local variable takes precedence over a global variable with the same name. Let&#39;s see this behavior in an example.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Good morning&quot;;
function greeting() {
   msg = &quot;Good Evening&quot;;
   console.log(msg);
}
greeting();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are javascript accessors&lt;/h3&gt; &lt;p&gt;ECMAScript 5 introduced javascript object accessors or computed properties through getters and setters. Getters uses the &lt;code&gt;get&lt;/code&gt; keyword whereas Setters uses the &lt;code&gt;set&lt;/code&gt; keyword.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = {
  firstName: &quot;John&quot;,
  lastName : &quot;Abraham&quot;,
  language : &quot;en&quot;,
  get lang() {
    return this.language;
  }
  set lang(lang) {
  this.language = lang;
  }
};
console.log(user.lang); // getter access lang as en
user.lang = &#39;fr&#39;;
console.log(user.lang); // setter used to set lang as fr
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define property on Object constructor&lt;/h3&gt; &lt;p&gt;The Object.defineProperty() static method is used to define a new property directly on an object, or modify an existing property on an object, and returns the object. Let&#39;s see an example to know how to define property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperty(newObject, &#39;newProperty&#39;, {
  value: 100,
  writable: false
});

console.log(newObject.newProperty); // 100

newObject.newProperty = 200; // It throws an error in strict mode due to writable setting

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between get and defineProperty&lt;/h3&gt; &lt;p&gt;Both have similar results until unless you use classes. If you use &lt;code&gt;get&lt;/code&gt; the property will be defined on the prototype of the object whereas using &lt;code&gt;Object.defineProperty()&lt;/code&gt; the property will be defined on the instance it is applied to.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Getters and Setters&lt;/h3&gt; &lt;p&gt;Below are the list of benefits of Getters and Setters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They provide simpler syntax&lt;/li&gt; 
   &lt;li&gt;They are used for defining computed properties, or accessors in JS.&lt;/li&gt; 
   &lt;li&gt;Useful to provide equivalence relation between properties and methods&lt;/li&gt; 
   &lt;li&gt;They can provide better data quality&lt;/li&gt; 
   &lt;li&gt;Useful for doing things behind the scenes with the encapsulated logic.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I add getters and setters using defineProperty method&lt;/h3&gt; &lt;p&gt;Yes, You can use the &lt;code&gt;Object.defineProperty()&lt;/code&gt; method to add Getters and Setters. For example, the below counter object uses increment, decrement, add and subtract properties,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var obj = {counter : 0};

// Define getters
Object.defineProperty(obj, &quot;increment&quot;, {
  get : function () {this.counter++;}
});
Object.defineProperty(obj, &quot;decrement&quot;, {
  get : function () {this.counter--;}
});

// Define setters
Object.defineProperty(obj, &quot;add&quot;, {
  set : function (value) {this.counter += value;}
});
Object.defineProperty(obj, &quot;subtract&quot;, {
  set : function (value) {this.counter -= value;}
});

obj.add = 10;
obj.subtract = 5;
console.log(obj.increment); //6
console.log(obj.decrement); //5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of switch-case&lt;/h3&gt; &lt;p&gt;The switch case statement in JavaScript is used for decision making purposes. In a few cases, using the switch case statement is going to be more convenient than if-else statements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;switch (expression)
{
    case value1:
        statement1;
        break;
    case value2:
        statement2;
        break;
    .
    .
    case valueN:
        statementN;
        break;
    default:
        statementDefault;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above multi-way branch statement provides an easy way to dispatch execution to different parts of code based on the value of the expression.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conventions to be followed for the usage of switch case&lt;/h3&gt; &lt;p&gt;Below are the list of conventions should be taken care,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The expression can be of type either number or string.&lt;/li&gt; 
   &lt;li&gt;Duplicate values are not allowed for the expression.&lt;/li&gt; 
   &lt;li&gt;The default statement is optional. If the expression passed to switch does not match with any case value then the statement within default case will be executed.&lt;/li&gt; 
   &lt;li&gt;The break statement is used inside the switch to terminate a statement sequence.&lt;/li&gt; 
   &lt;li&gt;The break statement is optional. But if it is omitted, the execution will continue on into the next case.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are primitive data types&lt;/h3&gt; &lt;p&gt;A primitive data type is data that has a primitive value (which has no properties or methods). There are 5 types of primitive data types.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;null&lt;/li&gt; 
   &lt;li&gt;undefined&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to access object properties&lt;/h3&gt; &lt;p&gt;There are 3 possible ways for accessing the property of an object.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Dot notation:&lt;/strong&gt; It uses dot for accessing the properties&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName.property
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Square brackets notation:&lt;/strong&gt; It uses square brackets for property access&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[&quot;property&quot;]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Expression notation:&lt;/strong&gt; It uses expression in the square brackets&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[expression]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the function parameter rules&lt;/h3&gt; &lt;p&gt;JavaScript functions follow below rules for parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The function definitions do not specify data types for parameters.&lt;/li&gt; 
   &lt;li&gt;Do not perform type checking on the passed arguments.&lt;/li&gt; 
   &lt;li&gt;Do not check the number of arguments received. i.e, The below function follows the above rules,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function functionName(parameter1, parameter2, parameter3) {
  console.log(parameter1); // 1
}
functionName(1);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an error object&lt;/h3&gt; &lt;p&gt;An error object is a built in error object that provides error information when an error occurs. It has two properties: name and message. For example, the below function logs error details,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  greeting(&quot;Welcome&quot;);
}
catch(err) {
  console.log(err.name + &quot;&amp;lt;br&amp;gt;&quot; + err.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When you get a syntax error&lt;/h3&gt; &lt;p&gt;A SyntaxError is thrown if you try to evaluate code with a syntax error. For example, the below missing quote for the function parameter throws a syntax error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  eval(&quot;greeting(&#39;welcome)&quot;);   // Missing &#39; will produce an error
}
catch(err) {
  console.log(err.name);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different error names from error object&lt;/h3&gt; &lt;p&gt;There are 6 different types of error names returned from error object, | Error Name | Description | |---- | --------- | EvalError | An error has occurred in the eval() function | | RangeError | An error has occurred with a number &quot;out of range&quot; | | ReferenceError | An error due to an illegal reference| | SyntaxError | An error due to a syntax error| | TypeError | An error due to a type error | | URIError | An error due to encodeURI() |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various statements in error handling&lt;/h3&gt; &lt;p&gt;Below are the list of statements used in an error handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;try:&lt;/strong&gt; This statement is used to test a block of code for errors&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;catch:&lt;/strong&gt; This statement is used to handle the error&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;throw:&lt;/strong&gt; This statement is used to create custom errors.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;finally:&lt;/strong&gt; This statement is used to execute code after try and catch regardless of the result.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two types of loops in javascript&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Entry Controlled loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested before entering the loop body. For example, For Loop and While Loop comes under this category.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Exit Controlled Loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested or evaluated at the end of the loop body. i.e, the loop body will execute at least once irrespective of test condition true or false. For example, do-while loop comes under this category.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is nodejs&lt;/h3&gt; &lt;p&gt;Node.js is a server-side platform built on Chrome&#39;s JavaScript runtime for easily building fast and scalable network applications. It is an event-based, non-blocking, asynchronous I/O runtime that uses Google&#39;s V8 JavaScript engine and libuv library.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Intl object&lt;/h3&gt; &lt;p&gt;The Intl object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. It provides access to several constructors and language sensitive functions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform language specific date and time formatting&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; object which is a constructor for objects that enable language-sensitive date and time formatting. Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var date = new Date(Date.UTC(2019, 07, 07, 3, 0, 0));
console.log(new Intl.DateTimeFormat(&#39;en-GB&#39;).format(date)); // 07/08/2019
console.log(new Intl.DateTimeFormat(&#39;en-AU&#39;).format(date)); // 07/08/2019
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Iterator&lt;/h3&gt; &lt;p&gt;An iterator is an object which defines a sequence and a return value upon its termination. It implements the Iterator protocol with a &lt;code&gt;next()&lt;/code&gt; method which returns an object with two properties: &lt;code&gt;value&lt;/code&gt; (the next value in the sequence) and &lt;code&gt;done&lt;/code&gt; (which is true if the last value in the sequence has been consumed).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does synchronous iteration works&lt;/h3&gt; &lt;p&gt;Synchronous iteration was introduced in ES6 and it works with below set of components,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Iterable:&lt;/strong&gt; It is an object which can be iterated over via a method whose key is Symbol.iterator. &lt;strong&gt;Iterator:&lt;/strong&gt; It is an object returned by invoking &lt;code&gt;[Symbol.iterator]()&lt;/code&gt; on an iterable. This iterator object wraps each iterated element in an object and returns it via &lt;code&gt;next()&lt;/code&gt; method one by one. &lt;strong&gt;IteratorResult:&lt;/strong&gt; It is an object returned by &lt;code&gt;next()&lt;/code&gt; method. The object contains two properties; the &lt;code&gt;value&lt;/code&gt; property contains an iterated element and the &lt;code&gt;done&lt;/code&gt; property determines whether the element is the last element or not.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate synchronous iteration with an array as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iterable = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;];
const iterator = iterable[Symbol.iterator]();
console.log(iterator.next());  // { value: &#39;one&#39;, done: false }
console.log(iterator.next());  // { value: &#39;two&#39;, done: false }
console.log(iterator.next());  // { value: &#39;three&#39;, done: false }
console.log(iterator.next());  // { value: &#39;undefined, done: true }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event loop&lt;/h3&gt; &lt;p&gt;The Event Loop is a queue of callback functions. When an async function executes, the callback function is pushed into the queue. The JavaScript engine doesn&#39;t start processing the event loop until the async function has finished executing the code. &lt;strong&gt;Note:&lt;/strong&gt; It allows Node.js to perform non-blocking I/O operations even though JavaScript is single-threaded.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is call stack&lt;/h3&gt; &lt;p&gt;Call Stack is a data structure for javascript interpreters to keep track of function calls in the program. It has two major actions,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Whenever you call a function for its execution, you are pushing it to the stack.&lt;/li&gt; 
   &lt;li&gt;Whenever the execution is completed, the function is popped out of the stack.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s take an example and it&#39;s state representation in a diagram format&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hungry() {
   eatFruits();
}
function eatFruits() {
   return &quot;I&#39;m eating fruits&quot;;
}

// Invoke the `hungry` function
hungry();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code processed in a call stack as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Add the &lt;code&gt;hungry()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Add the &lt;code&gt;eatFruits()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;eatFruits()&lt;/code&gt; function from our call stack list.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;hungry()&lt;/code&gt; function from the call stack list since there are no items anymore.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/call-stack.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event queue&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a decorator&lt;/h3&gt; &lt;p&gt;A decorator is an expression that evaluates to a function and that takes the target, name, and decorator descriptor as arguments. Also, it optionally returns a decorator descriptor to install on the target object. Let&#39;s define admin decorator for user class at design time,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function admin(isAdmin) {
   return function(target) {
       target.isAdmin = isAdmin;
   }
}

@admin(true)
class User() {
}
console.log(User.isAdmin); //true

 @admin(false)
 class User() {
 }
 console.log(User.isAdmin); //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties of Intl object&lt;/h3&gt; &lt;p&gt;Below are the list of properties available on Intl object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Collator:&lt;/strong&gt; These are the objects that enable language-sensitive string comparison.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;DateTimeFormat:&lt;/strong&gt; These are the objects that enable language-sensitive date and time formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ListFormat:&lt;/strong&gt; These are the objects that enable language-sensitive list formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;NumberFormat:&lt;/strong&gt; Objects that enable language-sensitive number formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;PluralRules:&lt;/strong&gt; Objects that enable plural-sensitive formatting and language-specific rules for plurals.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RelativeTimeFormat:&lt;/strong&gt; Objects that enable language-sensitive relative time formatting.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Unary operator&lt;/h3&gt; &lt;p&gt;The unary(+) operator is used to convert a variable to a number.If the variable cannot be converted, it will still become a number but with the value NaN. Let&#39;s see this behavior in an action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = &quot;100&quot;;
var y = + x;
console.log(typeof x, typeof y); // string, number

var a = &quot;Hello&quot;;
var b = + a;
console.log(typeof a, typeof b, b); // string, number, NaN
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you sort elements in an array&lt;/h3&gt; &lt;p&gt;The sort() method is used to sort the elements of an array in place and returns the sorted array. The example usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var months = [&quot;Aug&quot;, &quot;Sep&quot;, &quot;Jan&quot;, &quot;June&quot;];
months.sort();
console.log(months); //  [&quot;Aug&quot;, &quot;Jan&quot;, &quot;June&quot;, &quot;Sep&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of compareFunction while sorting arrays&lt;/h3&gt; &lt;p&gt;The compareFunction is used to define the sort order. If omitted, the array elements are converted to strings, then sorted according to each character&#39;s Unicode code point value. Let&#39;s take an example to see the usage of compareFunction,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
console.log(numbers); // [5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reversing an array&lt;/h3&gt; &lt;p&gt;You can use the reverse() method to reverse the elements in an array. This method is useful to sort an array in descending order. Let&#39;s see the usage of reverse() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
numbers.reverse();
console.log(numbers); // [1, 2, 3, 4 ,5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max value in an array&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;Math.min&lt;/code&gt; and &lt;code&gt;Math.max&lt;/code&gt; methods on array variables to find the minimum and maximum elements within an array. Let&#39;s create two functions to find the min and max value with in an array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var marks = [50, 20, 70, 60, 45, 30];
function findMin(arr) {
  return Math.min.apply(null, arr);
}
function findMax(arr) {
  return Math.max.apply(null, arr);
}

console.log(findMin(marks));
console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max values without Math functions&lt;/h3&gt; &lt;p&gt;You can write functions which loop through an array comparing each value with the lowest value or highest value to find the min and max values. Let&#39;s create those functions to find min and max values,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var marks = [50, 20, 70, 60, 45, 30];
 function findMin(arr) {
   var length = arr.length
   var min = Infinity;
   while (length--) {
     if (arr[length] &amp;lt; min) {
       min = arr[len];
     }
   }
   return min;
 }

 function findMax(arr) {
   var length = arr.length
   var max = -Infinity;
   while (len--) {
     if (arr[length] &amp;gt; max) {
       max = arr[length];
     }
   }
   return max;
 }

 console.log(findMin(marks));
 console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an empty statement and purpose of it&lt;/h3&gt; &lt;p&gt;The empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. Since there is no action with an empty statement you might think that it&#39;s usage is quite less, but the empty statement is occasionally useful when you want to create a loop that has an empty body. For example, you can initialize an array with zero values as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Initialize an array a
for(int i=0; i &amp;lt; a.length; a[i++] = 0) ;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get metadata of a module&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;import.meta&lt;/code&gt; object which is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the current module, such as the module&#39;s URL. In browsers, you might get different meta data than NodeJS.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;welcome-module.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
console.log(import.meta); // { url: &quot;file:///home/user/welcome-module.js&quot; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a comma operator&lt;/h3&gt; &lt;p&gt;The comma operator is used to evaluate each of its operands from left to right and returns the value of the last operand. This is totally different from comma usage within arrays, objects, and function arguments and parameters. For example, the usage for numeric expressions would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 1;
x = (x++, x);

console.log(x); // 2
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the advantage of a comma operator&lt;/h3&gt; &lt;p&gt;It is normally used to include multiple expressions in a location that requires a single expression. One of the common usages of this comma operator is to supply multiple parameters in a &lt;code&gt;for&lt;/code&gt; loop. For example, the below for loop uses multiple expressions in a single location using comma operator,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var a = 0, b =10; a &amp;lt;= 10; a++, b--)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use the comma operator in a return statement where it processes before returning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
   var a = 1;
   return (a += 10, a); // 11
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is typescript&lt;/h3&gt; &lt;p&gt;TypeScript is a typed superset of JavaScript created by Microsoft that adds optional types, classes, async/await, and many other features, and compiles to plain JavaScript. Angular built entirely in TypeScript and used as a primary language. You can install it globally as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see a simple example of TypeScript usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;function greeting(name: string): string {
   return &quot;Hello, &quot; + name;
}

let user = &quot;Sudheer&quot;;

console.log(greeting(user));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The greeting method allows only string type as argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between javascript and typescript&lt;/h3&gt; &lt;p&gt;Below are the list of differences between javascript and typescript,&lt;/p&gt; &lt;p&gt;| feature | typescript | javascript | |---- | --------- | ---- | Language paradigm | Object oriented programming language | Scripting language | | Typing support | Supports static typing | It has dynamic typing | | Modules | Supported | Not supported | | Interface | It has interfaces concept | Doesn&#39;t support interfaces | | Optional parameters | Functions support optional parameters | No support of optional parameters for functions |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of typescript over javascript&lt;/h3&gt; &lt;p&gt;Below are some of the advantages of typescript over javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;TypeScript is able to find compile time errors at the development time only and it makes sures less runtime errors. Whereas javascript is an interpreted language.&lt;/li&gt; 
   &lt;li&gt;TypeScript is strongly-typed or supports static typing which allows for checking type correctness at compile time. This is not available in javascript.&lt;/li&gt; 
   &lt;li&gt;TypeScript compiler can compile the .ts files into ES3,ES4 and ES5 unlike ES6 features of javascript which may not be supported in some browsers.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an object initializer&lt;/h3&gt; &lt;p&gt;An object initializer is an expression that describes the initialization of an Object. The syntax for this expression is represented as a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}). This is also known as literal notation. It is one of the ways to create an object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var initObject = {a: &#39;John&#39;, b: 50, c: {}};

console.log(initObject.a); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a constructor method&lt;/h3&gt; &lt;p&gt;The constructor method is a special method for creating and initializing an object created within a class. If you do not specify a constructor method, a default constructor is used. The example usage of constructor would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor() {
    this.name = &quot;John&quot;;
  }
}

var employeeObject = new Employee();

console.log(employeeObject.name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you write constructor more than once in a class&lt;/h3&gt; &lt;p&gt;The &quot;constructor&quot; in a class is a special method and it should be defined only once in a class. i.e, If you write a constructor method more than once in a class it will throw a &lt;code&gt;SyntaxError&lt;/code&gt; error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Employee {
   constructor() {
     this.name = &quot;John&quot;;
   }
   constructor() {   //  Uncaught SyntaxError: A class may only have one constructor
     this.age = 30;
   }
 }

 var employeeObject = new Employee();

 console.log(employeeObject.name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you call the constructor of a parent class&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of a parent class. Remember that &lt;code&gt;super()&lt;/code&gt; must be called before using &#39;this&#39; reference. Otherwise it will cause a reference error. Let&#39;s the usage of it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Square extends Rectangle {
  constructor(length) {
    super(length, length);
    this.name = &#39;Square&#39;;
  }

  get area() {
    return this.width * this.height;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the prototype of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; method to return the prototype of the specified object. i.e. The value of the internal &lt;code&gt;prototype&lt;/code&gt; property. If there are no inherited properties then &lt;code&gt;null&lt;/code&gt; value is returned.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newPrototype = {};
const newObject = Object.create(newPrototype);

console.log(Object.getPrototypeOf(newObject) === newPrototype); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens If I pass string type for getPrototype method&lt;/h3&gt; &lt;p&gt;In ES5, it will throw a TypeError exception if the obj parameter isn&#39;t an object. Whereas in ES2015, the parameter will be coerced to an &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ES5
Object.getPrototypeOf(&#39;James&#39;); // TypeError: &quot;James&quot; is not an object
// ES2015
Object.getPrototypeOf(&#39;James&#39;); // String.prototype
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set prototype of one object to another&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; method that sets the prototype (i.e., the internal &lt;code&gt;Prototype&lt;/code&gt; property) of a specified object to another object or null. For example, if you want to set prototype of a square object to rectangle object would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.setPrototypeOf(Square.prototype, Rectangle.prototype);
Object.setPrototypeOf({}, null);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an object can be extendable or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.isExtensible()&lt;/code&gt; method is used to determine if an object is extendable or not. i.e, Whether it can have new properties added to it or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
console.log(Object.isExtensible(newObject)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default, all the objects are extendable. i.e, The new properties can be added or modified.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent an object to extend&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.preventExtensions()&lt;/code&gt; method is used to prevent new properties from ever being added to an object. In other words, it prevents future extensions to the object. Let&#39;s see the usage of this property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
Object.preventExtensions(newObject); // NOT extendable

try {
  Object.defineProperty(newObject, &#39;newProperty&#39;, { // Adding new property
    value: 100
  });
} catch (e) {
  console.log(e); // TypeError: Cannot define property newProperty, object is not extensible
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to make an object non-extensible&lt;/h3&gt; &lt;p&gt;You can mark an object non-extensible in 3 ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Object.preventExtensions&lt;/li&gt; 
   &lt;li&gt;Object.seal&lt;/li&gt; 
   &lt;li&gt;Object.freeze&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newObject = {};

Object.preventExtensions(newObject); // Prevent objects are non-extensible
Object.isExtensible(newObject); // false

var sealedObject = Object.seal({}); // Sealed objects are non-extensible
Object.isExtensible(sealedObject); // false

var frozenObject = Object.freeze({}); // Frozen objects are non-extensible
Object.isExtensible(frozenObject); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiple properties on an object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.defineProperties()&lt;/code&gt; method is used to define new or modify existing properties directly on an object and returning the object. Let&#39;s define multiple properties on an empty object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperties(newObject, {
  newProperty1: {
    value: &#39;John&#39;,
    writable: true
  },
  newProperty2: {}
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is MEAN in javascript&lt;/h3&gt; &lt;p&gt;The MEAN (MongoDB, Express, AngularJS, and Node.js) stack is the most popular open-source JavaScript software tech stack available for building dynamic web apps where you can write both the server-side and client-side halves of the web project entirely in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What Is Obfuscation in javascript&lt;/h3&gt; &lt;p&gt;Obfuscation is the deliberate act of creating obfuscated javascript code(i.e, source or machine code) that is difficult for humans to understand. It is something similar to encryption, but a machine can understand the code and execute it. Let&#39;s see the below function before Obfuscation,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greeting() {
   console.log(&#39;Hello, welcome to JS world&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after the code Obfuscation, it would be appeared as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;eval(function(p,a,c,k,e,d){e=function(c){return c};if(!&#39;&#39;.replace(/^/,String)){while(c--){d[c]=k[c]||c}k=[function(e){return d[e]}];e=function(){return&#39;\\w+&#39;};c=1};while(c--){if(k[c]){p=p.replace(new RegExp(&#39;\\b&#39;+e(c)+&#39;\\b&#39;,&#39;g&#39;),k[c])}}return p}(&#39;2 1(){0.3(\&#39;4, 7 6 5 8\&#39;)}&#39;,9,9,&#39;console|greeting|function|log|Hello|JS|to|welcome|world&#39;.split(&#39;|&#39;),0,{}))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need Obfuscation&lt;/h3&gt; &lt;p&gt;Below are the few reasons for Obfuscation,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The Code size will be reduced. So data transfers between server and client will be fast.&lt;/li&gt; 
   &lt;li&gt;It hides the business logic from outside world and protects the code from others&lt;/li&gt; 
   &lt;li&gt;Reverse engineering is highly difficult&lt;/li&gt; 
   &lt;li&gt;The download time will be reduced&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Minification&lt;/h3&gt; &lt;p&gt;Minification is the process of removing all unnecessary characters(empty spaces are removed) and variables will be renamed without changing it&#39;s functionality. It is also a type of obfuscation .&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of minification&lt;/h3&gt; &lt;p&gt;Normally it is recommended to use minification for heavy traffic and intensive requirements of resources. It reduces file sizes with below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Decreases loading times of a web page&lt;/li&gt; 
   &lt;li&gt;Saves bandwidth usages&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Obfuscation and Encryption&lt;/h3&gt; &lt;p&gt;Below are the main differences between Obfuscation and Encryption,&lt;/p&gt; &lt;p&gt;| Feature | Obfuscation | Encryption | |---- | --------- | ---- | Definition | Changing the form of any data in any other form | Changing the form of information to an unreadable format by using a key | | A key to decode | It can be decoded without any key | It is required | | Target data format | It will be converted to a complex form | Converted into an unreadable format |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common tools used for minification&lt;/h3&gt; &lt;p&gt;There are many online/offline tools to minify the javascript files,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Google&#39;s Closure Compiler&lt;/li&gt; 
   &lt;li&gt;UglifyJS2&lt;/li&gt; 
   &lt;li&gt;jsmin&lt;/li&gt; 
   &lt;li&gt;javascript-minifier.com/&lt;/li&gt; 
   &lt;li&gt;prettydiff.com&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation using javascript&lt;/h3&gt; &lt;p&gt;JavaScript can be used to perform HTML form validation. For example, if the form field is empty, the function needs to notify, and return false, to prevent the form being submitted. Lets&#39; perform user login in an html form,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form name=&quot;myForm&quot; onsubmit=&quot;return validateForm()&quot; method=&quot;post&quot;&amp;gt;
User name: &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot;&amp;gt;
&amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And the validation on user login is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateForm() {
  var x = document.forms[&quot;myForm&quot;][&quot;uname&quot;].value;
  if (x == &quot;&quot;) {
    alert(&quot;The username shouldn&#39;t be empty&quot;);
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation without javascript&lt;/h3&gt; &lt;p&gt;You can perform HTML form validation automatically without using javascript. The validation enabled by applying the &lt;code&gt;required&lt;/code&gt; attribute to prevent form submission when the input is empty.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form method=&quot;post&quot;&amp;gt;
  &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot; required&amp;gt;
  &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Automatic form validation does not work in Internet Explorer 9 or earlier.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the DOM methods available for constraint validation&lt;/h3&gt; &lt;p&gt;The below DOM methods are available for constraint validation on an invalid input,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;checkValidity(): It returns true if an input element contains valid data.&lt;/li&gt; 
   &lt;li&gt;setCustomValidity(): It is used to set the validationMessage property of an input element. Let&#39;s take an user login form with DOM validations&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
  var userName = document.getElementById(&quot;uname&quot;);
  if (!userName.checkValidity()) {
    document.getElementById(&quot;message&quot;).innerHTML = userName.validationMessage;
  } else {
    document.getElementById(&quot;message&quot;).innerHTML = &quot;Entered a valid username&quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the available constraint validation DOM properties&lt;/h3&gt; &lt;p&gt;Below are the list of some of the constraint validation DOM properties available,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;validity: It provides a list of boolean properties related to the validity of an input element.&lt;/li&gt; 
   &lt;li&gt;validationMessage: It displays the message when the validity is false.&lt;/li&gt; 
   &lt;li&gt;willValidate: It indicates if an input element will be validated or not.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of validity properties&lt;/h3&gt; &lt;p&gt;The validity property of an input element provides a set of properties related to the validity of data.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;customError: It returns true, if a custom validity message is set.&lt;/li&gt; 
   &lt;li&gt;patternMismatch: It returns true, if an element&#39;s value does not match its pattern attribute.&lt;/li&gt; 
   &lt;li&gt;rangeOverflow: It returns true, if an element&#39;s value is greater than its max attribute.&lt;/li&gt; 
   &lt;li&gt;rangeUnderflow: It returns true, if an element&#39;s value is less than its min attribute.&lt;/li&gt; 
   &lt;li&gt;stepMismatch: It returns true, if an element&#39;s value is invalid according to step attribute.&lt;/li&gt; 
   &lt;li&gt;tooLong: It returns true, if an element&#39;s value exceeds its maxLength attribute.&lt;/li&gt; 
   &lt;li&gt;typeMismatch: It returns true, if an element&#39;s value is invalid according to type attribute.&lt;/li&gt; 
   &lt;li&gt;valueMissing: It returns true, if an element with a required attribute has no value.&lt;/li&gt; 
   &lt;li&gt;valid: It returns true, if an element&#39;s value is valid.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example usage of rangeOverflow property&lt;/h3&gt; &lt;p&gt;If an element&#39;s value is greater than its max attribute then rangeOverflow property returns true. For example, the below form submission throws an error if the value is more than 100,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;age&quot; type=&quot;number&quot; max=&quot;100&quot;&amp;gt;
&amp;lt;button onclick=&quot;myOverflowFunction()&quot;&amp;gt;OK&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myOverflowFunction() {
  if (document.getElementById(&quot;age&quot;).validity.rangeOverflow) {
    alert(&quot;The mentioned age is not allowed&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is enums feature available in javascript&lt;/h3&gt; &lt;p&gt;No, javascript does not natively support enums. But there are different kinds of solutions to simulate them even though they may not provide exact equivalents. For example, you can use freeze or seal on object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var DaysEnum = Object.freeze({&quot;monday&quot;:1, &quot;tuesday&quot;:2, &quot;wednesday&quot;:3, ...})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an enum&lt;/h3&gt; &lt;p&gt;An enum is a type restricting variables to one value from a predefined set of constants. JavaScript has no enums but typescript provides built-in enum support.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;enum Color {
 RED, GREEN, BLUE
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you list all properties of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; method which returns an array of all properties found directly in a given object. Let&#39;s the usage of it in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {
  a: 1,
  b: 2,
  c: 3
};

console.log(Object.getOwnPropertyNames(newObject));  [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get property descriptors of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyDescriptors()&lt;/code&gt; method which returns all own property descriptors of a given object. The example usage of this method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const newObject = {
   a: 1,
   b: 2,
   c: 3
 };
const descriptorsObject = Object.getOwnPropertyDescriptors(newObject);
console.log(descriptorsObject.a.writable); //true
console.log(descriptorsObject.a.configurable); //true
console.log(descriptorsObject.a.enumerable); //true
console.log(descriptorsObject.a.value); // 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the attributes provided by a property descriptor&lt;/h3&gt; &lt;p&gt;A property descriptor is a record which has the following attributes&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;value: The value associated with the property&lt;/li&gt; 
   &lt;li&gt;writable: Determines whether the value associated with the property can be changed or not&lt;/li&gt; 
   &lt;li&gt;configurable: Returns true if the type of this property descriptor can be changed and if the property can be deleted from the corresponding object.&lt;/li&gt; 
   &lt;li&gt;enumerable: Determines whether the property appears during enumeration of the properties on the corresponding object or not.&lt;/li&gt; 
   &lt;li&gt;set: A function which serves as a setter for the property&lt;/li&gt; 
   &lt;li&gt;get: A function which serves as a getter for the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you extend classes&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;extends&lt;/code&gt; keyword is used in class declarations/expressions to create a class which is a child of another class. It can be used to subclass custom classes as well as built-in objects. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ChildClass extends ParentClass { ... }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of Square subclass from Polygon parent class,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Square extends Rectangle {
   constructor(length) {
     super(length, length);
     this.name = &#39;Square&#39;;
   }

   get area() {
     return this.width * this.height;
   }

   set area(value) {
     this.area = value;
   }
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do I modify the url without reloading the page&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.location.url&lt;/code&gt; property will be helpful to modify the url but it reloads the page. HTML5 introduced the &lt;code&gt;history.pushState()&lt;/code&gt; and &lt;code&gt;history.replaceState()&lt;/code&gt; methods, which allow you to add and modify history entries, respectively. For example, you can use pushState as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.history.pushState(&#39;page2&#39;, &#39;Title&#39;, &#39;/page2.html&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an array includes a particular value or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Array#includes()&lt;/code&gt; method is used to determine whether an array includes a particular value among its entries by returning either true or false. Let&#39;s see an example to find an element(numeric and string) within an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var numericArray = [1, 2, 3, 4];
console.log(numericArray.includes(3)); // true

var stringArray = [&#39;green&#39;, &#39;yellow&#39;, &#39;blue&#39;];
console.log(stringArray.includes(&#39;blue&#39;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare scalar arrays&lt;/h3&gt; &lt;p&gt;You can use length and every method of arrays to compare two scalar(compared directly using ===) arrays. The combination of these expressions can give the expected result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [1,2,3,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.every((value, index) =&amp;gt; value === arraySecond[index])); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you would like to compare arrays irrespective of order then you should sort them before,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [2,3,1,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.sort().every((value, index) =&amp;gt; value === arraySecond[index])); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to get the value from get parameters&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;new URL()&lt;/code&gt; object accepts the url string and &lt;code&gt;searchParams&lt;/code&gt; property of this object can be used to access the get parameters. Remember that you may need to use polyfill or &lt;code&gt;window.location&lt;/code&gt; to access the URL in older browsers(including IE).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let urlString = &quot;http://www.some-domain.com/about.html?x=1&amp;amp;y=2&amp;amp;z=3&quot;; //window.location.href
let url = new URL(urlString);
let parameterZ = url.searchParams.get(&quot;z&quot;);
console.log(parameterZ); // 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print numbers with commas as thousand separators&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; method which returns a string with a language-sensitive representation such as thousand separator,currency etc of this number.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function convertToThousandFormat(x){
  return x.toLocaleString(); // 12,345.679
}

console.log(convertToThousandFormat(12345.6789));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between java and javascript&lt;/h3&gt; &lt;p&gt;Both are totally unrelated programming languages and no relation between them. Java is statically typed, compiled, runs on its own VM. Whereas Javascript is dynamically typed, interpreted, and runs in a browser and nodejs environments. Let&#39;s see the major differences in a tabular format, | Feature | Java | JavaScript | |---- | ---- | ----- | Typed | It&#39;s a strongly typed language | It&#39;s a dynamic typed language | | Paradigm | Object oriented programming | Prototype based programming | | Scoping | Block scoped | Function-scoped | | Concurrency | Thread based | event based | | Memory | Uses more memory | Uses less memory. Hence it will be used for web pages |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is javascript supports namespace&lt;/h3&gt; &lt;p&gt;JavaScript doesn’t support namespace by default. So if you create any element(function, method, object, variable) then it becomes global and pollutes the global namespace. Let&#39;s take an example of defining two functions without any namespace,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func1() {
    console.log(&quot;This is a first definition&quot;);

}
function func1() {
    console.log(&quot;This is a second definition&quot;);
}
func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It always calls the second function definition. In this case, namespace will solve the name collision problem.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare namespace&lt;/h3&gt; &lt;p&gt;Even though JavaScript lacks namespaces, we can use Objects , IIFE to create namespaces.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object Literal Notation:&lt;/strong&gt; Let&#39;s wrap variables and functions inside an Object literal which acts as a namespace. After that you can access them using object notation&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var namespaceOne = {
   function func1() {
       console.log(&quot;This is a first definition&quot;);
   }
}
var namespaceTwo = {
     function func1() {
         console.log(&quot;This is a second definition&quot;);
     }
 }
namespaceOne.func1(); // This is a first definition
namespaceTwo.func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using IIFE (Immediately invoked function expression):&lt;/strong&gt; The outer pair of parentheses of IIFE creates a local scope for all the code inside of it and makes the anonymous function a function expression. Due to that, you can create the same function in two different function expressions to act as a namespace.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function() {
 function fun1(){
   console.log(&quot;This is a first definition&quot;);
   } fun1();
}());

(function() {
    function fun1(){
       console.log(&quot;This is a second definition&quot;);
   } fun1();
 }());
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using a block and a let/const declaration:&lt;/strong&gt; In ECMAScript 6, you can simply use a block and a let declaration to restrict the scope of a variable to a block.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; {
  let myFunction= function fun1(){
  console.log(&quot;This is a first definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.

 {
  let myFunction= function fun1(){
  console.log(&quot;This is a second definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you invoke javascript code in an iframe from parent page&lt;/h3&gt; &lt;p&gt;Initially iFrame needs to be accessed using either &lt;code&gt;document.getElementBy&lt;/code&gt; or &lt;code&gt;window.frames&lt;/code&gt;. After that &lt;code&gt;contentWindow&lt;/code&gt; property of iFrame gives the access for targetFunction&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&#39;targetFrame&#39;).contentWindow.targetFunction();
window.frames[0].frameElement.contentWindow.targetFunction(); // Accessing iframe this way may not work in latest versions chrome and firefox

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get the timezone offset from date&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;getTimezoneOffset&lt;/code&gt; method of the date object. This method returns the time zone difference, in minutes, from current locale (host system settings) to UTC&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var offset = new Date().getTimezoneOffset();
console.log(offset); // -480
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you load CSS and JS files dynamically&lt;/h3&gt; &lt;p&gt;You can create both link and script elements in the DOM and append them as child to head tag. Let&#39;s create a function to add script and style resources as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function loadAssets(filename, filetype) {
  if (filetype == &quot;css&quot;) { // External CSS file
       var fileReference = document.createElement(&quot;link&quot;)
       fileReference.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/css&quot;);
       fileReference.setAttribute(&quot;href&quot;, filename);
  } else if (filetype == &quot;js&quot;) { // External JavaScript file
       var fileReference = document.createElement(&#39;script&#39;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);
       fileReference.setAttribute(&quot;src&quot;, filename);
  }
  if (typeof fileReference != &quot;undefined&quot;)
       document.getElementsByTagName(&quot;head&quot;)[0].appendChild(fileReference)
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different methods to find HTML elements in DOM&lt;/h3&gt; &lt;p&gt;If you want to access any element in an HTML page, you need to start with accessing the document object. Later you can use any of the below methods to find the HTML element,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;document.getElementById(id): It finds an element by Id&lt;/li&gt; 
   &lt;li&gt;document.getElementsByTagName(name): It finds an element by tag name&lt;/li&gt; 
   &lt;li&gt;document.getElementsByClassName(name): It finds an element by class name&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is jQuery&lt;/h3&gt; &lt;p&gt;jQuery is a popular cross-browser JavaScript library that provides Document Object Model (DOM) traversal, event handling, animations and AJAX interactions by minimizing the discrepancies across browsers. It is widely famous with its philosophy of “Write less, do more”. For example, you can display welcome message on the page load using jQuery as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){ // It selects the document and apply the function on page load
    alert(&#39;Welcome to jQuery world&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can download it from jquery&#39;s official site or install it from CDNs, like google.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is V8 JavaScript engine&lt;/h3&gt; &lt;p&gt;V8 is an open source high-performance JavaScript engine used by the Google Chrome browser, written in C++. It is also being used in the node.js project. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors. &lt;strong&gt;Note:&lt;/strong&gt; It can run standalone, or can be embedded into any C++ application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we call javascript as dynamic language&lt;/h3&gt; &lt;p&gt;JavaScript is a loosely typed or a dynamic language because variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned/reassigned with values of all types.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let age = 50;    // age is a number now
age  = &#39;old&#39;; // age is a string now
age  = true;  // age is a boolean
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a void operator&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;void&lt;/code&gt; operator evaluates the given expression and then returns undefined(i.e, without returning value). The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;void (expression)
void expression
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s display a message without any redirection or reload&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;javascript:void(alert(&#39;Welcome to JS world&#39;))&quot;&amp;gt;Click here to see a message&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This operator is often used to obtain the undefined primitive value, using &quot;void(0)&quot;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to set the cursor to wait&lt;/h3&gt; &lt;p&gt;The cursor can be set to wait in JavaScript by using the property &quot;cursor&quot;. Let&#39;s perform this behavior on page load using the below function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
window.document.body.style.cursor = &quot;wait&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and this function invoked on page load&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body onload=&quot;myFunction()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an infinite loop&lt;/h3&gt; &lt;p&gt;You can create infinite loops using for and while loops without using any expressions. The for loop construct or syntax is better approach in terms of ESLint and code optimizer tools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (;;) {}
while(true) {
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need to avoid with statement&lt;/h3&gt; &lt;p&gt;JavaScript&#39;s with statement was intended to provide a shorthand for writing recurring accesses to objects. So it can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. Let&#39;s take an example where it is used to avoid redundancy when accessing an object several times.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;a.b.c.greeting   = &#39;welcome&#39;;
a.b.c.age = 32;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;code&gt;with&lt;/code&gt; it turns this into:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;with(a.b.c) {
        greeting   = &quot;welcome&quot;;
        age = 32;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But this &lt;code&gt;with&lt;/code&gt; statement creates performance problems since one cannot predict whether an argument will refer to a real variable or to a property inside the with argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below for loops&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var i = 0; i &amp;lt; 4; i++) { // global scope
  setTimeout(() =&amp;gt; console.log(i));
}

for (let i = 0; i &amp;lt; 4; i++) { // block scope
  setTimeout(() =&amp;gt; console.log(i));
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above for loops is 4 4 4 4 and 0 1 2 3 &lt;strong&gt;Explanation:&lt;/strong&gt; Due to the event queue/loop of javascript, the &lt;code&gt;setTimeout&lt;/code&gt; callback function is called after the loop has been executed. Since the variable i is declared with the &lt;code&gt;var&lt;/code&gt; keyword it became a global variable and the value was equal to 4 using iteration when the time setTimeout function is invoked. Hence, the output of the first loop is &lt;code&gt;4 4 4 4&lt;/code&gt;. Whereas in the second loop, the variable i is declared as the &lt;code&gt;let&lt;/code&gt; keyword it becomes a block scoped variable and it holds a new value(0, 1 ,2 3) for each iteration. Hence, the output of the first loop is &lt;code&gt;0 1 2 3&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down some of the features of ES6&lt;/h3&gt; &lt;p&gt;Below are the list of some new features of ES6,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Support for constants or immutable variables&lt;/li&gt; 
   &lt;li&gt;Block-scope support for variables, constants and functions&lt;/li&gt; 
   &lt;li&gt;Arrow functions&lt;/li&gt; 
   &lt;li&gt;Default parameters&lt;/li&gt; 
   &lt;li&gt;Rest and Spread Parameters&lt;/li&gt; 
   &lt;li&gt;Template Literals&lt;/li&gt; 
   &lt;li&gt;Multi-line Strings&lt;/li&gt; 
   &lt;li&gt;Destructuring Assignment&lt;/li&gt; 
   &lt;li&gt;Enhanced Object Literals&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Classes&lt;/li&gt; 
   &lt;li&gt;Modules&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ES6&lt;/h3&gt; &lt;p&gt;ES6 is the sixth edition of the javascript language and it was released in June 2015. It was initially known as ECMAScript 6 (ES6) and later renamed to ECMAScript 2015. Almost all the modern browsers support ES6 but for the old browsers there are many transpilers, like Babel.js etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I redeclare let and const variables&lt;/h3&gt; &lt;p&gt;No, you cannot redeclare let and const variables. If you do, it throws below error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Uncaught SyntaxError: Identifier &#39;someVariable&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; The variable declaration with &lt;code&gt;var&lt;/code&gt; keyword refers to a function scope and the variable is treated as if it were declared at the top of the enclosing scope due to hoisting feature. So all the multiple declarations contributing to the same hoisted variable without any error. Let&#39;s take an example of re-declaring variables in the same scope for both var and let/const variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &#39;John&#39;;
function myFunc() {
    var name = &#39;Nick&#39;;
    var name = &#39;Abraham&#39;; // Re-assigned in the same function block
    alert(name); // Abraham
}
myFunc();
alert(name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The block-scoped multi-declaration throws syntax error,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &#39;John&#39;;
function myFunc() {
    let name = &#39;Nick&#39;;
    let name = &#39;Abraham&#39;; // Uncaught SyntaxError: Identifier &#39;name&#39; has already been declared
    alert(name);
}

myFunc();
alert(name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is const variable makes the value immutable&lt;/h3&gt; &lt;p&gt;No, the const variable doesn&#39;t make the value immutable. But it disallows subsequent assignments(i.e, You can declare with assignment but can&#39;t assign another value later)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const userList = [];
userList.push(&#39;John&#39;); // Can mutate even though it can&#39;t re-assign
console.log(userList); // [&#39;John&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default parameters&lt;/h3&gt; &lt;p&gt;In E5, we need to depend on logical OR operators to handle default values of function parameters. Whereas in ES6, Default function parameters feature allows parameters to be initialized with default values if no value or undefined is passed. Let&#39;s compare the behavior with an examples,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES5
var calculateArea = function(height, width) {
   height =  height || 50;
   width = width || 60;

   return width * height;
}
console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The default parameters makes the initialization more simpler,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var calculateArea = function(height = 50, width = 60) {
   return width * height;
}

console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are template literals&lt;/h3&gt; &lt;p&gt;Template literals or template strings are string literals allowing embedded expressions. These are enclosed by the back-tick (`) character instead of double or single quotes. In E6, this feature enables using dynamic expressions as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = `Welcome to JS World, Mr. ${firstName} ${lastName}.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In ES5, you need break string like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;Welcome to JS World, Mr. &#39; + firstName + &#39; &#39; + lastName.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can use multi-line strings and string interpolation features with template literals.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you write multi-line strings in template literals&lt;/h3&gt; &lt;p&gt;In ES5, you would have to use newline escape characters(&#39;\n&#39;) and concatenation symbols(+) in order to get multi-line strings.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;This is string sentence 1\n&#39; +
&#39;This is string sentence 2&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in ES6, You don&#39;t need to mention any newline sequence character,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(`This is string sentence
&#39;This is string sentence 2`);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are nesting templates&lt;/h3&gt; &lt;p&gt;The nesting template is a feature supported within template literals syntax to allow inner backticks inside a placeholder ${ } within the template. For example, the below nesting template is used to display the icons based on user permissions whereas outer template checks for platform type,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
 `icon-${user.isAuthorized ? &#39;submit&#39; : &#39;disabled&#39;}` }`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the above use case without nesting template features as well. However, the nesting template feature is more compact and readable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Without nesting templates
 const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
  (user.isAuthorized ? &#39;icon-submit&#39; : &#39;icon-disabled&#39;}`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tagged templates&lt;/h3&gt; &lt;p&gt;Tagged templates are the advanced form of templates in which tags allow you to parse template literals with a function. The tag function accepts the first parameter as an array of strings and remaining parameters as expressions. This function can also return manipulated strings based on parameters. Let&#39;s see the usage of this tagged template behavior of an IT professional skill set in an organization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user1 = &#39;John&#39;;
var skill1 = &#39;JavaScript&#39;;
var experience1 = 15;

var user2 = &#39;Kane&#39;;
var skill2 = &#39;JavaScript&#39;;
var experience2 = 5;

function myInfoTag(strings, userExp, experienceExp, skillExp) {
  var str0 = strings[0]; // &quot;Mr/Ms. &quot;
  var str1 = strings[1]; // &quot; is a/an &quot;
  var str2 = strings[2]; // &quot;in&quot;

  var expertiseStr;
  if (experienceExp &amp;gt; 10){
    expertiseStr = &#39;expert developer&#39;;
  } else if(skillExp &amp;gt; 5 &amp;amp;&amp;amp; skillExp &amp;lt;= 10) {
    expertiseStr = &#39;senior developer&#39;;
  } else {
    expertiseStr = &#39;junior developer&#39;;
  }

  return ${str0}${userExp}${str1}${expertiseStr}${str2}${skillExp};
}

var output1 = myInfoTag`Mr/Ms. ${ user1 } is a/an ${ experience1 } in ${skill1}`;
var output2 = myInfoTag`Mr/Ms. ${ user2 } is a/an ${ experience2 } in ${skill2}`;

console.log(output1);// Mr/Ms. John is a/an expert developer in JavaScript
console.log(output2);// Mr/Ms. Kane is a/an junior developer in JavaScript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are raw strings&lt;/h3&gt; &lt;p&gt;ES6 provides a raw strings feature using the &lt;code&gt;String.raw()&lt;/code&gt; method which is used to get the raw string form of template strings. This feature allows you to access the raw strings as they were entered, without processing escape sequences. For example, the usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = String.raw `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString); // The sum of numbers is 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use raw strings, the newline character sequence will be processed by displaying the output in multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString);
// The sum of numbers is
// 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Also, the raw property is available on the first argument to the tag function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tag(strings) {
   console.log(strings.raw[0]);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring assignment&lt;/h3&gt; &lt;p&gt;The destructuring assignment is a JavaScript expression that makes it possible to unpack values from arrays or properties from objects into distinct variables. Let&#39;s get the month values from an array using destructuring assignment&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var [one, two, three] = [&#39;JAN&#39;, &#39;FEB&#39;, &#39;MARCH&#39;];

console.log(one); // &quot;JAN&quot;
console.log(two); // &quot;FEB&quot;
console.log(three); // &quot;MARCH&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and you can get user properties of an object using destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {name, age} = {name: &#39;John&#39;, age: 32};

console.log(name); // John
console.log(age); // 32
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default values in destructuring assignment&lt;/h3&gt; &lt;p&gt;A variable can be assigned a default value when the value unpacked from the array or object is undefined during destructuring assignment. It helps to avoid setting default values separately for each assignment. Let&#39;s take an example for both arrays and object use cases,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Arrays destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x, y, z;

[x=2, y=4, z=6] = [10];
console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Objects destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {x=2, y=4, z=6} = {x: 10};

console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you swap variables in destructuring assignment&lt;/h3&gt; &lt;p&gt;If you don&#39;t use destructuring assignment, swapping two values requires a temporary variable. Whereas using a destructuring feature, two variable values can be swapped in one destructuring expression. Let&#39;s swap two number variables in array destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 10, y = 20;

[x, y] = [y, x];
console.log(x); // 20
console.log(y); // 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are enhanced object literals&lt;/h3&gt; &lt;p&gt;Object literals make it easy to quickly create objects with properties inside the curly braces. For example, it provides shorter syntax for common object property definition as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var x = 10, y = 20
obj = { x, y }
console.log(obj); // {x: 10, y:20}
//ES5
var x = 10, y = 20
obj = { x : x, y : y}
console.log(obj); // {x: 10, y:20}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are dynamic imports&lt;/h3&gt; &lt;p&gt;The dynamic imports using &lt;code&gt;import()&lt;/code&gt; function syntax allows us to load modules on demand by using promises or the async/await syntax. Currently this feature is in &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;stage4 proposal&lt;/a&gt;. The main advantage of dynamic imports is reduction of our bundle&#39;s sizes, the size/payload response of our requests and overall improvements in the user experience. The syntax of dynamic imports would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&#39;./Module&#39;).then(Module =&amp;gt; Module.method());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the use cases for dynamic imports&lt;/h3&gt; &lt;p&gt;Below are some of the use cases of using dynamic imports over static imports,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module on-demand or conditionally. For example, if you want to load a polyfill on legacy browser&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (isLegacyBrowser()) {
    import(···)
    .then(···);
}
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Compute the module specifier at runtime. For example, you can use it for internationalization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(`messages_${getLocale()}.js`).then(···);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module from within a regular script instead a module.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are typed arrays&lt;/h3&gt; &lt;p&gt;Typed arrays are array-like objects from ECMAScript 6 API for handling binary data. JavaScript provides 8 Typed array types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Int8Array: An array of 8-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int16Array: An array of 16-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int32Array: An array of 32-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Uint8Array: An array of 8-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint16Array: An array of 16-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint32Array: An array of 32-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Float32Array: An array of 32-bit floating point numbers&lt;/li&gt; 
   &lt;li&gt;Float64Array: An array of 64-bit floating point numbers&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you can create an array of 8-bit signed integers as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const a = new Int8Array();
// You can pre-allocate n bytes
const bytes = 1024
const a = new Int8Array(bytes)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of module loaders&lt;/h3&gt; &lt;p&gt;The module loaders provides the below features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Dynamic loading&lt;/li&gt; 
   &lt;li&gt;State isolation&lt;/li&gt; 
   &lt;li&gt;Global namespace isolation&lt;/li&gt; 
   &lt;li&gt;Compilation hooks&lt;/li&gt; 
   &lt;li&gt;Nested virtualization&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is collation&lt;/h3&gt; &lt;p&gt;Collation is used for sorting a set of strings and searching within a set of strings. It is parameterized by locale and aware of Unicode. Let&#39;s take comparison and sorting features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;ä&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;ä&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;ä&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(l10nDE.compare(&quot;ä&quot;, &quot;z&quot;) === -1); // true
console.log(l10nSV.compare(&quot;ä&quot;, &quot;z&quot;) === +1); // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Sorting:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;ä&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;ä&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;ä&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(list.sort(l10nDE.compare)) // [ &quot;a&quot;, &quot;ä&quot;, &quot;z&quot; ]
console.log(list.sort(l10nSV.compare)) // [ &quot;a&quot;, &quot;z&quot;, &quot;ä&quot; ]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is for...of statement&lt;/h3&gt; &lt;p&gt;The for...of statement creates a loop iterating over iterable objects or elements such as built-in String, Array, Array-like objects (like arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. The basic usage of for...of statement on arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIterable = [10, 20, 30, 40, 50];

for (let value of arrayIterable) {
  value ++;
  console.log(value); // 11 21 31 41 51
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below spread operator array&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;[...&#39;John Resig&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the array is [&#39;J&#39;, &#39;o&#39;, &#39;h&#39;, &#39;n&#39;, &#39;&#39;, &#39;R&#39;, &#39;e&#39;, &#39;s&#39;, &#39;i&#39;, &#39;g&#39;] &lt;strong&gt;Explanation:&lt;/strong&gt; The string is an iterable type and the spread operator within an array maps every character of an iterable to one element. Hence, each character of a string becomes an element within an Array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is PostMessage secure&lt;/h3&gt; &lt;p&gt;Yes, postMessages can be considered very secure as long as the programmer/developer is careful about checking the origin and source of an arriving message. But if you try to send/receive a message without verifying its source will create cross-site scripting attacks.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with postmessage target origin as wildcard&lt;/h3&gt; &lt;p&gt;The second argument of postMessage method specifies which origin is allowed to receive the message. If you use the wildcard “*” as an argument then any origin is allowed to receive the message. In this case, there is no way for the sender window to know if the target window is at the target origin when sending the message. If the target window has been navigated to another origin, the other origin would receive the data. Hence, this may lead to XSS vulnerabilities.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;targetWindow.postMessage(message, &#39;*&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you avoid receiving postMessages from attackers&lt;/h3&gt; &lt;p&gt;Since the listener listens for any message, an attacker can trick the application by sending a message from the attacker’s origin, which gives an impression that the receiver received the message from the actual sender’s window. You can avoid this issue by validating the origin of the message on the receiver&#39;s end using the “message.origin” attribute. For examples, let&#39;s check the sender&#39;s origin &lt;a href=&quot;http://www.some-sender.com&quot;&gt;http://www.some-sender.com&lt;/a&gt; on receiver side &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/www.some-receiver.com&quot;&gt;www.some-receiver.com&lt;/a&gt;,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Listener on http://www.some-receiver.com/
window.addEventListener(&quot;message&quot;, function(message){
    if(/^http://www\.some-sender\.com$/.test(message.origin)){
         console.log(&#39;You received the data from valid sender&#39;, message.data);
   }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I avoid using postMessages completely&lt;/h3&gt; &lt;p&gt;You cannot avoid using postMessages completely(or 100%). Even though your application doesn’t use postMessage considering the risks, a lot of third party scripts use postMessage to communicate with the third party service. So your application might be using postMessage without your knowledge.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is postMessages synchronous&lt;/h3&gt; &lt;p&gt;The postMessages are synchronous in IE8 browser but they are asynchronous in IE9 and all other modern browsers (i.e, IE9+, Firefox, Chrome, Safari).Due to this asynchronous behaviour, we use a callback mechanism when the postMessage is returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What paradigm is Javascript&lt;/h3&gt; &lt;p&gt;JavaScript is a multi-paradigm language, supporting imperative/procedural programming, Object-Oriented Programming and functional programming. JavaScript supports Object-Oriented Programming with prototypical inheritance.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between internal and external javascript&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Internal JavaScript:&lt;/strong&gt; It is the source code within the script tag. &lt;strong&gt;External JavaScript:&lt;/strong&gt; The source code is stored in an external file(stored with .js extension) and referred with in the tag.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript faster than server side script&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is faster than server side script. Because JavaScript is a client-side script it does not require any web server’s help for its computation or calculation. So JavaScript is always faster than any server-side script like ASP, PHP, etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the status of a checkbox&lt;/h3&gt; &lt;p&gt;You can apply the &lt;code&gt;checked&lt;/code&gt; property on the selected checkbox in the DOM. If the value is &lt;code&gt;True&lt;/code&gt; means the checkbox is checked otherwise it is unchecked. For example, the below HTML checkbox element can be access using javascript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;input type=&quot;checkbox&quot; name=&quot;checkboxname&quot; value=&quot;Agree&quot;&amp;gt; Agree the conditions&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(document.getElementById(‘checkboxname’).checked); // true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double tilde operator&lt;/h3&gt; &lt;p&gt;The double tilde operator(~~) is known as double NOT bitwise operator. This operator is going to be a quicker substitute for Math.floor().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert character to ASCII code&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt; method to convert string characters to ASCII numbers. For example, let&#39;s find ASCII code for the first letter of &#39;ABC&#39; string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;ABC&quot;.charCodeAt(0) // returns 65
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas &lt;code&gt;String.fromCharCode()&lt;/code&gt; method converts numbers to equal ASCII characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;String.fromCharCode(65,66,67); // returns &#39;ABC&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ArrayBuffer&lt;/h3&gt; &lt;p&gt;An ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You can create it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let buffer = new ArrayBuffer(16); // create a buffer of length 16
alert(buffer.byteLength); // 16
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To manipulate an ArrayBuffer, we need to use a “view” object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Create a DataView referring to the buffer
 let view = new DataView(buffer);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below string expression&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;Welcome to JS world&quot;[0])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above expression is &quot;W&quot;. &lt;strong&gt;Explanation:&lt;/strong&gt; The bracket notation with specific index on a string returns the character at a specific location. Hence, it returns the character &quot;W&quot; of the string. Since this is not supported in IE7 and below versions, you may need to use the .charAt() method to get the desired result.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of Error object&lt;/h3&gt; &lt;p&gt;The Error constructor creates an error object and the instances of error objects are thrown when runtime errors occur. The Error object can also be used as a base object for user-defined exceptions. The syntax of error object would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Error([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw user defined exceptions or errors using Error object in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  if(withdraw &amp;gt; balance)
  throw new Error(&quot;Oops! You don&#39;t have enough balance&quot;);
} catch (e) {
  console.log(e.name + &#39;: &#39; + e.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of EvalError object&lt;/h3&gt; &lt;p&gt;The EvalError object indicates an error regarding the global &lt;code&gt;eval()&lt;/code&gt; function. Even though this exception is not thrown by JavaScript anymore, the EvalError object remains for compatibility. The syntax of this expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new EvalError([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw EvalError with in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  throw new EvalError(&#39;Eval function error&#39;, &#39;someFile.js&#39;, 100);
} catch (e) {
  console.log(e.message, e.name, e.fileName);              // &quot;Eval function error&quot;, &quot;EvalError&quot;, &quot;someFile.js&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/h3&gt; &lt;p&gt;When you apply &#39;use strict&#39;; syntax, some of the below cases will throw a SyntaxError before executing the script&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When you use Octal syntax&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var n = 022;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;code&gt;with&lt;/code&gt; statement&lt;/li&gt; 
   &lt;li&gt;When you use delete operator on a variable name&lt;/li&gt; 
   &lt;li&gt;Using eval or arguments as variable or function argument name&lt;/li&gt; 
   &lt;li&gt;When you use newly reserved keywords&lt;/li&gt; 
   &lt;li&gt;When you declare a function in a block&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (someCondition) { function f() {} }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Hence, the errors from above cases are helpful to avoid errors in development/production environments.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is all objects have prototypes&lt;/h3&gt; &lt;p&gt;No. All objects have prototypes except for the base object which is created by the user, or an object that is created using the new keyword.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between a parameter and an argument&lt;/h3&gt; &lt;p&gt;Parameter is the variable name of a function definition whereas an argument represents the value given to a function when it is invoked. Let&#39;s explain this with a simple function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction(parameter1, parameter2, parameter3) {
  console.log(arguments[0]) // &quot;argument1&quot;
  console.log(arguments[1]) // &quot;argument2&quot;
  console.log(arguments[2]) // &quot;argument3&quot;
}
myFunction(&quot;argument1&quot;, &quot;argument2&quot;, &quot;argument3&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of some method in arrays&lt;/h3&gt; &lt;p&gt;The some() method is used to test whether at least one element in the array passes the test implemented by the provided function. The method returns a boolean value. Let&#39;s take an example to test for any odd elements,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5, 6 ,7, 8, 9, 10];

var odd = element ==&amp;gt; element % 2 !== 0;

console.log(array.some(odd)); // true (the odd element exists)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you combine two or more arrays&lt;/h3&gt; &lt;p&gt;The concat() method is used to join two or more arrays by returning a new array containing all the elements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;array1.concat(array2, array3, ..., arrayX)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of array&#39;s concatenation with veggies and fruits arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  var veggies = [&quot;Tomato&quot;, &quot;Carrot&quot;, &quot;Cabbage&quot;];
  var fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Pears&quot;];
  var veggiesAndFruits = veggies.concat(fruits);
  console.log(veggiesAndFruits); // Tomato, Carrot, Cabbage, Apple, Orange, Pears
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shallow and Deep copy&lt;/h3&gt; &lt;p&gt;There are two ways to copy an object,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Shallow Copy:&lt;/strong&gt; Shallow copy is a bitwise copy of an object. A new object is created that has an exact copy of the values in the original object. If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;to create a duplicate&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsShallowCopy = empDetails    //Shallow copying!
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if we change some property value in the duplicate one like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;empDetailsShallowCopy.name = &quot;Johnson&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above statement will also change the name of &lt;code&gt;empDetails&lt;/code&gt;, since we have a shallow copy. That means we&#39;re losing the original data as well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Deep copy:&lt;/strong&gt; A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a deep copy by using the properties from the original object into new variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsDeepCopy = {
  name: empDetails.name,
  age: empDetails.age,
  expertise: empDetails.expertise
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now if you change &lt;code&gt;empDetailsDeepCopy.name&lt;/code&gt;, it will only affect &lt;code&gt;empDetailsDeepCopy&lt;/code&gt; &amp;amp; not &lt;code&gt;empDetails&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create specific number of copies of a string&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;repeat()&lt;/code&gt; method is used to construct and return a new string which contains the specified number of copies of the string on which it was called, concatenated together. Remember that this method has been added to the ECMAScript 2015 specification. Let&#39;s take an example of Hello string to repeat it 4 times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&#39;Hello&#39;.repeat(4);  // &#39;HelloHelloHelloHello&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you return all matching strings against a regular expression&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;matchAll()&lt;/code&gt; method can be used to return an iterator of all results matching a string against a regular expression. For example, the below example returns an array of matching string results against a regular expression,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let regexp = /Hello(\d?))/g;
let greeting = &#39;Hello1Hello2Hello3&#39;;

let greetingList = [...greeting.matchAll(regexp)];

console.log(greetingList[0]); //Hello1
console.log(greetingList[1]); //Hello2
console.log(greetingList[2]); //Hello3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string at the beginning or ending&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;trim&lt;/code&gt; method of string prototype is used to trim on both sides of a string. But if you want to trim especially at the beginning or ending of the string then you can use &lt;code&gt;trimStart/trimLeft&lt;/code&gt; and &lt;code&gt;trimEnd/trimRight&lt;/code&gt; methods. Let&#39;s see an example of these methods on a greeting message,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;   Hello, Goodmorning!   &#39;;

console.log(greeting); // &quot;   Hello, Goodmorning!   &quot;
console.log(greeting.trimStart()); // &quot;Hello, Goodmorning!   &quot;
console.log(greeting.trimLeft()); // &quot;Hello, Goodmorning!   &quot;

console.log(greeting.trimEnd()); // &quot;   Hello, Goodmorning!&quot;
console.log(greeting.trimRight()); // &quot;   Hello, Goodmorning!&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below console statement with unary operator&lt;/h3&gt; &lt;p&gt;Let&#39;s take console statement with unary operator as given below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+ &#39;Hello&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above console log statement returns NaN. Because the element is prefixed by the unary operator and the JavaScript interpreter will try to convert that element into a number type. Since the conversion fails, the value of the statement results in NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Does javascript uses mixins&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a thunk function&lt;/h3&gt; &lt;p&gt;A thunk is just a function which delays the evaluation of the value. It doesn’t take any arguments but gives the value whenever you invoke the thunk. i.e, It is used not to execute now but it will be sometime in the future. Let&#39;s take a synchronous example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const add = (x,y) =&amp;gt; x + y;

const thunk = () =&amp;gt; add(2,3);

thunk() // 5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are asynchronous thunks&lt;/h3&gt; &lt;p&gt;The asynchronous thunks are useful to make network requests. Let&#39;s see an example of network requests,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function fetchData(fn){
  fetch(&#39;https://jsonplaceholder.typicode.com/todos/1&#39;)
  .then(response =&amp;gt; response.json())
  .then(json =&amp;gt; fn(json))
}

const asyncThunk = function (){
   return fetchData(function getData(data){
      console.log(data)
  })
}

asyncThunk()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function won&#39;t be called immediately but it will be invoked only when the data is available from API endpoint. The setTimeout function is also used to make our code asynchronous. The best real time example is redux state management library which uses the asynchronous thunks to delay the actions to dispatch.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below function calls&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Code snippet:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const circle = {
  radius: 20,
  diameter() {
    return this.radius * 2;
  },
  perimeter: () =&amp;gt; 2 * Math.PI * this.radius
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;console.log(circle.diameter()); console.log(circle.perimeter());&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The output is 40 and NaN. Remember that diameter is a regular function, whereas the value of perimeter is an arrow function. The &lt;code&gt;this&lt;/code&gt; keyword of a regular function(i.e, diameter) refers to the surrounding scope which is a class(i.e, Shape object). Whereas this keyword of perimeter function refers to the surrounding scope which is a window object. Since there is no radius property on window objects it returns an undefined value and the multiple of number value returns NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to remove all line breaks from a string&lt;/h3&gt; &lt;p&gt;The easiest approach is using regular expressions to detect and replace newlines in the string. In this case, we use replace function along with string to replace with, which in our case is an empty string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function remove_linebreaks( var message ) {
    return message.replace( /[\r\n]+/gm, &quot;&quot; );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above expression, g and m are for global and multiline flags.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between reflow and repaint&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;repaint&lt;/em&gt; occurs when changes are made which affect the visibility of an element, but not its layout. Examples of this include outline, visibility, or background color. A &lt;em&gt;reflow&lt;/em&gt; involves changes that affect the layout of a portion of the page (or the whole page). Resizing the browser window, changing the font, content changing (such as user typing text), using JavaScript methods involving computed styles, adding or removing elements from the DOM, and changing an element&#39;s classes are a few of the things that can trigger reflow. Reflow of an element causes the subsequent reflow of all child and ancestor elements as well as any elements following it in the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens with negating an array&lt;/h3&gt; &lt;p&gt;Negating an array with &lt;code&gt;!&lt;/code&gt; character will coerce the array into a boolean. Since Arrays are considered to be truthy So negating it will return &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(![]); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if we add two arrays&lt;/h3&gt; &lt;p&gt;If you add two arrays together, it will convert them both to strings and concatenate them. For example, the result of adding arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([&#39;a&#39;] + [&#39;b&#39;]);  // &quot;ab&quot;
console.log([] + []); // &quot;&quot;
console.log(![] + []); // &quot;false&quot;, because ![] returns false.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of prepend additive operator on falsy values&lt;/h3&gt; &lt;p&gt;If you prepend the additive(+) operator on falsy values(null, undefined, NaN, false, &quot;&quot;), the falsy value converts to a number value zero. Let&#39;s display them on browser console as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+null); // 0
console.log(+undefined);// NaN
console.log(+false); // 0
console.log(+NaN); // NaN
console.log(+&quot;&quot;); // 0
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create self string using special characters&lt;/h3&gt; &lt;p&gt;The self string can be formed with the combination of &lt;code&gt;[]()!+&lt;/code&gt; characters. You need to remember the below conventions to achieve this pattern.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Since Arrays are truthful values, negating the arrays will produce false: ![] === false&lt;/li&gt; 
   &lt;li&gt;As per JavaScript coercion rules, the addition of arrays together will toString them: [] + [] === &quot;&quot;&lt;/li&gt; 
   &lt;li&gt;Prepend an array with + operator will convert an array to false, the negation will make it true and finally converting the result will produce value &#39;1&#39;: +(!(+[])) === 1&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;By applying the above rules, we can derive below conditions&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;![] + [] === &quot;false&quot;
+!+[] === 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the character pattern would be created as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;      s               e               l               f
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^

 (![] + [])[3] + (![] + [])[4] + (![] + [])[2] + (![] + [])[0]
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^
(![] + [])[+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]] +
(![] + [])[+[]]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(![]+[])[+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]]+(![]+[])[+[]]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you remove falsy values from an array&lt;/h3&gt; &lt;p&gt;You can apply the filter method on the array by passing Boolean as a parameter. This way it removes all falsy values(0, undefined, null, false and &quot;&quot;) from the array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myArray = [false, null, 1,5, undefined]
myArray.filter(Boolean); // [1, 5] // is same as myArray.filter(x =&amp;gt; x);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get unique values of an array&lt;/h3&gt; &lt;p&gt;You can get unique values of an array with the combination of &lt;code&gt;Set&lt;/code&gt; and rest expression/spread(...) syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([...new Set([1, 2, 4, 4, 3])]); // [1, 2, 4, 3]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring aliases&lt;/h3&gt; &lt;p&gt;Sometimes you would like to have a destructured variable with a different name than the property name. In that case, you&#39;ll use a &lt;code&gt;: newName&lt;/code&gt; to specify a name for the variable. This process is called destructuring aliases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = { x: 1 };
// Grabs obj.x as as { otherName }
const { x: otherName } = obj;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you map the array values without using map method&lt;/h3&gt; &lt;p&gt;You can map the array values without using the &lt;code&gt;map&lt;/code&gt; method by just using the &lt;code&gt;from&lt;/code&gt; method of Array. Let&#39;s map city names from Countries array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const countries = [
    { name: &#39;India&#39;, capital: &#39;Delhi&#39; },
    { name: &#39;US&#39;, capital: &#39;Washington&#39; },
    { name: &#39;Russia&#39;, capital: &#39;Moscow&#39; },
    { name: &#39;Singapore&#39;, capital: &#39;Singapore&#39; },
    { name: &#39;China&#39;, capital: &#39;Beijing&#39; },
    { name: &#39;France&#39;, capital: &#39;Paris&#39; },
];

const cityNames = Array.from(countries, ({ capital}) =&amp;gt; capital);
console.log(cityNames); // [&#39;Delhi, &#39;Washington&#39;, &#39;Moscow&#39;, &#39;Singapore&#39;, &#39;Beijing&#39;, &#39;Paris&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you empty an array&lt;/h3&gt; &lt;p&gt;You can empty an array quickly by setting the array length to zero.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let cities = [&#39;Singapore&#39;, &#39;Delhi&#39;, &#39;London&#39;];
cities.length = 0; // cities becomes []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you rounding numbers to certain decimals&lt;/h3&gt; &lt;p&gt;You can round numbers to a certain number of decimals using &lt;code&gt;toFixed&lt;/code&gt; method from native javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let pie = 3.141592653;
pie = pie.toFixed(3); // 3.142
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to convert an array to an object&lt;/h3&gt; &lt;p&gt;You can convert an array to an object with the same data using spread(...) operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fruits = [&quot;banana&quot;, &quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;];
var fruitsObject = {...fruits};
console.log(fruitsObject); // {0: &quot;banana&quot;, 1: &quot;apple&quot;, 2: &quot;orange&quot;, 3: &quot;watermelon&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an array with some data&lt;/h3&gt; &lt;p&gt;You can create an array with some data or an array with the same values using &lt;code&gt;fill&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newArray = new Array(5).fill(&quot;0&quot;);
console.log(newArray); // [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the placeholders from console object&lt;/h3&gt; &lt;p&gt;Below are the list of placeholders available from console object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;%o — It takes an object,&lt;/li&gt; 
   &lt;li&gt;%s — It takes a string,&lt;/li&gt; 
   &lt;li&gt;%d — It is used for a decimal or integer These placeholders can be represented in the console.log as below&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.log(&quot;Hello %s, your details %o are available in the object form&quot;, &quot;John&quot;, user); // Hello John, your details {name: &quot;John&quot;, id: 1, city: &quot;Delhi&quot;} are available in object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to add CSS to console messages&lt;/h3&gt; &lt;p&gt;Yes, you can apply CSS styles to console messages similar to html text on the web page.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;%c The text has blue color, with large font and red background&#39;, &#39;color: blue; font-size: x-large; background: red&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The text will be displayed as below, &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-css.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All CSS styles can be applied to console messages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of dir method of console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.dir()&lt;/code&gt; is used to display an interactive list of the properties of the specified JavaScript object as JSON.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.dir(user);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The user object displayed in JSON representation &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-dir.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to debug HTML elements in console&lt;/h3&gt; &lt;p&gt;Yes, it is possible to get and debug HTML elements in the console just like inspecting elements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = document.getElementsByTagName(&quot;body&quot;)[0];
console.log(element);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It prints the HTML element in the console,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-html.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display data in a tabular format using console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.table()&lt;/code&gt; is used to display data in the console in a tabular format to visualize complex arrays or objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const users = [{ &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;}, { &quot;name&quot;:&quot;Max&quot;, &quot;id&quot;: 2, &quot;city&quot;: &quot;London&quot;}, { &quot;name&quot;:&quot;Rod&quot;, &quot;id&quot;: 3, &quot;city&quot;: &quot;Paris&quot;} ];
console.table(users);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The data visualized in a table format,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-table.png&quot; alt=&quot;Screenshot&quot;&gt; &lt;strong&gt;Not:&lt;/strong&gt; Remember that &lt;code&gt;console.table()&lt;/code&gt; is not supported in IE.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you verify that an argument is a Number or not&lt;/h3&gt; &lt;p&gt;The combination of IsNaN and isFinite methods are used to confirm whether an argument is a number or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isNumber(n){
    return !isNaN(parseFloat(n)) &amp;amp;&amp;amp; isFinite(n);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create copy to clipboard button&lt;/h3&gt; &lt;p&gt;You need to select the content(using .select() method) of the input element and execute the copy command with execCommand (i.e, execCommand(&#39;copy&#39;)). You can also execute other system commands like cut and paste.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.querySelector(&quot;#copy-button&quot;).onclick = function() {
  // Select the content
  document.querySelector(&quot;#copy-input&quot;).select();
  // Copy to the clipboard
  document.execCommand(&#39;copy&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the shortcut to get timestamp&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date().getTime()&lt;/code&gt; to get the current timestamp. There is an alternative shortcut to get the value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+new Date());
console.log(Date.now());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you flattening multi dimensional arrays&lt;/h3&gt; &lt;p&gt;Flattening bi-dimensional arrays is trivial with Spread operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const biDimensionalArr = [11, [22, 33], [44, 55], [66, 77], 88, 99];
const flattenArr = [].concat(...biDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can make it work with multi-dimensional arrays by recursive calls,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function flattenMultiArray(arr) {
    const flattened = [].concat(...arr);
    return flattened.some(item =&amp;gt; Array.isArray(item)) ? flattenMultiArray(flattened) : flattened;
 }
const multiDimensionalArr = [11, [22, 33], [44, [55, 66, [77, [88]], 99]]];
const flatArr = flattenMultiArray(multiDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest multi condition checking&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;indexOf&lt;/code&gt; to compare input with multiple values instead of checking each value as one condition.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Verbose approach
if (input === &#39;first&#39; || input === 1 || input === &#39;second&#39; || input === 2) {
  someFunction();
}
// Shortcut
if ([&#39;first&#39;, 1, &#39;second&#39;, 2].indexOf(input) !== -1) {
  someFunction();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you capture browser back button&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.onbeforeunload&lt;/code&gt; method is used to capture browser back button events. This is helpful to warn users about losing the current data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onbeforeunload = function() {
    alert(&quot;You work will be lost&quot;);
 };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you disable right click in the web page&lt;/h3&gt; &lt;p&gt;The right click on the page can be disabled by returning false from the &lt;code&gt;oncontextmenu&lt;/code&gt; attribute on the body element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body oncontextmenu=&quot;return false;&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are wrapper objects&lt;/h3&gt; &lt;p&gt;Primitive Values like string,number and boolean don&#39;t have properties and methods but they are temporarily converted or coerced to an object(Wrapper object) when you try to perform actions on them. For example, if you apply toUpperCase() method on a primitive string value, it does not throw an error but returns uppercase of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &quot;john&quot;;

console.log(name.toUpperCase());  // Behind the scenes treated as console.log(new String(name).toUpperCase());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;i.e, Every primitive except null and undefined have Wrapper Objects and the list of wrapper objects are String,Number,Boolean,Symbol and BigInt.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is AJAX&lt;/h3&gt; &lt;p&gt;AJAX stands for Asynchronous JavaScript and XML and it is a group of related technologies(HTML, CSS, JavaScript, XMLHttpRequest API etc) used to display data asynchronously. i.e. We can send data to the server and get data from the server without reloading the web page.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to deal with Asynchronous Code&lt;/h3&gt; &lt;p&gt;Below are the list of different ways to deal with Asynchronous code.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Callbacks&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Async/await&lt;/li&gt; 
   &lt;li&gt;Third-party libraries such as async.js,bluebird etc&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to cancel a fetch request&lt;/h3&gt; &lt;p&gt;Until a few days back, One shortcoming of native promises is no direct way to cancel a fetch request. But the new &lt;code&gt;AbortController&lt;/code&gt; from js specification allows you to use a signal to abort one or multiple fetch calls. The basic flow of cancelling a fetch request would be as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create an &lt;code&gt;AbortController&lt;/code&gt; instance&lt;/li&gt; 
   &lt;li&gt;Get the signal property of an instance and pass the signal as a fetch option for signal&lt;/li&gt; 
   &lt;li&gt;Call the AbortController&#39;s abort property to cancel all fetches that use that signal For example, let&#39;s pass the same signal to multiple fetch calls will cancel all requests with that signal,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const controller = new AbortController();
const { signal } = controller;

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 1 is complete!`);
}).catch(e =&amp;gt; {
    if(e.name === &quot;AbortError&quot;) {
        // We know it&#39;s been canceled!
    }
});

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 2 is complete!`);
}).catch(e =&amp;gt; {
     if(e.name === &quot;AbortError&quot;) {
         // We know it&#39;s been canceled!
      }
});

// Wait 2 seconds to abort both requests
setTimeout(() =&amp;gt; controller.abort(), 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web speech API&lt;/h3&gt; &lt;p&gt;Web speech API is used to enable modern browsers recognize and synthesize speech(i.e, voice data into web apps). This API has been introduced by W3C Community in the year 2012. It has two main parts,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechRecognition (Asynchronous Speech Recognition or Speech-to-Text):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond accordingly. This is accessed by the &lt;code&gt;SpeechRecognition&lt;/code&gt; interface. The below example shows on how to use this API to get text from speech,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;  // webkitSpeechRecognition for Chrome and SpeechRecognition for FF
const recognition = new window.SpeechRecognition();
recognition.onresult = (event) =&amp;gt; { // SpeechRecognitionEvent type
  const speechToText = event.results[0][0].transcript;
  console.log(speechToText);
}
recognition.start();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this API, browser is going to ask you for permission to use your microphone&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechSynthesis (Text-to-Speech):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond. This is accessed by the &lt;code&gt;SpeechSynthesis&lt;/code&gt; interface. For example, the below code is used to get voice/speech from text,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(&#39;speechSynthesis&#39; in window){
    var speech = new SpeechSynthesisUtterance(&#39;Hello World!&#39;);
    speech.lang = &#39;en-US&#39;;
    window.speechSynthesis.speak(speech);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above examples can be tested on chrome(33+) browser&#39;s developer console. &lt;strong&gt;Note:&lt;/strong&gt; This API is still a working draft and only available in Chrome and Firefox browsers(ofcourse Chrome only implemented the specification) &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is minimum timeout throttling&lt;/h3&gt; &lt;p&gt;Both browser and NodeJS javascript environments throttles with a minimum delay that is greater than 0ms. That means even though setting a delay of 0ms will not happen instantaneously. &lt;strong&gt;Browsers:&lt;/strong&gt; They have a minimum delay of 4ms. This throttle occurs when successive calls are triggered due to callback nesting(certain depth) or after a certain number of successive intervals. Note: The older browsers have a minimum delay of 10ms. &lt;strong&gt;Nodejs:&lt;/strong&gt; They have a minimum delay of 1ms. This throttle happens when the delay is larger than 2147483647 or less than 1. The best example to explain this timeout throttling behavior is the order of below code snippet.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
    console.log(&#39;My script is initialized&#39;);
}
setTimeout(runMeFirst, 0);
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output would be in&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Script loaded
My script is initialized
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use &lt;code&gt;setTimeout&lt;/code&gt;, the order of logs will be sequential.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
   console.log(&#39;My script is initialized&#39;);
}
runMeFirst();
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output is,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;My script is initialized
Script loaded
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you implement zero timeout in modern browsers&lt;/h3&gt; &lt;p&gt;You can&#39;t use setTimeout(fn, 0) to execute the code immediately due to minimum delay of greater than 0ms. But you can use window.postMessage() to achieve this behavior.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tasks in event loop&lt;/h3&gt; &lt;p&gt;A task is any javascript code/program which is scheduled to be run by the standard mechanisms such as initially starting to run a program, run an event callback, or an interval or timeout being fired. All these tasks are scheduled on a task queue. Below are the list of use cases to add tasks to the task queue,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a new javascript program is executed directly from console or running by the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element, the task will be added to the task queue.&lt;/li&gt; 
   &lt;li&gt;When an event fires, the event callback added to task queue&lt;/li&gt; 
   &lt;li&gt;When a setTimeout or setInterval is reached, the corresponding callback added to task queue&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is microtask&lt;/h3&gt; &lt;p&gt;Microtask is the javascript code which needs to be executed immediately after the currently executing task/microtask is completed. They are kind of blocking in nature. i.e, The main thread will be blocked until the microtask queue is empty. The main sources of microtasks are Promise.resolve, Promise.reject, MutationObservers, IntersectionObservers etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these microtasks are processed in the same turn of the event loop. &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are different event loops&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of queueMicrotask&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use javascript libraries in typescript file&lt;/h3&gt; &lt;p&gt;It is known that not all JavaScript libraries or frameworks have TypeScript declaration files. But if you still want to use libraries or frameworks in our TypeScript files without getting compilation errors, the only solution is &lt;code&gt;declare&lt;/code&gt; keyword along with a variable declaration. For example, let&#39;s imagine you have a library called &lt;code&gt;customLibrary&lt;/code&gt; that doesn’t have a TypeScript declaration and have a namespace called &lt;code&gt;customLibrary&lt;/code&gt; in the global namespace. You can use this library in typescript code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;declare var customLibrary;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the runtime, typescript will provide the type to the &lt;code&gt;customLibrary&lt;/code&gt; variable as &lt;code&gt;any&lt;/code&gt; type. The another alternative without using declare keyword is below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var customLibrary: any;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between promises and observables&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; &lt;p&gt;| Promises | Observables | |---- | --------- | Emits only a single value at a time | Emits multiple values over a period of time(stream of values ranging from 0 to multiple) | | Eager in nature; they are going to be called immediately | Lazy in nature; they require subscription to be invoked | | Promise is always asynchronous even though it resolved immediately | Observable can be either synchronous or asynchronous| | Doesn&#39;t provide any operators | Provides operators such as map, forEach, filter, reduce, retry, and retryWhen etc | | Cannot be canceled | Canceled by using unsubscribe() method |&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is heap&lt;/h3&gt; &lt;p&gt;Heap(Or memory heap) is the memory location where objects are stored when we define variables. i.e, This is the place where all the memory allocations and de-allocation take place. Both heap and call-stack are two containers of JS runtime. Whenever runtime comes across variables and function declarations in the code it stores them in the Heap.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/heap.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event table&lt;/h3&gt; &lt;p&gt;Event Table is a data structure that stores and keeps track of all the events which will be executed asynchronously like after some time interval or after the resolution of some API requests. i.e Whenever you call a setTimeout function or invoke async operation, it is added to the Event Table. It doesn&#39;t not execute functions on it’s own. The main purpose of the event table is to keep track of events and send them to the Event Queue as shown in the below diagram.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/event-table.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a microTask queue&lt;/h3&gt; &lt;p&gt;Microtask Queue is the new queue where all the tasks initiated by promise objects get processed before the callback queue. The microtasks queue are processed before the next rendering and painting jobs. But if these microtasks are running for a long time then it leads to visual degradation.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between shim and polyfill&lt;/h3&gt; &lt;p&gt;A shim is a library that brings a new API to an older environment, using only the means of that environment. It isn&#39;t necessarily restricted to a web application. For example, es5-shim.js is used to emulate ES5 features on older browsers (mainly pre IE9). Whereas polyfill is a piece of code (or plugin) that provides the technology that you, the developer, expect the browser to provide natively. In a simple sentence, A polyfill is a shim for a browser API.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect primitive or non primitive value type&lt;/h3&gt; &lt;p&gt;In JavaScript, primitive types include boolean, string, number, BigInt, null, Symbol and undefined. Whereas non-primitive types include the Objects. But you can easily identify them with the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myPrimitive = 30;
var myNonPrimitive = {};
function isPrimitive(val) {
    return Object(val) !== val;
}

isPrimitive(myPrimitive);
isPrimitive(myNonPrimitive);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the value is a primitive data type, the Object constructor creates a new wrapper object for the value. But If the value is a non-primitive data type (an object), the Object constructor will give the same object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is babel&lt;/h3&gt; &lt;p&gt;Babel is a JavaScript transpiler to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Some of the main features are listed below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Transform syntax&lt;/li&gt; 
   &lt;li&gt;Polyfill features that are missing in your target environment (using @babel/polyfill)&lt;/li&gt; 
   &lt;li&gt;Source code transformations (or codemods)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is Node.js completely single threaded&lt;/h3&gt; &lt;p&gt;Node is a single thread, but some of the functions included in the Node.js standard library(e.g, fs module functions) are not single threaded. i.e, Their logic runs outside of the Node.js single thread to improve the speed and performance of a program.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common use cases of observables&lt;/h3&gt; &lt;p&gt;Some of the most common use cases of observables are web sockets with push notifications, user input changes, repeating intervals, etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is RxJS&lt;/h3&gt; &lt;p&gt;RxJS (Reactive Extensions for JavaScript) is a library for implementing reactive programming using observables that makes it easier to compose asynchronous or callback-based code. It also provides utility functions for creating and working with observables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Function constructor and function declaration&lt;/h3&gt; &lt;p&gt;The functions which are created with &lt;code&gt;Function constructor&lt;/code&gt; do not create closures to their creation contexts but they are always created in the global scope. i.e, the function can access its own local variables and global scope variables only. Whereas function declarations can access outer function variables(closures) too.&lt;/p&gt; &lt;p&gt;Let&#39;s see this difference with an example,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Function Constructor:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return new Function(&#39;return a;&#39;);
}
console.log(createFunction()()); // 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return function func() {
        return a;
    }
}
console.log(createFunction()()); // 200
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Short circuit condition&lt;/h3&gt; &lt;p&gt;Short circuit conditions are meant for condensed way of writing simple if statements. Let&#39;s demonstrate the scenario using an example. If you would like to login to a portal with an authentication condition, the expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (authenticate) {
   loginToPorta();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since the javascript logical operators evaluated from left to right, the above expression can be simplified using &amp;amp;&amp;amp; logical operator&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;authenticate &amp;amp;&amp;amp; loginToPorta();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to resize an array&lt;/h3&gt; &lt;p&gt;The length property of an array is useful to resize or empty an array quickly. Let&#39;s apply length property on number array to resize the number of elements from 5 to 2,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
console.log(array.length); // 5

array.length = 2;
console.log(array.length); // 2
console.log(array); // [1,2]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the array can be emptied too&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
array.length = 0;
console.log(array.length); // 0
console.log(array); // []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an observable&lt;/h3&gt; &lt;p&gt;An Observable is basically a function that can return a stream of values either synchronously or asynchronously to an observer over time. The consumer can get the value by calling &lt;code&gt;subscribe()&lt;/code&gt; method. Let&#39;s look at a simple example of an Observable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Observable } from &#39;rxjs&#39;;

const observable = new Observable(observer =&amp;gt; {
  setTimeout(() =&amp;gt; {
    observer.next(&#39;Message from a Observable!&#39;);
  }, 3000);
});

observable.subscribe(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/observables.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Observables are not part of the JavaScript language yet but they are being proposed to be added to the language&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between function and class declarations&lt;/h3&gt; &lt;p&gt;The main difference between function declarations and class declarations is &lt;code&gt;hoisting&lt;/code&gt;. The function declarations are hoisted but not class declarations.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = new User(); // ReferenceError

class User {}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Constructor Function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = new User(); // No error

 function User() {
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an async function&lt;/h3&gt; &lt;p&gt;An async function is a function declared with the &lt;code&gt;async&lt;/code&gt; keyword which enables asynchronous, promise-based behavior to be written in a cleaner style by avoiding promise chains. These functions can contain zero or more &lt;code&gt;await&lt;/code&gt; expressions.&lt;/p&gt; &lt;p&gt;Let&#39;s take a below async function example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function logger() {

  let data = await fetch(&#39;http://someapi.com/users&#39;); // pause until fetch returns
  console.log(data)
}
logger();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is basically syntax sugar over ES2015 promises and generators.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent promises swallowing errors&lt;/h3&gt; &lt;p&gt;While using asynchronous code, JavaScript’s ES6 promises can make your life a lot easier without having callback pyramids and error handling on every second line. But Promises have some pitfalls and the biggest one is swallowing errors by default.&lt;/p&gt; &lt;p&gt;Let&#39;s say you expect to print an error to the console for all the below cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
      throw new Error(&#39;error&#39;);
});

Promise.reject(&#39;error value&#39;).catch(function() {
      throw new Error(&#39;error&#39;);
});

new Promise(function(resolve, reject) {
      throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But there are many modern JavaScript environments that won&#39;t print any errors. You can fix this problem in different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add catch block at the end of each chain:&lt;/strong&gt; You can add catch block to the end of each of your promise chains&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
    throw new Error(&#39;error&#39;);
}).catch(function(error) {
  console.error(error.stack);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But it is quite difficult to type for each promise chain and verbose too.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add done method:&lt;/strong&gt; You can replace first solution&#39;s then and catch blocks with done method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).done(function() {
    throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s say you want to fetch data using HTTP and later perform processing on the resulting data asynchronously. You can write &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getDataFromHttp()
  .then(function(result) {
    return processDataAsync(result);
  })
  .done(function(processed) {
    displayData(processed);
  });
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In future, if the processing library API changed to synchronous then you can remove &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; getDataFromHttp()
   .then(function(result) {
     return displayData(processDataAsync(result));
   })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and then you forgot to add &lt;code&gt;done&lt;/code&gt; block to &lt;code&gt;then&lt;/code&gt; block leads to silent errors.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extend ES6 Promises by Bluebird:&lt;/strong&gt; Bluebird extends the ES6 Promises API to avoid the issue in the second solution. This library has a “default” onRejection handler which will print all errors from rejected Promises to stderr. After installation, you can process unhandled rejections&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.onPossiblyUnhandledRejection(function(error){
    throw error;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and discard a rejection, just handle it with an empty catch&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.reject(&#39;error value&#39;).catch(function() {});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is deno&lt;/h3&gt; &lt;p&gt;Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 JavaScript engine and the Rust programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make an object iterable in javascript&lt;/h3&gt; &lt;p&gt;By default, plain objects are not iterable. But you can make the object iterable by defining a &lt;code&gt;Symbol.iterator&lt;/code&gt; property on it.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate this with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const collection = {
  one: 1,
  two: 2,
  three: 3,
  [Symbol.iterator]() {
    const values = Object.keys(this);
    let i = 0;
    return {
      next: () =&amp;gt; {
        return {
          value: this[values[i++]],
          done: i &amp;gt; values.length
        }
      }
    };
  }
};

const iterator = collection[Symbol.iterator]();

console.log(iterator.next());    // → {value: 1, done: false}
console.log(iterator.next());    // → {value: 2, done: false}
console.log(iterator.next());    // → {value: 3, done: false}
console.log(iterator.next());    // → {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above process can be simplified using a generator function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const collection = {
   one: 1,
   two: 2,
   three: 3,
   [Symbol.iterator]: function * () {
     for (let key in this) {
       yield this[key];
     }
   }
 };
 const iterator = collection[Symbol.iterator]();
 console.log(iterator.next());    // {value: 1, done: false}
 console.log(iterator.next());    // {value: 2, done: false}
 console.log(iterator.next());    // {value: 3, done: false}
 console.log(iterator.next());    // {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Proper Tail Call&lt;/h3&gt; &lt;p&gt;First, we should know about tail call before talking about &quot;Proper Tail Call&quot;. A tail call is a subroutine or function call performed as the final action of a calling function. Whereas &lt;strong&gt;Proper tail call(PTC)&lt;/strong&gt; is a technique where the program or code will not create additional stack frames for a recursion when the function call is a tail call.&lt;/p&gt; &lt;p&gt;For example, the below classic or head recursion of factorial function relies on stack for each step. Each step need to be processed upto &lt;code&gt;n * factorial(n - 1)&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n) {
  if (n === 0) {
    return 1
  }
  return n * factorial(n - 1)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you use Tail recursion functions, they keep passing all the necessary data it needs down the recursion without relying on the stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n, acc = 1) {
  if (n === 0) {
    return acc
  }
  return factorial(n - 1, n * acc)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above pattern returns the same output as the first one. But the accumulator keeps track of total as an argument without using stack memory on recursive calls.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check an object is a promise or not&lt;/h3&gt; &lt;p&gt;If you don&#39;t know if a value is a promise or not, wrapping the value as &lt;code&gt;Promise.resolve(value)&lt;/code&gt; which returns a promise&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;   function isPromise(object){
      if(Promise &amp;amp;&amp;amp; Promise.resolve){
      return Promise.resolve(object) == object;
      }else{
      throw &quot;Promise not supported in your environment&quot;
      }
   }

   var i = 1;
   var promise = new Promise(function(resolve,reject){
      resolve()
   });

   console.log(isPromise(i)); // false
   console.log(isPromise(p)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is to check for &lt;code&gt;.then()&lt;/code&gt; handler type&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isPromise(value) {
   return Boolean(value &amp;amp;&amp;amp; typeof value.then === &#39;function&#39;);
}
var i = 1;
var promise = new Promise(function(resolve,reject){
   resolve()
});

console.log(isPromise(i)) // false
console.log(isPromise(promise)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to detect if a function is called as constructor&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new.target&lt;/code&gt; pseudo-property to detect whether a function was called as a constructor(using the new operator) or as a regular function call.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If a constructor or function invoked using the new operator, new.target returns a reference to the constructor or function.&lt;/li&gt; 
   &lt;li&gt;For function calls, new.target is undefined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Myfunc() {
   if (new.target) {
      console.log(&#39;called with new&#39;);
   } else {
      console.log(&#39;not called with new&#39;);
   }
}

new Myfunc(); // called with new
Myfunc(); // not called with new
Myfunc.call({}); not called with new
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between arguments object and rest parameter&lt;/h3&gt; &lt;p&gt;There are three main differences between arguments object and rest parameters&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The arguments object is an array-like but not an array. Whereas the rest parameters are array instances.&lt;/li&gt; 
   &lt;li&gt;The arguments object does not support methods such as sort, map, forEach, or pop. Whereas these methods can be used in rest parameters.&lt;/li&gt; 
   &lt;li&gt;The rest parameters are only the ones that haven’t been given a separate name, while the arguments object contains all arguments passed to the function&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between spread operator and rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter collects all remaining elements into an array. Whereas Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. i.e, Rest parameter is opposite to the spread operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different kinds of generators&lt;/h3&gt; &lt;p&gt;There are five kinds of generators,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; function* myGenFunc() {
      yield 1;
      yield 2;
      yield 3;
 }
 const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function expressions:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenFunc = function* () {
       yield 1;
       yield 2;
       yield 3;
};
const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in object literals:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const myObj = {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
 };
 const genObj = myObj.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in class:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  class MyClass {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
  }
  const myObject = new MyClass();
  const genObj = myObject.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator as a computed property:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const SomeObj = {
  *[Symbol.iterator] () {
    yield 1;
    yield 2;
    yield 3;
  }
}

console.log(Array.from(SomeObj)); // [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the built-in iterables&lt;/h3&gt; &lt;p&gt;Below are the list of built-in iterables in javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Arrays and TypedArrays&lt;/li&gt; 
   &lt;li&gt;Strings: Iterate over each character or Unicode code-points&lt;/li&gt; 
   &lt;li&gt;Maps: iterate over its key-value pairs&lt;/li&gt; 
   &lt;li&gt;Sets: iterates over their elements&lt;/li&gt; 
   &lt;li&gt;arguments: An array-like special variable in functions&lt;/li&gt; 
   &lt;li&gt;DOM collection such as NodeList&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between for...of and for...in statements&lt;/h3&gt; &lt;p&gt;Both for...in and for...of statements iterate over js data structures. The only difference is over what they iterate:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;for..in iterates over all enumerable property keys of an object&lt;/li&gt; 
   &lt;li&gt;for..of iterates over the values of an iterable object.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s explain this difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];

arr.newProp = &#39;newVlue&#39;;

// key are the property keys
for (let key in arr) {
  console.log(key);
}

// value are the property values
for (let value of arr) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since for..in loop iterates over the keys of the object, the first loop logs 0, 1, 2 and newProp while iterating over the array object. The for..of loop iterates over the values of a arr data structure and logs a, b, c in the console.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define instance and non-instance properties&lt;/h3&gt; &lt;p&gt;The Instance properties must be defined inside of class methods. For example, name and age properties defined insider constructor as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But Static(class) and prototype data properties must be defined outside of the ClassBody declaration. Let&#39;s assign the age value for Person class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Person.staticAge = 30;
Person.prototype.prototypeAge = 40;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between isNaN and Number.isNaN?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;isNaN&lt;/strong&gt;: The global function &lt;code&gt;isNaN&lt;/code&gt; converts the argument to a Number and returns true if the resulting value is NaN.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Number.isNaN&lt;/strong&gt;: This method does not convert the argument. But it returns true when the type is a Number and value is NaN.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s see the difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(‘hello’);   // true
Number.isNaN(&#39;hello&#39;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to invoke an IIFE without any extra brackets?&lt;/h3&gt; &lt;p&gt;Immediately Invoked Function Expressions(IIFE) requires a pair of parenthesis to wrap the function which contains set of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 })(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since both IIFE and void operator discard the result of an expression, you can avoid the extra brackets using &lt;code&gt;void operator&lt;/code&gt; for IIFE as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; void function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 }(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**[⬆ Back to Top](#table-of-contents)**
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;422&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is that possible to use expressions in switch cases?&lt;/h3&gt; You might have seen expressions used in switch condition but it is also possible to use for switch cases by assigning true value for the switch condition. Let&#39;s see the weather condition based on temparature as an example, &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const weather = function getWeather(temp) {
   switch(true) {
       case temp &amp;lt; 0: return &#39;freezing&#39;;
       case temp &amp;lt; 10: return &#39;cold&#39;;
       case temp &amp;lt; 24: return &#39;cool&#39;;
       default: return &#39;unknown&#39;;
   }
   }(10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**[⬆ Back to Top](#table-of-contents)**
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;423&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to ignore promise errors?&lt;/h3&gt; &lt;p&gt;The easiest and safest way to ignore promise errors is void that error. This approach is ESLint friendly too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await promise.catch(e =&amp;gt; void e);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do style the console output using CSS?&lt;/h3&gt; &lt;p&gt;You can add CSS styling to the console output using the CSS format content specifier %c. The console string message can be appended after the specifier and CSS style in another argument. Let&#39;s print the red the color text using console.log and CSS specifier as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text&quot;, &quot;color:red&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is also possible to add more styles for the content. For example, the font-size can be modified for the above text&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text with bigger font&quot;, &quot;color:red; font-size:20px&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Coding Exercise&lt;/h3&gt; 
&lt;h4&gt;1. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var car = new Vehicle(&quot;Honda&quot;, &quot;white&quot;, &quot;2010&quot;, &quot;UK&quot;);
console.log(car);

function Vehicle(model, color, year, country) {
    this.model = model;
    this.color = color;
    this.year = year;
    this.country = country;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
 &lt;li&gt;3: null&lt;/li&gt; 
 &lt;li&gt;4: {model: &quot;Honda&quot;, color: &quot;white&quot;, year: &quot;2010&quot;, country: &quot;UK&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The function declarations are hoisted similar to any variables. So the placement for &lt;code&gt;Vehicle&lt;/code&gt; function declaration doesn&#39;t make any difference.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;2. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
    let x = y = 0;
    x++;
    y++;
    return x;
}

console.log(foo(), typeof x, typeof y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, undefined and undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError: X is not defined&lt;/li&gt; 
 &lt;li&gt;3: 1, undefined and number&lt;/li&gt; 
 &lt;li&gt;4: 1, number and number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;Of course the return value of &lt;code&gt;foo()&lt;/code&gt; is 1 due to the increment operator. But the statement &lt;code&gt;let x = y = 0&lt;/code&gt; declares a local variable x. Whereas y declared as a global variable accidentally. This statement is equivalent to,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; let x;
 window.y = 0;
 x = window.y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since the block scoped variable x is undefined outside of the function, the type will be undefined too. Whereas the global variable &lt;code&gt;y&lt;/code&gt; is available outside the function, the value is 0 and type is number.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;3. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function main(){
   console.log(&#39;A&#39;);
   setTimeout(
      function print(){ console.log(&#39;B&#39;); }
   ,0);
   console.log(&#39;C&#39;);
}
main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, B and C&lt;/li&gt; 
 &lt;li&gt;2: B, A and C&lt;/li&gt; 
 &lt;li&gt;3: A and C&lt;/li&gt; 
 &lt;li&gt;4: A, C and B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The statements order is based on the event loop mechanism. The order of statements follows the below order,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;At first, the main function is pushed to the stack.&lt;/li&gt; 
 &lt;li&gt;Then the browser pushes the fist statement of the main function( i.e, A&#39;s console.log) to the stack, executing and popping out immediately.&lt;/li&gt; 
 &lt;li&gt;But &lt;code&gt;setTimeout&lt;/code&gt; statement moved to Browser API to apply the delay for callback.&lt;/li&gt; 
 &lt;li&gt;In the meantime, C&#39;s console.log added to stack, executed and popped out.&lt;/li&gt; 
 &lt;li&gt;The callback of &lt;code&gt;setTimeout&lt;/code&gt; moved from Browser API to message queue.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;main&lt;/code&gt; function popped out from stack because there are no statements to execute&lt;/li&gt; 
 &lt;li&gt;The callback moved from message queue to the stack since the stack is empty.&lt;/li&gt; 
 &lt;li&gt;The console.log for B is added to the stack and display on the console.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;4. What is the output of below equality check&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(0.1 + 0.2 === 0.3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;This is due to the float point math problem. Since the floating point numbers are encoded in binary format, the addition operations on them lead to rounding errors. Hence, the comparison of floating points doesn&#39;t give expected results. You can find more details about the explanation here &lt;a href=&quot;https://0.30000000000000004.com/&quot;&gt;0.30000000000000004.com/&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;5. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (function f(){}) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1function&lt;/li&gt; 
 &lt;li&gt;2: 1object&lt;/li&gt; 
 &lt;li&gt;3: ReferenceError&lt;/li&gt; 
 &lt;li&gt;4: 1undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The main points in the above code snippets are,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You can see function expression instead function declaration inside if statement. So it always returns true.&lt;/li&gt; 
 &lt;li&gt;Since it is not declared(or assigned) anywhere, f is undefined and typeof f is undefined too.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;In other words, it is same as&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (&#39;foo&#39;) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It returns 1object for MS Edge browser&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;6. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return
  {
    message: &quot;Hello World&quot;
  };
}
console.log(foo());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Hello World&lt;/li&gt; 
 &lt;li&gt;2: Object {message: &quot;Hello World&quot;}&lt;/li&gt; 
 &lt;li&gt;3: Undefined&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;This is a semicolon issue. Normally semicolons are optional in JavaScript. So if there are any statements(in this case, return) missing semicolon, it is automatically inserted immediately. Hence, the function returned as undefined.&lt;/p&gt; 
&lt;p&gt;Whereas if the opening curly brace is along with the return keyword then the function is going to be returned as expected.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return {
    message: &quot;Hello World&quot;
  };
}
console.log(foo()); // {message: &quot;Hello World&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;7. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myChars = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]
delete myChars[0];
console.log(myChars);
console.log(myChars[0]);
console.log(myChars.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;2: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;3: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
 &lt;li&gt;4: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;The &lt;code&gt;delete&lt;/code&gt; operator will delete the object property but it will not reindex the array or change its length. So the number or elements or length of the array won&#39;t be changed. If you try to print myChars then you can observe that it doesn&#39;t set an undefined value, rather the property is removed from the array. The newer versions of Chrome use &lt;code&gt;empty&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt; to make the difference a bit clearer.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;8. What is the output of below code in latest Chrome&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array1 = new Array(3);
console.log(array1);

var array2 = [];
array2[2] = 100;
console.log(array2);

var array3 = [,,,];
console.log(array3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [undefined × 3], [undefined × 2, 100], [undefined × 3]&lt;/li&gt; 
 &lt;li&gt;2: [empty × 3], [empty × 2, 100], [empty × 3]&lt;/li&gt; 
 &lt;li&gt;3: [null × 3], [null × 2, 100], [null × 3]&lt;/li&gt; 
 &lt;li&gt;4: [], [100], []&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;The latest chrome versions display &lt;code&gt;sparse array&lt;/code&gt;(they are filled with holes) using this empty x n notation. Whereas the older versions have undefined x n notation. &lt;strong&gt;Note:&lt;/strong&gt; The latest version of FF displays &lt;code&gt;n empty slots&lt;/code&gt; notation.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;9. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop1: function() { return 0 },
  prop2() { return 1 },
  [&#39;prop&#39; + 3]() { return 2 }
}

console.log(obj.prop1());
console.log(obj.prop2());
console.log(obj.prop3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 0, 1, 2&lt;/li&gt; 
 &lt;li&gt;2: 0, { return 1 }, 2&lt;/li&gt; 
 &lt;li&gt;3: 0, { return 1 }, { return 2 }&lt;/li&gt; 
 &lt;li&gt;4: 0, 1, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;ES6 provides method definitions and property shorthands for objects. So both prop2 and prop3 are treated as regular function values.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;10. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);
console.log(3 &amp;gt; 2 &amp;gt; 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError, SyntaxError,&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;The important point is that if the statement contains the same operators(e.g, &amp;lt; or &amp;gt;) then it can be evaluated from left to right. The first statement follows the below order,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);&lt;/li&gt; 
 &lt;li&gt;console.log(true &amp;lt; 3);&lt;/li&gt; 
 &lt;li&gt;console.log(1 &amp;lt; 3); // True converted as &lt;code&gt;1&lt;/code&gt; during comparison&lt;/li&gt; 
 &lt;li&gt;True&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Whereas the second statement follows the below order,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;console.log(3 &amp;gt; 2 &amp;gt; 1);&lt;/li&gt; 
 &lt;li&gt;console.log(true &amp;gt; 1);&lt;/li&gt; 
 &lt;li&gt;console.log(1 &amp;gt; 1); // False converted as &lt;code&gt;0&lt;/code&gt; during comparison&lt;/li&gt; 
 &lt;li&gt;False&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;11. What is the output of below code in non-strict mode&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function printNumbers(first, second, first) {
  console.log(first, second, first);
}
printNumbers(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;In non-strict mode, the regular JavaScript functions allow duplicate named parameters. The above code snippet has duplicate parameters on 1st and 3rd parameters. The value of the first parameter is mapped to the third argument which is passed to the function. Hence, the 3rd argument overrides the first parameter.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In strict mode, duplicate parameters will throw a Syntax Error.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;12. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const printNumbersArrow = (first, second, first) =&amp;gt; {
  console.log(first, second, first);
}
printNumbersArrow(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;Unlike regular functions, the arrow functions doesn&#39;t not allow duplicate parameters in either strict or non-strict mode. So you can see &lt;code&gt;SyntaxError&lt;/code&gt; in the console.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;13. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = () =&amp;gt; arguments.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError: arguments is not defined&lt;/li&gt; 
 &lt;li&gt;2: 3&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: null&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;Arrow functions do not have an &lt;code&gt;arguments, super, this, or new.target&lt;/code&gt; bindings. So any reference to &lt;code&gt;arguments&lt;/code&gt; variable tries to resolve to a binding in a lexically enclosing environment. In this case, the arguments variable is not defined outside of the arrow function. Hence, you will receive a reference error.&lt;/p&gt; 
&lt;p&gt;Where as the normal function provides the number of arguments passed to the function&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const func = function () {
                    return arguments.length;
                    }
console.log(func(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But If you still want to use an arrow function then rest operator on arguments provides the expected arguments&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = (...args) =&amp;gt; args.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;14. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log( String.prototype.trimLeft.name === &#39;trimLeft&#39; );
console.log( String.prototype.trimLeft.name === &#39;trimStart&#39; );
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, False&lt;/li&gt; 
 &lt;li&gt;2: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;In order to be consistent with functions like &lt;code&gt;String.prototype.padStart&lt;/code&gt;, the standard method name for trimming the whitespaces is considered as &lt;code&gt;trimStart&lt;/code&gt;. Due to web web compatibility reasons, the old method name &#39;trimLeft&#39; still acts as an alias for &#39;trimStart&#39;. Hence, the prototype for &#39;trimLeft&#39; is always &#39;trimStart&#39;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;15. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(Math.max());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined&lt;/li&gt; 
 &lt;li&gt;2: Infinity&lt;/li&gt; 
 &lt;li&gt;3: 0&lt;/li&gt; 
 &lt;li&gt;4: -Infinity&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;-Infinity is the initial comparant because almost every other value is bigger. So when no arguments are provided, -Infinity is going to be returned. &lt;strong&gt;Note:&lt;/strong&gt; Zero number of arguments is a valid case.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;16. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 == [10]);
console.log(10 == [[[[[[[10]]]]]]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, True&lt;/li&gt; 
 &lt;li&gt;2: True, False&lt;/li&gt; 
 &lt;li&gt;3: False, False&lt;/li&gt; 
 &lt;li&gt;4: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;As per the comparison algorithm in the ECMAScript specification(ECMA-262), the above expression converted into JS as below&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;10 === Number([10].valueOf().toString()) // 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So it doesn&#39;t matter about number brackets([]) around the number, it is always converted to a number in the expression.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;17. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 + &#39;10&#39;);
console.log(10 - &#39;10&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 20, 0&lt;/li&gt; 
 &lt;li&gt;2: 1010, 0&lt;/li&gt; 
 &lt;li&gt;3: 1010, 10-10&lt;/li&gt; 
 &lt;li&gt;4: NaN, NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;The concatenation operator(+) is applicable for both number and string types. So if any operand is string type then both operands concatenated as strings. Whereas subtract(-) operator tries to convert the operands as number type.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;18. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([0] == false);
if([0]) {
console.log(&quot;I&#39;m True&quot;);
} else {
console.log(&quot;I&#39;m False&quot;);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;2: True, I&#39;m False&lt;/li&gt; 
 &lt;li&gt;3: False, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;4: False, I&#39;m False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;In comparison operators, the expression &lt;code&gt;[0]&lt;/code&gt; converted to Number([0].valueOf().toString()) which is resolved to false. Whereas &lt;code&gt;[0]&lt;/code&gt; just becomes a truthy value without any conversion because there is no comparison operator.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;19. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([1, 2] + [3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [1,2,3,4]&lt;/li&gt; 
 &lt;li&gt;2: [1,2][3,4]&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1,23,4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The + operator is not meant or defined for arrays. So it converts arrays into strings and concatenates them.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;20. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = new Set([1, 1, 2, 3, 4]);
console.log(numbers);

const browser = new Set(&#39;Firefox);
console.log(browser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;2: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;3: [1, 2, 3, 4], [&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;]&lt;/li&gt; 
 &lt;li&gt;4: {1, 1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;Since &lt;code&gt;Set&lt;/code&gt; object is a collection of unique values, it won&#39;t allow duplicate values in the collection. At the same time, it is case sensitive data structure.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;21. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(NaN === NaN);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True&lt;/li&gt; 
 &lt;li&gt;2: False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;JavaScript follows IEEE 754 spec standards. As per this spec, NaNs are never equal for floating-point numbers.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;22. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.indexOf(NaN));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 4&lt;/li&gt; 
 &lt;li&gt;2: NaN&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: -1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The &lt;code&gt;indexOf&lt;/code&gt; uses strict equality operator(===) internally and &lt;code&gt;NaN === NaN&lt;/code&gt; evaluates to false. Since indexOf won&#39;t be able to find NaN inside an array, it returns -1 always. But you can use &lt;code&gt;Array.prototype.findIndex&lt;/code&gt; method to find out the index of NaN in an array or You can use &lt;code&gt;Array.prototype.includes&lt;/code&gt; to check if NaN is present in an array or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.findIndex(Number.isNaN)); // 4

console.log(numbers.includes(Number.isNaN)); // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;23. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b,] = [1, 2, 3, 4, 5];
console.log(a, b);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4, 5]&lt;/li&gt; 
 &lt;li&gt;2: 1, {2, 3, 4, 5}&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1, [2, 3, 4]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;When using rest parameters, trailing commas are not allowed and will throw a SyntaxError. If you remove the trailing comma then it displays 1st answer&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b,] = [1, 2, 3, 4, 5];
console.log(a, b); // 1, [2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;25. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   return 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {
  &lt;!-- raw HTML omitted --&gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {
  &lt;!-- raw HTML omitted --&gt;: 10}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;Async functions always return a promise. But even if the return value of an async function is not explicitly a promise, it will be implicitly wrapped in a promise. The above async function is equivalent to below expression,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;26. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   await 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {
  &lt;!-- raw HTML omitted --&gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {
  &lt;!-- raw HTML omitted --&gt;: undefined}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The await expression returns value 10 with promise resolution and the code after each await expression can be treated as existing in a &lt;code&gt;.then&lt;/code&gt; callback. In this case, there is no return expression at the end of the function. Hence, the default return value of &lt;code&gt;undefined&lt;/code&gt; is returned as the resolution of the promise. The above async function is equivalent to below expression,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10).then(() =&amp;gt; undefined)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;27. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function processArray(array) {
  array.forEach(item =&amp;gt; {
    await delayedLog(item);
  })
}

processArray([1, 2, 3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 1, 2, 3, 4&lt;/li&gt; 
 &lt;li&gt;3: 4, 4, 4, 4&lt;/li&gt; 
 &lt;li&gt;4: 4, 3, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;Even though “processArray” is an async function, the anonymous function that we use for &lt;code&gt;forEach&lt;/code&gt; is synchronous. If you use await inside a synchronous function then it throws a syntax error.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;28. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function process(array) {
  array.forEach(async (item) =&amp;gt; {
    await delayedLog(item);
  });
  console.log(&#39;Process completed!&#39;);
}
process([1, 2, 3, 5]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1 2 3 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;2: 5 5 5 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;3: Process completed! and 5 5 5 5&lt;/li&gt; 
 &lt;li&gt;4: Process completed! and 1 2 3 5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The forEach method will not wait until all items are finished but it just runs the tasks and goes next. Hence, the last statement is displayed first followed by a sequence of promise resolutions.&lt;/p&gt; 
&lt;p&gt;But you control the array sequence using for..of loop,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function processArray(array) {
  for (const item of array) {
    await delayedLog(item);
  }
  console.log(&#39;Process completed!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;29. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var set = new Set();
set.add(&quot;+0&quot;).add(&quot;-0&quot;).add(NaN).add(undefined).add(NaN);;
console.log(set);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Set(4) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;2: Set(3) {&quot;+0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;3: Set(5) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
 &lt;li&gt;4: Set(4) {&quot;+0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;Set has few exceptions from equality check,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;All NaN values are equal&lt;/li&gt; 
 &lt;li&gt;Both +0 and -0 considered as different values&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;30. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = Symbol(&#39;one&#39;);
const sym2 = Symbol(&#39;one&#39;);

const sym3 = Symbol.for(&#39;two&#39;);
const sym4 = Symbol.for(&#39;two&#39;);

cnsooe.log(sym1 === sym2, sym3 === sym4);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: false, true&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;Symbol follows below conventions,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Every symbol value returned from Symbol() is unique irrespective of the optional string.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Symbol.for()&lt;/code&gt; function creates a symbol in a global symbol registry list. But it doesn&#39;t necessarily create a new symbol on every call, it checks first if a symbol with the given key is already present in the registry and returns the symbol if it is found. Otherwise a new symbol created in the registry.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The symbol description is just useful for debugging purposes.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;31. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = new Symbol(&#39;one&#39;);
console.log(sym1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: one&lt;/li&gt; 
 &lt;li&gt;3: Symbol(&#39;one&#39;)&lt;/li&gt; 
 &lt;li&gt;4: Symbol&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;&lt;code&gt;Symbol&lt;/code&gt; is a just a standard function and not an object constructor(unlike other primitives new Boolean, new String and new Number). So if you try to call it with the new operator will result in a TypeError&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;32. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let myNumber = 100;
let myString = &#39;100&#39;;

if (!typeof myNumber === &quot;string&quot;) {
   console.log(&quot;It is not a string!&quot;);
} else {
    console.log(&quot;It is a string!&quot;);
}

if (!typeof myString === &quot;number&quot;){
   console.log(&quot;It is not a number!&quot;)
} else {
   console.log(&quot;It is a number!&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: It is not a string!, It is not a number!&lt;/li&gt; 
 &lt;li&gt;3: It is not a string!, It is a number!&lt;/li&gt; 
 &lt;li&gt;4: It is a string!, It is a number!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The return value of &lt;code&gt;typeof myNumber (OR) typeof myString&lt;/code&gt; is always the truthy value (either &quot;number&quot; or &quot;string&quot;). Since ! operator converts the value to a boolean value, the value of both &lt;code&gt;!typeof myNumber or !typeof myString&lt;/code&gt; is always false. Hence the if condition fails and control goes to else block.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;33. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(JSON.stringify({ myArray: [&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)] }));
console.log(JSON.stringify({ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {&quot;myArray&quot;:[&#39;one&#39;, undefined, {}, Symbol]}, {}&lt;/li&gt; 
 &lt;li&gt;2: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, {}&lt;/li&gt; 
 &lt;li&gt;3: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, &quot;{ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]&quot;&lt;/li&gt; 
 &lt;li&gt;4: {&quot;myArray&quot;:[&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)]}, {}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;The symbols has below constraints,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The undefined, Functions, and Symbols are not valid JSON values. So those values are either omitted (in an object) or changed to null (in an array). Hence, it returns null values for the value array.&lt;/li&gt; 
 &lt;li&gt;All Symbol-keyed properties will be completely ignored. Hence it returns an empty object({}).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;34. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class A {
  constructor() {
    console.log(new.target.name)
  }
}

class B extends A { constructor() { super() } }

new A();
new B();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, A&lt;/li&gt; 
 &lt;li&gt;2: A, B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Using constructors, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor (points to the class definition of class which is initialized) that was directly invoked by new. This also applies to the case if the constructor is in a parent class and was delegated from a child constructor.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;35. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [x, ...y,] = [1, 2, 3, 4];
console.log(x, y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4]&lt;/li&gt; 
 &lt;li&gt;2: 1, [2, 3]&lt;/li&gt; 
 &lt;li&gt;3: 1, [2]&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;It throws a syntax error because the rest element should not have a trailing comma. You should always consider using a rest operator as the last element.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;36. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {a: x = 10, b: y = 20} = {a: 30};

console.log(x);
console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30, 20&lt;/li&gt; 
 &lt;li&gt;2: 10, 20&lt;/li&gt; 
 &lt;li&gt;3: 10, undefined&lt;/li&gt; 
 &lt;li&gt;4: 30, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;The object property follows below rules,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The object properties can be retrieved and assigned to a variable with a different name&lt;/li&gt; 
 &lt;li&gt;The property assigned a default value when the retrieved value is &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;37. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 200&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: 0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;If you leave out the right-hand side assignment for the destructuring object, the function will look for at least one argument to be supplied when invoked. Otherwise you will receive an error &lt;code&gt;Error: Cannot read property &#39;length&#39; of undefined&lt;/code&gt; as mentioned above.&lt;/p&gt; 
&lt;p&gt;You can avoid the error with either of the below changes,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Pass at least an empty object:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area({});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Assign default empty object:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20} = {}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;38. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const props = [
  { id: 1, name: &#39;John&#39;},
  { id: 2, name: &#39;Jack&#39;},
  { id: 3, name: &#39;Tom&#39;}
];

const [,, { name }] = props;
console.log(name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Tom&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: John&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;It is possible to combine Array and Object destructuring. In this case, the third element in the array props accessed first followed by name property in the object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;39. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function checkType(num = 1) {
  console.log(typeof num);
}

checkType();
checkType(undefined);
checkType(&#39;&#39;);
checkType(null);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: number, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;2: undefined, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;3: number, number, string, object&lt;/li&gt; 
 &lt;li&gt;4: number, number, number, number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;If the function argument is set implicitly(not passing argument) or explicitly to undefined, the value of the argument is the default parameter. Whereas for other falsy values(&#39;&#39; or null), the value of the argument is passed as a parameter.&lt;/p&gt; 
&lt;p&gt;Hence, the result of function calls categorized as below,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first two function calls logs number type since the type of default value is number&lt;/li&gt; 
 &lt;li&gt;The type of &#39;&#39; and null values are string and object type respectively.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;40. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function add(item, items = []) {
  items.push(item);
  return items;
}

console.log(add(&#39;Orange&#39;));
console.log(add(&#39;Apple&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;Orange&#39;], [&#39;Orange&#39;, &#39;Apple&#39;]&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Orange&#39;], [&#39;Apple&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Since the default argument is evaluated at call time, a new object is created each time the function is called. So in this case, the new array is created and an element pushed to the default empty array.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;41. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greet(greeting, name, message = greeting + &#39; &#39; + name) {
  console.log([greeting, name, message]);
}

greet(&#39;Hello&#39;, &#39;John&#39;);
greet(&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Hello&#39;, &#39;John&#39;, &#39;Hello John&#39;], [&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Since parameters defined earlier are available to later default parameters, this code snippet doesn&#39;t throw any error.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;42. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function outer(f = inner()) {
  function inner() { return &#39;Inner&#39; }
}
outer();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError&lt;/li&gt; 
 &lt;li&gt;2: Inner&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;The functions and variables declared in the function body cannot be referred from default value parameter initializers. If you still try to access, it throws a run-time ReferenceError(i.e, &lt;code&gt;inner&lt;/code&gt; is not defined).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;43. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFun(x, y, ...manyMoreArgs) {
  console.log(manyMoreArgs)
}

myFun(1, 2, 3, 4, 5);
myFun(1, 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [3, 4, 5], undefined&lt;/li&gt; 
 &lt;li&gt;2: SyntaxError&lt;/li&gt; 
 &lt;li&gt;3: [3, 4, 5], []&lt;/li&gt; 
 &lt;li&gt;4: [3, 4, 5], [undefined]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;The rest parameter is used to hold the remaining parameters of a function and it becomes an empty array if the argument is not provided.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;44. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {&#39;key&#39;: &#39;value&#39;};
const array = [...obj];
console.log(array);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;key&#39;, &#39;value&#39;]&lt;/li&gt; 
 &lt;li&gt;2: TypeError&lt;/li&gt; 
 &lt;li&gt;3: []&lt;/li&gt; 
 &lt;li&gt;4: [&#39;key&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Spread syntax can be applied only to iterable objects. By default, Objects are not iterable, but they become iterable when used in an Array, or with iterating functions such as &lt;code&gt;map(), reduce(), and assign()&lt;/code&gt;. If you still try to do it, it still throws &lt;code&gt;TypeError: obj is not iterable&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;45. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* myGenFunc() {
    yield 1;
    yield 2;
    yield 3;
}
var myGenObj = new myGenFunc;
console.log(myGenObj.next().value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1&lt;/li&gt; 
 &lt;li&gt;2: undefined&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: TypeError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;Generators are not constructible type. But if you still proceed to do, there will be an error saying &quot;TypeError: myGenFunc is not a constructor&quot;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;46. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function* yieldAndReturn() {
  yield 1;
  return 2;
  yield 3;
}

var myGenObj = yieldAndReturn()
console.log(myGenObj.next());
console.log(myGenObj.next());
console.log(myGenObj.next());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: { value: 1, done: false }, { value: 2, done: true }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;2: { value: 1, done: false }, { value: 2, done: false }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;3: { value: 1, done: false }, { value: 2, done: true }, { value: 3, done: true }&lt;/li&gt; 
 &lt;li&gt;4: { value: 1, done: false }, { value: 2, done: false }, { value: 3, done: true }&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;A return statement in a generator function will make the generator finish. If a value is returned, it will be set as the value property of the object and done property to true. When a generator is finished, subsequent next() calls return an object of this form: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;47. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenerator = (function *(){
  yield 1;
  yield 2;
  yield 3;
})();
for (const value of myGenerator) {
  console.log(value);
  break;
}

for (const value of myGenerator) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1,2,3 and 1,2,3&lt;/li&gt; 
 &lt;li&gt;2: 1,2,3 and 4,5,6&lt;/li&gt; 
 &lt;li&gt;3: 1 and 1&lt;/li&gt; 
 &lt;li&gt;4: 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;The generator should not be re-used once the iterator is closed. i.e, Upon exiting a loop(on completion or using break &amp;amp; return), the generator is closed and trying to iterate over it again does not yield any more results. Hence, the second loop doesn&#39;t print any value.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;48. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const num = 0o38;
console.log(num);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 38&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;If you use an invalid number(outside of 0-7 range) in the octal literal, JavaScript will throw a SyntaxError. In ES5, it treats the octal literal as a decimal number.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;49. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const squareObj = new Square(10);
console.log(squareObj.area);

class Square {
  constructor(length) {
    this.length = length;
  }

  get area() {
    return this.length * this.length;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 100&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Unlike function declarations, class declarations are not hoisted. i.e, First You need to declare your class and then access it, otherwise it will throw a ReferenceError &quot;Uncaught ReferenceError: Square is not defined&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Class expressions also applies to the same hoisting restrictions of class declarations.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;50. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person() { }

Person.prototype.walk = function() {
  return this;
}

Person.run = function() {
  return this;
}

let user = new Person();
let walk = user.walk;
console.log(walk());

let run = Person.run;
console.log(run());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined, undefined&lt;/li&gt; 
 &lt;li&gt;2: Person, Person&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Window, Window&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;When a regular or prototype method is called without a value for &lt;strong&gt;this&lt;/strong&gt;, the methods return an initial this value if the value is not undefined. Otherwise global window object will be returned. In our case, the initial &lt;code&gt;this&lt;/code&gt; value is undefined so both methods return window objects.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;51. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Vehicle {
  constructor(name) {
    this.name = name;
  }

  start() {
    console.log(`${this.name} vehicle started`);
  }
}

class Car extends Vehicle {
  start() {
    console.log(`${this.name} car started`);
    super.start();
  }
}

const car = new Car(&#39;BMW&#39;);
console.log(car.start());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: BMW vehicle started, BMW car started&lt;/li&gt; 
 &lt;li&gt;3: BMW car started, BMW vehicle started&lt;/li&gt; 
 &lt;li&gt;4: BMW car started, BMW car started&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 3&lt;/h5&gt; 
&lt;p&gt;The super keyword is used to call methods of a superclass. Unlike other languages the super invocation doesn&#39;t need to be a first statement. i.e, The statements will be executed in the same order of code.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h4&gt;52. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const USER = {&#39;age&#39;: 30};
USER.age = 25;
console.log(USER.age);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30&lt;/li&gt; 
 &lt;li&gt;2: 25&lt;/li&gt; 
 &lt;li&gt;3: Uncaught TypeError&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Even though we used constant variables, the content of it is an object and the object&#39;s contents (e.g properties) can be altered. Hence, the change is going to be valid in this case.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;53. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;🙂&#39; === &#39;🙂&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 2&lt;/h5&gt; 
&lt;p&gt;Emojis are unicodes and the unicode for smile symbol is &quot;U+1F642&quot;. The unicode comparision of same emojies is equivalent to string comparison. Hence, the output is always true.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;54. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(typeof typeof typeof true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: string&lt;/li&gt; 
 &lt;li&gt;2: boolean&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;p&gt;The typeof operator on any primitive returns a string value. So even if you apply the chain of typeof operators on the return value, it is always string.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let zero = new Number(0);

if (zero) {
  console.log(&quot;If&quot;);
} else {
  console.log(&quot;Else&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: If&lt;/li&gt; 
 &lt;li&gt;2: Else&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 1&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;The type of operator on new Number always returns object. i.e, typeof new Number(0) --&amp;gt; object.&lt;/li&gt; 
 &lt;li&gt;Objects are always truthy in if block&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Hence the above code block always goes to if section.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code in non strict mode?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let msg = &quot;Good morning!!&quot;;

msg.name = &quot;John&quot;; 

console.log(msg.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: &quot;&quot;&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: John&lt;/li&gt; 
 &lt;li&gt;4: Undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h5&gt;Answer: 4&lt;/h5&gt; 
&lt;p&gt;It returns undefined for non-strict mode and returns Error for strict mode. In non-strict mode, the wrapper object is going to be created and get the mentioned property. But the object get disappeared after accessing the property in next line.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sigalor/whatsapp-web-reveng</title>
      <link>https://github.com/sigalor/whatsapp-web-reveng</link>
      <description>&lt;p&gt;Reverse engineering WhatsApp Web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WhatsApp Web reverse engineered&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This project intends to provide a complete description and re-implementation of the WhatsApp Web API, which will eventually lead to a custom client. WhatsApp Web internally works using WebSockets; this project does as well.&lt;/p&gt; 
&lt;h2&gt;Trying it out&lt;/h2&gt; 
&lt;p&gt;Before you can run the application, make sure that you have the following software installed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (at least version 8, as the &lt;code&gt;async&lt;/code&gt; &lt;code&gt;await&lt;/code&gt; syntax is used)&lt;/li&gt; 
 &lt;li&gt;Python 2.7 with the following &lt;code&gt;pip&lt;/code&gt; packages installed: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;websocket-client&lt;/code&gt; and &lt;code&gt;git+https://github.com/dpallot/simple-websocket-server.git&lt;/code&gt; for acting as WebSocket server and client.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;curve25519-donna&lt;/code&gt; and &lt;code&gt;pycrypto&lt;/code&gt; for the encryption stuff.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pyqrcode&lt;/code&gt; for QR code generation.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;protobuf&lt;/code&gt; for reading and writing the binary conversation format.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Note: On Windows &lt;code&gt;curve25519-donna&lt;/code&gt; requires &lt;a href=&quot;http://aka.ms/vcpython27&quot;&gt;Microsoft Visual C++ 9.0&lt;/a&gt; and you need to copy &lt;a href=&quot;https://raw.githubusercontent.com/sigalor/whatsapp-web-reveng/master/windows&quot;&gt;&lt;code&gt;stdint.h&lt;/code&gt;&lt;/a&gt; into &lt;code&gt;C:\Users\YOUR USERNAME\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\include&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before starting the application for the first time, run &lt;code&gt;npm install -f&lt;/code&gt; to install all Node and &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; for all Python dependencies.&lt;/p&gt; 
&lt;p&gt;Lastly, to finally launch it, just run &lt;code&gt;npm start&lt;/code&gt; on Linux based OS&#39;s and &lt;code&gt;npm run win&lt;/code&gt; on Windows. Using fancy &lt;code&gt;concurrently&lt;/code&gt; and &lt;code&gt;nodemon&lt;/code&gt; magic, all three local components will be started after each other and when you edit a file, the changed module will automatically restart to apply the changes.&lt;/p&gt; 
&lt;h2&gt;Reimplementations&lt;/h2&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;p&gt;A recent addition is a version of the decryption routine translated to in-browser JavaScript. Run &lt;code&gt;node index_jsdemo.js&lt;/code&gt; (just needed because browsers don&#39;t allow changing HTTP headers for WebSockets), then open &lt;code&gt;client/login-via-js-demo.html&lt;/code&gt; as a normal file in any browser. The console output should show decrypted binary messages after scanning the QR code.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/adiwajshing&quot;&gt;adiwajshing&lt;/a&gt; created &lt;a href=&quot;https://github.com/adiwajshing/Baileys&quot;&gt;Baileys&lt;/a&gt;, a Node library that implements the WhatsApp Web API.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ndunks&quot;&gt;ndunks&lt;/a&gt; made a TypeScript reimplementation at &lt;a href=&quot;https://github.com/ndunks/WaJs&quot;&gt;WaJs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;p&gt;With &lt;a href=&quot;https://github.com/wiomoc/whatsappweb-rs&quot;&gt;whatsappweb-rs&lt;/a&gt;, &lt;a href=&quot;https://github.com/wiomoc&quot;&gt;wiomoc&lt;/a&gt; created a WhatsApp Web client in Rust.&lt;/p&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Rhymen&quot;&gt;Rhymen&lt;/a&gt; created &lt;a href=&quot;https://github.com/Rhymen/go-whatsapp&quot;&gt;go-whatsapp&lt;/a&gt;, a Go package that implements the WhatsApp Web API.&lt;/p&gt; 
&lt;h3&gt;Clojure&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vzaramel&quot;&gt;vzaramel&lt;/a&gt; created &lt;a href=&quot;https://github.com/vzaramel/whatsappweb-clj&quot;&gt;whatsappweb-clj&lt;/a&gt;, a Clojure library the implements the WhatsApp Web API.&lt;/p&gt; 
&lt;h2&gt;Application architecture&lt;/h2&gt; 
&lt;p&gt;The project is organized in the following way. Note the used ports and make sure that they are not in use elsewhere before starting the application. &lt;img src=&quot;https://raw.githubusercontent.com/sigalor/whatsapp-web-reveng/master/doc/img/app-architecture1000.png&quot; alt=&quot;whatsapp-web-reveng Application architecture&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Login and encryption details&lt;/h2&gt; 
&lt;p&gt;WhatsApp Web encrypts the data using several different algorithms. These include &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot;&gt;AES 256 CBC&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Curve25519&quot;&gt;Curve25519&lt;/a&gt; as Diffie-Hellman key agreement scheme, &lt;a href=&quot;https://en.wikipedia.org/wiki/HKDF&quot;&gt;HKDF&lt;/a&gt; for generating the extended shared secret and &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;HMAC&lt;/a&gt; with SHA256.&lt;/p&gt; 
&lt;p&gt;Starting the WhatsApp Web session happens by just connecting to one of its websocket servers at &lt;code&gt;wss://w[1-8].web.whatsapp.com/ws&lt;/code&gt; (&lt;code&gt;wss://&lt;/code&gt; means that the websocket connection is secure; &lt;code&gt;w[1-8]&lt;/code&gt; means that any number between 1 and 8 can follow the &lt;code&gt;w&lt;/code&gt;). Also make sure that, when establishing the connection, the HTTP header &lt;code&gt;Origin: https://web.whatsapp.com&lt;/code&gt; is set, otherwise the connection will be rejected.&lt;/p&gt; 
&lt;h3&gt;Messages&lt;/h3&gt; 
&lt;p&gt;When you send messages to a WhatsApp Web websocket, they need to be in a specific format. It is quite simple and looks like &lt;code&gt;messageTag,JSON&lt;/code&gt;, e.g. &lt;code&gt;1515590796,[&quot;data&quot;,123]&lt;/code&gt;. Note that apparently the message tag can be anything. This application mostly uses the current timestamp as tag, just to be a bit unique. WhatsApp itself often uses message tags like &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;1234.--0&lt;/code&gt; or something like that. Obviously the message tag may not contain a comma. Additionally, JSON &lt;em&gt;objects&lt;/em&gt; are possible as well as payload.&lt;/p&gt; 
&lt;h3&gt;Logging in&lt;/h3&gt; 
&lt;p&gt;To log in at an open websocket, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate your own &lt;code&gt;clientId&lt;/code&gt;, which needs to be 16 base64-encoded bytes (i.e. 25 characters). This application just uses 16 random bytes, i.e. &lt;code&gt;base64.b64encode(os.urandom(16))&lt;/code&gt; in Python.&lt;/li&gt; 
 &lt;li&gt;Decide for a tag for your message, which is more or less arbitrary (see above). This application uses the current timestamp (in seconds) for that. Remember this tag for later.&lt;/li&gt; 
 &lt;li&gt;The message you send to the websocket looks like this: &lt;code&gt;messageTag,[&quot;admin&quot;,&quot;init&quot;,[0,3,2390],[&quot;Long browser description&quot;,&quot;ShortBrowserDesc&quot;],&quot;clientId&quot;,true]&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Obviously, you need to replace &lt;code&gt;messageTag&lt;/code&gt; and &lt;code&gt;clientId&lt;/code&gt; by the values you chose before&lt;/li&gt; 
   &lt;li&gt;The &lt;code&gt;[0,3,2390]&lt;/code&gt; part specifies the current WhatsApp Web version. The last value changes frequently. It should be quite backwards-compatible though.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&quot;Long browser description&quot;&lt;/code&gt; is an arbitrary string that will be shown in the WhatsApp app in the list of registered WhatsApp Web clients after you scan the QR code.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&quot;ShortBrowserDesc&quot;&lt;/code&gt; has not been observed anywhere yet but is arbitrary as well.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;After a few moments, your websocket will receive a message in the specified format with the message tag &lt;em&gt;you chose in step 2&lt;/em&gt;. The JSON object of this message has the following attributes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: should be 200&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ref&lt;/code&gt;: in the application, this is treated as the server ID; important for the QR generation, see below&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ttl&lt;/code&gt;: is 20000, maybe the time after the QR code becomes invalid&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;update&lt;/code&gt;: a boolean flag&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;curr&lt;/code&gt;: the current WhatsApp Web version, e.g. &lt;code&gt;0.2.7314&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;time&lt;/code&gt;: the timestamp the server responded at, as floating-point milliseconds, e.g. &lt;code&gt;1515592039037.0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;QR code generation&lt;/h3&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;Generate your own private key with Curve25519, e.g. &lt;code&gt;curve25519.Private()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Get the public key from your private key, e.g. &lt;code&gt;privateKey.get_public()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Obtain the string later encoded by the QR code by concatenating the following values with a comma: 
  &lt;ul&gt; 
   &lt;li&gt;the server ID, i.e. the &lt;code&gt;ref&lt;/code&gt; attribute from step 4&lt;/li&gt; 
   &lt;li&gt;the base64-encoded version of your public key, i.e. &lt;code&gt;base64.b64encode(publicKey.serialize())&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;your client ID&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Turn this string into an image (e.g. using &lt;code&gt;pyqrcode&lt;/code&gt;) and scan it using the WhatsApp app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Requesting new ref for QR code generation (not implemented)&lt;/h3&gt; 
&lt;ol start=&quot;9&quot;&gt; 
 &lt;li&gt;You can request up to 5 new server refs when previous one expires (&lt;code&gt;ttl&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Do it by sending &lt;code&gt;messageTag,[&quot;admin&quot;,&quot;Conn&quot;,&quot;reref&quot;]&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The server responds with JSON with the following attributes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: should be 200 (other ones: 304 - reuse previous ref, 429 - new ref denied)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ref&lt;/code&gt;: new ref&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ttl&lt;/code&gt;: expiration time&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Update your QR code with the new ref.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;After scanning the QR code&lt;/h3&gt; 
&lt;ol start=&quot;13&quot;&gt; 
 &lt;li&gt;Immediately after you scan the QR code, the websocket receives several important JSON messages that build up the encryption details. These use the specified message format and have a JSON &lt;em&gt;array&lt;/em&gt; as payload. Their message tag has no special meaning. The first entry of the JSON array has one of the following values: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Conn&lt;/code&gt;: array contains JSON object as second element with connection information containing the following attributes and many more: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;battery&lt;/code&gt;: the current battery percentage of your phone&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;browserToken&lt;/code&gt;: used to logout without active WebSocket connection (not implemented yet)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;clientToken&lt;/code&gt;: used to resuming closed sessions aka &quot;Remember me&quot; (not implemented yet)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;phone&lt;/code&gt;: an object with detailed information about your phone, e.g. &lt;code&gt;device_manufacturer&lt;/code&gt;, &lt;code&gt;device_model&lt;/code&gt;, &lt;code&gt;os_build_number&lt;/code&gt;, &lt;code&gt;os_version&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;platform&lt;/code&gt;: your phone OS, e.g. &lt;code&gt;android&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;pushname&lt;/code&gt;: the name of yours you provided WhatsApp&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;secret&lt;/code&gt; (remember this!)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;serverToken&lt;/code&gt;: used to resuming closed sessions aka &quot;Remember me&quot; (not implemented yet)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;wid&lt;/code&gt;: your phone number in the chat identification format (see below)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Stream&lt;/code&gt;: array has four elements in total, so the entire payload is like &lt;code&gt;[&quot;Stream&quot;,&quot;update&quot;,false,&quot;0.2.7314&quot;]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Props&lt;/code&gt;: array contains JSON object as second element with several properties like &lt;code&gt;imageMaxKBytes&lt;/code&gt; (1024), &lt;code&gt;maxParticipants&lt;/code&gt; (257), &lt;code&gt;videoMaxEdge&lt;/code&gt; (960) and others&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Key generation&lt;/h3&gt; 
&lt;ol start=&quot;14&quot;&gt; 
 &lt;li&gt;You are now ready for generating the final encryption keys. Start by decoding the &lt;code&gt;secret&lt;/code&gt; from &lt;code&gt;Conn&lt;/code&gt; as base64 and storing it as &lt;code&gt;secret&lt;/code&gt;. This decoded secret will be 144 bytes long.&lt;/li&gt; 
 &lt;li&gt;Take the &lt;em&gt;first 32 bytes&lt;/em&gt; of the decoded secret and use it as a public key. Together with your private key, generate a shared key out of it and call it &lt;code&gt;sharedSecret&lt;/code&gt;. The application does it using &lt;code&gt;privateKey.get_shared_key(curve25519.Public(secret[:32]), lambda a:a)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Extend &lt;code&gt;sharedSecret&lt;/code&gt; to 80 bytes using HKDF. Call this value &lt;code&gt;sharedSecretExpanded&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;This step is optional, it validates the data provided by the server. The method is called &lt;em&gt;HMAC validation&lt;/em&gt;. Do it by first calculating &lt;code&gt;HmacSha256(sharedSecretExpanded[32:64], secret[:32] + secret[64:])&lt;/code&gt;. Compare this value to &lt;code&gt;secret[32:64]&lt;/code&gt;. If they are not equal, abort the login.&lt;/li&gt; 
 &lt;li&gt;You now have the encrypted keys: store &lt;code&gt;sharedSecretExpanded[64:] + secret[64:]&lt;/code&gt; as &lt;code&gt;keysEncrypted&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The encrypted keys now need to be decrypted using AES with &lt;code&gt;sharedSecretExpanded[:32]&lt;/code&gt; as key, i.e. store &lt;code&gt;AESDecrypt(sharedSecretExpanded[:32], keysEncrypted)&lt;/code&gt; as &lt;code&gt;keysDecrypted&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;keysDecrypted&lt;/code&gt; variable is 64 bytes long and contains two keys, each 32 bytes long. The &lt;code&gt;encKey&lt;/code&gt; is used for decrypting binary messages sent to you by the WhatsApp Web server or encrypting binary messages you send to the server. The &lt;code&gt;macKey&lt;/code&gt; is needed to validate the messages sent to you: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;encKey&lt;/code&gt;: &lt;code&gt;keysDecrypted[:32]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;macKey&lt;/code&gt;: &lt;code&gt;keysDecrypted[32:64]&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Restoring closed sessions (not implemented)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;After sending &lt;code&gt;init&lt;/code&gt; command, check whether you have &lt;code&gt;serverToken&lt;/code&gt; and &lt;code&gt;clientToken&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If so, send &lt;code&gt;messageTag,[&quot;admin&quot;,&quot;login&quot;,&quot;clientToken&quot;,&quot;serverToken&quot;,&quot;clientId&quot;,&quot;takeover&quot;]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The server should respond with &lt;code&gt;{&quot;status&quot;: 200}&lt;/code&gt;. Other statuses: 
  &lt;ul&gt; 
   &lt;li&gt;401: Unpaired from the phone&lt;/li&gt; 
   &lt;li&gt;403: Access denied, check &lt;code&gt;tos&lt;/code&gt; field in the JSON: if it equals or greater than 2, you have violated TOS&lt;/li&gt; 
   &lt;li&gt;405: Already logged in&lt;/li&gt; 
   &lt;li&gt;409: Logged in from another location&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Resolving challenge (not implemented)&lt;/h3&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;When using old or expired &lt;code&gt;serverToken&lt;/code&gt; and &lt;code&gt;clientToken&lt;/code&gt;, you will be challenged to confirm that you still have valid encryption keys.&lt;/li&gt; 
 &lt;li&gt;The challenge looks like this &lt;code&gt;messageTag,[&quot;Cmd&quot;,{&quot;type&quot;:&quot;challenge&quot;,&quot;challenge&quot;:&quot;BASE_64_ENCODED_STRING==&quot;}]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Decode &lt;code&gt;challenge&lt;/code&gt; string from Base64, sign it with your macKey, encode it back with Base64 and send &lt;code&gt;messageTag,[&quot;admin&quot;,&quot;challenge&quot;,&quot;BASE_64_ENCODED_STRING==&quot;,&quot;serverToken&quot;,&quot;clientId&quot;]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The server should respond with &lt;code&gt;{&quot;status&quot;: 200}&lt;/code&gt;, but it means nothing.&lt;/li&gt; 
 &lt;li&gt;After solving challenge your connection should be restored.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Logging out&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;When you have an active WebSocket connection, just send &lt;code&gt;goodbye,,[&quot;admin&quot;,&quot;Conn&quot;,&quot;disconnect&quot;]&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;When you don&#39;t have such connection (for example your session has been taken over from another location), sign your &lt;code&gt;encKey&lt;/code&gt; with your &lt;code&gt;macKey&lt;/code&gt; and encode it with Base64. Let&#39;s say it is your &lt;code&gt;logoutToken&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Send a POST request to &lt;code&gt;https://dyn.web.whatsapp.com/logout?t=browserToken&amp;amp;m=logoutToken&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Remember to always clear your sessions, so sessions list in your phone will not grow big.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Validating and decrypting messages&lt;/h3&gt; 
&lt;p&gt;Now that you have the two keys, validating and decrypting messages the server sent to you is quite easy. Note that this is only needed for &lt;em&gt;binary&lt;/em&gt; messages, all JSON you receive stays plain. The binary messages always have 32 bytes at the beginning that specify the HMAC checksum. Both JSON &lt;em&gt;and&lt;/em&gt; binary messages have a message tag at their very start that can be discarded, i.e. only the portion after the first comma character is significant.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Validate the message by hashing the actual message content with the &lt;code&gt;macKey&lt;/code&gt; (here &lt;code&gt;messageContent&lt;/code&gt; is the &lt;em&gt;entire&lt;/em&gt; binary message): &lt;code&gt;HmacSha256(macKey, messageContent[32:])&lt;/code&gt;. If this value is not equal to &lt;code&gt;messageContent[:32]&lt;/code&gt;, the message sent to you by the server is invalid and should be discarded.&lt;/li&gt; 
 &lt;li&gt;Decrypt the message content using AES and the &lt;code&gt;encKey&lt;/code&gt;: &lt;code&gt;AESDecrypt(encKey, messageContent[32:])&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The data you get in the final step has a binary format which is described in the following. Even though it&#39;s binary, you can still see several strings in it, especially the content of messages you sent is quite obvious there.&lt;/p&gt; 
&lt;h2&gt;Binary message format&lt;/h2&gt; 
&lt;h3&gt;Binary decoding&lt;/h3&gt; 
&lt;p&gt;The Python script &lt;code&gt;backend/decoder.py&lt;/code&gt; implements the &lt;code&gt;MessageParser&lt;/code&gt; class. It is able to create a JSON structure out of binary data in which the data is still organized in a rather messy way. The section about Node Handling below will discuss how the nodes are reorganized afterwards.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;MessageParser&lt;/code&gt; initially just needs some data and then processes it byte by byte, i.e. as a stream. It has a couple of constants and a lot of methods which all build on each other.&lt;/p&gt; 
&lt;h4&gt;Constants&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Tags&lt;/em&gt; with their respective integer values 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;LIST_EMPTY&lt;/em&gt;: 0&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;STREAM_8&lt;/em&gt;: 2&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;DICTIONARY_0&lt;/em&gt;: 236&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;DICTIONARY_1&lt;/em&gt;: 237&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;DICTIONARY_2&lt;/em&gt;: 238&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;DICTIONARY_3&lt;/em&gt;: 239&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;LIST_8&lt;/em&gt;: 248&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;LIST_16&lt;/em&gt;: 249&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;JID_PAIR&lt;/em&gt;: 250&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;HEX_8&lt;/em&gt;: 251&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_8&lt;/em&gt;: 252&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_20&lt;/em&gt;: 253&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_32&lt;/em&gt;: 254&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;NIBBLE_8&lt;/em&gt;: 255&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Tokens&lt;/em&gt; are a long list of 151 strings in which the indices matter: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;[None,None,None,&quot;200&quot;,&quot;400&quot;,&quot;404&quot;,&quot;500&quot;,&quot;501&quot;,&quot;502&quot;,&quot;action&quot;,&quot;add&quot;, &quot;after&quot;,&quot;archive&quot;,&quot;author&quot;,&quot;available&quot;,&quot;battery&quot;,&quot;before&quot;,&quot;body&quot;, &quot;broadcast&quot;,&quot;chat&quot;,&quot;clear&quot;,&quot;code&quot;,&quot;composing&quot;,&quot;contacts&quot;,&quot;count&quot;, &quot;create&quot;,&quot;debug&quot;,&quot;delete&quot;,&quot;demote&quot;,&quot;duplicate&quot;,&quot;encoding&quot;,&quot;error&quot;, &quot;false&quot;,&quot;filehash&quot;,&quot;from&quot;,&quot;g.us&quot;,&quot;group&quot;,&quot;groups_v2&quot;,&quot;height&quot;,&quot;id&quot;, &quot;image&quot;,&quot;in&quot;,&quot;index&quot;,&quot;invis&quot;,&quot;item&quot;,&quot;jid&quot;,&quot;kind&quot;,&quot;last&quot;,&quot;leave&quot;, &quot;live&quot;,&quot;log&quot;,&quot;media&quot;,&quot;message&quot;,&quot;mimetype&quot;,&quot;missing&quot;,&quot;modify&quot;,&quot;name&quot;, &quot;notification&quot;,&quot;notify&quot;,&quot;out&quot;,&quot;owner&quot;,&quot;participant&quot;,&quot;paused&quot;, &quot;picture&quot;,&quot;played&quot;,&quot;presence&quot;,&quot;preview&quot;,&quot;promote&quot;,&quot;query&quot;,&quot;raw&quot;, &quot;read&quot;,&quot;receipt&quot;,&quot;received&quot;,&quot;recipient&quot;,&quot;recording&quot;,&quot;relay&quot;, &quot;remove&quot;,&quot;response&quot;,&quot;resume&quot;,&quot;retry&quot;,&quot;s.whatsapp.net&quot;,&quot;seconds&quot;, &quot;set&quot;,&quot;size&quot;,&quot;status&quot;,&quot;subject&quot;,&quot;subscribe&quot;,&quot;t&quot;,&quot;text&quot;,&quot;to&quot;,&quot;true&quot;, &quot;type&quot;,&quot;unarchive&quot;,&quot;unavailable&quot;,&quot;url&quot;,&quot;user&quot;,&quot;value&quot;,&quot;web&quot;,&quot;width&quot;, &quot;mute&quot;,&quot;read_only&quot;,&quot;admin&quot;,&quot;creator&quot;,&quot;short&quot;,&quot;update&quot;,&quot;powersave&quot;, &quot;checksum&quot;,&quot;epoch&quot;,&quot;block&quot;,&quot;previous&quot;,&quot;409&quot;,&quot;replaced&quot;,&quot;reason&quot;, &quot;spam&quot;,&quot;modify_tag&quot;,&quot;message_info&quot;,&quot;delivery&quot;,&quot;emoji&quot;,&quot;title&quot;, &quot;description&quot;,&quot;canonical-url&quot;,&quot;matched-text&quot;,&quot;star&quot;,&quot;unstar&quot;, &quot;media_key&quot;,&quot;filename&quot;,&quot;identity&quot;,&quot;unread&quot;,&quot;page&quot;,&quot;page_count&quot;, &quot;search&quot;,&quot;media_message&quot;,&quot;security&quot;,&quot;call_log&quot;,&quot;profile&quot;,&quot;ciphertext&quot;, &quot;invite&quot;,&quot;gif&quot;,&quot;vcard&quot;,&quot;frequent&quot;,&quot;privacy&quot;,&quot;blacklist&quot;,&quot;whitelist&quot;, &quot;verify&quot;,&quot;location&quot;,&quot;document&quot;,&quot;elapsed&quot;,&quot;revoke_invite&quot;,&quot;expiration&quot;, &quot;unsubscribe&quot;,&quot;disable&quot;]&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Number reformatting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Unpacking nibbles&lt;/em&gt;: Returns the ASCII representation for numbers between 0 and 9. Returns &lt;code&gt;-&lt;/code&gt; for 10, &lt;code&gt;.&lt;/code&gt; for 11 and &lt;code&gt;\0&lt;/code&gt; for 15.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Unpacking hex values&lt;/em&gt;: Returns the ASCII representation for numbers between 0 and 9 or letters between A and F (i.e. uppercase) for numbers between 10 and 15.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Unpacking bytes&lt;/em&gt;: Expects a tag as an additional parameter, namely &lt;em&gt;NIBBLE_8&lt;/em&gt; or &lt;em&gt;HEX_8&lt;/em&gt;. Unpacks a nibble or hex value accordingly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Number formats&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Byte&lt;/em&gt;: A plain ol&#39; byte.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Integer with N bytes&lt;/em&gt;: Reads N bytes and builds a number out of them. Can be little or big endian; if not specified otherwise, big endian is used. Note that no negative values are possible.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Int16&lt;/em&gt;: An integer with two bytes, read using &lt;em&gt;Integer with N bytes&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Int20&lt;/em&gt;: Consumes three bytes and constructs an integer using the last four bits of the first byte and the entire second and third byte. Is therefore always big endian.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Int32&lt;/em&gt;: An integer with four bytes, read using &lt;em&gt;Integer with N bytes&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Int64&lt;/em&gt;: An integer with eight bytes, read using &lt;em&gt;Integer with N bytes&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Packed8&lt;/em&gt;: Expects a tag as an additional parameter, namely &lt;em&gt;NIBBLE_8&lt;/em&gt; or &lt;em&gt;HEX_8&lt;/em&gt;. Returns a string. 
  &lt;ul&gt; 
   &lt;li&gt;First reads a byte &lt;code&gt;n&lt;/code&gt; and does the following &lt;code&gt;n&amp;amp;127&lt;/code&gt; many times: Reads a byte &lt;code&gt;l&lt;/code&gt; and for each nibble, adds the result of its &lt;em&gt;unpacked version&lt;/em&gt; to the return value (using &lt;em&gt;unpacking bytes&lt;/em&gt; with the given tag). Most significant nibble first.&lt;/li&gt; 
   &lt;li&gt;If the most significant bit of &lt;code&gt;n&lt;/code&gt; was set, removes the last character of the return value.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Helper methods&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Read bytes&lt;/em&gt;: Reads and returns the specified number of bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Check for list tag&lt;/em&gt;: Expects a tag as parameter and returns true if the tag is &lt;code&gt;LIST_EMPTY&lt;/code&gt;, &lt;code&gt;LIST_8&lt;/code&gt; or &lt;code&gt;LIST_16&lt;/code&gt; (i.e. 0, 248 or 249).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Read list size&lt;/em&gt;: Expects a list tag as parameter. Returns 0 for &lt;code&gt;LIST_EMPTY&lt;/code&gt;, returns a read byte for &lt;code&gt;LIST_8&lt;/code&gt; or a read &lt;em&gt;Int16&lt;/em&gt; for &lt;code&gt;LIST_16&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Read a string from characters&lt;/em&gt;: Expects the string length as parameter, reads this many bytes and returns them as a string.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Get a token&lt;/em&gt;: Expects an index to the array of &lt;em&gt;Tokens&lt;/em&gt;, and returns the respective string.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Get a double token&lt;/em&gt;: Expects two integers &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and gets the token at index &lt;code&gt;a*256+b&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Strings&lt;/h4&gt; 
&lt;p&gt;Reading a string needs a &lt;em&gt;tag&lt;/em&gt; as parameter. Depending on this tag, different data is read.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the tag is between 3 and 235, the &lt;em&gt;token&lt;/em&gt; (i.e. a string) of this tag is got. If the token is &lt;code&gt;&quot;s.whatsapp.net&quot;&lt;/code&gt;, &lt;code&gt;&quot;c.us&quot;&lt;/code&gt; is returned instead, otherwise the token is returned as is.&lt;/li&gt; 
 &lt;li&gt;If the tag is between &lt;em&gt;DICTIONARY_0&lt;/em&gt; and &lt;em&gt;DICTIONARY_3&lt;/em&gt;, a &lt;em&gt;double token&lt;/em&gt; is returned, with &lt;code&gt;tag-DICTIONARY_0&lt;/code&gt; as first and a read byte as second parameter.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;LIST_EMPTY&lt;/em&gt;: Nothing is returned (e.g. &lt;code&gt;None&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;BINARY_8&lt;/em&gt;: A byte is read which is then used to &lt;em&gt;read a string from characters&lt;/em&gt; with this length.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;BINARY_20&lt;/em&gt;: An &lt;em&gt;Int20&lt;/em&gt; is read which is then used to &lt;em&gt;read a string from characters&lt;/em&gt; with this length.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;BINARY_32&lt;/em&gt;: An &lt;em&gt;Int32&lt;/em&gt; is read which is then used to &lt;em&gt;read a string from characters&lt;/em&gt; with this length.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;JID_PAIR&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;First, a byte is read which is then used to &lt;em&gt;read a string&lt;/em&gt; &lt;code&gt;i&lt;/code&gt; with this tag.&lt;/li&gt; 
   &lt;li&gt;Second, another byte is read which is then used to &lt;em&gt;read a string&lt;/em&gt; &lt;code&gt;j&lt;/code&gt; with this tag.&lt;/li&gt; 
   &lt;li&gt;Finally, &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; are joined together with an &lt;code&gt;@&lt;/code&gt; sign and the result is returned.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;NIBBLE_8&lt;/em&gt; or &lt;em&gt;HEX_8&lt;/em&gt;: A &lt;em&gt;Packed8&lt;/em&gt; with this tag is returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Attribute lists&lt;/h4&gt; 
&lt;p&gt;Reading an attribute list needs the number of attributes to read as parameter. An attribute list is always a JSON object. For each attribute read, the following steps are executed for getting key-value pairs (exactly in this order!):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Key&lt;/em&gt;: A byte is read which is then used to &lt;em&gt;read a string&lt;/em&gt; with this tag.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Value&lt;/em&gt;: A byte is read which is then used to &lt;em&gt;read a string&lt;/em&gt; with this tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Nodes&lt;/h4&gt; 
&lt;p&gt;A node always consists of a JSON array with exactly three entries: description, attributes and content. The following steps are needed to read a node:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A &lt;em&gt;list size&lt;/em&gt; &lt;code&gt;a&lt;/code&gt; is read by using a read byte as the tag. The list size 0 is invalid.&lt;/li&gt; 
 &lt;li&gt;The description tag is read as a byte. The value 2 is invalid for this tag. The description string &lt;code&gt;descr&lt;/code&gt; is then obtained by &lt;em&gt;reading a string&lt;/em&gt; with this tag.&lt;/li&gt; 
 &lt;li&gt;The attributes object &lt;code&gt;attrs&lt;/code&gt; is read by &lt;em&gt;reading an attributes object&lt;/em&gt; with length &lt;code&gt;(a-2 + a%2) &amp;gt;&amp;gt; 1&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;a&lt;/code&gt; was odd, this node does not have any content, i.e. &lt;code&gt;[descr, attrs, None]&lt;/code&gt; is returned.&lt;/li&gt; 
 &lt;li&gt;For getting the node&#39;s content, first a byte, i.e. a tag is read. Depending on this tag, different types of content emerge: 
  &lt;ul&gt; 
   &lt;li&gt;If the tag is a &lt;em&gt;list tag&lt;/em&gt;, a &lt;em&gt;list is read&lt;/em&gt; using this tag (see below for lists).&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_8&lt;/em&gt;: A byte is read which is then used as length for &lt;em&gt;reading bytes&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_20&lt;/em&gt;: An &lt;em&gt;Int20&lt;/em&gt; is read which is then used as length for &lt;em&gt;reading bytes&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;BINARY_32&lt;/em&gt;: An &lt;em&gt;Int32&lt;/em&gt; is read which is then used as length for &lt;em&gt;reading bytes&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;If the tag is something else, a &lt;em&gt;string is read&lt;/em&gt; using this tag.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Eventually, &lt;code&gt;[descr, attrs, content]&lt;/code&gt; is returned.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Lists&lt;/h4&gt; 
&lt;p&gt;Reading a list requires a &lt;em&gt;list tag&lt;/em&gt; (i.e. &lt;em&gt;LIST_EMPTY&lt;/em&gt;, &lt;em&gt;LIST_8&lt;/em&gt; or &lt;em&gt;LIST_16&lt;/em&gt;). The length of the list is then obtained by &lt;em&gt;reading a list size&lt;/em&gt; using this tag. For each list entry, a &lt;em&gt;node is read&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Node Handling&lt;/h3&gt; 
&lt;p&gt;After a binary message has been transformed into JSON, it is still rather hard to read. That&#39;s why, internally, WhatsApp Web completely retransforms this structure into something that can be easily processed and eventually translated into user interface content. This section will deal with this and awaits completion.&lt;/p&gt; 
&lt;h2&gt;Binary conversation format&lt;/h2&gt; 
&lt;p&gt;When a node has been read, the contents of messages that have been actually sent by the user (i.e. text, image, audio, video etc.) are still not directly visible or accessible via the JSON. Instead, they are kept in a protobuf message. See &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/doc/spec/def.proto&quot;&gt;here&lt;/a&gt; for the definitions. The &quot;wrapper&quot; message type is &lt;code&gt;WebMessageInfo&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;WhatsApp Web API&lt;/h2&gt; 
&lt;p&gt;WhatsApp Web itself has an interesting API as well. You can even try it out directly in your browser. Just log in at the normal &lt;a href=&quot;https://web.whatsapp.com/&quot;&gt;https://web.whatsapp.com/&lt;/a&gt;, then open the browser development console. Now enter something like the following (see below for details on the chat identification):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;window.Store.Wap.profilePicFind(&quot;49123456789@c.us&quot;).then(res =&amp;gt; console.log(res));&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;window.Store.Wap.lastseenFind(&quot;49123456789@c.us&quot;).then(res =&amp;gt; console.log(res));&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;window.Store.Wap.statusFind(&quot;49123456789@c.us&quot;).then(res =&amp;gt; console.log(res));&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Using the amazing Chrome developer console, you can see that &lt;code&gt;window.Store.Wap&lt;/code&gt; contains a lot of other very interesting functions. Many of them return JavaScript promises. When you click on the &lt;em&gt;Network&lt;/em&gt; tab and then on &lt;em&gt;WS&lt;/em&gt; (maybe you need to reload the site first), you can look at all the communication between WhatsApp Web and its servers.&lt;/p&gt; 
&lt;h3&gt;Chat identification / JID&lt;/h3&gt; 
&lt;p&gt;The WhatsApp Web API uses the following formats to identify chats with individual users and groups of multiple users.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chats&lt;/strong&gt;: &lt;code&gt;[country code][number]@c.us&lt;/code&gt;, e.g. &lt;strong&gt;&lt;code&gt;49123456789@c.us&lt;/code&gt;&lt;/strong&gt; when you are from Germany and your phone number is &lt;code&gt;0123 456789&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Groups&lt;/strong&gt;: &lt;code&gt;[phone number of group creator]-[timestamp of group creation]@g.us&lt;/code&gt;, e.g. &lt;strong&gt;&lt;code&gt;49123456789-1509911919@g.us&lt;/code&gt;&lt;/strong&gt; for the group that &lt;code&gt;49123456789@c.us&lt;/code&gt; created on November 5 2017.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Broadcast Channels&lt;/strong&gt; &lt;code&gt;[timestamp of broadcast channel creation]@broadcast&lt;/code&gt;, e.g. &lt;strong&gt;&lt;code&gt;1509911919@broadcast&lt;/code&gt;&lt;/strong&gt; for an broadcast channel created on November 5 2017.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;WebSocket messages&lt;/h3&gt; 
&lt;p&gt;There are two types of WebSocket messages that are exchanged between server and client. On the one hand, plain JSON that is rather unambiguous (especially for the API calls above), on the other hand encrypted binary messages.&lt;/p&gt; 
&lt;p&gt;Unfortunately, these binary ones cannot be looked at using the Chrome developer tools. Additionally, the Python backend, that of course also receives these messages, needs to decrypt them, as they contain encrypted data. The section about encryption details discusses how it can be decrypted.&lt;/p&gt; 
&lt;h2&gt;Dealing with E2E media&lt;/h2&gt; 
&lt;h3&gt;Encryption&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate your own &lt;code&gt;mediaKey&lt;/code&gt;, which needs to be 32 bytes.&lt;/li&gt; 
 &lt;li&gt;Expand it to 112 bytes using HKDF with type-specific application info (see below). Call this value &lt;code&gt;mediaKeyExpanded&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Split &lt;code&gt;mediaKeyExpanded&lt;/code&gt; into: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;iv&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[:16]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cipherKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[16:48]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;macKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[48:80]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;refKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[80:]&lt;/code&gt; (not used)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Encrypt the file with AES-CBC using &lt;code&gt;cipherKey&lt;/code&gt; and &lt;code&gt;iv&lt;/code&gt;, pad it and call it &lt;code&gt;enc&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Sign &lt;code&gt;iv + enc&lt;/code&gt; with &lt;code&gt;macKey&lt;/code&gt; using HMAC SHA-256 and store the first 10 bytes of the hash as &lt;code&gt;mac&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Hash the file with SHA-256 and store it as &lt;code&gt;fileSha256&lt;/code&gt;, hash the &lt;code&gt;enc + mac&lt;/code&gt; with SHA-256 and store it as &lt;code&gt;fileEncSha256&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encode the &lt;code&gt;fileEncSha256&lt;/code&gt; with base64 and store it as &lt;code&gt;fileEncSha256B64&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;This step is required only for streamable media, e.g. video and audio. As CBC mode allows to decrypt a data from random offset (block-size aligned), it is possible to play and seek the media without the need to fully download it. That said, we need to generate a &lt;code&gt;sidecar&lt;/code&gt;. Do it by signing every &lt;code&gt;[n*64K, (n+1)*64K+16]&lt;/code&gt; chunk with &lt;code&gt;macKey&lt;/code&gt;, truncating the result to the first 10 bytes. Then combine everything in one piece.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Upload&lt;/h3&gt; 
&lt;ol start=&quot;8&quot;&gt; 
 &lt;li&gt;Retrieve the upload-url by sending &lt;code&gt;messageTag,[&quot;action&quot;, &quot;encr_upload&quot;, filetype, fileEncSha256B64]&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;filetype&lt;/code&gt; can be one of &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;audio&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;video&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Create a multipart-form with the following fields: 
  &lt;ul&gt; 
   &lt;li&gt;fieldname: &lt;code&gt;hash&lt;/code&gt;: &lt;code&gt;fileEncSha256B64&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;fieldname: &lt;code&gt;file&lt;/code&gt;, filename: &lt;code&gt;blob&lt;/code&gt;: &lt;code&gt;enc+mac&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Do a POST request to the url with query string &lt;code&gt;?f=j&lt;/code&gt; and the correct &lt;code&gt;content-type&lt;/code&gt; and the multipart-form, WhatsApp will respond with the download url for the file.&lt;/li&gt; 
 &lt;li&gt;All relevant information to send the file are now generated, just build the proto and send it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Decryption&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Obtain &lt;code&gt;mediaKey&lt;/code&gt; and decode it from Base64 if necessary.&lt;/li&gt; 
 &lt;li&gt;Expand it to 112 bytes using HKDF with type-specific application info (see below). Call this value &lt;code&gt;mediaKeyExpanded&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Split &lt;code&gt;mediaKeyExpanded&lt;/code&gt; into: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;iv&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[:16]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cipherKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[16:48]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;macKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[48:80]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;refKey&lt;/code&gt;: &lt;code&gt;mediaKeyExpanded[80:]&lt;/code&gt; (not used)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download media data from the &lt;code&gt;url&lt;/code&gt; and split it into: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;file&lt;/code&gt;: &lt;code&gt;mediaData[:-10]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mac&lt;/code&gt;: &lt;code&gt;mediaData[-10:]&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Validate media data with HMAC by signing &lt;code&gt;iv + file&lt;/code&gt; with &lt;code&gt;macKey&lt;/code&gt; using SHA-256. Take in mind that &lt;code&gt;mac&lt;/code&gt; is truncated to 10 bytes, so you should compare only the first 10 bytes.&lt;/li&gt; 
 &lt;li&gt;Decrypt &lt;code&gt;file&lt;/code&gt; with AES-CBC using &lt;code&gt;cipherKey&lt;/code&gt; and &lt;code&gt;iv&lt;/code&gt;, and unpad it. Note that this means that your session&#39;s keys (i.e. &lt;code&gt;encKey&lt;/code&gt; and &lt;code&gt;macKey&lt;/code&gt; from the &lt;em&gt;Key generation&lt;/em&gt; section) are not necessary to decrypt a media file.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Application info for HKDF&lt;/h3&gt; 
&lt;p&gt;Depending on the media type, the literal strings in the right column are the values for the &lt;code&gt;appInfo&lt;/code&gt; parameter from the &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp.py#L37&quot;&gt;&lt;code&gt;HKDF&lt;/code&gt; function&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| Media Type | Application Info | | ---------- | ------------------------ | | IMAGE | &lt;code&gt;WhatsApp Image Keys&lt;/code&gt; | | VIDEO | &lt;code&gt;WhatsApp Video Keys&lt;/code&gt; | | AUDIO | &lt;code&gt;WhatsApp Audio Keys&lt;/code&gt; | | DOCUMENT | &lt;code&gt;WhatsApp Document Keys&lt;/code&gt; |&lt;/p&gt; 
&lt;h2&gt;Extending the web app&#39;s capabilities&lt;/h2&gt; 
&lt;h3&gt;Adding own commands&lt;/h3&gt; 
&lt;p&gt;The message forwarding procedures are rather complex, as there are several layers of websockes involved in the process. For adding your own commands, follow these steps.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;First, decide on what the final destination of your command shall be. To be consistent with the other, please prefix it with &lt;code&gt;backend_&lt;/code&gt; if it&#39;s meant to be received by the Python backend or use &lt;code&gt;api_&lt;/code&gt; if the command is directed to the NodeJS API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now, look at &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/client/js/main.js&quot;&gt;&lt;code&gt;client/js/main.js&lt;/code&gt;&lt;/a&gt;. In &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/client/js/main.js#L214&quot;&gt;line 214&lt;/a&gt;, you can see an instantiation of the &lt;code&gt;BootstrapStep&lt;/code&gt; JavaScript class. It needs the following information:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;websocket&lt;/code&gt;: is probably always the same&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;request.type&lt;/code&gt;: should generally be &lt;code&gt;call&lt;/code&gt;, as this allows a response to be passed back to the command&#39;s sender&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;request.callArgs&lt;/code&gt;: an object which has to contain a &lt;code&gt;command&lt;/code&gt; attribute specifying the name of your command and as many additional key-value-pairs as you want. All of these will be passed to the receiver.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;request.successCondition&lt;/code&gt;: on receiving a response for a call, this shall be a function returning &lt;code&gt;true&lt;/code&gt; when the response is valid/expected. Use the next attribute for specifying code to be executed when the response is valid.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;request.successActor&lt;/code&gt;: when the success condition evaluated to &lt;code&gt;true&lt;/code&gt;, this success actor function is called&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;When the &lt;code&gt;BootstrapStep&lt;/code&gt; object has been constructed, call &lt;code&gt;.run()&lt;/code&gt; for running indefinitely or &lt;code&gt;.run(timeout_ms)&lt;/code&gt; for failing when no response has been received after a specific timeout. The &lt;code&gt;run&lt;/code&gt; function returns a Promise.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Next, edit &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/index.js&quot;&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;/a&gt;. It contains a couple of blocks beginning with &lt;code&gt;clientWebsocket.waitForMessage&lt;/code&gt;. You can copy one of these blocks and edit the parameters. The &lt;code&gt;waitForMessage&lt;/code&gt; function needs the following attributes:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;condition&lt;/code&gt;: when a message is received and this condition evaluates to &lt;code&gt;true&lt;/code&gt; on it, the message will be processed by the following &lt;code&gt;.then(...)&lt;/code&gt; block&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;keepWhenHit&lt;/code&gt;: it is possible for a message handler to be detached immediately after it receives its first fitting message. Control this here. The returned promise&#39;s &lt;code&gt;then&lt;/code&gt; block finally handles a received message. It gets a &lt;code&gt;clientCallRequest&lt;/code&gt; you can call &lt;code&gt;.respond({...})&lt;/code&gt; on to send a JSON response to the caller. If the NodeJS API is not the message&#39;s final destination, you need to instantiate a new &lt;code&gt;BootstrapStep&lt;/code&gt; here which will contact to the Python backend and, after it receives its response, will return it to the original caller.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thus, when you want a message for the backend, now edit &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp-web-backend.py&quot;&gt;&lt;code&gt;backend/whatsapp-web-backend.py&lt;/code&gt;&lt;/a&gt;. In the if-else-compound starting in &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp-web-backend.py#L88&quot;&gt;line 88&lt;/a&gt;, add your own branch for the command name you chose. Then, edit &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp.py&quot;&gt;&lt;code&gt;backend/whatsapp.py&lt;/code&gt;&lt;/a&gt; and add a function similar to &lt;code&gt;generateQRCode&lt;/code&gt; in &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp.py#L223&quot;&gt;line 223&lt;/a&gt;. Just using something like in &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp.py#L230&quot;&gt;&lt;code&gt;getLoginInfo&lt;/code&gt;&lt;/a&gt; may not be enough, as your command may require an asynchronous request to the WhatsApp Web servers. In this case, make sure to add an entry to &lt;code&gt;self.messageQueue&lt;/code&gt; with the message tag you chose and send an appropriate message to &lt;code&gt;self.activeWs&lt;/code&gt;. The servers will respond to your request with a response containing the same tag, thus this is resolved in &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/blob/master/backend/whatsapp.py#L134&quot;&gt;line 134&lt;/a&gt;. Make sure to eventually call &lt;code&gt;pend[&quot;callback&quot;][&quot;func&quot;]({...})&lt;/code&gt; with the JSON object containing your response data to resolve the callback.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Please note, this version is not stable enough to be deployabled in production.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Build docker image&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;docker build . -t whatsapp-web-reveng&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Run your image and redirect front &amp;amp; back ports&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;docker run -p 2019:2019 -p 2018:2018 whatsapp-web-reveng&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Front end (client) at : &lt;a href=&quot;http://localhost:2018/&quot;&gt;http://localhost:2018/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;For server use&lt;/h3&gt; 
&lt;p&gt;The addresses of the websockets used are &quot;localhost&quot; by default. If you want to deploy this docker on your own server and share it, modify the backend websocket address on the front end. &lt;code&gt;client/js/main.js&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let backendInfo = {
    url: &quot;ws://{{your-server-addr}}:2020&quot;,
    timeout: 10000
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Front end (client) at : : &lt;a href=&quot;http://%7B%7Byour-server-addr%7D%7D:2018/&quot;&gt;http://{{your-server-addr}}:2018/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Tasks&lt;/h2&gt; 
&lt;h3&gt;Backend&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[ ] More and more errors start to occur in the binary message decoding. Update this documentation to resemble the changes, then implement them.&lt;/li&gt; 
 &lt;li&gt;[ ] Allow sending messages as well. Of course JSON is easy, but &lt;em&gt;writing&lt;/em&gt; the binary message format needs to start being examined.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web frontend&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[ ] Allow reusing the session after successful login. Probably normal cookies are best for this. See &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/issues/9&quot;&gt;#9&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;[ ] An UI that is not that technical, but rather starts to emulate the actual WhatsApp Web UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[ ] Allow usage on Windows, i.e. entirely fix &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng/issues/16&quot;&gt;#16&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[ ] The &lt;em&gt;Node Handling&lt;/em&gt; section. Could become very long.&lt;/li&gt; 
 &lt;li&gt;[ ] Outsource the different documentation parts into their own files, maybe into the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;This code is in no way affiliated with, authorized, maintained, sponsored or endorsed by WhatsApp or any of its affiliates or subsidiaries. This is an independent and unofficial software. Use at your own risk.&lt;/p&gt; 
&lt;h2&gt;Cryptography Notice&lt;/h2&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ebazhanov/linkedin-skill-assessments-quizzes</title>
      <link>https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes</link>
      <description>&lt;p&gt;Full reference of linkedin skill assessments, linkedin test, questions and answers (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, css, python, machine-learning ...) ответы на квиз, LinkedIn quiz lösungen, linkedin quiz las respuestas&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Linkedin Quiz Answers, Skill Assessments Test&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#contributors-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-221-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository does not pretend to give you all answers for LinkedIn questions, rather it&#39;s a starting guide to help you prepare for the LinkedIn skills quiz and to know what to expect in the main exam or which areas to target in your exam preparations. Should you have found some incorrect answers, or want to contribute your answers, please feel free to create any PR changes - all are welcome!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;:point_right: If you want to improve your skills on another test platform &lt;a href=&quot;https://www.pluralsight.com/product/skill-iq&quot;&gt;&lt;strong&gt;Pluralsight IQ Skill&lt;/strong&gt;&lt;/a&gt; find &lt;strong&gt;questions and answers&lt;/strong&gt; in &lt;strong&gt;@Timo Körner&lt;/strong&gt; &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-test&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| Pluralsight IQ Skill quiz | Status | | ------------------------------------------------------------------------------------------------------------------------ | ----------- | |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angular.md&quot;&gt;Angular&lt;/a&gt;| 18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angularjs.md&quot;&gt;AngularJs&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_big_data.md&quot;&gt;Aws Big Data&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_machine_learning.md&quot;&gt;Aws Machine Learning&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_websites.md&quot;&gt;Building Websites&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_web_apps_with_react.md&quot;&gt;Building Web Apps with React&lt;/a&gt;|18 answers |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/java.md&quot;&gt;Java&lt;/a&gt;|18 answers | |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/javascript.md&quot;&gt;Javascript&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/mysql.md&quot;&gt;Mysql&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/powershell.md&quot;&gt;Powershell&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_core.md&quot;&gt;Python Core&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_analysis.md&quot;&gt;Python Data Analysis&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_applied_data_mining.md&quot;&gt;Python applied Data Mining&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_web_scraping.md&quot;&gt;Python Web Scraping&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_exploratory_data_analysis.md&quot;&gt;Python Exploratory Data Analysis&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_clean_data.md&quot;&gt;Python Clean Data&lt;/a&gt;|18 answers| |&lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_visualization.md&quot;&gt;Python Data Visualization&lt;/a&gt;|18 answers|&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| Linkedin-quiz-questions | | Status | | --------------------------------------------------------------------------------------------------------------------------------------- | ---------------|-------------- | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/adobe-illustrator/adobe-illustrator-quiz.md&quot;&gt;Adobe-Illustrator&lt;/a&gt; | =&amp;gt; 51 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/adobe-photoshop/adobe-photoshop-quiz.md&quot;&gt;Adobe-Photoshop&lt;/a&gt; | =&amp;gt; 36 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/agile-methodologies/agile-methodologies-quiz.md&quot;&gt;Agile Methodologies&lt;/a&gt; | =&amp;gt; 76 questions | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/android/android-quiz.md&quot;&gt;Android&lt;/a&gt; | =&amp;gt; 44 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/angularjs/angularjs-quiz.md&quot;&gt;AngularJs&lt;/a&gt; | =&amp;gt; 15 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/aws/aws-quiz.md&quot;&gt;AWS&lt;/a&gt; | =&amp;gt; 28 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/aws-lambda/aws-lambda-quiz.md&quot;&gt;AWS-Lambda&lt;/a&gt; :fire: | =&amp;gt; 44 questions | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/bash/bash-quiz.md&quot;&gt;Bash&lt;/a&gt; | =&amp;gt; 53 questions | partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/c%23/c-sharp-quiz.md&quot;&gt;C#&lt;/a&gt; | =&amp;gt; 48 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/c%2B%2B/c%2B%2Bquiz.md&quot;&gt;C++&lt;/a&gt; | =&amp;gt; 33 questions | with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/css/css-quiz.md&quot;&gt;CSS&lt;/a&gt; | =&amp;gt; 54 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/django/django-quiz.md&quot;&gt;Django&lt;/a&gt; | =&amp;gt; 48 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/dotnet-framework/dotnet-framework-quiz.md&quot;&gt;.NET Framework&lt;/a&gt; | =&amp;gt; 37 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/git/git-quiz.md&quot;&gt;Git&lt;/a&gt; :star: | =&amp;gt; 90 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/google-analytics/google-analytics-quiz.md&quot;&gt;Google Analytics&lt;/a&gt; | =&amp;gt; 65 questions |answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/google-cloud-platform/gcp-quiz.md&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; | =&amp;gt; 27 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/hadoop/hadoop-quiz.md&quot;&gt;Hadoop&lt;/a&gt; | =&amp;gt; 18 questions |answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/html/html-quiz.md&quot;&gt;HTML&lt;/a&gt; | =&amp;gt; 61 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/java/java-quiz.md&quot;&gt;Java&lt;/a&gt; | =&amp;gt; 64 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/javascript/javascript-quiz.md&quot;&gt;Javascript&lt;/a&gt; | =&amp;gt; 65 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/jquery/jquery-quiz.md&quot;&gt;jQuery&lt;/a&gt; :open_mouth: | =&amp;gt; 50 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/json/json-quiz.md&quot;&gt;JSON&lt;/a&gt; | =&amp;gt; 51 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/machine-learning/machine-learning-quiz.md&quot;&gt;Machine Learning&lt;/a&gt; | =&amp;gt; 67 questions |answers required | | Kotlin | =&amp;gt; 0 questions |NO question and NO answers yet | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/matlab/matlab-quiz.md&quot;&gt;MATLAB&lt;/a&gt; | =&amp;gt; 45 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/maven/maven-quiz.md&quot;&gt;Maven&lt;/a&gt; :fire: | =&amp;gt; 34 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-azure/microsoft-azure-quiz.md&quot;&gt;Microsoft Azure&lt;/a&gt; | =&amp;gt; 44 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-excel/microsoft-excel-quiz.md&quot;&gt;Microsoft Excel&lt;/a&gt; | =&amp;gt; 48 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-power-bi/microsoft-power-bi-quiz.md&quot;&gt;Microsoft Power BI&lt;/a&gt; | =&amp;gt; 26 questions |answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-power-point/microsoft-power-point-quiz.md&quot;&gt;Microsoft Power Point&lt;/a&gt; | =&amp;gt; 21 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-project/microsoft-project-quiz.md&quot;&gt;Microsoft Project&lt;/a&gt; | =&amp;gt; 41 questions |answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/microsoft-word/microsoft-word-quiz.md&quot;&gt;Microsoft Word&lt;/a&gt; | =&amp;gt; 42 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/mongodb/mongodb-quiz.md&quot;&gt;MongoDB&lt;/a&gt; | =&amp;gt; 46 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/mysql/mysql-quiz.md&quot;&gt;MySQL&lt;/a&gt; | =&amp;gt; 64 questions |answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/node.js/node.js-quiz.md&quot;&gt;node.js&lt;/a&gt; | =&amp;gt; 40 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/nosql/nosql-quiz.md&quot;&gt;NoSQL&lt;/a&gt; | =&amp;gt; 43 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/objective-c/objective-c_quiz.md&quot;&gt;objective-c&lt;/a&gt; | =&amp;gt; 33 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/oop/object-oriented-programming-quiz.md&quot;&gt;OOP&lt;/a&gt; | =&amp;gt; 50 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/php/php-quiz.md&quot;&gt;PHP&lt;/a&gt; | =&amp;gt; 29 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/python/python-quiz.md&quot;&gt;Python&lt;/a&gt; | =&amp;gt; 67 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/r/r-quiz.md&quot;&gt;R&lt;/a&gt; | =&amp;gt; 29 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/react/reactjs-quiz.md&quot;&gt;React.js&lt;/a&gt; :rose: | =&amp;gt; 51 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/rest-api/rest-api-quiz.md&quot;&gt;REST API&lt;/a&gt; :+1: | =&amp;gt; 34 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/scala/scala-quiz.md&quot;&gt;Scala&lt;/a&gt; | =&amp;gt; 25 questions | answers required | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/seo/search-engine-optimization-quiz.md&quot;&gt;Search Engine Optimization (SEO)&lt;/a&gt; | =&amp;gt; 30 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/sharepoint/sharepoint-quiz.md&quot;&gt;SharePoint&lt;/a&gt; | =&amp;gt; 29 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/swift/swift-quiz.md&quot;&gt;Swift&lt;/a&gt; | =&amp;gt; 48 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/t-sql/t-sql-quiz.md&quot;&gt;Transact-SQL (T-SQL)&lt;/a&gt; | =&amp;gt; 28 questions |with answers | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/windows-server/windows-server-quiz.md&quot;&gt;Windows Server&lt;/a&gt; | =&amp;gt; 46 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/wordpress/wordpress-quiz.md&quot;&gt;WordPress&lt;/a&gt; | =&amp;gt; 42 questions |partially answered | | &lt;a href=&quot;https://github.com/Ebazhanov/in-quiz-questions/blob/master/xml/xml-quiz.md&quot;&gt;XML&lt;/a&gt; | =&amp;gt; 21 questions |answers required |&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Format&lt;/h2&gt; 
&lt;p&gt;We recommend to format files using &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; code formatter. Prettier comes installed with the IDE &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/code.visualstudio.com&quot;&gt;Vscode&lt;/a&gt; which we recommend for preparing the md files. It works on all OS. If you want to run it independently, get &lt;strong&gt;npm&lt;/strong&gt; and:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments&quot;&gt;&lt;img src=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expressjs/express</title>
      <link>https://github.com/expressjs/express</link>
      <description>&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://expressjs.com/&quot;&gt;&lt;img src=&quot;https://i.cloudup.com/zfY6lL7eFa-3000x3000.png&quot; alt=&quot;Express Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Fast, unopinionated, minimalist web framework for &lt;a href=&quot;http://nodejs.org&quot;&gt;node&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/express&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/express.svg&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/express?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/express.svg&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/expressjs/express&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/expressjs/express/master.svg?label=linux&quot; alt=&quot;Linux Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/dougwilson/express&quot;&gt;&lt;img src=&quot;https://img.shields.io/appveyor/ci/dougwilson/express/master.svg?label=windows&quot; alt=&quot;Windows Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/expressjs/express?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/expressjs/express/master.svg&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const express = require(&#39;express&#39;)
const app = express()

app.get(&#39;/&#39;, function (req, res) {
  res.send(&#39;Hello World&#39;)
})

app.listen(3000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; module available through the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before installing, &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download and install Node.js&lt;/a&gt;. Node.js 0.10 or higher is required.&lt;/p&gt; 
&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href=&quot;https://docs.npmjs.com/creating-a-package-json-file&quot;&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Installation is done using the &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&quot;&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow &lt;a href=&quot;http://expressjs.com/en/starter/installing.html&quot;&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust routing&lt;/li&gt; 
 &lt;li&gt;Focus on high performance&lt;/li&gt; 
 &lt;li&gt;Super-high test coverage&lt;/li&gt; 
 &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; 
 &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; 
 &lt;li&gt;Content negotiation&lt;/li&gt; 
 &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://expressjs.com/&quot;&gt;Website and Documentation&lt;/a&gt; - [&lt;a href=&quot;https://github.com/expressjs/expressjs.com&quot;&gt;website repo&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.freenode.net/?channels=express&quot;&gt;#express&lt;/a&gt; on freenode IRC&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/expressjs&quot;&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href=&quot;https://github.com/expressjs/express/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://groups.google.com/group/express-js&quot;&gt;Google Group&lt;/a&gt; for discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/expressjs/express&quot;&gt;Gitter&lt;/a&gt; for support and discussion&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read &lt;a href=&quot;https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x&quot;&gt;Migrating from 3.x to 4.x&lt;/a&gt; as well as &lt;a href=&quot;https://github.com/expressjs/express/wiki/New-features-in-4.x&quot;&gt;New features in 4.x&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Security Issues&lt;/h3&gt; 
&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href=&quot;https://raw.githubusercontent.com/expressjs/express/master/Security.md&quot;&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href=&quot;https://github.com/expressjs/generator&quot;&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; 
&lt;p&gt;Install the executable. The executable&#39;s major version will match Express&#39;s:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install -g express-generator@4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;View the website at: http://localhost:3000&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; 
&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href=&quot;https://github.com/tj/consolidate.js&quot;&gt;Consolidate.js&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;To view the examples, clone the Express repo and install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone git://github.com/expressjs/express.git --depth 1
$ cd express
$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run whichever example you want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ node examples/content-negotiation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;To run the test suite, first install the dependencies, then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install
$ npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/expressjs/express/master/Contributing.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;People&lt;/h2&gt; 
&lt;p&gt;The original author of Express is &lt;a href=&quot;https://github.com/tj&quot;&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The current lead maintainer is &lt;a href=&quot;https://github.com/dougwilson&quot;&gt;Douglas Christopher Wilson&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/expressjs/express/graphs/contributors&quot;&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/expressjs/express/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | -------------- | ---------------------------- | ----------------------------- | ------------------------------- | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ❤️️ &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 0&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shylocks/Loon</title>
      <link>https://github.com/shylocks/Loon</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;通知频道：&lt;/h2&gt; 
&lt;p&gt;https://t.me/joinchat/V0oxYENmx2PTlY1L&lt;/p&gt; 
&lt;h2&gt;特别声明:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本仓库发布的Script项目中涉及的任何解锁和解密分析脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;shylocks对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, shylocks 对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;请勿将Script项目的任何内容用于商业或非法目的，否则后果自负.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任何以任何方式查``看此项目的人或直接或间接使用该Script项目的任何脚本的使用者都应仔细阅读此声明。shylocks 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或Script项目的规则，则视为您已接受此免责声明.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>hotwired/turbo-rails</title>
      <link>https://github.com/hotwired/turbo-rails</link>
      <description>&lt;p&gt;Turbo gives you the speed of a single-page web application without having to write any JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Turbo&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://turbo.hotwire.dev&quot;&gt;Turbo&lt;/a&gt; gives you the speed of a single-page web application without having to write any JavaScript. Turbo accelerates links and form submissions without requiring you to change your server-side generated HTML. It lets you carve up a page into independent frames, which can be lazy-loaded and operate as independent components. And finally, helps you make partial page updates using just HTML and a set of CRUD-like container tags. These three techniques reduce the amount of custom JavaScript that many web applications need to write by an order of magnitude. And for the few dynamic bits that are left, you&#39;re invited to finish the job with &lt;a href=&quot;https://github.com/hotwired/stimulus&quot;&gt;Stimulus&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;On top of accelerating web applications, Turbo was built from the ground-up to form the foundation of hybrid native applications. Write the navigational shell of your Android or iOS app using the standard platform tooling, then seamlessly fill in features from the web, following native navigation patterns. Not every mobile screen needs to be written in Swift or Kotlin to feel native. With Turbo, you spend less time wrangling JSON, waiting on app stores to approve updates, or reimplementing features you&#39;ve already created in HTML.&lt;/p&gt; 
&lt;p&gt;Turbo is a language-agnostic framework written in TypeScript, but this gem builds on top of those basics to make the integration with Rails as smooth as possible. You can deliver turbo updates via model callbacks over Action Cable, respond to controller actions with native navigation or standard redirects, and render turbo frames with helpers and layout-free responses.&lt;/p&gt; 
&lt;h2&gt;Turbo Drive&lt;/h2&gt; 
&lt;p&gt;Turbo is a continuation of the ideas from the previous Turbolinks framework, and the heart of that past approach lives on as Turbo Drive. When installed, Turbo automatically intercepts all clicks on &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; links to the same domain. When you click an eligible link, Turbo prevents the browser from following it. Instead, Turbo changes the browser’s URL using the History API, requests the new page using &lt;code&gt;fetch&lt;/code&gt;, and then renders the HTML response.&lt;/p&gt; 
&lt;p&gt;During rendering, Turbo replaces the current &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element outright and merges the contents of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element. The JavaScript window and document objects, and the HTML &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, persist from one rendering to the next.&lt;/p&gt; 
&lt;p&gt;Whereas Turbolinks previously just dealt with links, Turbo can now also process form submissions and responses. This means the entire flow in the web application is wrapped into Turbo, making all the parts fast. No more need for &lt;code&gt;data-remote=true&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Turbo Frames&lt;/h2&gt; 
&lt;p&gt;Turbo reinvents the old HTML technique of frames without any of the drawbacks that lead to developers abandoning it. With Turbo Frames, you can treat a subset of the page as its own component, where links and form submissions replace only that part. This removes an entire class of problems around partial interactivity that before would have required custom JavaScript.&lt;/p&gt; 
&lt;p&gt;It also makes it dead easy to carve a single page into smaller pieces that can all live on their own cache timeline. While the bulk of the page might easily be cached between users, a small personalized toolbar perhaps cannot. With Turbo::Frames, you can designate the toolbar as a frame, which will be lazy-loaded automatically by the publicly-cached root page. This means simpler pages, easier caching schemes with fewer dependent keys, and all without needing to write a lick of custom JavaScript.&lt;/p&gt; 
&lt;h2&gt;Turbo Streams&lt;/h2&gt; 
&lt;p&gt;Partial page updates that are delivered asynchronously over a web socket connection is the hallmark of modern, reactive web applications. With Turbo Streams, you can get all of that modern goodness using the existing server-side HTML you&#39;re already rendering to deliver the first page load. With a set of simple CRUD container tags, you can send HTML fragments over the web socket (or in response to direct interactions), and see the page change in response to new data. Again, no need to construct an entirely separate API, no need to wrangle JSON, no need to reimplement the HTML construction in JavaScript. Take the HTML you&#39;re already making, wrap it in an update tag, and, voila, your page comes alive.&lt;/p&gt; 
&lt;p&gt;With this Rails integration, you can create these asynchronous updates directly in response to your model changes. Turbo uses Active Jobs to provide asynchronous partial rendering and Action Cable to deliver those updates to subscribers.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The JavaScript for Turbo can either be run through the asset pipeline, which is included with this gem, or through the package that lives on NPM, through Webpacker.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add the &lt;code&gt;turbo-rails&lt;/code&gt; gem to your Gemfile: &lt;code&gt;gem &#39;turbo-rails&#39;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;./bin/bundle install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;./bin/rails turbo:install&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Running &lt;code&gt;turbo:install&lt;/code&gt; will install through NPM if Webpacker is installed in the application. Otherwise the asset pipeline version is used.&lt;/p&gt; 
&lt;p&gt;If you&#39;re using Webpack and need to use either the cable consumer or the Turbo instance, you can import &lt;a href=&quot;https://turbo.hotwire.dev/reference/drive&quot;&gt;&lt;code&gt;Turbo&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://github.com/hotwired/turbo-rails/blob/main/app/javascript/turbo/cable.js&quot;&gt;&lt;code&gt;cable&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;import { Turbo, cable } from &quot;@hotwired/turbo-rails&quot;&lt;/code&gt;), but ensure that your application actually &lt;em&gt;uses&lt;/em&gt; the members it &lt;code&gt;import&lt;/code&gt;s when using this style (see &lt;a href=&quot;https://github.com/hotwired/turbo-rails/issues/48&quot;&gt;turbo-rails#48&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;If you&#39;re using a &lt;a href=&quot;https://turbo.hotwire.dev/handbook/native&quot;&gt;native adapter&lt;/a&gt;, you&#39;ll need to assign &lt;code&gt;window.Turbo&lt;/code&gt;, even if it&#39;s not used for anything else:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { Turbo } from &quot;@hotwired/turbo-rails&quot;
window.Turbo = Turbo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You can watch &lt;a href=&quot;https://hotwire.dev/#screencast&quot;&gt;the video introduction to Hotwire&lt;/a&gt;, which focuses extensively on demonstration Turbo in a Rails demo. Then you should familiarize yourself with &lt;a href=&quot;https://turbo.hotwire.dev/handbook/introduction&quot;&gt;Turbo handbook&lt;/a&gt; to understand Drive, Frames, and Streams in-depth. Finally, dive into the code documentation by starting with &lt;a href=&quot;https://github.com/hotwired/turbo-rails/blob/main/app/helpers/turbo/frames_helper.rb&quot;&gt;&lt;code&gt;Turbo::FramesHelper&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/hotwired/turbo-rails/blob/main/app/helpers/turbo/streams_helper.rb&quot;&gt;&lt;code&gt;Turbo::StreamsHelper&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/hotwired/turbo-rails/blob/main/app/models/turbo/streams/tag_builder.rb&quot;&gt;&lt;code&gt;Turbo::Streams::TagBuilder&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/hotwired/turbo-rails/blob/main/app/models/concerns/turbo/broadcastable.rb&quot;&gt;&lt;code&gt;Turbo::Broadcastable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Compatibility with Rails UJS&lt;/h2&gt; 
&lt;p&gt;Rails UJS includes helpers for sending links and forms over XMLHttpRequest, so you can respond with Ajax. Turbo supersedes this functionality, so you should ensure that you&#39;re either running Rails 6.1 with the defaults that turn this off for forms, or that you add &lt;code&gt;config.action_view.form_with_generates_remote_forms = false&lt;/code&gt; to your &lt;code&gt;config/application.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that the helpers that turn &lt;code&gt;link_to&lt;/code&gt; into remote invocations will &lt;em&gt;not&lt;/em&gt; currently work with Turbo. Links that have been made remote will not stick within frames nor will they allow you to respond with turbo stream actions. The recommendation is to replace these links with styled &lt;code&gt;button_to&lt;/code&gt;, so you&#39;ll flow through a regular form, and you&#39;ll be better off with a11y compliance.&lt;/p&gt; 
&lt;p&gt;You can still use the &lt;code&gt;data-confirm&lt;/code&gt; and &lt;code&gt;data-disable-with&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run the Rails tests: &lt;code&gt;bundle exec rake&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To compile the JavaScript for the asset pipeline: &lt;code&gt;yarn build&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Turbo is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blackmatrix7/ios_rule_script</title>
      <link>https://github.com/blackmatrix7/ios_rule_script</link>
      <description>&lt;p&gt;iOS平台的分流规则、复写规则和一些自动化脚本。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iOS Rules And Scripts&lt;/h1&gt; 
&lt;h2&gt;前言&lt;/h2&gt; 
&lt;p&gt;iOS平台的分流规则、复写规则及自动化脚本。&lt;/p&gt; 
&lt;h2&gt;特别声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;编写本项目主要目的为学习和研究ES6，无法保证项目内容的合法性、准确性、完整性和有效性。&lt;/li&gt; 
 &lt;li&gt;本项目涉及的数据由使用的个人或组织自行填写，本项目不对数据内容负责，包括但不限于数据的真实性、准确性、合法性。使用本项目所造成的一切后果，与本项目的所有贡献者无关，由使用的个人或组织完全承担。&lt;/li&gt; 
 &lt;li&gt;本项目中涉及的第三方硬件、软件等，与本项目没有任何直接或间接的关系。本项目仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本项目无关。&lt;/li&gt; 
 &lt;li&gt;本项目中所有内容只供学习和研究使用，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; 
 &lt;li&gt;所有基于本项目源代码，进行的任何修改，为其他个人或组织的自发行为，与本项目没有任何直接或间接的关系，所造成的一切后果亦与本项目无关。&lt;/li&gt; 
 &lt;li&gt;所有直接或间接使用本项目的个人和组织，应24小时内完成学习和研究，并及时删除本项目中的所有内容。如对本项目的功能有需求，应自行开发相关功能。&lt;/li&gt; 
 &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;规则&lt;/h2&gt; 
&lt;p&gt;本项目中的分流规则与复写规则由爬虫程序，定时爬取互联网上开源项目数据，经过清洗、去重、合并、优化后，形成单一的分流规则文件，旨在解决引用大量外部规则造成规则重复的问题。&lt;/p&gt; 
&lt;p&gt;同时提供本项目中不同分流规则的重复情况检查，便于在配置中精确选取所需的分流规则。更详细的内容，请访问每个规则目录下的README。&lt;/p&gt; 
&lt;p&gt;感谢所有开源规则项目作者的辛勤付出。&lt;/p&gt; 
&lt;p&gt;分流规则&lt;/p&gt; 
&lt;p&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rule&lt;/p&gt; 
&lt;p&gt;复写规则&lt;/p&gt; 
&lt;p&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite&lt;/p&gt; 
&lt;h2&gt;脚本&lt;/h2&gt; 
&lt;h3&gt;支持情况&lt;/h3&gt; 
&lt;p&gt;自动化脚本在不同平台支持情况：&lt;/p&gt; 
&lt;p&gt;| | Surge | Quantumult X | Loon | Shadowrocket | JSBox | Node.js | | -------- | ----------- | ------------ | ----------- | ------------ | ----------- | ---------------- | | 需要硬件 | iPhone/iPad | iPhone/iPad | iPhone/iPad | iPhone/iPad | iPhone/iPad | 可长期运行的电脑 | | 脚本更新 | 自动更新 | 自动更新 | 自动更新 | 自动更新 | 手动更新 | 手动更新 | | 推送通知 | 手机推送 | 手机推送 | 手机推送 | 手机推送 | 手机推送 | 无 | | 使用成本 | 付费App | 付费App | 付费App | 付费App | 付费App | 免费 | | 支持情况 | 优先支持 | 兼容支持 | 兼容支持 | 随缘支持 | 部分支持 | 部分支持 |&lt;/p&gt; 
&lt;p&gt;优先支持：优先确保运行正常，出现异常优先解决&lt;/p&gt; 
&lt;p&gt;兼容支持：代码层面做兼容，会做测试&lt;/p&gt; 
&lt;p&gt;随缘支持：代码层面做兼容，偶尔做测试&lt;/p&gt; 
&lt;p&gt;部分支持：代码层面做兼容，部分功能可用，不做测试&lt;/p&gt; 
&lt;p&gt;支持优先级：Surge &amp;gt; Quantumult X &amp;gt; Loon &amp;gt; Shadowrocket ≥ JSBox &amp;gt; Node.js&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;项目中含有部分搬运其他作者的脚本，没办法进行任何支持、维护和解答，有问题请联系原作者。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;脚本说明&lt;/h3&gt; 
&lt;p&gt;部分脚本介绍：&lt;/p&gt; 
&lt;p&gt;| 脚本 | 介绍 | 维护状态 | | ------------------------------------------------------------ | ------------------------------------------------------------ | -------- | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/zhihu&quot;&gt;知乎助手&lt;/a&gt; | 使用纯净版知乎是一种怎么样的体验？ | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/bilibili&quot;&gt;哔哩哔哩&lt;/a&gt; | 没有广告的哔哩哔哩更值得干杯 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/smzdm&quot;&gt;什么值得买&lt;/a&gt; | 什么值得买签到和去广告脚本 | 暂停 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/tieba&quot;&gt;百度贴吧&lt;/a&gt; | 带重试功能的贴吧签到，提高签到成功率 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/10010&quot;&gt;联通手机营业厅&lt;/a&gt; | 每日自动签到、美团外卖30-3优惠券、4次抽奖、话费流量语音情况推送 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/lxj&quot;&gt;联享家&lt;/a&gt; | 去广告、拦截检测更新 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/startup&quot;&gt;开屏去广告&lt;/a&gt; | 通过脚本去除缓存到本地的APP开屏广告 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/didachuxing&quot;&gt;嘀嗒出行&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/didichuxing&quot;&gt;滴滴出行&lt;/a&gt; | 每日自动签到、福利金抽奖、天天有奖签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/jiazhangbang&quot;&gt;家长帮&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/manmanbuy&quot;&gt;慢慢买&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/youpin&quot;&gt;小米有品&lt;/a&gt; | 每日自动签到 | 停止 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/dingdong&quot;&gt;叮咚买菜&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/wanda&quot;&gt;万达电影&lt;/a&gt; | 每日自动签到，月末将剩余能量抽奖 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/eleme&quot;&gt;饿了么&lt;/a&gt; | 每日自动领取会员任务 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/famijia&quot;&gt;Fa米家&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/luka&quot;&gt;Luka&lt;/a&gt; | 每日自动签到 | 正常 | | &lt;a href=&quot;https://github.com/blackmatrix7/ios_rule_script/tree/master/script/meituan&quot;&gt;美团买菜&lt;/a&gt; | 每日自动签到 | 正常 |&lt;/p&gt; 
&lt;h4&gt;Quantumult X Gallery&lt;/h4&gt; 
&lt;p&gt;部分脚本已配置为Quantumult X Gallery。&lt;/p&gt; 
&lt;p&gt;地址： https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json&lt;/p&gt; 
&lt;h3&gt;其他来源&lt;/h3&gt; 
&lt;p&gt;项目中部分脚本来自互联网上其他开源项目（具体以不同目录的README为准），这里主要进行一些定制化修改、整合和备份。&lt;/p&gt; 
&lt;p&gt;来自其他开源项目的脚本，通常：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;会在README或注释里说明&lt;/li&gt; 
 &lt;li&gt;只有一个扩展名为.sgmodule的文件&lt;/li&gt; 
 &lt;li&gt;配置文件中引用的js为其他Github&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Binaryify/NeteaseCloudMusicApi</title>
      <link>https://github.com/Binaryify/NeteaseCloudMusicApi</link>
      <description>&lt;p&gt;网易云音乐 Node.js API service&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;网易云音乐 API&lt;/h1&gt; 
&lt;p&gt;网易云音乐 Node.js API service&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;灵感来自&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/disoul/electron-cloud-music&quot;&gt;disoul/electron-cloud-music&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/darknessomi/musicbox&quot;&gt;darknessomi/musicbox&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sqaiyan/netmusic-node&quot;&gt;sqaiyan/netmusic-node&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/greats3an/pyncm&quot;&gt;greats3an/pyncm&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;环境要求&lt;/h2&gt; 
&lt;p&gt;需要 NodeJS 8.12+ 环境&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;
$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git 

$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;或者&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git

$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;运行&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;服务器启动默认端口为 3000,若不想使用 3000 端口,可使用以下命令: Mac/Linux&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ PORT=4000 node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;windows 下使用 git-bash 或者 cmder 等终端执行以下命令:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ set PORT=4000 &amp;amp;&amp;amp; node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;可以在Node.js调用&lt;/h2&gt; 
&lt;p&gt;v3.31.0后支持Node.js调用,导入的方法为&lt;code&gt;module&lt;/code&gt;内的文件名,返回内容包含&lt;code&gt;status&lt;/code&gt;和&lt;code&gt;body&lt;/code&gt;,&lt;code&gt;status&lt;/code&gt;为状态码,&lt;code&gt;body&lt;/code&gt;为请求返回内容,参考&lt;code&gt;module_example&lt;/code&gt; 文件夹下的 &lt;code&gt;test.js&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { login_cellphone, user_cloud } = require(&#39;NeteaseCloudMusicApi&#39;)
async function main() {
  try {
    const result = await login_cellphone({
      phone: &#39;手机号&#39;,
      password: &#39;密码&#39;
    })
    console.log(result)
    const result2 = await user_cloud({
      cookie: result.body.cookie // 凭证
    })
    console.log(result2.body)
      
  } catch (error) {
    console.log(error)
  }
}
main()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;支持 TypeScript&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// test.ts
import { banner } from &#39;NeteaseCloudMusicApi&#39;
banner({ type:0 }).then(res=&amp;gt;{
  console.log(res)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用文档&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://binaryify.github.io/NeteaseCloudMusicApi&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://neteasecloudmusicapi.vercel.app&quot;&gt;文档地址2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/docs.png&quot; alt=&quot;文档&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;功能特性&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;登录&lt;/li&gt; 
 &lt;li&gt;刷新登录&lt;/li&gt; 
 &lt;li&gt;发送验证码&lt;/li&gt; 
 &lt;li&gt;校验验证码&lt;/li&gt; 
 &lt;li&gt;注册(修改密码)&lt;/li&gt; 
 &lt;li&gt;获取用户信息 , 歌单，收藏，mv, dj 数量&lt;/li&gt; 
 &lt;li&gt;获取用户歌单&lt;/li&gt; 
 &lt;li&gt;获取用户电台&lt;/li&gt; 
 &lt;li&gt;获取用户关注列表&lt;/li&gt; 
 &lt;li&gt;获取用户粉丝列表&lt;/li&gt; 
 &lt;li&gt;获取用户动态&lt;/li&gt; 
 &lt;li&gt;获取用户播放记录&lt;/li&gt; 
 &lt;li&gt;获取精品歌单&lt;/li&gt; 
 &lt;li&gt;获取歌单详情&lt;/li&gt; 
 &lt;li&gt;搜索&lt;/li&gt; 
 &lt;li&gt;搜索建议&lt;/li&gt; 
 &lt;li&gt;获取歌词&lt;/li&gt; 
 &lt;li&gt;歌曲评论&lt;/li&gt; 
 &lt;li&gt;收藏单曲到歌单&lt;/li&gt; 
 &lt;li&gt;专辑评论&lt;/li&gt; 
 &lt;li&gt;歌单评论&lt;/li&gt; 
 &lt;li&gt;mv 评论&lt;/li&gt; 
 &lt;li&gt;电台节目评论&lt;/li&gt; 
 &lt;li&gt;banner&lt;/li&gt; 
 &lt;li&gt;获取歌曲详情&lt;/li&gt; 
 &lt;li&gt;获取专辑内容&lt;/li&gt; 
 &lt;li&gt;获取歌手单曲&lt;/li&gt; 
 &lt;li&gt;获取歌手 mv&lt;/li&gt; 
 &lt;li&gt;获取歌手专辑&lt;/li&gt; 
 &lt;li&gt;获取歌手描述&lt;/li&gt; 
 &lt;li&gt;获取相似歌手&lt;/li&gt; 
 &lt;li&gt;获取相似歌单&lt;/li&gt; 
 &lt;li&gt;相似 mv&lt;/li&gt; 
 &lt;li&gt;获取相似音乐&lt;/li&gt; 
 &lt;li&gt;获取最近 5 个听了这首歌的用户&lt;/li&gt; 
 &lt;li&gt;获取每日推荐歌单&lt;/li&gt; 
 &lt;li&gt;获取每日推荐歌曲&lt;/li&gt; 
 &lt;li&gt;私人 FM&lt;/li&gt; 
 &lt;li&gt;签到&lt;/li&gt; 
 &lt;li&gt;喜欢音乐&lt;/li&gt; 
 &lt;li&gt;垃圾桶&lt;/li&gt; 
 &lt;li&gt;歌单 ( 网友精选碟 )&lt;/li&gt; 
 &lt;li&gt;新碟上架&lt;/li&gt; 
 &lt;li&gt;热门歌手&lt;/li&gt; 
 &lt;li&gt;最新 mv&lt;/li&gt; 
 &lt;li&gt;推荐 mv&lt;/li&gt; 
 &lt;li&gt;推荐歌单&lt;/li&gt; 
 &lt;li&gt;推荐新音乐&lt;/li&gt; 
 &lt;li&gt;推荐电台&lt;/li&gt; 
 &lt;li&gt;推荐节目&lt;/li&gt; 
 &lt;li&gt;独家放送&lt;/li&gt; 
 &lt;li&gt;mv 排行&lt;/li&gt; 
 &lt;li&gt;获取 mv 数据&lt;/li&gt; 
 &lt;li&gt;播放 mv/视频&lt;/li&gt; 
 &lt;li&gt;排行榜&lt;/li&gt; 
 &lt;li&gt;歌手榜&lt;/li&gt; 
 &lt;li&gt;云盘&lt;/li&gt; 
 &lt;li&gt;电台 - 推荐&lt;/li&gt; 
 &lt;li&gt;电台 - 分类&lt;/li&gt; 
 &lt;li&gt;电台 - 分类推荐&lt;/li&gt; 
 &lt;li&gt;电台 - 订阅&lt;/li&gt; 
 &lt;li&gt;电台 - 详情&lt;/li&gt; 
 &lt;li&gt;电台 - 节目&lt;/li&gt; 
 &lt;li&gt;给评论点赞&lt;/li&gt; 
 &lt;li&gt;获取动态&lt;/li&gt; 
 &lt;li&gt;热搜列表(简略)&lt;/li&gt; 
 &lt;li&gt;发送私信&lt;/li&gt; 
 &lt;li&gt;发送私信歌单&lt;/li&gt; 
 &lt;li&gt;新建歌单&lt;/li&gt; 
 &lt;li&gt;收藏/取消收藏歌单&lt;/li&gt; 
 &lt;li&gt;歌单分类&lt;/li&gt; 
 &lt;li&gt;收藏的歌手列表&lt;/li&gt; 
 &lt;li&gt;订阅的电台列表&lt;/li&gt; 
 &lt;li&gt;相关歌单推荐&lt;/li&gt; 
 &lt;li&gt;付费精选接口&lt;/li&gt; 
 &lt;li&gt;音乐是否可用检查接口&lt;/li&gt; 
 &lt;li&gt;登录状态&lt;/li&gt; 
 &lt;li&gt;获取视频播放地址&lt;/li&gt; 
 &lt;li&gt;发送/删除评论&lt;/li&gt; 
 &lt;li&gt;热门评论&lt;/li&gt; 
 &lt;li&gt;视频评论&lt;/li&gt; 
 &lt;li&gt;退出登录&lt;/li&gt; 
 &lt;li&gt;所有榜单&lt;/li&gt; 
 &lt;li&gt;所有榜单内容摘要&lt;/li&gt; 
 &lt;li&gt;收藏视频&lt;/li&gt; 
 &lt;li&gt;收藏 MV&lt;/li&gt; 
 &lt;li&gt;视频详情&lt;/li&gt; 
 &lt;li&gt;相关视频&lt;/li&gt; 
 &lt;li&gt;关注用户&lt;/li&gt; 
 &lt;li&gt;新歌速递&lt;/li&gt; 
 &lt;li&gt;喜欢音乐列表(无序)&lt;/li&gt; 
 &lt;li&gt;收藏的 MV 列表&lt;/li&gt; 
 &lt;li&gt;获取最新专辑&lt;/li&gt; 
 &lt;li&gt;听歌打卡&lt;/li&gt; 
 &lt;li&gt;获取视频标签/分类下的视频&lt;/li&gt; 
 &lt;li&gt;已收藏专辑列表&lt;/li&gt; 
 &lt;li&gt;获取动态评论&lt;/li&gt; 
 &lt;li&gt;歌单收藏者列表&lt;/li&gt; 
 &lt;li&gt;云盘歌曲删除&lt;/li&gt; 
 &lt;li&gt;热门话题&lt;/li&gt; 
 &lt;li&gt;电台 - 推荐类型&lt;/li&gt; 
 &lt;li&gt;电台 - 非热门类型&lt;/li&gt; 
 &lt;li&gt;电台 - 今日优选&lt;/li&gt; 
 &lt;li&gt;心动模式/智能播放&lt;/li&gt; 
 &lt;li&gt;转发动态&lt;/li&gt; 
 &lt;li&gt;删除动态&lt;/li&gt; 
 &lt;li&gt;分享歌曲、歌单、mv、电台、电台节目到动态&lt;/li&gt; 
 &lt;li&gt;通知-私信&lt;/li&gt; 
 &lt;li&gt;通知-评论&lt;/li&gt; 
 &lt;li&gt;通知-@我&lt;/li&gt; 
 &lt;li&gt;通知-通知&lt;/li&gt; 
 &lt;li&gt;设置&lt;/li&gt; 
 &lt;li&gt;云盘数据详情&lt;/li&gt; 
 &lt;li&gt;私信内容&lt;/li&gt; 
 &lt;li&gt;我的数字专辑&lt;/li&gt; 
 &lt;li&gt;batch批量请求接口&lt;/li&gt; 
 &lt;li&gt;获取视频标签列表&lt;/li&gt; 
 &lt;li&gt;全部mv&lt;/li&gt; 
 &lt;li&gt;网易出品mv&lt;/li&gt; 
 &lt;li&gt;收藏/取消收藏专辑&lt;/li&gt; 
 &lt;li&gt;专辑动态信息&lt;/li&gt; 
 &lt;li&gt;热搜列表(详细)&lt;/li&gt; 
 &lt;li&gt;更换绑定手机&lt;/li&gt; 
 &lt;li&gt;检测手机号码是否已注册&lt;/li&gt; 
 &lt;li&gt;初始化昵称&lt;/li&gt; 
 &lt;li&gt;更新歌单描述&lt;/li&gt; 
 &lt;li&gt;更新歌单名&lt;/li&gt; 
 &lt;li&gt;更新歌单标签&lt;/li&gt; 
 &lt;li&gt;默认搜索关键词&lt;/li&gt; 
 &lt;li&gt;删除歌单&lt;/li&gt; 
 &lt;li&gt;电台banner&lt;/li&gt; 
 &lt;li&gt;用户电台&lt;/li&gt; 
 &lt;li&gt;热门电台&lt;/li&gt; 
 &lt;li&gt;电台 - 节目详情&lt;/li&gt; 
 &lt;li&gt;电台 - 节目榜&lt;/li&gt; 
 &lt;li&gt;电台 - 新晋电台榜/热门电台榜&lt;/li&gt; 
 &lt;li&gt;类别热门电台&lt;/li&gt; 
 &lt;li&gt;云村热评&lt;/li&gt; 
 &lt;li&gt;电台24小时节目榜&lt;/li&gt; 
 &lt;li&gt;电台24小时主播榜&lt;/li&gt; 
 &lt;li&gt;电台最热主播榜&lt;/li&gt; 
 &lt;li&gt;电台主播新人榜&lt;/li&gt; 
 &lt;li&gt;电台付费精品榜&lt;/li&gt; 
 &lt;li&gt;歌手热门50首歌曲&lt;/li&gt; 
 &lt;li&gt;购买数字专辑&lt;/li&gt; 
 &lt;li&gt;获取 mv 点赞转发评论数数据&lt;/li&gt; 
 &lt;li&gt;获取视频点赞转发评论数数据&lt;/li&gt; 
 &lt;li&gt;调整歌单顺序&lt;/li&gt; 
 &lt;li&gt;调整歌曲顺序&lt;/li&gt; 
 &lt;li&gt;独家放送列表&lt;/li&gt; 
 &lt;li&gt;获取推荐视频&lt;/li&gt; 
 &lt;li&gt;获取视频分类列表&lt;/li&gt; 
 &lt;li&gt;获取全部视频列表接口&lt;/li&gt; 
 &lt;li&gt;获取历史日推可用日期列表&lt;/li&gt; 
 &lt;li&gt;获取历史日推详细数据&lt;/li&gt; 
 &lt;li&gt;国家编码列表&lt;/li&gt; 
 &lt;li&gt;首页-发现&lt;/li&gt; 
 &lt;li&gt;首页-发现-圆形图标入口列表&lt;/li&gt; 
 &lt;li&gt;数字专辑-全部新碟&lt;/li&gt; 
 &lt;li&gt;数字专辑-热门新碟&lt;/li&gt; 
 &lt;li&gt;数字专辑&amp;amp;数字单曲-榜单&lt;/li&gt; 
 &lt;li&gt;数字专辑-语种风格馆&lt;/li&gt; 
 &lt;li&gt;数字专辑详情&lt;/li&gt; 
 &lt;li&gt;更新头像&lt;/li&gt; 
 &lt;li&gt;歌单封面上传&lt;/li&gt; 
 &lt;li&gt;楼层评论&lt;/li&gt; 
 &lt;li&gt;歌手全部歌曲&lt;/li&gt; 
 &lt;li&gt;精品歌单标签列表&lt;/li&gt; 
 &lt;li&gt;用户等级信息&lt;/li&gt; 
 &lt;li&gt;电台个性推荐&lt;/li&gt; 
 &lt;li&gt;用户绑定信息&lt;/li&gt; 
 &lt;li&gt;用户绑定手机&lt;/li&gt; 
 &lt;li&gt;新版评论&lt;/li&gt; 
 &lt;li&gt;点赞过的视频&lt;/li&gt; 
 &lt;li&gt;收藏视频到视频歌单&lt;/li&gt; 
 &lt;li&gt;删除视频歌单里的视频&lt;/li&gt; 
 &lt;li&gt;最近播放的视频&lt;/li&gt; 
 &lt;li&gt;音乐日历&lt;/li&gt; 
 &lt;li&gt;电台订阅者列表&lt;/li&gt; 
 &lt;li&gt;云贝签到信息&lt;/li&gt; 
 &lt;li&gt;云贝签到&lt;/li&gt; 
 &lt;li&gt;云贝所有任务&lt;/li&gt; 
 &lt;li&gt;云贝todo任务&lt;/li&gt; 
 &lt;li&gt;云贝今日签到信息&lt;/li&gt; 
 &lt;li&gt;云贝完成任务&lt;/li&gt; 
 &lt;li&gt;云贝收入&lt;/li&gt; 
 &lt;li&gt;云贝支出&lt;/li&gt; 
 &lt;li&gt;云贝账户信息&lt;/li&gt; 
 &lt;li&gt;账号信息&lt;/li&gt; 
 &lt;li&gt;最近联系人&lt;/li&gt; 
 &lt;li&gt;私信音乐&lt;/li&gt; 
 &lt;li&gt;抱一抱评论&lt;/li&gt; 
 &lt;li&gt;评论抱一抱列表&lt;/li&gt; 
 &lt;li&gt;收藏的专栏&lt;/li&gt; 
 &lt;li&gt;关注歌手新歌&lt;/li&gt; 
 &lt;li&gt;关注歌手新MV&lt;/li&gt; 
 &lt;li&gt;歌手详情&lt;/li&gt; 
 &lt;li&gt;云盘上传&lt;/li&gt; 
 &lt;li&gt;二维码登录&lt;/li&gt; 
 &lt;li&gt;话题详情&lt;/li&gt; 
 &lt;li&gt;话题详情热门动态&lt;/li&gt; 
 &lt;li&gt;歌单详情动态&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/CHANGELOG.MD&quot;&gt;changelog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;单元测试&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot1.png&quot; alt=&quot;单元测试&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot2.png&quot; alt=&quot;单元测试&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;贡献者&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://opencollective.com/NeteaseCloudMusicApi/contributors.svg?width=890&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/LICENSE&quot;&gt;The MIT License (MIT)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zhuxuedefeng/AiQiangGUO</title>
      <link>https://github.com/zhuxuedefeng/AiQiangGUO</link>
      <description>&lt;p&gt;Ai强国 基于Autojs实现的模拟点击学习强国辅助工具 适配安卓&lt;/p&gt;&lt;hr&gt;&lt;p&gt;AiQiangGUO Ai强国 基于Autojs实现的模拟点击学习强国辅助工具 适配安卓&lt;/p&gt; 
&lt;p&gt;基于Auto.js_4.1.1 Alpha2运行框架 原始代码基于@ivanwhaf xxqg-helper UI版本 文章基于播报按钮进行判断点击来自@chongyadong 争上游基于题目对比答题来自@Ivan-cn 另有部分代码移植自@lolisaikou&lt;/p&gt; 
&lt;p&gt;注意&amp;amp;声明:20201229 1,严禁使用本代码收费代挂机，严禁收费传播。 2,本代码允许再次修改，但严禁修改时加入恶意代码，严禁未经修改核心代码核心逻辑即进行加密。 3,使用风险自担(包括且不限于封号，警告，喝茶)。 4，本代码保证无恶意代码，权限说明如下:悬浮窗(弹出运行日志)，无障碍(模拟点击与滑动)，存储(日志输出与数据库读写)。其他权限由autojs申请，均可拒绝。&lt;/p&gt; 
&lt;p&gt;网盘链接https://wws.lanzous.com/b01npbw7a 密码:263a&lt;/p&gt; 
&lt;p&gt;执行逻辑为： 文章 12篇30秒（含前2篇文章分享点赞评论），视频 6个60秒，本地频道，挑战答题 1轮*5题，每日答题（至领取奖励已达今日上限），之后循环检查 文章个数时长积分、视频个数积分，本地，挑战，每日答题 积分，不足则循环执行。 以上足够之后，检查分享评论积分，不足则学习2篇文章执行分享点赞评论；检查视频时长，不足则收听广播补时长（注意广播不会自动退出，但不影响接下来执行）；检查双人对战积分，&amp;lt;1执行一次双人对战；检查争上游答题积分，&amp;lt;2执行两次争上游答题。&lt;/p&gt; 
&lt;p&gt;目前仍存在问题：文章 视频重复点击，导致积分始终不足而循环执行。&lt;/p&gt; 
&lt;p&gt;词形与注音题格式为 题目去除空格，带句号，紧跟第一选项。 示例如下: 选择词语的正确词形。一愁莫展&lt;/p&gt; 
&lt;p&gt;20210116 v2.19 20210116 推荐更新。更新日志：修正部分手机的本地频道控件变化导致的本地频道点击错误；修正我的页面 我要答题文本不可点击导致的所有答题卡在我的页面，点击其父控件。&lt;/p&gt; 
&lt;p&gt;20210115 v2.19 20210115 推荐更新。更新日志：修正强国 对战入口变化导致的双人对战不能进入问题，加入邀请好友与随机匹配，代码使用随机匹配。/蓝奏云外发版本号标识为v2.19 20210125，汗一个&lt;/p&gt; 
&lt;p&gt;20201225 v2.19 20201225 推荐更新。 更新日志：修正强国 争上游 对战界面变化导致的不能答题问题，感谢@KB64ba同学慧眼发现，距离答题结束 删除。&lt;/p&gt; 
&lt;p&gt;20201215 v2.19 20201212 推荐更新。 更新日志: 修正题库已知错题。 修改词形题与注音题答题逻辑，对应修改题库内格式。 修正双人对战连续答题逻辑。 跟随强国APP升级电台收听逻辑。 修改题目输出日志与题库实际搜索一致。 加入运行日志输出功能，默认/脚本/AiQiangGuo日志.txt。&lt;/p&gt; 
&lt;p&gt;20201028 使用Ivan-cn处理挑战答题的逻辑：随机点击，如果正确，写入题库。 挑战答题支持自定义次数和题数，所以可以用来挂机刷题库。 增加争上游答题次数自定义，双人对战次数=争上游次数-1，因不容易判断答题错误，故该部分未加入随机点击正确写入题库功能。&lt;/p&gt; 
&lt;p&gt;20201017 加入挑战答题分享复活功能， 完善部分争上游 对战答题逻辑。&lt;/p&gt; 
&lt;p&gt;原始版本说明 0，源代码基于https://github.com/ivanwhaf/xxqg-helper V3.1.3 UI版本进行修改而来。 1，修改学习按钮点击方式，由基于文本&quot;学习&quot;（强国改版后为“工作”）改为基于控件&quot;home_bottom_tab_button_work&quot;点击。 2，积分执行加入循环判断，引入顺序执行（因测试部分手机积分获取时返回Null，获取不到积分）。 3，部分手机本地频道控件位置为13，故引入基于是否存在&quot;切换地区&quot;的判断。 4，文章视频使用随机数（随机1 2 3文章点击推荐 要闻 综合，视频点击第一频道 学习视频 联播频道）。 5，计划加入：挑战答题不足1轮5题 失败时的分享复活。 6，存在问题：文章 视频重复点击；文章有概率点击到广播，然后不能自动执行，需手动返回学习主页（执行逻辑将文章优先执行后已降低此问题概率）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>awesome-selfhosted/awesome-selfhosted</title>
      <link>https://github.com/awesome-selfhosted/awesome-selfhosted</link>
      <description>&lt;p&gt;A list of Free Software network services and web applications which can be hosted locally. Selfhosting is the process of hosting and managing applications instead of renting from Software-as-a-Service providers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome-Selfhosted&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/awesome-selfhosted/awesome-selfhosted/issues/2266&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/awesome-selfhosted/awesome-selfhosted/master?label=link%20checks&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Self-hosting is the practice of locally hosting and managing applications instead of renting from &lt;a href=&quot;https://www.gnu.org/philosophy/who-does-that-server-really-serve.html&quot;&gt;SaaSS&lt;/a&gt; providers.&lt;/p&gt; 
&lt;p&gt;This is a list of &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software&quot;&gt;Free&lt;/a&gt; Software &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_service&quot;&gt;network services&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_application&quot;&gt;web applications&lt;/a&gt; which can be hosted locally. Non-Free software is listed on the &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/non-free.md&quot;&gt;Non-Free&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;List of Software 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#analytics&quot;&gt;Analytics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#archiving-and-digital-preservation-dp&quot;&gt;Archiving and Digital Preservation (DP)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#automation&quot;&gt;Automation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#blogging-platforms&quot;&gt;Blogging Platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#bookmarks-and-link-sharing&quot;&gt;Bookmarks and Link Sharing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#calendaring-and-contacts-management&quot;&gt;Calendaring and Contacts Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication-systems&quot;&gt;Communication systems&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#custom-communication-systems&quot;&gt;Custom communication systems&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#email&quot;&gt;Email&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#complete-solutions&quot;&gt;Complete solutions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#mail-transfer-agents&quot;&gt;Mail Transfer Agents&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#mail-delivery-agents&quot;&gt;Mail Delivery Agents&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#mailing-lists-and-newsletters&quot;&gt;Mailing lists and newsletters&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#webmail-clients&quot;&gt;Webmail clients&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#irc&quot;&gt;IRC&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#sip&quot;&gt;SIP/IPBX&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#social-networks-and-forums&quot;&gt;Social Networks and Forums&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#xmpp&quot;&gt;XMPP&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#xmpp-servers&quot;&gt;XMPP Servers&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#xmpp-web-clients&quot;&gt;XMPP Web Clients&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#conference-management&quot;&gt;Conference Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems (CMS)&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#e-commerce&quot;&gt;E-commerce&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#dns&quot;&gt;DNS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#document-management&quot;&gt;Document Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#e-books-and-integrated-library-systems-ils&quot;&gt;E-books and Integrated Library Systems (ILS)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#federated-identityauthentication&quot;&gt;Federated Identity/Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#feed-readers&quot;&gt;Feed Readers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-sharing-and-synchronization&quot;&gt;File Sharing and Synchronization&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#distributed-filesystems&quot;&gt;Distributed filesystems&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfersynchronization&quot;&gt;File transfer/synchronization&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#peer-to-peer-filesharing&quot;&gt;Peer-to-peer filesharing&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#object-storagefile-servers&quot;&gt;Object storage/file servers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#single-clickdrag-n-drop-upload&quot;&gt;Single-click/drag-n-drop upload&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#web-based-file-managers&quot;&gt;Web based file managers&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#games&quot;&gt;Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#gateways-and-terminal-sharing&quot;&gt;Gateways and terminal sharing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#human-resources-management-hrm&quot;&gt;Human Resources Management (HRM)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#internet-of-things-iot&quot;&gt;Internet of Things (IoT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#knowledge-management-tools&quot;&gt;Knowledge Management Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#learning-and-courses&quot;&gt;Learning and Courses&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#maps-and-global-positioning-system-gps&quot;&gt;Maps and Global Positioning System (GPS)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming&quot;&gt;Media Streaming&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#multimedia-streaming&quot;&gt;Multimedia Streaming&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#audio-streaming&quot;&gt;Audio Streaming&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#video-streaming&quot;&gt;Video Streaming&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#miscother&quot;&gt;Misc/Other&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#money-budgeting-and-management&quot;&gt;Money, Budgeting and Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#monitoring&quot;&gt;Monitoring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#note-taking-and-editors&quot;&gt;Note-taking and Editors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#office-suites&quot;&gt;Office Suites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#password-managers&quot;&gt;Password Managers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#pastebins&quot;&gt;Pastebins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#personal-dashboards&quot;&gt;Personal Dashboards&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#photo-and-video-galleries&quot;&gt;Photo and Video Galleries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#polls-and-events&quot;&gt;Polls and Events&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#booking-and-scheduling&quot;&gt;Booking and Scheduling&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#read-it-later-lists&quot;&gt;Read it Later Lists&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#resource-planning&quot;&gt;Resource Planning&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#enterprise-resource-planning&quot;&gt;Enterprise Resource Planning&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#search-engines&quot;&gt;Search Engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development&quot;&gt;Software Development&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#project-management&quot;&gt;Project Management&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#bug-trackers&quot;&gt;Bug Trackers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#idetools&quot;&gt;IDE/Tools&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ux-testing&quot;&gt;UX testing&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#faasserverless&quot;&gt;FaaS/Serverless&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#api-management&quot;&gt;API Management&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#documentation-generators&quot;&gt;Documentation Generators&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#localization&quot;&gt;Localization&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static site generators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-managementto-do-lists&quot;&gt;Task management/To-do lists&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#url-shorteners&quot;&gt;URL Shorteners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#vpn&quot;&gt;VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#web-servers&quot;&gt;Web servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#wikis&quot;&gt;Wikis&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#self-hosting-solutions&quot;&gt;Self-hosting Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#list-of-licenses&quot;&gt;List of Licenses&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#external-links&quot;&gt;External links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Analytics&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;For personal analytics/dashboards, see &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#personal-dashboards&quot;&gt;Personal Dashboards&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;For everything else, see &lt;a href=&quot;https://github.com/onurakpolat/awesome-analytics&quot;&gt;awesome-analytics&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Archiving and Digital Preservation (DP)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Some &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management System&lt;/a&gt; solutions also feature archiving and digital preservation.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accesstomemory.org/&quot;&gt;Access to Memory (AtoM)&lt;/a&gt; - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (&lt;a href=&quot;https://demo.accesstomemory.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/artefactual/atom&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.archivematica.org/&quot;&gt;Archivematica&lt;/a&gt; - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (&lt;a href=&quot;http://sandbox.archivematica.org/administration/accounts/login/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/artefactual/archivematica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archivebox.io/&quot;&gt;ArchiveBox&lt;/a&gt; - Self-hosted &quot;wayback machine&quot; that creates HTML &amp;amp; screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (&lt;a href=&quot;https://github.com/pirate/bookmark-archiver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archivesspace.org/&quot;&gt;ArchivesSpace&lt;/a&gt; - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (&lt;a href=&quot;https://archivesspace.org/application/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/archivesspace/archivesspace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ECL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://collectiveaccess.org/&quot;&gt;Collective Access: Providence&lt;/a&gt; - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (&lt;a href=&quot;https://github.com/collectiveaccess/providence&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-only&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ckan.org&quot;&gt;CKAN&lt;/a&gt; - CKAN is a tool for making open data websites. (&lt;a href=&quot;https://github.com/ckan/ckan&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Automation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#internet-of-things-iot&quot;&gt;Internet of Things (IoT)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tokenmill/accelerated-text&quot;&gt;Accelerated Text&lt;/a&gt; - Automatically generate multiple natural language descriptions of your data varying in wording and structure. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/automaticmode/active_workflow&quot;&gt;ActiveWorkflow&lt;/a&gt; - An intelligent process and workflow automation platform based on software agents. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.alltubedownload.net&quot;&gt;Alltube&lt;/a&gt; - Web interface for &lt;a href=&quot;https://github.com/rg3/youtube-dl&quot;&gt;youtube-dl&lt;/a&gt;, a program to download videos and audio from &lt;a href=&quot;https://rg3.github.io/youtube-dl/supportedsites.html&quot;&gt;more than 100 websites&lt;/a&gt;. (&lt;a href=&quot;https://github.com/Rudloff/alltube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amiunique.org/&quot;&gt;AmIUnique&lt;/a&gt; - Learn how identifiable you are on the Internet (browser fingerprinting tool). (&lt;a href=&quot;https://github.com/DIVERSIFY-project/amiunique&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muesli/beehive&quot;&gt;Beehive&lt;/a&gt; - Flexible event and agent system, which allows you to create your own agents that perform automated tasks triggered by events and filters. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sentriz/betanin/&quot;&gt;betanin&lt;/a&gt; - Music organization man-in-the-middle of your torrent client and music player. Based on beets.io, similar to Sonarr and Radarr. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://couchpota.to/&quot;&gt;CouchPotato&lt;/a&gt; - CouchPotato is an automatic Video Library Manager for Movies. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (&lt;a href=&quot;https://github.com/CouchPotato/CouchPotatoServer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/guptachetan1997/Episodes&quot;&gt;Episodes&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Self Hosted TV show Episode tracker and recommender built using django, bootstrap4. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feed2toot.readthedocs.io/&quot;&gt;feed2toot&lt;/a&gt; - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (&lt;a href=&quot;https://gitlab.com/chaica/feed2toot&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cristoper/feedmixer&quot;&gt;feedmixer&lt;/a&gt; - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (&lt;a href=&quot;https://mretc.net/feedmixer/json?f=http://hnrss.org/newest&amp;amp;f=http://americancynic.net/atom.xml&amp;amp;n=1&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gekko.wizb.it/&quot;&gt;Gekko&lt;/a&gt; - Gekko is a Bitcoin TA trading and backtesting bot which support multiple exchanges and cryptocurrencies. (&lt;a href=&quot;https://github.com/askmike/gekko&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rembo10/headphones&quot;&gt;Headphones&lt;/a&gt; - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent, Deluge and Blackhole. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthchecks.io/&quot;&gt;Healthchecks&lt;/a&gt; - Django app which listens for pings and sends alerts when pings are late. (&lt;a href=&quot;https://github.com/healthchecks/healthchecks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Binnette/homebank-converter&quot;&gt;homebank-converter&lt;/a&gt; - Web app to convert an export bank file to compatible Homebank csv. (&lt;a href=&quot;http://binnette.github.io/homebank-converter/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zelon88/HRConvert2&quot;&gt;HRConvert2&lt;/a&gt; - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huginn/huginn&quot;&gt;Huginn&lt;/a&gt; - Allows you to build agents that monitor and act on your behalf. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kibitzr.github.io&quot;&gt;Kibitzr&lt;/a&gt; - Lightweight personal web assistant with powerful integrations. (&lt;a href=&quot;https://github.com/kibitzr/kibitzr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/LazyLibrarian/LazyLibrarian&quot;&gt;LazyLibrarian&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getleon.ai&quot;&gt;Leon&lt;/a&gt; - Open-source personal assistant who can live on your server. (&lt;a href=&quot;https://www.youtube.com/watch?v=p7GRGiicO1c&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/leon-ai/leon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lidarr.audio/&quot;&gt;Lidarr&lt;/a&gt; - Lidarr is a music collection manager for Usenet and BitTorrent users. (&lt;a href=&quot;https://github.com/Lidarr/Lidarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pymedusa/SickRage&quot;&gt;Medusa&lt;/a&gt; - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexta69/metube&quot;&gt;MeTube&lt;/a&gt; - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; - Free node based Workflow Automation Tool. Easily automate tasks across different services. (&lt;a href=&quot;https://github.com/n8n-io/n8n&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lardbit/nefarious&quot;&gt;nefarious&lt;/a&gt; - Web application that automates downloading Movies and TV Shows. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akhilrex/podgrab&quot;&gt;Podgrab&lt;/a&gt; - Lightweight podcast manager and automatic podcast episode downloader. It will monitor podcasts for your and download them automatically whenever a new episode goes live. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pyload.net/&quot;&gt;pyLoad&lt;/a&gt; - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (&lt;a href=&quot;https://github.com/pyload/pyload&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://radarr.video/&quot;&gt;Radarr&lt;/a&gt; - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, à la Couchpotato. (&lt;a href=&quot;https://github.com/Radarr/Radarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackstorm.com&quot;&gt;StackStorm&lt;/a&gt; - StackStorm (aka &quot;IFTTT for Ops&quot;) is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. (&lt;a href=&quot;https://github.com/StackStorm/st2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sickrage.github.io/&quot;&gt;SickRage&lt;/a&gt; - SickRage is an automatic Video Library Manager for TV Shows. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (&lt;a href=&quot;https://github.com/SickRage/SickRage&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sonarr.tv/&quot;&gt;Sonarr&lt;/a&gt; - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (&lt;a href=&quot;https://github.com/Sonarr/Sonarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ovh/utask&quot;&gt;µTask&lt;/a&gt; - µTask is an automation engine that models and executes business processes declared in yaml. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trigger-happy.readthedocs.io/en/latest/&quot;&gt;TriggerHappy&lt;/a&gt; - Open source clone of IFTTT, a bridge between your internet services. (&lt;a href=&quot;https://github.com/foxmask/django-th&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ziahamza/webui-aria2&quot;&gt;WebUI-aria2&lt;/a&gt; - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (&lt;a href=&quot;http://ziahamza.github.io/webui-aria2/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tzahi12345/YoutubeDL-Material&quot;&gt;YoutubeDL-Material&lt;/a&gt; - Material Design inspired YouTube downloader, based on youtube-dl. Supports playlists, quality select, search, dark mode and much more, all with a clean and modern design. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carlos8f/zenbot&quot;&gt;Zenbot 3&lt;/a&gt; - Zenbot is a lightweight, extendable, artificially intelligent trading bot for Bitcoin, Ether, Litecoin, and more. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thezeroqueue/zeroqueue&quot;&gt;ZeroQueue&lt;/a&gt; - A low-code queue management system that lets you run scheduled jobs for anything. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blogging Platforms&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static Site Generators&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems&lt;/a&gt; and &lt;a href=&quot;http://www.weblogmatrix.org/&quot;&gt;WeblogMatrix&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://antville.org&quot;&gt;Antville&lt;/a&gt; - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (&lt;a href=&quot;https://github.com/antville/antville&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m1k1o/blog&quot;&gt;Blog&lt;/a&gt; - Facebook-styled blog. Free, extremely lightweight, single-user and easy to install. (&lt;a href=&quot;https://blog.m1k1o.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Blogotext - Free blog-engine written in PHP and using SQLite. This offers you both an unmatched simplicity during installation and great performances. (&lt;a href=&quot;https://github.com/timovn/blogotext&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bludit.com/&quot;&gt;Bludit&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (&lt;a href=&quot;https://demo.bludit.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/dignajar/bludit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liamdemafelix/cadmus&quot;&gt;Cadmus&lt;/a&gt; - Cadmus is an extremely lightweight, flat-file blogging platform powered by Markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trycanvas.app/&quot;&gt;Canvas&lt;/a&gt; - A Laravel publishing platform. (&lt;a href=&quot;https://github.com/cnvs/canvas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chyrplite.net&quot;&gt;Chyrp Lite&lt;/a&gt; - Extra-awesome, extra-lightweight blog engine. (&lt;a href=&quot;https://github.com/xenocrat/chyrp-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dante-stories.herokuapp.com/&quot;&gt;Dante Stories&lt;/a&gt; - Self hosted Medium platform built with Ruby on Rails. (&lt;a href=&quot;https://github.com/michelson/dante-stories&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dotclear.org/&quot;&gt;Dotclear&lt;/a&gt; - Take control over your blog. (&lt;a href=&quot;https://hg.dotclear.org/dotclear&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formtools.org/&quot;&gt;Formtools&lt;/a&gt; - Powerful, flexible, free and open source PHP/MySQL script to manage your forms and data. (&lt;a href=&quot;https://github.com/formtools&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt; - Just a blogging platform. (&lt;a href=&quot;https://github.com/TryGhost/Ghost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; - Fast, simple and powerful blog framework, powered by Node.js. (&lt;a href=&quot;https://github.com/hexojs/hexo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hotglue.me/&quot;&gt;Hotglue&lt;/a&gt; - Freehand CMS which allows to construct websites directly in a web-browser. It uses flat files for storage and provides an intuitive GUI. (&lt;a href=&quot;https://hotglue.me/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/k0a1a/hotglue2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.htmly.com/&quot;&gt;htmly&lt;/a&gt; - Databaseless Blogging Platform (Flat-File Blog). (&lt;a href=&quot;https://www.htmly.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/danpros/htmly&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://withknown.com/&quot;&gt;Known&lt;/a&gt; - Single website for all your content. (&lt;a href=&quot;https://github.com/idno/idno&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinplu.me/&quot;&gt;Plume&lt;/a&gt; - Federated blogging engine, based on ActivityPub. (&lt;a href=&quot;https://github.com/Plume-org/Plume&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.pluxml.org/&quot;&gt;PluXml&lt;/a&gt; - XML-based blog/CMS platform. (&lt;a href=&quot;https://github.com/pluxml/PluXml&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postleaf.org/&quot;&gt;Postleaf&lt;/a&gt; - Open source blogging platform with inline editing, handlebar templates, and a beautiful user interface. (&lt;a href=&quot;https://github.com/Postleaf/postleaf&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bookmarks and Link Sharing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dyu/bookmarks&quot;&gt;dyu/bookmarks&lt;/a&gt; - Single-threaded/process bookmark app powered by leveldb and uWebSockets. Supports importing from Delicious and Chrome. (&lt;a href=&quot;https://dyuproject.com/bookmarks/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonschoning/espial&quot;&gt;Espial&lt;/a&gt; - An open-source, web-based bookmarking server. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mozilla-services.readthedocs.io/en/latest/howtos/run-fxa.html&quot;&gt;Firefox Account Server&lt;/a&gt; - This allows you to host your own Firefox accounts server. (&lt;a href=&quot;https://github.com/mozilla/fxa&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs, Java&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla-services/syncserver&quot;&gt;Firefox Sync Server&lt;/a&gt; - Sync Firefox bookmarks, passwords, history, tabs, preferences. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geekmarks.dmitryfrank.com/&quot;&gt;Geekmarks&lt;/a&gt; - Personal bookmarking service focused on speed and organization using hierarchical tags. (&lt;a href=&quot;https://github.com/dimonomid/geekmarks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/golinks&quot;&gt;golinks&lt;/a&gt; - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser&#39;s default search engine at a running instance. Similar to bunny1 or yubnub. (&lt;a href=&quot;https://search.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackershare/hackershare&quot;&gt;Hackershare&lt;/a&gt; - Social bookmarks website for hackers. (&lt;a href=&quot;https://hackershare.dev&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sissbruecker/linkding&quot;&gt;linkding&lt;/a&gt; - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. (&lt;a href=&quot;https://demo.linkding.link/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lobste.rs&quot;&gt;Lobsters&lt;/a&gt; - Run your own link aggregation site. (&lt;a href=&quot;https://github.com/jcs/lobsters&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nofussbm.herokuapp.com/signup.html&quot;&gt;No Fuss Bookmarks&lt;/a&gt; - Very simple software and service to store bookmarks especially designed for hackers (that don&#39;t need fancy interfaces, but nice API). (&lt;a href=&quot;https://github.com/mapio/nofussbm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://getpinry.com/&quot;&gt;Pinry&lt;/a&gt; - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (&lt;a href=&quot;https://github.com/pinry/pinry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kanishka-linux/reminiscence&quot;&gt;Reminiscence&lt;/a&gt; - Self-Hosted Bookmark And Archive Manager. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shaarli/Shaarli&quot;&gt;Shaarli&lt;/a&gt; - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (&lt;a href=&quot;https://demo.shaarli.org&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Zlib&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RadhiFadlillah/shiori&quot;&gt;Shiori&lt;/a&gt; - Simple bookmark manager built with Go. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plainmade/unmark&quot;&gt;unmark&lt;/a&gt; - Open source to do app for links. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ungleich.ch/u/projects/ubookmark/&quot;&gt;ubookmark&lt;/a&gt; - LDAP enabled bookmarking service. (&lt;a href=&quot;https://ipv6.blog&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://code.ungleich.ch/ungleich-public/ubookmark/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xbrowsersync.org&quot;&gt;xBrowserSync&lt;/a&gt; - Open source tool for syncing browser data between browsers and devices. (&lt;a href=&quot;https://github.com/xBrowserSync&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calendaring and Contacts Management&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Some &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt; solutions also feature calendar/address book editing and synchronization.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://en.wikipedia.org/wiki/Comparison_of_CalDAV_and_CardDAV_implementations&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;CalDAV or CardDAV servers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sabre.io/baikal/&quot;&gt;Baïkal&lt;/a&gt; - Lightweight CalDAV and CardDAV server based on sabre/dav. (&lt;a href=&quot;https://github.com/sabre-io/Baikal&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.calendarserver.org/&quot;&gt;CalendarServer&lt;/a&gt; - Apple, Inc.&#39;s standards-compliant server implementing the CalDAV and CardDAV protocols shipped with macOS Server. (&lt;a href=&quot;https://github.com/apple/ccs-calendarserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keithp.com/calypso/&quot;&gt;calypso&lt;/a&gt; - Python-based CalDAV and CardDAV server, forked from Radicale. (&lt;a href=&quot;https://keithp.com/git/calypso.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.davical.org/&quot;&gt;DAViCal&lt;/a&gt; - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (&lt;a href=&quot;https://gitlab.com/davical-project/davical&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tchapi/davis/&quot;&gt;Davis&lt;/a&gt; - A simple, dockerizable and fully translatable admin interface for sabre/dav based on Symfony 5 and Bootstrap 4, largely inspired by Baïkal. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://f-droid.org/packages/org.decsync.cc/&quot;&gt;DecSync CC&lt;/a&gt; - Serverless contacts, calendar synchronization using your own file syncing method i.e Syncthing, Nextcloud etc. (&lt;a href=&quot;https://github.com/39aldo39/DecSyncCC&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Kotlin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etesync.com&quot;&gt;EteSync Server&lt;/a&gt; - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (&lt;a href=&quot;https://github.com/etesync/server-skeleton&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://radicale.org/&quot;&gt;Radicale&lt;/a&gt; - Simple calendar and contact server with extremely low administrative overhead. (&lt;a href=&quot;https://github.com/Kozea/Radicale&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sabre.io/&quot;&gt;SabreDAV&lt;/a&gt; - Open source CardDAV, CalDAV, and WebDAV framework and server. (&lt;a href=&quot;https://github.com/sabre-io/dav&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xandikos.org/&quot;&gt;Xandikos&lt;/a&gt; - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. (&lt;a href=&quot;https://github.com/jelmer/xandikos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CalDAV or CardDAV web-based clients&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://agendav.org/&quot;&gt;AgenDAV&lt;/a&gt; - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (&lt;a href=&quot;https://github.com/agendav/agendav&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inf-it.com/open-source/clients/infcloud/&quot;&gt;InfCloud&lt;/a&gt; - Open source CalDAV/CardDAV web client implementation. (&lt;a href=&quot;https://www.inf-it.com/infcloud/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.inf-it.com/InfCloud_0.13.1.zip&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etesync.com/faq/#web-client&quot;&gt;EteSync Web&lt;/a&gt; - EteSync&#39;s official Web-based client (i.e., their Web app). (&lt;a href=&quot;https://client.etesync.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/etesync/etesync-web&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication systems&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Custom communication systems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/centrifugal/centrifugo&quot;&gt;Centrifugo&lt;/a&gt; - Language-agnostic real-time messaging (Websocket or SockJS) server. (&lt;a href=&quot;https://github.com/centrifugal/centrifugo#demo&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rafael-santiago/cherry&quot;&gt;Cherry&lt;/a&gt; - Tiny webchat server. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://conduit.rs/&quot;&gt;Conduit&lt;/a&gt; - A simple, fast, and reliable chat server powered by Matrix. (&lt;a href=&quot;https://gitlab.com/famedly/conduit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darkwire.io/&quot;&gt;Darkwire.io&lt;/a&gt; - End-to-end encrypted instant web chat. (&lt;a href=&quot;https://github.com/darkwire/darkwire.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freenetproject.org/index.html&quot;&gt;Freenet&lt;/a&gt; - Anonymously share files, browse and publish &quot;freesites&quot; (web sites accessible only through Freenet) and chat on forums. (&lt;a href=&quot;https://github.com/freenet/fred&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://moose-team.github.io/friends/&quot;&gt;Friends&lt;/a&gt; - P2P chat powered by the web. (&lt;a href=&quot;https://github.com/moose-team/friends&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnunet.org/&quot;&gt;GNUnet&lt;/a&gt; - Free software framework for decentralized, peer-to-peer networking. (&lt;a href=&quot;https://gnunet.org/git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotify.net/&quot;&gt;Gotify&lt;/a&gt; - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (&lt;a href=&quot;https://github.com/gotify/server&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/gotify/android&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hawkpost.co&quot;&gt;Hawkpost&lt;/a&gt; - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn&#39;t know how to encrypt it. The message is encrypted in their browser and sent to your email address. (&lt;a href=&quot;https://github.com/whitesmith/hawkpost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jami.net/&quot;&gt;Jami&lt;/a&gt; - Free and universal communication platform which preserves the user&#39;s privacy and freedoms (formerly GNU Ring). (&lt;a href=&quot;https://git.ring.cx/savoirfairelinux/ring-project&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jitsi.org/Projects/JitsiMeet&quot;&gt;Jitsi Meet&lt;/a&gt; - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (&lt;a href=&quot;https://github.com/jitsi/jitsi-meet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jitsi.org/Projects/JitsiVideobridge&quot;&gt;Jitsi Video Bridge&lt;/a&gt; - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (&lt;a href=&quot;https://github.com/jitsi/jitsi-videobridge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/php-kchat/kchat&quot;&gt;KChat&lt;/a&gt; - PHP Based Live Chat Application. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cryptag/leapchat&quot;&gt;LeapChat&lt;/a&gt; - Ephemeral, encrypted, in-browser chat rooms. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sdelements.github.io/lets-chat/&quot;&gt;Lets-Chat&lt;/a&gt; - Self hosted chat suite written in Node. (&lt;a href=&quot;https://github.com/sdelements/lets-chat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://librenews.io/&quot;&gt;LibreNews&lt;/a&gt; - Decentralized and secure breaking news notification system. (&lt;a href=&quot;https://github.com/milesmcc/LibreNews-Server/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://livehelperchat.com/&quot;&gt;Live Helper Chat&lt;/a&gt; - Live Support chat for your website. (&lt;a href=&quot;https://github.com/LiveHelperChat/livehelperchat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mattermost.org/&quot;&gt;Mattermost&lt;/a&gt; - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (&lt;a href=&quot;https://github.com/mattermost/mattermost-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0/Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://miaou.dystroy.org/login&quot;&gt;MiAOU&lt;/a&gt; - Multi-room persistent chat server. (&lt;a href=&quot;https://github.com/Canop/miaou&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mibew.org&quot;&gt;Mibew&lt;/a&gt; - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (&lt;a href=&quot;https://mibew.org/demo2&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mibew/mibew&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.mumble.info/wiki/Main_Page&quot;&gt;Mumble&lt;/a&gt; - Low-latency, high quality voice/text chat software. (&lt;a href=&quot;https://github.com/mumble-voip/mumble&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://wiki.mumble.info/wiki/3rd_Party_Applications&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IgorAntun/node-chat&quot;&gt;Node-Chat&lt;/a&gt; - Not-so-basic open-source chat with admin features. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ots.fyi/&quot;&gt;OTS&lt;/a&gt; - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. (&lt;a href=&quot;https://github.com/Luzifer/ots&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://papercups.io/&quot;&gt;Papercups&lt;/a&gt; - An open source live customer chat web app written in Elixir. (&lt;a href=&quot;https://app.papercups.io/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/papercups-io/papercups&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eikendev/pushbits&quot;&gt;PushBits&lt;/a&gt; - Self-hosted notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rallly.co&quot;&gt;Rallly&lt;/a&gt; - Rallly is a free collaborative scheduling service. (&lt;a href=&quot;https://github.com/lukevella/Rallly&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://retroshare.org&quot;&gt;RetroShare&lt;/a&gt; - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (&lt;a href=&quot;https://github.com/RetroShare/RetroShare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;С++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rocket.chat/&quot;&gt;Rocket.Chat&lt;/a&gt; - Teamchat solution similar to Gitter.im or Slack. (&lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/smallwat3r/shhh&quot;&gt;Shhh&lt;/a&gt; - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://spectrum.im/&quot;&gt;Spectrum 2&lt;/a&gt; - Spectrum 2 is an open source instant messaging transport. It allows users to chat together even when they are using different IM networks. (&lt;a href=&quot;https://github.com/hanzz/spectrum2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreed.me/&quot;&gt;Spreed&lt;/a&gt; - WebRTC audio/video calls, conferencing server, and web client. (&lt;a href=&quot;https://github.com/strukturag/spreed-webrtc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://matrix.org/docs/projects/server/synapse.html&quot;&gt;Synapse&lt;/a&gt; - Server for &lt;a href=&quot;https://matrix.org/&quot;&gt;Matrix&lt;/a&gt;, an open standard for decentralized persistent communication. (&lt;a href=&quot;https://github.com/matrix-org/synapse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://matrix.org/docs/projects/client/matrix-console-web&quot;&gt;Matrix Console Web&lt;/a&gt; - Web client meant to be a showcase of Matrix capabilities, and reference implementation of the Matrix standard. (&lt;a href=&quot;https://github.com/matrix-org/matrix-angular-sdk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://element.io&quot;&gt;Element&lt;/a&gt; - Fully-featured Matrix client for Web, iOS &amp;amp; Android. (&lt;a href=&quot;https://github.com/vector-im/element-web&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syndie.de&quot;&gt;Syndie&lt;/a&gt; - Syndie is a libre system for operating distributed forums. &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typpo/textbelt&quot;&gt;TextBelt&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tinode&quot;&gt;Tinode&lt;/a&gt; - Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android, JS webapp, scriptable command line; chatbots. (&lt;a href=&quot;https://sandbox.tinode.co/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tinode/chat&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/tinode/webapp&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tox.chat/&quot;&gt;Tox&lt;/a&gt; - Distributed, secure messenger with audio and video chat capabilities. (&lt;a href=&quot;https://github.com/irungentoo/toxcore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.trailofbits.com/2015/12/15/self-hosted-video-chat-with-tuber/&quot;&gt;Tuber&lt;/a&gt; - Peer-to-peer video chat that works. (&lt;a href=&quot;https://github.com/trailofbits/tubertc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lovasoa/whitebophir#wbo&quot;&gt;WBO&lt;/a&gt; - A web Whiteboard to collaborate in real-time on schemas, drawings, and notes. (&lt;a href=&quot;https://wbo.ophir.dev/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zeronet.io/&quot;&gt;ZeroNet&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Open, free, and uncensorable websites, using Bitcoin cryptography and BitTorrent network. (&lt;a href=&quot;https://github.com/HelloZeroNet/ZeroNet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zulip.org&quot;&gt;Zulip&lt;/a&gt; - Zulip is a powerful, open source group chat application. (&lt;a href=&quot;https://github.com/zulip/zulip&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0/Other&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Email&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Complete solutions&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Simple deployment of a mail server, e.g. for inexperienced or impatient admins.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://anonaddy.com&quot;&gt;AnonAddy&lt;/a&gt; - Open source email forwarding service for creating aliases. (&lt;a href=&quot;https://github.com/anonaddy/anonaddy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomav/docker-mailserver&quot;&gt;docker-mailserver&lt;/a&gt; - Fullstack but simple mail server (smtp, imap, antispam, antivirus, etc.). Only configuration files, no SQL database. Keep it simple and versioned. Easy to deploy and upgrade. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Excision-Mail/Excision-Mail&quot;&gt;Excision Mail&lt;/a&gt; - Fullstack, security focused mailserver based on OpenSMTPD for OpenBSD using ansible. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Shell/Ansible&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inboxen.org&quot;&gt;Inboxen&lt;/a&gt; - Inboxen is a service that provides you with an infinite number of unique inboxes. (&lt;a href=&quot;https://github.com/Inboxen/Inboxen&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/progmaticltd/homebox&quot;&gt;homebox&lt;/a&gt; - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.iredmail.org/&quot;&gt;iRedMail&lt;/a&gt; - Full-featured mail server solution based on Postfix and Dovecot. (&lt;a href=&quot;https://github.com/iredmail/iRedMail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailcow.email/&quot;&gt;Mailcow&lt;/a&gt; - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (&lt;a href=&quot;https://github.com/mailcow/mailcow-dockerized&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Docker/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailu.io/&quot;&gt;Mailu&lt;/a&gt; - Mailu is a simple yet full-featured mail server as a set of Docker images. (&lt;a href=&quot;https://github.com/Mailu/Mailu/wiki/Demo-server&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mailu/Mailu&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailinabox.email/&quot;&gt;Mail-in-a-Box&lt;/a&gt; - Turns any Ubuntu server into a fully functional mail server with one command. (&lt;a href=&quot;https://github.com/mail-in-a-box/mailinabox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://modoboa.org/en/&quot;&gt;Modoboa&lt;/a&gt; - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (&lt;a href=&quot;https://github.com/tonioo/modoboa&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ptorx.com/&quot;&gt;Ptorx&lt;/a&gt; - 📩🛡 Email privacy. Anonymously send and receive with alias forwarding. (&lt;a href=&quot;https://github.com/xyfir/ptorx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.qmailtoaster.com/&quot;&gt;Qmailtoaster&lt;/a&gt; - Stable, full-featured, easy-to-install mail server based on qmail. (&lt;a href=&quot;https://github.com/QMailToaster/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Multiple&lt;/code&gt; &lt;code&gt;Linux&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://simplelogin.io&quot;&gt;SimpleLogin&lt;/a&gt; - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. (&lt;a href=&quot;https://github.com/simple-login/app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/simple-nixos-mailserver/nixos-mailserver&quot;&gt;Simple NixOS Mailserver&lt;/a&gt; - Complete mailserver solution leveraging the Nix Ecosystem. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildduck.email/&quot;&gt;wildduck&lt;/a&gt; - Scalable no-SPOF IMAP/POP3 mail server. (&lt;a href=&quot;https://github.com/nodemailer/wildduck&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EUPL-1.2&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mail Transfer Agents&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;MTAs / SMTP servers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blitiri.com.ar/p/chasquid/&quot;&gt;chasquid&lt;/a&gt; - SMTP (email) server with a focus on simplicity, security, and ease of operation. (&lt;a href=&quot;https://blitiri.com.ar/git/r/chasquid/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.courier-mta.org/&quot;&gt;Courier MTA&lt;/a&gt; - Fast, scalable, enterprise mail/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (&lt;a href=&quot;http://www.courier-mta.org/repo.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.exim.org/&quot;&gt;Exim&lt;/a&gt; - Message transfer agent (MTA) developed at the University of Cambridge. (&lt;a href=&quot;http://git.exim.org/exim.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://haraka.github.io/&quot;&gt;Haraka&lt;/a&gt; - High-performance, pluginable SMTP server written in Javascript. (&lt;a href=&quot;https://github.com/haraka/Haraka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mailcatcher.me/&quot;&gt;MailCatcher&lt;/a&gt; - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (&lt;a href=&quot;https://github.com/sj26/mailcatcher&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/markbeeson/maildrop&quot;&gt;Maildrop&lt;/a&gt; - Disposable email SMTP server, also useful for development. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mailhog/MailHog&quot;&gt;MailHog&lt;/a&gt; - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opensmtpd.org/&quot;&gt;OpenSMTPD&lt;/a&gt; - Secure SMTP server implementation from the OpenBSD project. (&lt;a href=&quot;http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/smtpd/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postfix.org/&quot;&gt;Postfix&lt;/a&gt; - Fast, easy to administer, and secure Sendmail replacement. &lt;code&gt;IPL-1.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cr.yp.to/qmail.html&quot;&gt;Qmail&lt;/a&gt; - Secure Sendmail replacement. (&lt;a href=&quot;https://sources.debian.net/src/netqmail/1.06-5/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendmail.com/sm/open_source/&quot;&gt;Sendmail&lt;/a&gt; - Message transfer agent (MTA). &lt;code&gt;Sendmail&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://slimta.org&quot;&gt;Slimta&lt;/a&gt; - Mail Transfer Library built on Python. (&lt;a href=&quot;https://github.com/slimta/python-slimta&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mail Delivery Agents&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;MDAs - IMAP/POP3 software&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cyrusimap.org/&quot;&gt;Cyrus IMAP/POP3&lt;/a&gt; - Intended to be run on sealed servers, where normal users are not permitted to log in. (&lt;a href=&quot;https://github.com/cyrusimap/cyrus-imapd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause-Attribution&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dovecot.org/&quot;&gt;Dovecot&lt;/a&gt; - IMAP and POP3 server written primarily with security in mind. (&lt;a href=&quot;https://github.com/dovecot/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT/LGPL-2.1&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mailpiler.org/wiki/start&quot;&gt;Piler&lt;/a&gt; - feature-rich open source email archiving solution. (&lt;a href=&quot;https://bitbucket.org/jsuto/piler&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mailing lists and Newsletters&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Mailing lists servers and mass mailing software - one message to many recipients.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dadamailproject.com/&quot;&gt;Dada Mail&lt;/a&gt; - Web-based list management system that can be used for announcement lists and/or discussion lists. (&lt;a href=&quot;https://github.com/justingit/dada-mail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listmonk.app/&quot;&gt;Listmonk&lt;/a&gt; - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (&lt;a href=&quot;https://github.com/knadh/listmonk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freeCodeCamp/mail-for-good&quot;&gt;Mail For Good&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Open source email campaign management tool for nonprofits. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/mailman/&quot;&gt;Mailman&lt;/a&gt; - The Gnu mailing list server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailtrain.org/&quot;&gt;Mailtrain&lt;/a&gt; - self hosted newsletter application built on Node.js (v5+) and MySQL (v5.5+ or MariaDB). (&lt;a href=&quot;https://github.com/andris9/mailtrain&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mailyherald.org/&quot;&gt;MailyHerald&lt;/a&gt; - Self-hosted Mailchimp alternative that you can easily integrate with your site. Helps you send and manage your application mailings. It supports email marketing and conducting the daily stream of notifications you send to your users. (&lt;a href=&quot;https://github.com/Sology/maily_herald&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mautic.org/&quot;&gt;Mautic&lt;/a&gt; - Mautic is marketing automation software (email, social and more). (&lt;a href=&quot;https://github.com/mautic/mautic&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.list.org/HyperKitty&quot;&gt;HyperKitty&lt;/a&gt; - Open source Django application to provide a web interface to access GNU Mailman v3 archives. (&lt;a href=&quot;https://lists.mailman3.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/mailman/hyperkitty&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phplist.org&quot;&gt;phpList&lt;/a&gt; - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (&lt;a href=&quot;https://github.com/phpList/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atech/postal&quot;&gt;Postal&lt;/a&gt; - Fully featured open source mail delivery platform for incoming and outgoing e-mail. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mailman3.org/projects/postorius/en/latest/&quot;&gt;Postorius&lt;/a&gt; - Web user interface to access GNU Mailman. (&lt;a href=&quot;https://gitlab.com/mailman/postorius/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://schleuder.nadir.org/&quot;&gt;Schleuder&lt;/a&gt; - GPG-enabled mailing list manager with resending-capabilities. (&lt;a href=&quot;https://0xacab.org/schleuder/schleuder/tree/master&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sympa.org/&quot;&gt;Sympa&lt;/a&gt; - Mailing list manager. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Webmail clients&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.afterlogic.org/webmail-lite&quot;&gt;Afterlogic WebMail Lite&lt;/a&gt; - Fast and easy-to-use webmail front-end for your existing IMAP mail server, Plesk or cPanel. (&lt;a href=&quot;https://lite.afterlogic.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/afterlogic/webmail-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://cypht.org/index.html&quot;&gt;Cypht&lt;/a&gt; - Feed reader for your email accounts. (&lt;a href=&quot;https://github.com/jasonmunro/hm3&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.horde.org/apps/imp/&quot;&gt;IMP&lt;/a&gt; - HORDE application that provides webmail access to IMAP and POP3 accounts. (&lt;a href=&quot;http://demo.horde.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.horde.org/download/imp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.marcnuri.com/isotope-mail-client-introduction/&quot;&gt;Isotope Mail&lt;/a&gt; - Microservice based webmail client built with ReactJS and Spring. (&lt;a href=&quot;https://github.com/manusa/isotope-mail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailcare.io&quot;&gt;MailCare&lt;/a&gt; - Open source disposable email address service. (&lt;a href=&quot;https://github.com/mailcare/mailcare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mailpile.is/&quot;&gt;Mailpile&lt;/a&gt; - Webmail client with search, filtering, encryption features and more. (&lt;a href=&quot;https://github.com/mailpile/Mailpile&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rainloop.net/&quot;&gt;RainLoop&lt;/a&gt; - Simple, modern and fast webmail with IMAP/SMTP Support and multi accounting. (&lt;a href=&quot;http://demo.rainloop.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RainLoop/rainloop-webmail&quot;&gt;Source Code&lt;/a&gt;). &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://roundcube.net&quot;&gt;Roundcube&lt;/a&gt; - Browser-based IMAP client with an application-like user interface. (&lt;a href=&quot;https://github.com/roundcube/roundcubemail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://squirrelmail.org&quot;&gt;SquirrelMail&lt;/a&gt; - Another browser-based IMAP client. (&lt;a href=&quot;https://sourceforge.net/p/squirrelmail/code/HEAD/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;IRC&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Relay_Chat&quot;&gt;IRC&lt;/a&gt; communication software&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://convos.chat/&quot;&gt;Convos&lt;/a&gt; - Always online web IRC client. (&lt;a href=&quot;https://convos.chat/#instant-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;http://github.com/nordaaker/convos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inspircd.org/&quot;&gt;InspIRCd&lt;/a&gt; - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (&lt;a href=&quot;https://github.com/inspircd/inspircd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GFDL-1.2-only&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khlieng/dispatch&quot;&gt;Dispatch&lt;/a&gt; - Self-hosted web IRC client written in Go. (&lt;a href=&quot;https://dispatch.khlieng.com/connect&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kiwiirc.com/&quot;&gt;Kiwi IRC&lt;/a&gt; - Responsive web IRC client with theming support. (&lt;a href=&quot;https://kiwiirc.com/nextclient/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kiwiirc/kiwiirc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ngircd.barton.de/&quot;&gt;ngircd&lt;/a&gt; - Free, portable and lightweight Internet Relay Chat server for small or private networks. (&lt;a href=&quot;https://github.com/ngircd/ngircd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oragono.io&quot;&gt;Oragono&lt;/a&gt; - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. (&lt;a href=&quot;https://github.com/oragono/oragono/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thelounge.github.io/&quot;&gt;The Lounge&lt;/a&gt; - Self-hosted web IRC client. (&lt;a href=&quot;https://demo.thelounge.chat/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thelounge/lounge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://quassel-irc.org/&quot;&gt;Quassel IRC&lt;/a&gt; - distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (&lt;a href=&quot;https://github.com/quassel/quassel&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://robustirc.net/&quot;&gt;Robust IRC&lt;/a&gt; - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (&lt;a href=&quot;https://github.com/robustirc/robustirc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tt-rss.org/tt-irc/&quot;&gt;Tiny Tiny IRC&lt;/a&gt; - An open source AJAX-powered chat platform with support for IRC (&lt;a href=&quot;https://git.tt-rss.org/fox/tt-irc&quot;&gt;Source Code&lt;/a&gt;). &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weechat.org/&quot;&gt;Weechat&lt;/a&gt; - Fast, light and extensible chat client. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/glowing-bear/glowing-bear/&quot;&gt;Glowing Bear&lt;/a&gt; - A web frontend for WeeChat. (&lt;a href=&quot;https://www.glowing-bear.org&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wiki.znc.in/ZNC&quot;&gt;ZNC&lt;/a&gt; - Advanced IRC bouncer. (&lt;a href=&quot;https://github.com/znc/znc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SIP&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Session_Initiation_Protocol&quot;&gt;SIP&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/IP_PBX&quot;&gt;IPBX&lt;/a&gt; telephony software&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.asterisk.org/&quot;&gt;Asterisk&lt;/a&gt; - Easy to use but advanced IP PBX system, VoIP gateway and conference server. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.astppbilling.org/&quot;&gt;ASTPP&lt;/a&gt; - is an Open Source VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (&lt;a href=&quot;https://github.com/iNextrix/ASTPP&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.freepbx.org&quot;&gt;Freepbx&lt;/a&gt; - Web-based open source GUI that controls and manages Asterisk. (&lt;a href=&quot;http://git.freepbx.org/projects/FREEPBX&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freeswitch.org/&quot;&gt;FreeSWITCH&lt;/a&gt; - Scalable open source cross-platform telephony platform. (&lt;a href=&quot;https://freeswitch.org/stash/projects/FS/repos/freeswitch/browse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fusionpbx.com/&quot;&gt;FusionPBX&lt;/a&gt; - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (&lt;a href=&quot;https://github.com/fusionpbx/fusionpbx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-1.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sipcapture.org/&quot;&gt;Homer&lt;/a&gt; - Troubleshooting and monitoring VoIP calls. (&lt;a href=&quot;https://github.com/sipcapture/homer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Angular/C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kamailio.org/w/&quot;&gt;Kamailio&lt;/a&gt; - Modular SIP server (registrar/proxy/router/etc). (&lt;a href=&quot;https://github.com/kamailio/kamailio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://2600hz.org/&quot;&gt;Kazoo&lt;/a&gt; - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (&lt;a href=&quot;https://github.com/2600hz/KAZOO&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-1.1&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.guardianproject.info/projects/ostel/wiki/Server_Documentation&quot;&gt;Ostel&lt;/a&gt; - Secure SIP telephony setup with ZRTP encryption. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://routr.io&quot;&gt;Routr&lt;/a&gt; - A lightweight sip proxy, location server, and registrar for a reliable and scalable SIP infrastructure. (&lt;a href=&quot;https://demo.routr.io/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/fonoster/routr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sipxcom.org/&quot;&gt;SipXcom&lt;/a&gt; - Open source unified communications system. (&lt;a href=&quot;https://github.com/sipXcom/sipxecs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sip3.io/&quot;&gt;SIP3&lt;/a&gt; - VoIP troubleshooting and monitoring platform. (&lt;a href=&quot;https://demo.sip3.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sip3io/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Kotlin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wazo-platform.org/&quot;&gt;Wazo&lt;/a&gt; - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (&lt;a href=&quot;https://github.com/wazo-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Social Networks and Forums&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abilian/abilian-sbe&quot;&gt;Abilian SBE&lt;/a&gt; - Open Source Collaboration and Social Networking framework and platform. &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getanahita.com/&quot;&gt;Anahita&lt;/a&gt; - Open Source Social Networking Framework and Platform. (&lt;a href=&quot;https://github.com/anahitasocial&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bbpress.org/&quot;&gt;bbPress&lt;/a&gt; - bbPress is forum software with a twist from the creators of WordPress. Easily setup discussion forums inside your WordPress.org powered site. (&lt;a href=&quot;https://bbpress.trac.wordpress.org/browser/trunk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trybootcamp.vitorfs.com&quot;&gt;Bootcamp&lt;/a&gt; - Enterprise social network. (&lt;a href=&quot;https://github.com/vitorfs/bootcamp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://buddycloud.com/&quot;&gt;Buddycloud&lt;/a&gt; - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (&lt;a href=&quot;https://github.com/buddycloud&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buddypress.org/about/&quot;&gt;BuddyPress&lt;/a&gt; - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (&lt;a href=&quot;https://github.com/buddypress/BuddyPress&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daveajones/cartulary&quot;&gt;cartulary&lt;/a&gt; - RSS reader, readability tool, article archiver, microblogger, social graph manager and reading list manager. &lt;code&gt;CDDL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/commento/commento&quot;&gt;Commento&lt;/a&gt; - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;GO&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coralproject.net/&quot;&gt;Coral&lt;/a&gt; - A better commenting experience from Vox Media. (&lt;a href=&quot;https://github.com/coralproject/talk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diasporafoundation.org/&quot;&gt;diaspora*&lt;/a&gt; - Distributed social networking server. (&lt;a href=&quot;https://podupti.me/go.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/diaspora/diaspora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt; - Advanced forum / community solution based on Ruby and JS. (&lt;a href=&quot;https://try.discourse.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/discourse/discourse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dyu/comments&quot;&gt;dyu/comments&lt;/a&gt; - Real-time, markdown-enabled comment engine powered by leveldb. (&lt;a href=&quot;https://dyu.github.io/comments/real-time/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epochtalk/epochtalk&quot;&gt;EpochTalk&lt;/a&gt; - Next Generation Forum Software. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elgg.org/&quot;&gt;Elgg&lt;/a&gt; - Powerful open source social networking engine. (&lt;a href=&quot;https://github.com/Elgg/Elgg&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flarum.org&quot;&gt;Flarum&lt;/a&gt; - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (&lt;a href=&quot;https://github.com/flarum/flarum&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flaskbb.org/&quot;&gt;flaskbb&lt;/a&gt; - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (&lt;a href=&quot;https://github.com/sh4nks/flaskbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fluxbb.org/&quot;&gt;FluxBB&lt;/a&gt; - Fast, light, user-friendly forum software for your website. (&lt;a href=&quot;https://github.com/fluxbb/fluxbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friendi.ca/&quot;&gt;Friendica&lt;/a&gt; - Social Communication Server. (&lt;a href=&quot;https://github.com/friendica/friendica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glosa/glosa-server&quot;&gt;Glosa&lt;/a&gt; - Open source commentary system easy to integrate with static pages. You can import from Disqus. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnu.io/social/&quot;&gt;GNU social&lt;/a&gt; - Social communication software for both public and private communications. (&lt;a href=&quot;https://notabug.org/diogo/gnu-social&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gosora-project.com/&quot;&gt;Gosora&lt;/a&gt; - Gosora is an ultra-fast and secure forum software written in Go that balances usability with functionality. (&lt;a href=&quot;https://github.com/Azareal/Gosora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hubzilla.org&quot;&gt;Hubzilla&lt;/a&gt; - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications/social platform. (&lt;a href=&quot;https://framagit.org/hubzilla/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.humhub.org/&quot;&gt;HumHub&lt;/a&gt; - Flexible kit for private social networks. (&lt;a href=&quot;https://github.com/humhub/humhub&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://posativ.org/isso/&quot;&gt;Isso&lt;/a&gt; - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (&lt;a href=&quot;https://github.com/posativ/isso&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.lemmy.ml/#/&quot;&gt;Lemmy&lt;/a&gt; - A link aggregator / reddit clone for the fediverse. Reddit alternative built in Rust. (&lt;a href=&quot;https://github.com/dessalines/lemmy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.loomio.org/&quot;&gt;Loomio&lt;/a&gt; - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (&lt;a href=&quot;https://github.com/loomio/loomio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/&quot;&gt;Mastodon&lt;/a&gt; - Federated microblogging server, an alternative to GNU social. (&lt;a href=&quot;https://github.com/tootsuite/mastodon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://misago-project.org/&quot;&gt;Misago&lt;/a&gt; - Misago is fully featured modern forum application that is fast, scalable and responsive. (&lt;a href=&quot;https://github.com/rafalp/Misago&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://misskey.io/&quot;&gt;Misskey&lt;/a&gt; - Decentralized app-like microblogging server/SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. (&lt;a href=&quot;https://github.com/syuilo/misskey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://movim.eu/&quot;&gt;Movim&lt;/a&gt; - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (&lt;a href=&quot;https://github.com/movim/movim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mybb.com/&quot;&gt;MyBB&lt;/a&gt; - Free, extensible forum software package. (&lt;a href=&quot;https://github.com/mybb/mybb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodebb.org/&quot;&gt;NodeBB&lt;/a&gt; - Node.js based forum software built for the modern web. (&lt;a href=&quot;https://github.com/NodeBB/NodeBB&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.goodoldweb.com/&quot;&gt;Orange Forum&lt;/a&gt; - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (&lt;a href=&quot;https://github.com/s-gv/orangeforum&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensource-socialnetwork.org/&quot;&gt;OSSN&lt;/a&gt; - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (&lt;a href=&quot;https://github.com/opensource-socialnetwork/opensource-socialnetwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ssbc/patchwork&quot;&gt;Patchwork&lt;/a&gt; - Decentralized messaging and sharing app built on top of Secure Scuttlebutt (SSB). &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phpbb.com/&quot;&gt;phpBB&lt;/a&gt; - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (&lt;a href=&quot;https://github.com/phpbb/phpbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixelfed.social&quot;&gt;PixelFed&lt;/a&gt; - Pixelfed is an open-source, federated platform alternate to Instagram. (&lt;a href=&quot;http://github.com/pixelfed/pixelfed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP\HTML\Vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pleroma.social&quot;&gt;Pleroma&lt;/a&gt; - Federated microblogging server, Mastodon, GNU social, &amp;amp; ActivityPub compatible. (&lt;a href=&quot;https://git.pleroma.social/pleroma/pleroma&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pixelpark/ppnet&quot;&gt;PPnet&lt;/a&gt; - Create and host your own social network. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pump.io/&quot;&gt;Pump.io&lt;/a&gt; - Stream server that does most of what people really want from a social network. (&lt;a href=&quot;https://github.com/e14n/pump.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://remark42.com/&quot;&gt;remark42&lt;/a&gt; - A lightweight and simple comment engine, which doesn&#39;t spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (&lt;a href=&quot;https://remark42.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/umputun/remark&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://satellity.org/&quot;&gt;Satellity&lt;/a&gt; - Yet another open source forum written in Golang, React and PostgreSQL. (&lt;a href=&quot;https://github.com/satellity/satellity&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scoold.com&quot;&gt;Scoold&lt;/a&gt; - Stack Overflow in a JAR. An enterprise-ready Q&amp;amp;A platform with full-text search, SAML, LDAP integration and social login support. (&lt;a href=&quot;https://live.scoold.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Erudika/scoold&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplemachines.org/&quot;&gt;Simple Machines Forum&lt;/a&gt; - Free, professional grade software package that allows you to set up your own online community within minutes. (&lt;a href=&quot;https://github.com/SimpleMachines/SMF2.1&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://socialhome.network&quot;&gt;Socialhome&lt;/a&gt; - Federated and decentralized profile builder and social network engine. (&lt;a href=&quot;https://socialhome.network/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaywink/socialhome&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.talkyard.io/&quot;&gt;Talkyard&lt;/a&gt; - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack/StackOverflow/Discourse/Reddit/Disqus hybrid). (&lt;a href=&quot;https://www.talkyard.io/forum/latest&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/debiki/talkyard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tokumei.co/&quot;&gt;Tokumei&lt;/a&gt; - Anonymous microblogging platform. (&lt;a href=&quot;https://gitlab.com/tokumei/tokumei&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;rc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thredded/thredded&quot;&gt;Thredded&lt;/a&gt; - Forums, feature-rich and simple. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://twister.net.co/&quot;&gt;twister&lt;/a&gt; - Fully decentralized P2P microblogging platform leveraging the free software implementations of Bitcoin and BitTorrent protocols. (&lt;a href=&quot;https://github.com/miguelfreitas/twister-core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twtxt.net&quot;&gt;twtxt.net&lt;/a&gt; - a Self-Hosted, Twitter™-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. (&lt;a href=&quot;https://github.com/prologic/twtxt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/rss2twtxt&quot;&gt;rss2twtxt&lt;/a&gt; - An RSS/Atom feed aggregator command-line tool and web service that consumes RSS/Atom and produces twtxt.net feeds for consumption by twtxt clients. (&lt;a href=&quot;https://feeds.twtxt.net&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vanillaforums.org/&quot;&gt;Vanilla Forums&lt;/a&gt; - Simple and flexible forum software. (&lt;a href=&quot;https://github.com/vanilla/vanilla&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zusam.org&quot;&gt;Zusam&lt;/a&gt; - Free and open-source way to self-host private forums for groups of friends or family. (&lt;a href=&quot;https://demo.zusam.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/zusam/zusam&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;XMPP&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/XMPP&quot;&gt;Extensible Messaging and Presence Protocol&lt;/a&gt; software&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;XMPP Servers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ejabberd.im/&quot;&gt;ejabberd&lt;/a&gt; - XMPP instant messaging server. (&lt;a href=&quot;https://github.com/processone/ejabberd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://kontalk.org/&quot;&gt;Kontalk&lt;/a&gt; - Kontalk is an Open Source Messenger, similar to WhatsApp (app for android only currently), including end-to-end encryption, server is based on Tigase XMPP Server. (&lt;a href=&quot;https://github.com/kontalk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://metronome.im/&quot;&gt;Metronome IM&lt;/a&gt; - Fork of Prosody IM. (&lt;a href=&quot;https://github.com/maranda/metronome&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.erlang-solutions.com/products/mongooseim.html&quot;&gt;MongooseIM&lt;/a&gt; - Mobile messaging platform with a focus on performance and scalability. (&lt;a href=&quot;https://github.com/esl/MongooseIM&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.igniterealtime.org/projects/openfire/&quot;&gt;Openfire&lt;/a&gt; - Real time collaboration (RTC) server. (&lt;a href=&quot;https://github.com/igniterealtime/Openfire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://prosody.im/&quot;&gt;Prosody IM&lt;/a&gt; - Feature-rich and easy to configure XMPP server. (&lt;a href=&quot;http://hg.prosody.im/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tigase.net/content/tigase-xmpp-server&quot;&gt;Tigase&lt;/a&gt; - XMPP server implementation in Java. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;XMPP Web Clients&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://candy-chat.github.io/candy/&quot;&gt;Candy&lt;/a&gt; - Multi user XMPP client written in Javascript. (&lt;a href=&quot;https://github.com/candy-chat/candy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://conversejs.org/&quot;&gt;Converse.js&lt;/a&gt; - Free and open-source XMPP chat client in your browser. (&lt;a href=&quot;https://github.com/jcbrand/converse.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsxc.org&quot;&gt;JSXC&lt;/a&gt; - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud/Owncloud and SOGo. (&lt;a href=&quot;https://github.com/jsxc/jsxc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salut-a-toi.org/&quot;&gt;Salut à Toi&lt;/a&gt; - Multipurpose, multi frontend, libre and decentralized communication tool. (&lt;a href=&quot;http://repos.goffi.org/sat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://wiki.goffi.org/wiki/Libervia/en&quot;&gt;Libervia&lt;/a&gt; - Web frontend from Salut à Toi. (&lt;a href=&quot;http://repos.goffi.org/libervia&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conference Management&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bigbluebutton.org/&quot;&gt;BigBlueButton&lt;/a&gt; - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (&lt;a href=&quot;https://demo.bigbluebutton.org/gl&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bigbluebutton/bigbluebutton&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://usecod.com/&quot;&gt;Conference Organizing Distribution (COD)&lt;/a&gt; - Create conference and event websites built on top of Drupal. (&lt;a href=&quot;http://cgit.drupalcode.org/cod&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frab.github.io/frab/&quot;&gt;frab&lt;/a&gt; - web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (&lt;a href=&quot;https://github.com/frab/frab&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getindico.io/&quot;&gt;indico&lt;/a&gt; - A feature-rich event management system, made @ CERN, the place where the Web was born. (&lt;a href=&quot;https://sandbox.getindico.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/indico/indico&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pkp.sfu.ca/ocs/&quot;&gt;Open Conference Systems (OCS)&lt;/a&gt; - is a free Web publishing tool that will create a complete Web presence for your scholarly conference. (&lt;a href=&quot;https://pkp.sfu.ca/ocs/ocs_demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/pkp/ocs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opencfp/opencfp&quot;&gt;OpenCFP&lt;/a&gt; - OpenCFP is a PHP-based conference talk submission system. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://openconferenceware.org/&quot;&gt;OpenConferenceWare&lt;/a&gt; - An open source web application for supporting conference-like events. This customizable, general-purpose platform provides proposals, sessions, schedules, tracks, user profiles. (&lt;a href=&quot;https://github.com/osbridge/openconferenceware&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://osem.io/&quot;&gt;osem&lt;/a&gt; - Event management tailored to free Software conferences. (&lt;a href=&quot;http://demo.osem.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/openSUSE/osem&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pretalx.org&quot;&gt;pretalx&lt;/a&gt; - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (&lt;a href=&quot;https://github.com/pretalx/pretalx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content Management Systems (CMS)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;CMS are a practical way to setup a website with many features. CMS often come with third party plugins, themes and functionality that is easy to add and customize to your needs. See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#blogging-platforms&quot;&gt;Blogging Platforms&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static Site Generators&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alfresco.com/products/community/download&quot;&gt;Alfresco Community Edition&lt;/a&gt; - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. (&lt;a href=&quot;https://hub.alfresco.com/t5/alfresco-content-services-hub/project-overview-repository/ba-p/290502&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://apostrophecms.org/&quot;&gt;Apostrophe&lt;/a&gt; - Node.js CMS with a focus on extensible in-context editing tools. (&lt;a href=&quot;http://demo.apostrophecms.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/punkave/apostrophe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://b2evolution.net/&quot;&gt;b2evolution CMS&lt;/a&gt; - The most integrated CMS ever: b2evolution includes everything you need to build websites for publishing, sharing and interacting with your community. (&lt;a href=&quot;https://demo.b2evolution.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/b2evolution/b2evolution&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://backdropcms.org/&quot;&gt;Backdrop CMS&lt;/a&gt; - Comprehensive CMS for small to medium sized businesses and non-profits. (&lt;a href=&quot;https://github.com/backdrop/backdrop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigtreecms.org/&quot;&gt;BigTree CMS&lt;/a&gt; - Straightforward, well documented, and capable written with PHP and MySQL. (&lt;a href=&quot;https://github.com/bigtreecms/BigTree-CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bolt.cm/&quot;&gt;Bolt CMS&lt;/a&gt; - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (&lt;a href=&quot;https://try.bolt.cm/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bolt/bolt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cmsmadesimple.org/&quot;&gt;CMS Made Simple&lt;/a&gt; - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (&lt;a href=&quot;http://svn.cmsmadesimple.org/svn/cmsmadesimple/trunk/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://getcockpit.com&quot;&gt;Cockpit&lt;/a&gt; - Simple Content Platform to manage any structured content. (&lt;a href=&quot;https://github.com/agentejo/cockpit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.concrete5.org/&quot;&gt;Concrete 5 CMS&lt;/a&gt; - Open source content management system. (&lt;a href=&quot;https://github.com/concrete5/concrete5&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contao.org/&quot;&gt;Contao&lt;/a&gt; - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (&lt;a href=&quot;https://github.com/contao/contao/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.couchcms.com/&quot;&gt;CouchCMS&lt;/a&gt; - Simple Open-Source CMS for designers. (&lt;a href=&quot;https://github.com/CouchCMS/CouchCMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CPAL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://getdirectus.com/&quot;&gt;Directus&lt;/a&gt; - Directus is a powerful and intuitive headless CMS for managing SQL databases with custom architectures. Built around a robust and extensible API, this decoupled content management framework is perfect for websites, apps, or multi-client projects. (&lt;a href=&quot;https://github.com/directus/directus&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/&quot;&gt;Drupal&lt;/a&gt; - Advanced open source content management platform. (&lt;a href=&quot;http://cgit.drupalcode.org/drupal&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elabftw.net&quot;&gt;eLabFTW&lt;/a&gt; - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators…. (&lt;a href=&quot;https://demo.elabftw.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/elabftw/elabftw&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomas4019/expressa&quot;&gt;Expressa&lt;/a&gt; - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://get-simple.info/&quot;&gt;GetSimple CMS&lt;/a&gt; - The Simplest Content Management System. Ever. (&lt;a href=&quot;https://github.com/GetSimpleCMS/GetSimpleCMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.joomla.org/&quot;&gt;Joomla!&lt;/a&gt; - Advanced Content Management System (CMS). (&lt;a href=&quot;https://github.com/joomla/joomla-cms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://keystonejs.com/&quot;&gt;KeystoneJS&lt;/a&gt; - CMS and Web Application Platform. (&lt;a href=&quot;http://demo.keystonejs.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/keystonejs/keystone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://modx.com/&quot;&gt;MODX&lt;/a&gt; - MODX is an advanced content management and publishing platform. The current version is called &#39;Revolution&#39;. (&lt;a href=&quot;https://github.com/modxcms/revolution&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.neos.io&quot;&gt;Neos&lt;/a&gt; - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (&lt;a href=&quot;https://git.typo3.org/Packages/TYPO3.Neos.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/noosfero/noosfero&quot;&gt;Noosfero&lt;/a&gt; - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://octobercms.com/&quot;&gt;october&lt;/a&gt; - Free, open-source, self-hosted CMS platform. (&lt;a href=&quot;https://github.com/octobercms/october&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://omeka.org&quot;&gt;Omeka&lt;/a&gt; - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (&lt;a href=&quot;http://omeka.org/showcase/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/omeka/Omeka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagekit.com/&quot;&gt;Pagekit&lt;/a&gt; - New modern CMS to create and share. (&lt;a href=&quot;https://github.com/pagekit/pagekit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://picocms.org/&quot;&gt;Pico&lt;/a&gt; - Stupidly simple, blazing fast, flat file CMS. (&lt;a href=&quot;https://github.com/picocms/Pico&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pimcore.org/&quot;&gt;Pimcore&lt;/a&gt; - Multi-Channel Experience and Engagement Management Platform. (&lt;a href=&quot;https://github.com/pimcore/pimcore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plone.org/&quot;&gt;Plone&lt;/a&gt; - Powerful open-source CMS system. (&lt;a href=&quot;https://github.com/plone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ZPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://processwire.com/&quot;&gt;ProcessWire&lt;/a&gt; - ProcessWire is an open source content management system (CMS) and web application framework aimed at the needs of designers, developers and their clients. (&lt;a href=&quot;https://github.com/ryancramerdesign/ProcessWire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://propertywebbuilder.com&quot;&gt;PropertyWebBuilder&lt;/a&gt; - Ultimate Ruby on Rails engine for creating real estate websites. (&lt;a href=&quot;https://propertywebbuilder.herokuapp.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/etewiah/property_web_builder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://publify.github.io/&quot;&gt;Publify&lt;/a&gt; - Simple but full featured web publishing software. (&lt;a href=&quot;https://github.com/publify/publify&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redaxo.org&quot;&gt;REDAXO&lt;/a&gt; - Simple, flexible and useful content management system (documentation only available in German). (&lt;a href=&quot;https://github.com/redaxo/redaxo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redaxscript.com&quot;&gt;Redaxscript&lt;/a&gt; - Ultra lightweight CMS for MySQL, SQLite and PostgreSQL. (&lt;a href=&quot;https://demo.redaxscript.com/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/redaxmedia/redaxscript&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.roadiz.io/&quot;&gt;Roadiz&lt;/a&gt; - Modern CMS based on a node system which can handle many types of services. (&lt;a href=&quot;https://github.com/roadiz/roadiz&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.silverstripe.org&quot;&gt;SilverStripe&lt;/a&gt; - Easy to use CMS with powerful MVC framework underlying. (&lt;a href=&quot;http://demo.silverstripe.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/silverstripe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.spip.net/fr&quot;&gt;SPIP&lt;/a&gt; - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (&lt;a href=&quot;https://core.spip.net/projects/spip/repository&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://squidex.io&quot;&gt;Squidex&lt;/a&gt; - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (&lt;a href=&quot;http://cloud.squidex.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Squidex/squidex&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;.NET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/&quot;&gt;Strapi&lt;/a&gt; - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (&lt;a href=&quot;https://github.com/strapi/strapi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.subrion.org&quot;&gt;Subrion&lt;/a&gt; - Subrion is a free open source content management system that allows you to build websites for any purpose. Yes, from blog to corporate mega portal. (&lt;a href=&quot;http://demos.subrion.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/intelliants/subrion&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://textpattern.com/&quot;&gt;Textpattern&lt;/a&gt; - Flexible, elegant and easy-to-use CMS. (&lt;a href=&quot;http://textpattern.co/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/textpattern/textpattern&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typemill.net/&quot;&gt;Typemill&lt;/a&gt; - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. (&lt;a href=&quot;https://github.com/typemill/typemill&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typo3.org/&quot;&gt;TYPO3&lt;/a&gt; - Powerful and advanced CMS with a large community. (&lt;a href=&quot;https://github.com/TYPO3/TYPO3.CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://umbraco.com/&quot;&gt;Umbraco&lt;/a&gt; - The friendly CMS. Free and open source with an amazing community. (&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;.NET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wagtail.io/&quot;&gt;Wagtail&lt;/a&gt; - Django content management system focused on flexibility and user experience. (&lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wondercms.com&quot;&gt;WonderCMS&lt;/a&gt; - WonderCMS is the smallest flat file CMS since 2008. (&lt;a href=&quot;https://www.wondercms.com/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/robiso/wondercms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; - World&#39;s most-used blogging and CMS engine. (&lt;a href=&quot;https://github.com/WordPress/WordPress&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://writefreely.org&quot;&gt;WriteFreely&lt;/a&gt; - Writing software for starting a minimalist, federated blog — or an entire community. (&lt;a href=&quot;https://github.com/writeas/writefreely&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Recipe management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/open-eats/OpenEats&quot;&gt;OpenEats&lt;/a&gt; - Recipe management site that allows users to create, store, share and rate recipes, create grocery lists, and more. (&lt;a href=&quot;https://open-eats.github.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vabene1111/recipes&quot;&gt;Recipes&lt;/a&gt; - Recipes is a Django application to manage, tag and search recipes using either built-in models or external storage providers hosting PDF&#39;s, Images or other files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;E-commerce&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.attendize.com/&quot;&gt;Attendize&lt;/a&gt; - Ticket selling and event management platform. (&lt;a href=&quot;https://github.com/attendize/attendize&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AAL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bagisto.com/en/&quot;&gt;Bagisto&lt;/a&gt; - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (&lt;a href=&quot;https://demo.bagisto.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bagisto/bagisto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coreshop.org&quot;&gt;CoreShop&lt;/a&gt; - CoreShop is a e-commerce plugin for Pimcore. (&lt;a href=&quot;https://github.com/coreshop/CoreShop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://drupalcommerce.org&quot;&gt;Drupal Commerce&lt;/a&gt; - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (&lt;a href=&quot;https://github.com/drupalcommerce/commerce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magento.com/&quot;&gt;Magento&lt;/a&gt; - Leading provider of open omnichannel innovation. (&lt;a href=&quot;https://magento.com/schedule-a-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/magento/magento2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microweber.com/&quot;&gt;Microweber&lt;/a&gt; - Drag and Drop CMS and online shop. (&lt;a href=&quot;http://demo.microweber.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/microweber/microweber&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openbazaar.org&quot;&gt;OpenBazaar&lt;/a&gt; - Decentralized marketplace using cryptocurrency. (&lt;a href=&quot;https://github.com/openbazaar/openbazaar-go&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opencart.com&quot;&gt;OpenCart&lt;/a&gt; - Free open source shopping cart solution. (&lt;a href=&quot;https://github.com/opencart/opencart&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://open-classifieds.com/&quot;&gt;Open Classifieds&lt;/a&gt; - Free open-source, self-hosted CMS for classifieds sites. (&lt;a href=&quot;https://github.com/open-classifieds/openclassifieds2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensourcepos.org/&quot;&gt;Open Source POS&lt;/a&gt; - Open Source Point of Sale is a web based point of sale system. (&lt;a href=&quot;https://github.com/opensourcepos/opensourcepos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oxidforge.org&quot;&gt;OXID eShop&lt;/a&gt; - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (&lt;a href=&quot;http://demoshop.oxid-esales.com/community-edition/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/OXID-eSales/oxideshop_ce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openfoodnetwork.org/&quot;&gt;Open Food Network&lt;/a&gt; - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (&lt;a href=&quot;https://github.com/openfoodfoundation/openfoodnetwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.prestashop.com/&quot;&gt;PrestaShop&lt;/a&gt; - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (&lt;a href=&quot;http://demo.prestashop.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/PrestaShop/PrestaShop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pretix.eu/&quot;&gt;Pretix&lt;/a&gt; - Django based ticket sales platform for events. (&lt;a href=&quot;https://github.com/pretix&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactioncommerce.com/&quot;&gt;Reaction Commerce&lt;/a&gt; - Customizable, real-time reactive, JavaScript commerce platform. (&lt;a href=&quot;https://github.com/reactioncommerce/reaction&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://getsaleor.com/&quot;&gt;Saleor&lt;/a&gt; - Django based open-sourced e-commerce storefront. (&lt;a href=&quot;https://demo.getsaleor.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mirumee/saleor&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shuup.com/&quot;&gt;Shuup&lt;/a&gt; - Django powered fully customizable open source e-commerce framework for small and large sites. (&lt;a href=&quot;https://github.com/shuup/shuup&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopware.com/community/&quot;&gt;Shopware Community Edition&lt;/a&gt; - PHP based open source e-commerce software made in Germany. (&lt;a href=&quot;https://www.shopware.com/en/test-demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/shopware/platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spreecommerce.org&quot;&gt;Spree Commerce&lt;/a&gt; - Spree is a complete, modular &amp;amp; API-driven open source e-commerce solution for Ruby on Rails. (&lt;a href=&quot;http://new-ux.spreecommerce.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sylius.org/&quot;&gt;Sylius&lt;/a&gt; - Symfony2 powered open source full-stack platform for eCommerce. (&lt;a href=&quot;http://sylius.org/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sylius/Sylius&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://thelia.net/&quot;&gt;Thelia&lt;/a&gt; - Thelia is an open source and flexible e-commerce solution. (&lt;a href=&quot;http://demo.thelia.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thelia/thelia&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.woothemes.com/woocommerce/&quot;&gt;WooCommerce&lt;/a&gt; - WordPress based e-commerce solution. (&lt;a href=&quot;https://github.com/woothemes/woocommerce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;DNS&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#dns&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coredns.io/&quot;&gt;CoreDNS&lt;/a&gt; - Plugin driven DNS Server with support for proxying to Google&#39;s DNS-over-HTTPS. (&lt;a href=&quot;https://github.com/coredns/coredns&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maza-ad-blocking.andros.dev/&quot;&gt;Maza ad blocking&lt;/a&gt; - Local ad blocker. Like Pi-hole but local and using your operating system. (&lt;a href=&quot;https://github.com/tanrax/maza-ad-blocking&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Bash&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nsupdate.info/&quot;&gt;nsupdate.info&lt;/a&gt; - nsupdate.info is a dynamic DNS service. (&lt;a href=&quot;https://www.nsupdate.info/account/register/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nsupdate-info/nsupdate.info&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://spftoolbox.com&quot;&gt;SPF Toolbox&lt;/a&gt; - Application to look up DNS records such as SPF, MX, Whois, and more. (&lt;a href=&quot;https://github.com/charlesabarnes/SPFtoolbox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Document Management&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.casebox.org&quot;&gt;CaseBox&lt;/a&gt; - Manage all your organization&#39;s information in one system. (&lt;a href=&quot;https://github.com/KETSE/casebox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/randombenj/docat&quot;&gt;DOCAT&lt;/a&gt; - Host your docs. Simple. Versioned. Fancy. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docspell.org&quot;&gt;Docspell&lt;/a&gt; - Auto-tagging document organizer and archive. (&lt;a href=&quot;https://github.com/eikek/docspell&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Edraens/EdPaper&quot;&gt;EdPaper&lt;/a&gt; - PDF organizer with users management. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonashellmann/everydocs-core/&quot;&gt;EveryDocs&lt;/a&gt; - A simple Document Management System for private use with basic functionality to organize your documents digitally. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mayan-edms.com&quot;&gt;Mayan EDMS&lt;/a&gt; - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (&lt;a href=&quot;https://gitlab.com/mayan-edms/mayan-edms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.papermerge.com&quot;&gt;Papermerge&lt;/a&gt; - Open Source Document Management System focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox/google drive. OCR, full text search, text overlay/selection. (&lt;a href=&quot;https://github.com/ciur/papermerge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/the-paperless-project/paperless&quot;&gt;Paperless&lt;/a&gt; - Scan, index, and archive all of your paper documents. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teedy.io/&quot;&gt;Teedy&lt;/a&gt; - (Ex SismicsDocs) Lightweight document management system packed with all the features you can expect from big expensive solutions. (&lt;a href=&quot;https://github.com/sismics/docs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;E-books and Integrated Library Systems (ILS)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Some &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management System&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#archiving-and-digital-preservation-dp&quot;&gt;Archiving and Digital Preservation&lt;/a&gt; solutions also overlap with library and institutional repository software.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Personal e-book management software.&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calibre-ebook.com/&quot;&gt;Calibre&lt;/a&gt; - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (&lt;a href=&quot;https://calibre-ebook.com/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://launchpad.net/calibre&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://projekte.textmulch.de/bicbucstriim/&quot;&gt;BicBucStriim&lt;/a&gt; - Provides web-based access to your Calibre Library&#39;s e-book collection. (&lt;a href=&quot;https://github.com/rvolz/BicBucStriim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/janeczku/calibre-web&quot;&gt;Calibre Web&lt;/a&gt; - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://blog.slucas.fr/en/oss/calibre-opds-php-server&quot;&gt;COPS&lt;/a&gt; - Lightweight e-book server alternative to Calibre content server or Calibre2OPDS. (&lt;a href=&quot;http://cops-demo.slucas.fr/index.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/seblucas/cops&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://tt-rss.org/the-epube&quot;&gt;The Epube&lt;/a&gt; - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (&lt;a href=&quot;https://git.tt-rss.org/fox/the-epube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://komga.org&quot;&gt;Komga&lt;/a&gt; - Media server for comics/mangas/BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. (&lt;a href=&quot;https://github.com/gotson/komga&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hkalexling/Mango&quot;&gt;Mango&lt;/a&gt; - Manga server and web reader with a built-in MangaDex downloader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Enterprise-class library management software.&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://evergreen-ils.org&quot;&gt;Evergreen&lt;/a&gt; - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (&lt;a href=&quot;https://github.com/evergreen-library-system/Evergreen&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PL/pgSQL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://koha-community.org/&quot;&gt;Koha&lt;/a&gt; - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (&lt;a href=&quot;https://koha-community.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Koha-Community/Koha&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rero21.ch/&quot;&gt;RERO ILS&lt;/a&gt; - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,...) and a web-based public and professional interface. (&lt;a href=&quot;https://ils.test.rero.ch/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/rero/rero-ils&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Institutional repository and digital library software.&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dspace.org/&quot;&gt;DSpace&lt;/a&gt; - Turnkey repository application providing durable access to digital resources. (&lt;a href=&quot;https://github.com/DSpace/DSpace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.eprints.org/&quot;&gt;EPrints&lt;/a&gt; - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (&lt;a href=&quot;http://demoprints.eprints.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/eprints/eprints&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fedorarepository.org/&quot;&gt;Fedora Commons Repository&lt;/a&gt; - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (&lt;a href=&quot;https://github.com/fcrepo4/fcrepo4&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://islandora.ca/&quot;&gt;Islandora&lt;/a&gt; - Drupal module for browsing and managing Fedora-based digital repositories. (&lt;a href=&quot;https://github.com/Islandora/islandora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://samvera.org/&quot;&gt;Samvera Hyrax&lt;/a&gt; - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (&lt;a href=&quot;https://github.com/samvera/hyrax&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Federated Identity/Authentication&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#identity-management&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Feed Readers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.commafeed.com/&quot;&gt;CommaFeed&lt;/a&gt; - Google Reader inspired self-hosted RSS reader. (&lt;a href=&quot;https://github.com/Athou/commafeed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feedbin.com/&quot;&gt;Feedbin&lt;/a&gt; - Simple, fast and nice looking RSS reader. (&lt;a href=&quot;https://github.com/feedbin/feedbin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feedhq.org/&quot;&gt;FeedHQ&lt;/a&gt; - FeedHQ is a web-based feed reader. (&lt;a href=&quot;https://github.com/feedhq/feedhq&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://freshrss.org/&quot;&gt;FreshRSS&lt;/a&gt; - Self-hostable RSS feed aggregator. (&lt;a href=&quot;http://demo.freshrss.org/i/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/FreshRSS/FreshRSS&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alkarex/EasyRSS&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://1pxsolidblack.pl/jarr-en.html&quot;&gt;JARR&lt;/a&gt; - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (&lt;a href=&quot;https://jarr.info/login?next=%2F&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaesivsm/JARR&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tontof.net/kriss/feed/&quot;&gt;Kriss Feed&lt;/a&gt; - Simple and smart (or stupid) feed reader. (&lt;a href=&quot;http://tontof.net/feed/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tontof/kriss_feed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeedRSS/Leed&quot;&gt;Leed&lt;/a&gt; - Leed (for Light Feed) is a Free and minimalist RSS aggregator. (&lt;a href=&quot;https://github.com/ldleman/Leed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/socketubs/leselys&quot;&gt;Leselys&lt;/a&gt; - Your very elegant RSS reader. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cubny/lite-reader&quot;&gt;Lite-Reader&lt;/a&gt; - Read your feeds on your own machine with a simple and lite application. (&lt;a href=&quot;http://cubny.com/lite-reader/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://moonmoon.org/&quot;&gt;Moonmoon&lt;/a&gt; - simple feed aggregator (planet like): it only aggregates feeds and spits them out in one single page. (&lt;a href=&quot;https://github.com/mauricesvay/moonmoon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://miniflux.net/&quot;&gt;Miniflux&lt;/a&gt; - Miniflux 2 is a minimalist and open source news reader, written in Go and PostgreSQL. (&lt;a href=&quot;https://github.com/miniflux/miniflux&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.newsblur.com/&quot;&gt;NewsBlur&lt;/a&gt; - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (&lt;a href=&quot;https://github.com/samuelclay/NewsBlur&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buzz/newsdash&quot;&gt;newsdash&lt;/a&gt; - A news dashboard inspired by iGoogle and Netvibes. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.sr.ht/%7Ecedric/newspipe&quot;&gt;Newspipe&lt;/a&gt; - Newspipe is a web news reader. (&lt;a href=&quot;https://www.newspipe.org/signup&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lemon24/reader&quot;&gt;reader&lt;/a&gt; - A Python feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://readerself.com/&quot;&gt;Reader-Self&lt;/a&gt; - Self-hosted rss reader (php / mysql or sqlite) - Google Reader alternative. (&lt;a href=&quot;https://github.com/readerself/readerself&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pietheinstrengholt/rssmonster&quot;&gt;RSS Monster&lt;/a&gt; - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://selfoss.aditu.de/&quot;&gt;Selfoss&lt;/a&gt; - New multipurpose rss reader, live stream, mashup, aggregation web application. (&lt;a href=&quot;https://github.com/SSilence/selfoss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sismics.com/reader/&quot;&gt;Sismics Reader&lt;/a&gt; - Free and open source feeds reader, including all major Google Reader features. (&lt;a href=&quot;https://www.sismics.com/reader/#!/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sismics/reader&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swanson/stringer&quot;&gt;Stringer&lt;/a&gt; - Work-in-progress self-hosted, anti-social RSS reader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fazalmajid/temboz&quot;&gt;Temboz&lt;/a&gt; - Two-column feed reader emphasizing filtering capabilities to manage information overload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tt-rss.org&quot;&gt;Tiny Tiny RSS&lt;/a&gt; - Open source web-based news feed (RSS/Atom) reader and aggregator. (&lt;a href=&quot;http://framanews.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.tt-rss.org/fox/tt-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://gritttt-rss.nicolashoening.de/&quot;&gt;gritttt-rss&lt;/a&gt; - More features for Tiny Tiny RSS. (&lt;a href=&quot;https://github.com/nhoening/gritttt-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/mboinet/ttrss-mobile&quot;&gt;ttrss-mobile&lt;/a&gt; - Mobile webapp for Tiny Tiny RSS. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/kucrut/ttrss-reader&quot;&gt;ttrss-reader&lt;/a&gt; - Light and responsive client for TTRSS. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getstream.io/winds/&quot;&gt;Winds&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Open source and beautiful RSS reader built using React/Redux/Sails/Node and Stream. It showcases personalized feeds powered by the Stream API. (&lt;a href=&quot;https://winds.getstream.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/GetStream/Winds&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;RSS/Atom automation&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ncarlier/feedpushr&quot;&gt;Feedpushr&lt;/a&gt; - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fivefilters.org/content-only&quot;&gt;Full-Text RSS&lt;/a&gt; - Extract article content from news sites and blogs and convert RSS feeds that contain only extracts of stories to full-text feeds. Developed by FiveFilters.org. (&lt;a href=&quot;https://bitbucket.org/fivefilters/full-text-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/slurdge/goeland&quot;&gt;Goeland&lt;/a&gt; - Reads RSS/Atom feeds and filter/digest them to create beautiful emails. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taroved/pol&quot;&gt;PolitePol&lt;/a&gt; - Online tool for creation of RSS feeds for any web page. (&lt;a href=&quot;http://politepol.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kombustor/rss-fulltext-proxy&quot;&gt;RSS Fulltext Proxy&lt;/a&gt; - Mirrors RSS feeds to return the full content of the items, extracted from the website. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taophp/rss-merger&quot;&gt;RSS Merger&lt;/a&gt; - PHP script which will take multiple RSS / Atom feeds as input and merge them into a single RSS feed. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RSS-Bridge/rss-bridge&quot;&gt;RSS-Bridge&lt;/a&gt; - rss-bridge is a PHP project capable of generating ATOM feeds for websites which don&#39;t have one. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rss2email/rss2email&quot;&gt;RSS2EMail&lt;/a&gt; - Fetches RSS/Atom-feeds and pushes new Content to any email-receiver, supports OPML. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/herrbischoff/screaming-liquid-tiger&quot;&gt;Screaming Liquid Tiger&lt;/a&gt; - Simple script to automatically generate valid RSS and Atom feeds from a list of media files in the same folder. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;File Sharing and Synchronization&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Some &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt; solutions also feature file sharing and synchronization.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Distributed filesystems&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#distributed-filesystems&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;File transfer/synchronization&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git-annex.branchable.com/&quot;&gt;Git Annex&lt;/a&gt; - File synchronization between computers, servers, external drives. (&lt;a href=&quot;https://git.joeyh.name/index.cgi/git-annex.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kinto.readthedocs.org&quot;&gt;Kinto&lt;/a&gt; - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (&lt;a href=&quot;https://github.com/Kinto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/subnub/myDrive&quot;&gt;myDrive&lt;/a&gt; - Fully featured online storage solution, upload/download files, photo/video viewer, and more, all through the web client. (&lt;a href=&quot;https://mydrive-demo.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; - Access and share your files, calendars, contacts, mail and &lt;a href=&quot;https://apps.nextcloud.com/&quot;&gt;more&lt;/a&gt; from any device, on your terms. (&lt;a href=&quot;https://demo.nextcloud.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nextcloud/server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openssh.com/&quot;&gt;OpenSSH/SFTP&lt;/a&gt; - Secure File Transfer Program. (&lt;a href=&quot;http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;ownCloud&lt;/a&gt; - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (&lt;a href=&quot;https://github.com/owncloud/core&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/owncloud/core/wiki/Apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pydio.com/&quot;&gt;Pydio&lt;/a&gt; - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (&lt;a href=&quot;https://github.com/pydio/pydio-core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samba.org/&quot;&gt;Samba&lt;/a&gt; - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB/CIFS protocol. (&lt;a href=&quot;https://git.samba.org/samba.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seafile.com/en/home/&quot;&gt;Seafile&lt;/a&gt; - File hosting and sharing solution primary for teams and organizations. (&lt;a href=&quot;https://github.com/haiwen/seafile&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/GPL-3.0/AGPL-3.0/Apache-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sparkleshare.org/&quot;&gt;SparkleShare&lt;/a&gt; - Self hosted, instant, secure file sync. (&lt;a href=&quot;https://github.com/hbons/SparkleShare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.syncany.org/&quot;&gt;Syncany&lt;/a&gt; - Secure file sync software for arbitrary storage backends, an open-source cloud storage and filesharing application. Securely synchronize your files to any kind of storage. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syncthing.net/&quot;&gt;Syncthing&lt;/a&gt; - Syncthing is an open source peer-to-peer file synchronisation tool. (&lt;a href=&quot;https://github.com/syncthing/syncthing&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cis.upenn.edu/%7Ebcpierce/unison/&quot;&gt;Unison&lt;/a&gt; - Unison is a file-synchronization tool for OSX, Unix, and Windows. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;OCaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://z-push.org/&quot;&gt;Z-Push&lt;/a&gt; - Implementation of Microsoft’s &lt;a href=&quot;https://en.wikipedia.org/wiki/ActiveSync&quot;&gt;ActiveSync&lt;/a&gt; protocol. (&lt;a href=&quot;https://stash.z-hub.io/projects/ZP/repos/z-push&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Peer-to-peer filesharing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webtorrent.io/&quot;&gt;bittorrent-tracker&lt;/a&gt; - Simple, robust, BitTorrent tracker (client and server) implementation. (&lt;a href=&quot;https://github.com/feross/bittorrent-tracker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpillora/cloud-torrent&quot;&gt;cloud-torrent&lt;/a&gt; - Torrent Web Client with HTTP retrievable or streamable downloaded files. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datproject.org&quot;&gt;Dat Project&lt;/a&gt; - Powerful decentralized file sharing applications built from a large ecosystem of modules. (&lt;a href=&quot;https://github.com/datproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://file.pizza/&quot;&gt;FilePizza&lt;/a&gt; - Peer-to-peer file transfers in your browser. (&lt;a href=&quot;https://github.com/kern/filepizza&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/timvisee/send&quot;&gt;Send&lt;/a&gt; - A file sharing experiment which allows you to send encrypted files to other users. (&lt;a href=&quot;https://gitlab.com/timvisee/send/-/tree/master/android&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/feross/instant.io&quot;&gt;instant.io&lt;/a&gt; - Streaming file transfer over WebTorrent. (&lt;a href=&quot;https://instant.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boramalper/magnetico&quot;&gt;Magnetico&lt;/a&gt; - Magnetico is the first autonomous (self-hosted) BitTorrent DHT search engine suite that is designed for end-users. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sergiotapia/magnetissimo&quot;&gt;Magnetissimo&lt;/a&gt; - Search engine that indexes all popular torrent sites. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://erdgeist.org/arts/software/opentracker/&quot;&gt;Opentracker&lt;/a&gt; - Open and free bittorrent tracker. It aims for minimal resource usage and is intended to run at your wlan router. (&lt;a href=&quot;http://erdgeist.org/gitweb/opentracker/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Beerware&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asapach/peerflix-server&quot;&gt;peerflix-server&lt;/a&gt; - Downloads torrent files and provides a direct link download or a direct link stream. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.qbittorrent.org/&quot;&gt;qBittorrent&lt;/a&gt; - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (&lt;a href=&quot;https://github.com/qbittorrent/qBittorrent&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swetorrentking/rartracker&quot;&gt;rartracker&lt;/a&gt; - Complete private bittorrent tracker. &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/dessalines/torrents.csv&quot;&gt;Torrents.csv&lt;/a&gt; - A self-hostable torrent search engine. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://transmissionbt.com/&quot;&gt;Transmission&lt;/a&gt; - Fast, easy, Free Bittorrent client. (&lt;a href=&quot;https://github.com/transmission/transmission&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Object storage/file servers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://minio.io/&quot;&gt;Minio&lt;/a&gt; - Minio is an open source object storage server compatible with Amazon S3 APIs. (&lt;a href=&quot;https://github.com/minio/minio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenko.io/cloudserver&quot;&gt;Zenko CloudServer&lt;/a&gt; - Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol. (&lt;a href=&quot;https://github.com/scality/S3&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Single-click/drag-n-drop upload&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/broncowdd/BoZoN&quot;&gt;BoZoN&lt;/a&gt; - Minimalist Drag and drop file sharing app. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coquelicot.potager.org/&quot;&gt;Coquelicot&lt;/a&gt; - Coquelicot is a “one-click” file sharing web application with a focus on protecting users’ privacy. (&lt;a href=&quot;https://coquelicot.potager.org/gitweb/?p=coquelicot.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elixi.re&quot;&gt;elixire&lt;/a&gt; - Simple yet advanced screenshot uploading and link shortening service. (&lt;a href=&quot;https://gitlab.com/elixire/elixire&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/elixire/elixiremanager&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anderspitman/fibridge-proxy-rs&quot;&gt;fibridge&lt;/a&gt; - Stream huge files out of your browser without having to upload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epoupon/fileshelter&quot;&gt;FileShelter&lt;/a&gt; - FileShelter is a self-hosted software that allows you to easily share files over the Internet. (&lt;a href=&quot;http://fileshelter.demo.poupon.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axeloz/filesharing&quot;&gt;Files Sharing&lt;/a&gt; - Open Source and self-hosted files sharing application based on unique and temporary links. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gpldr.in/&quot;&gt;goploader&lt;/a&gt; - Easy file sharing with server-side encryption, curl/httpie/wget compliant. (&lt;a href=&quot;https://github.com/Depado/goploader&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauxir/imgpush&quot;&gt;imgpush&lt;/a&gt; - imgpush is a self-hosted file upload service that can easily be integrated into other webapps. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ipfspics/server&quot;&gt;ipfs.pics&lt;/a&gt; - ipfs.pics is a distributed image hosting website. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/mojo42/Jirafeau&quot;&gt;Jirafeau&lt;/a&gt; - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (&lt;a href=&quot;http://jirafeau.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreimarcu/linx-server&quot;&gt;linx-server&lt;/a&gt; - Simple file sharing and pastebin with API, auto-expiry, deletion keys, and web seed support. (&lt;a href=&quot;https://demo.linx-server.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://framagit.org/fiat-tux/hat-softwares/lufi&quot;&gt;lufi&lt;/a&gt; - Let&#39;s Upload that FIle, client-side encrypted. (&lt;a href=&quot;https://demo.lufi.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/fiat-tux/hat-softwares/lufi/tree/master&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ldidry/lutim&quot;&gt;lutim&lt;/a&gt; - Let&#39;s Upload That Image. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/micahflee/onionshare&quot;&gt;OnionShare&lt;/a&gt; - Securely and anonymously share a file of any size. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pictshare.net/&quot;&gt;PictShare&lt;/a&gt; - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (&lt;a href=&quot;https://github.com/chrisiaut/pictshare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/root-gg/plik&quot;&gt;Plik&lt;/a&gt; - Plik is a scalable and friendly temporary file upload system. (&lt;a href=&quot;https://plik.root.gg/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Pomf/Pomf&quot;&gt;Pomf&lt;/a&gt; - Simple file uploading and sharing, source for the now shut down site Pomf.se. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.projectsend.org/&quot;&gt;ProjectSend&lt;/a&gt; - Upload files and assign them to specific clients you create. Give access to those files to your clients. (&lt;a href=&quot;https://github.com/ignacionelson/ProjectSend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psi-4ward/psitransfer&quot;&gt;PsiTransfer&lt;/a&gt; - Simple open source self-hosted file sharing solution with robust up-/download-resume and password protection. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.pste.pw/&quot;&gt;Pste&lt;/a&gt; - Just a simple file hosting application inspired by the likes of pomf.se and teknik.io. (&lt;a href=&quot;https://github.com/FoxDev/pste&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MrDemonWolf/share&quot;&gt;Share&lt;/a&gt; - Simple yet advanced uploader - upload files, images and text with moderation tools for admins. Can be used for friends and family or just for you. Integration with ShareX and more. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eikek/sharry&quot;&gt;Sharry&lt;/a&gt; - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uguu.se/&quot;&gt;Uguu&lt;/a&gt; - Stores files and deletes after X amount of time. (&lt;a href=&quot;https://github.com/nokonoko/uguu&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Upload/Up1&quot;&gt;Up1&lt;/a&gt; - Client-side Encrypted Image Host. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SergiX44/XBackBone&quot;&gt;XBackBone&lt;/a&gt; - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.youtransfer.io&quot;&gt;YouTransfer&lt;/a&gt; - YouTransfer is a simple but elegant self-hosted file transfer and sharing solution. (&lt;a href=&quot;http://demo.youtransfer.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/remie/YouTransfer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zipline.diced.wtf/&quot;&gt;Zipline&lt;/a&gt; - A lightweight, fast and reliable file sharing server that is commonly used with ShareX, offering a react-based Web UI and fast API. (&lt;a href=&quot;https://github.com/diced/zipline&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Command-line file upload&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dsx/beauties&quot;&gt;Beauties&lt;/a&gt; - Minimalist file sharing written in Go, to be used primarily from Unix shell (e.g. with curl). Can be built as a Debian package for easy install. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://transfer.sh&quot;&gt;transfer.sh&lt;/a&gt; - Easy file sharing from the command line. (&lt;a href=&quot;https://github.com/dutchcoders/transfer.sh&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Web based file managers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oupala.github.io/apaxy/&quot;&gt;Apaxy&lt;/a&gt; - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (&lt;a href=&quot;https://github.com/AdamWhitcroft/Apaxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.directorylister.com/&quot;&gt;DirectoryLister&lt;/a&gt; - Simple PHP based directory lister that lists a directory and all it&#39;s sub-directories and allows you to navigate there within. (&lt;a href=&quot;https://github.com/DirectoryLister/DirectoryLister&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://encode-explorer.siineiolekala.net/&quot;&gt;Encode Explorer&lt;/a&gt; - Encode Explorer is a single page file browser, it is simple and functional. (&lt;a href=&quot;http://encode-explorer.siineiolekala.net/explorer/index.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/marekrei/encode-explorer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://soyuka.github.io/explorer/&quot;&gt;explorer&lt;/a&gt; - Highly-configurable directory listing made with nodejs. (&lt;a href=&quot;https://github.com/soyuka/explorer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://filebrowser.org/&quot;&gt;filebrowser&lt;/a&gt; - Web File Browser with a Material Design web interface. (&lt;a href=&quot;https://github.com/filebrowser/filebrowser&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.filestash.app/&quot;&gt;Filestash&lt;/a&gt; - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (&lt;a href=&quot;https://demo.filestash.app/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mickael-kerjean/filestash&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xataz/gobrowser&quot;&gt;goBrowser&lt;/a&gt; - Simple http file browser. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pldubouilh/gossa&quot;&gt;Gossa&lt;/a&gt; - Gossa is a light and simple webserver for your files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://larsjung.de/h5ai/&quot;&gt;h5ai&lt;/a&gt; - Modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. (&lt;a href=&quot;https://larsjung.de/h5ai/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/lrsjng/h5ai&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/misterunknown/ifm&quot;&gt;IFM&lt;/a&gt; - Single script file manager. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.resourcespace.com&quot;&gt;ResourceSpace&lt;/a&gt; - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (&lt;a href=&quot;https://www.resourcespace.com/trial&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.resourcespace.com/svn&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessfraz/s3server&quot;&gt;s3server&lt;/a&gt; - Simple HTTP interface to index and browse files in a public S3 or Google Cloud Storage bucket. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nebulade/surfer&quot;&gt;Surfer&lt;/a&gt; - Simple static file server with webui to manage files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tagspaces.org/&quot;&gt;TagSpaces&lt;/a&gt; - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (&lt;a href=&quot;http://demo.tagspaces.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tagspaces/tagspaces&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Games&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Games, game servers and control panels.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/doublespeakgames/adarkroom&quot;&gt;A Dark Room&lt;/a&gt; - Minimalist text adventure game for your browser. (&lt;a href=&quot;http://adarkroom.doublespeakgames.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huytd/agar.io-clone&quot;&gt;Agar.IO Clone&lt;/a&gt; - Agar.io clone written with Socket.IO and HTML5 canvas. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbreindel/battlecraft&quot;&gt;battlecraft&lt;/a&gt; - Fully distributed multiplayer browser game. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://play.elevatorsaga.com/&quot;&gt;elevatorsaga&lt;/a&gt; - The elevator programming game. (&lt;a href=&quot;https://github.com/magwo/elevatorsaga&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Hextris/hextris&quot;&gt;Hextris&lt;/a&gt; - Fast paced HTML5 puzzle game inspired by Tetris. (&lt;a href=&quot;https://hextris.github.io/hextris&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lotgd/core&quot;&gt;Legend of the Green Dragon&lt;/a&gt; - Legend of the Green Dragon is a text-based RPG originally developed by Eric Stevens and JT Traub as a remake of and homage to the classic BBS Door game, Legend of the Red Dragon, by Seth Able Robinson. (&lt;a href=&quot;http://lotgd.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lichess.org/&quot;&gt;Lila&lt;/a&gt; - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (&lt;a href=&quot;https://github.com/ornicar/lila&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mindustrygame.github.io/&quot;&gt;Mindustry&lt;/a&gt; - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. (&lt;a href=&quot;https://github.com/Anuken/Mindustry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.minetest.net/&quot;&gt;Minetest&lt;/a&gt; - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (&lt;a href=&quot;https://github.com/minetest/minetest&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1/CC-BY-SA-3.0/Other&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://net64-mod.github.io&quot;&gt;Net64+&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Net64 aka SM64O allows playing Super Mario 64 in an online multiplayer mode. Net64+ is the official continuation of the program and features an integrated server list. (&lt;a href=&quot;https://github.com/Tarnadas/net64plus-server/&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tarnadas/net64plus/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jehervy/node-virtual-gamepads&quot;&gt;node-virtual-gamepads&lt;/a&gt; - Turn your smartphone into a game controller, keyboard, or touchpad for a remote Linux OS machine. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/CoffeScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abrenaut/posio&quot;&gt;Posio&lt;/a&gt; - Geography multiplayer game. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piqueserver/piqueserver&quot;&gt;piqueserver&lt;/a&gt; - Server for openspades, the first-person shooter in a destructible voxel world. (&lt;a href=&quot;https://github.com/yvt/openspades&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/begleysm/quakejs&quot;&gt;QuakeJS&lt;/a&gt; - QuakeJS is a port of ioquake3 to JavaScript that can be played in a browser. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/quizmaster&quot;&gt;Quizmaster&lt;/a&gt; - A web-app for conducting a quiz, including a page for players to enter their answers. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gorcon/rcon-cli&quot;&gt;RconCli&lt;/a&gt; - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbpp.github.io&quot;&gt;SourceBans++&lt;/a&gt; - Admin, ban, and communication management system for games running on the Source engine. (&lt;a href=&quot;https://github.com/sbpp/sourcebans-pp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teeworlds.com&quot;&gt;Teeworlds&lt;/a&gt; - Open source 2D retro multiplayer shooter. (&lt;a href=&quot;https://github.com/teeworlds/teeworlds&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause/Other&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seiyria/tournamentmango&quot;&gt;TournamentMango&lt;/a&gt; - TournamentMango is an open source tournament bracket and user management system. You can build an archive of players and keep track of all their scores over time as well as their regular characters, games, and aliases. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Gateways and terminal sharing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asciinema/asciinema-server&quot;&gt;asciinema&lt;/a&gt; - Web app for hosting asciicasts. (&lt;a href=&quot;https://asciinema.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Elixir/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://liftoffsoftware.com/Products/GateOne&quot;&gt;GateOne&lt;/a&gt; - Gate One is an HTML5 web-based terminal emulator and SSH client. (&lt;a href=&quot;https://github.com/liftoff/GateOne&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://guac-dev.org/&quot;&gt;Guacamole&lt;/a&gt; - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (&lt;a href=&quot;https://github.com/glyptodon/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java/C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nurdism/neko&quot;&gt;Neko&lt;/a&gt; - A self hosted virtual browser (rabb.it clone) that runs in Docker. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oneye-project.org/&quot;&gt;oneye&lt;/a&gt; - Cloud software to access your data from everywhere with any browser. (&lt;a href=&quot;https://wiki.oneye-project.org/0.9:demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/oneye/oneye&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.os-js.org/&quot;&gt;OS.js&lt;/a&gt; - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (&lt;a href=&quot;https://demo.os-js.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/os-js/OS.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nirui/sshwifty&quot;&gt;Sshwifty&lt;/a&gt; - Sshwifty is a SSH and Telnet connector made for the Web. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tmate.io/&quot;&gt;tmate&lt;/a&gt; - Instant terminal sharing. (&lt;a href=&quot;https://github.com/tmate-io/tmate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Groupware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluemind.net/en/&quot;&gt;BlueMind&lt;/a&gt; - Groupware with email, calendar, addressbooks, exchange active sync, exchange &quot;mapi&quot; protocol support. (&lt;a href=&quot;https://forge.bluemind.net/stash/projects/BM/repos/bluemind-public/browse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.citadel.org/doku.php&quot;&gt;Citadel&lt;/a&gt; - Groupware including email, calendar/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (&lt;a href=&quot;http://www.citadel.org/doku.php/installation:source&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cortezaproject.org&quot;&gt;Corteza&lt;/a&gt; - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. (&lt;a href=&quot;https://latest.cortezaproject.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/cortezaproject/corteza-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cozy.io&quot;&gt;Cozy Cloud&lt;/a&gt; - Personal cloud where you can manage and sync your contact, files and calendars, and manage your budget with an app store full of community contributions. (&lt;a href=&quot;https://github.com/cozy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.egroupware.org/&quot;&gt;egroupware&lt;/a&gt; - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (&lt;a href=&quot;https://github.com/EGroupware/egroupware&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.espocrm.com/&quot;&gt;EspoCRM&lt;/a&gt; - CRM with a frontend designed as a single page application, and a REST API. (&lt;a href=&quot;http://demo.espocrm.de/basic/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/espocrm/espocrm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.horde.org/&quot;&gt;Horde&lt;/a&gt; - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (&lt;a href=&quot;http://demo.horde.org/login.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/horde/horde&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zelon88/HRCloud2&quot;&gt;HRCloud2&lt;/a&gt; - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kolab.org/&quot;&gt;Kolab&lt;/a&gt; - Kolab community is a unified communication and collaboration system. (&lt;a href=&quot;https://git.kolab.org/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/LGPL-2.1/GPL-3.0&lt;/code&gt; &lt;code&gt;C++/Python/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kopano.com/&quot;&gt;Kopano&lt;/a&gt; - Groupware suite including e-mail, calendars, tasks, todos and notes. Featuring a modern WebApp, DeskApp and mobile access over Z-Push/ActiveSync. (&lt;a href=&quot;http://demo.kopano.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://stash.kopano.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C/Python/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openmeetings.apache.org/index.html&quot;&gt;Openmeetings&lt;/a&gt; - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (&lt;a href=&quot;https://openmeetings.apache.org/scm.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sogo.nu/&quot;&gt;SOGo&lt;/a&gt; - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (&lt;a href=&quot;http://demo.sogo.nu/SOGo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/inverse-inc/sogo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Objective-C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.suitecrm.com/&quot;&gt;SuiteCRM&lt;/a&gt; - The award-winning, enterprise-class open source CRM. (&lt;a href=&quot;https://github.com/salesagility/SuiteCRM&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tine20.org&quot;&gt;Tine 2.0&lt;/a&gt; - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VOIP, Mail-Client, CRM, Sales, Projects, Timetracker. (&lt;a href=&quot;https://demo.tine20.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://packages.tine20.com/maintenance/source/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0/Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zimbra.com/&quot;&gt;Zimbra Collaboration&lt;/a&gt; - Email, calendar, collaboration server with Web interface and lots of integrations. (&lt;a href=&quot;https://github.com/zimbra&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/CPAL-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Human Resources Management (HRM)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.admidio.org/&quot;&gt;admidio&lt;/a&gt; - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it’s possible to reflect the structure and permissions of your organization. (&lt;a href=&quot;https://www.admidio.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Admidio/admidio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icehrm.com/&quot;&gt;IceHrm&lt;/a&gt; - IceHrm employee management system allows companies to centralize confidential employee information. (&lt;a href=&quot;https://icehrm.com/demo.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gamonoid/icehrm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.orangehrm.com/&quot;&gt;OrangeHRM&lt;/a&gt; - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (&lt;a href=&quot;https://sourceforge.net/projects/orangehrm/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sentrifugo.com/&quot;&gt;Sentrifugo&lt;/a&gt; - Sentrifugo is a HRM system that can be easily configured to meet your organizational needs. (&lt;a href=&quot;https://github.com/sapplica/sentrifugo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://timeoff.management&quot;&gt;TimeOff.Management&lt;/a&gt; - Simple yet powerful absence management software for small and medium size business. (&lt;a href=&quot;https://app.timeoff.management&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/timeoff-management/application&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Internet Of Things (IoT)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.devicehive.com/&quot;&gt;DeviceHive&lt;/a&gt; - Open Source IoT Platform with a wide range of integration options. (&lt;a href=&quot;https://playground.devicehive.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/devicehive/devicehive-java-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.domoticz.com/&quot;&gt;Domoticz&lt;/a&gt; - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (&lt;a href=&quot;https://github.com/domoticz/domoticz&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/domoticz/domoticz-android&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fhem.de/fhem.html&quot;&gt;FHEM&lt;/a&gt; - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP/IP directly. (&lt;a href=&quot;https://svn.fhem.de/trac&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gladysproject.com&quot;&gt;Gladys&lt;/a&gt; - Gladys is an open-source home assistant which runs on your Raspberry Pi. (&lt;a href=&quot;https://github.com/GladysProject/Gladys&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt; - Open-source home automation platform. (&lt;a href=&quot;https://home-assistant.io/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/home-assistant/home-assistant&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodered.org/&quot;&gt;Node RED&lt;/a&gt; - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (&lt;a href=&quot;https://github.com/node-red/node-red&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openhab.org&quot;&gt;openHAB&lt;/a&gt; - Vendor and technology agnostic open source software for home automation. (&lt;a href=&quot;http://demo.openhab.org:8080/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/openhab/openhab&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thingsboard.io/&quot;&gt;Thingsboard&lt;/a&gt; - Open-source IoT Platform - Device management, data collection, processing and visualization. (&lt;a href=&quot;https://demo.thingsboard.io/signup&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thingsboard/thingsboard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thingspeak.com/&quot;&gt;Thingspeak&lt;/a&gt; - Open source “Internet of Things” application and API to store and retrieve data from things using HTTP. (&lt;a href=&quot;https://thingspeak.com/channels/public&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/iobridge/thingspeak&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webthings.io/gateway/&quot;&gt;WebThings Gateway&lt;/a&gt; - WebThings is an open source implementation of the Web of Things, including the WebThings Gateway and the WebThings Framework. (&lt;a href=&quot;https://github.com/WebThingsIO/gateway&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Knowledge Management Tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drichard/mindmaps&quot;&gt;Mindmaps&lt;/a&gt; - Open source, offline capable, mind mapping application. (&lt;a href=&quot;http://drichard.org/mindmaps/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ondras/my-mind&quot;&gt;My Mind&lt;/a&gt; - Web application for creating and managing mind maps. (&lt;a href=&quot;https://my-mind.github.io/?url=examples%2Ffeatures.mymind&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semi-technologies/weaviate&quot;&gt;Weaviate&lt;/a&gt; - A cloud-native, realtime vector search engine integrating scalable machine learning models (GraphQL and RESTful API&#39;s). (&lt;a href=&quot;https://www.semi.technology/documentation/weaviate/current/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learning and Courses&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.canvaslms.com/&quot;&gt;Canvas LMS&lt;/a&gt; - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (&lt;a href=&quot;https://canvas.instructure.com/register&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/instructure/canvas-lms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamilo.org/&quot;&gt;Chamilo LMS&lt;/a&gt; - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (&lt;a href=&quot;https://github.com/chamilo/chamilo-lms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.edx.org/&quot;&gt;edX&lt;/a&gt; - The Open edX platform is open-source code that powers edX.org. (&lt;a href=&quot;https://github.com/edx/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ilias.de&quot;&gt;ILIAS&lt;/a&gt; - ILIAS is the Learning Management System that can cope with anything you throw at it. (&lt;a href=&quot;http://demo.ilias.de&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ILIAS-eLearning/ILIAS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mahara.org/&quot;&gt;Mahara&lt;/a&gt; - Open Source fully featured web application to build students electronic portfolio. (&lt;a href=&quot;https://github.com/MaharaProject/mahara&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moodle.org/&quot;&gt;Moodle&lt;/a&gt; - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (&lt;a href=&quot;https://moodle.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.moodle.org/gw&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openeclass.org/&quot;&gt;Open eClass&lt;/a&gt; - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (&lt;a href=&quot;http://demo.openeclass.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunet/openeclass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openolat.com/?lang=en&quot;&gt;OpenOLAT&lt;/a&gt; - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (&lt;a href=&quot;https://learn.olat.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/OpenOLAT/OpenOLAT&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documen.tician.de/relate/&quot;&gt;RELATE&lt;/a&gt; - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (&lt;a href=&quot;https://github.com/inducer/relate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rosariosis.org/&quot;&gt;RosarioSIS&lt;/a&gt; - RosarioSIS, free Student Information System for school management. (&lt;a href=&quot;https://www.rosariosis.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/francoisjacquet/rosariosis/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sakaiproject.org/&quot;&gt;Sakai&lt;/a&gt; - The Sakai project provides a flexible and feature-rich environment for teaching, learning, research and other collaboration. (&lt;a href=&quot;https://www.sakaiproject.org/try-sakai&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sakaiproject/sakai&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ECL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Maps and Global Positioning System (GPS)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://github.com/sshuair/awesome-gis&quot;&gt;awesome-gis&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/noandrea/geo2tz&quot;&gt;Geo2tz&lt;/a&gt; - Get the timezone from geo coordinates (lat, lon). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graphhopper.com/&quot;&gt;GraphHopper&lt;/a&gt; - Fast routing library and server using OpenStreetMap. (&lt;a href=&quot;https://github.com/graphhopper/graphhopper&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bilde2910/Hauk&quot;&gt;Hauk&lt;/a&gt; - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (&lt;a href=&quot;https://github.com/bilde2910/Hauk#demo-server&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MapBBCode/share.mapbbcode.org&quot;&gt;MapBBCodeShare&lt;/a&gt; - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import/export, multiple layers, shortlinks. (&lt;a href=&quot;http://share.mapbbcode.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;WTFPL/Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://project-osrm.org/&quot;&gt;Open Source Routing Machine (OSRM)&lt;/a&gt; - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and NodeJS wrapper. (&lt;a href=&quot;https://map.project-osrm.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Project-OSRM/osrm-backend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nominatim.org/&quot;&gt;Nominatim&lt;/a&gt; - Server application for reverse geocoding (address -&amp;gt; coordinates) on OpenStreetMap data. (&lt;a href=&quot;https://github.com/openstreetmap/Nominatim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.opengts.org/&quot;&gt;OpenGTS&lt;/a&gt; - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (&lt;a href=&quot;http://track.opengts.org/track/Track&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/projects/opengts/files/server-base/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; - Collaborative project to create a free editable map of the world. (&lt;a href=&quot;https://github.com/openstreetmap/openstreetmap-website&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Software&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opentripplanner.org/&quot;&gt;OpenTripPlanner&lt;/a&gt; - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (&lt;a href=&quot;https://github.com/opentripplanner/OpenTripPlanner&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java/JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LINKIWI/orion-web&quot;&gt;Orion&lt;/a&gt; - Powerful OwnTracks API-compliant location data visualization frontend for the web. (&lt;a href=&quot;https://linkiwi.github.io/orion-web/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/owntracks/recorder&quot;&gt;OwnTracks Recorder&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Store and access data published by &lt;a href=&quot;http://owntracks.org/&quot;&gt;OwnTracks&lt;/a&gt; location tracking apps. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;/&lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tileserver.readthedocs.io/&quot;&gt;TileServer GL&lt;/a&gt; - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (&lt;a href=&quot;https://github.com/klokantech/tileserver-gl&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/klokantech/tileserver-php&quot;&gt;TileServer PHP&lt;/a&gt; - Serve map tiles from any PHP hosting. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.traccar.org/&quot;&gt;Traccar&lt;/a&gt; - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (&lt;a href=&quot;http://demo.traccar.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/traccar&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bfabiszewski/ulogger-server&quot;&gt;μlogger&lt;/a&gt; - Collect geolocation from users in real-time and display their GPS tracks on a website. (&lt;a href=&quot;http://ulogger.fabiszewski.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://umap.openstreetmap.fr/en/&quot;&gt;uMap&lt;/a&gt; - Create maps with OpenStreetMap layers in a minute and embed them in your site. (&lt;a href=&quot;https://github.com/umap-project/umap&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Media Streaming&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_streaming_media_systems&quot;&gt;https://en.wikipedia.org/wiki/List_of_streaming_media_systems&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_streaming_media_systems&quot;&gt;https://en.wikipedia.org/wiki/Comparison_of_streaming_media_systems&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Multimedia Streaming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gerbera.io/&quot;&gt;Gerbera&lt;/a&gt; - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to/watch it on a variety of UPnP compatible devices. (&lt;a href=&quot;https://github.com/gerbera/gerbera&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ridhwaans/homehost&quot;&gt;homehost&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.icecast.org/&quot;&gt;Icecast 2&lt;/a&gt; - streaming audio/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (&lt;a href=&quot;https://gitlab.xiph.org/xiph/icecast-server&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;http://www.icecast.org/apps/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jellyfin.org&quot;&gt;Jellyfin&lt;/a&gt; - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, and Kodi. (&lt;a href=&quot;https://demo.jellyfin.org/stable&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jellyfin/jellyfin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.karaoke-forever.com&quot;&gt;Karaoke Forever&lt;/a&gt; - Host awesome karaoke parties where everyone can easily find and queue songs from their phone&#39;s web browser. The player is also browser-based with support for MP3+G, MP4 and WebGL visualizations. (&lt;a href=&quot;https://www.karaoke-forever.com/repo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lbry.com/&quot;&gt;LBRY&lt;/a&gt; - Is a secure, open, and community-run digital marketplace that aims to replace Youtube and Amazon. (&lt;a href=&quot;https://lbry.tv/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/lbryio/lbry.com&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/lbryio/lbry-desktop&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mistserver.org/&quot;&gt;MistServer&lt;/a&gt; - Streaming media server that works well in any streaming environment. (&lt;a href=&quot;https://github.com/DDVTECH/mistserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nyanko.ws/nymphcast.php&quot;&gt;NymphCast&lt;/a&gt; - NymphCast is a Chromecast alternative which turns your choice of Linux-capable hardware into an audio and video source for a television or powered speakers. (&lt;a href=&quot;https://github.com/MayaPosch/NymphCast&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.podify.org/&quot;&gt;Podify&lt;/a&gt; - Allows you to download videos and audio from any source supported by youtube-dl and subscribe to and watch these downloads using your favorite podcast app. (&lt;a href=&quot;https://github.com/podify-org/podify/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/minidlna/&quot;&gt;ReadyMedia&lt;/a&gt; - Simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. Formerly known as MiniDLNA. (&lt;a href=&quot;https://sourceforge.net/p/minidlna/git/ci/master/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.gnome.org/action/show/Projects/Rygel&quot;&gt;Rygel&lt;/a&gt; - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (&lt;a href=&quot;https://gitlab.gnome.org/GNOME/rygel/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://u-wave.net/&quot;&gt;üWave&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - üWave is a self-hosted collaborative listening platform. Users take turns playing media—songs, talks, gameplay videos, or anything else—from a variety of media sources like YouTube and SoundCloud. (&lt;a href=&quot;https://wlk.yt/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/u-wave&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Audio Streaming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ampache.org/&quot;&gt;Ampache&lt;/a&gt; - Web based audio/video streaming application. (&lt;a href=&quot;http://play.dogmazic.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ampache/ampache&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airsonic.github.io/&quot;&gt;Airsonic&lt;/a&gt; - Open-source web-based media streamer and jukebox. A fork of Subsonic&#39;s last open-source release, before it switched licenses. (&lt;a href=&quot;https://github.com/airsonic/airsonic&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://airsonic.github.io/docs/apps/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.azuracast.com/&quot;&gt;AzuraCast&lt;/a&gt; - A modern and accessible self-hosted web radio management suite. (&lt;a href=&quot;https://github.com/AzuraCast/AzuraCast&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/izderadicka/audioserve&quot;&gt;Audioserve&lt;/a&gt; - Simple personal server to serve audio files from directories (audiobooks, music, podcasts...). Focused on simplicity and supports sync of play position between clients. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://beets.io/&quot;&gt;Beets&lt;/a&gt; - Music library manager and MusicBrainz tagger (command-line and Web interface). (&lt;a href=&quot;https://github.com/beetbox/beets&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aidewoode/black_candy&quot;&gt;Black Candy&lt;/a&gt; - Music streaming server built with Rails and Stimulus. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/compactd/compactd&quot;&gt;Compactd&lt;/a&gt; - Remote music player that supports adding content. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xouabita/friends-radio&quot;&gt;FriendsRadio&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Share music with your friends from Youtube and Soundcloud. (&lt;a href=&quot;https://friends-radio.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://funkwhale.audio/&quot;&gt;Funkwhale&lt;/a&gt; - Modern, web-based, convivial, multi-user and free music server. (&lt;a href=&quot;https://demo.funkwhale.audio/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://code.eliotberriot.com/funkwhale/funkwhale&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnu.io/fm/&quot;&gt;GNU FM&lt;/a&gt; - Running music community websites, alternative to last.fm. (&lt;a href=&quot;http://git.savannah.gnu.org/cgit/librefm.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sentriz/gonic&quot;&gt;gonic&lt;/a&gt; - Lightweight music streaming server. Subsonic compatible. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrewrk/groovebasin&quot;&gt;Groove Basin&lt;/a&gt; - Music player server with a web-based user interface inspired by Amarok 1.4. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://koel.phanan.net/&quot;&gt;koel&lt;/a&gt; - Personal music streaming server that works. (&lt;a href=&quot;https://github.com/phanan/koel&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://koozic.net/&quot;&gt;KooZic&lt;/a&gt; - Music server with powerful playlist features and Subsonic compatibility. (&lt;a href=&quot;https://demo.koozic.net/public&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/DocMarty84/koozic&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0/MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://libretime.org&quot;&gt;LibreTime&lt;/a&gt; - Simple, open source platform that lets you broadcast streaming radio on the web (fork of &lt;a href=&quot;https://github.com/sourcefabric/Airtime&quot;&gt;Airtime&lt;/a&gt;). (&lt;a href=&quot;https://github.com/LibreTime/libretime&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epoupon/lms&quot;&gt;LMS&lt;/a&gt; - Access your self-hosted music using a web interface. (&lt;a href=&quot;http://lms.demo.poupon.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moodeaudio.org/&quot;&gt;moOde Audio&lt;/a&gt; - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. (&lt;a href=&quot;https://github.com/moode-player/moode&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mopidy.readthedocs.org/&quot;&gt;Mopidy&lt;/a&gt; - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (&lt;a href=&quot;https://github.com/mopidy/mopidy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/martijnboland/moped&quot;&gt;Moped&lt;/a&gt; - Responsive HTML5 + Javascript client for the Mopidy music server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/pimusicbox/mopidy-musicbox-webclient&quot;&gt;Mopidy MusicBox&lt;/a&gt; - Web Client for Mopidy Music Server. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Lesterpig/mopidy-party&quot;&gt;Mopidy-Party&lt;/a&gt; - Mopidy web extension designed for party! Let your guests manage the sound. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.musicpd.org/&quot;&gt;mpd&lt;/a&gt; - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (&lt;a href=&quot;https://github.com/MusicPlayerDaemon/MPD&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://www.musicpd.org/clients/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.ympd.org/&quot;&gt;ympd&lt;/a&gt; - Standalone MPD Web GUI written in C, utilizing Websockets and Bootstrap/JS. (&lt;a href=&quot;https://github.com/notandy/ympd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mstream.io/&quot;&gt;mStream&lt;/a&gt; - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (&lt;a href=&quot;https://github.com/IrosTheBeggar/mStream&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://musikcube.com/&quot;&gt;musikcube&lt;/a&gt; - Streaming audio server with Linux/macOS/Windows/Android clients. (&lt;a href=&quot;https://github.com/clangen/musikcube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.navidrome.org&quot;&gt;Navidrome Music Streamer&lt;/a&gt; - Modern Music Server and Streamer, compatible with Subsonic/Airsonic. (&lt;a href=&quot;https://www.navidrome.org/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/deluan/navidrome&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://www.navidrome.org/docs/overview/#apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go/JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agersant/polaris&quot;&gt;Polaris&lt;/a&gt; - Music browsing and streaming application optimized for large music collections, ease of use and high performance. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/badaix/snapcast&quot;&gt;Snapcast&lt;/a&gt; - Synchronous multiroom audio server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sonerezh.bzh/&quot;&gt;Sonerezh&lt;/a&gt; - Self-hosted, web-based application for stream your music, everywhere. (&lt;a href=&quot;https://www.sonerezh.bzh/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sonerezh/sonerezh&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benkaiser/stretto&quot;&gt;Stretto&lt;/a&gt; - Music player with Youtube/Soundcloud import and iTunes/Spotify discovery. (&lt;a href=&quot;https://next.kaiserapps.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/benkaiser/stretto-mobile-next&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://volumio.org/&quot;&gt;Volumio&lt;/a&gt; - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (&lt;a href=&quot;https://github.com/volumio/Volumio2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Video Streaming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluecherrydvr.com/&quot;&gt;Bluecherry&lt;/a&gt; - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (&lt;a href=&quot;https://github.com/bluecherrydvr/bluecherry-apps&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://packages.debian.org/stable/crtmpserver&quot;&gt;crtmpserver&lt;/a&gt; - High performance RTMP/RTSP streaming server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calzoneman/sync&quot;&gt;CyTube&lt;/a&gt; - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (&lt;a href=&quot;http://cytu.be&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Hellowlol/HTPC-Manager&quot;&gt;Hellowlol HTPC Manager fork&lt;/a&gt; - Fully responsive interface to manage all your favorite media on your HTPC. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omarroth/invidious/&quot;&gt;Invidious&lt;/a&gt; - &lt;code&gt;⚠&lt;/code&gt; Invidious is an alternative front-end to YouTube. (&lt;a href=&quot;https://invidio.us/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pastapojken/Myflix&quot;&gt;Myflix&lt;/a&gt; - Self-hosted, super lightweight Netflix alternative. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/oddnetworks/oddworks/core&quot;&gt;Oddworks&lt;/a&gt; - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS/tvOS, Google Android, and Amazon FireTV. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openstreamingplatform.com&quot;&gt;Open Streaming Platform&lt;/a&gt; - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (&lt;a href=&quot;https://gitlab.com/Deamos/flask-nginx-rtmp-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinpeertube.org/en/&quot;&gt;PeerTube&lt;/a&gt; - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (&lt;a href=&quot;https://github.com/Chocobozzz/PeerTube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauxir/rapidbay/&quot;&gt;Rapidbay&lt;/a&gt; - Self-hosted torrent videostreaming service/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast/AppleTV/Smart TV. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datarhei.github.io/restreamer/&quot;&gt;Restreamer&lt;/a&gt; - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (&lt;a href=&quot;https://github.com/datarhei/restreamer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zibbp/Radium&quot;&gt;Radium&lt;/a&gt; - Synced stream and video playback with VOD capabilities utilizing HLS. Developed for movie nights but has many use cases. (&lt;a href=&quot;https://radium-demo.herokuapp.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/Shinobi-Systems/ShinobiCE&quot;&gt;ShinobiCE&lt;/a&gt; - Open Source CCTV software written in Node with both IP and local camera support. &lt;code&gt;AGPL-3.0/GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/streamaserver/streama&quot;&gt;Streama&lt;/a&gt; - Self hosted streaming media server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RblSb/SyncTube&quot;&gt;SyncTube&lt;/a&gt; - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. (&lt;a href=&quot;http://synctube-example.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Haxe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://prologic.github.io/tube&quot;&gt;Tube&lt;/a&gt; - a Youtube-like (&lt;em&gt;without censorship and features you don&#39;t need!&lt;/em&gt;) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. (&lt;a href=&quot;https://tube.mills.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/prologic/tube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.videolan.org/&quot;&gt;VideoLAN Client (VLC)&lt;/a&gt; - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (&lt;a href=&quot;https://github.com/videolan/vlc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Multiple&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zoneminder.com/&quot;&gt;Zoneminder&lt;/a&gt; - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (&lt;a href=&quot;https://github.com/ZoneMinder/ZoneMinder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Misc/Other&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bubka/2FAuth&quot;&gt;2FAuth&lt;/a&gt; - A web app to manage your Two-Factor Authentication (2FA) accounts and generate their security codes. (&lt;a href=&quot;https://demo.2fauth.app/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/etsy/411&quot;&gt;411&lt;/a&gt; - Alert Management Web Application. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ardakilic/alerthub&quot;&gt;AlertHub&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - AlertHub is a simple tool to get alerted from GitHub releases. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://anchr.io&quot;&gt;Anchr&lt;/a&gt; - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (&lt;a href=&quot;https://github.com/n1try/anchr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.anuko.com/time_tracker/index.htm&quot;&gt;Anuko&lt;/a&gt; - Anuko provides simple time and project tracking on a selfhosted basis. (&lt;a href=&quot;https://timetracker.anuko.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/anuko/timetracker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://asciiflow.com/&quot;&gt;asciiflow&lt;/a&gt; - Flow Diagram Drawing Tool. (&lt;a href=&quot;https://github.com/lewish/asciiflow2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java/JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blynk.io/&quot;&gt;blynk&lt;/a&gt; - Platform with iOS and Android apps to control Arduino, ESP8266, Raspberry Pi and similar microcontroller boards over the Internet. (&lt;a href=&quot;https://github.com/blynkkk/blynk-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cachethq.io/&quot;&gt;Cachet&lt;/a&gt; - An open source status page system for everyone. (&lt;a href=&quot;https://demo.cachethq.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/CachetHQ/Cachet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover&lt;/a&gt; - Build your own PaaS in a few minutes. (&lt;a href=&quot;https://captain.server.demo.caprover.com/#/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/caprover/caprover&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cstate/cstate/&quot;&gt;cState&lt;/a&gt; - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML/CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. (&lt;a href=&quot;https://cstate.mnts.lt/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cups.org/&quot;&gt;CUPS&lt;/a&gt; - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (&lt;a href=&quot;https://github.com/apple/cups&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gchq/CyberChef&quot;&gt;CyberChef&lt;/a&gt; - Perform all manner of &quot;cyber&quot; operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (&lt;a href=&quot;https://gchq.github.io/CyberChef&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhiTux/DailyTxT&quot;&gt;DailyTxT&lt;/a&gt; - Encrypted Diary Web-App to save your personal memories of each day. Includes a search-function and encrypted file-upload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Icesofty/Digital-Currency&quot;&gt;Digital-Currency&lt;/a&gt; - Create your own Self-Hosted Digital Currency. (&lt;a href=&quot;https://tonken.glitch.me/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://domainmod.org&quot;&gt;DomainMOD&lt;/a&gt; - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM/cPanel web server data so that you can view, export, and report on your data. (&lt;a href=&quot;https://demo.domainmod.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/domainmod/domainmod&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devfake/flox&quot;&gt;Flox&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Self hosted movie, TV series and anime watch list with a 3-point rating system. Uses The Movie Database backend for information. (&lt;a href=&quot;https://flox-demo.pyxl.dev/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formspree.io/&quot;&gt;formspree&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Just send your form to our URL and we&#39;ll forward it to your email. No PHP, Javascript or sign up required. (&lt;a href=&quot;http://test.formspree.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/formspree/formspree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geneweb.tuxfamily.org/wiki/GeneWeb&quot;&gt;GeneWeb&lt;/a&gt; - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (&lt;a href=&quot;https://demo.geneweb.tuxfamily.org/gw7/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/geneweb/geneweb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;OCAML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/verifid/graph-vl&quot;&gt;graph-vl&lt;/a&gt; - Identity document verification using Machine Learning and GraphQL. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/howsecureismypassword/hsimp&quot;&gt;How Secure Is My Password&lt;/a&gt; - Rather than just saying a password is &quot;weak&quot; or &quot;strong&quot;, How Secure is My Password? lets your users know how long it would take someone to crack their password. (&lt;a href=&quot;https://howsecureismypassword.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majodev/google-webfonts-helper&quot;&gt;google-webfonts-helper&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (&lt;a href=&quot;https://google-webfonts-helper.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Algram/ytdl-webserver&quot;&gt;ytdl-webserver&lt;/a&gt; - Docker-ready webserver for downloading youtube videos. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inoda/journal&quot;&gt;Journal&lt;/a&gt; - Simple journaling with encrypted entries and sharing capabilities. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kimai.org/&quot;&gt;Kimai&lt;/a&gt; - Simple time and project tracking. (&lt;a href=&quot;http://www.kimai.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kimai/kimai&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/securestate/king-phisher&quot;&gt;King Phisher&lt;/a&gt; - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeberg.org/jlelse/MailyGo&quot;&gt;MailyGo&lt;/a&gt; - MailyGo is a small tool written in Go that allows to send HTML forms, for example from static websites without a dynamic backend, via email. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindcollapse/MalwareMultiScan&quot;&gt;MalwareMultiScan&lt;/a&gt; - Self-hosted VirusTotal-like for scanning files with multiple antiviruses running in a Docker. (&lt;a href=&quot;http://199.247.24.56:8888/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindsdb/mindsdb&quot;&gt;MindsDB&lt;/a&gt; - MindsDB is an open source self hosted AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monicahq.com/&quot;&gt;Monica&lt;/a&gt; - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (&lt;a href=&quot;https://github.com/monicahq/monica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://musical-artifacts.com/&quot;&gt;Musical Artifacts&lt;/a&gt; - Helping to catalog, preserve and free the artifacts you need to produce music. (&lt;a href=&quot;https://github.com/lfzawacki/musical-artifacts&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mechazawa/nnmm&quot;&gt;nnmm&lt;/a&gt; - Super tiny pastebin/url minifier &quot;microservice&quot;. &lt;code&gt;Beerware&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://notica.us&quot;&gt;Notica&lt;/a&gt; - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (&lt;a href=&quot;https://github.com/tannercollin/Notica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ombi.io/&quot;&gt;Ombi&lt;/a&gt; - A content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (&lt;a href=&quot;https://github.com/tidusjar/Ombi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://otranscribe.com/&quot;&gt;oTranscribe&lt;/a&gt; - Free web app to take the pain out of transcribing recorded interviews. (&lt;a href=&quot;https://github.com/oTranscribe/oTranscribe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apacketofsweets.github.io/PassCheck/&quot;&gt;PassCheck&lt;/a&gt; - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (&lt;a href=&quot;https://github.com/apacketofsweets/PassCheck&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rxresu.me/&quot;&gt;Reactive Resume&lt;/a&gt; - A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. (&lt;a href=&quot;https://rxresu.me/app/dashboard/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/AmruthPillai/Reactive-Resume&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://releasebell.com/&quot;&gt;ReleaseBell&lt;/a&gt; - Send release notifications for starred Github repos. (&lt;a href=&quot;https://git.cloudron.io/cloudron/releasebell&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revealjs.com&quot;&gt;revealjs&lt;/a&gt; - Framework for easily creating beautiful presentations using HTML. (&lt;a href=&quot;https://revealjs.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/hakimel/reveal.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revive-adserver.com/&quot;&gt;Revive Adserver&lt;/a&gt; - World&#39;s most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (&lt;a href=&quot;https://github.com/revive-adserver/revive-adserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sane-project.org/&quot;&gt;SANE Network Scanning&lt;/a&gt; - Allow remote clients to access image acquisition devices (scanners) available on the local host. (&lt;a href=&quot;http://www.sane-project.org/cvs.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adriankumpf/teslamate&quot;&gt;TeslaMate&lt;/a&gt; - A powerful data logger for Tesla vehicles. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swordbeta/trello-burndown&quot;&gt;Trello Burndown&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Easy to use SCRUM burndown chart for Trello boards. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.vimbadmin.net/&quot;&gt;ViMbAdmin&lt;/a&gt; - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (&lt;a href=&quot;http://www.vimbadmin.net/demo/auth/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/opensolutions/ViMbAdmin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Finesse/web-fonts-repository&quot;&gt;Web fonts repository&lt;/a&gt; - Simple webfont hosting. Google Fonts alternative for your own fonts. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.webtrees.net&quot;&gt;webtrees&lt;/a&gt; - Webtrees is the web&#39;s leading on-line collaborative genealogy application. (&lt;a href=&quot;https://dev.webtrees.net/demo-stable/index.php?ctype=gedcom&amp;amp;ged=demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/fisharebest/webtrees&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Money, Budgeting and Management&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also https://github.com/n1trux/awesome-sysadmin#it-asset-management&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://akaunting.com/&quot;&gt;Akaunting&lt;/a&gt; - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (&lt;a href=&quot;https://github.com/akaunting/akaunting&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://btcpayserver.org/&quot;&gt;BTCPay Server&lt;/a&gt; - A self-hosted Bitcoin and other cryptocurrencies payment processor. (&lt;a href=&quot;https://mainnet.demo.btcpayserver.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/btcpayserver/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/manuel-uberti/boodle&quot;&gt;Boodle&lt;/a&gt; - Simple accounting single-page application in Clojure and ClojureScript. &lt;code&gt;EPL-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paukiatwee/budgetapp&quot;&gt;Budget App&lt;/a&gt; - Budget App is an open source personal budgeting application. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dotledger.com/&quot;&gt;Dot Ledger&lt;/a&gt; - Web-based personal finance management tool. (&lt;a href=&quot;https://demo.dotledger.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotledger/dotledger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.economizzer.org/&quot;&gt;Economizzer&lt;/a&gt; - An easy and secure system for you to manage your personal money and achieve your goals, and can be accessed by computer, tablet or smartphone. (&lt;a href=&quot;https://github.com/gugoan/economizzer#live-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gugoan/economizzer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gaynetdinov/ex_money&quot;&gt;ExMoney&lt;/a&gt; - Self-hosted personal finance app. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firefly-iii.org/&quot;&gt;Firefly III&lt;/a&gt; - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. (&lt;a href=&quot;https://demo.firefly-iii.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/firefly-iii/firefly-iii&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/facto&quot;&gt;Family Accounting Tool&lt;/a&gt; - Web-based finance management tool for partners with partially shared expenses. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beancount.github.io/fava/&quot;&gt;Fava&lt;/a&gt; - Fava is the web frontend of Beancount, a text based double-entry accounting system. (&lt;a href=&quot;https://fava.pythonanywhere.com/example-with-budgets/income_statement/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/beancount/fava&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://galette.eu/dc/&quot;&gt;Galette&lt;/a&gt; - Galette is a membership management web application towards non profit organizations. (&lt;a href=&quot;http://git.tuxfamily.org/galette/galette.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://grr.devome.com/?lang=en&quot;&gt;GRR&lt;/a&gt; - Assets management and booking for small/medium companies. (&lt;a href=&quot;https://github.com/JeromeDevome/GRR&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://hospitalrun.io/&quot;&gt;Hospital Run&lt;/a&gt; - Hospital Run is offline enabled hospital management software. (&lt;a href=&quot;http://hospitalrun.io/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/HospitalRun/hospitalrun-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inventaire.io/welcome&quot;&gt;Inventaire&lt;/a&gt; - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (&lt;a href=&quot;https://github.com/inventaire/inventaire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invoiceninja.org/&quot;&gt;Invoice Ninja&lt;/a&gt; - Powerful tool to invoice clients online. (&lt;a href=&quot;https://app.invoiceninja.com/invoices/create&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/invoiceninja/invoiceninja&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AAL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/InvoicePlane/InvoicePlane&quot;&gt;InvoicePlane&lt;/a&gt; - Manage quotes, invoices, payments and customers for your small business. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ihatemoney.org/&quot;&gt;IHateMoney&lt;/a&gt; - Manage your shared expenses, easily. (&lt;a href=&quot;https://ihatemoney.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/spiral-project/ihatemoney&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bminusl/ihatetobudget&quot;&gt;IHateToBudget&lt;/a&gt; - A simple web app to understand and control your expenses. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kresus.org/&quot;&gt;Kresus&lt;/a&gt; - Open source personal finance manager. (&lt;a href=&quot;https://kresus.org/en/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kresusapp/kresus&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inoda/ontrack&quot;&gt;OnTrack&lt;/a&gt; - A simple app to track spend and set goals. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby/React&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.partkeepr.org&quot;&gt;PartKeepr&lt;/a&gt; - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (&lt;a href=&quot;https://demo.partkeepr.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/partkeepr/PartKeepr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://silverstrike.org/&quot;&gt;SilverStrike&lt;/a&gt; - Personal finance management made easy. (&lt;a href=&quot;https://demo.silverstrike.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/agstrike/silverstrike&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.sigpipe.me/dashie/StockazNG&quot;&gt;StockazNG&lt;/a&gt; - Asset Management System. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#monitoring and https://github.com/n1trux/awesome-sysadmin#metric--metric-collection&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Note-taking and Editors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#wikis&quot;&gt;Wikis&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bulletnotes.io/&quot;&gt;BulletNotes&lt;/a&gt; - Workflowy / Dynalist clone with Kanban (Trello) and Calendar functionality. Organize everything. (&lt;a href=&quot;https://gitlab.com/NickBusey/BulletNotes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boostnote.io/&quot;&gt;Boostnote&lt;/a&gt; - The note-taking app for programmers that focuses on markdown, snippets, and customizability. (&lt;a href=&quot;https://github.com/BoostIO/Boostnote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://demo.codimd.org/&quot;&gt;CodiMD&lt;/a&gt; - Realtime collaborative markdown notes on all platforms, formerly HackMD CE. (&lt;a href=&quot;https://github.com/hackmdio/codimd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m0ngr31/DailyNotes/&quot;&gt;DailyNotes&lt;/a&gt; - App for taking notes and tracking tasks on a daily basis in Markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dillinger.io/&quot;&gt;dillinger&lt;/a&gt; - The last Markdown editor, ever. (&lt;a href=&quot;https://github.com/joemccann/dillinger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getdnote.com&quot;&gt;Dnote&lt;/a&gt; - A simple command line notebook with multi-device sync and web interface. (&lt;a href=&quot;https://github.com/dnote/dnote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docpht.org/&quot;&gt;DocPHT&lt;/a&gt; - With DocPHT you can take notes and quickly document anything and without the use of any database. (&lt;a href=&quot;https://demo.docpht.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kenlog/docpht&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draw.io&quot;&gt;draw.io&lt;/a&gt; - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (&lt;a href=&quot;https://github.com/jgraph/drawio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joplin.cozic.net/&quot;&gt;Joplin&lt;/a&gt; - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (&lt;a href=&quot;https://github.com/laurent22/joplin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://leanote.org/&quot;&gt;Leanote&lt;/a&gt; - Leanote, Not Just A Notepad! Open source cloud notepad. (&lt;a href=&quot;https://leanote.com/note&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/leanote/leanote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://georgeosddev.github.com/markdown-edit/&quot;&gt;Markdown Edit&lt;/a&gt; - Online markdown editor/viewer. (&lt;a href=&quot;https://github.com/georgeOsdDev/markdown-edit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meemo.minimal-space.de/&quot;&gt;Meemo&lt;/a&gt; - Personal notes stream with Markdown support. (&lt;a href=&quot;https://github.com/nebulade/meemo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pereorga/minimalist-web-notepad&quot;&gt;minimalist-web-notepad&lt;/a&gt; - Minimalist notepad.cc clone. (&lt;a href=&quot;https://notes.orga.cat/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n1try/mininote&quot;&gt;MiniNote&lt;/a&gt; - Simple Markdown note-taking app with persistence. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oddmuse.org/&quot;&gt;Oddmuse&lt;/a&gt; - A simple wiki engine written in Perl. No database required. (&lt;a href=&quot;https://github.com/kensanata/oddmuse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FoxUSA/OpenNote&quot;&gt;OpenNote&lt;/a&gt; - OpenNote was built to be an open web-based alternative to Microsoft OneNote (T) and EverNote. (&lt;a href=&quot;https://foxusa.github.io/OpenNote/OpenNote/#/folder&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.overleaf.com/&quot;&gt;Overleaf&lt;/a&gt; - Web-based collaborative LaTeX editor. (&lt;a href=&quot;https://github.com/overleaf/overleaf&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paperwork.cloud&quot;&gt;Paperwork&lt;/a&gt; - OpenSource note-taking and archiving alternative to Evernote, Microsoft OneNote and Google Keep. (&lt;a href=&quot;https://github.com/paperwork/paperwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alextselegidis.com/get/plainpad/&quot;&gt;Plainpad&lt;/a&gt; - A modern note taking application for the cloud, utilizing the best features of progressive web apps technology. (&lt;a href=&quot;https://alextselegidis.com/try/plainpad/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alextselegidis/plainpad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shelltr/textpad&quot;&gt;savepad&lt;/a&gt; - Minimalist notepad based on notepad.cc. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardnotes.org&quot;&gt;Standard Notes&lt;/a&gt; - Simple and private notes app. Protect your privacy while getting more done. That&#39;s Standard Notes. (&lt;a href=&quot;https://app.standardnotes.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/standardnotes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://domchristie.github.io/turndown/&quot;&gt;turndown&lt;/a&gt; - HTML to Markdown converter written in JavaScript. (&lt;a href=&quot;https://github.com/domchristie/turndown&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zadam/trilium&quot;&gt;Trilium Notes&lt;/a&gt; - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://turtl.it/&quot;&gt;Turtl&lt;/a&gt; - Totally private personal database and note taking app. (&lt;a href=&quot;https://github.com/turtl&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;CommonLisp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wreeto.com&quot;&gt;Wreeto&lt;/a&gt; - Wreeto is an open source note-taking, knowledge management and wiki system built on top of Ruby on Rails framework. (&lt;a href=&quot;https://github.com/chrisvel/wreeto_official&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://josephernest.github.io/writing/&quot;&gt;Writing&lt;/a&gt; - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (&lt;a href=&quot;https://github.com/josephernest/writing&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Office Suites&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collaboraoffice.com/code&quot;&gt; Collabora Online Development Edition&lt;/a&gt; - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (&lt;a href=&quot;https://cgit.freedesktop.org/libreoffice/online/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cryptpad.fr/&quot;&gt;CryptPad&lt;/a&gt; - CryptPad is the zero knowledge realtime collaborative editor (rich-text, files, source-code, ...). (&lt;a href=&quot;https://github.com/xwiki-labs/cryptpad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ethercalc.net/&quot;&gt;EtherCalc&lt;/a&gt; - Web spreadsheet. (&lt;a href=&quot;https://github.com/audreyt/ethercalc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CPAL-1.0/Other&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://etherpad.org/&quot;&gt;Etherpad&lt;/a&gt; - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (&lt;a href=&quot;https://demo.sandstorm.io/appdemo/h37dm17aa89yrd8zuqpdn36p6zntumtv08fjpu8a8zrte7q1cn60&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ether/etherpad-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gobby/gobby/wiki/Dedicated%20Server&quot;&gt;Infinoted&lt;/a&gt; - Server for &lt;a href=&quot;https://github.com/gobby/gobby/wiki&quot;&gt;Gobby&lt;/a&gt;, a multi-platform collaborative text editor. (&lt;a href=&quot;https://github.com/gobby/gobby&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helpcenter.onlyoffice.com/faq/server-opensource.aspx&quot;&gt;ONLYOFFICE&lt;/a&gt; - Office suite that enables you to manage documents, projects, team and customer relations in one place. (&lt;a href=&quot;https://github.com/ONLYOFFICE/DocumentServer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PHPOffice&quot;&gt;PHPOffice&lt;/a&gt; - PHPOffice contains libraries which permits to write and read files from most office suites. &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://webodf.org/&quot;&gt;WebODF&lt;/a&gt; - Tools and libraries to view and edit Open Document Format (ODF) files. (&lt;a href=&quot;https://github.com/kogmbh/WebODF&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Password Managers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Password manager with webapp, browser extension, and mobile app. (&lt;a href=&quot;https://github.com/bitwarden/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs&quot;&gt;bitwarden_rs&lt;/a&gt; - Lightweight Bitwarden server API implementation written in Rust. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keeweb.info/&quot;&gt;keeweb&lt;/a&gt; - This webapp is a browser and desktop password manager compatible with KeePass databases. (&lt;a href=&quot;https://github.com/keeweb/keeweb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://padloc.app/&quot;&gt;Padloc&lt;/a&gt; - A modern, open source password manager for individuals and teams. (&lt;a href=&quot;https://github.com/padloc/padloc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.passbolt.com/&quot;&gt;Passbolt&lt;/a&gt; - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (&lt;a href=&quot;https://github.com/passbolt/passbolt_api&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passit.io/&quot;&gt;PassIt&lt;/a&gt; - Simple password manage with sharing features by group and user, but no administration interface. (&lt;a href=&quot;https://app.passit.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/passit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/passwall/passwall-server&quot;&gt;PassWall&lt;/a&gt; - Open source password manager. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psono.com/&quot;&gt;Psono&lt;/a&gt; - A promising password managers fully featured for teams. (&lt;a href=&quot;https://www.psono.pw&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/psono&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarceauKa/shaark&quot;&gt;Shaark&lt;/a&gt; - All in one platform for your links, stories, passwords and albums. Built with Laravel and Vue.js. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.syspass.org/&quot;&gt;sysPass&lt;/a&gt; - Multiuser password management system. (&lt;a href=&quot;http://demo.syspass.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nuxsmin/sysPass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://teampass.net/&quot;&gt;Teampass&lt;/a&gt; - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (&lt;a href=&quot;https://github.com/nilsteampassnet/TeamPass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pastebins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sametmax/0bin&quot;&gt;0bin&lt;/a&gt; - Client side encrypted pastebin. &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bepasty-server.readthedocs.io/en/latest/&quot;&gt;bepasty&lt;/a&gt; - A pastebin for all kinds of files. (&lt;a href=&quot;https://github.com/bepasty/bepasty-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/w4/bin&quot;&gt;bin&lt;/a&gt; - a paste bin. &lt;code&gt;WTFPL/0BSD&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cryptonote.me/&quot;&gt;cryptonote&lt;/a&gt; - Simple open source web application that lets users encrypt and share messages that can only be read once. (&lt;a href=&quot;https://github.com/alainmeier/cryptonote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Edraens/EdPaste&quot;&gt;EdPaste&lt;/a&gt; - Self-hosted pastebin written in Laravel (PHP Framework). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/solusipse/fiche&quot;&gt;fiche&lt;/a&gt; - Command line pastebin, all you need is netcat. (&lt;a href=&quot;http://termbin.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raftario/filite&quot;&gt;filite&lt;/a&gt; - A simple, light and standalone pastebin, URL shortener and file-sharing service. (&lt;a href=&quot;https://filite.raphaeltheriault.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fugacio.us&quot;&gt;Fugacious&lt;/a&gt; - Open source short-term secure messaging (OSSSM). (&lt;a href=&quot;https://github.com/fugacious/fugacious&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://haste.zneix.eu/about.md&quot;&gt;Hastebin&lt;/a&gt; - Open source pastebin written in Node.js (This is a fork with extended maintenance). (&lt;a href=&quot;https://haste.zneix.eu&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/zneix/haste-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://search.cpan.org/dist/App-mojopaste/&quot;&gt;mojopaste&lt;/a&gt; - Perl based pastebin. (&lt;a href=&quot;http://p.thorsen.pm/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jhthorsen/app-mojopaste&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chmllr/NoteHub&quot;&gt;NoteHub&lt;/a&gt; - Free and Hassle-free Pastebin for Markdown Pages. Simple, clean, password provided, generated-short link. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phpaste.sourceforge.io/&quot;&gt;Paste&lt;/a&gt; - Paste is forked from the original source pastebin.com used before it was bought. (&lt;a href=&quot;https://github.com/jordansamuel/PASTE&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/pastebin&quot;&gt;pastebin&lt;/a&gt; - Simple pastebin service with convenient api and CLI. (&lt;a href=&quot;https://paste.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mkaczanowski/pastebin&quot;&gt;pastebin&lt;/a&gt; - Simple, fast, feature-rich, standalone pastebin service. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ptpb/pb&quot;&gt;pb&lt;/a&gt; - Lightweight pastebin (and url shortener) built using flask. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://privatebin.info/&quot;&gt;PrivateBin&lt;/a&gt; - PrivateBin is a minimalist, opensource online pastebin/discussion board where the server has zero knowledge of hosted data. (&lt;a href=&quot;https://privatebin.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/PrivateBin/PrivateBin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Zlib&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PurritoBin/PurritoBin&quot;&gt;PurritoBin&lt;/a&gt; - Ultra fast, minimalistic, encrypted command line paste-bin, where the server has no knowledge of the paste data. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phonicmouse/SharpPaste&quot;&gt;SharpPaste&lt;/a&gt; - Cross-platform C# pastebin with client-side AES-256 encryption that just works. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#/NancyFX&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snibox.github.io/&quot;&gt;Snibox&lt;/a&gt; - Code snippets manager with attractive tag-oriented interface. (&lt;a href=&quot;https://snibox-demo.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/snibox/snibox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicksergeant/snipt&quot;&gt;snipt&lt;/a&gt; - Long-term memory for coders. Share and store code snippets. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magnumdingusedu/socksbin&quot;&gt;SocksBin&lt;/a&gt; - Simple and fast terminal based pastebin, with optional code highlighting. No specific client required, all you need is netcat. &lt;a href=&quot;https://socksbin.magnum.wtf&quot;&gt;Demo&lt;/a&gt;. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudehohl/Stikked&quot;&gt;Stikked&lt;/a&gt; - Advanced and beautiful pastebin. (&lt;a href=&quot;https://paste.scratchbook.ch/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/algolia/sup3rS3cretMes5age&quot;&gt;Sup3rS3cretMes5age&lt;/a&gt; - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lukaesebrot/pasty&quot;&gt;Pasty&lt;/a&gt; - Pasty is a fast and lightweight code pasting server. (&lt;a href=&quot;https://p.kse.li&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Personal Dashboards&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#monitoring&quot;&gt;Monitoring&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cdubz/babybuddy&quot;&gt;Baby Buddy&lt;/a&gt; - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (&lt;a href=&quot;https://babybuddy.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rmountjoy92/DashMachine&quot;&gt;DashMachine&lt;/a&gt; - Another web application bookmark dashboard, with fun features. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://habitica.com/&quot;&gt;Habitica&lt;/a&gt; - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (&lt;a href=&quot;https://github.com/HabitRPG/habitrpg&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0/CC-BY-NC-SA-3.0/CC-BY-SA-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heimdall.site/&quot;&gt;Heimdall&lt;/a&gt; - Heimdall is an elegant solution to organise all your web applications. (&lt;a href=&quot;https://github.com/linuxserver/Heimdall&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://designedbyashw.in/test/hiccup/&quot;&gt;Hiccup&lt;/a&gt; - A beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. (&lt;a href=&quot;https://github.com/ashwin-pc/hiccup&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomershvueli/homepage&quot;&gt;Homepage&lt;/a&gt; - Simple, standalone, self-hosted PHP page that is your window to your server and the web. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bastienwirtz/homer&quot;&gt;Homer&lt;/a&gt; - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/causefx/Organizr&quot;&gt;Organizr&lt;/a&gt; - Organizr aims to be your one stop shop for your Servers Frontend. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Volmarg/personal-management-system&quot;&gt;Personal management system&lt;/a&gt; - Central point for managing personal data (billings, payments, job holidays, notes etc.). (&lt;a href=&quot;http://personal-management-system.pl/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kutyla-philipp/simple-dash&quot;&gt;simple-dash&lt;/a&gt; - A simple, fully responsive Dashboard to forward to the services of your choice. (&lt;a href=&quot;https://kutyla-philipp.github.io/simple-dash/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://allegro.tech/tipboard/&quot;&gt;Tipboard&lt;/a&gt; - In-house, tasty, local dashboarding system. (&lt;a href=&quot;https://github.com/allegro/tipboard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wger.de/&quot;&gt;wger&lt;/a&gt; - Web-based personal workout, fitness and weight logger/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (&lt;a href=&quot;http://wger.de&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/rolandgeider/wger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Photo and Video Galleries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chevereto.com/free&quot;&gt;Chevereto Free&lt;/a&gt; - Powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. (&lt;a href=&quot;https://github.com/Chevereto/Chevereto-Free&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://coppermine-gallery.net/&quot;&gt;Coppermine&lt;/a&gt; - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (&lt;a href=&quot;http://coppermine-gallery.net/demo/cpg15x/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/coppermine-gallery/cpg1.6.x&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://cumulusclips.org/&quot;&gt;CumulusClips&lt;/a&gt; - Your own video sharing website with CumulusClips video sharing script. You can build a YouTube clone where users can upload, rate, comment on videos, and much more. (&lt;a href=&quot;http://demo.cumulusclips.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://damselfly.info&quot;&gt;Damselfly&lt;/a&gt; - Server-based Digital Asset Management with workflow similar to Picasa. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#/.Net&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cbenning/fussel&quot;&gt;Fussel&lt;/a&gt; - Fussel is a static photo gallery generator. Easily generate a reactive gallery and host the optimized static folder of assets. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benschwarz.github.io/gallery-css/&quot;&gt;Gallery CSS&lt;/a&gt; - Gallery.css is all CSS. Think: Simple, maintainable and understandable galleries without the use of Javascript. (&lt;a href=&quot;https://github.com/benschwarz/gallery-css&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;CSS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lycheeorg.github.io/&quot;&gt;Lychee&lt;/a&gt; - Open source grid and album based photo-management-system. (&lt;a href=&quot;https://github.com/LycheeOrg/Lychee&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mediagoblin.org&quot;&gt;Mediagoblin&lt;/a&gt; - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (&lt;a href=&quot;https://savannah.gnu.org/projects/mediagoblin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hooram/ownphotos&quot;&gt;OwnPhotos&lt;/a&gt; - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trebonius0/Photato&quot;&gt;Photato&lt;/a&gt; - Self-hosted photo gallery, accessible through a responsive WebUI. Directly uses and indexes a specific folder in the filesystem. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.zx2c4.com/567&quot;&gt;Photofloat&lt;/a&gt; - Web 2.0 Photo Gallery Done Right via Static JSON and Dynamic Javascript. (&lt;a href=&quot;http://photos.jasondonenfeld.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thibaud-rohmer/PhotoLight&quot;&gt;PhotoLight&lt;/a&gt; - The easiest photo gallery there is. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photonix.org/&quot;&gt;Photonix&lt;/a&gt; - A new web-based photo management application with object recognition, location awareness, color analysis and other ML algorithms. (&lt;a href=&quot;https://demo.photonix.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/damianmoore/photonix&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photoprism.org&quot;&gt;PhotoPrism&lt;/a&gt; - Personal photo management powered by Go and Google TensorFlow. Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (&lt;a href=&quot;https://github.com/photoprism/photoprism&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxvoltar/photo-stream&quot;&gt;Photo Stream&lt;/a&gt; - Minimalist self-hosted photo stream. (&lt;a href=&quot;https://maxvoltar.photo/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/viktorstrate/photoview&quot;&gt;Photoview&lt;/a&gt; - A simple and user-friendly Photo Gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. (&lt;a href=&quot;https://photos.qpqp.dk/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bpatrik.github.io/pigallery2/&quot;&gt;PiGallery 2&lt;/a&gt; - A directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. (&lt;a href=&quot;https://pigallery2.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bpatrik/pigallery2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://piwigo.org/&quot;&gt;Piwigo&lt;/a&gt; - Photo gallery software for the web, built by an active community of users and developers. (&lt;a href=&quot;http://piwigo.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Piwigo/Piwigo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.plumi.org/&quot;&gt;Plumi&lt;/a&gt; - Create your own sophisticated video-sharing site. (&lt;a href=&quot;https://github.com/plumi/plumi.app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quruimageserver.com/&quot;&gt;Quru Image Server&lt;/a&gt; - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (&lt;a href=&quot;https://quruimageserver.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/quru/qis&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saimn/sigal&quot;&gt;sigal&lt;/a&gt; - Yet another simple static gallery generator. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ubergallery.net&quot;&gt;UberGallery&lt;/a&gt; - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (&lt;a href=&quot;https://github.com/UberGallery/UberGallery&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.zenphoto.org/&quot;&gt;Zenphoto&lt;/a&gt; - Open-source gallery and CMS project. (&lt;a href=&quot;https://github.com/zenphoto/zenphoto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Polls and Events&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://calagator.org/&quot;&gt;Calagator&lt;/a&gt; - Event aggregator. (&lt;a href=&quot;https://github.com/calagator/calagator&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chr15m/Clerk&quot;&gt;Clerk&lt;/a&gt; - Simple event logger to keep track of periodic events, habits, etc. as they occur. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://primelife.ercim.eu/results/opensource/63-dudle&quot;&gt;dudle&lt;/a&gt; - Online scheduling application. (&lt;a href=&quot;https://dudle.inf.tu-dresden.de/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kellerben/dudle&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drabkirn/feedka&quot;&gt;Feedka&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Open-source web application that can serve as a platform to get authentic, kindful, and constructive feedback from your friends, family, and co-workers. (&lt;a href=&quot;https://feedka.herokuapp.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://getfider.com&quot;&gt;Fider&lt;/a&gt; - Open source alternative to UserVoice for customer feedback. (&lt;a href=&quot;https://demo.fider.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/getfider/fider&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://framadate.org/&quot;&gt;Framadate&lt;/a&gt; - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (&lt;a href=&quot;https://framadate.org/aqg259dth55iuhwm&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.framasoft.org/framasoft/framadate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CECILL-B&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gancio.org/&quot;&gt;Gancio&lt;/a&gt; - A shared agenda for local communities. (&lt;a href=&quot;https://demo.gancio.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/les/gancio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hitobito.com/en&quot;&gt;hitobito&lt;/a&gt; - A web application to manage complex group hierarchies with members, events and a lot more. (&lt;a href=&quot;https://demo.hitobito.com/en/users/sign_in&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/hitobito/hitobito&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jdsoft.com/jd-esurvey.html&quot;&gt;JD Esurvey&lt;/a&gt; - Open source enterprise survey web application. (&lt;a href=&quot;https://github.com/JD-Software/JDeSurvey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://kyela.net/&quot;&gt;Kyélà&lt;/a&gt; - Participation polls for group events. (&lt;a href=&quot;https://kyela.net/concert/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/abienvenu/Kyela&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.limesurvey.org&quot;&gt;LimeSurvey&lt;/a&gt; - Feature-rich Open Source web based polling software. Supports extensive survey logic. (&lt;a href=&quot;https://demo.limesurvey.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/LimeSurvey/LimeSurvey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meetable.org&quot;&gt;Meetable&lt;/a&gt; - Event aggregator. (&lt;a href=&quot;https://events.indieweb.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/aaronpk/Meetable&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilizon.org&quot;&gt;Mobilizon&lt;/a&gt; - A federated tool that helps you find, create and organise events and groups. (&lt;a href=&quot;https://demo.mobilizon.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/framasoft/mobilizon/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fossasia/open-event-server&quot;&gt;Open Event Server&lt;/a&gt; - Enables organizers to manage events from concerts to conferences and meet-ups. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.phpback.org&quot;&gt;PHPBack&lt;/a&gt; - The open source feedback system. (&lt;a href=&quot;http://www.phpback.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ivandiazwm/phpback&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Booking and Scheduling&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alf.io/&quot;&gt;Alf.io&lt;/a&gt; - The open source ticket reservation system. (&lt;a href=&quot;https://demo.alf.io/authentication&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alfio-event/alf.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easyappointments.org/&quot;&gt;Easy!Appointments&lt;/a&gt; - A highly customizable web application that allows your customers to book appointments with you via the web. (&lt;a href=&quot;http://easyappointments.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alextselegidis/easyappointments&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n1try/http2-serverpush-proxy&quot;&gt;http2-serverpush-proxy&lt;/a&gt; - Reverse proxy that helps to automatically utilize HTTP/2.0&#39;s server push mechanism for static websites. Available as middleware and standalone application. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DarthSim/imgproxy&quot;&gt;imgproxy&lt;/a&gt; - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inlets.dev/&quot;&gt;inlets&lt;/a&gt; - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.kryo.se/iodine/&quot;&gt;iodine&lt;/a&gt; - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (&lt;a href=&quot;https://github.com/yarrick/iodine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thekvs/microproxy&quot;&gt;microproxy&lt;/a&gt; - lightweight non-caching HTTP/HTTPS proxy server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nginxproxymanager.com/&quot;&gt;Nginx Proxy Manager&lt;/a&gt; - Nginx Proxy Manager is an easy way to accomplish reverse proxying hosts with SSL termination. (&lt;a href=&quot;https://github.com/jc21/nginx-proxy-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.php-proxy.com/&quot;&gt;PHP-Proxy&lt;/a&gt; - Web proxy script built specifically to be fast, easy to modify and to support video sites such as YouTube. (&lt;a href=&quot;https://unblockvideos.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Athlon1600/php-proxy-app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pomerium.io&quot;&gt;Pomerium&lt;/a&gt; - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (&lt;a href=&quot;https://github.com/pomerium/pomerium&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.apsis.ch/pound/&quot;&gt;Pound&lt;/a&gt; - Light-weight reverse proxy and load balancer for HTTP/HTTPS. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.privoxy.org&quot;&gt;Privoxy&lt;/a&gt; - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OptimalBits/redbird&quot;&gt;Redbird&lt;/a&gt; - A modern reverse proxy for node that includes cluster, HTTP2, LetsEncrypt, and Docker support. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antoniomika/sish&quot;&gt;sish&lt;/a&gt; - Open source serveo/ngrok alternative providing HTTP(S)/WS(S)/TCP tunnels to localhost using only SSH. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nskondratev/socks5-proxy-server&quot;&gt;socks5-proxy-server&lt;/a&gt; - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;NodeJS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VeeSecurity/SOCKS5Engine&quot;&gt;SOCKS5Engine&lt;/a&gt; - Lightweight &amp;amp; resource-efficient SOCKS5 proxy server, optimized for high-load. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;Squid&lt;/a&gt; - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (&lt;a href=&quot;https://code.launchpad.net/squid&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiperproxy.github.io/&quot;&gt;Swiperproxy&lt;/a&gt; - Lightning-fast, open source web proxy that is easy for you to run and customize. (&lt;a href=&quot;https://github.com/swiperproxy/swiperproxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tinyproxy.github.io/&quot;&gt;Tinyproxy&lt;/a&gt; - Light-weight HTTP/HTTPS proxy daemon. (&lt;a href=&quot;https://github.com/tinyproxy/tinyproxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt; - Træfɪk is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos/Marathon, …) to manage its configuration automatically and dynamically. (&lt;a href=&quot;https://github.com/containous/traefik&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Read it Later Lists&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://keeper.nunux.org/&quot;&gt;Nunux Keeper&lt;/a&gt; - Your personal content curation service. (&lt;a href=&quot;https://github.com/ncarlier/nunux-keeper&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://readflow.app&quot;&gt;Readflow&lt;/a&gt; - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications... (&lt;a href=&quot;https://github.com/ncarlier/readflow&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wallabag.org&quot;&gt;Wallabag&lt;/a&gt; - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (&lt;a href=&quot;https://app.wallabag.it/register/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/wallabag/wallabag&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resource Planning&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://farmos.org/&quot;&gt;farmOS&lt;/a&gt; - Web-based farm record keeping application. (&lt;a href=&quot;https://github.com/farmOS/farmOS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grocy.info/&quot;&gt;grocy&lt;/a&gt; - ERP beyond your fridge - grocy is a web-based self-hosted groceries &amp;amp; household management solution for your home. (&lt;a href=&quot;https://en.demo.grocy.info/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/grocy/grocy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tanibox/tania-core&quot;&gt;Tania&lt;/a&gt; - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Enterprise Resource Planning&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dolibarr.org/&quot;&gt;Dolibarr&lt;/a&gt; - Dolibarr ERP CRM is a modern software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, ...). (&lt;a href=&quot;https://www.dolibarr.org/onlinedemo.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Dolibarr/dolibarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erpnext.com&quot;&gt;ERPNext&lt;/a&gt; - Free open source ERP system. (&lt;a href=&quot;https://demo.erpnext.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/frappe/erpnext&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ledgersmb.org/&quot;&gt;LedgerSMB&lt;/a&gt; - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (&lt;a href=&quot;https://demo.cloud.efficito.com/erp/1.5/login.pl&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ledgersmb/LedgerSMB&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://odoo.com&quot;&gt;Odoo&lt;/a&gt; - Free open source ERP system. (&lt;a href=&quot;https://demo.odoo.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/odoo/odoo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ofbiz.apache.org/&quot;&gt;OFBiz&lt;/a&gt; - FOSS enterprise resource planning system with a suite of business applications flexible enough to be used across any industry. (&lt;a href=&quot;https://svn.apache.org/viewvc/ofbiz/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensourcepos.org/&quot;&gt;OSPOS&lt;/a&gt; - Open Source Point of Sale is a web based point of sale system. (&lt;a href=&quot;https://demo.opensourcepos.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/opensourcepos/opensourcepos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tryton.org/&quot;&gt;Tryton&lt;/a&gt; - Free open source business solution. (&lt;a href=&quot;http://www.tryton.org/download.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://hg.tryton.org/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Search Engines&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ambar.cloud&quot;&gt;Ambar&lt;/a&gt; - Document Search Engine (OCR, Store &amp;amp; Search). (&lt;a href=&quot;https://app.ambar.cloud/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RD17/ambar&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gigablast.com/&quot;&gt;Gigablast&lt;/a&gt; - open source search engine. (&lt;a href=&quot;https://github.com/gigablast/open-source-search-engine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meilisearch.com&quot;&gt;MeiliSearch&lt;/a&gt; - Ultra relevant, instant and typo-tolerant full-text search API. (&lt;a href=&quot;https://github.com/meilisearch/MeiliSearch&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://asciimoo.github.io/searx/&quot;&gt;Searx&lt;/a&gt; - Privacy-respecting, hackable metasearch engine. (&lt;a href=&quot;https://searx.me/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/asciimoo/searx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simon987/sist2&quot;&gt;sist2&lt;/a&gt; - Lightning-fast file system indexer and search tool. (&lt;a href=&quot;https://sist2.simon987.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typesense.org&quot;&gt;Typesense&lt;/a&gt; - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. (&lt;a href=&quot;https://github.com/typesense/typesense&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yacy.net/en/index.html&quot;&gt;Yacy&lt;/a&gt; - Peer based, decentralized search engine server. (&lt;a href=&quot;http://search.yacy.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/yacy/yacy_search_server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Software Development&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Project Management&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-managementto-do-lists&quot;&gt;Task management/To-do lists&lt;/a&gt;, &lt;a href=&quot;https://github.com/n1trux/awesome-sysadmin#code-review&quot;&gt;awesome-sysadmin/Code Review&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonobogitserver.com/&quot;&gt;Bonobo Git Server&lt;/a&gt; - Set up your own self hosted git server on IIS for Windows. Manage users and have full control over your repositories with a nice user friendly graphical interface. (&lt;a href=&quot;https://github.com/jakubgarfield/Bonobo-Git-Server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki&quot;&gt;Fossil&lt;/a&gt; - Distributed version control system featuring wiki and bug tracker. &lt;code&gt;BSD-2-Clause-FreeBSD&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://usegood.work/&quot;&gt;Goodwork&lt;/a&gt; - Self hosted project management and collaboration tool powered by Laravel &amp;amp; VueJS. (&lt;a href=&quot;https://github.com/iluminar/goodwork#demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/iluminar/goodwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitblit.com/&quot;&gt;Gitblit&lt;/a&gt; - Pure Java stack for managing, viewing, and serving Git repositories. (&lt;a href=&quot;https://github.com/gitblit/gitblit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitbucket.github.io/gitbucket-news/&quot;&gt;gitbucket&lt;/a&gt; - Easily installable GitHub clone powered by Scala. (&lt;a href=&quot;https://github.com/gitbucket/gitbucket&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitea.io&quot;&gt;Gitea&lt;/a&gt; - Community managed fork of Gogs, lightweight code hosting solution. (&lt;a href=&quot;https://try.gitea.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/go-gitea/gitea&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitlab.org/&quot;&gt;GitLab&lt;/a&gt; - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (&lt;a href=&quot;https://gitlab.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-foss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitlist.org/&quot;&gt;Gitlist&lt;/a&gt; - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (&lt;a href=&quot;https://github.com/klaussilveira/gitlist&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitolite.com/gitolite/index.html&quot;&gt;Gitolite&lt;/a&gt; - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (&lt;a href=&quot;https://github.com/sitaramc/gitolite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitprep.yukikimoto.com/&quot;&gt;GitPrep&lt;/a&gt; - Portable Github clone. (&lt;a href=&quot;http://perlcodesample.sakura.ne.jp/gitprep/gitprep.cgi&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/yuki-kimoto/gitprep&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alberthier/git-webui&quot;&gt;Git WebUI&lt;/a&gt; - Standalone web based user interface for git repositories. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gogs.io/&quot;&gt;Gogs&lt;/a&gt; - Painless self-hosted Git Service written in Go. (&lt;a href=&quot;https://try.gogs.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gogits/gogs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kallithea-scm.org/&quot;&gt;Kallithea&lt;/a&gt; - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (&lt;a href=&quot;https://kallithea-scm.org/repos/kallithea&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonashaag/klaus&quot;&gt;Klaus&lt;/a&gt; - Simple, easy-to-set-up Git web viewer that Just Works. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lavagna.io&quot;&gt;Lavagna&lt;/a&gt; - Lavagna is an open-source issue/project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (&lt;a href=&quot;https://github.com/digitalfondue/lavagna&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lazylead.org&quot;&gt;Lazylead&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Eliminate the annoying work within ticketing systems (Jira, GitHub, Trello). Allows to automate daily actions like tickets fields verification, email notifications by JQL/GQL, meeting requests to your (or teammates) calendar. (&lt;a href=&quot;https://github.com/dgroup/lazylead&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leantime.io&quot;&gt;Leantime&lt;/a&gt; - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (&lt;a href=&quot;https://github.com/leantime/leantime&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microgit-com/microgit&quot;&gt;Microgit&lt;/a&gt; - Git hosting service made in Crystal and Lucky. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octobox.io/&quot;&gt;Octobox&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Take back control of your GitHub Notifications. (&lt;a href=&quot;https://github.com/octobox/octobox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org&quot;&gt;OpenProject&lt;/a&gt; - OpenProject is a web-based project management system. (&lt;a href=&quot;https://github.com/opf/openproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagure.io/pagure&quot;&gt;Pagure&lt;/a&gt; - A lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. (&lt;a href=&quot;https://pagure.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://phabricator.org/&quot;&gt;Phabricator&lt;/a&gt; - Collection of web applications that help build better software. (&lt;a href=&quot;https://secure.phabricator.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/phacility/phabricator&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.phproject.org/&quot;&gt;Phproject&lt;/a&gt; - High performance full-featured project management system. (&lt;a href=&quot;http://demo.phproject.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alanaktion/phproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.projeqtor.org/&quot;&gt;ProjeQtOr&lt;/a&gt; - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (&lt;a href=&quot;https://demo.projeqtor.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/p/projectorria/code/HEAD/tree/branches/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaishuu0123/rebacklogs&quot;&gt;Re:Backlogs&lt;/a&gt; - Project management and collaboration tool powered by Ruby on Rails &amp;amp; VueJS. (&lt;a href=&quot;https://rebacklogs.saino.me/users/sign_up&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.redmine.org/&quot;&gt;Redmine&lt;/a&gt; - Redmine is a flexible project management web application. (&lt;a href=&quot;http://demo.redmine.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://svn.redmine.org/redmine/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rhodecode.com/&quot;&gt;RhodeCode&lt;/a&gt; - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (&lt;a href=&quot;https://try.rhodecode.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://code.rhodecode.com/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.scm-manager.org/&quot;&gt;SCM Manager&lt;/a&gt; - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (&lt;a href=&quot;https://github.com/scm-manager/scm-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taiga.io/&quot;&gt;Taiga&lt;/a&gt; - Agile Project Management Tool based on the Kanban and Scrum methods. (&lt;a href=&quot;https://github.com/taigaio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titra.io/en/free-time-tracking-online/&quot;&gt;Titra&lt;/a&gt; - Time-tracking solution for freelancers and small teams. (&lt;a href=&quot;https://app.titra.io/try&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kromitgmbh/titra&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt; - Trac is an enhanced wiki and issue tracking system for software development projects. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tuleap.org/&quot;&gt;Tuleap&lt;/a&gt; - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (&lt;a href=&quot;https://tuleap.net/plugins/git/tuleap/tuleap/stable?p=tuleap%2Fstable.git&amp;amp;a=tree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uvdesk.com/&quot;&gt;UVDesk&lt;/a&gt; - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (&lt;a href=&quot;https://demo.uvdesk.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/uvdesk/community-skeleton&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.zentao.pm/&quot;&gt;ZenTao&lt;/a&gt; - An agile(scrum) project management system/tool. (&lt;a href=&quot;http://demo.zentao.pm/user-login.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/easysoft/zentaopms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ZPL-1.2&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bug Trackers&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;IDE/Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atheos.io&quot;&gt;Atheos&lt;/a&gt; - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. (&lt;a href=&quot;https://github.com/Atheos/Atheos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bblfsh/bblfshd&quot;&gt;Babelfish&lt;/a&gt; - Self-hosted server for source code parsing. It can parse any file, in any supported language, extract an Abstract Syntax Tree from it, and convert it to a Universal Abstract Syntax Tree which can enable further analysis and transformation. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coder.com/&quot;&gt;Code-Server&lt;/a&gt; - Visual Studio Code in the browser, hosted on a remote server. (&lt;a href=&quot;https://github.com/cdr/code-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; - Open source workspace server and cloud IDE. (&lt;a href=&quot;https://github.com/eclipse/che&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-1.0&lt;/code&gt; &lt;code&gt;Docker/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitpod.io/&quot;&gt;Gitpod&lt;/a&gt; - Online IDE for GitHub and GitLab. (&lt;a href=&quot;https://gitpod.io/#https://github.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gitpod-io/self-hosted&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-2.0&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mujx/hakatime&quot;&gt;Hakatime&lt;/a&gt; - WakaTime server implementation with analytics dashboard. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dukeofharen/httplaceholder&quot;&gt;HttPlaceholder&lt;/a&gt; - Quickly mock away any webservice using HttPlaceholder. HttPlaceholder lets you specify what the request should look like and what response needs to be returned. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icecoder.net/&quot;&gt;ICEcoder&lt;/a&gt; - ICEcoder is a web IDE / browser based code editor, which allows you to develop websites directly within the web browser. (&lt;a href=&quot;http://demo.icecoder.net/ICEcoder/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/icecoder/ICEcoder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbin.com/&quot;&gt;JS Bin&lt;/a&gt; - Open source collaborative web development debugging tool. (&lt;a href=&quot;https://github.com/jsbin/jsbin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://api.judge0.com&quot;&gt;Judge0 API&lt;/a&gt; - Open source API to compile and run source code. (&lt;a href=&quot;https://github.com/judge0/api&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jupyterlab.github.io/jupyterlab/&quot;&gt;JupyterLab&lt;/a&gt; - Web-based environment for interactive and reproducible computing. (&lt;a href=&quot;https://mybinder.org/v2/gh/jupyterlab/jupyterlab-demo/try.jupyter.org?urlpath=lab&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jupyterlab/jupyterlab/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.koding.com/&quot;&gt;Koding&lt;/a&gt; - The simplest way to manage your entire Dev Infrastructure. (&lt;a href=&quot;https://github.com/koding/koding&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ml-tooling/ml-workspace&quot;&gt;ML Workspace&lt;/a&gt; - All-in-one web-based IDE for machine learning and data science. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://regexr.com/&quot;&gt;Regexr&lt;/a&gt; - RegExr is a HTML/JS based tool for creating, testing, and learning about Regular Expressions. (&lt;a href=&quot;https://github.com/gskinner/regexr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Runscope/requestbin&quot;&gt;RequestBin&lt;/a&gt; - Inspect HTTP requests. Debug webhooks. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com/products/rstudio/#Server&quot;&gt;RStudio Server&lt;/a&gt; - Web browser based IDE for R. (&lt;a href=&quot;https://github.com/rstudio/rstudio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slingcode.net/&quot;&gt;Slingcode&lt;/a&gt; - Web app IDE and computing platform in a single static HTML file. (&lt;a href=&quot;https://slingcode.net/slingcode.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/chr15m/slingcode/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sourcegraph.com&quot;&gt;sourcegraph&lt;/a&gt; - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (&lt;a href=&quot;https://github.com/sourcegraph/sourcegraph&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n1try/wakapi&quot;&gt;Wakapi&lt;/a&gt; - Tracking tool for coding statistics, compatible with WakaTime. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Continuous Integration&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;See &lt;a href=&quot;https://github.com/n1trux/awesome-sysadmin#continuous-integration--continuous-deployment&quot;&gt;awesome-sysadmin/Continuous Integration &amp;amp; Continuous Deployment&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;UX testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sjoerdvanderhoorn/Uier&quot;&gt;Uier&lt;/a&gt; - Codeless or low-code User Experience test editing and management using Selenium to perform testing or UI automation. Uier tends to be a free self hostable alternative to Applitools, Endtest, Ghost Inspector, Usetrace, Screenster and many others. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aerokube.com/selenoid/latest/&quot;&gt;Selenoid&lt;/a&gt; - Lightweight Selenium hub implementation launching browsers within Docker containers. (&lt;a href=&quot;https://github.com/aerokube/selenoid&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FaaS/Serverless&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Serverless_computing&quot;&gt;Serverless computing on Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io&quot;&gt;Appwrite&lt;/a&gt; - End to end backend server for web, native, and mobile developers 🚀. (&lt;a href=&quot;https://github.com/appwrite/appwrite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metrue/fx&quot;&gt;fx&lt;/a&gt; - fx is a tool to help you do Function as a Service with painless on your own servers. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iron-io/functions&quot;&gt;IronFunctions&lt;/a&gt; - The serverless microservices platform by &lt;a href=&quot;https://www.iron.io/&quot;&gt;iron.io&lt;/a&gt;. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://localstack.cloud/&quot;&gt;LocalStack&lt;/a&gt; - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (&lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openfaas.com/&quot;&gt;OpenFaaS&lt;/a&gt; - Serverless Functions Made Simple for Docker &amp;amp; Kubernetes. (&lt;a href=&quot;https://github.com/openfaas/faas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reddec/trusted-cgi&quot;&gt;Trusted-CGI&lt;/a&gt; - Lightweight self-hosted lambda/applications/cgi/serverless-functions platform. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dreamfactory.com/&quot;&gt;DreamFactory&lt;/a&gt; - Turns any SQL/NoSQL/Structured data into Restful API. (&lt;a href=&quot;https://github.com/dreamfactorysoftware/dreamfactory&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.fusio-project.org/&quot;&gt;Fusio&lt;/a&gt; - Open-source API management platform which helps to build and manage REST APIs. (&lt;a href=&quot;http://fusio-project.org/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/apioo/fusio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsoendermann/hapttic&quot;&gt;Hapttic&lt;/a&gt; - Simple HTTP server that forwards all requests to a shell script to handle webhooks you receive. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hasura.io&quot;&gt;Hasura&lt;/a&gt; - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. (&lt;a href=&quot;https://github.com/hasura/graphql-engine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hoppscotch.io&quot;&gt;Hoppscotch&lt;/a&gt; - A free, fast and beautiful API request builder. (&lt;a href=&quot;https://github.com/hoppscotch/hoppscotch&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Vue/Nuxt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://konghq.com/kong/&quot;&gt;Kong&lt;/a&gt; - The World’s Most Popular Open Source Microservice API Gateway and Platform. (&lt;a href=&quot;https://github.com/Kong/kong&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.krakend.io/&quot;&gt;KrakenD&lt;/a&gt; - Open source High-Performance API Gateway. (&lt;a href=&quot;https://github.com/devopsfaith/krakend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.paraio.org&quot;&gt;Para&lt;/a&gt; - Flexible and modular backend framework/server for object persistence, API development and authentication. (&lt;a href=&quot;https://github.com/erudika/para&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bearer/pizzly&quot;&gt;Pizzly&lt;/a&gt; - Open-source API Integrations Manager that provides everything a developer needs to interact with OAuth based APIs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tyk.io&quot;&gt;Tyk&lt;/a&gt; - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (&lt;a href=&quot;https://github.com/TykTechnologies/tyk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation Generators&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static site generators&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://haldean.org/&quot;&gt;Docstore&lt;/a&gt; - Static document hosting without any server-side processing, does not require you to recompile every time you change an article. Clone the repository and add articles in the text/ directory to get started. (&lt;a href=&quot;https://github.com/haldean/docstore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ricostacruz.com/flatdoc/&quot;&gt;Flatdoc&lt;/a&gt; - Small Javascript file that fetches Markdown files and renders them as full pages. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mil/markdown-tree&quot;&gt;markdown-tree&lt;/a&gt; - Serve a hierarchy / tree directory of markdown files. Use intended for small sites built in markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.readthedocs.org/en/latest/install.html&quot;&gt;Read the Docs&lt;/a&gt; - Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. (&lt;a href=&quot;https://readthedocs.org/projects/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/rtfd/readthedocs.org&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Localization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accent.reviews/&quot;&gt;Accent&lt;/a&gt; - Open-source, self-hosted, developer-oriented translation tool. (&lt;a href=&quot;https://github.com/mirego/accent&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pootle.translatehouse.org&quot;&gt;Pootle&lt;/a&gt; - Online translation and localization tool. (&lt;a href=&quot;https://github.com/translate/pootle&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://traduora.com&quot;&gt;Traduora&lt;/a&gt; - Translation management platform for teams. (&lt;a href=&quot;https://github.com/traduora/traduora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weblate.org&quot;&gt;Weblate&lt;/a&gt; - Web-based translation tool with tight version control integration. (&lt;a href=&quot;https://demo.weblate.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/WeblateOrg/weblate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://zanata.org&quot;&gt;Zanata&lt;/a&gt; - Web-based translation platform for translators, content creators and developers to manage localisation projects. (&lt;a href=&quot;https://github.com/zanata/zanata-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Static site generators&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://staticsitegenerators.net and https://www.staticgen.com&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Task management/To-do lists&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#project-management&quot;&gt;Project Management&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SrGMC/kanbana&quot;&gt;Kanbana&lt;/a&gt; - Create boards to track users and projects from flat markdown files. Forked from Crepido. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://kanboard.net/&quot;&gt;Kanboard&lt;/a&gt; - Simple and open source visual task board. (&lt;a href=&quot;https://github.com/kanboard/kanboard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mytinytodo.net/&quot;&gt;myTinyTodo&lt;/a&gt; - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite/MySQL. GTD compliant. (&lt;a href=&quot;http://www.mytinytodo.net/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/maxpozdeev/mytinytodo/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apankrat/nullboard&quot;&gt;Nullboard&lt;/a&gt; - Single-page minimalist kanban board; compact, highly readable and quick to use. (&lt;a href=&quot;https://nullboard.io/preview&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgg/tasks.php&quot;&gt;PHP Task/Todo list&lt;/a&gt; - Simple task/todo list that uses a JSON text file for the tasks. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://planka.app/&quot;&gt;Planka&lt;/a&gt; - Open source Trello alternative. (&lt;a href=&quot;https://plankanban.github.io/planka/#/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/plankanban/planka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://restya.com/board/&quot;&gt;Restyaboard&lt;/a&gt; - Open source Trello-like kanban board. (&lt;a href=&quot;http://restya.com/board/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RestyaPlatform/board&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/piga&quot;&gt;Task Keeper&lt;/a&gt; - List editor for power users, backed by a self-hosted server. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://taskboard.matthewross.me/&quot;&gt;TaskBoard&lt;/a&gt; - Kanban-inspired app for keeping track of things that need to get done. (&lt;a href=&quot;https://taskboard.matthewross.me/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kiswa/TaskBoard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.taskfreak.com/original&quot;&gt;Taskfreak&lt;/a&gt; - Simple but efficient web based task manager written in PHP. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m1guelpf/tasks&quot;&gt;Tasks&lt;/a&gt; - Simple tasks and notes manager written in PHP, jQuery and Bootstrap using a custom flat file database. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thewhitetulip/Tasks&quot;&gt;Tasks&lt;/a&gt; - Kanban based to-do list manager written in Go. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taskwarrior.org/&quot;&gt;Taskwarrior&lt;/a&gt; - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (&lt;a href=&quot;https://taskwarrior.org/download/#git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satrun77/tinyissue&quot;&gt;Tinyissue&lt;/a&gt; - Simple Issue Tracking for Teams. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/todo&quot;&gt;todo&lt;/a&gt; - Simple todo list manager. (&lt;a href=&quot;https://todo.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.todomini.app/&quot;&gt;todoMini&lt;/a&gt; - Mobile friendly zero-feature TODO list web app. Unix philosophy. (&lt;a href=&quot;https://appmini.github.io/todoMini/?demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/appMini/todoMini&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.getontracks.org/&quot;&gt;Tracks&lt;/a&gt; - Web-based application to help you implement David Allen’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Getting_Things_Done&quot;&gt;Getting Things Done™&lt;/a&gt; methodology. (&lt;a href=&quot;https://github.com/TracksApp/tracks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vikunja.io/&quot;&gt;Vikunja&lt;/a&gt; - The to-do app to organize your life. (&lt;a href=&quot;https://try.vikunja.io/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://kolaente.dev/vikunja/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/usevolition/volition&quot;&gt;Volition&lt;/a&gt; - Opinionated open-source task management. (&lt;a href=&quot;https://usevolition.com/today/new?guest=true&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wekan.github.io/&quot;&gt;Wekan&lt;/a&gt; - Open-source Trello-like kanban. (&lt;a href=&quot;https://github.com/wekan/wekan&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ticketing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-managementto-do-lists&quot;&gt;Task management/To-do lists&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#project-management&quot;&gt;Project Management&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugzilla.org/&quot;&gt;Bugzilla&lt;/a&gt; - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bumpy-booby.derivoile.fr/&quot;&gt;Bumpy Booby&lt;/a&gt; - Simple, responsive and highly customizable PHP bug tracking system. (&lt;a href=&quot;https://github.com/piero-la-lune/Bumpy-Booby&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://diamantedesk.com/&quot;&gt;DiamanteDesk&lt;/a&gt; - DiamanteDesk is FREE Open Source easy-to-use help-desk solution. (&lt;a href=&quot;http://diamantedesk.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/eltrino/diamantedesk-application&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://django-todo.org/&quot;&gt;django-todo&lt;/a&gt; - django-todo is a pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (&lt;a href=&quot;https://github.com/shacker/django-todo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erxes.io/install/&quot;&gt;Erxes&lt;/a&gt; - Marketing, sales, and customer service platform designed to help businesses attract more engaged customers. (&lt;a href=&quot;https://demo.erxes.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/erxes/erxes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.flyspray.org/&quot;&gt;Flyspray&lt;/a&gt; - Uncomplicated, web-based bug tracking system. (&lt;a href=&quot;https://github.com/Flyspray/flyspray&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freescout-helpdesk/freescout&quot;&gt;FreeScout&lt;/a&gt; - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helpy.io&quot;&gt;Helpy&lt;/a&gt; - Helpy is a modern, open source helpdesk customer support application. Features include knowledgebase, community discussions and support tickets integrated with email. (&lt;a href=&quot;https://demo.helpy.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/helpyio/helpy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huboard/huboard&quot;&gt;HuBoard&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Instant project management for your GitHub issues (Connects directly GitHub API). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mantisbt.org/&quot;&gt;MantisBT&lt;/a&gt; - Self hosted bug tracker, fits best for software development. (&lt;a href=&quot;https://www.mantisbt.org/bugs/my_view_page.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mantisbt/mantisbt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensupports.com/&quot;&gt;OpenSupports&lt;/a&gt; - Multi language ticket system with FAQ, role management, metrics and canned response features. (&lt;a href=&quot;https://www.opensupports.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/opensupports/opensupports&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://osticket.com/&quot;&gt;osTicket&lt;/a&gt; - Manage, organize and archive all your support requests and responses in one place. (&lt;a href=&quot;https://github.com/osTicket/osTicket&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.otrs.com/&quot;&gt;OTRS&lt;/a&gt; - Trouble ticket system for assigning tickets to incoming queries and tracking further communications. (&lt;a href=&quot;https://github.com/OTRS/otrs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bestpractical.com/rt/&quot;&gt;Request Tracker&lt;/a&gt; - An enterprise-grade issue tracking system. (&lt;a href=&quot;https://github.com/bestpractical/rt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getsentry/onpremise&quot;&gt;Sentry On-Premise&lt;/a&gt; - A powerful error tracking platform with wide language support and a robust API. (&lt;a href=&quot;https://github.com/getsentry/sentry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sit.fyi/&quot;&gt;SIT&lt;/a&gt; - SCM-agnostic, file-based, offline-first, immutable issue tracker. (&lt;a href=&quot;https://github.com/sit-fyi/sit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thebuggenie.org&quot;&gt;TheBugGenie&lt;/a&gt; - friendly project management and issue tracking tool, with extensive user rights system. (&lt;a href=&quot;https://github.com/thebuggenie/thebuggenie&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zammad.org/&quot;&gt;Zammad&lt;/a&gt; - Easy to use but powerful open-source support and ticketing system. (&lt;a href=&quot;https://github.com/zammad/zammad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;URL Shorteners&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Before hosting one, please see &lt;a href=&quot;https://en.wikipedia.org/wiki/URL_shortening#Shortcomings&quot;&gt;shortcomings&lt;/a&gt; of URL shorteners.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/someone-stole-my-name/gShort&quot;&gt;gShort&lt;/a&gt; - Privacy-friendly self-hosted URL shortener. (&lt;a href=&quot;http://gshort.christiansegundo.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kutt.it&quot;&gt;Kutt&lt;/a&gt; - A modern URL shortener with support for custom domains. (&lt;a href=&quot;https://github.com/thedevs-network/kutt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tommyku/link-shortener-front-end&quot;&gt;Link-shortener-bot&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - URL shortener using a Telegram Bot. (&lt;a href=&quot;http://t.me/GiveMeShortLinkBot&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.ikl.sh/132ikl/liteshort&quot;&gt;liteshort&lt;/a&gt; - User-friendly, actually lightweight, and configurable URL shortener. (&lt;a href=&quot;https://ls.ikl.sh&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ldidry/lstu&quot;&gt;Lstu&lt;/a&gt; - &lt;em&gt;Let&#39;s SHorten That Url&lt;/em&gt; - Lightweight URL shortener. &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://project.polr.me/&quot;&gt;Polr&lt;/a&gt; - Modern, minimalist, modular, and lightweight URL shortener. (&lt;a href=&quot;https://github.com/Cydrobolt/polr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ziyasal/reducio&quot;&gt;reduc.io&lt;/a&gt; - URL shortener service written in Scala, using Akka-Http and Redis. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/ReducePy&quot;&gt;ReducePy&lt;/a&gt; - URL shortener service using Tornado and Redis runs on Docker and Kubernetes. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sqozz/schort&quot;&gt;schort&lt;/a&gt; - No login, no javascript, just short links. (&lt;a href=&quot;https://s.wx0.de&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shlink.io&quot;&gt;Shlink&lt;/a&gt; - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (&lt;a href=&quot;https://github.com/shlinkio/shlink&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://shlink.io/apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/shorturl&quot;&gt;shorturl&lt;/a&gt; - Simple URL shortener with very tiny URLs. (&lt;a href=&quot;https://url.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azlux/Simple-URL-Shortener&quot;&gt;Simple-URL-Shortener&lt;/a&gt; - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (&lt;a href=&quot;https://u.azlux.fr&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/draganczukp/simply-shorten&quot;&gt;Simply Shorten&lt;/a&gt; - A simple URL shortener that just shortens links. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cagataycali/url-shortener&quot;&gt;url-shortener&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - Shitty url shortener, emoji and AI powered. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sapioit/URL-shortener&quot;&gt;URL-Shortener&lt;/a&gt; - Make your long links short and only uses lowercase, so you can write and spell them faster. (&lt;a href=&quot;http://scurtez.cf&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yourls.org/&quot;&gt;YOURLS&lt;/a&gt; - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (&lt;a href=&quot;https://github.com/YOURLS/YOURLS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;VPN&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#vpn&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Web servers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See https://github.com/n1trux/awesome-sysadmin#web&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Wikis&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#documentation-generators&quot;&gt;Documentation Generators&lt;/a&gt;, &lt;a href=&quot;http://www.wikimatrix.org/&quot;&gt;Wikimatrix&lt;/a&gt;, &lt;a href=&quot;http://wikiindex.org/Category:Wiki_Engine&quot;&gt;Wiki Engines on WikiIndex&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_wiki_software&quot;&gt;List of wiki software on wikipedia&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_wiki_software&quot;&gt;Comparison of wiki software on wikipedia&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookstackapp.com/&quot;&gt;BookStack&lt;/a&gt; - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (&lt;a href=&quot;https://www.bookstackapp.com/#demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ssddanbrown/BookStack&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schollz/cowyo&quot;&gt;Cowyo&lt;/a&gt; - Cowyo is a feature-rich wiki for minimalists. (&lt;a href=&quot;https://cowyo.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/django-wiki/django-wiki&quot;&gt;django-wiki&lt;/a&gt; - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (&lt;a href=&quot;https://demo.django-wiki.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documize.com&quot;&gt;Documize&lt;/a&gt; - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL/Percona. (&lt;a href=&quot;https://github.com/documize/community&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dokuwiki.org/DokuWiki&quot;&gt;Dokuwiki&lt;/a&gt; - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain files, therefore no database is required. (&lt;a href=&quot;https://github.com/splitbrain/dokuwiki&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jgm/gitit&quot;&gt;Gitit&lt;/a&gt; - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki&#39;s web interface. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gollum/gollum&quot;&gt;Gollum&lt;/a&gt; - Simple, Git-powered wiki with a sweet API and local frontend. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudioc/jingo&quot;&gt;jingo&lt;/a&gt; - Git based wiki engine written for node.js, with a decent design, a search capability and good typography. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mediawiki.org/wiki/MediaWiki&quot;&gt;Mediawiki&lt;/a&gt; - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (&lt;a href=&quot;https://en.wikipedia.org/wiki/Main_Page&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://phabricator.wikimedia.org/diffusion/MW/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moinmo.in/&quot;&gt;MoinMoin&lt;/a&gt; - Advanced, easy to use and extensible WikiEngine with a large community of users. (&lt;a href=&quot;https://github.com/moinwiki/moin-1.9&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getoutline.com/&quot;&gt;Outline&lt;/a&gt; &lt;code&gt;⚠&lt;/code&gt; - An open, extensible, wiki for your team built using React and Node.js. (&lt;a href=&quot;https://github.com/outline/outline&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sbrl/Pepperminty-Wiki&quot;&gt;Pepperminty Wiki&lt;/a&gt; - Complete markdown-powered wiki contained in a single PHP file. (&lt;a href=&quot;https://starbeamrainbowlabs.com/labs/peppermint/build/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xy2z/PineDocs&quot;&gt;PineDocs&lt;/a&gt; - Simple, fast, customizable and lightweight site for browsing files. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.pmwiki.org&quot;&gt;PmWiki&lt;/a&gt; - Wiki-based system for collaborative creation and maintenance of websites. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://raneto.com/&quot;&gt;Raneto&lt;/a&gt; - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tiddlywiki.com/&quot;&gt;TiddlyWiki&lt;/a&gt; - Reusable non-linear personal web notebook. (&lt;a href=&quot;https://github.com/Jermolene/TiddlyWiki5&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tiki.org&quot;&gt;Tiki&lt;/a&gt; - Wiki CMS Groupware with the most built-in features. (&lt;a href=&quot;https://tiki.org/Demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/p/tikiwiki/code/HEAD/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://twiki.org/&quot;&gt;TWiki&lt;/a&gt; - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (&lt;a href=&quot;http://twiki.org/cgi-bin/view/Sandbox/WebHome&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;http://svn.twiki.org/svn/twiki/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prologic/wiki&quot;&gt;wiki&lt;/a&gt; - Simple Markdown based wiki engine. (&lt;a href=&quot;https://wiki.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.js.org/&quot;&gt;Wiki.js&lt;/a&gt; - Modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown. (&lt;a href=&quot;https://docs.requarks.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wikiss.tuxfamily.org/&quot;&gt;WiKiss&lt;/a&gt; - Wiki, simple to use and install. (&lt;a href=&quot;https://svnweb.tuxfamily.org/listing.php?repname=wikiss/svn&amp;amp;path=%2F&amp;amp;sc=0&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.xwiki.org&quot;&gt;XWiki&lt;/a&gt; - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (&lt;a href=&quot;http://playground.xwiki.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/xwiki/xwiki-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zim-wiki.org/&quot;&gt;Zim&lt;/a&gt; - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. (&lt;a href=&quot;https://github.com/zim-desktop-wiki/zim-desktop-wiki&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Self-hosting Solutions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1backend/1backend&quot;&gt;1Backend&lt;/a&gt; - Self-host web apps, microservices and lambdas on your server. Advanced features enable service reuse and composition. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DaveStephens/ansible-nas&quot;&gt;Ansible-NAS&lt;/a&gt; - Build a full-featured home server with this playbook and an Ubuntu box. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;YAML/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CherryKitten/CharjaBox&quot;&gt;CharjaBox&lt;/a&gt; - Highly configurable Ansible based Homeserver setup using Docker. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;YAML/Ansible/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud-computer.dev&quot;&gt;Cloud Computer&lt;/a&gt; - A computer in the cloud that deploys with one click and makes applications accessible through a web browser. (&lt;a href=&quot;https://github.com/cloud-computer/cloud-computer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dietpi.com/&quot;&gt;DietPi&lt;/a&gt; - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (&lt;a href=&quot;https://github.com/Fourdee/DietPi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dockstarter.com/&quot;&gt;DockSTARTer&lt;/a&gt; - DockSTARTer helps you get started with home server apps running in Docker. (&lt;a href=&quot;https://github.com/GhostWriters/DockSTARTer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dfabric.github.io/DPlatform-Shell/&quot;&gt;DPlatform&lt;/a&gt; - Deploy self-hosted apps easily: simple, bloat-free, independent installation. (&lt;a href=&quot;https://github.com/j8r/DPlatform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flap.cloud&quot;&gt;FLAP&lt;/a&gt; - Low maintenance framework to manage self-hosted services. (&lt;a href=&quot;https://gitlab.com/flap-box/flap&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freedombone.net/&quot;&gt;FreedomBone&lt;/a&gt; - Home server configuration based on Debian. (&lt;a href=&quot;https://code.freedombone.net/bashrc/freedombone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freedomboxfoundation.org/&quot;&gt;FreedomBox&lt;/a&gt; - Community project to develop, design and promote personal servers running free software for private, personal, communications. (&lt;a href=&quot;https://salsa.debian.org/freedombox-team/freedombox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freenas.org/&quot;&gt;FreeNAS&lt;/a&gt; - Network-attached storage (NAS) software based on FreeBSD and the OpenZFS file system. Support for SMB, AFP, NFS, iSCSI, SSH, rsync and FTP/TFTP protocols. Advanced features include full-disk encryption and plug-ins. (&lt;a href=&quot;https://github.com/freenas/freenas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://homelabos.com&quot;&gt;HomelabOS&lt;/a&gt; - Your very own offline-first privacy-centric open-source data-center. Deploy over 100 services with a few commands. (&lt;a href=&quot;https://gitlab.com/NickBusey/HomelabOS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloudpi.com/&quot;&gt;NextCloudPi&lt;/a&gt; - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian/Debian. (&lt;a href=&quot;https://github.com/nextcloud/nextcloudpi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0-or-later&lt;/code&gt; &lt;code&gt;Bash/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openmediavault.org/&quot;&gt;OpenMediaVault&lt;/a&gt; - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. (&lt;a href=&quot;https://github.com/openmediavault/openmediavault&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sandstorm.io/&quot;&gt;Sandstorm&lt;/a&gt; - Personal server for running self-hosted apps easily and securely. (&lt;a href=&quot;https://demo.sandstorm.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sovereign/sovereign&quot;&gt;sovereign&lt;/a&gt; - Set of Ansible playbooks to build and maintain your own private cloud: email, calendar, contacts, file sync, IRC bouncer, VPN, and more. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;YAML/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syncloud.org/&quot;&gt;Syncloud&lt;/a&gt; - Your own online file storage, social network or email server. (&lt;a href=&quot;https://github.com/syncloud/platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubos.net/&quot;&gt;UBOS&lt;/a&gt; - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wikisuite.org&quot;&gt;WikiSuite&lt;/a&gt; - The most comprehensive and integrated Free / Libre / Open Source enterprise software suite. (&lt;a href=&quot;https://wikisuite.org/Source-Code&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Multiple&lt;/code&gt; &lt;code&gt;ClearOS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yunohost.org/&quot;&gt;YunoHost&lt;/a&gt; - Server operating system aiming to make self-hosting accessible to everyone. (&lt;a href=&quot;https://yunohost.org/#/try&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/YunoHost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;List of Licenses&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;⚠ &lt;/code&gt; - Depends on a proprietary service outside the user&#39;s control&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0BSD&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/0BSD&quot;&gt;BSD Zero-Clause Licence&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AAL&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/AAL&quot;&gt;Attribution Assurance License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGPL-3.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;GNU Affero General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGPL-3.0-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/AGPL-3.0-only.html&quot;&gt;GNU Affero General Public License 3.0 only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Apache-2.0&lt;/code&gt; - &lt;a href=&quot;http://www.apache.org/licenses/&quot;&gt;Apache, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;APSL-2.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/APSL-2.0&quot;&gt;Apple Public Source License, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Artistic-2.0&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/Artistic-2.0&quot;&gt;Artistic License Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Beerware&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/Beerware.html&quot;&gt;Beerware License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-2-Clause&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/BSD-2-Clause&quot;&gt;BSD 2-clause &quot;Simplified&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-2-Clause-FreeBSD&lt;/code&gt; - &lt;a href=&quot;https://www.freebsd.org/copyright/freebsd-license.html&quot;&gt;BSD 2-Clause FreeBSD License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD 3-Clause &quot;New&quot; or &quot;Revised&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-3-Clause-Attribution&lt;/code&gt; - &lt;a href=&quot;https://fedoraproject.org/wiki/Licensing/BSD_with_Attribution&quot;&gt;BSD with attribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-NC-SA-3.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-SA-3.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC0-1.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/about/cc0/&quot;&gt;Public Domain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CDDL-1.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/CDDL-1.0&quot;&gt;Common Development and Distribution License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CECILL-B&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/CECILL-B.html&quot;&gt;CEA CNRS INRIA Logiciel Libre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CPAL-1.0&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/CPAL-1.0&quot;&gt;Common Public Attribution License Version 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DPL&lt;/code&gt; - &lt;a href=&quot;https://cerb.ai/license/&quot;&gt;Devblocks Public License 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ECL-2.0&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/ECL-2.0&quot;&gt;Educational Community License, Version 2.0 &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://www.eclipse.org/legal/epl-v10.html&quot;&gt;Eclipse Public License, Version 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.eclipse.org/legal/epl-v20.html&quot;&gt;Eclipse Public License, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EUPL-1.2&lt;/code&gt; - &lt;a href=&quot;https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12&quot;&gt;European Union Public License 1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.1-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.1-only.html&quot;&gt;GNU Free Documentation License v1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.1-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.1-or-later.html&quot;&gt;GNU Free Documentation License v1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.2-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.2-only.html&quot;&gt;GNU Free Documentation License v1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.2-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.2-or-later.html&quot;&gt;GNU Free Documentation License v1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.3-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.3-only.html&quot;&gt;GNU Free Documentation License v1.3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.3-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.3-or-later.html&quot;&gt;GNU Free Documentation License v1.3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/gpl-1.0&quot;&gt;GNU General Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot;&gt;GNU General Public License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-2.0-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-2.0-or-later.html&quot;&gt;GNU General Public License v2.0 or later&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-3.0-only.html&quot;&gt;GNU General Public License v3.0 only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-3.0-or-later.html&quot;&gt;GNU General Public License v3.0 or later&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0&lt;/code&gt; - &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GNU General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/IPL-1.0&quot;&gt;IBM Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ISC&lt;/code&gt; - &lt;a href=&quot;https://www.isc.org/downloads/software-support-policy/isc-license/&quot;&gt;Internet Systems Consortium License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LGPL-2.1&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/LGPL-2.1&quot;&gt;Lesser General Public License 2.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LGPL-3.0&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/LGPL-3.0&quot;&gt;Lesser General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MIT&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MPL-1.1&lt;/code&gt; - &lt;a href=&quot;https://www.mozilla.org/media/MPL/1.1/index.txt&quot;&gt;Mozilla Public License Version 1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.mozilla.org/MPL/2.0/index.txt&quot;&gt;Mozilla Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Multiple&lt;/code&gt; - Various different licenses, for different components of the project&#39;s software.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OSL-3.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/osl-3.0.php&quot;&gt;Open Software License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Other&lt;/code&gt; - Non-standard license, usually unique to the project itself.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Sendmail&lt;/code&gt; - &lt;a href=&quot;https://www.sendmail.com/pdfs/open_source/sendmail_license.pdf&quot;&gt;Sendmail License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/SSPL-1.0.html&quot;&gt;Server Side Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Unlicense&lt;/code&gt; - &lt;a href=&quot;http://unlicense.org/&quot;&gt;The Unlicense&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WTFPL&lt;/code&gt; - &lt;a href=&quot;http://www.wtfpl.net/about/&quot;&gt;Do What the Fuck You Want to Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Zlib&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/Zlib&quot;&gt;Zlib/libpng License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZPL-1.2&lt;/code&gt; - &lt;a href=&quot;http://zpl.pub/page/zplv12&quot;&gt;Zope Public License 1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZPL-2.0&lt;/code&gt; - &lt;a href=&quot;http://opensource.org/licenses/ZPL-2.0&quot;&gt;Zope Public License 2.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;External links&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onurakpolat/awesome-bigdata&quot;&gt;Awesome Big Data&lt;/a&gt; - Curated list of awesome big data frameworks, resources and other awesomeness.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awesomedata/awesome-public-datasets&quot;&gt;Awesome Public Datasets&lt;/a&gt; - List of high quality, topic-centric public data sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n1trux/awesome-sysadmin&quot;&gt;Awesome Sysadmin&lt;/a&gt; - Curated list of amazingly awesome open source sysadmin resources.&lt;/li&gt; 
 &lt;li&gt;Lists of software aimed at privacy and decentralization in some form: &lt;a href=&quot;https://prism-break.org/en/&quot;&gt;PRISM Break&lt;/a&gt;, &lt;a href=&quot;https://www.privacytools.io/&quot;&gt;privacytools.io&lt;/a&gt;, &lt;a href=&quot;https://redecentralize.github.io/alternative-internet/&quot;&gt;Alternative Internet&lt;/a&gt;, &lt;a href=&quot;http://libreprojects.net/&quot;&gt;Libre Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dynamic Domain Name services: &lt;a href=&quot;https://freedns.afraid.org/domain/registry/&quot;&gt;Afraid.org&lt;/a&gt;, &lt;a href=&quot;https://pagekite.net/&quot;&gt;Pagekite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Communities/forums: &lt;a href=&quot;https://www.reddit.com/r/selfhosted&quot;&gt;/r/selfhosted&lt;/a&gt;, &lt;a href=&quot;https://indieweb.org/&quot;&gt;IndieWeb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mirrors: &lt;a href=&quot;https://github.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;GitHub.com&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;Gitlab.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributing guidelines can be found in &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/.github/CONTRIBUTING.md&quot;&gt;.github/CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;The list of authors can be found in &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/AUTHORS.md&quot;&gt;AUTHORS.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This list is under the &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/LICENSE&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 Unported&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they&#39;re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they&#39;re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Discord = require(&#39;discord.js&#39;);
const client = new Discord.Client();

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you&#39;d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don&#39;t hesitate to join our official &lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bkimminich/juice-shop</title>
      <link>https://github.com/bkimminich/juice-shop</link>
      <description>&lt;p&gt;OWASP Juice Shop: Probably the most modern and sophisticated insecure web application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/frontend/src/assets/public/images/JuiceShop_Logo_100px.png&quot; alt=&quot;Juice&amp;nbsp;Shop&amp;nbsp;Logo&quot;&gt; OWASP Juice Shop&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://owasp.org/projects/#sec-flagships&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/owasp-flagship%20project-48A646.svg&quot; alt=&quot;OWASP Flagship&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bkimminich/juice-shop/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/bkimminich/juice-shop.svg&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/owasp_juiceshop&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/owasp_juiceshop.svg?style=social&amp;amp;label=Follow&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reddit.com/r/owasp_juiceshop&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/owasp_juiceshop?style=social&quot; alt=&quot;Subreddit subscribers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/bkimminich/juice-shop/workflows/CI/CD%20Pipeline/badge.svg?branch=master&quot; alt=&quot;CI/CD Pipeline&quot;&gt; &lt;a href=&quot;https://codeclimate.com/github/bkimminich/juice-shop/test_coverage&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/f6959582d3acc8bc2607/test_coverage&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/bkimminich/juice-shop/maintainability&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/f6959582d3acc8bc2607/maintainability&quot; alt=&quot;Maintainability&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/bkimminich/juice-shop/trends/technical_debt&quot;&gt;&lt;img src=&quot;https://img.shields.io/codeclimate/tech-debt/bkimminich/juice-shop&quot; alt=&quot;Code Climate technical debt&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/223&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/223/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/stars/bkimminich/juice-shop.svg?label=GitHub%20%E2%98%85&amp;amp;style=flat&quot; alt=&quot;GitHub stars&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg&quot; alt=&quot;Contributor Covenant&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://twitter.com/dschadow/status/706781693504589824&quot;&gt;The most trustworthy online shop out there.&lt;/a&gt; (&lt;a href=&quot;https://github.com/dschadow&quot;&gt;@dschadow&lt;/a&gt;) — &lt;a href=&quot;https://twitter.com/shehackspurple/status/907335357775085568&quot;&gt;The best juice shop on the whole internet!&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/shehackspurple&quot;&gt;@shehackspurple&lt;/a&gt;) — &lt;a href=&quot;https://youtu.be/TXAztSpYpvE?t=26m35s&quot;&gt;Actually the most bug-free vulnerable application in existence!&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/vanderaj&quot;&gt;@vanderaj&lt;/a&gt;) — &lt;a href=&quot;https://twitter.com/kramse/status/1073168529405472768&quot;&gt;First you 😂😂then you 😢&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/kramse&quot;&gt;@kramse&lt;/a&gt;) — &lt;a href=&quot;https://twitter.com/coderPatros/status/1199268774626488320&quot;&gt;But this doesn&#39;t have anything to do with juice.&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/coderPatros&quot;&gt;@coderPatros&#39; wife&lt;/a&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OWASP Juice Shop is probably the most modern and sophisticated insecure web application! It can be used in security trainings, awareness demos, CTFs and as a guinea pig for security tools! Juice Shop encompasses vulnerabilities from the entire &lt;a href=&quot;https://owasp.org/www-project-top-ten&quot;&gt;OWASP Top Ten&lt;/a&gt; along with many other security flaws found in real-world applications!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/screenshots/slideshow.gif&quot; alt=&quot;Juice Shop Screenshot Slideshow&quot;&gt;&lt;/p&gt; 
&lt;p&gt;For a detailed introduction, full list of features and architecture overview please visit the official project page: &lt;a href=&quot;https://owasp-juice.shop&quot;&gt;https://owasp-juice.shop&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#deploy-on-heroku-free-0month-dyno&quot;&gt;Deploy on Heroku (free ($0/month) dyno)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#from-sources&quot;&gt;From Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#packaged-distributions&quot;&gt;Packaged Distributions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#docker-container&quot;&gt;Docker Container&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#vagrant&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#amazon-ec2-instance&quot;&gt;Amazon EC2 Instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#azure-container-instance&quot;&gt;Azure Container Instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#google-compute-engine-instance&quot;&gt;Google Compute Engine Instance&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#demo&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#documentation&quot;&gt;Documentation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#nodejs-version-compatibility&quot;&gt;Node.js version compatibility&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#official-companion-guide&quot;&gt;Official companion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#merchandise&quot;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#donations&quot;&gt;Donations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can find some less common installation variations in &lt;a href=&quot;https://pwning.owasp-juice.shop/part1/running.html&quot;&gt;the &lt;em&gt;Running OWASP Juice Shop&lt;/em&gt; documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Deploy on Heroku (free ($0/month) dyno)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://signup.heroku.com/&quot;&gt;Sign up to Heroku&lt;/a&gt; and &lt;a href=&quot;https://id.heroku.com/login&quot;&gt;log in to your account&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click the button below and follow the instructions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to get a running instance of Juice Shop! If you have forked this repository, the deploy button will automatically pick up your fork for deployment! As long as you do not perform any DDoS attacks you are free to use any tools or scripts to hack your Juice Shop instance on Heroku!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;From Sources&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/repo-size/bkimminich/juice-shop.svg&quot; alt=&quot;GitHub repo size&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#nodejs-version-compatibility&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;git clone https://github.com/bkimminich/juice-shop.git&lt;/code&gt; (or clone &lt;a href=&quot;https://github.com/bkimminich/juice-shop/fork&quot;&gt;your own fork&lt;/a&gt; of the repository)&lt;/li&gt; 
 &lt;li&gt;Go into the cloned folder with &lt;code&gt;cd juice-shop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; (only has to be done before first start or when you change the source code)&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Browse to &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Packaged Distributions&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bkimminich/juice-shop/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/bkimminich/juice-shop/total.svg&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sourceforge.net/projects/juice-shop/&quot;&gt;&lt;img src=&quot;https://img.shields.io/sourceforge/dm/juice-shop?label=sourceforge%20downloads&quot; alt=&quot;SourceForge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sourceforge.net/projects/juice-shop/&quot;&gt;&lt;img src=&quot;https://img.shields.io/sourceforge/dt/juice-shop?label=sourceforge%20downloads&quot; alt=&quot;SourceForge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install a 64bit &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#nodejs-version-compatibility&quot;&gt;node.js&lt;/a&gt; on your Windows, MacOS or Linux machine&lt;/li&gt; 
 &lt;li&gt;Download &lt;code&gt;juice-shop-&amp;lt;version&amp;gt;_&amp;lt;node-version&amp;gt;_&amp;lt;os&amp;gt;_x64.zip&lt;/code&gt; (or &lt;code&gt;.tgz&lt;/code&gt;) attached to &lt;a href=&quot;https://github.com/bkimminich/juice-shop/releases/latest&quot;&gt;latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Unpack and &lt;code&gt;cd&lt;/code&gt; into the unpacked folder&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Browse to &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Each packaged distribution includes some binaries for &lt;code&gt;sqlite3&lt;/code&gt; and &lt;code&gt;libxmljs&lt;/code&gt; bound to the OS and node.js version which &lt;code&gt;npm install&lt;/code&gt; was executed on.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker Container&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/bkimminich/juice-shop&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/bkimminich/juice-shop.svg&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/docker/stars/bkimminich/juice-shop.svg&quot; alt=&quot;Docker Stars&quot;&gt; &lt;a href=&quot;https://microbadger.com/images/bkimminich/juice-shop&quot; title=&quot;Get your own image badge on microbadger.com&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/image/bkimminich/juice-shop.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://microbadger.com/images/bkimminich/juice-shop&quot; title=&quot;Get your own version badge on microbadger.com&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/version/bkimminich/juice-shop.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;docker pull bkimminich/juice-shop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;docker run --rm -p 3000:3000 bkimminich/juice-shop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Browse to &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; (on macOS and Windows browse to &lt;a href=&quot;http://192.168.99.100:3000&quot;&gt;http://192.168.99.100:3000&lt;/a&gt; if you are using docker-machine instead of the native docker installation)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Vagrant&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt; and &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;Virtualbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;git clone https://github.com/bkimminich/juice-shop.git&lt;/code&gt; (or clone &lt;a href=&quot;https://github.com/bkimminich/juice-shop/fork&quot;&gt;your own fork&lt;/a&gt; of the repository)&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;cd vagrant &amp;amp;&amp;amp; vagrant up&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Browse to &lt;a href=&quot;http://192.168.33.10:3000&quot;&gt;192.168.33.10:3000&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Amazon EC2 Instance&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;In the &lt;em&gt;EC2&lt;/em&gt; sidenav select &lt;em&gt;Instances&lt;/em&gt; and click &lt;em&gt;Launch Instance&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;In &lt;em&gt;Step 1: Choose an Amazon Machine Image (AMI)&lt;/em&gt; choose an &lt;em&gt;Amazon Linux AMI&lt;/em&gt; or &lt;em&gt;Amazon Linux 2 AMI&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;In &lt;em&gt;Step 3: Configure Instance Details&lt;/em&gt; unfold &lt;em&gt;Advanced Details&lt;/em&gt; and copy the script below into &lt;em&gt;User Data&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;In &lt;em&gt;Step 6: Configure Security Group&lt;/em&gt; add a &lt;em&gt;Rule&lt;/em&gt; that opens port 80 for HTTP&lt;/li&gt; 
 &lt;li&gt;Launch your instance&lt;/li&gt; 
 &lt;li&gt;Browse to your instance&#39;s public DNS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;#!/bin/bash
yum update -y
yum install -y docker
service docker start
docker pull bkimminich/juice-shop
docker run -d -p 80:3000 bkimminich/juice-shop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Azure Container Instance&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open and login (via &lt;code&gt;az login&lt;/code&gt;) to your &lt;a href=&quot;https://azure.github.io/projects/clis/&quot;&gt;Azure CLI&lt;/a&gt; &lt;strong&gt;or&lt;/strong&gt; login to the &lt;a href=&quot;https://portal.azure.com&quot;&gt;Azure Portal&lt;/a&gt;, open the &lt;em&gt;CloudShell&lt;/em&gt; and then choose &lt;em&gt;Bash&lt;/em&gt; (not PowerShell).&lt;/li&gt; 
 &lt;li&gt;Create a resource group by running &lt;code&gt;az group create --name &amp;lt;group name&amp;gt; --location &amp;lt;location name, e.g. &quot;centralus&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create a new container by running &lt;code&gt;az container create --resource-group &amp;lt;group name&amp;gt; --name &amp;lt;container name&amp;gt; --image bkimminich/juice-shop --dns-name-label &amp;lt;dns name label&amp;gt; --ports 3000 --ip-address public&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Your container will be available at &lt;code&gt;http://&amp;lt;dns name label&amp;gt;.&amp;lt;location name&amp;gt;.azurecontainer.io:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Google Compute Engine Instance&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Login to the Google Cloud Console and &lt;a href=&quot;https://console.cloud.google.com/home/dashboard?cloudshell=true&quot;&gt;open Cloud Shell&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Launch a new GCE instance based on the juice-shop container. Take note of the &lt;code&gt;EXTERNAL_IP&lt;/code&gt; provided in the output.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;gcloud compute instances create-with-container owasp-juice-shop-app --container-image bkimminich/juice-shop
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Create a firewall rule that allows inbound traffic to port 3000&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;gcloud compute firewall-rules create juice-rule --allow tcp:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Your container is now running and available at &lt;code&gt;http://&amp;lt;EXTERNAL_IP&amp;gt;:3000/&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Feel free to have a look at the latest version of OWASP Juice Shop: &lt;a href=&quot;http://demo.owasp-juice.shop&quot;&gt;http://demo.owasp-juice.shop&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is a deployment-test and sneak-peek instance only! You are &lt;strong&gt;not supposed&lt;/strong&gt; to use this instance for your own hacking endeavours! No guaranteed uptime! Guaranteed stern looks if you break it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h3&gt;Node.js version compatibility&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/cpu/bkimminich/juice-shop&quot; alt=&quot;GitHub package.json dynamic&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/package-json/os/bkimminich/juice-shop&quot; alt=&quot;GitHub package.json dynamic&quot;&gt;&lt;/p&gt; 
&lt;p&gt;OWASP Juice Shop officially supports the following versions of &lt;a href=&quot;http://nodejs.org&quot;&gt;node.js&lt;/a&gt; in line with the official &lt;a href=&quot;https://github.com/nodejs/LTS&quot;&gt;node.js LTS schedule&lt;/a&gt; as close as possible. Docker images and packaged distributions are offered accordingly.&lt;/p&gt; 
&lt;p&gt;| node.js | Supported | Tested | &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#packaged-distributions&quot;&gt;Packaged Distributions&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#docker-container&quot;&gt;Docker images&lt;/a&gt; from &lt;code&gt;master&lt;/code&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/#docker-container&quot;&gt;Docker images&lt;/a&gt; from &lt;code&gt;develop&lt;/code&gt; | |:--------|:---------------------|:-------------------|:--------------------------------------------------|:--------------------------------------------------------|:----------------------------------------------------------| | 15.x | :x: | :x: | | | | | 14.x | :heavy_check_mark: | :heavy_check_mark: | Windows (&lt;code&gt;x64&lt;/code&gt;), MacOS (&lt;code&gt;x64&lt;/code&gt;), Linux (&lt;code&gt;x64&lt;/code&gt;) | | | | 13.x | (:heavy_check_mark:) | :x: | | | | | 12.x | :heavy_check_mark: | :heavy_check_mark: | Windows (&lt;code&gt;x64&lt;/code&gt;), MacOS (&lt;code&gt;x64&lt;/code&gt;), Linux (&lt;code&gt;x64&lt;/code&gt;) | &lt;code&gt;latest&lt;/code&gt; (&lt;code&gt;linux/amd64&lt;/code&gt;, &lt;code&gt;linux/arm/v7&lt;/code&gt;, &lt;code&gt;linux/arm64&lt;/code&gt;) | &lt;code&gt;snapshot&lt;/code&gt; (&lt;code&gt;linux/amd64&lt;/code&gt;, &lt;code&gt;linux/arm/v7&lt;/code&gt;, &lt;code&gt;linux/arm64&lt;/code&gt;) | | 11.x | (:heavy_check_mark:) | :x: | | | | | 10.x | :heavy_check_mark: | :heavy_check_mark: | Windows (&lt;code&gt;x64&lt;/code&gt;), MacOS (&lt;code&gt;x64&lt;/code&gt;), Linux (&lt;code&gt;x64&lt;/code&gt;) | | | | &amp;lt;10.x | :x: | :x: | | | |&lt;/p&gt; 
&lt;p&gt;Juice Shop is automatically tested &lt;em&gt;only on the latest &lt;code&gt;.x&lt;/code&gt; minor version&lt;/em&gt; of each node.js version mentioned above! There is no guarantee that older minor node.js releases will always work with Juice Shop! Please make sure you stay up to date with your chosen version.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/bkimminich/juice-shop&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/gitter-join%20chat-1dce73.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you need help with the application setup please check our &lt;a href=&quot;https://pwning.owasp-juice.shop/appendix/troubleshooting.html&quot;&gt;our existing &lt;em&gt;Troubleshooting&lt;/em&gt;&lt;/a&gt; guide. If this does not solve your issue please post your specific problem or question in the &lt;a href=&quot;https://gitter.im/bkimminich/juice-shop&quot;&gt;Gitter Chat&lt;/a&gt; where community members can best try to help you.&lt;/p&gt; 
&lt;p&gt;:stop_sign: &lt;strong&gt;Please avoid opening GitHub issues for support requests or questions!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Official companion guide&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/review/edit/47129532&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/goodreads-write%20review-47129532.svg&quot; alt=&quot;Write Goodreads Review&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OWASP Juice Shop comes with an official companion guide eBook. It will give you a complete overview of all vulnerabilities found in the application including hints how to spot and exploit them. In the appendix you will even find complete step-by-step solutions to every challenge. Extensive documentation of &lt;a href=&quot;https://pwning.owasp-juice.shop/part1/customization.html&quot;&gt;custom re-branding&lt;/a&gt;, &lt;a href=&quot;https://pwning.owasp-juice.shop/part1/ctf.html&quot;&gt;CTF-support&lt;/a&gt;, &lt;a href=&quot;https://pwning.owasp-juice.shop/appendix/trainers.html&quot;&gt;trainer&#39;s guide&lt;/a&gt; and much more is also included.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/juice-shop&quot;&gt;Pwning OWASP Juice Shop&lt;/a&gt; is published under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;CC BY-NC-ND 4.0&lt;/a&gt; and is available &lt;strong&gt;for free&lt;/strong&gt; in PDF, Kindle and ePub format on LeanPub. You can also &lt;a href=&quot;https://pwning.owasp-juice.shop&quot;&gt;browse the full content online&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/juice-shop&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bkimminich/pwning-juice-shop/master/cover_small.jpg&quot; alt=&quot;Pwning OWASP Juice Shop Cover&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bkimminich/juice-shop/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/bkimminich/juice-shop.svg&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standard-brightgreen.svg&quot; alt=&quot;JavaScript Style Guide&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/owasp-juice-shop&quot;&gt;&lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/owasp-juice-shop/localized.svg&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/issues/bkimminich/juice-shop/help%20wanted.svg&quot; alt=&quot;GitHub issues by-label&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/issues/bkimminich/juice-shop/good%20first%20issue.svg&quot; alt=&quot;GitHub issues by-label&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We are always happy to get new contributors on board! Please check &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; to learn how to &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/CONTRIBUTING.md#code-contributions&quot;&gt;contribute to our codebase&lt;/a&gt; or the &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/CONTRIBUTING.md#i18n-contributions&quot;&gt;translation into different languages&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;Did you write a blog post, magazine article or do a podcast about or mentioning OWASP Juice Shop? Or maybe you held or joined a conference talk or meetup session, a hacking workshop or public training where this project was mentioned?&lt;/p&gt; 
&lt;p&gt;Add it to our ever-growing list of &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/REFERENCES.md&quot;&gt;REFERENCES.md&lt;/a&gt; by forking and opening a Pull Request!&lt;/p&gt; 
&lt;h2&gt;Merchandise&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;On &lt;a href=&quot;http://shop.spreadshirt.com/juiceshop&quot;&gt;Spreadshirt.com&lt;/a&gt; and &lt;a href=&quot;http://shop.spreadshirt.de/juiceshop&quot;&gt;Spreadshirt.de&lt;/a&gt; you can get some swag (Shirts, Hoodies, Mugs) with the official OWASP Juice Shop logo&lt;/li&gt; 
 &lt;li&gt;On &lt;a href=&quot;https://www.stickeryou.com/products/owasp-juice-shop/794&quot;&gt;StickerYou.com&lt;/a&gt; you can get variants of the OWASP Juice Shop logo as single stickers to decorate your laptop with. They can also print magnets, iron-ons, sticker sheets and temporary tattoos.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The most honorable way to get some stickers is to &lt;a href=&quot;https://pwning.owasp-juice.shop/part3/contribution.html&quot;&gt;contribute to the project&lt;/a&gt; by fixing an issue, finding a serious bug or submitting a good idea for a new challenge!&lt;/p&gt; 
&lt;p&gt;We&#39;re also happy to supply you with stickers if you organize a meetup or conference talk where you use or talk about or hack the OWASP Juice Shop! Just &lt;a href=&quot;mailto:owasp_juice_shop_project@lists.owasp.org&quot;&gt;contact the mailing list&lt;/a&gt; or &lt;a href=&quot;mailto:bjoern.kimminich@owasp.org&quot;&gt;the project leader&lt;/a&gt; to discuss your plans!&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://owasp.org/donate/?reponame=www-project-juice-shop&amp;amp;title=OWASP+Juice+Shop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-owasp%20juice%20shop-blue&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OWASP Foundation gratefully accepts donations via Stripe. Projects such as Juice Shop can then request reimbursement for expenses from the Foundation. If you&#39;d like to express your support of the Juice Shop project, please make sure to tick the &quot;Publicly list me as a supporter of OWASP Juice Shop&quot; checkbox on the donation form. You can find our more about donations and how they are used here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://pwning.owasp-juice.shop/part3/donations.html&quot;&gt;https://pwning.owasp-juice.shop/part3/donations.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;The OWASP Juice Shop core project team are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bkimminich&quot;&gt;Björn Kimminich&lt;/a&gt; aka &lt;code&gt;bkimminich&lt;/code&gt; (&lt;a href=&quot;https://www.owasp.org/index.php/Projects/Project_Leader_Responsibilities&quot;&gt;Project Leader&lt;/a&gt;) &lt;a href=&quot;https://keybase.io/bkimminich&quot;&gt;&lt;img src=&quot;https://img.shields.io/keybase/pgp/bkimminich&quot; alt=&quot;Keybase PGP&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/J12934&quot;&gt;Jannik Hollenbach&lt;/a&gt; aka &lt;code&gt;J12934&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wurstbrot&quot;&gt;Timo Pagel&lt;/a&gt; aka &lt;code&gt;wurstbrot&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a list of all contributors to the OWASP Juice Shop please visit our &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/HALL_OF_FAME.md&quot;&gt;HALL_OF_FAME.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/bkimminich/juice-shop.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;. OWASP Juice Shop and any contributions are Copyright © by Bjoern Kimminich 2014-2021.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bkimminich/juice-shop/master/frontend/src/assets/public/images/JuiceShop_Logo_400px.png&quot; alt=&quot;Juice Shop Logo&quot;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
