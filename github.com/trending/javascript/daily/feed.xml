<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 20 Dec 2020 01:48:28 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>dompling/Scriptable</title>
      <link>https://github.com/dompling/Scriptable</link>
      <description>&lt;p&gt;scriptable widget&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scriptable &lt;a href=&quot;https://t.me/Scriptable_JS&quot;&gt;Tg电报群&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;首先安装 TF版的 &lt;a href=&quot;https://testflight.apple.com/join/uN1vTqxk&quot;&gt;scriptable&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;单个安装：（推荐：⭐️⭐️⭐️⭐️⭐️）&lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/widget.Install.js&quot;&gt;widget.Install&lt;/a&gt; 安装导入到 scriptable，添加订阅，然后选择即可获取安装列表（覆盖当前下载文件）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;全量安装：（推荐：⭐️⭐️⭐️️）&lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/2YaInstall.js&quot;&gt;2YaInstall&lt;/a&gt; 导入到 scriptable 软件中，点击运行即可(覆盖被修改的同名文件)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;收集订阅：（使用 &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/widget.Install.js&quot;&gt;widget.Install&lt;/a&gt;添加下方链接即可获取作者小组件）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;作者：
   &lt;!-- raw HTML omitted --&gt;@2Ya - 订阅安装包
   &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;作者： 
   &lt;!-- raw HTML omitted --&gt;@2214962083 - 订阅安装包
   &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;BoxJs 简单说明可看作者&lt;a href=&quot;https://github.com/chavyleung/scripts/&quot;&gt;BoxJs 仓库地址&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;BoxJS 数据，是根据 圈 X，Loon , Surge 做的代理功能，教程如下地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://chavyleung.gitbook.io/boxjs/&quot;&gt;BoxJs 使用教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://youtu.be/eIpBrRxiy0w&quot;&gt;BoxJs 教程视频&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;组件列表&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;特别说明：关于京东的小组件都支持多账号，但是必须用代理脚本去抓取 ck，通过选择设置下标的方式来切换多个账号。&lt;a href=&quot;https://raw.githubusercontent.com/dompling/Script/master/jd/JD_extra_cookie.js&quot;&gt;京东 Cookie&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 名称 | 说明 | 备注 | | ----------------------------- | ---------- | --------------------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/Birthday.js&quot;&gt;破壳日&lt;/a&gt; | BoxJs 数据 | | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/HistoryToday.js&quot;&gt;历史上的今天&lt;/a&gt; | | | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/JDDou.js&quot;&gt;京东豆收支明细&lt;/a&gt; | BoxJs 数据 | parameter: 0 京东 ck 下标 ,也可根据 APP 提示自行选择 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/JDDouK.js&quot;&gt;京东豆收支 K 线图&lt;/a&gt; | BoxJs 数据 | parameter: 0 京东 ck 下标 ,也可根据 APP 提示自行选择 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/JDWuLiu.js&quot;&gt;京东商品物流&lt;/a&gt; | BoxJs 数据 | parameter: 0 京东 ck 下标 ,也可根据 APP 提示自行选择 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/BiliBili.js&quot;&gt;哔哩哔哩今日番剧&lt;/a&gt; | | | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/BiliBiliWatch.js&quot;&gt;哔哩哔哩关注消息&lt;/a&gt; | BoxJs 数据 | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Script/master/BiliBili/bilibili.cookie.js&quot;&gt;哔哩哔哩 CK&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/BiliBiliUp.js&quot;&gt;哔哩哔哩 UP 主&lt;/a&gt; | | parameter:50952087 ,（mid:50952087）获取方式，打开 B 站Up主个人空间，复制地址的数字。如&lt;a href=&quot;https://space.bilibili.com/50952087/&quot;&gt;https://space.bilibili.com/50952087/&lt;/a&gt;的 mid 为 &#39;50952087&#39; | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/ZXTrains.js&quot;&gt;智联火车票提醒&lt;/a&gt; | BoxJs 数据，请根据教程来使用 | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Script/master/ZXTrians/ZXTrains.js&quot;&gt;购买火车票重写教程&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/Health.js&quot;&gt;健康步数&lt;/a&gt; | 需要配合&lt;a href=&quot;https://www.icloud.com/shortcuts/beb65db5ea0a474abe7ff080410b9ddf&quot;&gt;健康数据&lt;/a&gt;捷径进行使用 | 捷径运行之后自动生成数据 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/Contact.js&quot;&gt;桌面联系人&lt;/a&gt; | 显示桌面联系人 | parameter：YaYa (输入相应的手机联系人的名字，会自动关联搜索通讯录，可以是姓，可以是名字，可以是姓+名字 ) | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/Telegram.js&quot;&gt;Telegram&lt;/a&gt; | 显示桌面订阅 | parameter： Durov (输入相应的电报名) | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/YouTube.js&quot;&gt;YouTube&lt;/a&gt; | 显示桌面订阅 | parameter： Durov (输入相应的油管作者名,若不显示输入作者订阅地址再试) | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/ChinaTelecom.js&quot;&gt;中国电信&lt;/a&gt; | BoxJs 数据 | 本组件读取 boxjs 缓存，其他用户请自行抓取 authToken，Cookie | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/ChinaMobile.js&quot;&gt;中国移动&lt;/a&gt; | BoxJs 数据 | 本组件读取 boxjs 缓存，其他用户请自行抓取 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/VpnBoard.js&quot;&gt;机场+签到&lt;/a&gt; | 手动新增账号 | parameter：下标 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/VPNBoardPress.js&quot;&gt;机场+签到 第二版&lt;/a&gt; | 手动新增账号 | parameter：下标 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/VPNSubscription.js&quot;&gt;机场订阅流量&lt;/a&gt; | 手动新增账号 | parameter：下标 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/VPNV2Bord.js&quot;&gt;v2board机场模板&lt;/a&gt; | 手动新增账号 | parameter：下标 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/Scriptable/master/Scripts/PoisonCalendar.js&quot;&gt;毒汤日历&lt;/a&gt; | BoxJS数据 |&lt;a href=&quot;https://raw.githubusercontent.com/dompling/Script/master/DJT/djt.cookie.js&quot;&gt;cookie 获取方式&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/scriptableTsx/master/scripts/COVID-19.js&quot;&gt;疫情日报&lt;/a&gt; | 地区拼音，cd|xian 般城市直接首字母，可能不显示的时候试试全部拼音 | | &lt;a href=&quot;https://raw.githubusercontent.com/dompling/scriptableTsx/master/scripts/TodayOilPrice.js&quot;&gt;今日油价&lt;/a&gt; | BoxJS数据 | 自行申请腾讯地图的 token，以显示附近加油站 |&lt;/p&gt; 
&lt;h1&gt;赞赏码&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;特别感谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GideonSenku&quot;&gt;@GideonSenku&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lxk0301&quot;&gt;@lxk0301&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://t.me/HellCellZC123&quot;&gt;@『Hell Cell』&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/58xinian&quot;&gt;@xinian&lt;/a&gt; 提供 UI 帮助&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>video-dev/hls.js</title>
      <link>https://github.com/video-dev/hls.js</link>
      <description>&lt;p&gt;JavaScript HLS client using Media Source Extension&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/hls.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/hls.js.svg?style=flat&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/hls.js/v/alpha&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/hls.js/alpha.svg?style=flat&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/hls.js&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/hls.js/badge?style=rounded&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.saucelabs.com/u/robwalch&quot;&gt;&lt;img src=&quot;https://saucelabs.com/buildstatus/robwalch&quot; alt=&quot;Sauce Test Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com&quot;&gt;&lt;img src=&quot;https://www.netlify.com/img/global/badges/netlify-color-accent.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the discussion via &lt;a href=&quot;https://video-dev.org&quot;&gt;video-dev.org&lt;/a&gt; in #hlsjs (our Slack channel)&lt;/p&gt; 
&lt;h1&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/616833/19739063/e10be95a-9bb9-11e6-8100-2896f8500138.png&quot; alt=&quot;hls.js&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;hls.js is a JavaScript library which implements an &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_Live_Streaming&quot;&gt;HTTP Live Streaming&lt;/a&gt; client. It relies on &lt;a href=&quot;https://www.html5rocks.com/en/tutorials/video/basics/&quot;&gt;HTML5 video&lt;/a&gt; and &lt;a href=&quot;https://w3c.github.io/media-source/&quot;&gt;MediaSource Extensions&lt;/a&gt; for playback.&lt;/p&gt; 
&lt;p&gt;It works by transmuxing MPEG-2 Transport Stream and AAC/MP3 streams into ISO BMFF (MP4) fragments. This transmuxing could be performed asynchronously using &lt;a href=&quot;https://caniuse.com/#search=worker&quot;&gt;Web Worker&lt;/a&gt; if available in the browser. hls.js also supports HLS + fmp4, as announced during &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/504/&quot;&gt;WWDC2016&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;hls.js does not need any player, it works directly on top of a standard HTML&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;element.&lt;/p&gt; 
&lt;p&gt;hls.js is written in &lt;a href=&quot;https://github.com/ericdouglas/ES6-Learning#articles--tutorials&quot;&gt;ECMAScript6&lt;/a&gt; (&lt;code&gt;*.js&lt;/code&gt;) and &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; (&lt;code&gt;*.ts&lt;/code&gt;) (strongly typed superset of ES6), and transpiled in ECMAScript5 using the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;TypeScript compiler&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Modules written in TS and plain JS/ES6 can be interdependent and imported/required by each other.&lt;/p&gt; 
&lt;p&gt;To build our distro bundle and serve our development environment we use &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API docs and usage guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/video-dev/hls.js/master/docs/API.md&quot;&gt;API and usage docs, with code examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://hls-js.netlify.com/api-docs&quot;&gt;Auto-Generated Docs (Latest Release)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://hls-js-dev.netlify.com/api-docs&quot;&gt;Auto-Generated Docs (Master)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note you can access the docs for a particular version using &quot;&lt;a href=&quot;https://github.com/video-dev/hls.js/blob/deployments/README.md&quot;&gt;https://github.com/video-dev/hls.js/blob/deployments/README.md&lt;/a&gt;&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;h3&gt;Latest Release&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hls-js.netlify.com/demo&quot;&gt;https://hls-js.netlify.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Master&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hls-js-dev.netlify.com/demo&quot;&gt;https://hls-js-dev.netlify.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Specific Version&lt;/h3&gt; 
&lt;p&gt;Find the commit on &lt;a href=&quot;https://github.com/video-dev/hls.js/blob/deployments/README.md&quot;&gt;https://github.com/video-dev/hls.js/blob/deployments/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- Or if you want a more recent alpha version --&amp;gt;
&amp;lt;!-- &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@alpha&quot;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;
&amp;lt;video id=&quot;video&quot;&amp;gt;&amp;lt;/video&amp;gt;
&amp;lt;script&amp;gt;
  var video = document.getElementById(&#39;video&#39;);
  var videoSrc = &#39;https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8&#39;;
  if (Hls.isSupported()) {
    var hls = new Hls();
    hls.loadSource(videoSrc);
    hls.attachMedia(video);
  }
  // hls.js is not supported on platforms that do not have Media Source
  // Extensions (MSE) enabled.
  //
  // When the browser has built-in HLS support (check using `canPlayType`),
  // we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video
  // element through the `src` property. This is using the built-in support
  // of the plain video element, without using hls.js.
  //
  // Note: it would be more normal to wait on the &#39;canplay&#39; event below however
  // on Safari (where you are most likely to find built-in HLS support) the
  // video.src URL must be on the user-driven white-list before a &#39;canplay&#39;
  // event will be emitted; the last video event that can be reliably
  // listened-for when the URL is not on the white-list is &#39;loadedmetadata&#39;.
  else if (video.canPlayType(&#39;application/vnd.apple.mpegurl&#39;)) {
    video.src = videoSrc;
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Alternative setup&lt;/h4&gt; 
&lt;p&gt;Note that the example code above will check for hls.js support &lt;em&gt;first&lt;/em&gt; and then fallback to check if the browser natively supports HLS. If you want to check for native browser support first, and then fallback to Hls.js you will want to swap those conditionals.&lt;/p&gt; 
&lt;p&gt;The order of these checks depends on if you want to use hls.js whenever possible see &lt;a href=&quot;https://github.com/video-dev/hls.js/pull/2954#issuecomment-670021358&quot;&gt;this comment&lt;/a&gt; to understand some of the tradeoffs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- Or if you want a more recent alpha version --&amp;gt;
&amp;lt;!-- &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@alpha&quot;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;
&amp;lt;video id=&quot;video&quot;&amp;gt;&amp;lt;/video&amp;gt;
&amp;lt;script&amp;gt;
  var video = document.getElementById(&#39;video&#39;);
  var videoSrc = &#39;https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8&#39;;
  //
  // First check for native browser HLS support
  //
  if (video.canPlayType(&#39;application/vnd.apple.mpegurl&#39;)) {
    video.src = videoSrc;
  //
  // If no native HLS support, check if hls.js is supported
  //
  } else if (Hls.isSupported()) {
    var hls = new Hls();
    hls.loadSource(videoSrc);
    hls.attachMedia(video);
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Video Control&lt;/h2&gt; 
&lt;p&gt;Video is controlled through HTML &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;p&gt;HTMLVideoElement control and events could be used seamlessly.&lt;/p&gt; 
&lt;h2&gt;They use hls.js in production!&lt;/h2&gt; 
&lt;p&gt;|&lt;a href=&quot;https://www.adultswim.com/streams&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.akamai.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.canalplus.fr&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.dailymotion.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |---|---|---|---| |&lt;a href=&quot;https://freshlive.tv&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://flowplayer.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.foxsports.com.au&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.globo.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://gunosy.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.gl-systemhaus.de/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://nettrek.de&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.nytimes.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://www.peer5.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.qbrick.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.radiantmediaplayer.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.rts.ch&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://www.snapstream.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.streamamg.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://streamshark.io/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://my.tablotv.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://www.streamroot.io/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.ted.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://twitter.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.clevercast.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://www.viacom.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://vk.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.jwplayer.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.france.tv&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| |&lt;a href=&quot;https://tech.showmax.com&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://www.1tv.ru/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://www.zdf.de&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/cdnbye/hlsjs-p2p-engine&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| | |&lt;a href=&quot;https://streaming.cdn77.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;| &lt;a href=&quot;https://r7.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://github.com/Novage/p2p-media-loader&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;|&lt;a href=&quot;https://kayosports.com.au&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://flosports.tv&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Player Integration&lt;/h2&gt; 
&lt;p&gt;hls.js is (being) integrated in the following players:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.akamai.com/us/en/solutions/products/media-delivery/adaptive-media-player.jsp&quot;&gt;Akamai Adaptive Media Player (AMP)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clappr/clappr&quot;&gt;Clappr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flowplayer.org&quot;&gt;Flowplayer&lt;/a&gt; through &lt;a href=&quot;https://github.com/flowplayer/flowplayer-hlsjs&quot;&gt;flowplayer-hlsjs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mediaelementjs.com&quot;&gt;MediaElement.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://videojs.com&quot;&gt;Videojs&lt;/a&gt; through &lt;a href=&quot;https://github.com/benjipott/videojs-hlsjs&quot;&gt;Videojs-hlsjs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://videojs.com&quot;&gt;Videojs&lt;/a&gt; through &lt;a href=&quot;https://github.com/streamroot/videojs-hls.js&quot;&gt;videojs-hls.js&lt;/a&gt;. hls.js is integrated as a SourceHandler -- new feature in Video.js 5.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://videojs.com&quot;&gt;Videojs&lt;/a&gt; through &lt;a href=&quot;https://github.com/Peer5/videojs-contrib-hls.js&quot;&gt;videojs-contrib-hls.js&lt;/a&gt;. Production ready plug-in with full fallback compatibility built-in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fluidplayer.com&quot;&gt;Fluid Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openplayerjs.com&quot;&gt;OpenPlayerJS&lt;/a&gt;, as part of the &lt;a href=&quot;https://github.com/openplayerjs&quot;&gt;OpenPlayer project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cdnbye/hlsjs-p2p-engine&quot;&gt;CDNBye&lt;/a&gt;, a p2p engine for hls.js powered by WebRTC Datachannel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chrome/Firefox integration&lt;/h2&gt; 
&lt;p&gt;made by &lt;a href=&quot;https://github.com/gramk/chrome-hls&quot;&gt;gramk&lt;/a&gt;, plays hls from address bar and m3u8 links&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome &lt;a href=&quot;https://chrome.google.com/webstore/detail/native-hls-playback/emnphkkblegpebimobpbekeedfgemhof&quot;&gt;native-hls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Firefox &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/native_hls_playback/&quot;&gt;native-hls&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;No external JS libs are needed. Prepackaged build is included &lt;a href=&quot;https://github.com/video-dev/hls.js/releases&quot;&gt;with the releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to bundle the application yourself, use node&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install hls.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or for the version from master (alpha)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install hls.js@alpha
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;hls.light.*.js&lt;/code&gt; dist files do not include subtitling and alternate-audio features.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Either directly include dist/hls.js or dist/hls.min.js&lt;/p&gt; 
&lt;p&gt;Or type&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install --save hls.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally there is a declaration file available to help with code completion and hinting within your IDE for the hls.js api&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install --save-dev @types/hls.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;hls.js is compatible with browsers supporting MediaSource extensions (MSE) API with &#39;video/MP4&#39; mimetypes inputs.&lt;/p&gt; 
&lt;p&gt;Find a support matrix of the MediaSource API here: https://developer.mozilla.org/en-US/docs/Web/API/MediaSource&lt;/p&gt; 
&lt;p&gt;As of today, it is supported on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome for Android 34+&lt;/li&gt; 
 &lt;li&gt;Chrome for Desktop 34+&lt;/li&gt; 
 &lt;li&gt;Firefox for Android 41+&lt;/li&gt; 
 &lt;li&gt;Firefox for Desktop 42+&lt;/li&gt; 
 &lt;li&gt;IE11+ for Windows 8.1+&lt;/li&gt; 
 &lt;li&gt;Edge for Windows 10+&lt;/li&gt; 
 &lt;li&gt;Opera for Desktop&lt;/li&gt; 
 &lt;li&gt;Vivaldi for Desktop&lt;/li&gt; 
 &lt;li&gt;Safari for Mac 8+ (beta)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please note: iOS Safari &quot;Mobile&quot; does not support the MediaSource API. Safari browsers have however built-in HLS support through the plain video &quot;tag&quot; source URL. See the example above (Getting Started) to run appropriate feature detection and choose between using Hls.js or natively built-in HLS support.&lt;/p&gt; 
&lt;p&gt;When a platform has neither MediaSource nor native HLS support, you will not be able to play HLS.&lt;/p&gt; 
&lt;h3&gt;Server-side-rendering (SSR) and &lt;code&gt;require&lt;/code&gt; from a Node.js runtime&lt;/h3&gt; 
&lt;p&gt;We support this now. You can safely require this library in Node and absolutely nothing will happen :) See https://github.com/video-dev/hls.js/pull/1841&lt;/p&gt; 
&lt;p&gt;(This is also known as &quot;Universal builds&quot; and &quot;isomorphic apps&quot;)&lt;/p&gt; 
&lt;h2&gt;CORS&lt;/h2&gt; 
&lt;p&gt;All HLS resources must be delivered with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;CORS headers&lt;/a&gt; permitting &lt;code&gt;GET&lt;/code&gt; requests.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;VoD &amp;amp; Live playlists 
  &lt;ul&gt; 
   &lt;li&gt;DVR support on Live playlists&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;fragmented MP4 container (beta)&lt;/li&gt; 
 &lt;li&gt;MPEG-2 TS container 
  &lt;ul&gt; 
   &lt;li&gt;ITU-T Rec. H.264 and ISO/IEC 14496-10 Elementary Stream&lt;/li&gt; 
   &lt;li&gt;ISO/IEC 13818-7 ADTS AAC Elementary Stream&lt;/li&gt; 
   &lt;li&gt;ISO/IEC 11172-3 / ISO/IEC 13818-3 (MPEG-1/2 Audio Layer III) Elementary Stream&lt;/li&gt; 
   &lt;li&gt;Packetized metadata (ID3v2.3.0) Elementary Stream&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;AAC container (audio only streams)&lt;/li&gt; 
 &lt;li&gt;MPEG Audio container (MPEG-1/2 Audio Layer III audio only streams)&lt;/li&gt; 
 &lt;li&gt;Timed Metadata for HTTP Live Streaming (in ID3 format, carried in MPEG-2 TS)&lt;/li&gt; 
 &lt;li&gt;AES-128 decryption&lt;/li&gt; 
 &lt;li&gt;SAMPLE-AES decryption (only supported if using MPEG-2 TS container)&lt;/li&gt; 
 &lt;li&gt;Encrypted media extensions (EME) support for DRM (digital rights management) 
  &lt;ul&gt; 
   &lt;li&gt;Widevine CDM (beta/experimental) (see Shaka-package test-stream in demo)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CEA-608/708 captions&lt;/li&gt; 
 &lt;li&gt;WebVTT subtitles&lt;/li&gt; 
 &lt;li&gt;Alternate Audio Track Rendition (Master Playlist with alternative Audio) for VoD and Live playlists&lt;/li&gt; 
 &lt;li&gt;Adaptive streaming 
  &lt;ul&gt; 
   &lt;li&gt;Manual &amp;amp; Auto Quality Switching 
    &lt;ul&gt; 
     &lt;li&gt;3 Quality Switching modes are available (controllable through API means) 
      &lt;ul&gt; 
       &lt;li&gt;Instant switching (immediate quality switch at current video position)&lt;/li&gt; 
       &lt;li&gt;Smooth switching (quality switch for next loaded fragment)&lt;/li&gt; 
       &lt;li&gt;Bandwidth conservative switching (quality switch change for next loaded fragment, without flushing the buffer)&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;In Auto-Quality mode, emergency switch down in case bandwidth is suddenly dropping to minimize buffering.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Accurate Seeking on VoD &amp;amp; Live (not limited to fragment or keyframe boundary)&lt;/li&gt; 
 &lt;li&gt;Ability to seek in buffer and back buffer without redownloading segments&lt;/li&gt; 
 &lt;li&gt;Built-in Analytics 
  &lt;ul&gt; 
   &lt;li&gt;Every internal events could be monitored (Network Events,Video Events)&lt;/li&gt; 
   &lt;li&gt;Playback session metrics are also exposed&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Resilience to errors 
  &lt;ul&gt; 
   &lt;li&gt;Retry mechanism embedded in the library&lt;/li&gt; 
   &lt;li&gt;Recovery actions could be triggered fix fatal media or network errors&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/StreamingMediaGuide/UsingHTTPLiveStreaming/UsingHTTPLiveStreaming.html#//apple_ref/doc/uid/TP40008332-CH102-SW22&quot;&gt;Redundant/Failover Playlists&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Not Supported (Yet)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MP3 Elementary Stream in Edge for Windows 10+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported M3U8 tags&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;#EXTM3U&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXTINF&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-STREAM-INF&lt;/code&gt; (adaptive streaming)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-ENDLIST&lt;/code&gt; (Live playlist)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-MEDIA-SEQUENCE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-TARGETDURATION&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-DISCONTINUITY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-DISCONTINUITY-SEQUENCE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-BYTERANGE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-MAP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-KEY&lt;/code&gt; (https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#EXT-X-PROGRAM-DATE-TIME&lt;/code&gt; (https://tools.ietf.org/html/draft-pantos-http-live-streaming-18#section-4.3.2.6)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXT-X-START:TIME-OFFSET=x&lt;/code&gt; (https://tools.ietf.org/html/draft-pantos-http-live-streaming-18#section-4.3.5.2)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;hls.js is released under &lt;a href=&quot;https://raw.githubusercontent.com/video-dev/hls.js/master/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development and contributing - first steps&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome. Here is a quick guide on how to start.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;First, checkout the repository and install required dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/video-dev/hls.js.git
# setup dev environment
cd hls.js
npm install
# runs dev-server for demo page (recompiles on file-watch, but doesn&#39;t write to actual dist fs artifacts)
npm run dev
# lint
npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://editorconfig.org&quot;&gt;EditorConfig&lt;/a&gt; or at least stay consistent to the file formats defined in the &lt;code&gt;.editorconfig&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;Develop in a topic branch, not master&lt;/li&gt; 
 &lt;li&gt;Don&#39;t commit the updated &lt;code&gt;dist/hls.js&lt;/code&gt; file in your PR. We&#39;ll take care of generating an updated build right before releasing a new tagged version.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;After cloning or pulling from the repository, first of all, make sure your local node-modules are up-to-date with the package deps:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build system (Webpack)&lt;/h2&gt; 
&lt;p&gt;Build all flavors (suitable for prod-mode/CI):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only debug-mode artifacts:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build:debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build and watch (customized dev setups where you&#39;ll want to host through another server than webpacks&#39; - for example in a sub-module/project)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build:watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only specific flavor (known configs are: debug, dist, light, light-dist, demo):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build -- --env dist # replace &quot;dist&quot; by other configuration name, see above ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The &quot;demo&quot; config is always built.&lt;/p&gt; 
&lt;p&gt;Build with bundle analyzer (to help optimize build size)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build:analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Linter (ESlint)&lt;/h2&gt; 
&lt;p&gt;Run linter:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run linter with auto-fix mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint:fix
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run linter with errors only (no warnings)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint:quiet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Automated tests (Mocha/Karma)&lt;/h2&gt; 
&lt;p&gt;Run all tests at once:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run unit tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test:unit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run unit tests in watch mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test:unit:watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run functional (integration) tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test:func
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;Click &lt;a href=&quot;https://raw.githubusercontent.com/video-dev/hls.js/master/docs/design.md&quot;&gt;here&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Test Status&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://saucelabs.com/u/robwalch&quot;&gt;&lt;img src=&quot;https://saucelabs.com/browser-matrix/robwalch.svg&quot; alt=&quot;Sauce Test Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://saucelabs.com&quot;&gt;&lt;img src=&quot;https://opensource.saucelabs.com/images/opensauce/powered-by-saucelabs-badge-gray.png?sanitize=true&quot; alt=&quot;Testing Powered By SauceLabs&quot; title=&quot;Testing Powered By SauceLabs&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>strapi/strapi</title>
      <link>https://github.com/strapi/strapi</link>
      <description>&lt;p&gt;🚀 Open source Node.js Headless CMS to easily build customisable APIs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Strapi is a free and open-source headless CMS delivering your content anywhere you need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Keep control over your data&lt;/strong&gt;. With Strapi, you know where your data is stored, and you keep full control at all times.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-hosted&lt;/strong&gt;. You can host and scale Strapi projects the way you want. You can choose any hosting platform you want: AWS, Render, Netlify, Heroku, a VPS, or a dedicated server. You can scale as you grow, 100% independent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database agnostic&lt;/strong&gt;. You can choose the database you prefer. Strapi works with SQL &amp;amp; NoSQL databases: MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;. You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Read the Getting Started tutorial
 &lt;!-- raw HTML omitted --&gt; or follow the steps below:&lt;/p&gt; 
&lt;h3&gt;⏳ Installation&lt;/h3&gt; 
&lt;p&gt;Install Strapi with this &lt;strong&gt;Quickstart&lt;/strong&gt; command to create a Strapi project instantly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Use &lt;strong&gt;yarn&lt;/strong&gt; to install the Strapi project (recommended). &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/install/&quot;&gt;Install yarn with these docs&lt;/a&gt;.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn create strapi-app my-project --quickstart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Use npm/npx to install the Strapi project.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-strapi-app my-project --quickstart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp;amp; file upload). The &lt;strong&gt;Quickstart&lt;/strong&gt; command installs Strapi using a &lt;strong&gt;SQLite&lt;/strong&gt; database which is used for prototyping in development.&lt;/p&gt; 
&lt;p&gt;Enjoy 🎉&lt;/p&gt; 
&lt;h3&gt;🖐 Requirements&lt;/h3&gt; 
&lt;p&gt;Complete installation requirements can be found in the documentation under 
 &lt;!-- raw HTML omitted --&gt;Installation Requirements
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu LTS/Debian 9.x&lt;/li&gt; 
 &lt;li&gt;CentOS/RHEL 8&lt;/li&gt; 
 &lt;li&gt;macOS Mojave&lt;/li&gt; 
 &lt;li&gt;Windows 10&lt;/li&gt; 
 &lt;li&gt;Docker - &lt;a href=&quot;https://github.com/strapi/strapi-docker&quot;&gt;Docker-Repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Node:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NodeJS &amp;gt;= 10.16 &amp;lt;=14&lt;/li&gt; 
 &lt;li&gt;NPM &amp;gt;= 6.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Database:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MongoDB &amp;gt;= 3.6&lt;/li&gt; 
 &lt;li&gt;MySQL &amp;gt;= 5.6&lt;/li&gt; 
 &lt;li&gt;MariaDB &amp;gt;= 10.1&lt;/li&gt; 
 &lt;li&gt;PostgreSQL &amp;gt;= 10&lt;/li&gt; 
 &lt;li&gt;SQLite &amp;gt;= 3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;We recommend always using the latest version of Strapi to start your new projects&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Admin Panel:&lt;/strong&gt; Elegant, entirely customizable and a fully extensible admin panel.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Secure by default:&lt;/strong&gt; Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugins Oriented:&lt;/strong&gt; Install the auth system, content management, custom plugins, and more, in seconds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blazing Fast:&lt;/strong&gt; Built on top of Node.js, Strapi delivers amazing performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Front-end Agnostic:&lt;/strong&gt; Use any front-end framework (React, Vue, Angular, etc.), mobile apps or even IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful CLI:&lt;/strong&gt; Scaffold projects and APIs on the fly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL &amp;amp; NoSQL databases:&lt;/strong&gt; Works with MongoDB, PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://strapi.io/overview&quot;&gt;See more on our website&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://raw.githubusercontent.com/strapi/strapi/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before submitting a Pull Request to the project.&lt;/p&gt; 
&lt;h2&gt;Community support&lt;/h2&gt; 
&lt;p&gt;For general help using Strapi, please refer to &lt;a href=&quot;https://strapi.io/documentation/&quot;&gt;the official Strapi documentation&lt;/a&gt;. For additional help, you can use one of these channels to ask a question:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://slack.strapi.io&quot;&gt;Slack&lt;/a&gt; (For live discussion with the Community and Strapi team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/strapi/strapi&quot;&gt;GitHub&lt;/a&gt; (Bug reports, Contributions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.strapi.io&quot;&gt;Community Forum&lt;/a&gt; (Questions and Discussions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://academy.strapi.io&quot;&gt;Academy&lt;/a&gt; (Learn the fundamentals of Strapi)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portal.productboard.com/strapi/tabs/2-under-consideration&quot;&gt;ProductBoard&lt;/a&gt; (Roadmap, Feature requests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/strapijs&quot;&gt;Twitter&lt;/a&gt; (Get the news fast)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/Strapi-616063331867161&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/strapi&quot;&gt;YouTube Channel&lt;/a&gt; (Learn from Video Tutorials)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migration&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href=&quot;https://strapi.io/documentation/developer-docs/latest/migration-guide/#migrations-guides&quot;&gt;migration guides&lt;/a&gt; on the documentation to keep your projects up-to-date.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://portal.productboard.com/strapi&quot;&gt;roadmap&lt;/a&gt; to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See our dedicated &lt;a href=&quot;https://github.com/strapi/documentation&quot;&gt;repository&lt;/a&gt; for the Strapi documentation, or view our documentation live:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/documentation/developer-docs/latest&quot;&gt;Developer docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/documentation/user-docs/latest&quot;&gt;User docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/strapi/strapi/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for licensing information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RocketChat/Rocket.Chat</title>
      <link>https://github.com/RocketChat/Rocket.Chat</link>
      <description>&lt;p&gt;The ultimate Free Open Source Solution for team communications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/RocketChat/Rocket.Chat.Artwork/raw/master/Logos/2020/png/logo-horizontal-red.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://open.rocket.chat/&quot;&gt;&lt;img src=&quot;https://open.rocket.chat/images/join-chat.svg&quot; alt=&quot;Rocket.Chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/RocketChat/Rocket.Chat&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/RocketChat/Rocket.Chat/master.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/RocketChat/Rocket.Chat&quot;&gt;&lt;img src=&quot;https://david-dm.org/RocketChat/Rocket.Chat.svg&quot; alt=&quot;Project Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/RocketChat/Rocket.Chat?type=dev&quot;&gt;&lt;img src=&quot;https://david-dm.org/RocketChat/Rocket.Chat/dev-status.svg&quot; alt=&quot;devDependencies Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codacy.com/app/RocketChat/Rocket-chat&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/grade/8580571ba024426d9649e9ab389bd5dd&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/RocketChat/Rocket.Chat&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/RocketChat/Rocket.Chat/badge.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/RocketChat/Rocket.Chat&quot;&gt;&lt;img src=&quot;https://codeclimate.com/github/RocketChat/Rocket.Chat/badges/gpa.svg&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#moving-to-a-single-codebase&quot;&gt;&lt;strong&gt;NEW!&lt;/strong&gt; Rocket.Chat Moving to a Single Codebase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#mobile-apps&quot;&gt;Mobile Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#desktop-apps&quot;&gt;Desktop Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#deployment&quot;&gt;Deployment&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#instant-server-installation-with-snaps&quot;&gt;Snaps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#digitalocean-droplet&quot;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#rocketchatlauncher&quot;&gt;RocketChatLauncher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#layershift&quot;&gt;Layershift&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#yunohostorg&quot;&gt;Yunohost.org&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#indiehosters&quot;&gt;IndieHosters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#ubuntu-1604&quot;&gt;Ubuntu 16.04&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#cloudronio&quot;&gt;Cloudron.io&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#helm-kubernetes&quot;&gt;Helm Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#scalingo&quot;&gt;Scalingo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#sloppyio&quot;&gt;Sloppy.io&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#docker&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#ansible&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#raspberry-pi-4&quot;&gt;Raspberry Pi 4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#koozali-sme&quot;&gt;Koozali SME&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#ubuntu-vps&quot;&gt;Ubuntu VPS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#d2cio&quot;&gt;D2C.io&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#syncloudorg&quot;&gt;Syncloud.org&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#about-rocketchat&quot;&gt;About Rocket.Chat&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#in-the-news&quot;&gt;In the News&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#how-it-all-started&quot;&gt;How it all started&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#awards&quot;&gt;Awards&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#stack-overflow&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#integrations&quot;&gt;Integrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#quick-start-for-code-developers&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#branching-model&quot;&gt;Branching Model&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#translations&quot;&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#help-wanted&quot;&gt;Help Wanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/#donate&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Moving to a Single Codebase&lt;/h1&gt; 
&lt;p&gt;Rocket.Chat is moving to a single codebase. Get to know the reasons and how the community will benefit from it. Read the &lt;a href=&quot;https://rocket.chat/rocket-chat-is-moving-to-a-single-codebase-get-to-know-the-reasons-and-how-the-community-will-benefit-from-it/&quot;&gt;details&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Help Wanted&lt;/h1&gt; 
&lt;p&gt;At Rocket.Chat, our community drives &lt;em&gt;everything&lt;/em&gt; we do. The Rocket.Chat team is expanding, and we know no better place to find qualified new team members than &lt;em&gt;right here&lt;/em&gt; - in our GitHub community.&lt;/p&gt; 
&lt;p&gt;If you are passionate about our project, want to work with a world-leading open source team, and enjoy working remotely at a location of your choice, then we want to talk to you!&lt;/p&gt; 
&lt;p&gt;Get to know more about us and explore current openings at https://jobs.rocket.chat/&quot;&lt;/p&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;Join thousands of members worldwide 24/7 in our &lt;a href=&quot;https://open.rocket.chat&quot;&gt;community server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://open.rocket.chat/channel/support&quot;&gt;&lt;img src=&quot;https://open.rocket.chat/api/v1/shield.svg?type=channel&amp;amp;name=Rocket.Chat&amp;amp;channel=support&quot; alt=&quot;Rocket.Chat&quot;&gt;&lt;/a&gt; for help from our community with general Rocket.Chat questions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://open.rocket.chat/channel/dev&quot;&gt;&lt;img src=&quot;https://open.rocket.chat/api/v1/shield.svg?type=channel&amp;amp;name=Rocket.Chat&amp;amp;channel=dev&quot; alt=&quot;Rocket.Chat&quot;&gt;&lt;/a&gt; for developers needing help from the community to developing new features.&lt;/p&gt; 
&lt;p&gt;You can also join the conversation on &lt;a href=&quot;https://twitter.com/RocketChat&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://www.facebook.com/RocketChatApp&quot;&gt;Facebook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Share your story&lt;/h2&gt; 
&lt;p&gt;We’d love to hear about &lt;a href=&quot;https://survey.zohopublic.com/zs/e4BUFG&quot;&gt;your experience&lt;/a&gt; and potentially feature it on our &lt;a href=&quot;https://rocket.chat/case-studies/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=community&quot;&gt;Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Subscribe for Updates&lt;/h2&gt; 
&lt;p&gt;Once a month our marketing team releases an email update with news about product releases, company related topics, events and use cases. &lt;a href=&quot;https://rocket.chat/newsletter/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=community&quot;&gt;Sign Up!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Desktop Apps&lt;/h1&gt; 
&lt;p&gt;Download the Native Cross-Platform Desktop Application at &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat.Electron/releases&quot;&gt;Rocket.Chat.Electron&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Mobile Apps&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/rocket-chat/id1148741252?mt=8&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/551004/29770691-a2082ff4-8bc6-11e7-89a6-964cd405ea8e.png&quot; alt=&quot;Rocket.Chat on Apple App Store&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=chat.rocket.android&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/551004/29770692-a20975c6-8bc6-11e7-8ab0-1cde275496e0.png&quot; alt=&quot;Rocket.Chat on Google Play&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://f-droid.org/en/packages/chat.rocket.android/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/551004/48210349-50649480-e35e-11e8-97d9-74a4331faf3a.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Deployment&lt;/h1&gt; 
&lt;h2&gt;Instant Server Installation with Snaps&lt;/h2&gt; 
&lt;p&gt;Install Rocket.Chat in seconds on Linux (Ubuntu and others) with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo snap install rocketchat-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://snapcraft.io/rocketchat-server&quot;&gt;&lt;img src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot; alt=&quot;Get it from the Snap Store&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Installing snaps is very quick. By running that command you have your full Rocket.Chat server up and running. Snaps are secure. They are isolated with all of their dependencies. Snaps also auto-update when we release new versions.&lt;/p&gt; 
&lt;p&gt;Our snap features a built-in reverse proxy that can request and maintain free Let&#39;s Encrypt SSL certificates. You can go from zero to a public-facing SSL-secured Rocket.Chat server in less than 5 minutes.&lt;/p&gt; 
&lt;p&gt;Find out more information about our snaps &lt;a href=&quot;https://rocket.chat/docs/installation/manual-installation/ubuntu/snaps/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;DigitalOcean droplet&lt;/h2&gt; 
&lt;p&gt;Deploy to a DigitalOcean droplet with our one-click install listing from the DigitalOcean Marketplace.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://marketplace.digitalocean.com/apps/rocket-chat?action=deploy&amp;amp;refcode=1940fe28bd31&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51996/58146107-50512580-7c1a-11e9-8ec9-e032ba387c2a.png&quot; alt=&quot;do-btn-blue&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Layershift&lt;/h2&gt; 
&lt;p&gt;Instantly deploy your Rocket.Chat server for free on next generation auto-scaling PaaS.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://jps.layershift.com/rocketchat/deploy.html&quot;&gt;&lt;img src=&quot;https://github.com/Sing-Li/bbug/raw/master/images/layershift.png&quot; alt=&quot;Layershift Hosting&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Painless SSL. Automatically scale your server cluster based on usage demand.&lt;/p&gt; 
&lt;h2&gt;Yunohost.org&lt;/h2&gt; 
&lt;p&gt;Host your own Rocket.Chat server in a few seconds.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://install-app.yunohost.org/?app=rocketchat&quot;&gt;&lt;img src=&quot;https://install-app.yunohost.org/install-with-yunohost.png&quot; alt=&quot;Install RocketChat with YunoHost&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;IndieHosters&lt;/h2&gt; 
&lt;p&gt;Get your Rocket.Chat instance hosted in an &quot;as a Service&quot; style. You register and we manage it for you! (updates, backup...).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Cloudron.io&lt;/h2&gt; 
&lt;p&gt;Install Rocket.Chat on &lt;a href=&quot;https://cloudron.io&quot;&gt;Cloudron&lt;/a&gt; Smartserver:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://cloudron.io/button.html?app=chat.rocket.cloudronapp&quot;&gt;&lt;img src=&quot;https://cloudron.io/img/button.svg&quot; alt=&quot;Install&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Helm Kubernetes&lt;/h2&gt; 
&lt;p&gt;Deploy on Kubernetes using the official &lt;a href=&quot;https://github.com/helm/charts/tree/master/stable/rocketchat&quot;&gt;helm chart&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Scalingo&lt;/h2&gt; 
&lt;p&gt;Deploy your own Rocket.Chat server instantly on &lt;a href=&quot;https://scalingo.com&quot;&gt;Scalingo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://my.scalingo.com/deploy?source=https://github.com/RocketChat/Rocket.Chat#master&quot;&gt;&lt;img src=&quot;https://cdn.scalingo.com/deploy/button.svg&quot; alt=&quot;Deploy on Scalingo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sloppy.io&lt;/h2&gt; 
&lt;p&gt;Host your docker container at &lt;a href=&quot;http://sloppy.io&quot;&gt;sloppy.io&lt;/a&gt;. Get an account and use the &lt;a href=&quot;https://github.com/sloppyio/quickstarters/tree/master/rocketchat&quot;&gt;quickstarter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rocket.chat/docs/installation/docker-containers/docker-compose/&quot;&gt;Deploy with docker compose&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/rocketchat/rocket.chat/&quot;&gt;&lt;img src=&quot;https://d207aa93qlcgug.cloudfront.net/1.95.5.qa/img/nav/docker-logo-loggedout.png&quot; alt=&quot;Rocket.Chat logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OR Use the automated build image of our &lt;a href=&quot;https://hub.docker.com/r/rocketchat/rocket.chat/&quot;&gt;most recent release&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull rocketchat/rocket.chat:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OR select a specific release (&lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/releases&quot;&gt;details of releases available&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull rocketchat/rocket.chat:vX.X.X
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OR our &lt;a href=&quot;https://hub.docker.com/_/rocket.chat/&quot;&gt;official docker registry image&lt;/a&gt;, containing recent stable release build approved by Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull rocket.chat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Ansible&lt;/h2&gt; 
&lt;p&gt;Automated production-grade deployment in minutes, for RHEL / CentOS 7 or Ubuntu 14.04 LTS / 15.04.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://rocket.chat/docs/installation/automation-tools/ansible/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/ansible.png&quot; alt=&quot;Ansible deployment&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Raspberry Pi 4&lt;/h2&gt; 
&lt;p&gt;Run Rocket.Chat on this world famous $35 quad-core server.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat.RaspberryPi&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/pitiny.png&quot; alt=&quot;Raspberry Pi 4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Koozali SME&lt;/h2&gt; 
&lt;p&gt;Add Rocket.Chat to this world famous time tested small enterprise server today.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://wiki.contribs.org/Rocket_Chat&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/koozali.png&quot; alt=&quot;Koozali SME&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Ubuntu VPS&lt;/h2&gt; 
&lt;p&gt;Follow these &lt;a href=&quot;https://rocket.chat/docs/installation/manual-installation/ubuntu/&quot;&gt;deployment instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;D2C.io&lt;/h2&gt; 
&lt;p&gt;Deploy Rocket.Chat stack to your server with &lt;a href=&quot;https://d2c.io/&quot;&gt;D2C&lt;/a&gt;. Scale with a single click, check live logs and metrics:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://panel.d2c.io/?import=https://github.com/d2cio/rocketchat-stack/archive/master.zip/&quot;&gt;&lt;img src=&quot;https://github.com/mastappl/images/blob/master/deployTo.png&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Syncloud.org&lt;/h2&gt; 
&lt;p&gt;Run Rocket.Chat on your easy to use personal device.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://syncloud.org&quot;&gt;&lt;img src=&quot;https://syncloud.org/images/logo_min.svg&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;About Rocket.Chat&lt;/h1&gt; 
&lt;p&gt;Rocket.Chat is a Web Chat Server, developed in JavaScript, using the &lt;a href=&quot;https://www.meteor.com/install&quot;&gt;Meteor&lt;/a&gt; full stack framework.&lt;/p&gt; 
&lt;p&gt;It is a great solution for communities and companies wanting to privately host their own chat service or for developers looking forward to build and evolve their own chat platforms.&lt;/p&gt; 
&lt;h2&gt;In the News&lt;/h2&gt; 
&lt;h5&gt;&lt;a href=&quot;http://www.wired.com/2016/03/open-source-devs-racing-build-better-versions-slack/&quot;&gt;Wired&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open Sourcers Race to Build Better Versions of Slack&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=9624737&quot;&gt;Hacker News&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Yes, we made it to the #1&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;https://www.producthunt.com/tech/rocket-chat&quot;&gt;Product Hunt&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Your own open source Slack-like chat&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;http://javascriptweekly.com/issues/234&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An open source Web based, channel based chat system (a la Slack) built using Meteor, the full stack JavaScript development platform.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;http://www.oschina.net/p/rocket-chat&quot;&gt;Open Source China&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Rocket.Chat 是特性最丰富的 Slack 开源替代品之一。 主要功能：群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;http://wwwhatsnew.com/2015/05/30/rocket-chat-para-los-programadores-que-quieran-ofrecer-un-chat-en-su-web/&quot;&gt;wwwhatsnew.com&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Para los programadores que quieran ofrecer un chat en su web&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;http://www.clasesdeperiodismo.com/2015/05/30/un-chat-de-codigo-abierto-que-puedes-anadir-a-la-web/&quot;&gt;clasesdeperiodismo.com&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Un chat de código abierto que puedes añadir a la web&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;https://snowulf.com/2015/09/25/why-slack-when-you-can-rocket-chat/&quot;&gt;snowulf.com&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why Slack when you can Rocket.chat?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a href=&quot;http://liminality.xyz/self-hosting/&quot;&gt;liminality.xyz&lt;/a&gt;&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Self-hosted alternatives to popular cloud services&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;BYOS (Bring Your Own Server)&lt;/li&gt; 
 &lt;li&gt;Multiple Rooms&lt;/li&gt; 
 &lt;li&gt;Direct Messages&lt;/li&gt; 
 &lt;li&gt;Private Groups&lt;/li&gt; 
 &lt;li&gt;Public Channels&lt;/li&gt; 
 &lt;li&gt;Desktop Notifications&lt;/li&gt; 
 &lt;li&gt;Mentions&lt;/li&gt; 
 &lt;li&gt;Avatars&lt;/li&gt; 
 &lt;li&gt;Markdown&lt;/li&gt; 
 &lt;li&gt;Emojis&lt;/li&gt; 
 &lt;li&gt;Custom Emojis&lt;/li&gt; 
 &lt;li&gt;Reactions&lt;/li&gt; 
 &lt;li&gt;One touch Geolocation&lt;/li&gt; 
 &lt;li&gt;TeX Math Rendering - inline math typesetting&lt;/li&gt; 
 &lt;li&gt;Media Embeds&lt;/li&gt; 
 &lt;li&gt;Link Previews&lt;/li&gt; 
 &lt;li&gt;Sent Message Edit and Deletion&lt;/li&gt; 
 &lt;li&gt;Transcripts / History&lt;/li&gt; 
 &lt;li&gt;File Upload / Sharing&lt;/li&gt; 
 &lt;li&gt;Scalable file sharing - S3 uploads with CDN downloads&lt;/li&gt; 
 &lt;li&gt;Full text search&lt;/li&gt; 
 &lt;li&gt;Global search (from all channels/rooms at once)&lt;/li&gt; 
 &lt;li&gt;Live chat / Messaging call center&lt;/li&gt; 
 &lt;li&gt;LDAP Authentication&lt;/li&gt; 
 &lt;li&gt;CAS 1.0, 2.0 support for educational institutions and hosting providers worldwide&lt;/li&gt; 
 &lt;li&gt;Support for Okta SSO through SAML v2&lt;/li&gt; 
 &lt;li&gt;I18n - Supports 22 Languages&lt;/li&gt; 
 &lt;li&gt;Hubot Friendly&lt;/li&gt; 
 &lt;li&gt;(Beta) Face to Face Video Conferencing (aka WebRTC )&lt;/li&gt; 
 &lt;li&gt;(Beta) Multi-users Video Group Chat&lt;/li&gt; 
 &lt;li&gt;(Beta) Jitsi integration&lt;/li&gt; 
 &lt;li&gt;Audio calls&lt;/li&gt; 
 &lt;li&gt;Multi-users Audio Conference&lt;/li&gt; 
 &lt;li&gt;Screen sharing&lt;/li&gt; 
 &lt;li&gt;Drupal 7.x and 8.x Plug-in (both stable and development flavours) (&lt;a href=&quot;https://www.drupal.org/project/rocket_chat&quot;&gt;download&lt;/a&gt; and &lt;a href=&quot;https://git.drupal.org/project/rocket_chat.git&quot;&gt;source code&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;XMPP bridge (&lt;a href=&quot;https://open.rocket.chat/channel/general&quot;&gt;try it&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;REST APIs&lt;/li&gt; 
 &lt;li&gt;Remote Video Monitoring&lt;/li&gt; 
 &lt;li&gt;Native real-time APIs for Microsoft C#, Visual Basic, F# and other .NET supported languages (&lt;a href=&quot;https://www.nuget.org/packages/Rocket.Chat.Net/0.0.12-pre&quot;&gt;Get it!&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;API access from &lt;a href=&quot;https://metacpan.org/pod/Net::RocketChat&quot;&gt;Perl&lt;/a&gt; and &lt;a href=&quot;https://github.com/baloise/rocket-chat-rest-client&quot;&gt;Java&lt;/a&gt; (community contributions)&lt;/li&gt; 
 &lt;li&gt;Chat-ops powered by Hubot: scalable horizontal app integration (early access)&lt;/li&gt; 
 &lt;li&gt;Massively scalable hosting and provisioning (beta testing now)&lt;/li&gt; 
 &lt;li&gt;Native Cross-Platform Desktop Application &lt;a href=&quot;https://rocket.chat/&quot;&gt;Windows, macOS, or Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mobile app for iPhone, iPad, and iPod touch &lt;a href=&quot;https://geo.itunes.apple.com/us/app/rocket-chat/id1148741252?mt=8&quot;&gt;Download on App Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mobile app for Android phone, tablet, and TV stick &lt;a href=&quot;https://play.google.com/store/apps/details?id=chat.rocket.android&quot;&gt;Available now on Google Play&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Available on &lt;a href=&quot;https://cloudron.io/appstore.html#chat.rocket.cloudronapp&quot;&gt;Cloudron Store&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;To see an up to date view of what we have planned, view our &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/milestones&quot;&gt;milestones&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How it all started&lt;/h2&gt; 
&lt;p&gt;Read about &lt;a href=&quot;https://www.synopsys.com/blogs/software-security/rocket-chat-privately-hosted-chat-services/&quot;&gt;how it all started&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Awards&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.infoworld.com/article/3122000/open-source-tools/bossie-awards-2016-the-best-open-source-applications.html#slide4&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/bossie.png&quot; alt=&quot;InfoWorld Bossie Awards 2016 - Best Open Source Applications&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://info.blackducksoftware.com/OpenSourceRookies2015&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/blackducksm.png&quot; alt=&quot;Black Duck Open Source Rookie of the Year for 2015&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.softpedia.com/get/Internet/Chat/Other-Chat-Tools/Rocket-Chat.shtml#status&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/softpedia.gif&quot; alt=&quot;Softpedia 100% Free and Clean Award for 2017&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/issues&quot;&gt;GitHub Issues&lt;/a&gt; are used to track bugs and tasks on the roadmap.&lt;/p&gt; 
&lt;h2&gt;Feature Requests&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/RocketChat/feature-requests&quot;&gt;RocketChat/feature-requests&lt;/a&gt; is used to track Rocket.Chat feature requests and discussions. Click &lt;a href=&quot;https://github.com/RocketChat/feature-requests/issues/new?template=feature_request.md&quot;&gt;here&lt;/a&gt; to open a new feature request. &lt;a href=&quot;https://forums.rocket.chat/c/feature-requests&quot;&gt;Feature Request Forums&lt;/a&gt; stores the historical archives of old feature requests (up to 2018).&lt;/p&gt; 
&lt;h3&gt;Stack Overflow&lt;/h3&gt; 
&lt;p&gt;Please use the &lt;a href=&quot;http://stackoverflow.com/questions/tagged/rocket.chat&quot;&gt;Stack Overflow TAG&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;h4&gt;Hubot&lt;/h4&gt; 
&lt;p&gt;The docker image is ready. Everyone can start hacking the adapter code or launch his/her own bot within a few minutes now. Please head over to the &lt;a href=&quot;https://github.com/RocketChat/hubot-rocketchat&quot;&gt;Hubot Integration Project&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h4&gt;Chat-ops integrations powered by Hubot&lt;/h4&gt; 
&lt;p&gt;Integrate your application with fly-in panels today! Early access is available for developers.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Sing-Li/bbug/master/images/dronechatops.png&quot; alt=&quot;Sample integration of a Drones Fleet Management System&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Many, many, many more to come!&lt;/h4&gt; 
&lt;p&gt;We are developing the APIs based on the competition, so stay tuned and you will see a lot happening here.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://rocket.chat/docs/&quot;&gt;Rocket.Chat documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Note that Rocket.Chat is distributed under the &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Quick start for code developers&lt;/h2&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meteor.com/install&quot;&gt;Meteor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Meteor automatically installs a hidden &lt;a href=&quot;https://nodejs.org/download/release/v12.18.4/&quot;&gt;NodeJS v12&lt;/a&gt; and &lt;a href=&quot;https://docs.mongodb.com/manual/introduction/&quot;&gt;MongoDB v4.2&lt;/a&gt; to be used when you run your app in development mode using the &lt;code&gt;meteor&lt;/code&gt; command.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Now just clone and start the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/RocketChat/Rocket.Chat.git
cd Rocket.Chat
meteor npm install
meteor npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more detailed step-by-step, see our &lt;a href=&quot;https://docs.rocket.chat/guides/developer/quick-start&quot;&gt;quick start for developers&lt;/a&gt; docs.&lt;/p&gt; 
&lt;p&gt;To debug the server part, use &lt;a href=&quot;https://docs.meteor.com/commandline.html#meteordebug&quot;&gt;meteor debugging&lt;/a&gt;. You should use Chrome for best debugging experience:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;meteor debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You&#39;ll find a nodejs icon in the developer console.&lt;/p&gt; 
&lt;p&gt;If you are not a developer and just want to run the server - see &lt;a href=&quot;https://rocket.chat/docs/installation/paas-deployments/&quot;&gt;deployment methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Branching Model&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://rocket.chat/docs/developer-guides/branches-and-releases/&quot;&gt;Branches and Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It is based on &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;Gitflow Workflow&lt;/a&gt;, reference section below is derived from Vincent Driessen at nvie.&lt;/p&gt; 
&lt;p&gt;See also this &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&quot;&gt;Git Workflows Comparison&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We are experimenting with &lt;a href=&quot;https://translate.lingohub.com/rocketchat/dashboard&quot;&gt;Lingohub&lt;/a&gt;. If you want to help, send an email to support at rocket.chat to be invited to the translation project.&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Already a JavaScript developer? Familiar with Meteor? &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/labels/contrib%3A%20easy&quot;&gt;Pick an issue&lt;/a&gt;, push a PR and instantly become a member of Rocket.Chat&#39;s international contributors&#39; community. For more information, check out our &lt;a href=&quot;https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; and our &lt;a href=&quot;https://rocket.chat/docs/contributing/&quot;&gt;Official Documentation for Contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A lot of work has already gone into Rocket.Chat, but we have much bigger plans for it!&lt;/p&gt; 
&lt;h3&gt;Contributor License Agreement&lt;/h3&gt; 
&lt;p&gt;Please review and sign our CLA at https://cla-assistant.io/RocketChat/Rocket.Chat&lt;/p&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;Thanks to our core team &lt;a href=&quot;https://github.com/geekgonecrazy&quot;&gt;Aaron Ogle&lt;/a&gt;, &lt;a href=&quot;https://github.com/Graywolf336&quot;&gt;Bradley Hilton&lt;/a&gt;, &lt;a href=&quot;https://github.com/sampaiodiego&quot;&gt;Diego Sampaio&lt;/a&gt;, &lt;a href=&quot;https://github.com/engelgabriel&quot;&gt;Gabriel Engel&lt;/a&gt;, &lt;a href=&quot;https://github.com/marceloschmidt&quot;&gt;Marcelo Schmidt&lt;/a&gt;, &lt;a href=&quot;https://github.com/rodrigok&quot;&gt;Rodrigo Nascimento&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sing-Li&quot;&gt;Sing Li&lt;/a&gt;, and hundreds of awesome &lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat/graphs/contributors&quot;&gt;contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/OrhYvLe.png&quot; alt=&quot;JoyPixels&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Emoji provided graciously by &lt;a href=&quot;https://www.joypixels.com/&quot;&gt;JoyPixels&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1986378/24772879/57d57b88-1ae9-11e7-98b4-4af824b47933.png&quot; alt=&quot;BrowserStack&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Testing with &lt;a href=&quot;https://www.browserstack.com&quot;&gt;BrowserStack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20868078/69438584-0dd0e880-0d24-11ea-9127-de61dcfa6cd6.png&quot; alt=&quot;LingoHub&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Translations done with &lt;a href=&quot;https://www.lingohub.com&quot;&gt;LingoHub&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donate&lt;/h1&gt; 
&lt;p&gt;Rocket.Chat will be free forever, but you can help us speed up the development!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=9MT88JJ9X4A6U&amp;amp;source=url&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bountysource.com/teams/rocketchat&quot;&gt;BountySource&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to &#39;stick&#39;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. If you would like to create your own lessons, we have also included a &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/lesson-template/README.md&quot;&gt;lesson template&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-4621-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/screenshot.png&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a &#39;green&#39; browser extension, a &#39;space invaders&#39; type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today&#39;s web developer.&lt;/p&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=cxaall-4621-cxall&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;&quot; collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=cxaall-4621-cxall&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;p&gt;| | Project Name | Concepts Taught | Learning Objectives | Linked Lesson | Written Lesson | Sketchnote | Assignment | Starting Quiz | Ending Quiz | Video | Author | | :---: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :------------: | :--------: | :--------: | :-----------: | :---------: | :---: | :---------------------: | | 01 | Getting Started | Introduction to Programming and Tools of the Trade | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | Jasmine | | 02 | Getting Started | Basics of GitHub, includes working with a team | How to use GitHub in your project, how to collaborate with others on a code base | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Floor | | 03 | Getting Started | Accessibility | Learn the basics of web accessibility | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Christopher | | 04 | JS Basics | JavaScript Data Types | The basics of JavaScript data types | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | Jasmine | | 05 | JS Basics | Functions and Methods | Learn about functions and methods to manage an application&#39;s logic flow | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | Jasmine and Christopher | | 06 | JS Basics | Making Decisions with JS | Learn how to create conditions in your code using decision-making methods | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | Jasmine | | 07 | JS Basics | Arrays and Loops | Work with data using arrays and loops in JavaScript | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | Jasmine | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt; | HTML in Practice | Build the HTML to create an online terrarium, focusing on building a layout | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Jen | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt; | CSS in Practice | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Jen | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt; | JavaScript Closures, DOM manipulation | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Jen | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt; | Build a Typing Game | Learn how to use keyboard events to drive the logic of your JavaScript app | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | ✅ | Christopher | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Working with Browsers | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt; | ✅ | ✅ | ✅ | ✅ | ✅ | 🛑 | Jen | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | ✅ | Jen | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Background processes in the browser, web performance | Use the browser&#39;s background processes to manage the extension&#39;s icon; learn about web performance and some optimizations to make | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Jen | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | More Advanced Game Development with JavaScript | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Drawing to canvas | Learn about the Canvas API, used to draw elements to a screen | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Moving elements around the screen | Discover how elements can gain motion using the cartesian coordinates and the Canvas API | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Collision detection | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Keeping score | Perform math calculations based on the game&#39;s status and performance | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Ending and restarting the game | Learn about ending and restarting the game, including cleaning up assets and resetting variable values | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | 🛑 | Chris | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | HTML Templates and Routes in a Web App | Learn how to create the scaffold of a multipage website&#39;s architecture using routing and HTML templates | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | ✅ | Yohan | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Build a Login and Registration Form | Learn about building forms and handing validation routines | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | ✅ | Yohan | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Methods of Fetching and Using Data | How data flows in and out of your app, how to fetch it, store it, and dispose of it | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | ✅ | Yohan | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Concepts of State Management | Learn how your app retains state and how to manage it programmatically | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt; | ✅ | 🛑 | ✅ | ✅ | ✅ | | Yohan |&lt;/p&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PavelDoGreat/WebGL-Fluid-Simulation</title>
      <link>https://github.com/PavelDoGreat/WebGL-Fluid-Simulation</link>
      <description>&lt;p&gt;Play with fluids in your browser (works even on mobile)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebGL Fluid Simulation&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://paveldogreat.github.io/WebGL-Fluid-Simulation/&quot;&gt;Play here&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;http://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch38.html&lt;/p&gt; 
&lt;p&gt;https://github.com/mharrys/fluids-2d&lt;/p&gt; 
&lt;p&gt;https://github.com/haxiomic/GPU-Fluid-Experiments&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code is available under the &lt;a href=&quot;https://raw.githubusercontent.com/PavelDoGreat/WebGL-Fluid-Simulation/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they&#39;re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they&#39;re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Discord = require(&#39;discord.js&#39;);
const client = new Discord.Client();

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you&#39;d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don&#39;t hesitate to join our official &lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/nodebestpractices</title>
      <link>https://github.com/goldbergyoni/nodebestpractices</link>
      <description>&lt;p&gt;✅ The Node.js best practices list (December 2020)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Best Practices&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; alt=&quot;nodepractices&quot;&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Read in a different language: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translations&quot;&gt;(&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt;&lt;strong&gt;FR&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress!)&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;Built and maintained by our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#steering-committee&quot;&gt;Steering Committee&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/h6&gt; 
&lt;h1&gt;Latest Best Practices and News&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;✅ New best practice:&lt;/strong&gt; Bullet 2.12 by &lt;a href=&quot;https://github.com/Alexsey&quot;&gt;Alexsey&lt;/a&gt; shows how returning without awaiting to async functions leads to partial stacktraces. This might become a big deal when troubleshooting exceptions in productions that lack some of the execution frames&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;✅ New best practice:&lt;/strong&gt; Bullet 6.8 by Josh Hemphill recommends &quot;Protect Users&#39; Passwords/Secrets using BCrypt or Script&quot;. It contains an in-depth explanation about when and why each option suits a specific project. Don&#39;t miss this short guide with a brief overview of the various hashing options&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;:whale: Node.js + Docker best practices&lt;/strong&gt;: We&#39;ve just released the Docker with Node.js section which includes 15 bullets about better coding techniques with Docker&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1. You are reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We&#39;d love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/writing-guidelines.md&quot;&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;🔗Read More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs, and more information&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#1-project-structure-practices&quot;&gt;Project Structure Practices (5)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#2-error-handling-practices&quot;&gt;Error Handling Practices (11) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Code Style Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#4-testing-and-overall-quality-practices&quot;&gt;Testing And Overall Quality Practices (13) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#5-going-to-production-practices&quot;&gt;Going To Production Practices (19) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#6-security-best-practices&quot;&gt;Security Practices (25)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#7-draft-performance-best-practices&quot;&gt;Performance Practices (2) (Work In Progress️ ✍️)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#8-docker-best-practices&quot;&gt;Docker Practices (15)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.1 Structure your solution by components&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit &#39;Read More&#39; below to see examples of correct project structure&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It&#39;s also considered harder to scale-out when all the business units are not separated&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/breakintcomponents.md&quot;&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.2 Layer your components, keep the web layer within its boundaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain &#39;layers&#39; - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/createlayers.md&quot;&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to invent your deployment and the dependency wheel&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/wraputilities.md&quot;&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.4 Separate Express &#39;app&#39; and &#39;server&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; app in a single huge file - separate your &#39;Express&#39; definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won&#39;t be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/separateexpress.md&quot;&gt;&lt;strong&gt;Read More: separate Express &#39;app&#39; and &#39;server&#39;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href=&quot;https://www.npmjs.com/package/rc&quot;&gt;rc&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/nconf&quot;&gt;nconf&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/config&quot;&gt;config&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/convict&quot;&gt;convict&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/configguide.md&quot;&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/asyncerrorhandling.md&quot;&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.2 Use only the built-in Error object&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type – this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error – using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return – it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/useonlythebuiltinerror.md&quot;&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal – keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/operationalvsprogrammererror.md&quot;&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.4 Handle errors centrally, not within a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/centralizedhandling.md&quot;&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you&#39;re using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn’t understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/documentingusingswagger.md&quot;&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like &lt;a href=&quot;https://www.npmjs.com/package/forever&quot;&gt;Forever&lt;/a&gt; or &lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;PM2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/shuttingtheprocess.md&quot;&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href=&quot;https://github.com/pinojs/pino&quot;&gt;Pino&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;Log4js&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/usematurelogger.md&quot;&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing – Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the &quot;Gist popup&quot;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can’t rely on your code to return the right errors. Without meaningful errors – there’s no error handling&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/testingerrorflows.md&quot;&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn’t forget to explicitly handle it. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/catchunhandledpromiserejection.md&quot;&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like &lt;a href=&quot;https://www.npmjs.com/package/ajv&quot;&gt;ajv&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;Joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this – your function expects a numeric argument “Discount” which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/failfast.md&quot;&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.12 Always await promises before returning to avoid a partial stacktrace&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always do &lt;code&gt;return await&lt;/code&gt; when returning a promise to benefit full error stacktrace. If a function returns a promise, that function must be declared as &lt;code&gt;async&lt;/code&gt; function and explicitly &lt;code&gt;await&lt;/code&gt; the promise before returning it&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The function that returns a promise without awaiting won&#39;t appear in the stacktrace. Such missing frames would probably complicate the understanding of the flow that leads to the error, especially if the cause of the abnormal behavior is inside of the missing function&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/returningpromises.md&quot;&gt;&lt;strong&gt;Read More: returning promises&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.1 Use ESLint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;prettier&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/js-beautify&quot;&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project&#39;s code style&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/codestylepractices/eslint_prettier.md&quot;&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.2 Node.js specific plugins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.3 Start a Codeblock&#39;s Curly Braces on the Same Line&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt; 
&lt;h3&gt;Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function someFunction() {
  // code block
}

// Avoid
function someFunction()
{
  // code block
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Why do results vary based on curly brace placement?&quot; (StackOverflow)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.4 Separate your statements properly&lt;/h2&gt; 
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; or &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript&#39;s interpreter automatically adds a semicolon at the end of a statement if there isn&#39;t one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.&lt;/p&gt; 
&lt;h3&gt;Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function doThing() {
    // ...
}

doThing()

// Do

const items = [1, 2, 3]
items.forEach(console.log)

// Avoid — throws exception
const m = new Map()
const a = [1,2,3]
[...m.values()].forEach(console.log)
&amp;gt; [...m.values()].forEach(console.log)
&amp;gt;  ^^^
&amp;gt; SyntaxError: Unexpected token ...

// Avoid — throws exception
const count = 2 // it tries to run 2(), but 2 is not a function
(function doSomething() {
  // do something amazing
}())
// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs alltogether
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://eslint.org/docs/rules/semi&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Semi ESLint rule&quot;&lt;/a&gt; 🔗 &lt;a href=&quot;https://eslint.org/docs/rules/no-unexpected-multiline&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;No unexpected multiline ESLint rule&quot;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.5 Name your functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you&#39;re looking at when checking a memory snapshot&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions and &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Javascript is the only language in the world that allows invoking a constructor (&quot;Class&quot;) directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt; 
&lt;h3&gt;3.6 Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// for class name we use UpperCamelCase
class SomeClassExample {}

// for const names we use the const keyword and lowerCamelCase
const config = {
  key: &quot;value&quot;
};

// for variables and functions names we use lowerCamelCase
let someVariableExample = &quot;value&quot;;
function doSomething() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block-scoped, and &lt;a href=&quot;https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70&quot;&gt;shouldn&#39;t be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75&quot;&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.9 Require modules by folders, as opposed to the files directly&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module&#39;s internals so every consumer will pass through it. This serves as an &#39;interface&#39; to your module and eases future changes without breaking the contract&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt; 
&lt;h3&gt;3.9 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
module.exports.SMSProvider = require(&quot;./SMSProvider&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver&quot;);

// Avoid
module.exports.SMSProvider = require(&quot;./SMSProvider/SMSProvider.js&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver/SMSNumberResolver.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt; 
&lt;h3&gt;3.10 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;&quot; == &quot;0&quot;; // false
0 == &quot;&quot;; // true
0 == &quot;0&quot;; // true

false == &quot;false&quot;; // false
false == &quot;0&quot;; // true

false == undefined; // false
false == null; // false
null == undefined; // true

&quot; \t\r\n &quot; == 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow&lt;/p&gt; 
&lt;p&gt;🔗&lt;a href=&quot;https://github.com/yortus/asyncawait&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async-await 1.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it&#39;s recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75&quot;&gt;&lt;strong&gt;Read more: It’s Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don&#39;t have any automated testing due to short timetables or often the &#39;testing project&#39; ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;. Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it&#39;s self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/3-parts-in-name.md&quot;&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/aaa.md&quot;&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.4 Detect code issues with a linter&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/avoid-global-test-fixture.md&quot;&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as 🔗 &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; and 🔗 &lt;a href=&quot;https://snyk.io&quot;&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.7 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;: mocha --grep &#39;sanity&#39;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs&quot;&gt;Istanbul&lt;/a&gt;/&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won&#39;t be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.9 Inspect for outdated packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. &#39;npm outdated&#39; or &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt; to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.10 Use production-like environment for e2e testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the &lt;strong&gt;Otherwise&lt;/strong&gt; clause, this should mention docker-compose)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose, teams must maintain a testing DB for each testing environment including developers&#39; machines, keep all those DBs in sync so test results won&#39;t vary across environments&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/refactoring.md&quot;&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it&#39;s a trade-off between robustness and speed - choose your side carefully&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/citools.md&quot;&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.13 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When a middleware holds some immense logic that spans many requests, it worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/test-middlewares.md&quot;&gt;&lt;strong&gt;Read More: Test middlewares in isolation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.1. Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do – obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‘The Gist’ below for an overview of the solutions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/monitoring.md&quot;&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/smartlogging.md&quot;&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‘real’ middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/delegatetoproxy.md&quot;&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.4. Lock dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default – when you install packages at various environments it tries to fetch packages’ latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/lockdependencies.md&quot;&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today&#39;s ‘dockerized’ world, cluster management tools should be considered as well&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/guardprocess.md&quot;&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.6. Utilize all CPU cores&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It’s your duty to replicate the Node process and utilize all CPUs – For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/utilizecpu.md&quot;&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.7. Create a ‘maintenance endpoint’&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it’s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll find that you’re performing many “diagnostic deploys” – shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/createmaintenanceendpoint.md&quot;&gt;&lt;strong&gt;Read More: Create a ‘maintenance endpoint’&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.9. Make your code production-ready&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I’ve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won’t save a system that is badly written&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/productioncode.md&quot;&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node’s code – thus watching Node’s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href=&quot;https://www.joyent.com/blog/walmart-node-js-memory-leak&quot;&gt;Walmart&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/measurememory.md&quot;&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for – serving dynamic content&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/frontendout.md&quot;&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‘killing’ your servers periodically or use ‘serverless’ platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/bestateless.md&quot;&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/detectvulnerabilities.md&quot;&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context – what happened before – makes it much harder and slower to reason about the issue&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/assigntransactionid.md&quot;&gt;&lt;strong&gt;Read More: Assign ‘TransactionId’ to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.15. Set NODE_ENV=production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable NODE_ENV to ‘production’ or ‘development’ to flag whether production optimizations should get activated – many npm packages determine the current environment and optimize their code for production&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/setnodeenv.md&quot;&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don’t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/LTSrelease.md&quot;&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.18. Don&#39;t route logs within the app&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/logrouting.md&quot;&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.19. Install your packages with &lt;code&gt;npm ci&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; You have to be sure that production code uses the exact version of the packages you have tested it with. Run &lt;code&gt;npm ci&lt;/code&gt; to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/installpackageswithnpmci.md&quot;&gt;&lt;strong&gt;Read More: Use npm ci&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.1. Embrace linter security rules&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href=&quot;https://github.com/nodesecurity/eslint-plugin-security&quot;&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they&#39;re being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click &#39;Read more&#39; below to see code examples that will get caught by a security linter&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/lintrules.md&quot;&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href=&quot;https://www.npmjs.com/package/rate-limiter-flexible&quot;&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href=&quot;https://www.npmjs.com/package/express-rate-limit&quot;&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/limitrequests.md&quot;&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secretmanagement.md&quot;&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;Sequelize&lt;/a&gt;, &lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex&lt;/a&gt;, &lt;a href=&quot;https://github.com/Automattic/mongoose&quot;&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/ormodmusage.md&quot;&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.5. Collection of generic security best practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/commonsecuritybestpractices.md&quot;&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href=&quot;https://www.npmjs.com/package/helmet&quot;&gt;helmet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application&#39;s users, leading to huge security vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secureheaders.md&quot;&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; or &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/dependencysecurity.md&quot;&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.8. Protect Users&#39; Passwords/Secrets using BCrypt or Script&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;,&lt;code&gt;scrypt&lt;/code&gt;, or worst case &lt;code&gt;pbkdf2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/userpasswords.md&quot;&gt;&lt;strong&gt;Read More: User Passwords&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/escape-output.md&quot;&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests&#39; body payload and ensure it meets expectations, fail fast if it doesn&#39;t. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href=&quot;https://www.npmjs.com/package/jsonschema&quot;&gt;jsonschema&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/validation.md&quot;&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.11. Support blacklisting JWTs&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;Passport.js&lt;/a&gt;), by default there&#39;s no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there&#39;s no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blacklist of untrusted tokens that are validated on each request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/expirejwt.md&quot;&gt;&lt;strong&gt;Read More: Blacklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt; 
 &lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/login-rate-limit.md&quot;&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It&#39;s recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user&#39;s behalf by invoking the container with the flag &quot;-u username&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/non-root-user.md&quot;&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href=&quot;https://github.com/expressjs/body-parser&quot;&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/requestpayloadsizelimit.md&quot;&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoideval.md&quot;&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on 🔥. For that reason, prefer third-party validation packages like &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href=&quot;https://github.com/substack/safe-regex&quot;&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/regex.md&quot;&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/safemoduleloading.md&quot;&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of &#39;sandbox&#39; execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sandbox.md&quot;&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/childprocesses.md&quot;&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.20. Hide error details from clients&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/hideerrors.md&quot;&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer&#39;s password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href=&quot;https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8&quot;&gt;Have you heard about the eslint developer whose password was hijacked?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.22. Modify session middleware settings&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses - telling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sessions.md&quot;&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error - unless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There&#39;s no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests - a handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/saferedirects.md&quot;&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to blacklist specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as a whitelist.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project&#39;s API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoid_publishing_secrets.md&quot;&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;Our contributors are working on this section. &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/256&quot;&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.1. Don&#39;t block the event loop&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/block-loop.md&quot;&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It&#39;s often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance. Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it&#39;s now about 50% more performant than utility libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/nativeoverutil.md&quot;&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;8. Docker Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;🏅 Many thanks to &lt;a href=&quot;https://github.com/BretFisher&quot;&gt;Bret Fisher&lt;/a&gt; from whom we learned many of the following practices&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.1 Use multi-stage builds for leaner and more secure Docker images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what&#39;s necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.&lt;/p&gt; 
&lt;h3&gt;Example Dockerfile for multi-stage builds&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM node:14.4.0 AS build

COPY . .
RUN npm ci &amp;amp;&amp;amp; npm run build

FROM node:slim-14.4.0

USER node
EXPOSE 8080

COPY --from=build /home/node/app/dist /home/node/app/package.json /home/node/app/package-lock.json ./
RUN npm ci --production

CMD [ &quot;node&quot;, &quot;dist/app.js&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/multi_stage_builds.md&quot;&gt;&lt;strong&gt;Read More: Use multi-stage builds&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.2. Bootstrap using &#39;node&#39; command, avoid npm start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; use &lt;code&gt;CMD [&#39;node&#39;,&#39;server.js&#39;]&lt;/code&gt; to start your app, avoid using npm scripts which don&#39;t pass OS signals to the code. This prevents problems with child-process, signal handling, graceful shutdown and having zombie processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and/or data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/bootstrap-using-node.md&quot;&gt;&lt;strong&gt;Read More: Bootstrap container using node command, avoid npm start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.3. Let the Docker runtime handle replication and uptime&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/restart-and-replicate-processes.md&quot;&gt;&lt;strong&gt;Read More: Let the Docker orchestrator restart and replicate processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.4. Use .dockerignore to prevent leaking secrets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Include a &lt;code&gt;.dockerignore&lt;/code&gt; file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;: Common personal secret files like &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;.aws&lt;/code&gt; and &lt;code&gt;.npmrc&lt;/code&gt; will be shared with anybody with access to the image (e.g. Docker repository)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/docker-ignore.md&quot;&gt;&lt;strong&gt;Read More: Use .dockerignore&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.5. Clean-up dependencies before production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running &lt;code&gt;npm ci --production&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many of the infamous npm security breaches were found within development packages (e.g. &lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;eslint-scope&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;🔗 Read More: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/install-for-production.md&quot;&gt;Remove development dependencies&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.6. Shutdown smartly and gracefully&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Dying immediately means not responding to thousands of disappointed users&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/graceful-shutdown.md&quot;&gt;&lt;strong&gt;Read More: Graceful shutdown&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.7. Set memory limits using both Docker and v8&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8&#39;s flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8&#39;s old space memory to be a just bit less than the container limit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8&#39;s limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/memory-limit.md&quot;&gt;&lt;strong&gt;Read More: Set memory limits using Docker only&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.8. Plan for efficient caching&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Docker build will be very long and consume lot of resources even when making tiny changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/use-cache-for-shorter-build-time.md&quot;&gt;&lt;strong&gt;Read More: Leverage caching to reduce build times&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.9. Use explicit image reference, avoid &lt;code&gt;latest&lt;/code&gt; tag&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Specify an explicit image digest or versioned label, never refer to &lt;code&gt;latest&lt;/code&gt;. Developers are often led to believe that specifying the &lt;code&gt;latest&lt;/code&gt; tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.&lt;/p&gt; 
&lt;p&gt;In addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/image-tags.md&quot;&gt;&lt;strong&gt;Read More: Understand image tags and use the &quot;latest&quot; tag with caution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.10. Prefer smaller Docker base images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/smaller_base_images.md&quot;&gt;&lt;strong&gt;Read More: Prefer smaller images&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.11. Clean-out build-time secrets, avoid secrets in args&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like &lt;code&gt;.npmrc&lt;/code&gt; and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/avoid-build-time-secrets.md&quot;&gt;&lt;strong&gt;Read More: Clean-out build-time secrets&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.12. Scan images for multi layers of vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI/CD plugins&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/scan-images.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.13 Clean NODE_MODULE cache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; After installing dependencies in a container remove the local cache. It doesn&#39;t make any sense to duplicate the dependencies for faster future installs since there won&#39;t be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The image that will get shipped to production will weigh 30% more due to files that will never get used&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/clean-cache.md&quot;&gt;&lt;strong&gt;Read More: Clean NODE_MODULE cache&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.14. Generic Docker practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/generic-tips.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.15. Lint your Dockerfile&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Mistakenly the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/lint-dockerfile.md&quot;&gt;&lt;strong&gt;Read More: Lint your Dockerfile&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Milestones&lt;/h1&gt; 
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/milestones&quot;&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt; 
&lt;h3&gt;Completed translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mattjin&quot;&gt;Matt Jin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/contributorpw&quot;&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations in progress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; &lt;a href=&quot;https://github.com/gaspaonrocks/nodebestpractices/blob/french-translation/README.french.md&quot;&gt;French&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/129&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt; Hebrew (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/156&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.korean.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/uronly14me&quot;&gt;Sangbeom Han&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/94&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/blob/spanish-translation/README.spanish.md&quot;&gt;Spanish&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/95&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt; Turkish (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/139&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Steering Committee&lt;/h2&gt; 
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/projects&quot;&gt;Github projects&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;Yoni Goldberg&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Independent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at &lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;@goldbergyoni&lt;/a&gt; or &lt;a href=&quot;mailto:me@goldbergyoni.com&quot;&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;💻 full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kevynb&quot;&gt;Kevyn Bruyere&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Independent full-stack developer with a taste for Ops and automation.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Steering Committee Emeriti&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sagirk&quot;&gt;Sagir Khan&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Deep specialist in JavaScript and its ecosystem — React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS/JSON in any layer of the system — building products using the web platform for the world’s most recognized brands. Individual Member of the Node.js Foundation.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;p&gt;Thank you to all our collaborators! 🙏&lt;/p&gt; 
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; 🎉&lt;/p&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | | :---------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------: | | &lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter (Founder)&lt;/a&gt; | &lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt; |&lt;/p&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | | :-------------------------------------------------------------------------------------------------------------------------: | | &lt;a href=&quot;https://github.com/refack&quot;&gt;Refael Ackermann&lt;/a&gt; |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve ever wanted to contribute to open source, now is your chance! See the &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributing docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>npm/cli</title>
      <link>https://github.com/npm/cli</link>
      <description>&lt;p&gt;the package manager for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;npm(1) -- a JavaScript package manager&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/npm/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/npm/cli/latest.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;SYNOPSIS&lt;/h2&gt; 
&lt;p&gt;This is just enough info to get you up and running.&lt;/p&gt; 
&lt;p&gt;Much more info will be available via &lt;code&gt;npm help&lt;/code&gt; once it&#39;s installed.&lt;/p&gt; 
&lt;h2&gt;IMPORTANT&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You need node v6 or higher to run this program.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To install an old &lt;strong&gt;and unsupported&lt;/strong&gt; version of npm that works on node v5 and prior, clone the git repo and dig through the old tags and branches.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;npm is configured to use npm, Inc.&#39;s public registry at &lt;a href=&quot;https://registry.npmjs.org&quot;&gt;https://registry.npmjs.org&lt;/a&gt; by default.&lt;/strong&gt; Use of the npm public registry is subject to terms of use available at &lt;a href=&quot;https://www.npmjs.com/policies/terms&quot;&gt;https://www.npmjs.com/policies/terms&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can configure npm to use any compatible registry you like, and even run your own registry. Check out the &lt;a href=&quot;https://docs.npmjs.com/misc/registry&quot;&gt;doc on registries&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Super Easy Install&lt;/h2&gt; 
&lt;p&gt;npm is bundled with &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;node&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows Computers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Get the MSI&lt;/a&gt;. npm is in it.&lt;/p&gt; 
&lt;h3&gt;Apple Macintosh Computers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Get the pkg&lt;/a&gt;. npm is in it.&lt;/p&gt; 
&lt;h3&gt;Other Sorts of Unices&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;make install&lt;/code&gt;. npm will be installed with node.&lt;/p&gt; 
&lt;p&gt;If you want a more fancy pants install (a different version, customized paths, etc.) then read on.&lt;/p&gt; 
&lt;h2&gt;Fancy Install (Unix)&lt;/h2&gt; 
&lt;p&gt;There&#39;s a pretty robust install script at &lt;a href=&quot;https://www.npmjs.com/install.sh&quot;&gt;https://www.npmjs.com/install.sh&lt;/a&gt;. You can download that and run it.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example using curl:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -L https://www.npmjs.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Slightly Fancier&lt;/h3&gt; 
&lt;p&gt;You can set any npm configuration params with that script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm_config_prefix=/some/path sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, you can run it in uber-debuggery mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm_debug=1 sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Even Fancier&lt;/h3&gt; 
&lt;p&gt;Get the code with git. Use &lt;code&gt;make&lt;/code&gt; to build the docs and do other stuff. If you plan on hacking on npm, &lt;code&gt;make link&lt;/code&gt; is your friend.&lt;/p&gt; 
&lt;p&gt;If you&#39;ve got the npm source code, you can also semi-permanently set arbitrary config keys using the &lt;code&gt;./configure --key=val ...&lt;/code&gt;, and then run npm commands by doing &lt;code&gt;node bin/npm-cli.js &amp;lt;command&amp;gt; &amp;lt;args&amp;gt;&lt;/code&gt;. (This is helpful for testing, or running stuff without actually installing npm itself.)&lt;/p&gt; 
&lt;h2&gt;Windows Install or Upgrade&lt;/h2&gt; 
&lt;p&gt;Many improvements for Windows users have been made in npm 3 - you will have a better experience if you run a recent version of npm. To upgrade, either use &lt;a href=&quot;https://github.com/felixrieseberg/npm-windows-upgrade&quot;&gt;Microsoft&#39;s upgrade tool&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download a new version of Node&lt;/a&gt;, or follow the Windows upgrade instructions in the &lt;a href=&quot;https://npm.community/t/installing-upgrading-npm/251/2&quot;&gt;Installing/upgrading npm&lt;/a&gt; post.&lt;/p&gt; 
&lt;p&gt;If that&#39;s not fancy enough for you, then you can fetch the code with git, and mess with it directly.&lt;/p&gt; 
&lt;h2&gt;Installing on Cygwin&lt;/h2&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;h2&gt;Uninstalling&lt;/h2&gt; 
&lt;p&gt;So sad to see you go.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo npm uninstall npm -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if that fails,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo make uninstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;More Severe Uninstalling&lt;/h2&gt; 
&lt;p&gt;Usually, the above instructions are sufficient. That will remove npm, but leave behind anything you&#39;ve installed.&lt;/p&gt; 
&lt;p&gt;If you would like to remove all the packages that you have installed, then you can use the &lt;code&gt;npm ls&lt;/code&gt; command to find them, and then &lt;code&gt;npm rm&lt;/code&gt; to remove them.&lt;/p&gt; 
&lt;p&gt;To remove cruft left behind by npm 0.x, you can use the included &lt;code&gt;clean-old.sh&lt;/code&gt; script file. You can run it conveniently like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm explore npm -g -- sh scripts/clean-old.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;npm uses two configuration files, one for per-user configs, and another for global (every-user) configs. You can view them by doing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm config get userconfig   # defaults to ~/.npmrc
npm config get globalconfig # defaults to /usr/local/etc/npmrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uninstalling npm does not remove configuration files by default. You must remove them yourself manually if you want them gone. Note that this means that future npm installs will not remember the settings that you have chosen.&lt;/p&gt; 
&lt;h2&gt;More Docs&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;npm help&lt;/code&gt; command to read any of them.&lt;/p&gt; 
&lt;p&gt;If you&#39;re a developer, and you want to use npm to publish your program, you should &lt;a href=&quot;https://docs.npmjs.com/misc/developers&quot;&gt;read this&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;BUGS&lt;/h2&gt; 
&lt;p&gt;When you find issues, please report them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;web: &lt;a href=&quot;https://npm.community/c/bugs&quot;&gt;https://npm.community/c/bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Be sure to include &lt;em&gt;all&lt;/em&gt; of the output from the npm command that didn&#39;t work as expected. The &lt;code&gt;npm-debug.log&lt;/code&gt; file is also helpful to provide.&lt;/p&gt; 
&lt;h2&gt;SEE ALSO&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;npm(1)&lt;/li&gt; 
 &lt;li&gt;npm-help(1)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vuex</title>
      <link>https://github.com/vuejs/vuex</link>
      <description>&lt;p&gt;🗃️ Centralized State Management for Vue.js.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vuex&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/vuejs/vuex&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/vuejs/vuex/tree/dev.png?style=shield&quot; alt=&quot;ci status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;:fire: &lt;strong&gt;HEADS UP!&lt;/strong&gt; You&#39;re currently looking at Vuex 3 branch. If you&#39;re looking for Vuex 4, &lt;a href=&quot;https://github.com/vuejs/vuex/tree/4.0&quot;&gt;please check out &lt;code&gt;4.0&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Vuex is a state management pattern + library for Vue.js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion. It also integrates with Vue&#39;s official &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;devtools extension&lt;/a&gt; to provide advanced features such as zero-config time-travel debugging and state snapshot export / import.&lt;/p&gt; 
&lt;p&gt;Learn more about Vuex at &quot;&lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;What is Vuex?&lt;/a&gt;&quot;, or get started by looking into &lt;a href=&quot;http://vuex.vuejs.org/&quot;&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out docs, visit &lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;vuex.vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/counter&quot;&gt;Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/counter-hot&quot;&gt;Counter with Hot Reload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/todomvc&quot;&gt;TodoMVC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/chat&quot;&gt;Flux Chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/shopping-cart&quot;&gt;Shopping Cart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Running the examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install
$ npm run dev # serve examples at localhost:8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use the &lt;a href=&quot;https://chat.vuejs.org&quot;&gt;Discord chat server&lt;/a&gt; or &lt;a href=&quot;http://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vuex/blob/dev/.github/contributing.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vuex/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;p&gt;For latest releases and announcements, follow on Twitter: &lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;@vuejs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vuex/blob/dev/.github/contributing.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2015-present Evan You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sleirsgoevy/ps4jb</title>
      <link>https://github.com/sleirsgoevy/ps4jb</link>
      <description>&lt;p&gt;PS4 6.72 jailbreak&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ps4jb&lt;/h1&gt; 
&lt;p&gt;This is a full chain exploit for PS4 firmware 6.72. Basically this is TheFlow&#39;s POC together with PS4-specific kROP &amp;amp; kernel patches. &lt;a href=&quot;https://github.com/OpenOrbis/mira-project&quot;&gt;Mira&lt;/a&gt; is used as a HEN payload.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;To build from source, clone this repository recursively, and run these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd src
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will get a fresh copy of the binary build in &lt;code&gt;src/build/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Dependencies: &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;ROPgadget&lt;/code&gt;. Note: Mira is not being built from source&lt;/p&gt; 
&lt;h2&gt;Adding your own payloads&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;miraldr.c&lt;/code&gt; loads 65536 bytes at address stored in JS variable &lt;code&gt;mira_blob&lt;/code&gt; into RWX memory and jumps to it. At this point only the minimal patches (amd64_syscall, mmap, mprotect, kexec) are applied (i.e. the process is still &quot;sandboxed&quot;). Normally &lt;code&gt;mira_blob&lt;/code&gt; contains MiraLoader.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;mira_blob_2_len&lt;/code&gt; bytes at &lt;code&gt;mira_blob_2&lt;/code&gt; are sent to &lt;code&gt;127.0.0.1:9021&lt;/code&gt; in a background thread. If &lt;code&gt;mira_blob&lt;/code&gt; contains MiraLoader this will be run in the same way but with the full patchset applied &amp;amp; already jailbroken.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fire30/bad_hoist&quot;&gt;Fire30&lt;/a&gt; for the WebKit exploit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hackerone.com/reports/826026&quot;&gt;TheFlow&lt;/a&gt; for the kernel exploit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rui314/8cc&quot;&gt;Rui Ueyama&lt;/a&gt; and &lt;a href=&quot;https://github.com/shinh/ELVM&quot;&gt;shinh&lt;/a&gt; for the 8cc compiler&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dynamoose/dynamoose</title>
      <link>https://github.com/dynamoose/dynamoose</link>
      <description>&lt;p&gt;Dynamoose is a modeling tool for Amazon&#39;s DynamoDB&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;Dynamoose is a modeling tool for Amazon&#39;s DynamoDB (inspired by &lt;a href=&quot;https://mongoosejs.com/&quot;&gt;Mongoose&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Dynamoose is Sponsored by Dynobase&lt;/h3&gt; 
&lt;p&gt;​ Dynobase helps you accelerate your DynamoDB workflow with code generation, faster data exploration, bookmarks and more: &lt;a href=&quot;https://dynobase.dev/?ref=dynamoose&quot;&gt;https://dynobase.dev/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;p&gt;Take a look at our &lt;a href=&quot;https://dynamoosejs.com&quot;&gt;website&lt;/a&gt; for information about how to get started.&lt;/p&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;h4&gt;General&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dynamoosejs.com&quot;&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dynamoose/dynamoose/master/SPONSOR.md&quot;&gt;Sponsor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dynamoose/dynamoose/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dynamoose/dynamoose/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dynamoose/dynamoose/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dynamoose/dynamoose/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Social&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://join.slack.com/t/dynamoose/shared_invite/enQtODM4OTI0MTc1NDc3LWI3MmNhMThmNmJmZDk5MmUxOTZmMGEwNGQzNTRkMjhjZGJlNGM5M2JmZjMzMzlkODRhMGY3MTQ5YjQ2Nzg3YTY&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/DynamooseJS&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Branch Strategy&lt;/h3&gt; 
&lt;p&gt;Below you will find the current branch strategy for the project. Work taking place on the branches listed below might be further ahead than the versions on NPM. All documentation links found below will also be reflective of the published version on NPM. If you would like to live dangerously and run non-released versions, you can run &lt;code&gt;npm install dynamoose/dynamoose#BRANCH&lt;/code&gt; (replacing &lt;code&gt;BRANCH&lt;/code&gt; with the branch listed below). You will also find the most up-to-date documentation in the &lt;code&gt;docs&lt;/code&gt; folder of the branch.&lt;/p&gt; 
&lt;p&gt;| Branch | Version | NPM Tag | Links | | --- | --- | --- | --- | | &lt;a href=&quot;https://github.com/dynamoose/dynamoose/tree/master&quot;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; | 2.4.x | | - &lt;a href=&quot;https://dynamoose.now.sh/&quot;&gt;Documentation&lt;/a&gt; | | &lt;a href=&quot;https://github.com/dynamoose/dynamoose/tree/v2.4.0&quot;&gt;&lt;code&gt;v2.4.0&lt;/code&gt; (tag)&lt;/a&gt; | 2.4.0 | latest | - &lt;a href=&quot;https://dynamoosejs.com&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pcottle/learnGitBranching</title>
      <link>https://github.com/pcottle/learnGitBranching</link>
      <description>&lt;p&gt;An interactive git visualization to challenge and educate!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LearnGitBranching&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/pcottle/learnGitBranching&quot;&gt;&lt;img src=&quot;https://travis-ci.org/pcottle/learnGitBranching.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pcottle/learnGitBranching/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LearnGitBranching is a git repository visualizer, sandbox, and a series of educational tutorials and challenges. Its primary purpose is to help developers understand git through the power of visualization (something that&#39;s absent when working on the command line). This is achieved through a game with different levels to get acquainted with the different git commands.&lt;/p&gt; 
&lt;p&gt;You can input a variety of commands into LearnGitBranching (LGB) -- as commands are processed, the nearby commit tree will dynamically update to reflect the effects of each command:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/7308241/39848730-040bd09e-53df-11e8-964e-2d48f35a4355.gif&quot; alt=&quot;demo-gif&quot;&gt;&lt;/p&gt; 
&lt;p&gt;This visualization combined with tutorials and &quot;levels&quot; can help both beginners and intermediate developers polish their version control skills. A quick demo is available here: https://pcottle.github.com/learnGitBranching/?demo&lt;/p&gt; 
&lt;p&gt;Or, you can launch the application normally here: https://pcottle.github.com/learnGitBranching/&lt;/p&gt; 
&lt;h3&gt;Sandbox Mode&lt;/h3&gt; 
&lt;p&gt;By default the application launches in &quot;sandbox mode&quot; with a basic repository already created. Here you can enter commands and mess around with a repository as much as you like. Keep in mind you can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;undo&lt;/code&gt; to undo the effects of the last command&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reset&lt;/code&gt; to start over with a clean slate (works in levels too)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; to simulate remote repositories!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sandbox mode can be great for demonstrating something to a friend, but the real learning is with levels...&lt;/p&gt; 
&lt;h2&gt;Levels&lt;/h2&gt; 
&lt;p&gt;Type &lt;code&gt;levels&lt;/code&gt; to see the available lessons / challenges (and which ones you have solved so far). Each level series aims to teach some high-level git concept, and each tab of levels separates major worlds of info (like remote repositories versus local).&lt;/p&gt; 
&lt;p&gt;For some added fun, there is a &quot;git golf&quot; concept where we keep track of how many commands you use to solve each level. See if you can match all of our records!&lt;/p&gt; 
&lt;h3&gt;Sharing permalinks&lt;/h3&gt; 
&lt;p&gt;You can share a link to LearnGitBranching with an arbitrary set of commands that will execute upon load by using the &lt;code&gt;command&lt;/code&gt; URL parameter. You will also likely want to disable the intro dialog for this case with the &lt;code&gt;NODEMO&lt;/code&gt; url param; here is &lt;a href=&quot;https://learngitbranching.js.org/?NODEMO&amp;amp;command=echo%20%22hello%22;%20git%20commit&quot;&gt;an example&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Level Builder&lt;/h3&gt; 
&lt;p&gt;You can build levels with &lt;code&gt;build level&lt;/code&gt;. The dialog will walk you through the process, and at the end you can &lt;code&gt;export level&lt;/code&gt; to get a JSON blob. Paste that in a gist or directly into an issue and I can check it out / merge in your changes! You can also share this level directly with friends by having them run &quot;import level&quot; or simply specify a gist ID in the url params like so: https://pcottle.github.io/learnGitBranching/?gist_level_id=a84407351f9c9f0cb241&lt;/p&gt; 
&lt;h2&gt;Reporting Bugs / Opening Issues&lt;/h2&gt; 
&lt;p&gt;When reporting bugs, try running the command &lt;code&gt;debug_copyTree()&lt;/code&gt; in your JS console when in a state just before reproducing a bug. This can avoid having to copy all the commands you used to get into a specific state. (I can then use the &lt;code&gt;importTreeNow&lt;/code&gt; command to get to that exact state)&lt;/p&gt; 
&lt;h2&gt;How the app works / Contributing functionality&lt;/h2&gt; 
&lt;p&gt;LearnGitBranching is a pretty simple application (from a technical perspective). There&#39;s no backend database or any AJAX requests -- it&#39;s a 100% clientside application written in JavaScript. The production version (on github.io) literally just serves up an HTML page with some JS and CSS. The rest of the magic lies in the 9k+ lines of JavaScript :P&lt;/p&gt; 
&lt;p&gt;Because the app contains a lot of code, I have written everything into Nodejs-style modules. The modules are packaged together with the &lt;code&gt;Browserify&lt;/code&gt; and then sent down in a format the browser can understand.&lt;/p&gt; 
&lt;p&gt;As of December 2013, I&#39;ve migrated the build process to use Grunt &amp;gt;0.4, since the older version was giving a lot of people build headaches. It should be fairly rock solid now!&lt;/p&gt; 
&lt;p&gt;Here is the high-level process of the build:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The code is written into the node.js modules which require other modules&lt;/li&gt; 
 &lt;li&gt;CSS is written into just one stylesheet (there is not a whole ton of styling)&lt;/li&gt; 
 &lt;li&gt;New HTML is written into a template HTML file (&lt;code&gt;template.index.html&lt;/code&gt;). Only needed for new views&lt;/li&gt; 
 &lt;li&gt;The app is &quot;built&quot;, which outputs: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;index.html&lt;/code&gt; in the root directory&lt;/li&gt; 
   &lt;li&gt;CSS and JS files in &lt;code&gt;./build&lt;/code&gt; directory&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If the app is being built for production, then these CSS and JS files are hashed (to bust caches) and tests are run&lt;/li&gt; 
 &lt;li&gt;That&#39;s it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thus, if you build the app locally, all you have to do in order to run the app is just open up &lt;code&gt;index.html&lt;/code&gt; in the root directory of the repo. Pretty simple&lt;/p&gt; 
&lt;h2&gt;Building yourself / Contributing Functionality&lt;/h2&gt; 
&lt;p&gt;For contributing core functionality in the app, you&#39;ll probably want to test your changes at least once before submitting a pull request. That means you&#39;ll need the &quot;gulp.js&quot; build tool to build the app:&lt;/p&gt; 
&lt;p&gt;https://gulpjs.com/docs/en/getting-started/quick-start&lt;/p&gt; 
&lt;p&gt;You&#39;ll also need &lt;code&gt;yarn&lt;/code&gt; to download all the dependencies of the project.&lt;/p&gt; 
&lt;p&gt;The general workflow / steps are below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone &amp;lt;your fork of the repo&amp;gt;
cd learnGitBranching
yarn install

git checkout -b newAwesomeFeature
vim ./src/js/git/index.js # some changes
yarn gulp fastBuild # skips tests and linting, faster build

# after building you can open up your browser to the index.html
# file generated and see your changes

vim ./src/js/git/index.js # more changes
yarn gulp build # runs tests and lint

git commit -am &quot;My new sweet feature!&quot;
git push
# go online and request a pull
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can also build and run the app in a pre-configured online workspace:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/pcottle/learnGitBranching/blob/master/src/js/git/index.js&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Helpful Folks&lt;/h2&gt; 
&lt;p&gt;A big shoutout to these brave souls for extensively testing our sandbox and finding bugs and/or inconsistencies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nikita Kouevda&lt;/li&gt; 
 &lt;li&gt;Maksim Ioffe&lt;/li&gt; 
 &lt;li&gt;Dan Miller&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the following heroes for assisting in translating:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Jake Chen&lt;/li&gt; 
 &lt;li&gt;우리깃 (&quot;urigit&quot;)&lt;/li&gt; 
 &lt;li&gt;&quot;bcho&quot;&lt;/li&gt; 
 &lt;li&gt;&quot;scientific-coder&quot;&lt;/li&gt; 
 &lt;li&gt;&quot;ace-coder&quot;&lt;/li&gt; 
 &lt;li&gt;Joël Thieffry&lt;/li&gt; 
 &lt;li&gt;Jens Bremmekamp (&quot;nem75&quot;)&lt;/li&gt; 
 &lt;li&gt;&quot;hilojack&quot;&lt;/li&gt; 
 &lt;li&gt;Ming-Hsuan-Tu (&quot;twmht&quot;)&lt;/li&gt; 
 &lt;li&gt;Mikhail Usov (&quot;mikhailusov&quot;)&lt;/li&gt; 
 &lt;li&gt;Matias Garcia Isaia (&quot;mgarciaisaia&quot;)&lt;/li&gt; 
 &lt;li&gt;Marc-Olivier Arsenault (&quot;marcolivierarsenault&quot;)&lt;/li&gt; 
 &lt;li&gt;Eroany H Leader (&quot;lhyqy5&quot;)&lt;/li&gt; 
 &lt;li&gt;Honorat (&quot;ahonorat&quot;)&lt;/li&gt; 
 &lt;li&gt;Vasil Kulakov (&quot;coyl&quot;) &amp;amp; Lyubov Agadjanyan (&quot;shayenblue&quot;)&lt;/li&gt; 
 &lt;li&gt;Aliaksei Berkau (&quot;alexeiberkov&quot;)&lt;/li&gt; 
 &lt;li&gt;Mizunashi Mana (&quot;mizunashi-mana&quot;)&lt;/li&gt; 
 &lt;li&gt;Olsza&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also huge shoutout for everyone who has put up a pull request that was pulled! Check out the 30+ contributors we have in the &lt;a href=&quot;https://github.com/pcottle/learnGitBranching/graphs/contributors&quot;&gt;Contributors View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And everyone who has reported an issue that was successfully closed!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn&#39;t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu&#39;s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | -------------- | ---------------------------- | ----------------------------- | ------------------------------- | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ❤️️ &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 1&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apsdehal/awesome-ctf</title>
      <link>https://github.com/apsdehal/awesome-ctf</link>
      <description>&lt;p&gt;A curated list of CTF frameworks, libraries, resources and softwares&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome CTF &lt;a href=&quot;https://travis-ci.org/apsdehal/awesome-ctf&quot;&gt;&lt;img src=&quot;https://travis-ci.org/apsdehal/awesome-ctf.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sindresorhus/awesome&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A curated list of &lt;a href=&quot;https://en.wikipedia.org/wiki/Capture_the_flag#Computer_security&quot;&gt;Capture The Flag&lt;/a&gt; (CTF) frameworks, libraries, resources, softwares and tutorials. This list aims to help starters as well as seasoned CTF players to find everything related to CTFs at one place.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Please take a quick look at the &lt;a href=&quot;https://github.com/apsdehal/ctf-tools/blob/master/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h4&gt;&lt;em&gt;If you know a tool that isn&#39;t present here, feel free to open a pull request.&lt;/em&gt;&lt;/h4&gt; 
&lt;h3&gt;Why?&lt;/h3&gt; 
&lt;p&gt;It takes time to build up collection of tools used in CTF and remember them all. This repo helps to keep all these scattered tools at one place.&lt;/p&gt; 
&lt;h3&gt;Contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#awesome-ctf&quot;&gt;Awesome CTF&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#create&quot;&gt;Create&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#forensics&quot;&gt;Forensics&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#platforms&quot;&gt;Platforms&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#steganography&quot;&gt;Steganography&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#web&quot;&gt;Web&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#solve&quot;&gt;Solve&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#attacks&quot;&gt;Attacks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#bruteforcers&quot;&gt;Bruteforcers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#crypto&quot;&gt;Cryptography&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#exploits&quot;&gt;Exploits&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#forensics-1&quot;&gt;Forensics&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#networking&quot;&gt;Networking&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#reversing&quot;&gt;Reversing&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#steganography-1&quot;&gt;Steganography&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#web-1&quot;&gt;Web&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#operating-systems&quot;&gt;Operating Systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#starter-packs&quot;&gt;Starter Packs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#tutorials&quot;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#wargames&quot;&gt;Wargames&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#websites&quot;&gt;Websites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#wikis&quot;&gt;Wikis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/apsdehal/awesome-ctf/master/#writeups-collections&quot;&gt;Writeups Collections&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Create&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Tools used for creating CTF challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/eu/networking-and-servers/kali-linux-ctf-blueprints&quot;&gt;Kali Linux CTF Blueprints&lt;/a&gt; - Online book on building, testing, and customizing your own Capture the Flag challenges.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Forensics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for creating Forensics challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iagox86/dnscat2&quot;&gt;Dnscat2&lt;/a&gt; - Hosts communication through DNS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.duffandphelps.com/kape&quot;&gt;Kroll Artifact Parser and Extractor (KAPE)&lt;/a&gt; - Triage program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.magnetforensics.com/downloadaxiom&quot;&gt;Magnet AXIOM&lt;/a&gt; - Artifact-centric DFIR tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kahusecurity.com/posts/registry_dumper_find_and_dump_hidden_registry_keys.html&quot;&gt;Registry Dumper&lt;/a&gt; - Dump your registry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Projects that can be used to host a CTF&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isislab/CTFd&quot;&gt;CTFd&lt;/a&gt; - Platform to host jeopardy style CTFs from ISISLab, NYU Tandon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/echoCTF/echoCTF.RED&quot;&gt;echoCTF.RED&lt;/a&gt; - Develop, deploy and maintain your own CTF infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/fbctf&quot;&gt;FBCTF&lt;/a&gt; - Platform to host Capture the Flag competitions from Facebook.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aau-network-security/haaukins&quot;&gt;Haaukins&lt;/a&gt;- A Highly Accessible and Automated Virtualization Platform for Security Education.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcpa-stlouis/hack-the-arch&quot;&gt;HackTheArch&lt;/a&gt; - CTF scoring platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nakiami/mellivora&quot;&gt;Mellivora&lt;/a&gt; - A CTF engine written in PHP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreafioraldi/motherfucking-ctf&quot;&gt;MotherFucking-CTF&lt;/a&gt; - Badass lightweight plaform to host CTFs. No JS involved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UnrealAkama/NightShade&quot;&gt;NightShade&lt;/a&gt; - A simple security CTF framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/easyctf/openctf&quot;&gt;OpenCTF&lt;/a&gt; - CTF in a box. Minimal setup required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/picoCTF/picoCTF&quot;&gt;PicoCTF&lt;/a&gt; - The platform used to run picoCTF. A great framework to host any CTF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pdautry/py_chall_factory&quot;&gt;PyChallFactory&lt;/a&gt; - Small framework to create/manage/package jeopardy CTF challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/moloch--/RootTheBox&quot;&gt;RootTheBox&lt;/a&gt; - A Game of Hackers (CTF Scoreboard &amp;amp; Game Manager).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/legitbs/scorebot&quot;&gt;Scorebot&lt;/a&gt; - Platform for CTFs by Legitbs (Defcon).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cliffe/SecGen&quot;&gt;SecGen&lt;/a&gt; - Security Scenario Generator. Creates randomly vulnerable virtual machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Steganography&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used to create stego challenges&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Check solve section for steganography.&lt;/p&gt; 
&lt;h2&gt;Web&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for creating Web challenges&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;JavaScript Obfustcators&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapid7/metasploit-framework/wiki/How-to-obfuscate-JavaScript-in-Metasploit&quot;&gt;Metasploit JavaScript Obfuscator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mishoo/UglifyJS&quot;&gt;Uglify&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Solve&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving CTF challenges&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Attacks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for performing various kinds of attacks&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bettercap/bettercap&quot;&gt;Bettercap&lt;/a&gt; - Framework to perform MITM (Man in the Middle) attacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomac/yersinia&quot;&gt;Yersinia&lt;/a&gt; - Attack various protocols on layer 2.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Crypto&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Crypto challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gchq.github.io/CyberChef&quot;&gt;CyberChef&lt;/a&gt; - Web app for analysing and decoding data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nccgroup/featherduster&quot;&gt;FeatherDuster&lt;/a&gt; - An automated, modular cryptanalysis tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iagox86/hash_extender&quot;&gt;Hash Extender&lt;/a&gt; - A utility tool for performing hash length extension attacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KishanBagaria/padding-oracle-attacker&quot;&gt;padding-oracle-attacker&lt;/a&gt; - A CLI tool to execute padding oracle attacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.unix-ag.uni-kl.de/%7Econrad/krypto/pkcrack.html&quot;&gt;PkCrack&lt;/a&gt; - A tool for Breaking PkZip-encryption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quipqiup.com&quot;&gt;QuipQuip&lt;/a&gt; - An online tool for breaking substitution ciphers or vigenere ciphers (without key).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ganapati/RsaCtfTool&quot;&gt;RSACTFTool&lt;/a&gt; - A tool for recovering RSA private key with various attack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ius/rsatool&quot;&gt;RSATool&lt;/a&gt; - Generate private key with knowledge of p and q.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellman/xortool&quot;&gt;XORTool&lt;/a&gt; - A tool to analyze multi-byte xor cipher.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bruteforcers&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for various kind of bruteforcing (passwords etc.)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashcat.net/hashcat/&quot;&gt;Hashcat&lt;/a&gt; - Password Cracker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tools.kali.org/password-attacks/hydra&quot;&gt;Hydra&lt;/a&gt; - A parallelized login cracker which supports numerous protocols to attack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magnumripper/JohnTheRipper&quot;&gt;John The Jumbo&lt;/a&gt; - Community enhanced version of John the Ripper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openwall.com/john/&quot;&gt;John The Ripper&lt;/a&gt; - Password Cracker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intrd/nozzlr&quot;&gt;Nozzlr&lt;/a&gt; - Nozzlr is a bruteforce framework, trully modular and script-friendly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ophcrack.sourceforge.net/&quot;&gt;Ophcrack&lt;/a&gt; - Windows password cracker based on rainbow tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lanjelot/patator&quot;&gt;Patator&lt;/a&gt; - Patator is a multi-purpose brute-forcer, with a modular design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portswigger.net/research/turbo-intruder-embracing-the-billion-request-attack&quot;&gt;Turbo Intruder&lt;/a&gt; - Burp Suite extension for sending large numbers of HTTP requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Exploits&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Exploits challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenSecurityResearch/dllinjector&quot;&gt;DLLInjector&lt;/a&gt; - Inject dlls in processes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellman/libformatstr&quot;&gt;libformatstr&lt;/a&gt; - Simplify format string exploitation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.metasploit.com/&quot;&gt;Metasploit&lt;/a&gt; - Penetration testing software. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.comparitech.com/net-admin/metasploit-cheat-sheet/&quot;&gt;Cheatsheet&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/david942j/one_gadget&quot;&gt;one_gadget&lt;/a&gt; - A tool to find the one gadget &lt;code&gt;execve(&#39;/bin/sh&#39;, NULL, NULL)&lt;/code&gt; call. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;gem install one_gadget&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Gallopsled/pwntools&quot;&gt;Pwntools&lt;/a&gt; - CTF Framework for writing exploits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BinaryAnalysisPlatform/qira&quot;&gt;Qira&lt;/a&gt; - QEMU Interactive Runtime Analyser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JonathanSalwan/ROPgadget&quot;&gt;ROP Gadget&lt;/a&gt; - Framework for ROP exploitation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/P1kachu/v0lt&quot;&gt;V0lt&lt;/a&gt; - Security CTF Toolkit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Forensics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Forensics challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.aircrack-ng.org/&quot;&gt;Aircrack-Ng&lt;/a&gt; - Crack 802.11 WEP and WPA-PSK keys. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install aircrack-ng&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/audacity/&quot;&gt;Audacity&lt;/a&gt; - Analyze sound files (mp3, m4a, whatever). 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install audacity&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/ophcrack/files/samdump2/&quot;&gt;Bkhive and Samdump2&lt;/a&gt; - Dump SYSTEM and SAM files. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install samdump2 bkhive&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ntcore.com/exsuite.php&quot;&gt;CFF Explorer&lt;/a&gt; - PE Editor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/moyix/creddump&quot;&gt;Creddump&lt;/a&gt; - Dump windows credentials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kost/dvcs-ripper&quot;&gt;DVCS Ripper&lt;/a&gt; - Rips web accessible (distributed) version control systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sno.phy.queensu.ca/%7Ephil/exiftool/&quot;&gt;Exif Tool&lt;/a&gt; - Read, write and edit file metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://extundelete.sourceforge.net/&quot;&gt;Extundelete&lt;/a&gt; - Used for recovering lost data from mountable images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rabbitstack/fibratus&quot;&gt;Fibratus&lt;/a&gt; - Tool for exploration and tracing of the Windows kernel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://foremost.sourceforge.net/&quot;&gt;Foremost&lt;/a&gt; - Extract particular kind of files using headers. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install foremost&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://linux.die.net/man/8/fsck.ext3&quot;&gt;Fsck.ext4&lt;/a&gt; - Used to fix corrupt filesystems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://malzilla.sourceforge.net/&quot;&gt;Malzilla&lt;/a&gt; - Malware hunting tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.netresec.com/?page=NetworkMiner&quot;&gt;NetworkMiner&lt;/a&gt; - Network Forensic Analysis Tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://malzilla.sourceforge.net/downloads.html&quot;&gt;PDF Streams Inflater&lt;/a&gt; - Find and extract zlib files compressed in PDF files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.libpng.org/pub/png/apps/pngcheck.html&quot;&gt;Pngcheck&lt;/a&gt; - Verifies the integrity of PNG and dump all of the chunk-level information in human-readable form. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install pngcheck&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.nirsoft.net/utils/resources_extract.html&quot;&gt;ResourcesExtract&lt;/a&gt; - Extract various filetypes from exes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/williballenthin/shellbags&quot;&gt;Shellbags&lt;/a&gt; - Investigate NT_USER.dat files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbmlabs.com/notes/snow_whitespace_steganography_tool&quot;&gt;Snow&lt;/a&gt; - A Whitespace Steganography Tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/snovvcrash/usbrip&quot;&gt;USBRip&lt;/a&gt; - Simple CLI forensics tool for tracking USB device artifacts (history of USB events) on GNU/Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/volatilityfoundation/volatility&quot;&gt;Volatility&lt;/a&gt; - To investigate memory dumps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wireshark.org&quot;&gt;Wireshark&lt;/a&gt; - Used to analyze pcap or pcapng files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Registry Viewers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nirsoft.net/utils/offline_registry_view.html&quot;&gt;OfflineRegistryView&lt;/a&gt; - Simple tool for Windows that allows you to read offline Registry files from external drive and view the desired Registry key in .reg file format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://accessdata.com/product-download/registry-viewer-2-0-0&quot;&gt;Registry Viewer®&lt;/a&gt; - Used to view Windows registries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Networking&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Networking challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertdavidgraham/masscan&quot;&gt;Masscan&lt;/a&gt; - Mass IP port scanner, TCP port scanner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://linoxide.com/monitoring-2/monit-linux/&quot;&gt;Monit&lt;/a&gt; - A linux tool to check a host on the network (and other non-network activities).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GouveaHeitor/nipe&quot;&gt;Nipe&lt;/a&gt; - Nipe is a script to make Tor Network your default gateway.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nmap.org/&quot;&gt;Nmap&lt;/a&gt; - An open source utility for network discovery and security auditing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wireshark.org/&quot;&gt;Wireshark&lt;/a&gt; - Analyze the network dumps. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install wireshark&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zeek.org&quot;&gt;Zeek&lt;/a&gt; - An open-source network security monitor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zmap.io/&quot;&gt;Zmap&lt;/a&gt; - An open-source network scanner.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reversing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Reversing challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/androguard/androguard&quot;&gt;Androguard&lt;/a&gt; - Reverse engineer Android applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/angr/angr&quot;&gt;Angr&lt;/a&gt; - platform-agnostic binary analysis framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lxdvs/apk2gold&quot;&gt;Apk2Gold&lt;/a&gt; - Yet another Android decompiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ibotpeaches.github.io/Apktool/&quot;&gt;ApkTool&lt;/a&gt; - Android Decompiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/programa-stic/barf-project&quot;&gt;Barf&lt;/a&gt; - Binary Analysis and Reverse engineering Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://binary.ninja/&quot;&gt;Binary Ninja&lt;/a&gt; - Binary analysis framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/binutils/binutils.html&quot;&gt;BinUtils&lt;/a&gt; - Collection of binary tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devttys0/binwalk&quot;&gt;BinWalk&lt;/a&gt; - Analyze, reverse engineer, and extract firmware images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BoomerangDecompiler/boomerang&quot;&gt;Boomerang&lt;/a&gt; - Decompile x86/SPARC/PowerPC/ST-20 binaries to C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/docileninja/ctf_import&quot;&gt;ctf_import&lt;/a&gt; – run basic functions from stripped binaries cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fkie-cad/cwe_checker&quot;&gt;cwe_checker&lt;/a&gt; - cwe_checker finds vulnerable patterns in binary executables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kirschju/demovfuscator&quot;&gt;demovfuscator&lt;/a&gt; - A work-in-progress deobfuscator for movfuscated binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/frida/&quot;&gt;Frida&lt;/a&gt; - Dynamic Code Injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/gdb/&quot;&gt;GDB&lt;/a&gt; - The GNU project debugger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hugsy/gef&quot;&gt;GEF&lt;/a&gt; - GDB plugin.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghidra-sre.org/&quot;&gt;Ghidra&lt;/a&gt; - Open Source suite of reverse engineering tools. Similar to IDA Pro.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hopperapp.com/&quot;&gt;Hopper&lt;/a&gt; - Reverse engineering tool (disassembler) for OSX and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hex-rays.com/products/ida/&quot;&gt;IDA Pro&lt;/a&gt; - Most used Reversing software.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skylot/jadx&quot;&gt;Jadx&lt;/a&gt; - Decompile Android files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.javadecompilers.com&quot;&gt;Java Decompilers&lt;/a&gt; - An online decompiler for Java and Android APKs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Storyyeller/Krakatau&quot;&gt;Krakatau&lt;/a&gt; - Java decompiler and disassembler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sensepost/objection&quot;&gt;Objection&lt;/a&gt; - Runtime Mobile Exploration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/longld/peda&quot;&gt;PEDA&lt;/a&gt; - GDB plugin (only python2.7).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://software.intel.com/en-us/articles/pin-a-dynamic-binary-instrumentation-tool&quot;&gt;Pin&lt;/a&gt; - A dynamic binary instrumentaion tool by Intel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/korcankaraokcu/PINCE&quot;&gt;PINCE&lt;/a&gt; - GDB front-end/reverse engineering tool, focused on game-hacking and automation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTheCoolHut/PinCTF&quot;&gt;PinCTF&lt;/a&gt; - A tool which uses intel pin for Side Channel Analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joelpx/plasma&quot;&gt;Plasma&lt;/a&gt; - An interactive disassembler for x86/ARM/MIPS which can generate indented pseudo-code with colored syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pwndbg/pwndbg&quot;&gt;Pwndbg&lt;/a&gt; - A GDB plugin that provides a suite of utilities to hack around GDB easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radare/radare2&quot;&gt;radare2&lt;/a&gt; - A portable reversing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JonathanSalwan/Triton/&quot;&gt;Triton&lt;/a&gt; - Dynamic Binary Analysis (DBA) framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gstarnberger/uncompyle&quot;&gt;Uncompyle&lt;/a&gt; - Decompile Python 2.7 binaries (.pyc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.windbg.org/&quot;&gt;WinDbg&lt;/a&gt; - Windows debugger distributed by Microsoft.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://reverse.lostrealm.com/tools/xocopy.html&quot;&gt;Xocopy&lt;/a&gt; - Program that can copy executables with execute, but no read permission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Z3Prover/z3&quot;&gt;Z3&lt;/a&gt; - A theorem prover from Microsoft Research.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;JavaScript Deobfuscators&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://relentless-coding.org/projects/jsdetox/install&quot;&gt;Detox&lt;/a&gt; - A Javascript malware analysis tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kahusecurity.com/posts/revelo_javascript_deobfuscator.html&quot;&gt;Revelo&lt;/a&gt; - Analyze obfuscated Javascript code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;SWF Analyzers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CyberShadow/RABCDAsm&quot;&gt;RABCDAsm&lt;/a&gt; - Collection of utilities including an ActionScript 3 assembler/disassembler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.swftools.org/&quot;&gt;Swftools&lt;/a&gt; - Collection of utilities to work with SWF files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitbucket.org/Alexander_Hanel/xxxswf&quot;&gt;Xxxswf&lt;/a&gt; - A Python script for analyzing Flash files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Services&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Various kind of useful services available around the internet&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://cow.cat/cswsh.html&quot;&gt;CSWSH&lt;/a&gt; - Cross-Site WebSocket Hijacking Tester.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://requestbin.com/&quot;&gt;Request Bin&lt;/a&gt; - Lets you inspect http requests to a particular url.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Steganography&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Steganography challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aperisolve.fr/&quot;&gt;AperiSolve&lt;/a&gt; - Aperi&#39;Solve is a platform which performs layer analysis on image (open-source).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.imagemagick.org/script/convert.php&quot;&gt;Convert&lt;/a&gt; - Convert images b/w formats and apply filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://manpages.ubuntu.com/manpages/trusty/man1/exif.1.html&quot;&gt;Exif&lt;/a&gt; - Shows EXIF information in JPEG files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://linux.die.net/man/1/exiftool&quot;&gt;Exiftool&lt;/a&gt; - Read and write meta information in files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.exiv2.org/manpage.html&quot;&gt;Exiv2&lt;/a&gt; - Image metadata manipulation tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sourceforge.net/projects/image-steg/&quot;&gt;Image Steganography&lt;/a&gt; - Embeds text and files in images with optional encryption. Easy-to-use UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://incoherency.co.uk/image-steganography&quot;&gt;Image Steganography Online&lt;/a&gt; - This is a client-side Javascript tool to steganographically hide images inside the lower &quot;bits&quot; of other images&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot;&gt;ImageMagick&lt;/a&gt; - Tool for manipulating images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=outguess+&amp;amp;apropos=0&amp;amp;sektion=0&amp;amp;manpath=FreeBSD+Ports+5.1-RELEASE&amp;amp;format=html&quot;&gt;Outguess&lt;/a&gt; - Universal steganographic tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://packages.debian.org/sid/pngtools&quot;&gt;Pngtools&lt;/a&gt; - For various analysis related to PNGs. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;apt-get install pngtools&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Y-Vladimir/SmartDeblur&quot;&gt;SmartDeblur&lt;/a&gt; - Used to deblur and fix defocused images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openhub.net/p/steganabara&quot;&gt;Steganabara&lt;/a&gt; - Tool for stegano analysis written in Java.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stylesuxx.github.io/steganography/&quot;&gt;SteganographyOnline&lt;/a&gt; - Online steganography encoder and decoder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://linux.die.net/man/1/stegbreak&quot;&gt;Stegbreak&lt;/a&gt; - Launches brute-force dictionary attacks on JPG image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Paradoxis/StegCracker&quot;&gt;StegCracker&lt;/a&gt; - Steganography brute-force utility to uncover hidden data inside files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evyatarmeged/stegextract&quot;&gt;stegextract&lt;/a&gt; - Detect hidden files and text in images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://steghide.sourceforge.net/&quot;&gt;Steghide&lt;/a&gt; - Hide data in various kind of images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://georgeom.net/StegOnline/upload&quot;&gt;StegOnline&lt;/a&gt; - Conduct a wide range of image steganography operations, such as concealing/revealing files hidden within bits (open-source).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caesum.com/handbook/Stegsolve.jar&quot;&gt;Stegsolve&lt;/a&gt; - Apply various steganography techniques to images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zed-0xff/zsteg/&quot;&gt;Zsteg&lt;/a&gt; - PNG/BMP analysis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Web&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools used for solving Web challenges&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portswigger.net/burp&quot;&gt;BurpSuite&lt;/a&gt; - A graphical tool to testing website security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/commixproject/commix&quot;&gt;Commix&lt;/a&gt; - Automated All-in-One OS Command Injection and Exploitation Tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/hackbartool/&quot;&gt;Hackbar&lt;/a&gt; - Firefox addon for easy web exploitation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Projects/OWASP_Zed_Attack_Proxy_Project&quot;&gt;OWASP ZAP&lt;/a&gt; - Intercepting proxy to replay, debug, and fuzz HTTP requests and responses&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&quot;&gt;Postman&lt;/a&gt; - Add on for chrome for debugging network requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evyatarmeged/Raccoon&quot;&gt;Raccoon&lt;/a&gt; - A high performance offensive security tool for reconnaissance and vulnerability scanning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sqlmapproject/sqlmap&quot;&gt;SQLMap&lt;/a&gt; - Automatic SQL injection and database takeover tool. &lt;code&gt;pip install sqlmap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresriancho/w3af&quot;&gt;W3af&lt;/a&gt; - Web Application Attack and Audit Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://xsser.sourceforge.net/&quot;&gt;XSSer&lt;/a&gt; - Automated XSS testor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Where to discover about CTF&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Operating Systems&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Penetration testing and security lab Operating Systems&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://androidtamer.com/&quot;&gt;Android Tamer&lt;/a&gt; - Based on Debian.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://backbox.org/&quot;&gt;BackBox&lt;/a&gt; - Based on Ubuntu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blackarch.org/&quot;&gt;BlackArch Linux&lt;/a&gt; - Based on Arch Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://labs.fedoraproject.org/security/&quot;&gt;Fedora Security Lab&lt;/a&gt; - Based on Fedora.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kali.org/&quot;&gt;Kali Linux&lt;/a&gt; - Based on Debian.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.parrotsec.org/&quot;&gt;Parrot Security OS&lt;/a&gt; - Based on Debian.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.pentoo.ch/&quot;&gt;Pentoo&lt;/a&gt; - Based on Gentoo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://urix.us/&quot;&gt;URIX OS&lt;/a&gt; - Based on openSUSE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wifislax.com/&quot;&gt;Wifislax&lt;/a&gt; - Based on Slackware.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Malware analysts and reverse-engineering&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fireeye/flare-vm/&quot;&gt;Flare VM&lt;/a&gt; - Based on Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://remnux.org/&quot;&gt;REMnux&lt;/a&gt; - Based on Debian.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Starter Packs&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Collections of installer scripts, useful tools&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zardus/ctf-tools&quot;&gt;CTF Tools&lt;/a&gt; - Collection of setup scripts to install various security research tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jlevitsk/lazykali&quot;&gt;LazyKali&lt;/a&gt; - A 2016 refresh of LazyKali which simplifies install of tools and configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tutorials&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tutorials to learn how to play CTFs&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trailofbits.github.io/ctf/&quot;&gt;CTF Field Guide&lt;/a&gt; - Field Guide by Trails of Bits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctfs.github.io/resources/&quot;&gt;CTF Resources&lt;/a&gt; - Start Guide maintained by community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.endgame.com/blog/how-get-started-ctf&quot;&gt;How to Get Started in CTF&lt;/a&gt; - Short guideline for CTF beginners by Endgame&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoppersroppers.org/courseCTF.html&quot;&gt;Intro. to CTF Course&lt;/a&gt; - A free course that teaches beginners the basics of forensics, crypto, and web-ex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCa6eh7gCkpPo5XXUDfygQQA&quot;&gt;IppSec&lt;/a&gt; - Video tutorials and walkthroughs of popular CTF platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w&quot;&gt;LiveOverFlow&lt;/a&gt; - Video tutorials on Exploitation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xairy/mipt-ctf&quot;&gt;MIPT CTF&lt;/a&gt; - A small course for beginners in CTFs (in Russian).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Wargames&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Always online CTFs&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://backdoor.sdslabs.co/&quot;&gt;Backdoor&lt;/a&gt; - Security Platform by SDSLabs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crackmes.one/&quot;&gt;Crackmes&lt;/a&gt; - Reverse Engineering Challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cryptohack.org/&quot;&gt;CryptoHack&lt;/a&gt; - Fun cryptography challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echoctf.red/&quot;&gt;echoCTF.RED&lt;/a&gt; - Online CTF with a variety of targets to attack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exploit-exercises.lains.space/&quot;&gt;Exploit Exercises&lt;/a&gt; - Variety of VMs to learn variety of computer security issues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploit.education&quot;&gt;Exploit.Education&lt;/a&gt; - Variety of VMs to learn variety of computer security issues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Samuirai/gracker&quot;&gt;Gracker&lt;/a&gt; - Binary challenges having a slow learning curve, and write-ups for each level.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hackthebox.eu&quot;&gt;Hack The Box&lt;/a&gt; - Weekly CTFs for all types of security enthusiasts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hackthissite.org/&quot;&gt;Hack This Site&lt;/a&gt; - Training ground for hackers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hacker101.com/&quot;&gt;Hacker101&lt;/a&gt; - CTF from HackerOne&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacking-lab.com/&quot;&gt;Hacking-Lab&lt;/a&gt; - Ethical hacking, computer network and security challenge platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://honeyourskills.ninja/&quot;&gt;Hone Your Ninja Skills&lt;/a&gt; - Web challenges starting from basic ones.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://io.netgarage.org/&quot;&gt;IO&lt;/a&gt; - Wargame for binary challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microcorruption.com&quot;&gt;Microcorruption&lt;/a&gt; - Embedded security CTF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://overthewire.org/wargames/&quot;&gt;Over The Wire&lt;/a&gt; - Wargame maintained by OvertheWire Community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pentesterlab.com/&quot;&gt;PentesterLab&lt;/a&gt; - Variety of VM and online challenges (paid).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://2019game.picoctf.com&quot;&gt;PicoCTF&lt;/a&gt; - All year round ctf game. Questions from the yearly picoCTF competition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pwn.eonew.cn/&quot;&gt;PWN Challenge&lt;/a&gt; - Binary Exploitation Wargame.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pwnable.kr/&quot;&gt;Pwnable.kr&lt;/a&gt; - Pwn Game.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pwnable.tw/&quot;&gt;Pwnable.tw&lt;/a&gt; - Binary wargame.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pwnable.xyz/&quot;&gt;Pwnable.xyz&lt;/a&gt; - Binary Exploitation Wargame.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://reversing.kr/&quot;&gt;Reversin.kr&lt;/a&gt; - Reversing challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ringzer0team.com/&quot;&gt;Ringzer0Team&lt;/a&gt; - Ringzer0 Team Online CTF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.root-me.org/&quot;&gt;Root-Me&lt;/a&gt; - Hacking and Information Security learning platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xelenonz/game&quot;&gt;ROP Wargames&lt;/a&gt; - ROP Wargames.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidayhackchallenge.com/past-challenges/&quot;&gt;SANS HHC&lt;/a&gt; - Challenges with a holiday theme released annually and maintained by SANS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://smashthestack.org/&quot;&gt;SmashTheStack&lt;/a&gt; - A variety of wargames maintained by the SmashTheStack Community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ctf.viblo.asia&quot;&gt;Viblo CTF&lt;/a&gt; - Various amazing CTF challenges, in many different categories. Has both Practice mode and Contest mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vulnhub.com/&quot;&gt;VulnHub&lt;/a&gt; - VM-based for practical in digital security, computer application &amp;amp; network administration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://w3challs.com&quot;&gt;W3Challs&lt;/a&gt; - A penetration testing training platform, which offers various computer challenges, in various categories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://webhacking.kr&quot;&gt;WebHacking&lt;/a&gt; - Hacking challenges for web.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Self-hosted CTFs&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dvwa.co.uk/&quot;&gt;Damn Vulnerable Web Application&lt;/a&gt; - PHP/MySQL web application that is damn vulnerable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bkimminich/juice-shop-ctf&quot;&gt;Juice Shop CTF&lt;/a&gt; - Scripts and tools for hosting a CTF on &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Juice_Shop_Project&quot;&gt;OWASP Juice Shop&lt;/a&gt; easily.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Websites&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Various general websites about and on CTF&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uppusaikiran/awesome-ctf-cheatsheet#awesome-ctf-cheatsheet-&quot;&gt;Awesome CTF Cheatsheet&lt;/a&gt; - CTF Cheatsheet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ctftime.org/&quot;&gt;CTF Time&lt;/a&gt; - General information on CTF occuring around the worlds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.reddit.com/r/securityctf&quot;&gt;Reddit Security CTF&lt;/a&gt; - Reddit CTF category.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Wikis&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Various Wikis available for learning about CTFs&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bamboofox.github.io/&quot;&gt;Bamboofox&lt;/a&gt; - Chinese resources to learn CTF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teambi0s.gitlab.io/bi0s-wiki/&quot;&gt;bi0s Wiki&lt;/a&gt; - Wiki from team bi0s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uppusaikiran.github.io/hacking/Capture-the-Flag-CheatSheet/&quot;&gt;CTF Cheatsheet&lt;/a&gt; - CTF tips and tricks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isislab/Project-Ideas/wiki&quot;&gt;ISIS Lab&lt;/a&gt; - CTF Wiki by Isis lab.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenToAllCTF/Tips&quot;&gt;OpenToAll&lt;/a&gt; - CTF tips by OTA CTF team members.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Writeups Collections&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Collections of CTF write-ups&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0e85dc6eaf/CTF-Writeups&quot;&gt;0e85dc6eaf&lt;/a&gt; - Write-ups for CTF challenges by 0e85dc6eaf&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://captf.com/&quot;&gt;Captf&lt;/a&gt; - Dumped CTF challenges and materials by psifertex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ctfs/&quot;&gt;CTF write-ups (community)&lt;/a&gt; - CTF challenges + write-ups archive maintained by the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdilahrf/CTFWriteupScrapper&quot;&gt;CTFTime Scrapper&lt;/a&gt; - Scraps all writeup from CTF Time and organize which to read first.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HackThisSite/CTF-Writeups&quot;&gt;HackThisSite&lt;/a&gt; - CTF write-ups repo maintained by HackThisSite team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mzfr/ctf-writeups/&quot;&gt;Mzfr&lt;/a&gt; - CTF competition write-ups by mzfr&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Gallopsled/pwntools-write-ups&quot;&gt;pwntools writeups&lt;/a&gt; - A collection of CTF write-ups all using pwntools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SababaSec/ctf-writeups&quot;&gt;SababaSec&lt;/a&gt; - A collection of CTF write-ups by the SababaSec team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shell-storm.org/repo/CTF/&quot;&gt;Shell Storm&lt;/a&gt; - CTF challenge archive maintained by Jonathan Salwan.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/smokeleeteveryday/CTF_WRITEUPS&quot;&gt;Smoke Leet Everyday&lt;/a&gt; - CTF write-ups repo maintained by SmokeLeetEveryday team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;LICENSE&lt;/h3&gt; 
&lt;p&gt;CC0 :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react-native</title>
      <link>https://github.com/facebook/react-native</link>
      <description>&lt;p&gt;A framework for building native apps with React.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;React Native brings &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;&#39;s&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&quot;https://reactnative.dev/docs/out-of-tree-platforms&quot;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/ECOSYSTEM.md&quot;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-building-your-first-react-native-app&quot;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 Requirements&lt;/h2&gt; 
&lt;p&gt;React Native apps may target iOS 10.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&quot;https://expo.io&quot;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; 
&lt;h2&gt;🎉 Building your first React Native app&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snack.expo.io/@hramos/hello,-world!&quot;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/integration-with-existing-apps&quot;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Upgrading&lt;/h2&gt; 
&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&quot;https://reactnative.dev/docs/upgrading&quot;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;p&gt;React Native releases are discussed in the React Native Community, &lt;a href=&quot;https://github.com/react-native-community/react-native-releases&quot;&gt;&lt;strong&gt;@react-native-community/react-native-releases&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👏 How to Contribute&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h3&gt;Discussions&lt;/h3&gt; 
&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&quot;https://github.com/react-native-community/discussions-and-proposals&quot;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/LICENSE-docs&quot;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alyssaxuu/screenity</title>
      <link>https://github.com/alyssaxuu/screenity</link>
      <description>&lt;p&gt;The most powerful screen recorder &amp; annotation tool for Chrome 🎥&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Screenity&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/6hc709nFEYnEtzIIyN/giphy.gif&quot; alt=&quot;Demo&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt; The most powerful screen recorder &amp;amp; annotation tool for Chrome 🎥&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/screenity-screen-recorder/kbbdabhdfibnancpjfhlkhafgdilcnji&quot;&gt;Get it now - it&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Screenity is a feature-packed screen and camera recorder for Chrome. Annotate your screen to give feedback, emphasize your clicks, edit your recording, and much more.&lt;/p&gt; 
&lt;p&gt;Made by &lt;a href=&quot;https://alyssax.com&quot;&gt;Alyssa X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/screenity/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/screenity/master/#translating-screenity-to-other-languages&quot;&gt;Translating Screenity to other languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/screenity/master/#self-hosting-screenity&quot;&gt;Self-hosting Screenity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/screenity/master/#libraries-used&quot;&gt;Libraries used&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;🎥 Make unlimited recordings of your tab, desktop, any application, and camera
 &lt;!-- raw HTML omitted --&gt; ✏️ Annotate by drawing anywhere on the screen, adding text, and creating arrows
 &lt;!-- raw HTML omitted --&gt; 👀 Highlight your clicks, focus on your mouse, or hide it from the recording
 &lt;!-- raw HTML omitted --&gt; 🎙️ Individual microphone and computer audio controls, push to talk, and more
 &lt;!-- raw HTML omitted --&gt; ⚙️ Custom countdowns, show controls only on hover, and many other customization options
 &lt;!-- raw HTML omitted --&gt; 💾 Export as mp4, gif, and webm, or save the video directly to Google Drive
 &lt;!-- raw HTML omitted --&gt; ✂️ Trim or remove sections of your recording
 &lt;!-- raw HTML omitted --&gt; 🌐 Available in English, Catalan, Spanish (by &lt;a href=&quot;https://twitter.com/Carmen_M_A&quot;&gt;Carmen Madrazo&lt;/a&gt;), French (by &lt;a href=&quot;https://twitter.com/marie_dm_&quot;&gt;Marie&lt;/a&gt;), Portuguese, Brazilian Portuguese, German (by &lt;a href=&quot;https://github.com/codepo8&quot;&gt;Christian Heilmann&lt;/a&gt;), Korean (by &lt;a href=&quot;https://github.com/blood72&quot;&gt; Dong-Hyeon, Kim&lt;/a&gt;), Chinese (by &lt;a href=&quot;https://github.com/xkonglong&quot;&gt;xkonglong&lt;/a&gt;), and Russian (by &lt;a href=&quot;https://github.com/blinovartem&quot;&gt;Artem&lt;/a&gt;)
 &lt;!-- raw HTML omitted --&gt; ...and much more - all for free &amp;amp; no sign in needed!
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1juc1zWC2QBxYqlhpDZZUNHl3P6Tens6YiChchFcEJVw/edit?usp=sharing&quot;&gt;Here&#39;s a Google Sheet&lt;/a&gt; to compare Screenity&#39;s features with other free &amp;amp; premium screen recorders available for Chrome.&lt;/p&gt; 
&lt;h2&gt;Translating Screenity to other languages&lt;/h2&gt; 
&lt;p&gt;If you&#39;d like to translate Screenity to a new language, here&#39;s what you should do:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make sure the language you want to translate Screenity into is supported by the Chrome Store. &lt;a href=&quot;https://developer.chrome.com/docs/webstore/i18n/#choosing-locales-to-support&quot;&gt;Here&#39;s a list&lt;/a&gt; of all the supported locales.&lt;/li&gt; 
 &lt;li&gt;Create a new folder under &lt;a href=&quot;https://github.com/alyssaxuu/screenity/tree/master/_locales&quot;&gt;_locales&lt;/a&gt; with the &lt;a href=&quot;https://developer.chrome.com/docs/webstore/i18n/#choosing-locales-to-support&quot;&gt;locale name for your language&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make a copy of &lt;a href=&quot;https://github.com/alyssaxuu/screenity/blob/master/_locales/en/messages.json&quot;&gt;this file&lt;/a&gt; and translate the &quot;message&quot;. The &quot;description&quot; shouldn&#39;t be translated, it&#39;s only there to give you some context where the string will show in the extension.&lt;/li&gt; 
 &lt;li&gt;Translate the &lt;a href=&quot;https://chrome.google.com/webstore/detail/screenity-screen-recorder/kbbdabhdfibnancpjfhlkhafgdilcnji?hl=en&amp;amp;authuser=0&quot;&gt;Chrome Store description&lt;/a&gt; so it can be published there, you can simply make a comment with it when you make a pull request. &lt;a href=&quot;https://github.com/alyssaxuu/screenity/pull/39&quot;&gt;Here&#39;s an example&lt;/a&gt; of how that pull request should look like.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Before submitting the pull request, it would be helpful if you tried running the extension in the new language, to make sure everything looks right.&lt;/p&gt; 
&lt;h2&gt;Self-hosting Screenity&lt;/h2&gt; 
&lt;p&gt;You can run Screenity locally without having to install it from the Chrome Store. Here&#39;s how:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the code. In the web version of GitHub, you can do that by clicking the green &quot;Code&quot; button, and then &quot;Download ZIP&quot;.&lt;/li&gt; 
 &lt;li&gt;Go to chrome://extensions/ in your browser, and &lt;a href=&quot;https://developer.chrome.com/docs/extensions/mv2/faq/#:%7E:text=You%20can%20start%20by%20turning,a%20packaged%20extension%2C%20and%20more.&quot;&gt;enable developer mode&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Drag the folder that contains the code (make sure it&#39;s a folder and not a ZIP file, so unzip first), or click on the &quot;Load unpacked&quot; button and locate the folder.&lt;/li&gt; 
 &lt;li&gt;That&#39;s it, you will now be able to use Screenity locally. Make sure you pin it on the toolbar by clicking the &quot;puzzle&quot; icon in the toolbar and pinning Screenity.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Libraries used&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; - for better event handling and DOM manipulation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/&quot;&gt;FabricJs&lt;/a&gt; - for interactive text and arrows (optimized custom build)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ffmpeg.org/&quot;&gt;FFMPEG&lt;/a&gt; - to convert the video to GIF or MP4&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hernansartorio.com/jquery-nice-select/&quot;&gt;Jquery Nice Select&lt;/a&gt; - for better, more stylish dropdowns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leongersen/noUiSlider&quot;&gt;Nouislider&lt;/a&gt; - for the range sliders used for trimming / removing parts of the recording&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Simonwep/pickr&quot;&gt;Pickr&lt;/a&gt; - for the color picker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sampotts/plyr&quot;&gt;Plyr&lt;/a&gt; - for the video player shown when editing the recording&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;Feel free to reach out to me through email at hi@alyssax.com or &lt;a href=&quot;https://twitter.com/alyssaxuu&quot;&gt;on Twitter&lt;/a&gt; if you have any questions or feedback! Hope you find this useful 💜&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>highlightjs/highlight.js</title>
      <link>https://github.com/highlightjs/highlight.js</link>
      <description>&lt;p&gt;Javascript syntax highlighter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Highlight.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/highlight.js&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/highlight.js?label=latest&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/highlight.js&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/highlight.js/beta&quot; alt=&quot;beta&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://join.slack.com/t/highlightjs/shared_invite/zt-k1f72n07-dUsqwCYtNPz7laRm7mBCTg&quot;&gt;&lt;img src=&quot;https://badgen.net/badge/icon/slack?icon=slack&amp;amp;label&amp;amp;color=pink&quot; alt=&quot;slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://badgen.net/github/license/highlightjs/highlight.js?color=cyan&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagephobia.now.sh/result?p=highlight.js&quot;&gt;&lt;img src=&quot;https://badgen.net/packagephobia/install/highlight.js?label=npm+install&quot; alt=&quot;install size&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/size/highlightjs/cdn-release/build/highlight.min.js?label=minified&quot; alt=&quot;minified&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/highlight.js&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dw/highlight.js?label=npm+downloads&amp;amp;color=purple&quot; alt=&quot;NPM downloads weekly&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/gh/highlightjs/cdn-release&quot;&gt;&lt;img src=&quot;https://badgen.net/jsdelivr/hits/gh/highlightjs/cdn-release?label=jsDelivr+CDN&amp;amp;color=purple&quot; alt=&quot;jsDelivr CDN downloads&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://badgen.net/david/dev/highlightjs/highlight.js?label=dev+deps&quot; alt=&quot;dev deps&quot;&gt; &lt;a href=&quot;https://lgtm.com/projects/g/highlightjs/highlight.js/?mode=list&quot;&gt;&lt;img src=&quot;https://badgen.net/lgtm/grade/g/highlightjs/highlight.js/js&quot; alt=&quot;code quality&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/highlightjs/highlight.js/actions?query=workflow%3A%22Node.js+CI%22&quot;&gt;&lt;img src=&quot;https://badgen.net/github/checks/highlightjs/highlight.js?label=build&quot; alt=&quot;build and CI status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/highlightjs/highlight.js/issues&quot;&gt;&lt;img src=&quot;https://badgen.net/github/open-issues/highlightjs/highlight.js?label=issues&amp;amp;labelColor=orange&amp;amp;color=c41&quot; alt=&quot;open issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/highlightjs/highlight.js/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+welcome%22&quot;&gt;&lt;img src=&quot;https://badgen.net/github/label-issues/highlightjs/highlight.js/help%20welcome/open?labelColor=393&amp;amp;color=6c6&quot; alt=&quot;help welcome issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/highlightjs/highlight.js/issues?q=is%3Aopen+is%3Aissue+label%3A%22beginner+friendly%22&quot;&gt;&lt;img src=&quot;https://badgen.net/github/label-issues/highlightjs/highlight.js/beginner%20friendly/open?labelColor=669&amp;amp;color=99c&quot; alt=&quot;beginner friendly issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/highlightjs/highlight.js?targetFile=package.json&quot;&gt;&lt;img src=&quot;https://badgen.net/snyk/highlightjs/highlight.js&quot; alt=&quot;vulnerabilities&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Highlight.js is a syntax highlighter written in JavaScript. It works in the browser as well as on the server. It works with pretty much any markup, doesn’t depend on any framework, and has automatic language detection.&lt;/p&gt; 
&lt;h4&gt;Upgrading to Version 10&lt;/h4&gt; 
&lt;p&gt;Version 10 is one of the biggest releases in quite some time. If you&#39;re upgrading from version 9, there are some breaking changes and things you may want to double check first.&lt;/p&gt; 
&lt;p&gt;Please read &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/VERSION_10_UPGRADE.md&quot;&gt;VERSION_10_UPGRADE.md&lt;/a&gt; for high-level summary of breaking changes and any actions you may need to take. See &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/VERSION_10_BREAKING_CHANGES.md&quot;&gt;VERSION_10_BREAKING_CHANGES.md&lt;/a&gt; for a more detailed list and &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/CHANGES.md&quot;&gt;CHANGES.md&lt;/a&gt; to learn what else is new.&lt;/p&gt; 
&lt;h5&gt;Support for older versions&lt;/h5&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt; for support information.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The bare minimum for using highlight.js on a web page is linking to the library along with one of the styles and calling &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/api.html#inithighlightingonload&quot;&gt;&lt;code&gt;initHighlightingOnLoad&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/path/to/styles/default.css&quot;&amp;gt;
&amp;lt;script src=&quot;/path/to/highlight.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will find and highlight code inside of &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags; it tries to detect the language automatically. If automatic detection doesn’t work for you, you can specify the language in the &lt;code&gt;class&lt;/code&gt; attribute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;html&quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Classes may also be prefixed with either &lt;code&gt;language-&lt;/code&gt; or &lt;code&gt;lang-&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;language-html&quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Plaintext and Disabling Highlighting&lt;/h3&gt; 
&lt;p&gt;To style arbitrary text like code, but without any highlighting, use the &lt;code&gt;plaintext&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;plaintext&quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To disable highlighting of a tag completely, use the &lt;code&gt;nohighlight&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;nohighlight&quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported Languages&lt;/h3&gt; 
&lt;p&gt;Highlight.js supports over 180 different languages in the core library. There are also 3rd party language plugins available for additional languages. You can find the full list of supported languages in &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md&quot;&gt;SUPPORTED_LANGUAGES.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Custom Scenarios&lt;/h2&gt; 
&lt;p&gt;When you need a bit more control over the initialization of highlight.js, you can use the &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/api.html#highlightblock-block&quot;&gt;&lt;code&gt;highlightBlock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/api.html#configure-options&quot;&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; functions. This allows you to better control &lt;em&gt;what&lt;/em&gt; to highlight and &lt;em&gt;when&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Here’s the equivalent of calling &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/api.html#inithighlightingonload&quot;&gt;&lt;code&gt;initHighlightingOnLoad&lt;/code&gt;&lt;/a&gt; using only vanilla JS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.addEventListener(&#39;DOMContentLoaded&#39;, (event) =&amp;gt; {
  document.querySelectorAll(&#39;pre code&#39;).forEach((block) =&amp;gt; {
    hljs.highlightBlock(block);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to the documentation for &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/api.html#configure-options&quot;&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; options.&lt;/p&gt; 
&lt;h3&gt;Using custom HTML elements for code blocks&lt;/h3&gt; 
&lt;p&gt;We strongly recommend &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/code&gt; wrapping for code blocks. It&#39;s quite semantic and &quot;just works&quot; out of the box with zero fiddling. It is possible to use other HTML elements (or combos), but you may need to pay special attention to preserving linebreaks.&lt;/p&gt; 
&lt;p&gt;Let&#39;s say your markup for code blocks uses divs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&#39;code&#39;&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To highlight such blocks manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// first, find all the div.code blocks
document.querySelectorAll(&#39;div.code&#39;).forEach(block =&amp;gt; {
  // then highlight each
  hljs.highlightBlock(block);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Without using a tag that preserves linebreaks (like &lt;code&gt;pre&lt;/code&gt;) you&#39;ll need some additional CSS to help preserve them. You could also &lt;a href=&quot;https://github.com/highlightjs/highlight.js/issues/2559&quot;&gt;pre and post-process line breaks with a plug-in&lt;/a&gt;, but &lt;em&gt;we recommend using CSS&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;To preserve linebreaks inside a &lt;code&gt;div&lt;/code&gt; using CSS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;div.code {
  white-space: pre;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using with Vue.js&lt;/h2&gt; 
&lt;p&gt;Simply register the plugin with Vue:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Vue.use(hljs.vuePlugin);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you&#39;ll be provided with a &lt;code&gt;highlightjs&lt;/code&gt; component for use in your templates:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;div id=&quot;app&quot;&amp;gt;
    &amp;lt;!-- bind to a data property named `code` --&amp;gt;
    &amp;lt;highlightjs autodetect :code=&quot;code&quot; /&amp;gt;
    &amp;lt;!-- or literal code works as well --&amp;gt;
    &amp;lt;highlightjs language=&#39;javascript&#39; code=&quot;var x = 5;&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Web Workers&lt;/h2&gt; 
&lt;p&gt;You can run highlighting inside a web worker to avoid freezing the browser window while dealing with very big chunks of code.&lt;/p&gt; 
&lt;p&gt;In your main script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;addEventListener(&#39;load&#39;, () =&amp;gt; {
  const code = document.querySelector(&#39;#code&#39;);
  const worker = new Worker(&#39;worker.js&#39;);
  worker.onmessage = (event) =&amp;gt; { code.innerHTML = event.data; }
  worker.postMessage(code.textContent);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In worker.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;onmessage = (event) =&amp;gt; {
  importScripts(&#39;&amp;lt;path&amp;gt;/highlight.min.js&#39;);
  const result = self.hljs.highlightAuto(event.data);
  postMessage(result.value);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Node.js&lt;/h2&gt; 
&lt;p&gt;You can use highlight.js with node to highlight content before sending it to the browser. Make sure to use the &lt;code&gt;.value&lt;/code&gt; property to get the formatted html. For more info about the returned object refer to the &lt;a href=&quot;https://highlightjs.readthedocs.io/en/latest/api.html&quot;&gt;api docs&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// require the highlight.js library, including all languages
const hljs = require(&#39;./highlight.js&#39;);
const highlightedCode = hljs.highlightAuto(&#39;&amp;lt;span&amp;gt;Hello World!&amp;lt;/span&amp;gt;&#39;).value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or for a smaller footprint... load just the languages you need.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const hljs = require(&#39;highlight.js/lib/core&#39;);  // require only the core library
// separately require languages
hljs.registerLanguage(&#39;xml&#39;, require(&#39;highlight.js/lib/languages/xml&#39;));

const highlightedCode = hljs.highlight(&#39;xml&#39;, &#39;&amp;lt;span&amp;gt;Hello World!&amp;lt;/span&amp;gt;&#39;).value
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ES6 Modules&lt;/h2&gt; 
&lt;p&gt;First, you&#39;ll likely install via &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; -- see &lt;a href=&quot;https://raw.githubusercontent.com/highlightjs/highlight.js/master/#getting-the-library&quot;&gt;Getting the Library&lt;/a&gt; below.&lt;/p&gt; 
&lt;p&gt;In your application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import hljs from &#39;highlight.js&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The default import imports all languages. Therefore it is likely to be more efficient to import only the library and the languages you need:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import hljs from &#39;highlight.js/lib/core&#39;;
import javascript from &#39;highlight.js/lib/languages/javascript&#39;;
hljs.registerLanguage(&#39;javascript&#39;, javascript);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set the syntax highlighting style, if your build tool processes CSS from your JavaScript entry point, you can also import the stylesheet directly as modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import hljs from &#39;highlight.js/lib/core&#39;;
import &#39;highlight.js/styles/github.css&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting the Library&lt;/h2&gt; 
&lt;p&gt;You can get highlight.js as a hosted, or custom-build, browser script or as a server module. Right out of the box the browser script supports both AMD and CommonJS, so if you wish you can use RequireJS or Browserify without having to build from source. The server module also works perfectly fine with Browserify, but there is the option to use a build specific to browsers rather than something meant for a server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Do not link to GitHub directly.&lt;/strong&gt; The library is not supposed to work straight from the source, it requires building. If none of the pre-packaged options work for you refer to the &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/building-testing.html&quot;&gt;building documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Almond.&lt;/strong&gt; You need to use the optimizer to give the module a name. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;r.js -o name=hljs paths.hljs=/path/to/highlight out=highlight.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CDN Hosted&lt;/h3&gt; 
&lt;p&gt;A prebuilt version of Highlight.js bundled with many common languages is hosted by several popular CDNs. When using Highlight.js via CDN you can use Subresource Integrity for additional security. For details see &lt;a href=&quot;https://github.com/highlightjs/cdn-release/blob/master/DIGESTS.md&quot;&gt;DIGESTS.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;cdnjs&lt;/strong&gt; (&lt;a href=&quot;https://cdnjs.com/libraries/highlight.js&quot;&gt;link&lt;/a&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/styles/default.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/highlight.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- and it&#39;s easy to individually load additional languages --&amp;gt;
&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.1/languages/go.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;jsdelivr&lt;/strong&gt; (&lt;a href=&quot;https://www.jsdelivr.com/package/gh/highlightjs/cdn-release&quot;&gt;link&lt;/a&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.1/build/styles/default.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.1/build/highlight.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- and it&#39;s easy to individually load additional languages --&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.1/build/languages/go.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;unpkg&lt;/strong&gt; (&lt;a href=&quot;https://unpkg.com/browse/@highlightjs/cdn-assets/&quot;&gt;link&lt;/a&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/@highlightjs/cdn-assets@10.4.1/styles/default.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;https://unpkg.com/@highlightjs/cdn-assets@10.4.1/highlight.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- and it&#39;s easy to individually load additional languages --&amp;gt;
&amp;lt;script src=&quot;https://unpkg.com/@highlightjs/cdn-assets@10.4.1/languages/go.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;The CDN-hosted &lt;code&gt;highlight.min.js&lt;/code&gt; package doesn&#39;t bundle every language.&lt;/em&gt; It would be very large. You can find our list of &quot;common&quot; languages that we bundle by default on our &lt;a href=&quot;https://highlightjs.org/download/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Self Hosting&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://highlightjs.org/download/&quot;&gt;download page&lt;/a&gt; can quickly generate a custom bundle including only the languages you need.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can build a browser package from &lt;a href=&quot;https://raw.githubusercontent.com/highlightjs/highlight.js/master/#source&quot;&gt;source&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node tools/build.js -t browser :common
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See our &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/building-testing.html&quot;&gt;building documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Building from source should always result in the smallest size builds. The website download page is optimized for speed, not size.&lt;/p&gt; 
&lt;h4&gt;Prebuilt CDN assets&lt;/h4&gt; 
&lt;p&gt;You can also download and self-host the same assets we serve up via our own CDNs. We publish those builds to the &lt;a href=&quot;https://github.com/highlightjs/cdn-release&quot;&gt;cdn-release&lt;/a&gt; GitHub repository. You can easily pull individual files off the CDN endpoints with &lt;code&gt;curl&lt;/code&gt;, etc; if say you only needed &lt;code&gt;highlight.min.js&lt;/code&gt; and a single CSS file.&lt;/p&gt; 
&lt;p&gt;There is also an npm package &lt;a href=&quot;https://www.npmjs.com/package/@highlightjs/cdn-assets&quot;&gt;@highlightjs/cdn-assets&lt;/a&gt; if pulling the assets in via &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; would be easier for your build process.&lt;/p&gt; 
&lt;h3&gt;NPM / Node.js server module&lt;/h3&gt; 
&lt;p&gt;Highlight.js can also be used on the server. The package with all supported languages can be installed from NPM or Yarn:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install highlight.js
# or
yarn add highlight.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can build it from &lt;a href=&quot;https://raw.githubusercontent.com/highlightjs/highlight.js/master/#source&quot;&gt;source&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node tools/build.js -t node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See our &lt;a href=&quot;http://highlightjs.readthedocs.io/en/latest/building-testing.html&quot;&gt;building documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Source&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/highlightjs/&quot;&gt;Current source&lt;/a&gt; is always available on GitHub.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Highlight.js is released under the BSD License. See &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;p&gt;The official site for the library is at &lt;a href=&quot;https://highlightjs.org/&quot;&gt;https://highlightjs.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Further in-depth documentation for the API and other topics is at &lt;a href=&quot;http://highlightjs.readthedocs.io/&quot;&gt;http://highlightjs.readthedocs.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Authors and contributors are listed in the &lt;a href=&quot;https://github.com/highlightjs/highlight.js/blob/master/AUTHORS.txt&quot;&gt;AUTHORS.txt&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alibaba/form-render</title>
      <link>https://github.com/alibaba/form-render</link>
      <description>&lt;p&gt;🚴‍♀️ 易用的跨组件体系的表单渲染引擎 - 通过 JSON Schema 快速生成自定义表单配置界面&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;通过 JSON Schema 生成标准 Form，常用于自定义搭建配置界面生成&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;了解&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;设计理念
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;schema 编辑器
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;Playground
  &lt;!-- raw HTML omitted --&gt; / 
  &lt;!-- raw HTML omitted --&gt;Code Sandbox
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;常见场景
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;后期规划
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;效果&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;优势&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;如上图，使用 &lt;a href=&quot;https://x-render.gitee.io/schema-generator/&quot;&gt;Schema 编辑器&lt;/a&gt; 快速生成可实现低上手成本、快速搭建&lt;/li&gt; 
 &lt;li&gt;支持 Ant Design 和 Fusion Design 主流的视觉主题&lt;/li&gt; 
 &lt;li&gt;使用 JSON Schema 标准协议描述表单配置，并搭配丰富类型且可扩展的组件&lt;/li&gt; 
 &lt;li&gt;支持 1 排 N、横纵排、支持对象无限嵌套、自定义正则校验、自定义样式组件、列表拖拽等特性&lt;/li&gt; 
 &lt;li&gt;已在阿里云、淘宝、天猫、飞猪、亚博科技、安全智能、新零售行业工作台、人工智能实验室等多 BU 多场景使用，简单使用同时支持复杂场景使用&lt;/li&gt; 
 &lt;li&gt;使用上有详细文档，维护上有专人支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm i form-render
# or
yarn add form-render
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;同时安装依赖的组件库 (依赖哪个装哪个，天然支持 antd 和 fusion 两套。其他的组件库可通过 widgets 的方式传入，见文档 - 高级功能 - 自定义组件)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 例如
yarn add antd
# 或者
yarn add @alifd/next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注：一般来说，想使用 form-render 的 antd 主题的项目，dependencies 里肯定装了 antd。这里强调一下这步，主要是针对想尝试写个 demo 玩玩的同学，记得要安装对应的 ui 组件库&lt;/p&gt; 
&lt;h2&gt;快速使用&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { useState } from &#39;react&#39;;
// 使用 Ant Design 风格
import FormRender from &#39;form-render/lib/antd&#39;;
// 使用 Fusion 风格
// import FormRender from &#39;form-render/lib/fusion&#39;;
// import &#39;@alifd/next/dist/next.min.css&#39;;

const schema = {
  type: &#39;object&#39;,
  properties: {
    string: {
      title: &#39;字符串&#39;,
      type: &#39;string&#39;,
      &#39;ui:disabled&#39;: true,
    },
    select: {
      title: &#39;单选&#39;,
      type: &#39;string&#39;,
      enum: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;],
      enumNames: [&#39;早&#39;, &#39;中&#39;, &#39;晚&#39;],
      &#39;ui:width&#39;: &#39;50%&#39;, // uiSchema 合并到 schema 中（推荐写法，书写便捷）
    },
  },
};

function Demo() {
  const [formData, setData] = useState({});
  const [valid, setValid] = useState([]);

  const onSubmit = () =&amp;gt; {
    // valid 是校验判断的数组，valid 长度为 0 代表校验全部通过
    if (valid.length &amp;gt; 0) {
      alert(`校验未通过字段：${valid.toString()}`);
    } else {
      alert(JSON.stringify(formData, null, 2));
    }
  };

  return (
    &amp;lt;div style={{ maxWidth: 600 }}&amp;gt;
      &amp;lt;FormRender
        schema={schema}
        formData={formData}
        onChange={setData}
        onValidate={setValid}
        displayType=&quot;row&quot; // 详细配置见下
      /&amp;gt;
      &amp;lt;button onClick={onSubmit}&amp;gt;提交&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default Demo;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;| Prop | Type | Required | Default | Description | | ---------------- | :-----------------: | :------: | :------: | :---------------------------------------------------------------------------: | | &lt;strong&gt;schema&lt;/strong&gt; | &lt;code&gt;Object&lt;/code&gt; | ✓ | {} | 详见 &lt;a href=&quot;https://raw.githubusercontent.com/alibaba/form-render/master/docs/config/schema.md&quot;&gt;schema 配置&lt;/a&gt; | | &lt;strong&gt;uiSchema&lt;/strong&gt; | &lt;code&gt;Object&lt;/code&gt; | | {} | 详见 &lt;a href=&quot;https://raw.githubusercontent.com/alibaba/form-render/master/docs/config/uiSchema.md&quot;&gt;uiSchema 配置&lt;/a&gt;（&lt;strong&gt;一般建议合并到 &lt;code&gt;schema&lt;/code&gt;&lt;/strong&gt;） | | &lt;strong&gt;formData&lt;/strong&gt; | &lt;code&gt;Object&lt;/code&gt; | | {} | 配置表单数据 | | &lt;strong&gt;onChange&lt;/strong&gt; | &lt;code&gt;Function&lt;/code&gt; | ✓ | () =&amp;gt; {} | 数据更改回调函数 | | &lt;strong&gt;onValidate&lt;/strong&gt; | &lt;code&gt;Function&lt;/code&gt; | | () =&amp;gt; {} | 表单输入校验回调 | | &lt;strong&gt;displayType&lt;/strong&gt; | &lt;code&gt;String&lt;/code&gt; | | column | 设置表单横向排列或者纵向排序&lt;code&gt;column&lt;/code&gt;/&lt;code&gt;row&lt;/code&gt; | | &lt;strong&gt;showDescIcon&lt;/strong&gt; | &lt;code&gt;Boolean&lt;/code&gt; | | false | 描述是否用 tooltip 展示。&lt;code&gt;displayType&lt;/code&gt;为 &lt;code&gt;row&lt;/code&gt;时建议设为 &lt;code&gt;true&lt;/code&gt; | | &lt;strong&gt;readOnly&lt;/strong&gt; | &lt;code&gt;Boolean&lt;/code&gt; | | false | 预览模式/可编辑模式 | | &lt;strong&gt;labelWidth&lt;/strong&gt; | &lt;code&gt;Number&lt;/code&gt; / &lt;code&gt;String&lt;/code&gt; | | 110 | 全局设置 label 长度(默认 110)。数字值单位为 px，也可使用&#39;20%&#39;/&#39;2rem&#39;等 | | &lt;strong&gt;widgets&lt;/strong&gt; | &lt;code&gt;Object&lt;/code&gt; | | {} | 自定义组件 |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;注 1：&lt;/strong&gt; 设置表单 &lt;code&gt;displayType&lt;/code&gt; 为 row 时候，请设置 &lt;code&gt;showDescIcon&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt;，隐藏说明，效果会更好&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;注 2：&lt;/strong&gt; &lt;strong&gt;onChange&lt;/strong&gt; 方法会用于初始化表单 data，如果不写会造成没有初始值的表单元素无法渲染（出现不报错也不显示的情况）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;注 3：&lt;/strong&gt; FormRender 默认布局会占满它的父级元素，建议用一个&lt;code&gt;div&lt;/code&gt;包裹 FormRender 用于表单布局样式调整&lt;/p&gt; 
&lt;h3&gt;不常用 API&lt;/h3&gt; 
&lt;p&gt;| Prop | Type | usage | Default | Description | | ---------------- | :--------: | :-------: | :-------: | :----------------------------------------------------------------------: | | &lt;strong&gt;mapping&lt;/strong&gt; | &lt;code&gt;Object&lt;/code&gt; | sometimes | undefined | 用于修改默认组件映射表，一般用于让自定义组件作为默认选择(详见自定义组件) | | &lt;strong&gt;column&lt;/strong&gt; | &lt;code&gt;Number&lt;/code&gt; | sometimes | 1 | &lt;strong&gt;整体&lt;/strong&gt;布局 1 排 N，局部的 1 排 N 一般使用&lt;code&gt;ui:width&lt;/code&gt; | | &lt;strong&gt;useLogger&lt;/strong&gt; | &lt;code&gt;Boolean&lt;/code&gt; | debug | false | 当 useLogger 为 true 时，会在 console 展示所有的 formData 变化 | | &lt;strong&gt;name&lt;/strong&gt; | &lt;code&gt;String&lt;/code&gt; | very rare | $form | 表单的名称 | | &lt;strong&gt;showValidate&lt;/strong&gt; | &lt;code&gt;Boolean&lt;/code&gt; | very rare | true | 是否展示校验信息 | | &lt;strong&gt;onMount&lt;/strong&gt; | &lt;code&gt;Function&lt;/code&gt; | very rare | undefined | onMount 在 formData 首次计算后触发 |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/form-render/master/docs/config/props2.md&quot;&gt;详见“不常用 props”&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;更多使用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;vscode 插件：快速准确书写 schema 一直是使用者的痛点，为此我们准备了 schema 书写利器： &lt;code&gt;form-render snippets&lt;/code&gt;（vscode 插件），在 vscode 商店输入 ‘formrender’&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 TypeScript：详见&lt;a href=&quot;https://x-render.gitee.io/form-render/guide/others/faq&quot;&gt;如何在 TypeScript 项目中使用&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持 Ant Design 自定义主题不被覆盖&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;安装 webpack 插件&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install webpack-plugin-fr-theme  --save-dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;配置 webpack.config.js 文件&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const WebpackPluginFrTheme = require(&#39;webpack-plugin-fr-theme&#39;);

{
    ...
    plugins: [
      new WebpackPluginFrTheme(),
    ],
    ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;调试&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&amp;gt; git clone https://github.com/alibaba/form-render.git
&amp;gt; npm i
&amp;gt; npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;支持&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;在公司或个人项目中使用 FormRender，关注 
  &lt;!-- raw HTML omitted --&gt;Changelog
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;如果你觉得 FormRender 还不错，可以通过 Star 来表示你的喜欢&lt;/li&gt; 
 &lt;li&gt;加入钉钉聊天群帮忙解答使用问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;想贡献代码、解 BUG 或者提高文档可读性？非常欢迎一起参与进来，在提交 MR 前阅读一下 &lt;a href=&quot;https://github.com/alibaba/form-render/blob/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;感谢给 FormRender 贡献代码的你们，以及 JetBrains 提供 Free 使用！&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;协议&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;遵循 MIT 协议&lt;/li&gt; 
 &lt;li&gt;请自由地享受和参与开源&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>RobinHerbots/Inputmask</title>
      <link>https://github.com/RobinHerbots/Inputmask</link>
      <description>&lt;p&gt;Input Mask plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Inputmask&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 2010 - 2020 Robin Herbots Licensed under the MIT license (&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ZNR3EB6JTMMSS&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&quot; alt=&quot;donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/inputmask&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/inputmask.svg&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/RobinHerbots/inputmask#info=dependencies&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/RobinHerbots/inputmask.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/RobinHerbots/inputmask#info=devDependencies&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/RobinHerbots/inputmask.svg&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Inputmask is a javascript library that creates an input mask. Inputmask can run against vanilla javascript, jQuery, and jqlite.&lt;/p&gt; 
&lt;p&gt;An inputmask helps the user with the input by ensuring a predefined format. This can be useful for dates, numerics, phone numbers, ...&lt;/p&gt; 
&lt;p&gt;Highlights:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;easy to use&lt;/li&gt; 
 &lt;li&gt;optional parts anywhere in the mask&lt;/li&gt; 
 &lt;li&gt;possibility to define aliases which hide the complexity&lt;/li&gt; 
 &lt;li&gt;date / DateTime masks&lt;/li&gt; 
 &lt;li&gt;numeric masks&lt;/li&gt; 
 &lt;li&gt;lots of callbacks&lt;/li&gt; 
 &lt;li&gt;non-greedy masks&lt;/li&gt; 
 &lt;li&gt;many features can be enabled/disabled/configured by options&lt;/li&gt; 
 &lt;li&gt;supports read-only/disabled/dir=&quot;rtl&quot; attributes&lt;/li&gt; 
 &lt;li&gt;support data-inputmask attribute(s)&lt;/li&gt; 
 &lt;li&gt;alternator-mask&lt;/li&gt; 
 &lt;li&gt;regex-mask&lt;/li&gt; 
 &lt;li&gt;dynamic-mask&lt;/li&gt; 
 &lt;li&gt;preprocessing-mask&lt;/li&gt; 
 &lt;li&gt;JIT-masking&lt;/li&gt; 
 &lt;li&gt;value formatting / validating without input element&lt;/li&gt; 
 &lt;li&gt;AMD/CommonJS support&lt;/li&gt; 
 &lt;li&gt;dependencyLibs: vanilla javascript, jQuery, jqlite&lt;/li&gt; 
 &lt;li&gt;&amp;lt;input-mask&amp;gt; htmlelenent&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Demo page see &lt;a href=&quot;https://robinherbots.github.io/Inputmask/&quot;&gt;https://robinherbots.github.io/Inputmask/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.jetbrains.com/?from=inputmask&quot;&gt;Jetbrains&lt;/a&gt; for providing a free license for their excellent Webstorm IDE.&lt;br&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.browserstack.com&quot;&gt;Browserstack&lt;/a&gt; for providing a free license, so we can start automating test in different browsers and devices.&lt;br&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;dependencyLibs&lt;/h3&gt; 
&lt;p&gt;Inputmask can run against different javascript libraries. You can choose between:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;inputmask.dependencyLib (vanilla)&lt;/li&gt; 
 &lt;li&gt;inputmask.dependencyLib.jquery&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Classic web with &amp;lt;script&amp;gt; tag&lt;/h3&gt; 
&lt;p&gt;Include the js-files which you can find in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;Inputmask with jQuery as dependencylib.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;dist/jquery.inputmask.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inputmask with vanilla dependencylib.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;dist/inputmask.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you like to automatically bind the inputmask to the inputs marked with the data-inputmask- ... attributes you may also want to include the inputmask.binding.js&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;dist/bindings/inputmask.binding.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;webpack&lt;/h3&gt; 
&lt;h4&gt;Install the package&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;npm install inputmask --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Install the latest beta version&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;npm install inputmask@next --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;In your modules&lt;/h4&gt; 
&lt;p&gt;If you want to include the Inputmask and all extensions.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;var Inputmask = require(&#39;inputmask&#39;);

//es6
import Inputmask from &quot;inputmask&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;via Inputmask class&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var selector = document.getElementById(&quot;selector&quot;);

var im = new Inputmask(&quot;99-9999999&quot;);
im.mask(selector);

//or

Inputmask({&quot;mask&quot;: &quot;(999) 999-9999&quot;, ... other_options, ...}).mask(selector);
Inputmask(&quot;9-a{1,3}9{1,3}&quot;).mask(selector);
Inputmask(&quot;9&quot;, { repeat: 10 }).mask(selector);

Inputmask({ regex: &quot;\\d*&quot; }).mask(selector);
Inputmask({ regex: String.raw`\d*` }).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;via jquery plugin&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(selector).inputmask(&quot;99-9999999&quot;);  //static mask
  $(selector).inputmask({&quot;mask&quot;: &quot;(999) 999-9999&quot;}); //specifying options
  $(selector).inputmask(&quot;9-a{1,3}9{1,3}&quot;); //mask with dynamic syntax
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;via data-inputmask attribute&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input data-inputmask=&quot;&#39;alias&#39;: &#39;datetime&#39;&quot; /&amp;gt;
&amp;lt;input data-inputmask=&quot;&#39;mask&#39;: &#39;9&#39;, &#39;repeat&#39;: 10, &#39;greedy&#39; : false&quot; /&amp;gt;
&amp;lt;input data-inputmask=&quot;&#39;mask&#39;: &#39;99-9999999&#39;&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;:input&quot;).inputmask();
  or
  Inputmask().mask(document.querySelectorAll(&quot;input&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Any option can also be passed through the use of a data attribute. Use data-inputmask-&amp;lt;&lt;strong&gt;&lt;em&gt;the name of the option&lt;/em&gt;&lt;/strong&gt;&amp;gt;=&quot;value&quot;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;example1&quot; data-inputmask-clearmaskonlostfocus=&quot;false&quot; /&amp;gt;
&amp;lt;input id=&quot;example2&quot; data-inputmask-regex=&quot;[a-za-zA-Z0-9!#$%&amp;amp;&#39;*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&amp;amp;&#39;*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#example1&quot;).inputmask(&quot;99-9999999&quot;);
  $(&quot;#example2&quot;).inputmask();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;via &amp;lt;input-mask&amp;gt; element&lt;/h3&gt; 
&lt;p&gt;Use the input-mask element in your HTML code and set the options as attributes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input-mask alias=&quot;currency&quot;&amp;gt;&amp;lt;/input-mask&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Allowed HTML-elements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;input type=&quot;search&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;input type=&quot;tel&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;input type=&quot;url&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;input type=&quot;password&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;div contenteditable=&quot;true&quot;&amp;gt;&lt;/code&gt; (and all others supported by contenteditable)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;any html-element (mask text content or set maskedvalue with jQuery.val)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The allowed input types are defined in the supportsInputType option. Also see (&lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#do-not-apply&quot;&gt;input-type-ref&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Default masking definitions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;9&lt;/code&gt; : numeric&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;a&lt;/code&gt; : alphabetical&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;*&lt;/code&gt; : alphanumeric&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are more definitions defined within the extensions.
 &lt;!-- raw HTML omitted --&gt;You can find info within the js-files or by further exploring the options.&lt;/p&gt; 
&lt;h6&gt;Note:&lt;/h6&gt; 
&lt;p&gt;When your new mask is acting strange and replaces some static chars with the mask, then there is a definition that uses the char as a symbol. To solve this you need to &lt;a href=&quot;https://raw.githubusercontent.com/RobinHerbots/Inputmask/5.x/#escape-special-mask-chars&quot;&gt;double escape the char&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Masking types&lt;/h2&gt; 
&lt;h3&gt;Static masks&lt;/h3&gt; 
&lt;p&gt;These are the very basics of masking. The mask is defined and will not change during the input.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(selector).inputmask(&quot;aa-9999&quot;);  //static mask
  $(selector).inputmask({mask: &quot;aa-9999&quot;});  //static mask
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optional masks&lt;/h3&gt; 
&lt;p&gt;It is possible to define some parts in the mask is optional. This is done by using [ ].&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&#39;#test&#39;).inputmask(&#39;(99) 9999[9]-9999&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This mask will allow input like &lt;code&gt;(99) 99999-9999&lt;/code&gt; or &lt;code&gt;(99) 9999-9999&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Input =&amp;gt; 12123451234 mask =&amp;gt; (12) 12345-1234 (trigger complete)
 &lt;!-- raw HTML omitted --&gt; Input =&amp;gt; 121234-1234 mask =&amp;gt; (12) 1234-1234 (trigger complete)
 &lt;!-- raw HTML omitted --&gt; Input =&amp;gt; 1212341234 mask =&amp;gt; (12) 12341-234_ (trigger incomplete)&lt;/p&gt; 
&lt;h4&gt;skipOptionalPartCharacter&lt;/h4&gt; 
&lt;p&gt;As an extra, there is another configurable character which is used to skip an optional part in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;skipOptionalPartCharacter: &quot; &quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Input =&amp;gt; 121234 1234 mask =&amp;gt; (12) 1234-1234 (trigger complete)&lt;/p&gt; 
&lt;p&gt;When &lt;code&gt;clearMaskOnLostFocus: true&lt;/code&gt; is set in the options (default), the mask will clear out the optional part when it is not filled in, and this only in case the optional part is at the end of the mask.&lt;/p&gt; 
&lt;p&gt;For example, given:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&#39;#test&#39;).inputmask(&#39;999[-AAA]&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While the field has focus and is blank, users will see the full mask &lt;code&gt;___-___&lt;/code&gt;. When the required part of the mask is filled and the field loses focus, the user will see &lt;code&gt;123&lt;/code&gt;. When both the required and optional parts of the mask are filled out and the field loses focus, the user will see &lt;code&gt;123-ABC&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Optional masks with greedy false&lt;/h4&gt; 
&lt;p&gt;When defining an optional mask together with the greedy: false option, the inputmask will show the smallest possible mask as input first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({ mask: &quot;9[-9999]&quot;, greedy: false });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The initial mask shown will be &quot;&lt;strong&gt;_&lt;/strong&gt;&quot; instead of &quot;&lt;strong&gt;_&lt;/strong&gt;-____&quot;.&lt;/p&gt; 
&lt;h3&gt;Dynamic masks&lt;/h3&gt; 
&lt;p&gt;Dynamic masks can change during input. To define a dynamic part use { }.&lt;/p&gt; 
&lt;p&gt;{n} =&amp;gt; n repeats {n|j} =&amp;gt; n repeats, with j jitmasking {n,m} =&amp;gt; from n to m repeats {n,m|j} =&amp;gt; from n to m repeats, with j jitmasking&lt;/p&gt; 
&lt;p&gt;Also {+} and {*} is allowed. + start from 1 and * start from 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(selector).inputmask(&quot;aa-9{4}&quot;);  //static mask with dynamic syntax
  $(selector).inputmask(&quot;aa-9{1,4}&quot;);  //dynamic mask ~ the 9 def can be occur 1 to 4 times

  //email mask
  $(selector).inputmask({
    mask: &quot;*{1,20}[.*{1,20}][.*{1,20}][.*{1,20}]@*{1,20}[.*{2,6}][.*{1,2}]&quot;,
    greedy: false,
    onBeforePaste: function (pastedValue, opts) {
      pastedValue = pastedValue.toLowerCase();
      return pastedValue.replace(&quot;mailto:&quot;, &quot;&quot;);
    },
    definitions: {
      &#39;*&#39;: {
        validator: &quot;[0-9A-Za-z!#$%&amp;amp;&#39;*+/=?^_`{|}~\-]&quot;,
        casing: &quot;lower&quot;
      }
    }
  });
  //decimal mask
   Inputmask(&quot;(.999){+|1},00&quot;, {
        positionCaretOnClick: &quot;radixFocus&quot;,
        radixPoint: &quot;,&quot;,
        _radixDance: true,
        numericInput: true,
        placeholder: &quot;0&quot;,
        definitions: {
            &quot;0&quot;: {
                validator: &quot;[0-9\uFF11-\uFF19]&quot;
            }
        }
   }).mask(selector);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alternator masks&lt;/h3&gt; 
&lt;p&gt;The alternator syntax is like an &lt;strong&gt;OR&lt;/strong&gt; statement. The mask can be one of the 3 choices specified in the alternator.&lt;/p&gt; 
&lt;p&gt;To define an alternator use the |. ex: &quot;a|9&quot; =&amp;gt; a or 9 &quot;(aaa)|(999)&quot; =&amp;gt; aaa or 999 &quot;(aaa|999|9AA)&quot; =&amp;gt; aaa or 999 or 9AA&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Also make sure to read about the &lt;a href=&quot;https://raw.githubusercontent.com/RobinHerbots/Inputmask/5.x/#keepStatic&quot;&gt;keepStatic&lt;/a&gt; option.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;selector&quot;).inputmask(&quot;(99.9)|(X)&quot;, {
  definitions: {
    &quot;X&quot;: {
      validator: &quot;[xX]&quot;,
      casing: &quot;upper&quot;
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;selector&quot;).inputmask({
  mask: [&quot;99.9&quot;, &quot;X&quot;],
  definitions: {
    &quot;X&quot;: {
      validator: &quot;[xX]&quot;,
      casing: &quot;upper&quot;
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Preprocessing masks&lt;/h3&gt; 
&lt;p&gt;You can define the mask as a function that can allow you to preprocess the resulting mask. Example sorting for multiple masks or retrieving mask definitions dynamically through ajax. The preprocessing fn should return a valid mask definition.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({ mask: function () { /* do stuff */ return [&quot;[1-]AAA-999&quot;, &quot;[1-]999-AAA&quot;]; }});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JIT Masking&lt;/h3&gt; 
&lt;p&gt;Just in time masking. With the jitMasking option, you can enable jit masking. The mask will only be visible for the user-entered characters. Default: false&lt;/p&gt; 
&lt;p&gt;Value can be true or a threshold number or false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask(&quot;datetime&quot;, { jitMasking: true }).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Define custom definitions&lt;/h2&gt; 
&lt;p&gt;You can define your own definitions to use in your mask.
 &lt;!-- raw HTML omitted --&gt;Start by choosing a masksymbol.&lt;/p&gt; 
&lt;h3&gt;validator(chrs, maskset, pos, strict, opts)&lt;/h3&gt; 
&lt;p&gt;Next, define your validator. The validator can be a regular expression or a function.&lt;/p&gt; 
&lt;p&gt;The return value of a validator can be true, false, or a command object.&lt;/p&gt; 
&lt;h4&gt;Options of the command object&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;pos : position to insert&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;c : character to insert&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;caret : position of the caret&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;remove : position(s) to remove&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;pos or [pos1, pos2]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;insert : position(s) to add :&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;{ pos : position to insert, c : character to insert, fromIsValid : true/false, strict : true/false }&lt;/li&gt; 
   &lt;li&gt;[{ pos : position to insert, c : character to insert, fromIsValid : true/false, strict : true/false }, { ...}, ... ]&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;fromIsValid &amp;amp; strict defaults to true.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refreshFromBuffer :&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;true =&amp;gt; refresh validPositions from the complete buffer&lt;/li&gt; 
   &lt;li&gt;{ start: , end: } =&amp;gt; refresh from start to end&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;rewritePosition: rewrite the maskPos within the isvalid function&lt;br&gt; See &lt;a href=&quot;https://raw.githubusercontent.com/RobinHerbots/Inputmask/5.x/#preValidation&quot;&gt;preValidation option&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;definitionSymbol&lt;/h3&gt; 
&lt;p&gt;When you insert or delete characters, they are only shifted when the definition type is the same. This behavior can be overridden by giving a definitionSymbol. (see example x, y, z, which can be used for IP-address masking, the validation is different, but it is allowed to shift the characters between the definitions)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendDefinitions({
  &#39;f&#39;: {  //masksymbol
    &quot;validator&quot;: &quot;[0-9\(\)\.\+/ ]&quot;
  },
  &#39;g&#39;: {
    &quot;validator&quot;: function (chrs, buffer, pos, strict, opts) {
      //do some logic and return true, false, or { &quot;pos&quot;: new position, &quot;c&quot;: character to place }
    }
  },
  &#39;j&#39;: { //basic year
    validator: &quot;(19|20)\\d{2}&quot;
  },
  &#39;x&#39;: {
    validator: &quot;[0-2]&quot;,
    definitionSymbol: &quot;i&quot; //this allows shifting values from other definitions, with the same masksymbol or definitionSymbol
  },
  &#39;y&#39;: {
    validator: function (chrs, buffer, pos, strict, opts) {
      var valExp2 = new RegExp(&quot;2[0-5]|[01][0-9]&quot;);
      return valExp2.test(buffer[pos - 1] + chrs);
    },
    definitionSymbol: &quot;i&quot;
  },
  &#39;z&#39;: {
    validator: function (chrs, buffer, pos, strict, opts) {
      var valExp3 = new RegExp(&quot;25[0-5]|2[0-4][0-9]|[01][0-9][0-9]&quot;);
      return valExp3.test(buffer[pos - 2] + buffer[pos - 1] + chrs);
    },
    definitionSymbol: &quot;i&quot;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;placeholder&lt;/h3&gt; 
&lt;p&gt;Specify a placeholder for a definition. This can also be a function.&lt;/p&gt; 
&lt;h3&gt;set defaults&lt;/h3&gt; 
&lt;p&gt;The defaults can be set as below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendDefaults({
  &#39;autoUnmask&#39;: true
});
Inputmask.extendDefinitions({
  &#39;A&#39;: {
    validator: &quot;[A-Za-z\u0410-\u044F\u0401\u0451\u00C0-\u00FF\u00B5]&quot;,
    casing: &quot;upper&quot; //auto uppercasing
  },
  &#39;+&#39;: {
    validator: &quot;[0-9A-Za-z\u0410-\u044F\u0401\u0451\u00C0-\u00FF\u00B5]&quot;,
    casing: &quot;upper&quot;
  }
});
Inputmask.extendAliases({
  &#39;numeric&#39;: {
    mask: &quot;r&quot;,
    greedy: false,
    ...
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if the property is defined within an alias you need to set it for the alias definition. This is also for default plugin options. If the alias definitions extend on default options, you can only override it at alias level.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendAliases({
  &#39;numeric&#39;: {
    autoUnmask: true,
    allowPlus: false,
    allowMinus: false
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, the preferred way to alter properties for an alias is by creating a new alias that inherits from the default alias definition.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendAliases({
  &#39;myNum&#39;: {
    alias: &quot;numeric&quot;,
    placeholder: &#39;&#39;,
    allowPlus: false,
    allowMinus: false
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once defined, you can call the alias by:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask(&quot;myNum&quot;).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All callbacks are implemented as options. This means that you can set general implementations for the callbacks by setting a default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendDefaults({
  onKeyValidation: function(key, result){
    if (!result){
      alert(&#39;Your input is not valid&#39;)
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Methods:&lt;/h2&gt; 
&lt;h3&gt;mask(elems)&lt;/h3&gt; 
&lt;p&gt;Create a mask for the input.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({ mask: &quot;99-999-99&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask({ mask: &quot;99-999-99&quot;}).mask(document.querySelectorAll(selector));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask(&quot;99-999-99&quot;).mask(document.querySelectorAll(selector));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var im = new Inputmask(&quot;99-999-99&quot;);
im.mask(document.querySelectorAll(selector));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask(&quot;99-999-99&quot;).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;unmaskedvalue&lt;/h3&gt; 
&lt;p&gt;Get the &lt;code&gt;unmaskedvalue&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask(&#39;unmaskedvalue&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var input = document.getElementById(selector);
if (input.inputmask)
  input.inputmask.unmaskedvalue()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Value unmasking&lt;/h4&gt; 
&lt;p&gt;Unmask a given value against the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var unformattedMask = Inputmask.unmask(&quot;123-45678-90&quot;, { mask: &quot;999-99999-99&quot; }); //1234567890
var unformattedDate = Inputmask.unmask(&quot;23/03/1973&quot;, { alias: &quot;datetime&quot;, inputFormat: &quot;dd/mm/yyyy&quot;, outputFormat: &quot;ddmmyyyy&quot;});//23031973
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;remove&lt;/h3&gt; 
&lt;p&gt;Remove the &lt;code&gt;inputmask&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask(&#39;remove&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var input = document.getElementById(selector);
if (input.inputmask)
  input.inputmask.remove()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.remove(document.getElementById(selector));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;getemptymask&lt;/h3&gt; 
&lt;p&gt;return the default (empty) mask value&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#test&quot;).inputmask(&quot;999-AAA&quot;);
  var initialValue = $(&quot;#test&quot;).inputmask(&quot;getemptymask&quot;);  // initialValue  =&amp;gt; &quot;___-___&quot;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;hasMaskedValue&lt;/h3&gt; 
&lt;p&gt;Check whether the returned value is masked or not; currently only works reliably when using jquery.val fn to retrieve the value&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  function validateMaskedValue(val){}
  function validateValue(val){}

  var val = $(&quot;#test&quot;).val();
  if ($(&quot;#test&quot;).inputmask(&quot;hasMaskedValue&quot;))
    validateMaskedValue(val);
  else
    validateValue(val);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;isComplete&lt;/h3&gt; 
&lt;p&gt;Verify whether the current value is complete or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  if ($(selector).inputmask(&quot;isComplete&quot;)){
    //do something
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;getmetadata&lt;/h3&gt; 
&lt;p&gt;The metadata of the actual mask provided in the mask definitions can be obtained by calling getmetadata. If only a mask is provided the mask definition will be returned by the getmetadata.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask(&quot;getmetadata&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;setvalue&lt;/h3&gt; 
&lt;p&gt;The setvalue functionality is to set a value to the inputmask like you would do with jQuery.val, BUT it will trigger the internal event used by the inputmask always, whatever the case. This is particular usefull when cloning an inputmask with jQuery.clone. Cloning an inputmask is not a fully functional clone. On the first event (mouseenter, focus, ...) the inputmask can detect if it were cloned and can reactivate the masking. However when setting the value with jQuery.val there is none of the events triggered in that case. The setvalue functionality does this for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$(selector).inputmask(&quot;setvalue&quot;, value);

var selector = document.getElementById(&quot;selector&quot;);
selector.inputmask.setValue(value);

Inputmask.setValue(selector, value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;option(options, noremask)&lt;/h3&gt; 
&lt;p&gt;Get or set an option on an existing inputmask. The option method is intented for adding extra options like callbacks, etc at a later time to the mask.&lt;/p&gt; 
&lt;p&gt;When extra options are set the mask is automatically reapplied, unless you pas true for the noremask argument.&lt;/p&gt; 
&lt;p&gt;Set an option&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.querySelector(&quot;#CellPhone&quot;).inputmask.option({
  onBeforePaste: function (pastedValue, opts) {
    return phoneNumOnPaste(pastedValue, opts);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#CellPhone&quot;).inputmask(&quot;option&quot;, {
  onBeforePaste: function (pastedValue, opts) {
    return phoneNumOnPaste(pastedValue, opts);
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;format&lt;/h3&gt; 
&lt;p&gt;Instead of masking an input element, it is also possible to use the inputmask for formatting given values. Think of formatting values to show in jqGrid or on other elements then inputs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var formattedDate = Inputmask.format(&quot;2331973&quot;, { alias: &quot;datetime&quot;, inputFormat: &quot;dd/mm/yyyy&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;isValid&lt;/h3&gt; 
&lt;p&gt;Validate a given value against the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var isValid = Inputmask.isValid(&quot;23/03/1973&quot;, { alias: &quot;datetime&quot;, inputFormat: &quot;dd/mm/yyyy&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Options:&lt;/h2&gt; 
&lt;h3&gt;placeholder&lt;/h3&gt; 
&lt;p&gt;Change the mask placeholder. Default: &quot;_&quot;&lt;/p&gt; 
&lt;p&gt;Instead of &quot;_&quot;, you can change the unfilled characters mask as you like, simply by adding the &lt;code&gt;placeholder&lt;/code&gt; option.
 &lt;!-- raw HTML omitted --&gt; For example, &lt;code&gt;placeholder: &quot; &quot;&lt;/code&gt; will change the default autofill with empty values&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;placeholder&quot;: &quot;*&quot; });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or a multi-char placeholder&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;placeholder&quot;: &quot;dd/mm/yyyy&quot; });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;optionalmarker&lt;/h3&gt; 
&lt;p&gt;Definition of the symbols used to indicate an optional part in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;optionalmarker: { start: &quot;[&quot;, end: &quot;]&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;quantifiermarker&lt;/h3&gt; 
&lt;p&gt;Definition of the symbols used to indicate a quantifier in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;quantifiermarker: { start: &quot;{&quot;, end: &quot;}&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;groupmarker&lt;/h3&gt; 
&lt;p&gt;Definition of the symbols used to indicate a group in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;groupmarker: { start: &quot;(&quot;, end: &quot;)&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;alternatormarker&lt;/h3&gt; 
&lt;p&gt;Definition of the symbols used to indicate an alternator part in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;alternatormarker: &quot;|&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;escapeChar&lt;/h3&gt; 
&lt;p&gt;Definition of the symbols used to escape a part in the mask.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;escapeChar: &quot;\\&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/RobinHerbots/Inputmask/5.x/#escape-special-mask-chars&quot;&gt;escape special mask chars&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;mask&lt;/h3&gt; 
&lt;p&gt;The mask to use.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Inputmask({ mask: &quot;9{*}&quot;).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;regex&lt;/h3&gt; 
&lt;p&gt;Use a regular expression as a mask&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Inputmask({ regex: &quot;[0-9]*&quot; }).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using shorthands be aware that you need to double escape or use String.raw with a string literal.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Inputmask({ regex: &quot;\\d*&quot; }).mask(selector);
~
Inputmask({ regex: String.raw`\d*` }).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;oncomplete&lt;/h3&gt; 
&lt;p&gt;Execute a function when the mask is completed&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;oncomplete&quot;: function(){ alert(&#39;inputmask complete&#39;); } });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;onincomplete&lt;/h3&gt; 
&lt;p&gt;Execute a function when the mask is incomplete. Executes on blur.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;onincomplete&quot;: function(){ alert(&#39;inputmask incomplete&#39;); } });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;oncleared&lt;/h3&gt; 
&lt;p&gt;Execute a function when the mask is cleared.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;oncleared&quot;: function(){ alert(&#39;inputmask cleared&#39;); } });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;repeat&lt;/h3&gt; 
&lt;p&gt;Mask repeat function. Repeat the mask definition x-times.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#number&quot;).inputmask({ &quot;mask&quot;: &quot;9&quot;, &quot;repeat&quot;: 10 });  // ~ mask &quot;9999999999&quot;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;greedy&lt;/h3&gt; 
&lt;p&gt;Default: false Toggle to allocate as much possible or the opposite. Non-greedy repeat function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#number&quot;).inputmask({ &quot;mask&quot;: &quot;9&quot;, &quot;repeat&quot;: 10, &quot;greedy&quot;: false });  // ~ mask &quot;9&quot; or mask &quot;99&quot; or ... mask &quot;9999999999&quot;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the non-greedy option set to false, you can specify * as repeat. This makes an endless repeat.&lt;/p&gt; 
&lt;h3&gt;autoUnmask&lt;/h3&gt; 
&lt;p&gt;Automatically unmask the value when retrieved.
 &lt;!-- raw HTML omitted --&gt;Default: false.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When setting this option to true the plugin also expects the initial value from the server to be unmasked.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;removeMaskOnSubmit&lt;/h3&gt; 
&lt;p&gt;Remove the mask before submitting the form.
 &lt;!-- raw HTML omitted --&gt;Default: false&lt;/p&gt; 
&lt;h3&gt;clearMaskOnLostFocus&lt;/h3&gt; 
&lt;p&gt;Remove the empty mask on blur or when not empty remove the optional trailing part Default: true&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#ssn&quot;).inputmask(&quot;999-99-9999&quot;,{placeholder:&quot; &quot;, clearMaskOnLostFocus: true }); //default
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;insertMode&lt;/h3&gt; 
&lt;p&gt;Toggle to insert or overwrite input.
 &lt;!-- raw HTML omitted --&gt;Default: true.
 &lt;!-- raw HTML omitted --&gt;This option can be altered by pressing the Insert key.&lt;/p&gt; 
&lt;h4&gt;insertModeVisual&lt;/h4&gt; 
&lt;p&gt;Show selected caret when insertmode = false.&lt;/p&gt; 
&lt;h3&gt;clearIncomplete&lt;/h3&gt; 
&lt;p&gt;Clear the incomplete input on blur&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#date&quot;).inputmask(&quot;99/99/9999&quot;,{ &quot;clearIncomplete&quot;: true });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;aliases&lt;/h3&gt; 
&lt;p&gt;Definitions of aliases.&lt;/p&gt; 
&lt;p&gt;With an alias, you can define a complex mask definition and call it by using an alias name. So this is mainly to simplify the use of your masks. Some aliases found in the extensions are email, currency, decimal, integer, date, DateTime, dd/mm/yyyy, etc.&lt;/p&gt; 
&lt;p&gt;First, you have to create an alias definition. The alias definition can contain options for the mask, custom definitions, the mask to use, etc.&lt;/p&gt; 
&lt;p&gt;When you pass in an alias, the alias is first resolved and then the other options are applied. So you can call an alias and pass another mask to be applied over the alias. This also means that you can write aliases that &quot;inherit&quot; from another alias.&lt;/p&gt; 
&lt;p&gt;Some examples can be found in jquery.inputmask.xxx.extensions.js&lt;/p&gt; 
&lt;p&gt;use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#date&quot;).inputmask(&quot;datetime&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#date&quot;).inputmask({ alias: &quot;datetime&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also call an alias and extend it with some more options&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#date&quot;).inputmask(&quot;datetime&quot;, { &quot;clearIncomplete&quot;: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#date&quot;).inputmask({ alias: &quot;datetime&quot;, &quot;clearIncomplete&quot;: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;alias&lt;/h3&gt; 
&lt;p&gt;The alias to use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;#date&quot;).inputmask({ alias: &quot;email&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;onKeyDown&lt;/h3&gt; 
&lt;p&gt;Callback to implement autocomplete on certain keys for example&lt;/p&gt; 
&lt;p&gt;Function arguments: event, buffer, caretPos, opts
 &lt;!-- raw HTML omitted --&gt;Function return:&lt;/p&gt; 
&lt;h3&gt;onBeforeMask&lt;/h3&gt; 
&lt;p&gt;Executes before masking the initial value to allow preprocessing of the initial value.&lt;/p&gt; 
&lt;p&gt;Function arguments: initialValue, opts
 &lt;!-- raw HTML omitted --&gt;Function return: processedValue&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({
  alias: &#39;phonebe&#39;,
  onBeforeMask: function (value, opts) {
    var processedValue = value.replace(/^0/g, &quot;&quot;);
    if (processedValue.indexOf(&quot;32&quot;) &amp;gt; 1 ||     processedValue.indexOf(&quot;32&quot;) == -1) {
      processedValue = &quot;32&quot; + processedValue;
    }

    return processedValue;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;onBeforePaste&lt;/h3&gt; 
&lt;p&gt;This callback allows for preprocessing the pasted value before actually handling the value for masking. This can be useful for stripping away some characters before processing.&lt;/p&gt; 
&lt;p&gt;Function arguments: pastedValue, opts
 &lt;!-- raw HTML omitted --&gt;Function return: processedValue&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({
  mask: &#39;9999 9999 9999 9999&#39;,
  placeholder: &#39; &#39;,
  showMaskOnHover: false,
  showMaskOnFocus: false,
  onBeforePaste: function (pastedValue, opts) {
    var processedValue = pastedValue;

    //do something with it

    return processedValue;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also disable pasting a value by returning false in the onBeforePaste call.&lt;/p&gt; 
&lt;p&gt;Default: Calls the onBeforeMask&lt;/p&gt; 
&lt;h3&gt;onBeforeWrite&lt;/h3&gt; 
&lt;p&gt;Executes before writing to the masked element&lt;/p&gt; 
&lt;p&gt;Use this to do some extra processing of the input. This can be useful when implementing an alias, ex. decimal alias, autofill the digits when leaving the inputfield.&lt;/p&gt; 
&lt;p&gt;Function arguments: event, buffer, caretPos, opts
 &lt;!-- raw HTML omitted --&gt;Function return: command object (see &lt;a href=&quot;https://raw.githubusercontent.com/RobinHerbots/Inputmask/5.x/#define-custom-definitions&quot;&gt;Define custom definitions&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;onUnMask&lt;/h3&gt; 
&lt;p&gt;Executes after unmasking to allow post-processing of the unmaskedvalue.&lt;/p&gt; 
&lt;p&gt;Function arguments: maskedValue, unmaskedValue
 &lt;!-- raw HTML omitted --&gt;Function return: processedValue&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#number&quot;).inputmask(&quot;decimal&quot;, { onUnMask: function(maskedValue, unmaskedValue) {
    //do something with the value
    return unmaskedValue;
  }});
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;showMaskOnFocus&lt;/h3&gt; 
&lt;p&gt;Shows the mask when the input gets focus. (default = true)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#ssn&quot;).inputmask(&quot;999-99-9999&quot;,{ showMaskOnFocus: true }); //default
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To make sure no mask is visible on focus also set the showMaskOnHover to false. Otherwise hovering with the mouse will set the mask and will stay on focus.&lt;/p&gt; 
&lt;h3&gt;showMaskOnHover&lt;/h3&gt; 
&lt;p&gt;Shows the mask when hovering the mouse. (default = true)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#ssn&quot;).inputmask(&quot;999-99-9999&quot;,{ showMaskOnHover: true }); //default
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;onKeyValidation&lt;/h3&gt; 
&lt;p&gt;Callback function is executed on every keyvalidation with the key, result as the parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#ssn&quot;).inputmask(&quot;999-99-9999&quot;, {
    onKeyValidation: function (key, result) {
      console.log(key + &quot; - &quot; + result);
    }
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;skipOptionalPartCharacter&lt;/h3&gt; 
&lt;h3&gt;numericInput&lt;/h3&gt; 
&lt;p&gt;Numeric input direction. Keeps the caret at the end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(selector).inputmask(&#39;€ 999.999.999,99&#39;, { numericInput: true });    //123456  =&amp;gt;  € ___.__1.234,56
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;rightAlign&lt;/h3&gt; 
&lt;p&gt;Align the input to the right&lt;/p&gt; 
&lt;p&gt;By setting the rightAlign you can specify to right-align an inputmask. This is only applied in combination op the numericInput option or the dir-attribute. The default is true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(selector).inputmask(&#39;decimal&#39;, { rightAlign: false });  //disables the right alignment of the decimal input
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;undoOnEscape&lt;/h3&gt; 
&lt;p&gt;Make escape behave like undo. (ctrl-Z)
 &lt;!-- raw HTML omitted --&gt;Pressing escape reverts the value to the value before focus.
 &lt;!-- raw HTML omitted --&gt;Default: true&lt;/p&gt; 
&lt;h3&gt;radixPoint (numerics)&lt;/h3&gt; 
&lt;p&gt;Define the radixpoint (decimal separator)
 &lt;!-- raw HTML omitted --&gt;Default: &quot;&quot;&lt;/p&gt; 
&lt;h3&gt;groupSeparator (numerics)&lt;/h3&gt; 
&lt;p&gt;Define the groupseparator
 &lt;!-- raw HTML omitted --&gt;Default: &quot;&quot;&lt;/p&gt; 
&lt;h3&gt;keepStatic&lt;/h3&gt; 
&lt;p&gt;Default: null (~false) Use in combination with the alternator syntax Try to keep the mask static while typing. Decisions to alter the mask will be postponed if possible.&lt;/p&gt; 
&lt;p&gt;ex. $(selector).inputmask({ mask: [&quot;+55-99-9999-9999&quot;, &quot;+55-99-99999-9999&quot;, ], keepStatic: true });&lt;/p&gt; 
&lt;p&gt;typing 1212345123 =&amp;gt; should result in +55-12-1234-5123 type extra 4 =&amp;gt; switch to +55-12-12345-1234&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When the option is not set, it will default to false, except for multiple masks it will default to true!!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;positionCaretOnTab&lt;/h3&gt; 
&lt;p&gt;When enabled the caret position is set after the latest valid position on TAB Default: true&lt;/p&gt; 
&lt;h3&gt;tabThrough&lt;/h3&gt; 
&lt;p&gt;Allows for tabbing through the different parts of the masked field.
 &lt;!-- raw HTML omitted --&gt;Default: false&lt;/p&gt; 
&lt;h3&gt;definitions&lt;/h3&gt; 
&lt;p&gt;Pass custom definitions directly in the options.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;	Inputmask({
			mask: &quot;V{13}9{4}&quot;,
			definitions: {
				&quot;V&quot;: {
					validator: &quot;[A-HJ-NPR-Za-hj-npr-z\\d]&quot;,
					casing: &quot;upper&quot;
				}
			},
			clearIncomplete: true,
			autoUnmask: true
		}).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;isComplete&lt;/h3&gt; 
&lt;p&gt;With this call-in (hook) you can override the default implementation of the isComplete function.
 &lt;!-- raw HTML omitted --&gt;Args =&amp;gt; buffer, opts Return =&amp;gt; true|false&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(selector).inputmask({
  regex: &quot;[0-9]*&quot;,
  isComplete: function(buffer, opts) {
    return new RegExp(opts.regex).test(buffer.join(&#39;&#39;));
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;postValidation&lt;/h3&gt; 
&lt;p&gt;Hook to postValidate the result from isValid. Usefull for validating the entry as a whole. Args =&amp;gt; buffer, pos, c, currentResult, opts, maskset, strict, fromCheckval
 &lt;!-- raw HTML omitted --&gt;Return =&amp;gt; true|false|command object&lt;/p&gt; 
&lt;h3&gt;preValidation&lt;/h3&gt; 
&lt;p&gt;Hook to preValidate the input. Useful for validating regardless of the definition. Args =&amp;gt; buffer, pos, char, isSelection, opts, maskset, caretPos, strict =&amp;gt; return true/false/command object When returning true, the normal validation kicks in, otherwise, it is skipped.&lt;/p&gt; 
&lt;p&gt;When returning a command object the actions are executed and further validation is stopped.&lt;br&gt; If you want to continue further validation, you need to add the rewritePosition action.&lt;/p&gt; 
&lt;h3&gt;staticDefinitionSymbol&lt;/h3&gt; 
&lt;p&gt;The staticDefinitionSymbol option is used to indicate that the static entries in the mask can match a certain definition. Especially useful with alternators so that the static element in the mask can match another alternation.&lt;/p&gt; 
&lt;p&gt;In the example below, we mark the spaces as a possible match for the &quot;i&quot; definition. By doing so the mask can alternate to the second mask even when we typed already &quot;12 3&quot;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask(&quot;(99 99 999999)|(i{+})&quot;, {
  definitions: {
    &quot;i&quot;: {
      validator: &quot;.&quot;,
      definitionSymbol: &quot;*&quot;
    }
  },
  staticDefinitionSymbol: &quot;*&quot;
}).mask(selector);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;nullable&lt;/h3&gt; 
&lt;p&gt;Return nothing when the user hasn&#39;t entered anything. Default: true&lt;/p&gt; 
&lt;h3&gt;noValuePatching&lt;/h3&gt; 
&lt;p&gt;Disable value property patching Default: false&lt;/p&gt; 
&lt;h3&gt;positionCaretOnClick&lt;/h3&gt; 
&lt;p&gt;Positioning of the caret on click.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;none&lt;/li&gt; 
 &lt;li&gt;lvp (based on the last valid position (default)&lt;/li&gt; 
 &lt;li&gt;radixFocus (position caret to radixpoint on initial click)&lt;/li&gt; 
 &lt;li&gt;select (select the whole input)&lt;/li&gt; 
 &lt;li&gt;ignore (ignore the click and continue the mask)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Default: &quot;lvp&quot;&lt;/p&gt; 
&lt;h3&gt;casing&lt;/h3&gt; 
&lt;p&gt;Apply casing at the mask-level. Options: null, &quot;upper&quot;, &quot;lower&quot; or &quot;title&quot; or callback args =&amp;gt; elem, test, pos, validPositions return charValue&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;casing: function(elem, test, pos, validPositions) {
	do some processing || upper/lower input property in the validPositions
	return elem; //upper/lower element
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Default: null&lt;/p&gt; 
&lt;h3&gt;inputmode&lt;/h3&gt; 
&lt;p&gt;Default: &quot;verbatim&quot; Specify the inputmode - already in place for when browsers start to support them https://html.spec.whatwg.org/#input-modalities:-the-inputmode-attribute&lt;/p&gt; 
&lt;h3&gt;importDataAttributes&lt;/h3&gt; 
&lt;p&gt;Specify to use the data-inputmask attributes or to ignore them.&lt;/p&gt; 
&lt;p&gt;If you don&#39;t use data attributes you can disable the import by specifying importDataAttributes: false.&lt;/p&gt; 
&lt;p&gt;Default: true&lt;/p&gt; 
&lt;h3&gt;shiftPositions&lt;/h3&gt; 
&lt;p&gt;Alter the behavior of the char shifting on entry or deletion.&lt;/p&gt; 
&lt;p&gt;In some cases shifting the mask entries or deletion should be more restrictive.&lt;br&gt; Ex. date masks. Shifting month to day makes no sense&lt;/p&gt; 
&lt;p&gt;Default: true&lt;/p&gt; 
&lt;p&gt;true = shift on the &quot;def&quot; match false = shift on the &quot;nativeDef&quot; match&lt;/p&gt; 
&lt;h3&gt;usePrototypeDefinitions&lt;/h3&gt; 
&lt;p&gt;Use the default defined definitions from the prototype.&lt;/p&gt; 
&lt;p&gt;Default: true&lt;/p&gt; 
&lt;h2&gt;General&lt;/h2&gt; 
&lt;h3&gt;set a value and apply the mask&lt;/h3&gt; 
&lt;p&gt;this can be done with the traditional jquery.val function (all browsers) or JavaScript value property for browsers which implement lookupGetter or getOwnPropertyDescriptor&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#number&quot;).val(12345);

  var number = document.getElementById(&quot;number&quot;);
  number.value = 12345;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;with the autoUnmaskoption you can change the return of $.fn.val (or value property) to unmaskedvalue or the maskedvalue&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&#39;#&amp;lt;%= tbDate.ClientID%&amp;gt;&#39;).inputmask({ &quot;mask&quot;: &quot;99/99/9999&quot;, &#39;autoUnmask&#39; : true});    //  value: 23/03/1973
  alert($(&#39;#&amp;lt;%= tbDate.ClientID%&amp;gt;&#39;).val());    // shows 23031973     (autoUnmask: true)

  var tbDate = document.getElementById(&quot;&amp;lt;%= tbDate.ClientID%&amp;gt;&quot;);
  alert(tbDate.value);    // shows 23031973     (autoUnmask: true)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;escape special mask chars&lt;/h3&gt; 
&lt;p&gt;If you want a mask element to appear as a static element you can escape them by \&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#months&quot;).inputmask(&quot;m \\months&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Extra example see https://github.com/RobinHerbots/Inputmask/issues/2251&lt;/p&gt; 
&lt;h3&gt;auto-casing inputmask&lt;/h3&gt; 
&lt;p&gt;You can define within a definition to automatically apply some casing on the entry in input by giving the casing.
 &lt;!-- raw HTML omitted --&gt;Casing can be null, &quot;upper&quot;, &quot;lower&quot; or &quot;title&quot;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Inputmask.extendDefinitions({
  &#39;A&#39;: {
    validator: &quot;[A-Za-z]&quot;,
    casing: &quot;upper&quot; //auto uppercasing
  },
  &#39;+&#39;: {
    validator: &quot;[A-Za-z\u0410-\u044F\u0401\u04510-9]&quot;,
    casing: &quot;upper&quot;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include jquery.inputmask.extensions.js for using the A and # definitions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;#test&quot;).inputmask(&quot;999-AAA&quot;);    //   =&amp;gt; 123abc ===&amp;gt; 123-ABC
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported markup options&lt;/h2&gt; 
&lt;h3&gt;RTL attribute&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;test&quot; dir=&quot;rtl&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;readonly attribute&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;test&quot; readonly=&quot;readonly&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;disabled attribute&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;test&quot; disabled=&quot;disabled&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;maxlength attribute&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;test&quot; maxlength=&quot;4&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;data-inputmask attribute&lt;/h3&gt; 
&lt;p&gt;You can also apply an inputmask by using the data-inputmask attribute. In the attribute, you specify the options wanted for the inputmask. This gets parsed with $.parseJSON (for the moment), so be sure to use a well-formed JSON-string without the {}.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input data-inputmask=&quot;&#39;alias&#39;: &#39;datetime&#39;&quot; /&amp;gt;
&amp;lt;input data-inputmask=&quot;&#39;mask&#39;: &#39;9&#39;, &#39;repeat&#39;: 10, &#39;greedy&#39; : false&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;:input&quot;).inputmask();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;data-inputmask-&amp;lt;option&amp;gt; attribute&lt;/h3&gt; 
&lt;p&gt;All options can also be passed through data-attributes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input data-inputmask-mask=&quot;9&quot; data-inputmask-repeat=&quot;10&quot; data-inputmask-greedy=&quot;false&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){
  $(&quot;:input&quot;).inputmask();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;jQuery.clone&lt;/h2&gt; 
&lt;p&gt;When cloning a inputmask, the inputmask reactivates on the first event (mouseenter, focus, ...) that happens to the input. If you want to set a value on the cloned inputmask and you want to directly reactivate the masking you have to use $(input).inputmask(&quot;setvalue&quot;, value)&lt;/p&gt; 
&lt;p&gt;Be sure to pass true in the jQuery.clone fn to clone with data and events and use jQuery as dependencyLib (https://api.jquery.com/clone/)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Node.js is an open-source, cross-platform, JavaScript runtime environment. It executes JavaScript code outside of a browser. For more information on using Node.js, see the &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js Website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;open governance model&lt;/a&gt;. The &lt;a href=&quot;https://openjsf.org/&quot;&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is bound by a &lt;a href=&quot;https://github.com/nodejs/admin/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-types&quot;&gt;Release Types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#download&quot;&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-and-lts-releases&quot;&gt;Current and LTS Releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#nightly-releases&quot;&gt;Nightly Releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#api-documentation&quot;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying Binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#building-nodejs&quot;&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#contributing-to-nodejs&quot;&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-project-team-members&quot;&gt;Current Project Team Members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#tsc-technical-steering-committee&quot;&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;Release Keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/.github/SUPPORT.md&quot;&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href=&quot;https://github.com/nodejs/node/tree/v10.x&quot;&gt;v10.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long-term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered codenames, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;. A member of the Release Team &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href=&quot;https://github.com/nodejs/Release#readme&quot;&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS Releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/release/&quot;&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/download/release/latest/&quot;&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href=&quot;https://nodejs.org/download/release/latest-carbon/&quot;&gt;latest-carbon&lt;/a&gt; directory contains the latest Carbon (Node.js 8) release.&lt;/p&gt; 
&lt;h4&gt;Nightly Releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/nightly/&quot;&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory name and filename contains a date (in UTC) and the commit SHA at the HEAD of the release.&lt;/p&gt; 
&lt;h4&gt;API Documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href=&quot;https://nodejs.org/download/docs/&quot;&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying Binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt&lt;/code&gt; file with SHA checksums for the files.&lt;/p&gt; 
&lt;p&gt;To download &lt;code&gt;SHASUMS256.txt&lt;/code&gt; using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check that a downloaded file matches the checksum, run it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Current and LTS, the GPG detached signature of &lt;code&gt;SHASUMS256.txt&lt;/code&gt; is in &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt;. You can use it with &lt;code&gt;gpg&lt;/code&gt; to verify the integrity of &lt;code&gt;SHASUM256.txt&lt;/code&gt;. You will first need to import &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;the GPG keys of individuals authorized to create releases&lt;/a&gt;. To import the keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the bottom of this README for a full script to import active release keys.&lt;/p&gt; 
&lt;p&gt;Next, download the &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt; for the release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use &lt;code&gt;gpg --verify SHASUMS256.txt.sig SHASUMS256.txt&lt;/code&gt; to verify the file&#39;s signature.&lt;/p&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/CONTRIBUTING.md&quot;&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/WORKING_GROUPS.md&quot;&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/Strategic-Initiatives.md&quot;&gt;Strategic Initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/technical-values.md&quot;&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current Project Team Members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;apapirovski@mac.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;chalkerx@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;codebytere@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;daniel.bevenius@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;franziska.hinkelmann@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;gabriel.schulhof@intel.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;gpunathi@in.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;joyeec9h3@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;matteo.collina@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;midawson@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;oss@mmarchini.me&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;tniessen@tnie.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;rtrott@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;TSC Emeriti&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;anna@addaleax.net&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;info@bnoordhuis.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock123@rocketmail.com&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;fedor.indutny@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;josh.gavant@outlook.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;mscdex@mscdex.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nebrius&quot;&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;bryan@nebri.us&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;ofrobots@google.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;orangemocha@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;bertbelder@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;r@va.gg&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;vieuxtech@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;ohtsu@ohtsu.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;thechargingvolcano@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;timothygu99@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;trev.norris@gmail.com&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;anna@addaleax.net&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aduh95&quot;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;duhamelantoine1995@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ak239&quot;&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;ak239spb@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreasMadsen&quot;&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;amwebdk@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antsmartian&quot;&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;anto.aravinth.cse@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;apapirovski@mac.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AshCripps&quot;&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;acripps@redhat.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bcoe&quot;&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;bencoe@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bengl&quot;&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;bryan@bryanenglish.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benjamingr&quot;&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;benjamingr@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeck&quot;&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;bradley.meck@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeurer&quot;&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;benedikt.meurer@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boneskull&quot;&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;boneskull@boneskull.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bzoz&quot;&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;bartosz@janeasystems.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cclauss&quot;&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;cclauss@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;chalkerx@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;codebytere@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;daniel.bevenius@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielleadams&quot;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;adamzdanielle@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davisjam&quot;&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;davisjam@vt.edu&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devnexen&quot;&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;devnexen@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devsnek&quot;&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;me@gus.host&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edsadr&quot;&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;edsadr@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eugeneo&quot;&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;eostroukhov@google.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;franziska.hinkelmann@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock123@rocketmail.com&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flarna&quot;&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;deb2001-github@yahoo.de&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;gabriel.schulhof@intel.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gdams&quot;&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;george.adams@uk.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geek&quot;&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;wpreul@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gengjiawen&quot;&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;technicalcute@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geoffreybooth&quot;&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;webmaster@geoffreybooth.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;gpunathi@in.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/guybedford&quot;&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;guybedford@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HarshithaKP&quot;&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;harshitha014@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hashseed&quot;&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;yangguo@chromium.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/himself65&quot;&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu Yang&lt;/strong&gt; &amp;lt;himself65@outlook.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hiroppy&quot;&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;hello@hiroppy.me&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;fedor.indutny@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JacksonTian&quot;&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;shyvo1987@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jdalton&quot;&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;john.david.dalton@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkrems&quot;&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Krems&lt;/strong&gt; &amp;lt;jan.krems@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joaocgreis&quot;&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;reis@janeasystems.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;joyeec9h3@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/juanarbol&quot;&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;soyjuanarbol@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JungMinu&quot;&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;nodecorelab@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lance&quot;&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;lball@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/legendecas&quot;&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;legendecas@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Leko&quot;&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;leko.noor@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lpinca&quot;&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;luigipinca@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lundibundi&quot;&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;shishugi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mafintosh&quot;&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;mathiasbuus@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;matteo.collina@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;midawson@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mildsunrise&quot;&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;me@alba.sh&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/misterdjules&quot;&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;jgilli@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;oss@mmarchini.me&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;mscdex@mscdex.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;ofrobots@google.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oyyd&quot;&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;oyydoibh@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;Pooja.D.P@ibm.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psmarshall&quot;&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;petermarshall@chromium.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/puzpuzpuz&quot;&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;apechkurov@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Qard&quot;&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;admin@stephenbelanger.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/refack&quot;&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;refack@gmail.com&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rexagod&quot;&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;rexagod@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richardlau&quot;&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;rlau@redhat.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rickyes&quot;&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;0x19951125@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;ronagy@icloud.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rubys&quot;&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;rubys@intertwingly.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruyadorno&quot;&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;ruyadorno@github.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;rod@vagg.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryzokuken&quot;&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;ryzokuken@disroot.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saghul&quot;&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;saghul@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/santigimeno&quot;&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;santiago.gimeno@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seishun&quot;&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;vvnicholas@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shisama&quot;&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;shisama07@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/silverwind&quot;&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;me@silverwind.io&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/srl295&quot;&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;srloomis@us.ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/starkwang&quot;&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;starkwang@126.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sxa&quot;&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;sxa@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;timothygu99@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;tniessen@tnie.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trivikr&quot;&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;trivikr.dev@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;rtrott@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vdeturckheim&quot;&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;vlad2t@hotmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watilde&quot;&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;daijiro.wachi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watson&quot;&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;w@tson.dk&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/XadillaX&quot;&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;i@2333.moe&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yhwang&quot;&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;yh.wang@ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yorkie&quot;&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;yorkiefixer@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yosuke-furukawa&quot;&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;yosuke.furukawa@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZYSzys&quot;&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;zyszys98@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrasq&quot;&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;andras@kinvey.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AnnaMag&quot;&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;anna.m.kedzierska@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aqrln&quot;&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;eaglexrlnk@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;info@bnoordhuis.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brendanashworth&quot;&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;brendan.ashworth@me.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calvinmetcalf&quot;&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;calvin.metcalf@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudiorodriguez&quot;&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;cjrodr@yahoo.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DavidCai1993&quot;&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;davidcai1993@yahoo.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DerekNonGeneric&quot;&gt;DerekNonGeneric&lt;/a&gt; - &lt;strong&gt;Derek Lewis&lt;/strong&gt; &amp;lt;DerekNonGeneric@inf.is&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/digitalinfinity&quot;&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;digitalinfinity@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eljefedelrodeodeljefe&quot;&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;robert.lindstaedt@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/estliberitas&quot;&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;estliberitas@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/firedfox&quot;&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;wangyang0123@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glentiki&quot;&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;glenkeane.94@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iarna&quot;&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;me@re-becca.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imran-iq&quot;&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;imran@imraniqbal.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imyller&quot;&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;ilkka.myller@nodefield.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/italoacasas&quot;&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;me@italoacasas.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin&quot;&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;jasongin@microsoft.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbergstroem&quot;&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;bugs@bergstroem.nu&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jhamhader&quot;&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;yuval@brik.org.il&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;josh.gavant@outlook.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/julianduque&quot;&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;julianduquej@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kfarnung&quot;&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;kfarnung@microsoft.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kunalspathak&quot;&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;kunal.pathak@microsoft.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucamaraschi&quot;&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;luca.maraschi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lxe&quot;&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;lxe@lxe.co&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maclover7&quot;&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;me@jonathanmoss.me&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewloring&quot;&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;mattloring@google.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/micnic&quot;&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;micnic90@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mikeal&quot;&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;mikeal.rogers@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/monsanto&quot;&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;chris@monsan.to&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MoonBall&quot;&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;gangc.cxy@foxmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/not-an-aardvark&quot;&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;teddy.katz@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Olegas&quot;&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;oleg@elifantiev.ru&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;orangemocha@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/othiym23&quot;&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;ogd@aoaioxxysz.net&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/petkaantonov&quot;&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;petka_antonov@hotmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phillipj&quot;&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;johphi@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;bertbelder@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmq20&quot;&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;pmq2001@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/princejwesley&quot;&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;princejohnwesley@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rlidwka&quot;&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;alex@kocharin.ru&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rmg&quot;&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;r.m.graham@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertkowalski&quot;&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;rok@kowalski.gd&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/romankl&quot;&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;romaaan.git@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronkorving&quot;&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;ron@ronkorving.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RReverser&quot;&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;me@rreverser.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;vieuxtech@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sebdeckers&quot;&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;sebdeckers83@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;ohtsu@ohtsu.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stefanmb&quot;&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;stefan@budeanu.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tellnes&quot;&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;christian@tellnes.no&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;thechargingvolcano@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thlorenz&quot;&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;thlorenz@gmx.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;trev.norris@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tunniclm&quot;&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;m.j.tunnicliffe@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vkurchatkin&quot;&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;vladimir.kurchatkin@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vsemozhetbyt&quot;&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;vsemozhetbyt@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/whitlockjc&quot;&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;jwhitlock@apache.org&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Collaborators follow the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/collaborator-guide.md&quot;&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja Durgad&lt;/strong&gt; &amp;lt;Pooja.D.P@ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RaisinTen&quot;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;raisinten@gmail.com&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Release Keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;adamzdanielle@gmail.com&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@keybase.io&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;rlau@redhat.com&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;rod@vagg.org&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;ruyadorno@hotmail.com&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;shelley.vohr@gmail.com&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import the full set of trusted release keys (including subkeys possibly used to sign releases):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys 1C050899334244A8AF75E53792EF661D867B9DFA
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762
gpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the section above on &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying Binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;p&gt;Other keys used to sign some previous releases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;me@italoacasas.com&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock@keybase.io&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;jgilli@fastmail.fm&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;tjfontaine@gmail.com&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href=&quot;https://github.com/nodejs/node/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevExpress/testcafe</title>
      <link>https://github.com/DevExpress/testcafe</link>
      <description>&lt;p&gt;A Node.js tool to automate end-to-end web testing.&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Works on all popular environments&lt;/strong&gt;: TestCafe runs on Windows, MacOS, and Linux. It supports desktop, mobile, remote and cloud &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html&quot;&gt;browsers&lt;/a&gt; (UI or headless).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;1 minute to set up&lt;/strong&gt;: You &lt;a href=&quot;https://devexpress.github.io/testcafe/faq/#i-have-heard-that-testcafe-does-not-use-selenium-how-does-it-operate&quot;&gt;do not need WebDriver&lt;/a&gt; or any other testing software. Install TestCafe with one command, and you are ready to test: &lt;code&gt;npm install -g testcafe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free and open source&lt;/strong&gt;: TestCafe is free to use under the &lt;a href=&quot;https://github.com/DevExpress/testcafe/blob/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#plugins&quot;&gt;Plugins&lt;/a&gt; provide custom reports, integration with other tools, launching tests from IDE, etc. You can use the plugins made by the GitHub community or make your own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/media/install-and-run-test.gif&quot; alt=&quot;Install TestCafe and Run a Test&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#testcafe-studio-ide-for-end-to-end-web-testing&quot;&gt;TestCafe Studio: IDE for End-to-End Web Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#get-help&quot;&gt;Get Help&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#issue-tracker&quot;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#stay-in-touch&quot;&gt;Stay in Touch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#different-versions-of-testcafe&quot;&gt;Different Versions of TestCafe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#badge&quot;&gt;Badge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#creators&quot;&gt;Creators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stable tests and no manual timeouts&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; TestCafe automatically waits for page loads and XHRs before the test starts and after each action. It also features smart test actions and assertions that wait for page elements to appear. You can change the maximum wait time. If elements load faster, tests skip the timeout and continue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rapid test development tool&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; Changes in test code immediately restart the test, and you see the results instantly.
 &lt;!-- raw HTML omitted --&gt; See how it works in the &lt;a href=&quot;https://github.com/DevExpress/testcafe-live&quot;&gt;TestCafe Live repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Latest JS and TypeScript support&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; TestCafe supports the latest JavaScript features, including ES2017 (for example, async/await). You can also &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html&quot;&gt;use TypeScript&lt;/a&gt; if you prefer a strongly typed language.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Detects JS errors in your code&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; TestCafe reports JS errors that it finds on the webpage. Tests automatically fail because of that. However, you can disable this.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Concurrent test launch&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; TestCafe can open multiple instances of the same browser to run parallel tests which decreases test execution time.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PageObject pattern support&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; The TestCafe&#39;s &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/&quot;&gt;Test API&lt;/a&gt; includes a high-level selector library, assertions, etc. You can combine them to implement readable tests with the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/recipes/using-page-model.html&quot;&gt;PageObject pattern&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const macOSInput = Selector(&#39;.column&#39;).find(&#39;label&#39;).withText(&#39;MacOS&#39;).child(&#39;input&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Easy to include in a continuous integration system&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt; You can run TestCafe from a console, and its reports can be viewed in a CI system&#39;s interface (TeamCity, Jenkins, Travis &amp;amp; etc.)&lt;/p&gt; 
&lt;h2&gt;TestCafe Studio: IDE for End-to-End Web Testing&lt;/h2&gt; 
&lt;p&gt;TestCafe works great for JavaScript developers, but at some point you will need to delegate testing tasks to your Q&amp;amp;A department. If that&#39;s the case and you are looking for a codeless way to record and maintain tests compatible with your existing infrastructure, check out &lt;a href=&quot;https://www.devexpress.com/products/testcafestudio/?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-ide&quot;&gt;TestCafe Studio&lt;/a&gt; - a testing IDE built on top of the open-source TestCafe.&lt;/p&gt; 
&lt;p&gt;Read the following article to learn how TestCafe Studio could fit into your workflow: &lt;a href=&quot;https://www.devexpress.com/products/testcafestudio/qa-end-to-end-web-testing.xml&quot;&gt;What&#39;s Better than TestCafe? TestCafe Studio&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/media/testcafe-studio-get-started.gif&quot; alt=&quot;Get Started with TestCafe Studio&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Ensure that &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; (version 6 or newer) and &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; are installed on your computer before running it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g testcafe
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating the Test&lt;/h3&gt; 
&lt;p&gt;As an example, we are going to test the &lt;a href=&quot;https://devexpress.github.io/testcafe/example&quot;&gt;https://devexpress.github.io/testcafe/example&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Create a &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.ts&lt;/code&gt; file on your computer. Note that it needs to have a specific structure: tests must be organized into fixtures. You can paste the following code to see the test in action:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { Selector } from &#39;testcafe&#39;; // first import testcafe selectors

fixture `Getting Started`// declare the fixture
    .page `https://devexpress.github.io/testcafe/example`;  // specify the start page


//then create a test and place your code there
test(&#39;My first test&#39;, async t =&amp;gt; {
    await t
        .typeText(&#39;#developer-name&#39;, &#39;John Smith&#39;)
        .click(&#39;#submit-button&#39;)

        // Use the assertion to check if the actual header text is equal to the expected one
        .expect(Selector(&#39;#article-header&#39;).innerText).eql(&#39;Thank you, John Smith!&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running the Test&lt;/h3&gt; 
&lt;p&gt;Call the following command in a command shell. Specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#browser-list&quot;&gt;target browser&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#file-pathglob-pattern&quot;&gt;file path&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;testcafe chrome test1.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TestCafe opens the browser and starts executing the test.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Important! Make sure to stay in the browser tab that is running tests. Do not minimize the browser window. Tests are not guaranteed to execute correctly in inactive tabs and minimized browser windows because they switch to a lower resource consumption mode.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Viewing the Results&lt;/h3&gt; 
&lt;p&gt;TestCafe outputs the results into a command shell by default. See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/reporters.html&quot;&gt;Reporters&lt;/a&gt; for more information. You can also use &lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/#plugins&quot;&gt;plugins&lt;/a&gt; to customize the reports.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/docs/articles/images/report.png&quot; alt=&quot;Test Report&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/getting-started/&quot;&gt;Getting Started&lt;/a&gt; page for a more detailed guide.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Go to our website for full &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/getting-started/&quot;&gt;documentation&lt;/a&gt; on TestCafe.&lt;/p&gt; 
&lt;h2&gt;Get Help&lt;/h2&gt; 
&lt;p&gt;Join the TestCafe community on Stack Overflow to get help. Ask and answer &lt;a href=&quot;https://stackoverflow.com/questions/tagged/testcafe&quot;&gt;questions with the TestCafe tag&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Issue Tracker&lt;/h2&gt; 
&lt;p&gt;Use our GitHub issues page to &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/new?template=bug-report.md&quot;&gt;report bugs&lt;/a&gt; and &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/new?template=feature_request.md&quot;&gt;suggest improvements&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay in Touch&lt;/h2&gt; 
&lt;p&gt;Follow us on &lt;a href=&quot;https://twitter.com/DXTestCafe&quot;&gt;Twitter&lt;/a&gt;. We post TestCafe news and updates, several times a week.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://github.com/DevExpress/testcafe/blob/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; to learn how to contribute to the project.&lt;/p&gt; 
&lt;p&gt;To create your own plugin for TestCafe, you can use these plugin generators:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/browser-provider-plugin/&quot;&gt;Build a browser provider&lt;/a&gt; to set up tests on your on-premises server farm, to use a cloud testing platform, or to start your local browsers in a special way. Use this &lt;a href=&quot;https://www.npmjs.com/package/generator-testcafe-browser-provider&quot;&gt;Yeoman generator&lt;/a&gt; to write only a few lines of code.&lt;/li&gt; 
 &lt;li&gt;To &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/&quot;&gt;build a custom reporter&lt;/a&gt; with your formatting and style, check out this &lt;a href=&quot;https://www.npmjs.com/package/generator-testcafe-reporter&quot;&gt;generator&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want your plugin to be listed below, &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/new&quot;&gt;send us a note in a Github issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to TestCafe!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/aha-oretama&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/ai&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/aleks-pro&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexanderMoiseev&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexanderMoskovkin&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/alexey-lin&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/aha-oretama&quot;&gt;aha-oretama&lt;/a&gt; |&lt;a href=&quot;https://github.com/ai&quot;&gt;ai&lt;/a&gt; |&lt;a href=&quot;https://github.com/aleks-pro&quot;&gt;aleks-pro&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexanderMoiseev&quot;&gt;AlexanderMoiseev&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexanderMoskovkin&quot;&gt;AlexanderMoskovkin&lt;/a&gt; |&lt;a href=&quot;https://github.com/alexey-lin&quot;&gt;alexey-lin&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AlexKamaev&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexSkorkin&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/alexwybraniec&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/andrewbranch&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/AndyWendt&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/AlexKamaev&quot;&gt;AlexKamaev&lt;/a&gt; |&lt;a href=&quot;https://github.com/AlexSkorkin&quot;&gt;AlexSkorkin&lt;/a&gt; |&lt;a href=&quot;https://github.com/alexwybraniec&quot;&gt;alexwybraniec&lt;/a&gt; |&lt;a href=&quot;https://github.com/andrewbranch&quot;&gt;andrewbranch&lt;/a&gt; |&lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;AndreyBelym&lt;/a&gt; |&lt;a href=&quot;https://github.com/AndyWendt&quot;&gt;AndyWendt&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anthophobiac&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/arubtsov&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/augustomezencio-hotmart&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/bdwain&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/benmonro&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/beyondcompute&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/anthophobiac&quot;&gt;anthophobiac&lt;/a&gt; |&lt;a href=&quot;https://github.com/arubtsov&quot;&gt;arubtsov&lt;/a&gt; |&lt;a href=&quot;https://github.com/augustomezencio-hotmart&quot;&gt;augustomezencio-hotmart&lt;/a&gt; |&lt;a href=&quot;https://github.com/bdwain&quot;&gt;bdwain&lt;/a&gt; |&lt;a href=&quot;https://github.com/benmonro&quot;&gt;benmonro&lt;/a&gt; |&lt;a href=&quot;https://github.com/beyondcompute&quot;&gt;beyondcompute&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bill-looby-i&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/bsmithb2&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/caseyWebb&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/cdrini&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/cgfarmer4&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/churkin&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/bill-looby-i&quot;&gt;bill-looby-i&lt;/a&gt; |&lt;a href=&quot;https://github.com/bsmithb2&quot;&gt;bsmithb2&lt;/a&gt; |&lt;a href=&quot;https://github.com/caseyWebb&quot;&gt;caseyWebb&lt;/a&gt; |&lt;a href=&quot;https://github.com/cdrini&quot;&gt;cdrini&lt;/a&gt; |&lt;a href=&quot;https://github.com/cgfarmer4&quot;&gt;cgfarmer4&lt;/a&gt; |&lt;a href=&quot;https://github.com/churkin&quot;&gt;churkin&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dej611&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/DIRECTcut&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/Dmitry-Ostashev&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/ericyd&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/Farfurix&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/GeoffreyBooth&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/dej611&quot;&gt;dej611&lt;/a&gt; |&lt;a href=&quot;https://github.com/DIRECTcut&quot;&gt;DIRECTcut&lt;/a&gt; |&lt;a href=&quot;https://github.com/Dmitry-Ostashev&quot;&gt;Dmitry-Ostashev&lt;/a&gt; |&lt;a href=&quot;https://github.com/ericyd&quot;&gt;ericyd&lt;/a&gt; |&lt;a href=&quot;https://github.com/Farfurix&quot;&gt;Farfurix&lt;/a&gt; |&lt;a href=&quot;https://github.com/GeoffreyBooth&quot;&gt;GeoffreyBooth&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/helen-dikareva&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/honsq90&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/infctr&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/inikulin&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/Ivan-Katovich&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/jamesgeorge007&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/helen-dikareva&quot;&gt;helen-dikareva&lt;/a&gt; |&lt;a href=&quot;https://github.com/honsq90&quot;&gt;honsq90&lt;/a&gt; |&lt;a href=&quot;https://github.com/infctr&quot;&gt;infctr&lt;/a&gt; |&lt;a href=&quot;https://github.com/inikulin&quot;&gt;inikulin&lt;/a&gt; |&lt;a href=&quot;https://github.com/Ivan-Katovich&quot;&gt;Ivan-Katovich&lt;/a&gt; |&lt;a href=&quot;https://github.com/jamesgeorge007&quot;&gt;jamesgeorge007&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jaypea&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/kanhaiya15&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/kirovboris&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/kubejm&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/LavrovArtem&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/link89&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/jaypea&quot;&gt;jaypea&lt;/a&gt; |&lt;a href=&quot;https://github.com/kanhaiya15&quot;&gt;kanhaiya15&lt;/a&gt; |&lt;a href=&quot;https://github.com/kirovboris&quot;&gt;kirovboris&lt;/a&gt; |&lt;a href=&quot;https://github.com/kubejm&quot;&gt;kubejm&lt;/a&gt; |&lt;a href=&quot;https://github.com/LavrovArtem&quot;&gt;LavrovArtem&lt;/a&gt; |&lt;a href=&quot;https://github.com/link89&quot;&gt;link89&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lzxb&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/macdonaldr93&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/MargaritaLoseva&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/Marketionist&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/MatthewNielsen27&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/mattmanske&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/lzxb&quot;&gt;lzxb&lt;/a&gt; |&lt;a href=&quot;https://github.com/macdonaldr93&quot;&gt;macdonaldr93&lt;/a&gt; |&lt;a href=&quot;https://github.com/MargaritaLoseva&quot;&gt;MargaritaLoseva&lt;/a&gt; |&lt;a href=&quot;https://github.com/Marketionist&quot;&gt;Marketionist&lt;/a&gt; |&lt;a href=&quot;https://github.com/MatthewNielsen27&quot;&gt;MatthewNielsen27&lt;/a&gt; |&lt;a href=&quot;https://github.com/mattmanske&quot;&gt;mattmanske&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mcjim&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/miherlosev&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/morfey13&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/mostlyfabulous&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/murajun1978&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/NickCis&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/mcjim&quot;&gt;mcjim&lt;/a&gt; |&lt;a href=&quot;https://github.com/miherlosev&quot;&gt;miherlosev&lt;/a&gt; |&lt;a href=&quot;https://github.com/morfey13&quot;&gt;morfey13&lt;/a&gt; |&lt;a href=&quot;https://github.com/mostlyfabulous&quot;&gt;mostlyfabulous&lt;/a&gt; |&lt;a href=&quot;https://github.com/murajun1978&quot;&gt;murajun1978&lt;/a&gt; |&lt;a href=&quot;https://github.com/NickCis&quot;&gt;NickCis&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/danielroe&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/Ogurecher&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/pietrovich&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/radarhere&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/raspo&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/rbardini&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/danielroe&quot;&gt;danielroe&lt;/a&gt; |&lt;a href=&quot;https://github.com/Ogurecher&quot;&gt;Ogurecher&lt;/a&gt; |&lt;a href=&quot;https://github.com/pietrovich&quot;&gt;pietrovich&lt;/a&gt; |&lt;a href=&quot;https://github.com/radarhere&quot;&gt;radarhere&lt;/a&gt; |&lt;a href=&quot;https://github.com/raspo&quot;&gt;raspo&lt;/a&gt; |&lt;a href=&quot;https://github.com/rbardini&quot;&gt;rbardini&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/renancouto&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/sgrillon14&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/smockle&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/stefanschenk&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/superroma&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/theghostbel&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/renancouto&quot;&gt;renancouto&lt;/a&gt; |&lt;a href=&quot;https://github.com/sgrillon14&quot;&gt;sgrillon14&lt;/a&gt; |&lt;a href=&quot;https://github.com/smockle&quot;&gt;smockle&lt;/a&gt; |&lt;a href=&quot;https://github.com/stefanschenk&quot;&gt;stefanschenk&lt;/a&gt; |&lt;a href=&quot;https://github.com/superroma&quot;&gt;superroma&lt;/a&gt; |&lt;a href=&quot;https://github.com/theghostbel&quot;&gt;theghostbel&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/timnederhoff&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/titerman&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/tobiasbueschel&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/varunkumar&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/VasilyStrelyaev&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/vitalics&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/timnederhoff&quot;&gt;timnederhoff&lt;/a&gt; |&lt;a href=&quot;https://github.com/titerman&quot;&gt;titerman&lt;/a&gt; |&lt;a href=&quot;https://github.com/tobiasbueschel&quot;&gt;tobiasbueschel&lt;/a&gt; |&lt;a href=&quot;https://github.com/varunkumar&quot;&gt;varunkumar&lt;/a&gt; |&lt;a href=&quot;https://github.com/VasilyStrelyaev&quot;&gt;VasilyStrelyaev&lt;/a&gt; |&lt;a href=&quot;https://github.com/vitalics&quot;&gt;vitalics&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Vla8islav&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/wentwrong&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/intermike&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/DevSide&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/b12031106&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;a href=&quot;https://github.com/tomashanacek&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | :---: |:---: |:---: |:---: |:---: |:---: | &lt;a href=&quot;https://github.com/Vla8islav&quot;&gt;Vla8islav&lt;/a&gt; |&lt;a href=&quot;https://github.com/wentwrong&quot;&gt;wentwrong&lt;/a&gt; |&lt;a href=&quot;https://github.com/intermike&quot;&gt;intermike&lt;/a&gt; |&lt;a href=&quot;https://github.com/DevSide&quot;&gt;DevSide&lt;/a&gt; |&lt;a href=&quot;https://github.com/b12031106&quot;&gt;b12031106&lt;/a&gt; |&lt;a href=&quot;https://github.com/tomashanacek&quot;&gt;tomashanacek&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;TestCafe developers and community members made these plugins:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Browser Providers&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Use TestCafe with cloud browser providers and emulators.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-browser-provider-saucelabs&quot;&gt;SauceLabs provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;@AndreyBelym&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-browser-provider-browserstack&quot;&gt;BrowserStack provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;@AndreyBelym&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/sijosyn/testcafe-browser-provider-crossbrowsertesting&quot;&gt;CrossBrowserTesting provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/sijosyn&quot;&gt;@sijosyn&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/LambdaTest/testcafe-browser-provider-lambdatest&quot;&gt;LambdaTest provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/kanhaiya15&quot;&gt;@kanhaiya15&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/ryx/testcafe-browser-provider-nightmare&quot;&gt;Nightmare headless provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/ryx&quot;&gt;@ryx&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/testingbot/testcafe-browser-provider-testingbot&quot;&gt;Testingbot provider&lt;/a&gt; (by &lt;a href=&quot;https://github.com/testingbot&quot;&gt;@testingbot&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Ents24/testcafe-browser-provider-fbsimctl&quot;&gt;fbsimctl iOS emulator&lt;/a&gt; (by &lt;a href=&quot;https://github.com/Ents24&quot;&gt;@ents24&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-browser-provider-electron&quot;&gt;Electron&lt;/a&gt; (by &lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;@AndreyBelym&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/jdobosz/testcafe-browser-provider-puppeteer&quot;&gt;Puppeteer&lt;/a&gt; (by &lt;a href=&quot;https://github.com/jdobosz&quot;&gt;@jdobosz&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/stefanschenk/testcafe-browser-provider-puppeteer-chromium&quot;&gt;Puppeteer Chromium&lt;/a&gt; (by &lt;a href=&quot;https://github.com/stefanschenk&quot;&gt;@stefanschenk&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Framework-Specific Selectors&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Work with page elements in a way that is native to your framework.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-react-selectors&quot;&gt;React&lt;/a&gt; (by &lt;a href=&quot;https://github.com/kirovboris&quot;&gt;@kirovboris&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-angular-selectors&quot;&gt;Angular&lt;/a&gt; (by &lt;a href=&quot;https://github.com/miherlosev&quot;&gt;@miherlosev&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/devexpress/testcafe-vue-selectors&quot;&gt;Vue&lt;/a&gt; (by &lt;a href=&quot;https://github.com/miherlosev&quot;&gt;@miherlosev&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/miherlosev/testcafe-aurelia-selectors&quot;&gt;Aurelia&lt;/a&gt; (by &lt;a href=&quot;https://github.com/miherlosev&quot;&gt;@miherlosev&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Plugins for Task Runners&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Integrate TestCafe into your project&#39;s workflow.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/crudo/grunt-testcafe&quot;&gt;Grunt&lt;/a&gt; (by &lt;a href=&quot;https://github.com/crudo&quot;&gt;@crudo&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/gulp-testcafe&quot;&gt;Gulp&lt;/a&gt; (by &lt;a href=&quot;https://github.com/inikulin&quot;&gt;@inikulin&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Custom Reporters&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; View test results in different formats.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Soluto/testcafe-reporter-teamcity&quot;&gt;TeamCity&lt;/a&gt; (by &lt;a href=&quot;https://github.com/nirsky&quot;&gt;@nirsky&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Shafied/testcafe-reporter-slack&quot;&gt;Slack&lt;/a&gt; (by &lt;a href=&quot;https://github.com/Shafied&quot;&gt;@Shafied&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/AndreyBelym/testcafe-reporter-nunit&quot;&gt;NUnit&lt;/a&gt; (by &lt;a href=&quot;https://github.com/AndreyBelym&quot;&gt;@AndreyBelym&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/jimthedev/timecafe&quot;&gt;TimeCafe&lt;/a&gt; (by &lt;a href=&quot;https://github.com/jimthedev&quot;&gt;@jimthedev&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GitHub Action&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Run TestCafe tests in GitHub Actions workflows.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/DevExpress/testcafe-action/&quot;&gt;Run TestCafe&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Test Accessibility&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Find accessibility issues in your web app.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/helen-dikareva/axe-testcafe&quot;&gt;axe-testcafe&lt;/a&gt; (by &lt;a href=&quot;https://github.com/helen-dikareva&quot;&gt;@helen-dikareva&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;IDE Plugins&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Run tests and view results from your favorite IDE.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/romanresh/vscode-testcafe&quot;&gt;TestCafe Test Runner&lt;/a&gt; for Visual Studio Code (by &lt;a href=&quot;https://github.com/romanresh&quot;&gt;@romanresh&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Selminha/testlatte&quot;&gt;TestLatte&lt;/a&gt; for Visual Studio Code (by &lt;a href=&quot;https://github.com/Selminha&quot;&gt;@Selminha&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lilbaek/webstorm-testcafe&quot;&gt;TestCafe runner for Webstorm&lt;/a&gt; (by &lt;a href=&quot;https://github.com/lilbaek&quot;&gt;@lilbaek&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/hdorgeval/testcafe-snippets&quot;&gt;Code snippets for TestCafe&lt;/a&gt; (by &lt;a href=&quot;https://github.com/hdorgeval&quot;&gt;@hdorgeval&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/churkin/testcafe-sublimetext&quot;&gt;SublimeText&lt;/a&gt; (by &lt;a href=&quot;https://github.com/churkin&quot;&gt;@churkin&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ESLint&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Use ESLint when writing and editing TestCafe tests.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/miherlosev/eslint-plugin-testcafe&quot;&gt;ESLint plugin&lt;/a&gt; (by &lt;a href=&quot;https://github.com/miherlosev&quot;&gt;@miherlosev&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cucumber Support&lt;/strong&gt;
   &lt;!-- raw HTML omitted --&gt; Create and run tests that use the Cucumber syntax.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/kiwigrid/gherkin-testcafe&quot;&gt;gherkin-testcafe&lt;/a&gt; (by &lt;a href=&quot;https://github.com/kiwigrid&quot;&gt;@kiwigrid&lt;/a&gt;) - run your Cucumber tests with TestCafe as a backend. Requires &lt;a href=&quot;https://github.com/cucumber/cucumber-js&quot;&gt;CucumberJS&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Marketionist/testcafe-cucumber-steps&quot;&gt;testcafe-cucumber-steps&lt;/a&gt; (by &lt;a href=&quot;https://github.com/Marketionist&quot;&gt;@Marketionist&lt;/a&gt;) - provides predefined Cucumber steps for &lt;a href=&quot;https://github.com/kiwigrid/gherkin-testcafe&quot;&gt;gherkin-testcafe&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Different Versions of TestCafe&lt;/h2&gt; 
&lt;p&gt;| &amp;nbsp; | &lt;a href=&quot;https://devexpress.github.io/testcafe&quot;&gt;TestCafe&lt;/a&gt; | &lt;a href=&quot;https://www.devexpress.com/products/testcafestudio/?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;TestCafe Studio&lt;/a&gt; | | ------ |:-------------------------------------------------:|:-----------------------------------------------------------------------:| | No need for WebDriver, browser plugins or other tools | ✓ | ✓ | | Cross-platform and cross-browser out of the box | ✓ | ✓ | | Write tests in the latest JavaScript or TypeScript | ✓ | ✓ | | Clear and flexible &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/&quot;&gt;API&lt;/a&gt; supports ES6 and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/recipes/using-page-model.html&quot;&gt;PageModel pattern&lt;/a&gt; | ✓ | ✓ | | Stable tests due to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/assertions/#smart-assertion-query-mechanism&quot;&gt;Smart Assertion Query Mechanism&lt;/a&gt; | ✓ | ✓ | | Tests run fast due to intelligent &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/waiting-for-page-elements-to-appear.html&quot;&gt;Automatic Waiting Mechanism&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html&quot;&gt;Concurrent Test Execution&lt;/a&gt; | ✓ | ✓ | | Custom reporter plugins | ✓ | ✓ | | Use third-party Node.js modules in test scripts | ✓ | ✓ | | Integration with popular CI systems | ✓ | &amp;nbsp;✓* | | Free and open-source | ✓ | &amp;nbsp; | | &lt;a href=&quot;https://docs.devexpress.com/TestCafeStudio/400165/guides/record-tests?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;Visual Test Recorder&lt;/a&gt; | &amp;nbsp; | ✓ | | &lt;a href=&quot;https://docs.devexpress.com/TestCafeStudio/400190/user-interface/test-editor?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;Interactive Test Editor&lt;/a&gt; | &amp;nbsp; | ✓ | | &lt;a href=&quot;https://docs.devexpress.com/TestCafeStudio/400407/guides/record-tests/element-selectors#auto-generated-element-selectors?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;Automatic Selector Generation&lt;/a&gt; | &amp;nbsp; | ✓ | | &lt;a href=&quot;https://docs.devexpress.com/TestCafeStudio/400189/user-interface/run-configurations-dialog?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;Run Configuration Manager&lt;/a&gt; | &amp;nbsp; | ✓ | | &lt;a href=&quot;https://docs.devexpress.com/TestCafeStudio/400181/user-interface/code-editor?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=tc-gh-diff&quot;&gt;IDE-like GUI&lt;/a&gt; | &amp;nbsp; | ✓ |&lt;/p&gt; 
&lt;p&gt;* You can use open-source TestCafe to run TestCafe Studio tests in CI systems.&lt;/p&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Show everyone you are using TestCafe: &lt;img src=&quot;https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg&quot; alt=&quot;Tested with TestCafe&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To display this badge, add the following code to your repository readme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;https://github.com/DevExpress/testcafe&quot;&amp;gt;
    &amp;lt;img alt=&quot;Tested with TestCafe&quot; src=&quot;https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg&quot;&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Thanks to BrowserStack&lt;/h2&gt; 
&lt;p&gt;We are grateful to BrowserStack for providing the infrastructure that we use to test code in this repository.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code released under the &lt;a href=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Creators&lt;/h2&gt; 
&lt;p&gt;Developer Express Inc. (&lt;a href=&quot;https://devexpress.com&quot;&gt;https://devexpress.com&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>you-dont-need/You-Dont-Need-Momentjs</title>
      <link>https://github.com/you-dont-need/You-Dont-Need-Momentjs</link>
      <description>&lt;p&gt;List of functions which you can use to replace moment.js + ESLint Plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;You don&#39;t (may not) need Moment.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://spectrum.chat/you-dont-need/momentjs&quot;&gt;&lt;img src=&quot;https://withspectrum.github.io/badge/badge.svg&quot; alt=&quot;Join the community on Spectrum&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://momentjs.com/&quot;&gt;Moment.js&lt;/a&gt; is a fantastic time &amp;amp; date library with lots of great features and utilities. However, if you are working on a performance sensitive web application, it might cause a huge performance overhead because of its complex APIs and large bundle size.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/screenshot.png&quot; alt=&quot;Large bundle size&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Problems with Moment.js:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is highly based on OOP APIs, which makes it fail to work with tree-shaking, thus leading to a huge bundle size and performance issues.&lt;/li&gt; 
 &lt;li&gt;It is mutable and it causes bugs: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://momentjs.com/docs/#/parsing/moment-clone/&quot;&gt;clone&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30979178/how-do-i-work-around-mutability-in-moment-js&quot;&gt;How do I work around mutability in moment.js?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Complex OOP API (which doubles mutability problem). Here is an example: https://github.com/moment/moment/blob/develop/src/test/moment/add_subtract.js#L244-L286 Moment.js allows to use &lt;code&gt;a.subtract(&#39;ms&#39;, 50)&lt;/code&gt;, &lt;code&gt;a.subtract(50, &#39;ms&#39;)&lt;/code&gt; and even &lt;code&gt;a.subtract(&#39;s&#39;, &#39;50&#39;)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are not using timezone but only a few simple functions from moment.js, this might bloat your app, and therefore is considered overkill. &lt;a href=&quot;https://github.com/iamkun/dayjs&quot;&gt;dayjs&lt;/a&gt; has a smaller core and has very similar APIs so it makes it very easy to migrate. &lt;a href=&quot;https://github.com/date-fns/date-fns&quot;&gt;date-fns&lt;/a&gt; enables &lt;a href=&quot;https://github.com/date-fns/date-fns/issues/275#issuecomment-264934189&quot;&gt;tree-shaking and other benefits&lt;/a&gt; so that it works great with React, Sinon.js, and webpack, etc. See https://github.com/moment/moment/issues/2373 for more ideas on why and how people switch from moment.js to other solutions.&lt;/p&gt; 
&lt;h2&gt;Brief Comparison&lt;/h2&gt; 
&lt;p&gt;| Name | Size original/gzipped | Tree-shaking | Popularity (stars) | Methods richness | Pattern | Timezone Support | Locale | | ---------------------------------------- | -------------------------------- | ------------ | ------------------ | ---------------- | ---------- | ---------------------- | ------ | | &lt;a href=&quot;https://momentjs.com/&quot;&gt;Moment.js&lt;/a&gt; | 329K/69.6K | No | 43.4k | High | OO | Good (moment-timezone) | 123 | | &lt;a href=&quot;https://moment.github.io/luxon/&quot;&gt;Luxon&lt;/a&gt; | 59.9K/17.2K | No | 9k | High | OO | Good (Intl) | - | | &lt;a href=&quot;https://date-fns.org&quot;&gt;date-fns&lt;/a&gt; | 78.4k/13.4k without tree-shaking | Yes | 21.3k | High | Functional | Good (date-fns-tz) | 64 | | &lt;a href=&quot;https://github.com/iamkun/dayjs&quot;&gt;dayjs&lt;/a&gt; | 6.5k/2.6k without plugins | No | 28.1k | High | OO | Good (Intl) | 138 |&lt;/p&gt; 
&lt;h2&gt;Voice of Developers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/oysterprotocol/webnode/pull/116&quot;&gt;Removed moment.js to replace with date-fns - build output reduced by 40%&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;—
  &lt;!-- raw HTML omitted --&gt;Jared Farago from &lt;a href=&quot;https://github.com/oysterprotocol/webnode/pull/116&quot;&gt;webnode&lt;/a&gt; project.
  &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://twitter.com/dan_abramov/status/805030922785525760&quot;&gt;Good library if you’re looking to replace Moment.js for one reason or another. Immutable too.&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;—
  &lt;!-- raw HTML omitted --&gt;Dan Abramov, Author of &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;Redux&lt;/a&gt; and co-author of &lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;. Building tools for humans.
  &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://twitter.com/silvenon/status/804946772690923520&quot;&gt;I strongly recommend using date-fns over Moment.js, it&#39;s has a nicer API and you can include only parts you need!&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;—
  &lt;!-- raw HTML omitted --&gt;Matija Marohnić, a design-savvy frontend developer from Croatia.
  &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ESLint Plugin&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you&#39;re using &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt;, you can install a &lt;a href=&quot;http://eslint.org/docs/user-guide/configuring#using-the-configuration-from-a-plugin&quot;&gt;plugin&lt;/a&gt; that will help you identify places in your codebase where you don&#39;t (may not) need Moment.js.&lt;/p&gt; 
&lt;p&gt;Install the plugin...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install --save-dev eslint-plugin-you-dont-need-momentjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...then update your config&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;extends&quot; : [&quot;plugin:you-dont-need-momentjs/recommended&quot;],
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#parse&quot;&gt;Parse&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#string--date-format&quot;&gt;String + Date Format&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#string--time-format&quot;&gt;String + Time Format&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#string--format--locale&quot;&gt;String + Format + locale&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#get--set&quot;&gt;Get + Set&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#millisecond--second--minute--hour&quot;&gt;Millisecond/Second/Minute/Hour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#date-of-month&quot;&gt;Date of Month&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#day-of-week&quot;&gt;Day of Week&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#day-of-year&quot;&gt;Day of Year&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#week-of-year&quot;&gt;Week of Year&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#days-in-month&quot;&gt;Days in Month&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#weeks-in-year&quot;&gt;Weeks in Year&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#maximum-of-the-given-dates&quot;&gt;Maximum of the given dates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#minimum-of-the-given-dates&quot;&gt;Minimum of the given dates&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#manipulate&quot;&gt;Manipulate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#add&quot;&gt;Add&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#subtract&quot;&gt;Subtract&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#start-of-time&quot;&gt;Start of Time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#end-of-time&quot;&gt;End of Time&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#display&quot;&gt;Display&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#format&quot;&gt;Format&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#time-from-now&quot;&gt;Time from now&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#time-from-x&quot;&gt;Time from X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#difference&quot;&gt;Difference&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#query&quot;&gt;Query&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-before&quot;&gt;Is Before&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-same&quot;&gt;Is Same&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-after&quot;&gt;Is After&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-between&quot;&gt;Is Between&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-leap-year&quot;&gt;Is Leap Year&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#is-a-date&quot;&gt;Is a Date&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Feature Parity&lt;/h1&gt; 
&lt;p&gt;⚠️ Indicates other packages or work are needed. See individual functions &lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;above&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| | Native | Luxon | date-fns | dayjs | | ------------------------------ | ------ | ----- | -------- | ----- | | &lt;strong&gt;Parse&lt;/strong&gt; | | | | | | String + Date Format | ✅ | ✅ | ✅ | ✅ | | String + Time Format | ✅ | ✅ | ✅ | ⚠️ | | String + Format + locale | ❌ | ⚠️ | ✅ | ⚠️ | | | | | | | | &lt;strong&gt;Get + Set&lt;/strong&gt; | | | | | | Millisecond/Second/Minute/Hour | ✅ | ✅ | ✅ | ✅ | | Date of Month | ✅ | ✅ | ✅ | ✅ | | Day of Week | ✅ | ✅ | ✅ | ✅ | | Day of Year | ✅ | ✅ | ✅ | ✅ | | Week of Year | ✅ | ✅ | ✅ | ⚠️ | | Days in Month | ✅ | ✅ | ✅ | ✅ | | Weeks in Year | ❌ | ❌ | ✅ | ⚠️ | | Maximum of the given dates | ✅ | ✅ | ✅ | ⚠️ | | Minimum of the given dates | ✅ | ✅ | ✅ | ⚠️ | | | | | | | | &lt;strong&gt;Manipulate&lt;/strong&gt; | | | | | | Add | ✅ | ✅ | ✅ | ✅ | | Subtract | ✅ | ✅ | ✅ | ✅ | | Start of Time | ❌ | ✅ | ✅ | ✅ | | End of Time | ✅ | ✅ | ✅ | ✅ | | | | | | | | &lt;strong&gt;Display&lt;/strong&gt; | | | | | | Format | ❌ | ✅ | ✅ | ✅ | | Time from now | ✅ | ❌ | ✅ | ⚠️ | | Time from X | ❌ | ❌ | ✅ | ⚠️ | | Difference | ✅ | ✅ | ✅ | ✅ | | | | | | | | &lt;strong&gt;Query&lt;/strong&gt; | | | | | | Is Before | ✅ | ✅ | ✅ | ✅ | | Is Same | ✅ | ✅ | ✅ | ✅ | | Is After | ✅ | ✅ | ✅ | ✅ | | Is Between | ❌ | ✅ | ✅ | ⚠️ | | Is Leap Year | ✅ | ✅ | ✅ | ⚠️ | | Is a Date | ✅ | ✅ | ✅ | ✅ |&lt;/p&gt; 
&lt;h2&gt;Parse&lt;/h2&gt; 
&lt;h3&gt;String + Date Format&lt;/h3&gt; 
&lt;p&gt;Return the date parsed from date string using the given format string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;12-25-1995&#39;, &#39;MM-DD-YYYY&#39;);
// =&amp;gt; &quot;1995-12-24T13:00:00.000Z&quot;

// Native
const datePattern = /^(\d{2})-(\d{2})-(\d{4})$/;
const [, month, day, year] = datePattern.exec(&#39;12-25-1995&#39;);
new Date(`${month}, ${day} ${year}`);
// =&amp;gt; &quot;1995-12-24T13:00:00.000Z&quot;

// date-fns
import parse from &#39;date-fns/parse&#39;;
parse(&#39;12-25-1995&#39;, &#39;MM-dd-yyyy&#39;, new Date());
// =&amp;gt; &quot;1995-12-24T13:00:00.000Z&quot;

// dayjs
dayjs(&#39;12-25-1995&#39;);
// =&amp;gt; &quot;1995-12-24T13:00:00.000Z&quot;

// luxon
DateTime.fromFormat(&#39;12-25-1995&#39;, &#39;MM-dd-yyyy&#39;).toJSDate();
// =&amp;gt; &quot;1995-12-24T13:00:00.000Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;String + Time Format&lt;/h3&gt; 
&lt;p&gt;Return the date parsed from time string using the given format string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2010-10-20 4:30&#39;, &#39;YYYY-MM-DD HH:mm&#39;);
// =&amp;gt; &quot;2010-10-19T17:30:00.000Z&quot;

// Native
const datePattern = /^(\d{4})-(\d{2})-(\d{2})\s(\d{1,2}):(\d{2})$/;
const [, year, month, day, rawHour, min] = datePattern.exec(&#39;2010-10-20 4:30&#39;);
new Date(`${year}-${month}-${day}T${(&#39;0&#39; + rawHour).slice(-2)}:${min}:00`);
// =&amp;gt; &quot;2010-10-19T17:30:00.000Z&quot;

// date-fns
import parse from &#39;date-fns/parse&#39;;
parse(&#39;2010-10-20 4:30&#39;, &#39;yyyy-MM-dd H:mm&#39;, new Date());
// =&amp;gt; &quot;2010-10-19T17:30:00.000Z&quot;

// dayjs ⚠️ requires customParseFormat plugin
import customParseFormat from &#39;dayjs/plugin/customParseFormat&#39;;
dayjs.extend(customParseFormat);
dayjs(&#39;2010-10-20 4:30&#39;, &#39;YYYY-MM-DD HH:mm&#39;);
// =&amp;gt; &quot;2010-10-19T17:30:00.000Z&quot;

// luxon
DateTime.fromFormat(&#39;2010-10-20 4:30&#39;, &#39;yyyy-MM-dd H:mm&#39;).toJSDate();
// =&amp;gt; &quot;2010-10-19T17:30:00.000Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;String + Format + locale&lt;/h3&gt; 
&lt;p&gt;Return the date parsed from string using the given format string and locale.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2012 mars&#39;, &#39;YYYY MMM&#39;, &#39;fr&#39;);
// =&amp;gt; &quot;2012-02-29T13:00:00.000Z&quot;

// date-fns
import parse from &#39;date-fns/parse&#39;;
import fr from &#39;date-fns/locale/fr&#39;;
parse(&#39;2012 mars&#39;, &#39;yyyy MMMM&#39;, new Date(), { locale: fr });
// =&amp;gt; &quot;2012-02-29T13:00:00.000Z&quot;

// dayjs ⚠️ requires customParseFormat plugin
import customParseFormat from &#39;dayjs/plugin/customParseFormat&#39;;
import &#39;dayjs/locale/fr&#39;;
dayjs.extend(customParseFormat);
dayjs(&#39;2012 mars&#39;, &#39;YYYY MMM&#39;, &#39;fr&#39;);
// =&amp;gt; &quot;2012-02-29T13:00:00.000Z&quot;

// Luxon ❌ does not support Locale for node unless https://moment.github.io/luxon/docs/manual/install.html#node
DateTime.fromFormat(&#39;2012 mars&#39;, &#39;yyyy MMMM&#39;, { locale: &#39;fr&#39; });
// =&amp;gt; &quot;2012-02-29T13:00:00.000Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Get + Set&lt;/h2&gt; 
&lt;h3&gt;Millisecond / Second / Minute / Hour&lt;/h3&gt; 
&lt;p&gt;Get the &lt;code&gt;Millisecond/Second/Minute/Hour&lt;/code&gt; of the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().seconds();
// =&amp;gt; 49
moment().hours();
// =&amp;gt; 19

// Native
new Date().getSeconds();
// =&amp;gt; 49
new Date().getHours();
// =&amp;gt; 19

// date-fns
import getSeconds from &#39;date-fns/getSeconds&#39;;
import getHours from &#39;date-fns/getHours&#39;;
getSeconds(new Date());
// =&amp;gt; 49
getHours(new Date());
// =&amp;gt; 19

// dayjs
dayjs().second();
// =&amp;gt; 49
dayjs().hour();
// =&amp;gt; 19

// Luxon
DateTime.local().second;
// =&amp;gt; 49
DateTime.local().hour;
// =&amp;gt; 19
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Performance tests&lt;/h3&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1500.703ms | | Native | 348.411ms | | DateFns | 520.670ms | | DayJs | 494.234ms | | Luxon | 1208.368ms |&lt;/p&gt; 
&lt;p&gt;Set the &lt;code&gt;Millisecond/Second/Minute/Hour&lt;/code&gt; of the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().seconds(30);
// =&amp;gt; &quot;2018-09-09T09:12:30.695Z&quot;
moment().hours(13);
// =&amp;gt; &quot;2018-09-09T03:12:49.695Z&quot;

// Native
new Date(new Date().setSeconds(30));
// =&amp;gt; &quot;2018-09-09T09:12:30.695Z&quot;
new Date(new Date().setHours(13));
// =&amp;gt; &quot;2018-09-09T03:12:49.695Z&quot;

// date-fns
import setSeconds from &#39;date-fns/setSeconds&#39;;
import setHours from &#39;date-fns/setHours&#39;;
setSeconds(new Date(), 30);
// =&amp;gt; &quot;2018-09-09T09:12:30.695Z&quot;
setHours(new Date(), 13);
// =&amp;gt; &quot;2018-09-09T03:12:49.695Z&quot;

// dayjs
dayjs().set(&#39;second&#39;, 30);
// =&amp;gt; &quot;2018-09-09T09:12:30.695Z&quot;
dayjs().set(&#39;hour&#39;, 13);
// =&amp;gt; &quot;2018-09-09T03:12:49.695Z&quot;

// luxon
DateTime.utc()
  .set({ second: 30 })
  .toJSDate();
// =&amp;gt; &quot;2018-09-09T09:12:30.695Z&quot;
DateTime.utc()
  .set({ hour: 13 })
  .toJSDate();
// =&amp;gt; &quot;2018-09-09T03:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Performance tests&lt;/h3&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1689.744ms | | Native | 636.741ms | | DateFns | 714.148ms | | DayJs | 2037.603ms | | Luxon | 2897.571ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Date of Month&lt;/h3&gt; 
&lt;p&gt;Gets or sets the day of the month.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().date();
// =&amp;gt; 9
moment().date(4);
// =&amp;gt; &quot;2018-09-04T09:12:49.695Z&quot;

// Native
new Date().getDate();
// =&amp;gt; 9
new Date().setDate(4);
// =&amp;gt; &quot;2018-09-04T09:12:49.695Z&quot;

// date-fns
import getDate from &#39;date-fns/getDate&#39;;
import setDate from &#39;date-fns/setDate&#39;;
getDate(new Date());
// =&amp;gt; 9
setDate(new Date(), 4);
// =&amp;gt; &quot;2018-09-04T09:12:49.695Z&quot;

// dayjs
dayjs().date();
// =&amp;gt; 9
dayjs().set(&#39;date&#39;, 4);
// =&amp;gt; &quot;2018-09-04T09:12:49.695Z&quot;

// luxon
DateTime.utc().day;
// =&amp;gt; 9
DateTime.utc()
  .set({ day: 4 })
  .toString();
// =&amp;gt; &quot;2018-09-04T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Performance tests&lt;/h3&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1381.669ms | | Native | 397.415ms | | DateFns | 588.004ms | | DayJs | 1218.025ms | | Luxon | 2705.606ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Day of Week&lt;/h3&gt; 
&lt;p&gt;Gets or sets the day of the week.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().day();
// =&amp;gt; 0 (Sunday)
moment().day(-14);
// =&amp;gt; &quot;2018-08-26T09:12:49.695Z&quot;

// Native
new Date().getDay();
// =&amp;gt; 0 (Sunday)
new Date().setDate(new Date().getDate() - 14);
// =&amp;gt; &quot;2018-08-26T09:12:49.695Z&quot;

// date-fns
import getDay from &#39;date-fns/getDay&#39;;
import setDay from &#39;date-fns/setDay&#39;;
getDay(new Date());
// =&amp;gt; 0 (Sunday)
setDay(new Date(), -14);
// =&amp;gt; &quot;2018-08-26T09:12:49.695Z&quot;

// dayjs
dayjs().day();
// =&amp;gt; 0 (Sunday)
dayjs().set(&#39;day&#39;, -14);
// =&amp;gt; &quot;2018-08-26T09:12:49.695Z&quot;

// Luxon
DateTime.local().weekday;
// =&amp;gt; 7 (Sunday)
DateTime.local()
  .minus({ day: 14 })
  .toJSDate();
// =&amp;gt; &quot;2018-08-26T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1919.404ms | | Native | 543.466ms | | DateFns | 841.436ms | | DayJs | 1229.475ms | | Luxon | 3936.282ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Day of Year&lt;/h3&gt; 
&lt;p&gt;Gets or sets the day of the year.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().dayOfYear();
// =&amp;gt; 252
moment().dayOfYear(256);
// =&amp;gt; &quot;2018-09-13T09:12:49.695Z&quot;

// Native
Math.floor(
  (new Date() - new Date(new Date().getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24
);
// =&amp;gt; 252

// date-fns
import getDayOfYear from &#39;date-fns/getDayOfYear&#39;;
import setDayOfYear from &#39;date-fns/setDayOfYear&#39;;
getDayOfYear(new Date());
// =&amp;gt; 252
setDayOfYear(new Date(), 256);
// =&amp;gt; &quot;2018-09-13T09:12:49.695Z&quot;

// dayjs ⚠️ requires dayOfYear plugin
import dayOfYear from &#39;dayjs/plugin/dayOfYear&#39;;
dayjs.extend(dayOfYear);
dayjs().dayOfYear();
// =&amp;gt; 252
dayjs().dayOfYear(256);
// =&amp;gt; &quot;2018-09-13T09:12:49.695Z&quot;

// Luxon
DateTime.local().ordinal;
// =&amp;gt; 252
DateTime.local()
  .set({ ordinal: 256 })
  .toString();
// =&amp;gt; &quot;2018-09-13T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 5511.172ms | | Native | 530.592ms | | DateFns | 2079.043ms | | DayJs | - | | Luxon | 3540.810ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Week of Year&lt;/h3&gt; 
&lt;p&gt;Gets or sets the week of the year.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().week();
// =&amp;gt; 37
moment().week(24);
// =&amp;gt; &quot;2018-06-10T09:12:49.695Z&quot;

// date-fns
import getWeek from &#39;date-fns/getWeek&#39;;
import setWeek from &#39;date-fns/setWeek&#39;;
getWeek(new Date());
// =&amp;gt; 37
setWeek(new Date(), 24);
// =&amp;gt; &quot;2018-06-10T09:12:49.695Z&quot;

// native getWeek
const day = new Date();
const MILLISECONDS_IN_WEEK = 604800000;
const firstDayOfWeek = 1; // monday as the first day (0 = sunday)
const startOfYear = new Date(day.getFullYear(), 0, 1);
startOfYear.setDate(
  startOfYear.getDate() + (firstDayOfWeek - (startOfYear.getDay() % 7))
);
const dayWeek = Math.round((day - startOfYear) / MILLISECONDS_IN_WEEK) + 1;
// =&amp;gt; 37

// native setWeek
const day = new Date();
const week = 24;
const MILLISECONDS_IN_WEEK = 604800000;
const firstDayOfWeek = 1; // monday as the first day (0 = sunday)
const startOfYear = new Date(day.getFullYear(), 0, 1);
startOfYear.setDate(
  startOfYear.getDate() + (firstDayOfWeek - (startOfYear.getDay() % 7))
);
const dayWeek = Math.round((day - startOfYear) / MILLISECONDS_IN_WEEK) + 1;
day.setDate(day.getDate() - (dayWeek - week) * 7);
day.toISOString();
// =&amp;gt; &quot;2018-06-10T09:12:49.794Z

// dayjs ⚠️ requires weekOfYear plugin
import weekOfYear from &#39;dayjs/plugin/weekOfYear&#39;;
dayjs.extend(weekOfYear);
dayjs().week();
// =&amp;gt; 37
dayjs().week(24);
// =&amp;gt; &quot;2018-06-10T09:12:49.695Z&quot;

// Luxon
DateTime.local().weekNumber;
// =&amp;gt; 37
DateTime.local()
  .set({ weekNumber: 23 })
  .toString();
// =&amp;gt; &quot;2018-06-10T09:12:49.794Z
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 7147.201ms | | Native | 1371.631ms | | DateFns | 5834.815ms | | DayJs | - | | Luxon | 4514.771ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Days in Month&lt;/h3&gt; 
&lt;p&gt;Get the number of days in the current month.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2012-02&#39;, &#39;YYYY-MM&#39;).daysInMonth();
// =&amp;gt; 29

// Native
new Date(2012, 02, 0).getDate();
// =&amp;gt; 29

// date-fns
import getDaysInMonth from &#39;date-fns/getDaysInMonth&#39;;
getDaysInMonth(new Date(2012, 1));
// =&amp;gt; 29

// dayjs
dayjs(&#39;2012-02&#39;).daysInMonth();
// =&amp;gt; 29

// Luxon
DateTime.local(2012, 2).daysInMonth;
// =&amp;gt; 29
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 4415.065ms | | Native | 186.196ms | | DateFns | 634.084ms | | DayJs | 1922.774ms | | Luxon | 1403.032ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Weeks in Year&lt;/h3&gt; 
&lt;p&gt;Gets the number of weeks in the current year, according to ISO weeks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().isoWeeksInYear();
// =&amp;gt; 52

// date-fns
import getISOWeeksInYear from &#39;date-fns/getISOWeeksInYear&#39;;
getISOWeeksInYear(new Date());
// =&amp;gt; 52

// dayjs ⚠️ requires isoWeeksInYear plugin
import isoWeeksInYear from &#39;dayjs/plugin/isoWeeksInYear&#39;;
dayjs.extend(isoWeeksInYear);
dayjs().isoWeeksInYear();
// =&amp;gt; 52

// Luxon
DateTime.local().weeksInWeekYear;
// =&amp;gt; 52
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1065.247ms | | Native | - | | DateFns | 4954.042ms | | DayJs | - | | Luxon | 1134.483ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Maximum of the given dates&lt;/h3&gt; 
&lt;p&gt;Returns the maximum (most distant future) of the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const array = [
  new Date(2017, 4, 13),
  new Date(2018, 2, 12),
  new Date(2016, 0, 10),
  new Date(2016, 0, 9),
];
// Moment.js
moment.max(array.map(a =&amp;gt; moment(a)));
// =&amp;gt; &quot;2018-03-11T13:00:00.000Z&quot;

// Native
new Date(Math.max.apply(null, array)).toISOString();
// =&amp;gt; &quot;2018-03-11T13:00:00.000Z&quot;

// date-fns
import max from &#39;date-fns/max&#39;;
max(array);
// =&amp;gt; &quot;2018-03-11T13:00:00.000Z&quot;

// dayjs ⚠️ requires minMax plugin
import minMax from &#39;dayjs/plugin/minMax&#39;;
dayjs.extend(minMax);
dayjs.max(array.map(a =&amp;gt; dayjs(a)));
// =&amp;gt; &quot;2018-03-11T13:00:00.000Z&quot;

// Luxon
DateTime.max(...array.map(a =&amp;gt; DateTime.fromJSDate(a))).toJSDate();
// =&amp;gt; &quot;2018-03-11T13:00:00.000Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1780.075ms | | Native | 828.332ms | | DateFns | 980.938ms | | DayJs | - | | Luxon | 2694.702ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Minimum of the given dates&lt;/h3&gt; 
&lt;p&gt;Returns the minimum (most distant future) of the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const array = [
  new Date(2017, 4, 13),
  new Date(2018, 2, 12),
  new Date(2016, 0, 10),
  new Date(2016, 0, 9),
];
// Moment.js
moment.min(array.map(a =&amp;gt; moment(a)));
// =&amp;gt; &quot;2016-01-08T13:00:00.000Z&quot;

// Native
new Date(Math.min.apply(null, array)).toISOString();
// =&amp;gt; &quot;2016-01-08T13:00:00.000Z&quot;

// date-fns
import min from &#39;date-fns/min&#39;;
min(array);
// =&amp;gt; &quot;2016-01-08T13:00:00.000Z&quot;

// dayjs ⚠️ requires minMax plugin
import minMax from &#39;dayjs/plugin/minMax&#39;;
dayjs.extend(minMax);
dayjs.min(array.map(a =&amp;gt; dayjs(a)));
// =&amp;gt; &quot;2016-01-08T13:00:00.000Z&quot;

// Luxon
DateTime.min(...array.map(a =&amp;gt; DateTime.fromJSDate(a))).toJSDate();
// =&amp;gt; &quot;2016-01-08T13:00:00.000Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1744.459ms | | Native | 819.646ms | | DateFns | 841.249ms | | DayJs | - | | Luxon | 2720.462ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Manipulate&lt;/h2&gt; 
&lt;h3&gt;Add&lt;/h3&gt; 
&lt;p&gt;Add the specified number of days to the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().add(7, &#39;days&#39;);
// =&amp;gt; &quot;2018-09-16T09:12:49.695Z&quot;

// Native
const now = new Date();
now.setDate(now.getDate() + 7);
// =&amp;gt; &quot;Sun Sep 16 2018 09:12:49&quot;

// date-fns
import addDays from &#39;date-fns/addDays&#39;;
addDays(new Date(), 7);
// =&amp;gt; &quot;2018-09-16T09:12:49.695Z&quot;

// dayjs
dayjs().add(7, &#39;day&#39;);
// =&amp;gt; &quot;2018-09-16T09:12:49.695Z&quot;

// Luxon
DateTime.local()
  .plus({ day: 7 })
  .toJSDate();
// =&amp;gt; &quot;2018-09-16T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1309.485ms | | Native | 259.932ms | | DateFns | 385.394ms | | DayJs | 1911.881ms | | Luxon | 3919.797ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Subtract&lt;/h3&gt; 
&lt;p&gt;Subtract the specified number of days from the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().subtract(7, &#39;days&#39;);
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;

// Native
new Date(new Date().getTime() - 1000 * 60 * 60 * 24 * 7);
// =&amp;gt; Sun Sep 09 2018 09:12:49

// date-fns
import subDays from &#39;date-fns/subDays&#39;;
subDays(new Date(), 7);
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;

// dayjs
dayjs().subtract(7, &#39;day&#39;);
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;

// Luxon
DateTime.local()
  .minus({ day: 7 })
  .toJSDate();
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1278.384ms | | Native | 215.255ms | | DateFns | 379.057ms | | DayJs | 1772.593ms | | Luxon | 4028.866ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Start of Time&lt;/h3&gt; 
&lt;p&gt;Return the start of a unit of time for the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().startOf(&#39;month&#39;);
// =&amp;gt; &quot;2018-08-31T14:00:00.000Z&quot;

// date-fns
import startOfMonth from &#39;date-fns/startOfMonth&#39;;
startOfMonth(new Date());
// =&amp;gt; &quot;2018-08-31T14:00:00.000Z&quot;

// dayjs
dayjs().startOf(&#39;month&#39;);
// =&amp;gt; &quot;2018-08-31T14:00:00.000Z&quot;

// Luxon
DateTime.local().startOf(&#39;month&#39;);
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1078.948ms | | Native | - | | DateFns | 398.107ms | | DayJs | 765.358ms | | Luxon | 2306.765ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;End of Time&lt;/h3&gt; 
&lt;p&gt;Return the end of a unit of time for the given date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().endOf(&#39;day&#39;);
// =&amp;gt; &quot;2018-09-09T13:59:59.999Z&quot;

// Native
const end = new Date();
end.setHours(23, 59, 59, 999);
end.toISOString();
// =&amp;gt; &quot;2018-09-09T16:59:59.999Z&quot;

// date-fns
import endOfDay from &#39;date-fns/endOfDay&#39;;
endOfDay(new Date());
// =&amp;gt; &quot;2018-09-09T13:59:59.999Z&quot;

// dayjs
dayjs().endOf(&#39;day&#39;);
// =&amp;gt; &quot;2018-09-09T13:59:59.999Z&quot;

// Luxon
DateTime.local().endOf(&#39;day&#39;);
// =&amp;gt; &quot;2018-09-02T09:12:49.695Z&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Library | Time | | ------- | ---------- | | Moment | 1241.304ms | | Native | 225.519ms | | DateFns | 319.773ms | | DayJs | 914.425ms | | Luxon | 9920.529ms |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Display&lt;/h2&gt; 
&lt;h3&gt;Format&lt;/h3&gt; 
&lt;p&gt;Return the formatted date string in the given format.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment().format(&#39;dddd, MMMM Do YYYY, h:mm:ss A&#39;);
// =&amp;gt; &quot;Sunday, September 9th 2018, 7:12:49 PM&quot;
moment().format(&#39;ddd, hA&#39;);
// =&amp;gt; &quot;Sun, 7PM&quot;

// date-fns
import format from &#39;date-fns/format&#39;;
format(new Date(), &#39;eeee, MMMM do YYYY, h:mm:ss aa&#39;);
// =&amp;gt; &quot;Sunday, September 9th 2018, 7:12:49 PM&quot;
format(new Date(), &#39;eee, ha&#39;);
// =&amp;gt; &quot;Sun, 7PM&quot;

// dayjs
dayjs().format(&#39;dddd, MMMM D YYYY, h:mm:ss A&#39;);
// =&amp;gt; &quot;Sunday, September 9 2018, 7:12:49 PM&quot;
dayjs().format(&#39;ddd, hA&#39;);
// =&amp;gt; &quot;Sun, 7PM&quot;
// dayjs ⚠️ requires advancedFormat plugin to support more format tokens
import advancedFormat from &#39;dayjs/plugin/customParseFormat&#39;;
dayjs.extend(advancedFormat);
dayjs().format(&#39;dddd, MMMM Do YYYY, h:mm:ss A&#39;);
// =&amp;gt; &quot;Sunday, September 9th 2018, 7:12:49 PM&quot;

// Luxon
DateTime.fromMillis(time).toFormat(&#39;EEEE, MMMM dd yyyy, h:mm:ss a&#39;);
// =&amp;gt; &quot;Sunday, September 9 2018, 7:12:49 PM&quot; ⚠️  not support 9th
DateTime.fromMillis(time).toFormat(&#39;EEE, ha&#39;);
// =&amp;gt; &quot;Sun, 7PM&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Time from now&lt;/h3&gt; 
&lt;p&gt;Return time from now.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(1536484369695).fromNow();
// =&amp;gt; &quot;4 days ago&quot;

// Native
new Intl.RelativeTimeFormat().format(-4, &#39;day&#39;);
// =&amp;gt; &quot;4 days ago&quot;

// date-fns
import formatDistance from &#39;date-fns/formatDistance&#39;;
formatDistance(new Date(1536484369695), new Date(), { addSuffix: true });
// =&amp;gt; &quot;4 days ago&quot;

// dayjs ⚠️ requires relativeTime plugin
import relativeTime from &#39;dayjs/plugin/relativeTime&#39;;
dayjs.extend(relativeTime);

dayjs(1536484369695).fromNow();
// =&amp;gt; &quot;5 days ago&quot; ⚠️  the rounding method of this plugin is different from moment.js and date-fns, use with care.

// luxon ❌ does not support relative time
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Time from x&lt;/h3&gt; 
&lt;p&gt;Return time from x.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment([2007, 0, 27]).to(moment([2007, 0, 29]));
// =&amp;gt; &quot;in 2 days&quot;

// date-fns
import formatDistance from &#39;date-fns/formatDistance&#39;;
formatDistance(new Date(2007, 0, 27), new Date(2007, 0, 29));
// =&amp;gt; &quot;2 days&quot;

// dayjs ⚠️ requires relativeTime plugin
import relativeTime from &#39;dayjs/plugin/relativeTime&#39;;
dayjs.extend(relativeTime);
dayjs(&#39;2007-01-27&#39;).to(dayjs(&#39;2007-01-29&#39;));
// =&amp;gt; &quot;in 2 days&quot;

// luxon ❌ does not support relative time
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Difference&lt;/h3&gt; 
&lt;p&gt;Get the unit of time between the given dates.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment([2007, 0, 27]).diff(moment([2007, 0, 29]));
// =&amp;gt; -172800000
moment([2007, 0, 27]).diff(moment([2007, 0, 29]), &#39;days&#39;);
// =&amp;gt; -2

// Native
new Date(2007, 0, 27) - new Date(2007, 0, 29);
// =&amp;gt; -172800000
Math.ceil(
  (new Date(2007, 0, 27) - new Date(2007, 0, 29)) / 1000 / 60 / 60 / 24
);
// =&amp;gt; -2

// date-fns
import differenceInMilliseconds from &#39;date-fns/differenceInMilliseconds&#39;;
differenceInMilliseconds(new Date(2007, 0, 27), new Date(2007, 0, 29));
// =&amp;gt; -172800000
import differenceInDays from &#39;date-fns/differenceInDays&#39;;
differenceInDays(new Date(2007, 0, 27), new Date(2007, 0, 29));
// =&amp;gt; -2

// dayjs
dayjs(&#39;2007-01-27&#39;).diff(dayjs(&#39;2007-01-29&#39;), &#39;milliseconds&#39;);
// =&amp;gt; -172800000
dayjs(&#39;2007-01-27&#39;).diff(dayjs(&#39;2007-01-29&#39;), &#39;days&#39;);
// =&amp;gt; -2

// luxon
DateTime.local(2007, 1, 27).diff(DateTime.local(2007, 1, 29)).milliseconds;
// =&amp;gt; -172800000
DateTime.local(2007, 1, 27).diff(DateTime.local(2007, 1, 29), &#39;days&#39;).days;
// =&amp;gt; -2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Query&lt;/h2&gt; 
&lt;h3&gt;Is Before&lt;/h3&gt; 
&lt;p&gt;Check if a date is before another date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2010-10-20&#39;).isBefore(&#39;2010-10-21&#39;);
// =&amp;gt; true

// Native
new Date(2010, 10, 20) &amp;lt; new Date(2010, 10, 21);
// =&amp;gt; true

// date-fns
import isBefore from &#39;date-fns/isBefore&#39;;
isBefore(new Date(2010, 9, 20), new Date(2010, 9, 21));
// =&amp;gt; true

// dayjs
dayjs(&#39;2010-10-20&#39;).isBefore(&#39;2010-10-21&#39;);
// =&amp;gt; true

// luxon
DateTime.fromISO(&#39;2010-10-20&#39;) &amp;lt; DateTime.fromISO(&#39;2010-10-21&#39;);
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Is Same&lt;/h3&gt; 
&lt;p&gt;Check if a date is the same as another date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2010-10-20&#39;).isSame(&#39;2010-10-21&#39;);
// =&amp;gt; false
moment(&#39;2010-10-20&#39;).isSame(&#39;2010-10-20&#39;);
// =&amp;gt; true
moment(&#39;2010-10-20&#39;).isSame(&#39;2010-10-21&#39;, &#39;month&#39;);
// =&amp;gt; true

// Native
new Date(2010, 9, 20).valueOf() === new Date(2010, 9, 21).valueOf();
// =&amp;gt; false
new Date(2010, 9, 20).valueOf() === new Date(2010, 9, 20).valueOf();
// =&amp;gt; true
new Date(2010, 9, 20).getTime() === new Date(2010, 9, 20).getTime();
// =&amp;gt; true
new Date(2010, 9, 20).valueOf() === new Date(2010, 9, 20).getTime();
// =&amp;gt; true
new Date(2010, 9, 20).toDateString().substring(4, 7) ===
  new Date(2010, 9, 21).toDateString().substring(4, 7);
// =&amp;gt; true

// date-fns
import isSameDay from &#39;date-fns/isSameDay&#39;;
import isSameMonth from &#39;date-fns/isSameMonth&#39;;
isSameDay(new Date(2010, 9, 20), new Date(2010, 9, 21));
// =&amp;gt; false
isSameDay(new Date(2010, 9, 20), new Date(2010, 9, 20));
// =&amp;gt; true
isSameMonth(new Date(2010, 9, 20), new Date(2010, 9, 21));
// =&amp;gt; true

// dayjs
dayjs(&#39;2010-10-20&#39;).isSame(&#39;2010-10-21&#39;);
// =&amp;gt; false
dayjs(&#39;2010-10-20&#39;).isSame(&#39;2010-10-20&#39;);
// =&amp;gt; true
dayjs(&#39;2010-10-20&#39;).isSame(&#39;2010-10-21&#39;, &#39;month&#39;);
// =&amp;gt; true

// luxon
(+DateTime.fromISO(&#39;2010-10-20&#39;) ===
  +DateTime.fromISO(&#39;2010-10-21&#39;) +
    // =&amp;gt; false
    DateTime.fromISO(&#39;2010-10-20&#39;)) ===
  +DateTime.fromISO(&#39;2010-10-20&#39;);
// =&amp;gt; true
DateTime.fromISO(&#39;2010-10-20&#39;).hasSame(DateTime.fromISO(&#39;2010-10-21&#39;), &#39;month&#39;);
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Is After&lt;/h3&gt; 
&lt;p&gt;Check if a date is after another date.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2010-10-20&#39;).isAfter(&#39;2010-10-19&#39;);
// =&amp;gt; true

// Native
new Date(2010, 9, 20) &amp;gt; new Date(2010, 9, 19);
// =&amp;gt; true

// date-fns
import isAfter from &#39;date-fns/isAfter&#39;;
isAfter(new Date(2010, 9, 20), new Date(2010, 9, 19));
// =&amp;gt; true

// dayjs
dayjs(&#39;2010-10-20&#39;).isAfter(&#39;2010-10-19&#39;);
// =&amp;gt; true

// luxon
DateTime.fromISO(&#39;2010-10-20&#39;) &amp;gt; DateTime.fromISO(&#39;2010-10-19&#39;);
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Is Between&lt;/h3&gt; 
&lt;p&gt;Check if a date is between two other dates.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment(&#39;2010-10-20&#39;).isBetween(&#39;2010-10-19&#39;, &#39;2010-10-25&#39;);
// =&amp;gt; true

// date-fns
import isWithinInterval from &#39;date-fns/isWithinInterval&#39;;
isWithinInterval(new Date(2010, 9, 20), {
  start: new Date(2010, 9, 19),
  end: new Date(2010, 9, 25),
});
// =&amp;gt; true

// dayjs ⚠️ requires isBetween plugin
import isBetween from &#39;dayjs/plugin/isBetween&#39;;
dayjs.extend(isBetween);
dayjs(&#39;2010-10-20&#39;).isBetween(&#39;2010-10-19&#39;, &#39;2010-10-25&#39;);
// =&amp;gt; true

// luxon
Interval.fromDateTimes(
  DateTime.fromISO(&#39;2010-10-19&#39;),
  DateTime.fromISO(&#39;2010-10-25&#39;)
).contains(DateTime.fromISO(&#39;2010-10-20&#39;));
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Is Leap Year&lt;/h3&gt; 
&lt;p&gt;Check if a year is a leap year.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment([2000]).isLeapYear();
// =&amp;gt; true

// Native
new Date(2000, 1, 29).getDate() === 29;
// =&amp;gt; true

// date-fns
import isLeapYear from &#39;date-fns/isLeapYear&#39;;
isLeapYear(new Date(2000, 0, 1));
// =&amp;gt; true

// dayjs ⚠️ requires isLeapYear plugin
import isLeapYear from &#39;dayjs/plugin/isLeapYear&#39;;
dayjs.extend(isLeapYear);
dayjs(&#39;2000-01-01&#39;).isLeapYear();
// =&amp;gt; true

// luxon
expect(DateTime.local(2000).isInLeapYear).toBeTruthy();
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Is a Date&lt;/h3&gt; 
&lt;p&gt;Check if a variable is a native js Date object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Moment.js
moment.isDate(new Date());
// =&amp;gt; true

// Native
new Date() instanceof Date;
// =&amp;gt; true

// date-fns
import isDate from &#39;date-fns/isDate&#39;;
isDate(new Date());
// =&amp;gt; true

// dayjs
dayjs(new Date()).isValid();

// luxon
DateTime.local().isValid;
// =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-Momentjs/master/#quick-links&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>popcorn-official/popcorn-desktop</title>
      <link>https://github.com/popcorn-official/popcorn-desktop</link>
      <description>&lt;p&gt;Popcorn Time is a multi-platform, free software BitTorrent client that includes an integrated media player ( Windows / Mac / Linux ) A Butter-Project Fork&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;h3&gt;Windows:&lt;/h3&gt; 
&lt;p&gt;Download and install:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Latest release&lt;/strong&gt;: check &lt;a href=&quot;https://popcorntime.app/#get-app&quot;&gt;popcorntime.app&lt;/a&gt; or the repo&#39;s &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/releases&quot;&gt;releases page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Or &lt;strong&gt;latest dev build (for testers)&lt;/strong&gt;: check the &lt;a href=&quot;https://ci.popcorntime.app/job/Popcorn-Time-Desktop/lastSuccessfulBuild/&quot;&gt;latest successful build on ci.popcorntime.app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MacOS:&lt;/h3&gt; 
&lt;p&gt;Easily install Popcorn Time via &lt;em&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; (&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask#homebrew-cask&quot;&gt;Cask&lt;/a&gt;):&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Latest release&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;brew cask install https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/casks/popcorn-time.rb&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Or &lt;strong&gt;latest dev build (for testers)&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;brew cask install https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/casks/popcorn-time-beta.rb&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also, if you keep a &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle#usage&quot;&gt;&lt;em&gt;Brewfile&lt;/em&gt;&lt;/a&gt;, you can add something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rb&quot;&gt;repo = &#39;popcorn-official/popcorn-desktop&#39;
tap repo, &quot;https://github.com/#{repo}.git&quot;
cask &#39;popcorn-time&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux - Debian/Ubuntu based distros:&lt;/h3&gt; 
&lt;p&gt;Via .deb package:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Firstly, be aware&lt;/strong&gt; in some cases, missings dependencies packages (libatomic1, libgconf-2-4, libcanberra-gtk-module) were reported to be required for the app to works.&lt;br&gt; &lt;strong&gt;If the app don&#39;t start for you too&lt;/strong&gt;, in this case, &lt;strong&gt;try &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install libatomic1 libgconf-2-4 libcanberra-gtk-module&lt;/code&gt;&lt;/strong&gt; to be sure your system have the required dependencies.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Download and install:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Latest release&lt;/strong&gt;: check &lt;a href=&quot;https://popcorntime.app/#get-app&quot;&gt;popcorntime.app&lt;/a&gt; or the repo&#39;s &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/releases&quot;&gt;releases page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Or &lt;strong&gt;latest dev build (for testers)&lt;/strong&gt;: check the &lt;a href=&quot;https://ci.popcorntime.app/job/Popcorn-Time-Desktop/lastSuccessfulBuild/&quot;&gt;latest successful build on ci.popcorntime.app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Via archive and command line (tested on ubuntu 18.04 and 20.04):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download Popcorn Time archive: 
  &lt;ul&gt; 
   &lt;li&gt;For the &lt;strong&gt;latest release&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;wget -c https://get.popcorntime.app/repo/build/Popcorn-Time-0.4.4-linux64.zip&lt;/code&gt;&lt;br&gt; &lt;em&gt;if eventually you get issue with popcorntime.app website you can try to download from the github repo&lt;br&gt; &lt;code&gt;wget -c https://github.com/popcorn-official/popcorn-desktop/releases/download/v0.4.4/Popcorn-Time-0.4.4-linux64.zip&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Or for the &lt;strong&gt;latest dev build (for testers)&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;wget -c https://ci.popcorntime.app/job/Popcorn-Time-Desktop/lastSuccessfulBuild/artifact/build/Popcorn-Time-0.4.4_linux64.zip -O Popcorn-Time-0.4.4-linux64.zip&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Create popcorn-time folder in /opt/:&lt;br&gt; &lt;code&gt;sudo mkdir /opt/popcorn-time&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install unzip &amp;amp;&amp;amp; dependencies (they should not be always required but some users needed them to make Popcorn Time working):&lt;br&gt; &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install unzip libcanberra-gtk-module libgconf-2-4 libatomic1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Extract the zip in /opt/popcorn-time:&lt;br&gt; &lt;code&gt;sudo unzip Popcorn-Time-0.4.4-linux64.zip -d /opt/popcorn-time&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create symlink of Popcorn-Time in /usr/bin:&lt;br&gt; &lt;code&gt;sudo ln -sf /opt/popcorn-time/Popcorn-Time /usr/bin/popcorn-time&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create .desktop file (so the launcher):&lt;br&gt; &lt;code&gt;sudo nano /usr/share/applications/popcorntime.desktop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;and copy paste the following text in the editor and save&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-desktop&quot;&gt;[Desktop Entry]
Version = 1.0
Type = Application
Terminal = false
Name = Popcorn Time
Exec = /usr/bin/popcorn-time
Icon = /opt/popcorn-time/src/app/images/icon.png
Categories = Application;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;If you&#39;re comfortable getting up and running from a &lt;code&gt;git clone&lt;/code&gt;, this method is for you.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/tree/development&quot;&gt;development&lt;/a&gt; branch contains the latest changes.&lt;br&gt; The &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/tree/master&quot;&gt;master&lt;/a&gt; branch contains the latest release.&lt;/p&gt; 
&lt;h4&gt;Quickstart:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you encounter trouble with the above method, you can try:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;yarn config set yarn-offline-mirror ./node_modules/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn install --ignore-engines&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Optionally, you may simply run &lt;code&gt;./make_popcorn.sh&lt;/code&gt; if you are on a linux or mac based operating system.&lt;/p&gt; 
&lt;p&gt;Full instructions &amp;amp; troubleshooting tips can be found in the &lt;a href=&quot;https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/CONTRIBUTING.md#contributing-to-popcorn-time&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Building redistribuable packages/installers:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;yarn config set yarn-offline-mirror ./node_modules/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn install --ignore-engines&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn dist --platforms=&amp;lt;platform&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;platform&amp;gt;&lt;/code&gt; can be one or more of the folowing values (separated by a comma &lt;code&gt;,&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;win64&lt;/code&gt;, &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;linux64&lt;/code&gt;, &lt;code&gt;linux32&lt;/code&gt;, &lt;code&gt;osx64&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Redistribuable packages are saved into &lt;code&gt;build/&lt;/code&gt; subfolder.&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;Want to report a bug, request a feature, contribute to or translate Popcorn Time?&lt;br&gt; Check out our in-depth guide to &lt;a href=&quot;https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/CONTRIBUTING.md#contributing-to-popcorn-time&quot;&gt;Contributing to Popcorn Time&lt;/a&gt;. We need all the help we can get!&lt;br&gt; You can also join our &lt;a href=&quot;https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/README.md#community&quot;&gt;community&lt;/a&gt; to keep up-to-date and meet other developers.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Keep track of Popcorn Time development and community activity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow Popcorn Time on &lt;a href=&quot;https://twitter.com/PopcorntimeappR&quot;&gt;Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read and subscribe to &lt;a href=&quot;https://blog.popcorntime.app/&quot;&gt;The Official Popcorn Time Blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join in discussions on the &lt;a href=&quot;https://discuss.popcorntime.app&quot;&gt;Popcorn Time Forum&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/r/PopcornTimeApp&quot;&gt;r/PopCornTimeApp&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/8317250/10714437/b1e1dc8c-7b32-11e5-9c25-d9fbd5b2f3bd.png&quot; alt=&quot;Popcorn Time&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;For transparency and insight into our release cycle, and for striving to maintain backward compatibility, Popcorn Time will be maintained according to the &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; guidelines as much as possible.&lt;/p&gt; 
&lt;p&gt;Releases will be numbered with the following format:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;-&amp;lt;build&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Constructed with the following guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A new &lt;em&gt;major&lt;/em&gt; release indicates a large change where backward compatibility is broken.&lt;/li&gt; 
 &lt;li&gt;A new &lt;em&gt;minor&lt;/em&gt; release indicates a normal change that maintains backward compatibility.&lt;/li&gt; 
 &lt;li&gt;A new &lt;em&gt;patch&lt;/em&gt; release indicates a bugfix or small change which does not affect compatibility.&lt;/li&gt; 
 &lt;li&gt;A new &lt;em&gt;build&lt;/em&gt; release indicates this is a pre-release of the version.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;If you distribute a copy or make a fork of the project, you have to credit this project as the source.&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; 
&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; 
&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Copyright © 2020 Popcorn Time Project - Released under the &lt;a href=&quot;https://raw.githubusercontent.com/popcorn-official/popcorn-desktop/development/LICENSE.txt&quot;&gt;GPL v3 license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
