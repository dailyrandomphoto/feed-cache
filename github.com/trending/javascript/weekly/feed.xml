<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 28 Nov 2021 02:15:00 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>Anarios/return-youtube-dislike</title>
      <link>https://github.com/Anarios/return-youtube-dislike</link>
      <description>&lt;p&gt;Chrome extension to return youtube dislikes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/return-youtube-dislikes/&quot;&gt;&lt;img src=&quot;https://img.shields.io/amo/stars/return-youtube-dislikes?label=Firefox%20Rating&amp;amp;style=flat&amp;amp;logo=firefox&quot; alt=&quot;Mozilla rating&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/return-youtube-dislikes/&quot;&gt;&lt;img src=&quot;https://img.shields.io/amo/users/return-youtube-dislikes?label=Firefox%20Users&amp;amp;style=flat&amp;amp;logo=firefox&quot; alt=&quot;Mozilla downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chrome.google.com/webstore/detail/youtube-dislike-button/gebbhagfogifgggkldgodflihgfeippi/&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/stars/gebbhagfogifgggkldgodflihgfeippi?label=Chrome%20Rating&amp;amp;style=flat&amp;amp;logo=google&quot; alt=&quot;Chrome Web Store&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chrome.google.com/webstore/detail/youtube-dislike-button/gebbhagfogifgggkldgodflihgfeippi/&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/users/gebbhagfogifgggkldgodflihgfeippi?label=Chrome%20Users&amp;amp;style=flat&amp;amp;logo=google&quot; alt=&quot;Chrome Web Store Users&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Anarios/return-youtube-dislike/commits/main&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/Anarios/return-youtube-dislike?label=Commits&amp;amp;style=flat&quot; alt=&quot;Commit rate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Anarios/return-youtube-dislike/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/Anarios/return-youtube-dislike?style=flat&amp;amp;label=Issues&quot; alt=&quot;Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/UMxyMmCgfF&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/909435648170160229?label=Discord&amp;amp;style=flat&amp;amp;logo=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Anarios/return-youtube-dislike/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPLv3-blue.svg?style=flat&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Return YouTube Dislike&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;Return YouTube Dislike is an open-source extension that returns the YouTube dislike count.&lt;/b&gt;&lt;br&gt; Available for Chrome and Firefox as a Web Extension.&lt;br&gt; Also available for other browsers as JS Userscript.&lt;br&gt;&lt;br&gt; &lt;img width=&quot;400px&quot; src=&quot;https://user-images.githubusercontent.com/18729296/141743755-2be73297-250e-4cd1-ac93-8978c5a39d10.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;The Story&lt;/h2&gt; 
&lt;p&gt;On November 10th, 2021, Google &lt;a href=&quot;https://blog.youtube/news-and-events/update-to-youtube/&quot;&gt;announced&lt;/a&gt; that the YouTube dislike count would be removed.&lt;/p&gt; 
&lt;p&gt;Additionally, the &lt;code&gt;dislike&lt;/code&gt; field in the YouTube API will be &lt;a href=&quot;https://support.google.com/youtube/thread/134791097/update-to-youtube-dislike-counts&quot;&gt;removed&lt;/a&gt; on December 13th, 2021, removing any ability to judge the quality of content before watching.&lt;/p&gt; 
&lt;h2&gt;What it Does&lt;/h2&gt; 
&lt;p&gt;This plugin will re-enable the visibility of the dislike count, fetching the total number of dislikes via our API, which in turn relies upon YouTube&#39;s &lt;a href=&quot;https://developers.google.com/youtube/v3&quot;&gt;Data API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;With the removal of dislike stats from the YouTube API, our backend will switch to using a combination of scraped dislike stats, estimates extrapolated from extension user data and estimates based on view\like ratios.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Anarios/return-youtube-dislike/raw/main/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why it Matters&lt;/h2&gt; 
&lt;p&gt;You can learn more at our website at: &lt;a href=&quot;https://www.returnyoutubedislike.com/&quot;&gt;returnyoutubedislike.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://github.com/Anarios/return-youtube-dislike/raw/main/CONTRIBUTING.md&quot;&gt;contribution guide.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/returnyoutubedislike/&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://returnyoutubedislike.com/pay/yoomoney&quot;&gt;YooMoney form at my site&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>medusajs/medusa</title>
      <link>https://github.com/medusajs/medusa</link>
      <description>&lt;p&gt;The open-source Shopify alternative ‚ö°Ô∏è&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt; &lt;img alt=&quot;Medusa&quot; src=&quot;https://user-images.githubusercontent.com/7554214/129161578-19b83dc8-fac5-4520-bd48-53cba676edd2.png&quot; width=&quot;100&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Medusa &lt;/h1&gt; 
&lt;h4 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/medusajs/admin&quot;&gt;Medusa Admin&lt;/a&gt; | &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://roadmap.medusa-commerce.com&quot;&gt;Roadmap&lt;/a&gt; | &lt;a href=&quot;https://www.medusa-commerce.com/blog&quot;&gt;Blog&lt;/a&gt; | &lt;a href=&quot;https://www.linkedin.com/company/medusa-commerce&quot;&gt;LinkedIn&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/medusajs&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://docs.medusa-commerce.com&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://medusajs.notion.site/medusajs/Medusa-Home-3485f8605d834a07949b17d1a9f7eafd&quot;&gt;Notion&lt;/a&gt; &lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; Medusa is an open-source headless commerce engine that enables developers to create amazing digital commerce experiences. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Medusa is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/medusajs/medusa&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/medusajs/medusa.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/xpCwq3Kfn8&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=medusajs&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs&quot; alt=&quot;Follow @medusajs&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Medusa CLI&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g @medusajs/medusa-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a new Medusa project&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;medusa new my-medusa-store --seed
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start your Medusa engine&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;medusa develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use the API&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl localhost:9000/store/products | python -m json.tool
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We have a prebuilt admin dashboard that you can use to configure and manage your store find it here: &lt;a href=&quot;https://github.com/medusajs/admin&quot;&gt;Medusa Admin&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After these four steps and only a couple of minutes, you now have a complete commerce engine running locally. You may now explore &lt;a href=&quot;https://docs.medusa-commerce.com/api&quot;&gt;the documentation&lt;/a&gt; to learn how to interact with the Medusa API. You may also add &lt;a href=&quot;https://github.com/medusajs/medusa/tree/master/packages&quot;&gt;plugins&lt;/a&gt; to your Medusa store by specifying them in your &lt;code&gt;medusa-config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;üõí Setting up a storefront for your Medusa project&lt;/h2&gt; 
&lt;p&gt;Medusa is a headless commerce engine which means that it can be used for any type of digital commerce experience - you may use it as the backend for an app, a voice application, social commerce experiences or a traditional e-commerce website, you may even want to integrate Medusa into your own software to enable commerce functionality. All of these are use cases that Medusa supports - to learn more read the documentation or reach out.&lt;/p&gt; 
&lt;p&gt;To provide a quick way to get you started with a storefront install one of our traditional e-commerce starters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/gatsby-starter-medusa&quot;&gt;Gatsby Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npm install -g gatsby-cli
gatsby new my-medusa-storefront https://github.com/medusajs/gatsby-starter-medusa
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/nextjs-starter-medusa&quot;&gt;Nextjs Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npx create-next-app -e https://github.com/medusajs/nextjs-starter-medusa my-medusa-storefront
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With your starter and your Medusa store running you can open &lt;a href=&quot;http://localhost:8000&quot;&gt;http://localhost:8000&lt;/a&gt; (for Gatsby) or &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; (for Nextjs) in your browser and view the products in your store, build a cart, add shipping details and pay and complete an order.&lt;/p&gt; 
&lt;h2&gt;‚≠êÔ∏è Features&lt;/h2&gt; 
&lt;p&gt;Medusa comes with a set of building blocks that allow you to create amazing digital commerce experiences, below is a list of some of the features that Medusa come with out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Headless&lt;/strong&gt;: Medusa is a highly customizable commerce API which means that you may use any presentation layer such as a website, app, chatbots, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Regions&lt;/strong&gt; allow you to specify currencies, payment providers, shipping providers, tax rates and more for one or more countries for truly international sales.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; come with all the functionality necessary to perform powerful customer service operations with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; allow customers to collect products for purchase, add shipping details and complete payments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Products&lt;/strong&gt; come with relevant fields for customs, stock keeping and sales. Medusa supports multiple options and unlimited variants.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swaps&lt;/strong&gt; allow customers to exchange products after purchase (e.g. for incorrect sizes). Accounting, payment and fulfillment plugins handle all the tedious work for you for automated customer service.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Claims&lt;/strong&gt; can be created if customers experience problems with one of their products. Plugins make sure to automate sending out replacements, handling refunds and collecting valuable data for analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Returns&lt;/strong&gt; allow customers to send back products and can be configured to function in a 100% automated flow through accounting and payment plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fulfillment API&lt;/strong&gt; makes it easy to integrate with any fulfillment provider by creating fulfillment plugins, check the &lt;code&gt;/packages&lt;/code&gt; directory for a full list of plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments API&lt;/strong&gt; makes it easy to integrate with any payment provider by creating payment plugins, we already support Stripe, Paypal and Klarna.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notification API&lt;/strong&gt; allow integrations with email providers, chatbots, Slack channels, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customer Login&lt;/strong&gt; to give customers a way of managing their data, viewing their orders and saving payment details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shipping Options &amp;amp; Profiles&lt;/strong&gt; enable powerful rules for free shipping limits, multiple fulfillment methods and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Medusa&#39;s Plugin Architecture&lt;/strong&gt; makes it intuitive and easy to manage your integrations, switch providers and grow with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt; is supported for those special use cases that all the other e-commerce platforms can&#39;t accommodate.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Database support&lt;/h2&gt; 
&lt;p&gt;In production Medusa requires Postgres and Redis, but SQLite is supported for development and testing purposes. If you plan on using Medusa for a project it is recommended that you install Postgres and Redis on your dev machine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/download/&quot;&gt;Install PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/download&quot;&gt;Install Redis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To use Postgres and Redis you should provide a &lt;code&gt;database_url&lt;/code&gt; and &lt;code&gt;redis_url&lt;/code&gt; in your &lt;code&gt;medusa-config.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Medusa is all about the community. Therefore, we would love for you to help us build the most robust and powerful commerce engine on the market. Whether its fixing bugs, improving our documentation or simply spreading the word, please feel free to join in. Please check &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt;our contribution guide&lt;/a&gt; for further details about how to contribute.&lt;/p&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;p&gt;The Medusa repository is a mono-repository managed using Lerna. Lerna allows us to have all Medusa packages in one place, and still distribute them as separate NPM packages.&lt;/p&gt; 
&lt;h2&gt;Licensed&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Thank you!&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Budibase/budibase</title>
      <link>https://github.com/Budibase/budibase</link>
      <description>&lt;p&gt;Budibase is an open-source low-code platform for creating internal apps in minutes. Supports PostgreSQL, MySQL, MSSQL, MongoDB, Rest API, Docker, K8s üöÄ&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.budibase.com&quot;&gt; &lt;img alt=&quot;Budibase&quot; src=&quot;https://d33wubrfki0l68.cloudfront.net/aac32159d7207b5085e74a7ef67afbb7027786c5/2b1fd/img/logo/bb-emblem.svg?sanitize=true&quot; width=&quot;60&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Budibase &lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt; The low code platform you&#39;ll enjoy using &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Budibase is an open source low-code platform, and the easiest way to build internal tools that improve productivity. &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; ü§ñ üé® üöÄ &lt;/h3&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase design ui&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1633524049/ui/design-ui-wide-mobile_gdaveq.jpg&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub all releases&quot; src=&quot;https://img.shields.io/github/downloads/Budibase/budibase/total&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/Budibase/budibase&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=budibase&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/budibase?style=social&quot; alt=&quot;Follow @budibase&quot;&gt; &lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&quot; alt=&quot;Code of conduct&quot;&gt; &lt;a href=&quot;https://codecov.io/gh/Budibase/budibase&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/Budibase/budibase/graph/badge.svg?token=E8W2ZFXQOH&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://docs.budibase.com/getting-started&quot;&gt;Get started&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://docs.budibase.com&quot;&gt;Docs&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Feature request&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/issues&quot;&gt;Report a bug&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; Support: &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Discussions&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;h3&gt;Build and ship real software&lt;/h3&gt; 
&lt;p&gt;Unlike other platforms, with Budibase you build and ship single page applications. Budibase applications have performance baked in and can be designed responsively, providing your users with a great experience. &lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Open source and extensible&lt;/h3&gt; 
&lt;p&gt;Budibase is open-source - licensed as GPL v3. This should fill you with confidence that Budibase will always be around. You can also code against Budibase or fork it and make changes as you please, providing a developer-friendly experience. &lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Load data or start from scratch&lt;/h3&gt; 
&lt;p&gt;Budibase pulls in data from multiple sources, including MongoDB, CouchDB, PostgreSQL, MySQL, Airtable, S3, DynamoDB, or a REST API. And unlike other platforms, with Budibase you can start from scratch and create business apps with no data sources. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new data sources&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase data&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970242/Out%20of%20beta%20launch/data_n1tlhf.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Design and build apps with powerful pre-made components&lt;/h3&gt; 
&lt;p&gt;Budibase comes out of the box with beautifully designed, powerful components which you can use like building blocks to build your UI. We also expose a lot of your favourite CSS styling options so you can go that extra creative mile. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new component&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase design&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970243/Out%20of%20beta%20launch/design-like-a-pro_qhlfeu.gif&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Automate processes, integrate with other tools, and connect to webhooks&lt;/h3&gt; 
&lt;p&gt;Save time by automating manual processes and workflows. From connecting to webhooks, to automating emails, simply tell Budibase what to do and let it work for you. You can easily &lt;a href=&quot;https://github.com/Budibase/automations&quot;&gt;create new automations for Budibase here&lt;/a&gt; or &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new automation&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase automations&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970486/Out%20of%20beta%20launch/automation_riro7u.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Integrate with your favorite tools&lt;/h3&gt; 
&lt;p&gt;Budibase integrates with a number of popular tools allowing you to build apps that perfectly fit your stack.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase integrations&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970242/Out%20of%20beta%20launch/integrations_kc7dqt.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Admin paradise&lt;/h3&gt; 
&lt;p&gt;Budibase is made to scale. With Budibase, you can self-host on your own infrastructure and globally manage users, onboarding, SMTP, apps, groups, theming and more. You can also provide users/groups with an app portal and disseminate user-management to the group manager.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checkout the promo video: &lt;a href=&quot;https://youtu.be/xoljVpty_Kw&quot;&gt;https://youtu.be/xoljVpty_Kw&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üèÅ Get started&lt;/h2&gt; 
&lt;img src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1634808888/logo/deploy_npl9za.png&quot;&gt; 
&lt;p&gt;Deploy Budibase self-Hosted in your existing infrastructure, using Docker, Kubernetes, and Digital Ocean. Or use Budibase Cloud if you don&#39;t need to self-host, and would like to get started quickly.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://budibase.com&quot;&gt;Get started with Budibase&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üéì Learning Budibase&lt;/h2&gt; 
&lt;p&gt;The Budibase documentation &lt;a href=&quot;https://docs.budibase.com&quot;&gt;lives here&lt;/a&gt;. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üí¨ Community&lt;/h2&gt; 
&lt;p&gt;If you have a question or would like to talk with other Budibase users and join our community, please hop over to &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Github discussions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ùó Code of conduct&lt;/h2&gt; 
&lt;p&gt;Budibase is dedicated to providing a welcoming, diverse, and harrassment-free experience for everyone. We expect everyone in the Budibase community to abide by our &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CODE_OF_CONDUCT.md&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üôå Contributing to Budibase&lt;/h2&gt; 
&lt;p&gt;From opening a bug report to creating a pull request: every contribution is appreciated and welcomed. If you&#39;re planning to implement a new feature or change the API please create an issue first. This way we can ensure your work is not in vain.&lt;/p&gt; 
&lt;h3&gt;Not Sure Where to Start?&lt;/h3&gt; 
&lt;p&gt;A good place to start contributing, is the &lt;a href=&quot;https://github.com/Budibase/budibase/projects/22&quot;&gt;First time issues project&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How the repository is organized&lt;/h3&gt; 
&lt;p&gt;Budibase is a monorepo managed by lerna. Lerna manages the building and publishing of the budibase packages. At a high level, here are the packages that make up Budibase.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/builder&quot;&gt;packages/builder&lt;/a&gt; - contains code for the budibase builder client side svelte application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/client&quot;&gt;packages/client&lt;/a&gt; - A module that runs in the browser responsible for reading JSON definition and creating living, breathing web apps from it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/server&quot;&gt;packages/server&lt;/a&gt; - The budibase server. This Koa app is responsible for serving the JS for the builder and budibase apps, as well as providing the API for interaction with the database and file system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üìù License&lt;/h2&gt; 
&lt;p&gt;Budibase is open-source, licensed as &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GPL v3&lt;/a&gt;. The client and component libraries are licensed as &lt;a href=&quot;https://directory.fsf.org/wiki/License:MPL-2.0&quot;&gt;MPL&lt;/a&gt; - so the apps that you build can be licensed however you like.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚≠ê Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Budibase/budibase&quot;&gt;&lt;img src=&quot;https://starchart.cc/Budibase/budibase.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you are having issues between updates of the builder, please use the guide &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md#troubleshooting&quot;&gt;here&lt;/a&gt; to clear down your environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://martinmck.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11256663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin McKeaveney&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-shogunpurple&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.michaeldrury.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4407001?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Drury&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-mike12345567&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aptkingston&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9075550?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Kingston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#design-aptkingston&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3524181?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Shanks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevmodrome&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/534488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin √Öberg Kultalahti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49767913?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#content-joebudi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#design-joebudi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rory-Powell&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8755148?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rory Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/PClmnt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5665926?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Clement&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Conor-Mack&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/36074859?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Conor_Mack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pngwn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/12937446?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pngwn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HugoLd&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26521848?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HugoLd&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=HugoLd&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victoriasloan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9913651?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;victoriasloan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=victoriasloan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yashank09&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37672190?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yashank09&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=yashank09&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SOVLOOKUP&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53158137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SOVLOOKUP&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=SOVLOOKUP&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/seoulaja&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15101654?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;seoulaja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#translation-seoulaja&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mslourens&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1907152?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maurits Lourens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mslourens&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mslourens&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rory-Powell&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8755148?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rory Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-Rory-Powell&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/monaco-editor</title>
      <link>https://github.com/microsoft/monaco-editor</link>
      <description>&lt;p&gt;A browser based code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaco Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/ms/monaco-editor/_build/latest?definitionId=3&quot;&gt;&lt;img src=&quot;https://dev.azure.com/ms/monaco-editor/_apis/build/status/microsoft.monaco-editor?label=website&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is the code editor which powers &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;VS Code&lt;/a&gt;, with the features better described &lt;a href=&quot;https://code.visualstudio.com/docs/editor/editingevolved&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this repository contains no source code for the code editor, it only contains the scripts to package everything together and ship the &lt;code&gt;monaco-editor&lt;/code&gt; npm module.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Try it out&lt;/h2&gt; 
&lt;p&gt;Try the editor out &lt;a href=&quot;https://microsoft.github.io/monaco-editor/index.html&quot;&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install monaco-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;inside &lt;code&gt;esm&lt;/code&gt;: ESM version of the editor (compatible with e.g. webpack)&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;dev&lt;/code&gt;: AMD bundled, not minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min&lt;/code&gt;: AMD bundled, and minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min-maps&lt;/code&gt;: source maps for &lt;code&gt;min&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is recommended to develop against the &lt;code&gt;dev&lt;/code&gt; version, and in production to use the &lt;code&gt;min&lt;/code&gt; version.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Learn how to integrate the editor with these &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/samples/&quot;&gt;complete samples&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-amd.md&quot;&gt;Integrate the AMD version&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-esm.md&quot;&gt;Integrate the ESM version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Learn how to use the editor API and try out your own customizations in the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/playground.html&quot;&gt;playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/index.html&quot;&gt;API docs&lt;/a&gt; or read them straight from &lt;a href=&quot;https://github.com/microsoft/monaco-editor/raw/main/website/typedoc/monaco.d.ts&quot;&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href=&quot;https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators&quot;&gt;this guide&lt;/a&gt; to ensure the editor is accessible to all your users!&lt;/li&gt; 
 &lt;li&gt;Create a Monarch tokenizer for a new programming language &lt;a href=&quot;https://microsoft.github.io/monaco-editor/monarch.html&quot;&gt;in the Monarch playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/monaco-editor&quot;&gt;StackOverflow&lt;/a&gt;! Search open and closed issues, there are a lot of tips in there!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Create &lt;a href=&quot;https://github.com/microsoft/monaco-editor/issues&quot;&gt;issues&lt;/a&gt; in this repository for anything related to the Monaco Editor. Always mention &lt;strong&gt;the version&lt;/strong&gt; of the editor when creating issues and &lt;strong&gt;the browser&lt;/strong&gt; you&#39;re having trouble in. Please search for existing issues to avoid duplicates.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;What is the relationship between VS Code and the Monaco Editor?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is generated straight from VS Code&#39;s sources with some shims around services the code needs to make it run in a web browser outside of its home.&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;What is the relationship between VS Code&#39;s version and the Monaco Editor&#39;s version?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;None. The Monaco Editor is a library and it reflects directly the source code.&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;I&#39;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If the extension is fully based on the &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/&quot;&gt;LSP&lt;/a&gt; and if the language server is authored in JavaScript, then it would be possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;Why all these web workers and why should I care?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#39;t worry too much about them, as long as you get them to work (see above the cross-domain case).&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;What is this &lt;code&gt;loader.js&lt;/code&gt;? Can I use &lt;code&gt;require.js&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It is an AMD loader that we use in VS Code. Yes.&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;I see the warning &quot;Could not create web worker&quot;. What should I do?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 does not allow pages loaded on &lt;code&gt;file://&lt;/code&gt; to create web workers. Please load the editor with a web server on &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; schemes.&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;Is the editor supported in mobile browsers or mobile web app frameworks?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;Why doesn&#39;t the editor support TextMate grammars?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please see &lt;a href=&quot;https://github.com/bolinfest/monaco-tm&quot;&gt;https://github.com/bolinfest/monaco-tm&lt;/a&gt; which puts together &lt;code&gt;monaco-editor&lt;/code&gt;, &lt;code&gt;vscode-oniguruma&lt;/code&gt; and &lt;code&gt;vscode-textmate&lt;/code&gt; to get TM grammar support in the editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚ùì &lt;strong&gt;What about IE 11 support?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Monaco Editor no longer supports IE 11. The last version that was tested on IE 11 is &lt;code&gt;0.18.1&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development setup&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/microsoft/monaco-editor/raw/main/LICENSE.txt&quot;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2146.9-brightgreen.svg?sanitize=true&quot; alt=&quot;WhatsApp_Web 2.2146.9&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wwebjs.dev/guide&quot;&gt;Guide / Getting Started&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.wwebjs.dev/&quot;&gt;Reference documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.org/package/whatsapp-web.js&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);

const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Remote Access&lt;/h2&gt; 
&lt;p&gt;You could also connect to any previously existing browser instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const client = new Client({ 
    puppeteer: {
        browserWSEndpoint: `ws://localhost:3000`
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Installing a browser using browserless:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  --rm \
  -p 3000:3000 \
  -e &quot;MAX_CONCURRENT_SESSIONS=1&quot; \
  browserless/chrome:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://docs.browserless.io/docs/docker-quickstart.html&quot;&gt;https://docs.browserless.io/docs/docker-quickstart.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Remote Debugging&lt;/h3&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Running a browser with websocket remote debugging enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;chrome.exe --remote-debugging-port=9222&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After that check the following webpage and check &lt;a href=&quot;http://127.0.0.1:9220/json&quot;&gt;http://127.0.0.1:9220/json&lt;/a&gt; and get the &lt;strong&gt;webSocketDebuggerUrl&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;‚úÖ &lt;a href=&quot;https://wwebjs.dev/guide/handling-attachments.html#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send buttons&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send lists&lt;/td&gt; 
   &lt;td&gt;‚úÖ (business accounts not supported)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&quot;https://whatsapp.com&quot;&gt;https://whatsapp.com&lt;/a&gt;. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lyswhut/lx-music-desktop</title>
      <link>https://github.com/lyswhut/lx-music-desktop</link>
      <description>&lt;p&gt;‰∏Ä‰∏™Âü∫‰∫é electron ÁöÑÈü≥‰πêËΩØ‰ª∂&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop&quot;&gt;&lt;img width=&quot;200&quot; src=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/doc/images/icon.png&quot; alt=&quot;lx-music logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/lyswhut/lx-music-desktop&quot; alt=&quot;Release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/actions/workflows/release.yml&quot;&gt;&lt;img src=&quot;https://github.com/lyswhut/lx-music-desktop/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/actions/workflows/beta-pack.yml&quot;&gt;&lt;img src=&quot;https://github.com/lyswhut/lx-music-desktop/workflows/Build%20Beta/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://electronjs.org/releases/stable&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/dependency-version/lyswhut/lx-music-desktop/dev/electron/master&quot; alt=&quot;Electron version&quot;&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/latest/total&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; --&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/tree/dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/lyswhut/lx-music-desktop/dev&quot; alt=&quot;Dev branch version&quot;&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/lyswhut/lx-music-desktop&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; --&gt; &lt;/p&gt; 
&lt;!-- [![GitHub release][1]][2]
[![Build status][3]][4]
[![GitHub Releases Download][5]][6]
[![dev branch][7]][8]
[![GitHub license][9]][10] --&gt; 
&lt;!-- [1]: https://img.shields.io/github/release/lyswhut/lx-music-desktop
[2]: https://github.com/lyswhut/lx-music-desktop/releases
[3]: https://ci.appveyor.com/api/projects/status/flrsqd5ymp8fnte5?svg=true
[4]: https://ci.appveyor.com/project/lyswhut/lx-music-desktop
[5]: https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/latest/total
[5]: https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/total
[6]: https://github.com/lyswhut/lx-music-desktop/releases
[7]: https://img.shields.io/github/package-json/v/lyswhut/lx-music-desktop/dev
[8]: https://github.com/lyswhut/lx-music-desktop/tree/dev
[9]: https://img.shields.io/github/license/lyswhut/lx-music-desktop
[10]: https://github.com/lyswhut/lx-music-desktop/blob/master/LICENSE --&gt; 
&lt;h2 align=&quot;center&quot;&gt;Ê¥õÈõ™Èü≥‰πêÂä©ÊâãÊ°åÈù¢Áâà&lt;/h2&gt; 
&lt;h3&gt;ËØ¥Êòé&lt;/h3&gt; 
&lt;p&gt;‰∏Ä‰∏™Âü∫‰∫é Electron + Vue ÂºÄÂèëÁöÑÈü≥‰πêËΩØ‰ª∂„ÄÇ&lt;/p&gt; 
&lt;p&gt;ÊâÄÁî®ÊäÄÊúØÊ†àÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Electron 15&lt;/li&gt; 
 &lt;li&gt;Vue 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Â∑≤ÊîØÊåÅÁöÑÂπ≥Âè∞Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 7 Âèä‰ª•‰∏ä&lt;/li&gt; 
 &lt;li&gt;Mac OS&lt;/li&gt; 
 &lt;li&gt;Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ËΩØ‰ª∂ÂèòÂåñËØ∑Êü•ÁúãÔºö&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/CHANGELOG.md&quot;&gt;Êõ¥Êñ∞Êó•Âøó&lt;/a&gt;&lt;br&gt; ËΩØ‰ª∂‰∏ãËΩΩËØ∑ËΩ¨Âà∞Ôºö&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;ÂèëÂ∏ÉÈ°µÈù¢&lt;/a&gt;&lt;br&gt; ÊàñËÄÖÂà∞ÁΩëÁõò‰∏ãËΩΩÔºàÁΩëÁõòÂÜÖÊúâMAC„ÄÅwindowsÁâàÔºâÔºö&lt;code&gt;https://www.lanzoui.com/b0bf2cfa/&lt;/code&gt; ÂØÜÁ†ÅÔºö&lt;code&gt;glqw&lt;/code&gt;ÔºàËã•ÈìæÊé•Êó†Ê≥ïÊâìÂºÄËØ∑ÁôæÂ∫¶ÔºöËìùÂ•è‰∫ëÈìæÊé•Êâì‰∏çÂºÄÔºâ&lt;br&gt; ‰ΩøÁî®Â∏∏ËßÅÈóÆÈ¢òËØ∑ËΩ¨Ëá≥Ôºö&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/FAQ.md&quot;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Ê∫êÁ†Å‰ΩøÁî®ÊñπÊ≥ï&lt;/h3&gt; 
&lt;p&gt;ÁéØÂ¢ÉË¶ÅÊ±ÇÔºöNode.js 14+&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# ÂºÄÂèëÊ®°Âºè
npm run dev

# ÊûÑÂª∫ÂÖçÂÆâË£ÖÁâà
npm run pack:dir

# ÊûÑÂª∫ÂÆâË£ÖÂåÖÔºàWindowsÁâàÔºâ
npm run pack:win

# ÊûÑÂª∫ÂÆâË£ÖÂåÖÔºàMacÁâàÔºâ
npm run pack:mac

# ÊûÑÂª∫ÂÆâË£ÖÂåÖÔºàLinuxÁâàÔºâ
npm run pack:linux

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UIÁïåÈù¢&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop&quot;&gt;&lt;img width=&quot;100%&quot; src=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/doc/images/app.png&quot; alt=&quot;lx-music UI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;ÂêØÂä®ÂèÇÊï∞&lt;/h3&gt; 
&lt;p&gt;ÁõÆÂâçËΩØ‰ª∂Â∑≤ÊîØÊåÅÁöÑÂêØÂä®ÂèÇÊï∞Â¶Ç‰∏ãÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-search&lt;/code&gt; ÂêØÂä®ËΩØ‰ª∂Êó∂Ëá™Âä®Âú®ÊêúÁ¥¢Ê°ÜÊêúÁ¥¢ÊåáÂÆöÁöÑÂÜÖÂÆπÔºå‰æãÂ¶ÇÔºö&lt;code&gt;-search=&quot;Á™ÅÁÑ∂ÁöÑËá™Êàë - ‰ºç‰Ω∞&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dha&lt;/code&gt; Á¶ÅÁî®Á°¨‰ª∂Âä†ÈÄüÂêØÂä®ÔºàDisable Hardware AccelerationÔºâÔºåÁ™óÂè£ÊòæÁ§∫ÊúâÈóÆÈ¢òÊó∂ÂèØ‰ª•Â∞ùËØïÊ∑ªÂä†Ê≠§ÂèÇÊï∞ÂêØÂä®Ôºàv1.6.0Ëµ∑Êñ∞Â¢ûÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dt&lt;/code&gt; ‰ª•ÈùûÈÄèÊòéÊ®°ÂºèÂêØÂä®ÔºàDisable TransparentÔºâÔºåÂØπ‰∫éÊú™ÂºÄÂêØAEROÊïàÊûúÁöÑwin7Á≥ªÁªüÂèØÂä†Ê≠§ÂèÇÊï∞ÂêØÂä®‰ª•Á°Æ‰øùÁïåÈù¢Ê≠£Â∏∏ÊòæÁ§∫ÔºàÊ≥®ÔºöËØ•ÂèÇÊï∞ÂØπÊ°åÈù¢Ê≠åËØçÊó†ÊïàÔºâÔºåÂéüÊù•ÁöÑ&lt;code&gt;-nt&lt;/code&gt;ÂèÇÊï∞Â∑≤ÈáçÂëΩÂêç‰∏∫&lt;code&gt;-dt&lt;/code&gt;Ôºàv1.6.0Ëµ∑ÈáçÂëΩÂêçÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dhmkh&lt;/code&gt; Á¶ÅÁî®Á°¨‰ª∂Â™í‰ΩìÂØÜÈí•Â§ÑÁêÜÔºàDisable Hardware Media Key HandlingÔºâÔºåÊ≠§ÈÄâÈ°πÂ∞ÜÁ¶ÅÁî®ChromiumÁöÑHardware Media Key HandlingÁâπÊÄßÔºàv1.9.0Ëµ∑Êñ∞Â¢ûÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-play&lt;/code&gt; ÂêØÂä®Êó∂Êí≠ÊîæÊåáÂÆöÂàóË°®ÁöÑÈü≥‰πêÔºåÂèÇÊï∞ËØ¥ÊòéÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;type&lt;/code&gt;ÔºöÊí≠ÊîæÁ±ªÂûãÔºåÁõÆÂâçÂõ∫ÂÆö‰∏∫&lt;code&gt;songList&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;source&lt;/code&gt;ÔºöÊí≠ÊîæÊ∫êÔºåÂèØÁî®ÂÄº‰∏∫&lt;code&gt;kw/kg/tx/wy/mg/myList&lt;/code&gt;ÔºåÂÖ∂‰∏≠&lt;code&gt;kw/kg/tx/wy/mg&lt;/code&gt;ÂØπÂ∫îÂêÑÊ∫êÁöÑÂú®Á∫øÂàóË°®Ôºå&lt;code&gt;myList&lt;/code&gt;‰∏∫Êú¨Âú∞ÂàóË°®&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;link&lt;/code&gt;ÔºöË¶ÅÊí≠ÊîæÁöÑÂú®Á∫øÂàóË°®Ê≠åÂçïÈìæÊé•„ÄÅÊàñIDÔºåsource‰∏∫&lt;code&gt;kw/kg/tx/wy/mg&lt;/code&gt;‰πã‰∏ÄÔºàÂú®Á∫øÂàóË°®ÔºâÊó∂ÂøÖ‰º†Ôºå‰∏æ‰æãÔºö&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=kw&amp;amp;link=Ê≠åÂçïURL or ID&quot;&lt;/code&gt;ÔºåÊ≥®ÊÑèÔºöÂ¶ÇÊûú‰º†ÂÖ•URLÊó∂ÂøÖÈ°ªÂØπURLËøõË°åÁºñÁ†ÅÂêéÂÜç‰º†ÂÖ•&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;name&lt;/code&gt;ÔºöË¶ÅÊí≠ÊîæÁöÑÊú¨Âú∞ÂàóË°®Ê≠åÂçïÂêçÂ≠óÔºåsource‰∏∫&lt;code&gt;myList&lt;/code&gt;Êó∂ÂøÖ‰º†Ôºå‰∏æ‰æãÔºö&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=myList&amp;amp;name=ÈªòËÆ§ÂàóË°®&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;Ôºö‰ªéÂàóË°®ÁöÑÂì™‰∏™‰ΩçÁΩÆÂºÄÂßãÊí≠ÊîæÔºåÈÄâ‰º†ÔºåËã•‰∏ç‰º†ÈªòËÆ§Êí≠ÊîæÁ¨¨‰∏ÄÈ¶ñÊ≠åÊõ≤Ôºå‰∏æ‰æãÔºö&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=myList&amp;amp;name=ÈªòËÆ§ÂàóË°®&amp;amp;index=2&quot;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h3&gt; 
&lt;p&gt;Â∏∏ËßÅÈóÆÈ¢òÂ∑≤ÁßªËá≥Ôºö&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/FAQ.md&quot;&gt;https://github.com/lyswhut/lx-music-desktop/blob/master/FAQ.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;È°πÁõÆÂçèËÆÆ&lt;/h3&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂü∫‰∫é &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt; ËÆ∏ÂèØËØÅÂèëË°åÔºå‰ª•‰∏ãÂçèËÆÆÊòØÂØπ‰∫é Apache License 2.0 ÁöÑË°•ÂÖÖÔºåÂ¶ÇÊúâÂÜ≤Á™ÅÔºå‰ª•‰ª•‰∏ãÂçèËÆÆ‰∏∫ÂáÜ„ÄÇ&lt;/p&gt; 
&lt;p&gt;ËØçËØ≠Á∫¶ÂÆöÔºöÊú¨ÂçèËÆÆ‰∏≠ÁöÑ‚ÄúÊú¨È°πÁõÆ‚ÄùÊåáÊ¥õÈõ™Èü≥‰πêÊ°åÈù¢ÁâàÈ°πÁõÆÔºõ‚Äú‰ΩøÁî®ËÄÖ‚ÄùÊåáÁ≠æÁΩ≤Êú¨ÂçèËÆÆÁöÑ‰ΩøÁî®ËÄÖÔºõ‚ÄúÂÆòÊñπÈü≥‰πêÂπ≥Âè∞‚ÄùÊåáÂØπÊú¨È°πÁõÆÂÜÖÁΩÆÁöÑÂåÖÊã¨ÈÖ∑Êàë„ÄÅÈÖ∑Áãó„ÄÅÂí™ÂíïÁ≠âÈü≥‰πêÊ∫êÁöÑÂÆòÊñπÂπ≥Âè∞ÁªüÁß∞Ôºõ‚ÄúÁâàÊùÉÊï∞ÊçÆ‚ÄùÊåáÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂõæÂÉè„ÄÅÈü≥È¢ë„ÄÅÂêçÂ≠óÁ≠âÂú®ÂÜÖÁöÑ‰ªñ‰∫∫Êã•ÊúâÊâÄÂ±ûÁâàÊùÉÁöÑÊï∞ÊçÆ„ÄÇ&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Êú¨È°πÁõÆÁöÑÊï∞ÊçÆÊù•Ê∫êÂéüÁêÜÊòØ‰ªéÂêÑÂÆòÊñπÈü≥‰πêÂπ≥Âè∞ÁöÑÂÖ¨ÂºÄÊúçÂä°Âô®‰∏≠ÊãâÂèñÊï∞ÊçÆÔºåÁªèËøáÂØπÊï∞ÊçÆÁÆÄÂçïÂú∞Á≠õÈÄâ‰∏éÂêàÂπ∂ÂêéËøõË°åÂ±ïÁ§∫ÔºåÂõ†Ê≠§Êú¨È°πÁõÆ‰∏çÂØπÊï∞ÊçÆÁöÑÂáÜÁ°ÆÊÄßË¥üË¥£„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ΩøÁî®Êú¨È°πÁõÆÁöÑËøáÁ®ã‰∏≠ÂèØËÉΩ‰ºö‰∫ßÁîüÁâàÊùÉÊï∞ÊçÆÔºåÂØπ‰∫éËøô‰∫õÁâàÊùÉÊï∞ÊçÆÔºåÊú¨È°πÁõÆ‰∏çÊã•ÊúâÂÆÉ‰ª¨ÁöÑÊâÄÊúâÊùÉÔºå‰∏∫‰∫ÜÈÅøÂÖçÈÄ†Êàê‰æµÊùÉÔºå‰ΩøÁî®ËÄÖÂä°ÂøÖÂú®&lt;strong&gt;24Â∞èÊó∂&lt;/strong&gt;ÂÜÖÊ∏ÖÈô§‰ΩøÁî®Êú¨È°πÁõÆÁöÑËøáÁ®ã‰∏≠ÊâÄ‰∫ßÁîüÁöÑÁâàÊùÉÊï∞ÊçÆ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êú¨È°πÁõÆÂÜÖÁöÑÂÆòÊñπÈü≥‰πêÂπ≥Âè∞Âà´Âêç‰∏∫Êú¨È°πÁõÆÂÜÖÂØπÂÆòÊñπÈü≥‰πêÂπ≥Âè∞ÁöÑ‰∏Ä‰∏™Áß∞ÂëºÔºå‰∏çÂåÖÂê´ÊÅ∂ÊÑèÔºåÂ¶ÇÊûúÂÆòÊñπÈü≥‰πêÂπ≥Âè∞ËßâÂæó‰∏çÂ¶•ÔºåÂèØËÅîÁ≥ªÊú¨È°πÁõÆÊõ¥ÊîπÊàñÁßªÈô§„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êú¨È°πÁõÆÂÜÖ‰ΩøÁî®ÁöÑÈÉ®ÂàÜÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂ≠ó‰Ωì„ÄÅÂõæÁâáÁ≠âËµÑÊ∫êÊù•Ê∫ê‰∫é‰∫íËÅîÁΩëÔºåÂ¶ÇÊûúÂá∫Áé∞‰æµÊùÉÂèØËÅîÁ≥ªÊú¨È°πÁõÆÁßªÈô§„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Áî±‰∫é‰ΩøÁî®Êú¨È°πÁõÆ‰∫ßÁîüÁöÑÂåÖÊã¨Áî±‰∫éÊú¨ÂçèËÆÆÊàñÁî±‰∫é‰ΩøÁî®ÊàñÊó†Ê≥ï‰ΩøÁî®Êú¨È°πÁõÆËÄåÂºïËµ∑ÁöÑ‰ªª‰ΩïÊÄßË¥®ÁöÑ‰ªª‰ΩïÁõ¥Êé•„ÄÅÈó¥Êé•„ÄÅÁâπÊÆä„ÄÅÂÅ∂ÁÑ∂ÊàñÁªìÊûúÊÄßÊçüÂÆ≥ÔºàÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂõ†ÂïÜË™âÊçüÂ§±„ÄÅÂÅúÂ∑•„ÄÅËÆ°ÁÆóÊú∫ÊïÖÈöúÊàñÊïÖÈöúÂºïËµ∑ÁöÑÊçüÂÆ≥ËµîÂÅøÔºåÊàñ‰ªª‰ΩïÂèäÊâÄÊúâÂÖ∂‰ªñÂïÜ‰∏öÊçüÂÆ≥ÊàñÊçüÂ§±ÔºâÁî±‰ΩøÁî®ËÄÖË¥üË¥£„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êú¨È°πÁõÆÂÆåÂÖ®ÂÖçË¥πÔºå‰∏îÂºÄÊ∫êÂèëÂ∏É‰∫é GitHub Èù¢ÂêëÂÖ®‰∏ñÁïå‰∫∫Áî®‰ΩúÂØπÊäÄÊúØÁöÑÂ≠¶‰π†‰∫§ÊµÅÔºåÊú¨È°πÁõÆ‰∏çÂØπÈ°πÁõÆÂÜÖÁöÑÊäÄÊúØÂèØËÉΩÂ≠òÂú®ËøùÂèçÂΩìÂú∞Ê≥ïÂæãÊ≥ïËßÑÁöÑË°å‰∏∫‰Ωú‰øùËØÅÔºå&lt;strong&gt;Á¶ÅÊ≠¢Âú®ËøùÂèçÂΩìÂú∞Ê≥ïÂæãÊ≥ïËßÑÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Êú¨È°πÁõÆ&lt;/strong&gt;ÔºåÂØπ‰∫é‰ΩøÁî®ËÄÖÂú®ÊòéÁü•Êàñ‰∏çÁü•ÂΩìÂú∞Ê≥ïÂæãÊ≥ïËßÑ‰∏çÂÖÅËÆ∏ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Êú¨È°πÁõÆÊâÄÈÄ†ÊàêÁöÑ‰ªª‰ΩïËøùÊ≥ïËøùËßÑË°å‰∏∫Áî±‰ΩøÁî®ËÄÖÊâøÊãÖÔºåÊú¨È°πÁõÆ‰∏çÊâøÊãÖÁî±Ê≠§ÈÄ†ÊàêÁöÑ‰ªª‰ΩïÁõ¥Êé•„ÄÅÈó¥Êé•„ÄÅÁâπÊÆä„ÄÅÂÅ∂ÁÑ∂ÊàñÁªìÊûúÊÄßË¥£‰ªª„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Ëã•‰Ω†‰ΩøÁî®‰∫ÜÊú¨È°πÁõÆÔºåÂ∞Ü‰ª£Ë°®‰Ω†Êé•Âèó‰ª•‰∏äÂçèËÆÆ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Èü≥‰πêÂπ≥Âè∞‰∏çÊòìÔºåËØ∑Â∞äÈáçÁâàÊùÉÔºåÊîØÊåÅÊ≠£Áâà„ÄÇ&lt;br&gt; Ëã•ÂØπÊ≠§ÊúâÁñëÈóÆËØ∑ mail to: lyswhut+qq.com (ËØ∑Â∞Ü&lt;code&gt;+&lt;/code&gt;ÊõøÊç¢Êàê&lt;code&gt;@&lt;/code&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. üìäüìàüéâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://d3js.org/logo.svg?sanitize=true&quot; align=&quot;left&quot; hspace=&quot;10&quot; vspace=&quot;6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/learn-d3&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/raw/master/API.md&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. You can also download the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release on GitHub&lt;/a&gt;. For vanilla HTML in modern browsers, import D3 from Skypack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import * as d3 from &quot;https://cdn.skypack.dev/d3@7&quot;;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For legacy environments, you can load D3‚Äôs UMD bundle from an npm-based CDN such as jsDelivr; a &lt;code&gt;d3&lt;/code&gt; global is exported:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/d3@7&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import {selectAll} from &quot;https://cdn.skypack.dev/d3-selection@3&quot;;

const div = selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;D3 is written using &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES2015 modules&lt;/a&gt;. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {scaleLinear} from &quot;d3-scale&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import * as d3 from &quot;d3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using dynamic import:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await import(&quot;d3&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also import individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await Promise.all([
  import(&quot;d3-format&quot;),
  import(&quot;d3-geo&quot;),
  import(&quot;d3-geo-projection&quot;)
]).then(d3 =&amp;gt; Object.assign({}, ...d3));
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ascoders/weekly</title>
      <link>https://github.com/ascoders/weekly</link>
      <description>&lt;p&gt;ÂâçÁ´ØÁ≤æËØªÂë®Âàä„ÄÇÂ∏Æ‰Ω†ÁêÜËß£ÊúÄÂâçÊ≤ø„ÄÅÂÆûÁî®ÁöÑÊäÄÊúØ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ÂâçÁ´ØÁ≤æËØª&lt;/h1&gt; 
&lt;a href=&quot;https://travis-ci.org/ascoders/weekly&quot;&gt; &lt;img src=&quot;https://travis-ci.org/ascoders/weekly.svg?branch=v2&quot; alt=&quot;CircleCI Status&quot;&gt; &lt;/a&gt; 
&lt;p&gt;ÂâçÁ´ØÁïåÁöÑÂ•ΩÊñáÁ≤æËØªÔºåÊØèÂë®Êõ¥Êñ∞ÔºÅ&lt;/p&gt; 
&lt;p&gt;ÊúÄÊñ∞Á≤æËØªÔºö&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/218.%E7%B2%BE%E8%AF%BB%E3%80%8ARust%20%E6%98%AF%20JS%20%E5%9F%BA%E5%BB%BA%E7%9A%84%E6%9C%AA%E6%9D%A5%E3%80%8B.md&quot;&gt;218.Á≤æËØª„ÄäRust ÊòØ JS Âü∫Âª∫ÁöÑÊú™Êù•„Äã&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Á¥†ÊùêÊù•Ê∫êÔºö&lt;a href=&quot;https://github.com/ascoders/weekly/issues/2&quot;&gt;Âë®ÂàäÂèÇËÄÉÊ±†&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Áé∞Â∑≤Ê∂µÁõñÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÁªìÂêàÂ§ßÂéÇÂ∑•‰ΩúÁªèÈ™åËß£ËØªÁöÑ &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF&quot;&gt;ÂâçÊ≤øÊäÄÊúØ&lt;/a&gt;Ôºå&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB&quot;&gt;Ê∫êÁ†ÅËß£ËØª&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÄêÊ∏êÂä†ÂÖ•‰∏Ä‰∫õÂêéÁ´ØÊäÄÊúØËß£ËØª„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰∏Ä‰∫õ &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%95%86%E4%B8%9A%E6%80%9D%E8%80%83&quot;&gt;ÂïÜ‰∏öÊÄùËÄÉ&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â∑≤ÂÆåÊàê &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86&quot;&gt;ÁºñËØëÂéüÁêÜ&lt;/a&gt;„ÄÅ&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;ËÆæËÆ°Ê®°Âºè&lt;/a&gt; ‰∏§Â§ßÂü∫Á°ÄÊ®°Âùó„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂâçÊ≤øÊäÄÊúØ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/1.%E7%B2%BE%E8%AF%BB%E3%80%8Ajs%20%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8F%91%E5%B1%95%E3%80%8B.md&quot;&gt;1.Á≤æËØª„Ääjs Ê®°ÂùóÂåñÂèëÂ±ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/2.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%A8%A1%E6%80%81%E6%A1%86%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;2.Á≤æËØª„ÄäÊ®°ÊÄÅÊ°ÜÁöÑÊúÄ‰Ω≥ÂÆûË∑µ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/3.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E5%90%8E%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B9%8B%E4%BA%89%E3%80%8B.md&quot;&gt;3.Á≤æËØª„ÄäÂâçÂêéÁ´ØÊ∏≤Êüì‰πã‰∫â„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/4.%E7%B2%BE%E8%AF%BB%E3%80%8AAsyncAwait%20%E4%BC%98%E8%B6%8A%E4%B9%8B%E5%A4%84%E3%80%8B.md&quot;&gt;4.Á≤æËØª„ÄäAsyncAwait ‰ºòË∂ä‰πãÂ§Ñ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/5.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B0%91%E5%B7%A5%E5%8F%94%E5%8D%95%E9%A1%B5%E6%95%B0%E6%8D%AE%E6%B5%81%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;5.Á≤æËØª„ÄäÊ∞ëÂ∑•ÂèîÂçïÈ°µÊï∞ÊçÆÊµÅÊñπÊ°à„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/6.%E7%B2%BE%E8%AF%BB%E3%80%8AJavaScript%20%E9%94%99%E8%AF%AF%E5%A0%86%E6%A0%88%E5%A4%84%E7%90%86%E3%80%8B.md&quot;&gt;6.Á≤æËØª„ÄäJavaScript ÈîôËØØÂ†ÜÊ†àÂ§ÑÁêÜ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/7.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AF%B7%E5%81%9C%E6%AD%A2%20css-in-js%20%E7%9A%84%E8%A1%8C%E4%B8%BA%E3%80%8B.md&quot;&gt;7.Á≤æËØª„ÄäËØ∑ÂÅúÊ≠¢ css-in-js ÁöÑË°å‰∏∫„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/8.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A5%E5%9D%91%20React%20%E5%89%8D%E6%B2%A1%E6%9C%89%E4%BA%BA%E4%BC%9A%E5%91%8A%E8%AF%89%E4%BD%A0%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;8.Á≤æËØª„ÄäÂÖ•Âùë React ÂâçÊ≤°Êúâ‰∫∫‰ºöÂëäËØâ‰Ω†ÁöÑ‰∫ã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/9.%E7%B2%BE%E8%AF%BB%E3%80%8AImmutable%20%E7%BB%93%E6%9E%84%E5%85%B1%E4%BA%AB%E3%80%8B.md&quot;&gt;9.Á≤æËØª„ÄäImmutable ÁªìÊûÑÂÖ±‰∫´„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/10.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20Components%20%E7%9A%84%E5%9B%B0%E5%A2%83%E3%80%8B.md&quot;&gt;10.Á≤æËØª„ÄäWeb Components ÁöÑÂõ∞Â¢É„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/11.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;11.Á≤æËØª„ÄäÂâçÁ´ØË∞ÉËØïÊäÄÂ∑ß„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/12.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;12.Á≤æËØª„ÄäReact È´òÈò∂ÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/13.%E7%B2%BE%E8%AF%BB%E3%80%8AThis%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%9B%B0%E6%83%91%E3%80%8B.md&quot;&gt;13.Á≤æËØª„ÄäThis Â∏¶Êù•ÁöÑÂõ∞ÊÉë„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/14.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E4%B9%8B%20DCI%E3%80%8B.md&quot;&gt;14.Á≤æËØª„ÄäÊû∂ÊûÑËÆæËÆ°‰πã DCI„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/15.%E7%B2%BE%E8%AF%BB%E3%80%8ATC39%20%E4%B8%8E%20ECMAScript%20%E6%8F%90%E6%A1%88%E3%80%8B.md&quot;&gt;15.Á≤æËØª„ÄäTC39 ‰∏é ECMAScript ÊèêÊ°à„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/16.%E7%B2%BE%E8%AF%BB%E3%80%8ACSS%20Animations%20vs%20Web%20Animations%20API%E3%80%8B.md&quot;&gt;16.Á≤æËØª„ÄäCSS Animations vs Web Animations API„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/17.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%AE%89%E5%85%A8%E5%9C%B0%E4%BD%BF%E7%94%A8%20React%20context%E3%80%8B.md&quot;&gt;17.Á≤æËØª„ÄäÂ¶Ç‰ΩïÂÆâÂÖ®Âú∞‰ΩøÁî® React context„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/18.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E5%AE%8C%E7%BE%8E%E7%9A%84%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;18.Á≤æËØª„ÄäËÆæËÆ°ÂÆåÁæéÁöÑÊó•ÊúüÈÄâÊã©Âô®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/19.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E3%80%8B%E5%8F%8A%E9%9D%A2%E8%AF%95%E5%AE%98%E6%8A%80%E5%B7%A7.md&quot;&gt;19.Á≤æËØª„ÄäÊúÄ‰Ω≥ÂâçÁ´ØÈù¢ËØïÈ¢ò„ÄãÂèäÈù¢ËØïÂÆòÊäÄÂ∑ß&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/20.%E7%B2%BE%E8%AF%BB%E3%80%8ANestjs%E3%80%8B%E6%96%87%E6%A1%A3.md&quot;&gt;20.Á≤æËØª„ÄäNestjs„ÄãÊñáÊ°£&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/21.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20fonts%3A%20when%20you%20need%20them%2C%20when%20you%20don%E2%80%99t%E3%80%8B.md&quot;&gt;21.Á≤æËØª„ÄäWeb fonts: when you need them, when you don‚Äôt„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/22.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%E7%89%B9%E6%80%A7%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9A%84%20JS%20%E6%80%A7%E8%83%BD%E5%8F%98%E5%8C%96%E3%80%8B.md&quot;&gt;22.Á≤æËØª„ÄäV8 ÂºïÊìéÁâπÊÄßÂ∏¶Êù•ÁöÑÁöÑ JS ÊÄßËÉΩÂèòÂåñ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/23.%E7%B2%BE%E8%AF%BB%E3%80%8AAPI%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E3%80%8B.md&quot;&gt;23.Á≤æËØª„ÄäAPI ËÆæËÆ°ÂéüÂàô„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/24.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20JavaScript%20%E6%A6%82%E8%A7%88%E3%80%8B.md&quot;&gt;24.Á≤æËØª„ÄäÁé∞‰ª£ JavaScript Ê¶ÇËßà„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/25.%E7%B2%BE%E8%AF%BB%E3%80%8Anull%20%3E%3D%200%3F%E3%80%8B.md&quot;&gt;25.Á≤æËØª„Äänull &amp;gt;= 0?„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/26.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8A%A0%E5%AF%86%E5%AA%92%E4%BD%93%E6%89%A9%E5%B1%95%E3%80%8B.md&quot;&gt;26.Á≤æËØª„ÄäÂä†ÂØÜÂ™í‰ΩìÊâ©Â±ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/27.%E7%B2%BE%E8%AF%BB%E3%80%8Acss-in-js%20%E6%9D%80%E9%B8%A1%E7%94%A8%E7%89%9B%E5%88%80%E3%80%8B.md&quot;&gt;27.Á≤æËØª„Ääcss-in-js ÊùÄÈ∏°Áî®ÁâõÂàÄ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/28.%E7%B2%BE%E8%AF%BB%E3%80%8A2017%20%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%A4%87%E5%BF%98%E5%BD%95%E3%80%8B.md&quot;&gt;28.Á≤æËØª„Ää2017 ÂâçÁ´ØÊÄßËÉΩ‰ºòÂåñÂ§áÂøòÂΩï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/29.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E3%80%8B.md&quot;&gt;29.Á≤æËØª„ÄäJS ‰∏≠ÁöÑÂÜÖÂ≠òÁÆ°ÁêÜ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/30.%E7%B2%BE%E8%AF%BB%E3%80%8AJavascript%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%BC%82%E6%AD%A5%E3%80%8B.md&quot;&gt;30.Á≤æËØª„ÄäJavascript ‰∫ã‰ª∂Âæ™ÁéØ‰∏éÂºÇÊ≠•„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/31.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E4%B8%8D%E5%86%8D%E4%BD%BF%E7%94%A8%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;31.Á≤æËØª„ÄäÊàë‰∏çÂÜç‰ΩøÁî®È´òÈò∂ÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/32.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router4.0%20%E8%BF%9B%E9%98%B6%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;32.Á≤æËØª„ÄäReact Router4.0 ËøõÈò∂Ê¶ÇÂøµ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/33.%E7%B2%BE%E8%AF%BB%E3%80%8A30%20%E8%A1%8C%20js%20%E4%BB%A3%E7%A0%81%E5%88%9B%E5%BB%BA%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E3%80%8B.md&quot;&gt;33.Á≤æËØª„Ää30 Ë°å js ‰ª£Á†ÅÂàõÂª∫Á•ûÁªèÁΩëÁªú„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/34.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%E3%80%8B.md&quot;&gt;34.Á≤æËØª„ÄäReact ‰ª£Á†ÅÊï¥Ê¥Å‰πãÈÅì„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/35.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E3%80%8B.md&quot;&gt;35.Á≤æËØª„Äädob - Ê°ÜÊû∂ÂÆûÁé∞„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/36.%E7%B2%BE%E8%AF%BB%E3%80%8AWhen%20You%20%E2%80%9CGit%E2%80%9D%20in%20Trouble-%20a%20Version%20Control%20Story%E3%80%8B.md&quot;&gt;36.Á≤æËØª„ÄäWhen You ‚ÄúGit‚Äù in Trouble- a Version Control Story„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/37.%E7%B2%BE%E8%AF%BB%E3%80%8Ahow%20we%20position%20and%20what%20we%20compare%E3%80%8B.md&quot;&gt;37.Á≤æËØª„Äähow we position and what we compare„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/38.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;38.Á≤æËØª„Äädob - Ê°ÜÊû∂‰ΩøÁî®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/39.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A8%E9%93%BE%E8%B7%AF%E4%BD%93%E9%AA%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8C%96%E7%9F%BF%E3%80%8B.md&quot;&gt;39.Á≤æËØª„ÄäÂÖ®ÈìæË∑Ø‰ΩìÈ™åÊµèËßàÂô®ÊåñÁüø„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/40.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%9D%E6%8E%A2%20Reason%20%E4%B8%8E%20GraphQL%E3%80%8B.md&quot;&gt;40.Á≤æËØª„ÄäÂàùÊé¢ Reason ‰∏é GraphQL„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/41.%E7%B2%BE%E8%AF%BB%E3%80%8AAnt%20Design%203.0%20%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B.md&quot;&gt;41.Á≤æËØª„ÄäAnt Design 3.0 ËÉåÂêéÁöÑÊïÖ‰∫ã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/42.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%B5%81%E5%93%B2%E5%AD%A6%E3%80%8B.md&quot;&gt;42.Á≤æËØª„ÄäÂâçÁ´ØÊï∞ÊçÆÊµÅÂì≤Â≠¶„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/43.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A2%9E%E5%BC%BA%E7%8E%B0%E5%AE%9E%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B.md&quot;&gt;43.Á≤æËØª„ÄäÂ¢ûÂº∫Áé∞ÂÆû‰∏éÂèØËßÜÂåñ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/44.%E7%B2%BE%E8%AF%BB%E3%80%8ARekit%20Studio%E3%80%8B.md&quot;&gt;44.Á≤æËØª„ÄäRekit Studio„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/45.%E7%B2%BE%E8%AF%BB%E3%80%8AReact&#39;s%20new%20Context%20API%E3%80%8B.md&quot;&gt;45.Á≤æËØª„ÄäReact&#39;s new Context API„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/46.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-rxjs%E3%80%8B.md&quot;&gt;46.Á≤æËØª„Ääreact-rxjs„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/47.%E7%B2%BE%E8%AF%BB%E3%80%8Awebpack4.0%20%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;47.Á≤æËØª„Ääwebpack4.0 ÂçáÁ∫ßÊåáÂçó„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/49.%E7%B2%BE%E8%AF%BB%E3%80%8ACompilers%20are%20the%20New%20Frameworks%E3%80%8B.md&quot;&gt;49.Á≤æËØª„ÄäCompilers are the New Frameworks„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/50.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%9E%84%E5%BB%BA%20ARKit%20%E5%BA%94%E7%94%A8%E3%80%8B.md&quot;&gt;50.Á≤æËØª„ÄäÂø´ÈÄü‰∏äÊâãÊûÑÂª∫ ARKit Â∫îÁî®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/51.%E7%B2%BE%E8%AF%BB%E3%80%8AElements%20of%20Web%20Dev%E3%80%8B.md&quot;&gt;51.Á≤æËØª„ÄäElements of Web Dev„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/52.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BE%E8%A7%A3%20ES%20%E6%A8%A1%E5%9D%97%E3%80%8B.md&quot;&gt;52.Á≤æËØª„ÄäÂõæËß£ ES Ê®°Âùó„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/53.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8F%92%E4%BB%B6%E5%8C%96%E6%80%9D%E7%BB%B4%E3%80%8B.md&quot;&gt;53.Á≤æËØª„ÄäÊèí‰ª∂ÂåñÊÄùÁª¥„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/54.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%20serverRender%E3%80%8B.md&quot;&gt;54.Á≤æËØª„ÄäÂú®ÊµèËßàÂô®ËøêË°å serverRender„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/55.%E7%B2%BE%E8%AF%BB%E3%80%8Aasync%20await%20%E6%98%AF%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%E3%80%8B.md&quot;&gt;55.Á≤æËØª„Ääasync await ÊòØÊääÂèåÂàÉÂâë„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/56.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%20Redux%E3%80%8B.md&quot;&gt;56.Á≤æËØª„ÄäÈáçÊñ∞ÊÄùËÄÉ Redux„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/57.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20js%20%E6%A1%86%E6%9E%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E3%80%8B.md&quot;&gt;57.Á≤æËØª„ÄäÁé∞‰ª£ js Ê°ÜÊû∂Â≠òÂú®ÁöÑÊ†πÊú¨ÂéüÂõ†„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/58.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript2.0%20-%202.9%E3%80%8B.md&quot;&gt;58.Á≤æËØª„ÄäTypescript2.0 - 2.9„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/59.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%20Nodejs%20%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%8B.md&quot;&gt;59.Á≤æËØª„ÄäÂ¶Ç‰ΩïÂà©Áî® Nodejs ÁõëÂê¨Êñá‰ª∂Â§π„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/60.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%9C%A8%20nodejs%20%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E3%80%8B.md&quot;&gt;60.Á≤æËØª„ÄäÂ¶Ç‰ΩïÂú® nodejs ‰ΩøÁî®ÁéØÂ¢ÉÂèòÈáè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/61.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E5%85%AB%E7%A7%8D%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;61.Á≤æËØª„ÄäReact ÂÖ´ÁßçÊù°‰ª∂Ê∏≤Êüì„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/62.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E5%BC%95%E6%93%8E%E5%9F%BA%E7%A1%80%E4%B9%8B%20Shapes%20and%20Inline%20Caches%E3%80%8B.md&quot;&gt;62.Á≤æËØª„ÄäJS ÂºïÊìéÂü∫Á°Ä‰πã Shapes and Inline Caches„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/63.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E7%9A%84%E5%A4%9A%E6%80%81%E6%80%A7%E3%80%8B.md&quot;&gt;63.Á≤æËØª„ÄäReact ÁöÑÂ§öÊÄÅÊÄß„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/68.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%A1%A1%E9%87%8F%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E3%80%8B.md&quot;&gt;68.Á≤æËØª„ÄäË°°ÈáèÁî®Êà∑‰ΩìÈ™å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/69.%E7%B2%BE%E8%AF%BB%E3%80%8ASQL%20vs%20Flux%E3%80%8B.md&quot;&gt;69.Á≤æËØª„ÄäSQL vs Flux„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/72.%E7%B2%BE%E8%AF%BB%E3%80%8AREST%2C%20GraphQL%2C%20Webhooks%2C%20%26%20gRPC%20%E5%A6%82%E4%BD%95%E9%80%89%E5%9E%8B%E3%80%8B.md&quot;&gt;72.Á≤æËØª„ÄäREST, GraphQL, Webhooks, &amp;amp; gRPC Â¶Ç‰ΩïÈÄâÂûã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/74.%E7%B2%BE%E8%AF%BB%E3%80%8A12%20%E4%B8%AA%E8%AF%84%E4%BC%B0%20JS%20%E5%BA%93%E4%BD%A0%E9%9C%80%E8%A6%81%E5%85%B3%E5%BF%83%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;74.Á≤æËØª„Ää12 ‰∏™ËØÑ‰º∞ JS Â∫ì‰Ω†ÈúÄË¶ÅÂÖ≥ÂøÉÁöÑ‰∫ã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/76.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%88%E8%B0%88%20Web%20Workers%E3%80%8B.md&quot;&gt;76.Á≤æËØª„ÄäË∞àË∞à Web Workers„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/77.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Reduce%20%E5%AE%9E%E7%8E%B0%20Promise%20%E4%B8%B2%E8%A1%8C%E6%89%A7%E8%A1%8C%E3%80%8B.md&quot;&gt;77.Á≤æËØª„ÄäÁî® Reduce ÂÆûÁé∞ Promise ‰∏≤Ë°åÊâßË°å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/79.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%E3%80%8B.md&quot;&gt;79.Á≤æËØª„ÄäReact Hooks„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/80.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%80%8E%E4%B9%88%E7%94%A8%20React%20Hooks%20%E9%80%A0%E8%BD%AE%E5%AD%90%E3%80%8B.md&quot;&gt;80.Á≤æËØª„ÄäÊÄé‰πàÁî® React Hooks ÈÄ†ËΩÆÂ≠ê„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/81.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20CSS%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;81.Á≤æËØª„Ää‰ΩøÁî® CSS Â±ûÊÄßÈÄâÊã©Âô®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/83.%E7%B2%BE%E8%AF%BB%E3%80%8AReact16%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;83.Á≤æËØª„ÄäReact16 Êñ∞ÁâπÊÄß„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/84.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%203.2%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;84.Á≤æËØª„ÄäTypescript 3.2 Êñ∞ÁâπÊÄß„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/86.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BD%E9%99%85%E5%8C%96%E5%B8%83%E5%B1%80%20-%20Logical%20Properties%E3%80%8B.md&quot;&gt;86.Á≤æËØª„ÄäÂõΩÈôÖÂåñÂ∏ÉÂ±Ä - Logical Properties„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/87.%E7%B2%BE%E8%AF%BB%E3%80%8AsetState%20%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;87.Á≤æËØª„ÄäsetState ÂÅö‰∫Ü‰ªÄ‰πà„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/88.%E7%B2%BE%E8%AF%BB%E3%80%8ACaches%20API%E3%80%8B.md&quot;&gt;88.Á≤æËØª„ÄäCaches API„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/89.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E4%B8%8E%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;89.Á≤æËØª„ÄäÂ¶Ç‰ΩïÁºñËØëÂâçÁ´ØÈ°πÁõÆ‰∏éÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/91.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E5%88%99%20ES2018%E3%80%8B.md&quot;&gt;91.Á≤æËØª„ÄäÊ≠£Âàô ES2018„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/94.%E7%B2%BE%E8%AF%BB%E3%80%8AServerless%20%E7%BB%99%E5%89%8D%E7%AB%AF%E5%B8%A6%E6%9D%A5%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;94.Á≤æËØª„ÄäServerless ÁªôÂâçÁ´ØÂ∏¶Êù•‰∫Ü‰ªÄ‰πà„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/95.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20VS%20Class%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;95.Á≤æËØª„ÄäFunction VS Class ÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/96.%E7%B2%BE%E8%AF%BB%E3%80%8AuseEffect%20%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;96.Á≤æËØª„ÄäuseEffect ÂÆåÂÖ®ÊåáÂçó„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/97.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BC%96%E5%86%99%E6%9C%89%E5%BC%B9%E6%80%A7%E7%9A%84%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;97.Á≤æËØª„ÄäÁºñÂÜôÊúâÂºπÊÄßÁöÑÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/99.%E7%B2%BE%E8%AF%BB%E3%80%8AScheduling%20in%20React%E3%80%8B.md&quot;&gt;99.Á≤æËØª„ÄäScheduling in React„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/100.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%20Lazy%20Parsing%E3%80%8B.md&quot;&gt;100.Á≤æËØª„ÄäV8 ÂºïÊìé Lazy Parsing„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/101.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%20vs%20%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98%20vs%20%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2%E3%80%8B.md&quot;&gt;101.Á≤æËØª„ÄäÊåÅÁª≠ÈõÜÊàê vs ÊåÅÁª≠‰∫§‰ªò vs ÊåÅÁª≠ÈÉ®ÁΩ≤„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/102.%E7%B2%BE%E8%AF%BB%E3%80%8AMonorepo%20%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%8B.md&quot;&gt;102.Á≤æËØª„ÄäMonorepo ÁöÑ‰ºòÂäø„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/104.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20Component%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;104.Á≤æËØª„ÄäFunction Component ÂÖ•Èó®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/105.%E7%B2%BE%E8%AF%BB%E3%80%8AWhat&#39;s%20new%20in%20javascript%E3%80%8B.md&quot;&gt;105.Á≤æËØª„ÄäWhat&#39;s new in javascript„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/107.%E7%B2%BE%E8%AF%BB%E3%80%8AOptional%20chaining%E3%80%8B.md&quot;&gt;107.Á≤æËØª„ÄäOptional chaining„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/109.%E7%B2%BE%E8%AF%BB%E3%80%8AVue3.0%20Function%20API%E3%80%8B.md&quot;&gt;109.Á≤æËØª„ÄäVue3.0 Function API„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/111.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B%E3%80%8B.md&quot;&gt;111.Á≤æËØª„ÄäÂâçÁ´ØÊú™Êù•Â±ïÊúõ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/112.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E3%80%8B.md&quot;&gt;112.Á≤æËØª„ÄäÊ∫êÁ†ÅÂ≠¶‰π†„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/113.%E7%B2%BE%E8%AF%BB%E3%80%8ANodejs%20V12%E3%80%8B.md&quot;&gt;113.Á≤æËØª„ÄäNodejs V12„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/117.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E6%8E%A2%E7%B4%A2%E5%BC%8F%E6%A8%A1%E5%9E%8B%E3%80%8B.md&quot;&gt;117.Á≤æËØª„ÄäTableau Êé¢Á¥¢ÂºèÊ®°Âûã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/118.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20css%20%E5%8F%98%E9%87%8F%E7%94%9F%E6%88%90%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98%E3%80%8B.md&quot;&gt;118.Á≤æËØª„Ää‰ΩøÁî® css ÂèòÈáèÁîüÊàêÈ¢úËâ≤‰∏ªÈ¢ò„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/119.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%B7%B1%E6%B0%B4%E5%8C%BA%E3%80%8B.md&quot;&gt;119.Á≤æËØª„ÄäÂâçÁ´ØÊ∑±Ê∞¥Âå∫„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/120.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;120.Á≤æËØª„ÄäReact Hooks ÊúÄ‰Ω≥ÂÆûË∑µ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/121.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E4%B8%8E%20BI%E3%80%8B.md&quot;&gt;121.Á≤æËØª„ÄäÂâçÁ´Ø‰∏é BI„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/123.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Babel%20%E5%88%9B%E9%80%A0%E8%87%AA%E5%AE%9A%E4%B9%89%20JS%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;123.Á≤æËØª„ÄäÁî® Babel ÂàõÈÄ†Ëá™ÂÆö‰πâ JS ËØ≠Ê≥ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/124.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20css%20grid%20%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%E5%B8%83%E5%B1%80%E3%80%8B.md&quot;&gt;124.Á≤æËØª„ÄäÁî® css grid ÈáçÊñ∞ÊÄùËÄÉÂ∏ÉÂ±Ä„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/125.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%20-%20%E5%87%BD%E6%95%B0%E5%BC%8F%E4%B9%8B%E7%BE%8E%E3%80%8B.md&quot;&gt;125.Á≤æËØª„ÄäÊ∑±Â∫¶Â≠¶‰π† - ÂáΩÊï∞Âºè‰πãÁæé„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/126.%E7%B2%BE%E8%AF%BB%E3%80%8ANuxtjs%E3%80%8B.md&quot;&gt;126.Á≤æËØª„ÄäNuxtjs„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/127.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day1%E3%80%8B.md&quot;&gt;127.Á≤æËØª„ÄäReact Conf 2019 - Day1„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/129.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day2%E3%80%8B.md&quot;&gt;129.Á≤æËØª„ÄäReact Conf 2019 - Day2„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/132.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E4%BA%A4%E7%9A%84%20React%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;132.Á≤æËØª„ÄäÊ≠£‰∫§ÁöÑ React ÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/133.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%BB%E6%89%BE%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%B9%B3%E8%A1%A1%E7%82%B9%E3%80%8B.md&quot;&gt;133.Á≤æËØª„ÄäÂØªÊâæÊ°ÜÊû∂ËÆæËÆ°ÁöÑÂπ≥Ë°°ÁÇπ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/134.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E5%9C%A8%E9%98%BF%E9%87%8C%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%E5%A4%A7%E5%89%8D%E7%AB%AF%E3%80%8B.md&quot;&gt;134.Á≤æËØª„ÄäÊàëÂú®ÈòøÈáåÊï∞ÊçÆ‰∏≠Âè∞Â§ßÂâçÁ´Ø„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/138.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%B2%BE%E9%80%9A%20console.log%E3%80%8B.md&quot;&gt;138.Á≤æËØª„ÄäÁ≤æÈÄö console.log„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/139.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20JSON%20Parser%E3%80%8B.md&quot;&gt;139.Á≤æËØª„ÄäÊâãÂÜô JSON Parser„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/140.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BB%93%E5%90%88%20React%20%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9F%20Drag%20Drop%20API%E3%80%8B.md&quot;&gt;140.Á≤æËØª„ÄäÁªìÂêà React ‰ΩøÁî®ÂéüÁîü Drag Drop API„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/141.%E7%B2%BE%E8%AF%BB%E3%80%8AuseRef%20%E4%B8%8E%20createRef%20%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;141.Á≤æËØª„ÄäuseRef ‰∏é createRef ÁöÑÂå∫Âà´„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/142.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%81%9A%E5%A5%BD%20CodeReview%E3%80%8B.md&quot;&gt;142.Á≤æËØª„ÄäÂ¶Ç‰ΩïÂÅöÂ•Ω CodeReview„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/143.%E7%B2%BE%E8%AF%BB%E3%80%8ASuspense%20%E6%94%B9%E5%8F%98%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E3%80%8B.md&quot;&gt;143.Á≤æËØª„ÄäSuspense ÊîπÂèòÂºÄÂèëÊñπÂºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/144.%E7%B2%BE%E8%AF%BB%E3%80%8AWebpack5%20%E6%96%B0%E7%89%B9%E6%80%A7%20-%20%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6%E3%80%8B.md&quot;&gt;144.Á≤æËØª„ÄäWebpack5 Êñ∞ÁâπÊÄß - Ê®°ÂùóËÅîÈÇ¶„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/145.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router%20v6%E3%80%8B.md&quot;&gt;145.Á≤æËØª„ÄäReact Router v6„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/146.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E3%80%8B.md&quot;&gt;146.Á≤æËØª„ÄäReact Hooks Êï∞ÊçÆÊµÅ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/147.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40types%20react%20%E5%80%BC%E5%BE%97%E6%B3%A8%E6%84%8F%E7%9A%84%20TS%20%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;147. Á≤æËØª„Ää@types react ÂÄºÂæóÊ≥®ÊÑèÁöÑ TS ÊäÄÂ∑ß„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/148.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Error%20Boundaries%E3%80%8B.md&quot;&gt;148. Á≤æËØª„ÄäReact Error Boundaries„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/149.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95%E3%80%8B.md&quot;&gt;149. Á≤æËØª„ÄäReact ÊÄßËÉΩË∞ÉËØï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/150.%20%E7%B2%BE%E8%AF%BB%E3%80%8ADeno%201.0%20%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E3%80%8B.md&quot;&gt;150. Á≤æËØª„ÄäDeno 1.0 ‰Ω†ÈúÄË¶Å‰∫ÜËß£ÁöÑ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/152.%20%E7%B2%BE%E8%AF%BB%E3%80%8Arecoil%E3%80%8B.md&quot;&gt;152. Á≤æËØª„Äärecoil„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/153.%20%E7%B2%BE%E8%AF%BB%E3%80%8Asnowpack%E3%80%8B.md&quot;&gt;153. Á≤æËØª„Ääsnowpack„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/154.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20React%20%E5%81%9A%E6%8C%89%E9%9C%80%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;154. Á≤æËØª„ÄäÁî® React ÂÅöÊåâÈúÄÊ∏≤Êüì„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/157.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E6%AF%94%E8%BE%83%20Object%20%E5%AF%B9%E8%B1%A1%E3%80%8B.md&quot;&gt;157. Á≤æËØª„ÄäÂ¶Ç‰ΩïÊØîËæÉ Object ÂØπË±°„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/158.%20%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204%E3%80%8B.md&quot;&gt;158. Á≤æËØª„ÄäTypescript 4„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/159.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%B9%E4%BD%8E%E4%BB%A3%E7%A0%81%E6%90%AD%E5%BB%BA%E7%9A%84%E7%90%86%E8%A7%A3%E3%80%8B.md&quot;&gt;159. Á≤æËØª„ÄäÂØπ‰Ωé‰ª£Á†ÅÊê≠Âª∫ÁöÑÁêÜËß£„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/160.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%87%BD%E6%95%B0%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;160. Á≤æËØª„ÄäÂáΩÊï∞ÁºìÂ≠ò„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/161.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E6%90%AD%E5%BB%BA%E6%80%9D%E8%80%83%20-%20%E5%AF%8C%E6%96%87%E6%9C%AC%E6%90%AD%E5%BB%BA%E3%80%8B.md&quot;&gt;161.Á≤æËØª„ÄäÂèØËßÜÂåñÊê≠Âª∫ÊÄùËÄÉ - ÂØåÊñáÊú¨Êê≠Âª∫„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/162.%E7%B2%BE%E8%AF%BB%E3%80%8ATasks%2C%20microtasks%2C%20queues%20and%20schedules%E3%80%8B.md&quot;&gt;162.Á≤æËØª„ÄäTasks, microtasks, queues and schedules„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/163.%E7%B2%BE%E8%AF%BB%E3%80%8ASpring%20%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;163.Á≤æËØª„ÄäSpring Ê¶ÇÂøµ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/164.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E8%AE%BE%E8%AE%A1%E5%99%A8%E3%80%8B.md&quot;&gt;164.Á≤æËØª„ÄäÊï∞ÊçÆÊê≠Âª∫ÂºïÊìé bi-designer API-ËÆæËÆ°Âô®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/165.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;165.Á≤æËØª„ÄäÊï∞ÊçÆÊê≠Âª∫ÂºïÊìé bi-designer API-ÁªÑ‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/166.%E7%B2%BE%E8%AF%BB%E3%80%8ABI%20%E6%90%AD%E5%BB%BA%20-%20%E7%AD%9B%E9%80%89%E6%9D%A1%E4%BB%B6%E3%80%8B.md&quot;&gt;166.Á≤æËØª„ÄäBI Êê≠Âª∫ - Á≠õÈÄâÊù°‰ª∂„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/190.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E3%80%8B.md&quot;&gt;190.Á≤æËØª„ÄäDOM diff ÂéüÁêÜËØ¶Ëß£„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/191.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BD%E8%A1%A8%E6%A0%BC%E3%80%8B.md&quot;&gt;191.Á≤æËØª„ÄäÈ´òÊÄßËÉΩË°®Ê†º„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/192.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%8B.md&quot;&gt;192.Á≤æËØª„ÄäDOM diff ÊúÄÈïø‰∏äÂçáÂ≠êÂ∫èÂàó„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/193.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Server%20Component%E3%80%8B.md&quot;&gt;193.Á≤æËØª„ÄäReact Server Component„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/194.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B.md&quot;&gt;194.Á≤æËØª„ÄäÁÆóÊ≥ïÂü∫Á°ÄÊï∞ÊçÆÁªìÊûÑ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/195.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%96%B0%E4%B8%80%E4%BB%A3%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E3%80%8B.md&quot;&gt;195.Á≤æËØª„ÄäÊñ∞‰∏Ä‰ª£ÂâçÁ´ØÊûÑÂª∫Â∑•ÂÖ∑ÂØπÊØî„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/196.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%20-%202021%20%E5%B9%B4%E3%80%8B.md&quot;&gt;196.Á≤æËØª„ÄäÂâçÁ´ØËÅå‰∏öËßÑÂàí - 2021 Âπ¥„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/197.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%8E%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E7%BC%96%E6%8E%92%E3%80%8B.md&quot;&gt;197.Á≤æËØª„Ää‰Ωé‰ª£Á†ÅÈÄªËæëÁºñÊéí„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/202.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%2018%E3%80%8B.md&quot;&gt;202.Á≤æËØª„ÄäReact 18„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/204.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%BB%98%E8%AE%A4%E3%80%81%E5%91%BD%E5%90%8D%E5%AF%BC%E5%87%BA%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;204.Á≤æËØª„ÄäÈªòËÆ§„ÄÅÂëΩÂêçÂØºÂá∫ÁöÑÂå∫Âà´„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/205.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20with%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;205.Á≤æËØª„ÄäJS with ËØ≠Ê≥ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/206.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%80%E7%A7%8D%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;206.Á≤æËØª„Ää‰∏ÄÁßç Hooks Êï∞ÊçÆÊµÅÁÆ°ÁêÜÊñπÊ°à„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/207.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%20infer%20%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%8B.md&quot;&gt;207.Á≤æËØª„ÄäTypescript infer ÂÖ≥ÈîÆÂ≠ó„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/208.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204.4%E3%80%8B.md&quot;&gt;208.Á≤æËØª„ÄäTypescript 4.4„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/209.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8D%95%E8%8E%B7%E6%89%80%E6%9C%89%E5%BC%82%E6%AD%A5%20error%E3%80%8B.md&quot;&gt;209.Á≤æËØª„ÄäÊçïËé∑ÊâÄÊúâÂºÇÊ≠• error„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/210.%E7%B2%BE%E8%AF%BB%E3%80%8Aclass%20static%20block%E3%80%8B.md&quot;&gt;210.Á≤æËØª„Ääclass static block„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/211.%E7%B2%BE%E8%AF%BB%E3%80%8AMicrosoft%20Power%20Fx%E3%80%8B.md&quot;&gt;211.Á≤æËØª„ÄäMicrosoft Power Fx„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/212.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E6%80%9D%E8%80%83%E3%80%8B.md&quot;&gt;212.Á≤æËØª„ÄäÂèØÁª¥Êä§ÊÄßÊÄùËÄÉ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/213.%E7%B2%BE%E8%AF%BB%E3%80%8APrisma%20%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;213.Á≤æËØª„ÄäPrisma ÁöÑ‰ΩøÁî®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/214.%E7%B2%BE%E8%AF%BB%E3%80%8Aweb%20streams%E3%80%8B.md&quot;&gt;214.Á≤æËØª„Ääweb streams„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/215.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BB%80%E4%B9%88%E6%98%AF%20LOD%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%8B.md&quot;&gt;215.Á≤æËØª„Ää‰ªÄ‰πàÊòØ LOD Ë°®ËææÂºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/216.%E7%B2%BE%E8%AF%BB%E3%80%8A15%20%E5%A4%A7%20LOD%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%20-%20%E4%B8%8A%E3%80%8B.md&quot;&gt;216.Á≤æËØª„Ää15 Â§ß LOD Ë°®ËææÂºè - ‰∏ä„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/217.%E7%B2%BE%E8%AF%BB%E3%80%8A15%20%E5%A4%A7%20LOD%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%20-%20%E4%B8%8B%E3%80%8B.md&quot;&gt;217.Á≤æËØª„Ää15 Â§ß LOD Ë°®ËææÂºè - ‰∏ã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂâçÊ≤øÊäÄÊúØ/218.%E7%B2%BE%E8%AF%BB%E3%80%8ARust%20%E6%98%AF%20JS%20%E5%9F%BA%E5%BB%BA%E7%9A%84%E6%9C%AA%E6%9D%A5%E3%80%8B.md&quot;&gt;218.Á≤æËØª„ÄäRust ÊòØ JS Âü∫Âª∫ÁöÑÊú™Êù•„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ËÆæËÆ°Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/167.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Abstract%20Factory%20%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E3%80%8B.md&quot;&gt;167.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Abstract Factory ÊäΩË±°Â∑•ÂéÇ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/168.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Builder%20%E7%94%9F%E6%88%90%E5%99%A8%E3%80%8B.md&quot;&gt;168.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Builder ÁîüÊàêÂô®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/169.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Factory%20Method%20%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%8B.md&quot;&gt;169.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Factory Method Â∑•ÂéÇÊñπÊ≥ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/170.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Prototype%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;170.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Prototype ÂéüÂûãÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/171.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Singleton%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;171.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Singleton Âçï‰æãÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/172.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Adapter%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;172.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Adapter ÈÄÇÈÖçÂô®Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/173.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Bridge%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;173.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Bridge Ê°•Êé•Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/174.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Composite%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;174.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Composite ÁªÑÂêàÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/175.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Decorator%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;175.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Decorator Ë£ÖÈ•∞Âô®Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/176.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Facade%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;176.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Facade Â§ñËßÇÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/177.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Flyweight%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;177.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Flyweight ‰∫´ÂÖÉÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/178.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Proxy%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;178.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Proxy ‰ª£ÁêÜÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/179.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Chain%20of%20Responsibility%20%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;179.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Chain of Responsibility ËÅåË¥£ÈìæÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/180.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Command%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;180.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Command ÂëΩ‰ª§Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/181.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Interpreter%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;181.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Interpreter Ëß£ÈáäÂô®Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/182.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Iterator%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;182.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Iterator Ëø≠‰ª£Âô®Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/183.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Mediator%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;183.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Mediator ‰∏≠‰ªãËÄÖÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/184.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Memoto%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;184.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Memoto Â§áÂøòÂΩïÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/185.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Observer%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;185.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Observer ËßÇÂØüËÄÖÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/186.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20State%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;186.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - State Áä∂ÊÄÅÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/187.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Strategy%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;187.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Strategy Á≠ñÁï•Ê®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/188.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Template%20Method%20%E6%A8%A1%E7%89%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;188.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Template Method Ê®°ÁâàÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ËÆæËÆ°Ê®°Âºè/189.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Visitor%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;189.Á≤æËØª„ÄäËÆæËÆ°Ê®°Âºè - Visitor ËÆøÈóÆËÄÖÊ®°Âºè„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÁºñËØëÂéüÁêÜ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/64.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;64.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ËØçÊ≥ïÂàÜÊûê„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/65.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%96%87%E6%B3%95%E4%BB%8B%E7%BB%8D%E3%80%8B.md&quot;&gt;65.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ÊñáÊ≥ï‰ªãÁªç„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/66.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;66.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ËØ≠Ê≥ïÂàÜÊûê„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/67.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;67.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ÂõûÊ∫Ø„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/70.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E6%A0%91%E3%80%8B.md&quot;&gt;70.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ËØ≠Ê≥ïÊ†ë„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/71.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;71.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ÈîôËØØÊèêÁ§∫„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/78.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;78.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - ÊÄßËÉΩ‰ºòÂåñ‰πãÁºìÂ≠ò„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁºñËØëÂéüÁêÜ/85.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;85.Á≤æËØª„ÄäÊâãÂÜô SQL ÁºñËØëÂô® - Êô∫ËÉΩÊèêÁ§∫„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ê∫êÁ†ÅËß£ËØª&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/48.%E7%B2%BE%E8%AF%BB%E3%80%8AImmer.js%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;48.Á≤æËØª„ÄäImmer.js„ÄãÊ∫êÁ†Å&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/73.%E7%B2%BE%E8%AF%BB%E3%80%8Asqorn%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;73.Á≤æËØª„Ääsqorn Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/75.%E7%B2%BE%E8%AF%BB%E3%80%8AEpitath%20%E6%BA%90%E7%A0%81%20-%20renderProps%20%E6%96%B0%E7%94%A8%E6%B3%95%E3%80%8B.md&quot;&gt;75.Á≤æËØª„ÄäEpitath Ê∫êÁ†Å - renderProps Êñ∞Áî®Ê≥ï„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/82.%E7%B2%BE%E8%AF%BB%E3%80%8AHtm%20-%20Hyperscript%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;82.Á≤æËØª„ÄäHtm - Hyperscript Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/92.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20PowerPlug%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;92.Á≤æËØª„ÄäReact PowerPlug Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/93.%E7%B2%BE%E8%AF%BB%E3%80%8Asyntax-parser%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;93.Á≤æËØª„Ääsyntax-parser Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/98.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-easy-state%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;98.Á≤æËØª„Ääreact-easy-state Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/110.%E7%B2%BE%E8%AF%BB%E3%80%8AInject%20Instance%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;110.Á≤æËØª„ÄäInject Instance Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/122.%E7%B2%BE%E8%AF%BB%E3%80%8Arobot%20%E6%BA%90%E7%A0%81%20-%20%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E3%80%8B.md&quot;&gt;122.Á≤æËØª„Äärobot Ê∫êÁ†Å - ÊúâÈôêÁä∂ÊÄÅÊú∫„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/128.%E7%B2%BE%E8%AF%BB%E3%80%8AHooks%20%E5%8F%96%E6%95%B0%20-%20swr%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;128.Á≤æËØª„ÄäHooks ÂèñÊï∞ - swr Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/130.%E7%B2%BE%E8%AF%BB%E3%80%8Aunstated%20%E4%B8%8E%20unstated-next%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;130.Á≤æËØª„Ääunstated ‰∏é unstated-next Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/151.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40umijs%20use-request%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;151. Á≤æËØª„Ää@umijs use-request„ÄãÊ∫êÁ†Å&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/155.%20%E7%B2%BE%E8%AF%BB%E3%80%8Ause-what-changed%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;155. Á≤æËØª„Ääuse-what-changed Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./Ê∫êÁ†ÅËß£ËØª/156.%20%E7%B2%BE%E8%AF%BB%E3%80%8Areact-intersection-observer%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;156. Á≤æËØª„Ääreact-intersection-observer Ê∫êÁ†Å„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂïÜ‰∏öÊÄùËÄÉ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/90.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%202019%E3%80%8B.md&quot;&gt;90.Á≤æËØª„ÄäÊûÅÂÆ¢ÂÖ¨Âõ≠ 2019„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/103.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%93%E5%AE%B6%E4%B8%8D%E5%86%8D%E5%85%B3%E5%BF%83%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E3%80%8B.md&quot;&gt;103.Á≤æËØª„Ää‰∏∫‰ªÄ‰πà‰∏ìÂÆ∂‰∏çÂÜçÂÖ≥ÂøÉÊäÄÊúØÁªÜËäÇ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/106.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E4%B9%8B%E4%B8%8A%C2%B7%E6%99%BA%E6%85%A7%E4%B9%8B%E5%85%89%20-%202018%E3%80%8B.md&quot;&gt;106.Á≤æËØª„ÄäÊï∞ÊçÆ‰πã‰∏ä¬∑Êô∫ÊÖß‰πãÂÖâ - 2018„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/108.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%99%BA%E8%83%BD%E5%95%86%E4%B8%9A%E3%80%8B.md&quot;&gt;108.Á≤æËØª„ÄäÊô∫ËÉΩÂïÜ‰∏ö„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/114.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%81%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B8%AD%E5%BF%83%E3%80%8B.md&quot;&gt;114.Á≤æËØª„ÄäË∞ÅÂú®‰∏ñÁïå‰∏≠ÂøÉ„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/115.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;115.Á≤æËØª„ÄäTableau ÂÖ•Èó®„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/116.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%B7%E6%96%B0%E3%80%8B.md&quot;&gt;116.Á≤æËØª„ÄäÂà∑Êñ∞„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/131.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BB%8E%200%20%E5%88%B0%201%E3%80%8B.md&quot;&gt;131.Á≤æËØª„Ää‰ªé 0 Âà∞ 1„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/135.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8A%E3%80%8B.md&quot;&gt;135.Á≤æËØª„ÄäÊûÅÂÆ¢ÂÖ¨Âõ≠ IFX - ‰∏ä„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/136.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8B%E3%80%8B.md&quot;&gt;136.Á≤æËØª„ÄäÊûÅÂÆ¢ÂÖ¨Âõ≠ IFX - ‰∏ã„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÂïÜ‰∏öÊÄùËÄÉ/137.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BD%93%E6%88%91%E5%9C%A8%E5%88%86%E4%BA%AB%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F%E3%80%8B.md&quot;&gt;137.Á≤æËØª„ÄäÂΩìÊàëÂú®ÂàÜ‰∫´ÁöÑÊó∂ÂÄôÔºåÊàëÂú®ÂÅö‰ªÄ‰πàÔºü„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÁÆóÊ≥ï&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁÆóÊ≥ï/198.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8B.md&quot;&gt;198.Á≤æËØª„ÄäÁÆóÊ≥ï - Âä®ÊÄÅËßÑÂàí„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁÆóÊ≥ï/199.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E3%80%8B.md&quot;&gt;199.Á≤æËØª„ÄäÁÆóÊ≥ï - ÊªëÂä®Á™óÂè£„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁÆóÊ≥ï/200.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;200.Á≤æËØª„ÄäÁÆóÊ≥ï - ÂõûÊ∫Ø„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁÆóÊ≥ï/201.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%8B.md&quot;&gt;201.Á≤æËØª„ÄäÁÆóÊ≥ï - ‰∫åÂèâÊ†ë„Äã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./ÁÆóÊ≥ï/203.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%8B.md&quot;&gt;203.Á≤æËØª„ÄäÁÆóÊ≥ï - ‰∫åÂèâÊêúÁ¥¢Ê†ë„Äã&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÂÖ≥Ê≥®ÂâçÁ´ØÁ≤æËØªÂæÆ‰ø°ÂÖ¨‰ºóÂè∑&lt;/h2&gt; 
&lt;img width=&quot;200&quot; src=&quot;https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg&quot;&gt;</description>
    </item>
    
    <item>
      <title>marktext/marktext</title>
      <link>https://github.com/marktext/marktext</link>
      <description>&lt;p&gt;üìùA simple and elegant markdown editor, available for Linux, macOS and Windows.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/static/logo-small.png&quot; alt=&quot;Mark Text&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Mark Text&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://twitter.com/intent/tweet?via=marktextme&amp;amp;url=https://github.com/marktext/marktext/&amp;amp;text=What%20do%20you%20want%20to%20say%20to%20app?&amp;amp;hashtags=happyMarkText&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/url/https/github.com/marktext/marktext.svg?style=for-the-badge&quot; alt=&quot;twitter&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;&lt;span&gt;üîÜ&lt;/span&gt; Next generation markdown editor &lt;span&gt;üåô&lt;/span&gt;&lt;/strong&gt;
 &lt;br&gt; A simple and elegant open-source markdown editor that focused on speed and usability.
 &lt;br&gt; 
 &lt;sub&gt;Available for Linux, macOS and Windows.&lt;/sub&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;!-- Version --&gt; 
 &lt;a href=&quot;https://marktext.github.io/website&quot;&gt; &lt;img src=&quot;https://badge.fury.io/gh/jocs%2Fmarktext.svg?sanitize=true&quot; alt=&quot;website&quot;&gt; &lt;/a&gt; 
 &lt;!-- License --&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/marktext/marktext.svg?sanitize=true&quot; alt=&quot;LICENSE&quot;&gt; &lt;/a&gt; 
 &lt;!-- Build Status --&gt; 
 &lt;a href=&quot;https://travis-ci.org/marktext/marktext/&quot;&gt; &lt;img src=&quot;https://travis-ci.org/marktext/marktext.svg?branch=master&quot; alt=&quot;build&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://ci.appveyor.com/project/marktext/marktext/branch/master&quot;&gt; &lt;img src=&quot;https://ci.appveyor.com/api/projects/status/l4gxgydj0i95hmxg/branch/master?svg=true&quot; alt=&quot;build&quot;&gt; &lt;/a&gt; 
 &lt;!-- Downloads total --&gt; 
 &lt;a href=&quot;https://github.com/marktext/marktext/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/total.svg?sanitize=true&quot; alt=&quot;total download&quot;&gt; &lt;/a&gt; 
 &lt;!-- Downloads latest release --&gt; 
 &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/v0.16.3/total.svg?sanitize=true&quot; alt=&quot;latest download&quot;&gt; &lt;/a&gt; 
 &lt;!-- sponsors --&gt; 
 &lt;a href=&quot;https://opencollective.com/marktext&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors/badge.svg?label=SilverSponsors&amp;amp;color=brightgreen&quot; alt=&quot;sponsors&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://marktext.app&quot;&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#features&quot;&gt; Features &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#download-and-installation&quot;&gt; Downloads &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#development&quot;&gt; Development &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#contribution&quot;&gt; Contribution &lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;sub&gt;Translations:&lt;/sub&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/zh_cn.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üá®üá≥&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/zh_tw.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üáπüáº&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/pl.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üáµüá±&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/ja.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üáØüáµ&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/french.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üá´üá∑&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/tr.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üáπüá∑&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/spanish.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üá™üá∏&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/pt.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üáµüáπ&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/ko.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;üá∞üá∑&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;sub&gt;This Markdown editor that could. Built with ‚ù§Ô∏é by &lt;a href=&quot;https://github.com/Jocs&quot;&gt;Jocs&lt;/a&gt; and &lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt; contributors &lt;/a&gt; &lt;/sub&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2 align=&quot;center&quot;&gt;Supporting Mark Text&lt;/h2&gt; 
&lt;p&gt;Mark Text is an MIT licensed open source project, and the latest version will always be downloadable for free from the GitHub release page. Mark Text is still in development, and its development is inseparable from all sponsors. I hope you join them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/ranluo&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt; or &lt;a href=&quot;https://github.com/Jocs/sponsor.me&quot;&gt;One time donation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/marktext&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;What&#39;s the difference between Patreon and Open Collective?&lt;/h5&gt; 
&lt;p&gt;Patreon: Funds will be directly sponsored to Luo Ran (@jocs) who created Mark Text and continues to maintain it. Open Collective: All expenses are transparent. The funds will be used for the development and maintenance of Mark Text, funding online and offline activities, and acquiring other necessary resources. Names and company logos of all sponsors (from both Patreon and Open Collective) will appear on the official website for Mark Text and in its README.md file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Special Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://www.dogedoge.com/&quot;&gt; &lt;img src=&quot;https://www.dogedoge.com/assets/new_logo.min.png&quot; width=&quot;100&quot; height=&quot;100&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Platinum Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/platinum-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Gold Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/gold-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Silver Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Bronze Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/bronze-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Backers&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#backers&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/backer.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/marktext.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Realtime preview (WYSIWYG) and a clean and simple interface to get a distraction-free writing experience.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://spec.commonmark.org/0.29/&quot;&gt;CommonMark Spec&lt;/a&gt;, &lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub Flavored Markdown Spec&lt;/a&gt; and selective support &lt;a href=&quot;https://pandoc.org/MANUAL.html#pandocs-markdown&quot;&gt;Pandoc markdown&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Markdown extensions such as math expressions (KaTeX), front matter and emojis.&lt;/li&gt; 
 &lt;li&gt;Support paragraphs and inline style shortcuts to improve your writing efficiency.&lt;/li&gt; 
 &lt;li&gt;Output &lt;strong&gt;HTML&lt;/strong&gt; and &lt;strong&gt;PDF&lt;/strong&gt; files.&lt;/li&gt; 
 &lt;li&gt;Various themes: &lt;strong&gt;Cadmium Light&lt;/strong&gt;, &lt;strong&gt;Material Dark&lt;/strong&gt; etc.&lt;/li&gt; 
 &lt;li&gt;Various editing modes: &lt;strong&gt;Source Code mode&lt;/strong&gt;, &lt;strong&gt;Typewriter mode&lt;/strong&gt;, &lt;strong&gt;Focus mode&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Paste images directly from clipboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 align=&quot;center&quot;&gt;&lt;span&gt;üåô&lt;/span&gt;themes&lt;span&gt;üîÜ&lt;/span&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Cadmium Light&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Dark&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/cadmium-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Graphite Light&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Material Dark&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/graphite-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/materal-dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Ulysses Light&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;One Dark&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/ulysses-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/one-dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4 align=&quot;center&quot;&gt;&lt;span&gt;üò∏&lt;/span&gt;Edit modes&lt;span&gt;üê∂&lt;/span&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Source Code&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Typewriter&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Focus&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/source.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/typewriter.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/focus.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Why write another editor?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I love writing. I have used a lot of markdown editors, yet there is still not an editor that can fully meet my needs. I don&#39;t like to be disturbed when I write by some unbearable bug. &lt;strong&gt;Mark Text&lt;/strong&gt; uses virtual DOM to render pages which has the added benefits of being highly efficient and being open source. That way anyone who loves markdown and writing can use Mark Text.&lt;/li&gt; 
 &lt;li&gt;As mentioned above, &lt;strong&gt;Mark Text&lt;/strong&gt; is completely free and open source and will be open source forever. We hope that all markdown lovers will contribute their own code and help develop &lt;strong&gt;Mark Text&lt;/strong&gt; into a popular markdown editor.&lt;/li&gt; 
 &lt;li&gt;There are many markdown editors and all have their own merits, some have features which others don&#39;t. It&#39;s difficult to satisfy each markdown users&#39; needs but we hope &lt;strong&gt;Mark Text&lt;/strong&gt; will be able to satisfy each markdown user as much as possible. Although the latest &lt;strong&gt;Mark Text&lt;/strong&gt; is still not perfect, we will try to make it as best as we possibly can.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download and Installation&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Platform&amp;amp;message=Linux-64%20%7C%20macOS-64%20%7C%20Win-32%20%7C%20Win-64&amp;amp;style=for-the-badge&quot; alt=&quot;platform&quot;&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/mac-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/windows-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/linux-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext.dmg&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext.dmg.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext-setup.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-setup.exe.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext-x86_64.AppImage&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-x86_64.AppImage.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Want to see new features of the latest version? Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/.github/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;p&gt;You can either download the latest &lt;code&gt;marktext-%version%.dmg&lt;/code&gt; from the &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt;release page&lt;/a&gt; or install Mark Text using &lt;a href=&quot;https://github.com/caskroom/homebrew-cask&quot;&gt;&lt;strong&gt;homebrew cask&lt;/strong&gt;&lt;/a&gt;. To use Homebrew-Cask you just need to have &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install --cask mark-text
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;p&gt;Simply download and install Mark Text via setup wizard (&lt;code&gt;marktext-setup-%version%.exe&lt;/code&gt;) and choose whether to install per-user or machine wide.&lt;/p&gt; 
&lt;p&gt;Alternatively, install Mark Text using &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;. To use Chocolatey you need to have &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;choco install marktext
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Linux&lt;/h4&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/LINUX.md&quot;&gt;Linux installation instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;p&gt;All binaries for Linux, macOS and Windows can be downloaded from the &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt;release page&lt;/a&gt;. If a version is unavailable for your system, then please open an &lt;a href=&quot;https://github.com/marktext/marktext/issues&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;If you wish to build &lt;strong&gt;Mark Text&lt;/strong&gt; yourself, please check out our &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/dev/BUILD.md&quot;&gt;build instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/README.md&quot;&gt;User documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/dev/README.md&quot;&gt;Developer documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions regarding &lt;strong&gt;Mark Text&lt;/strong&gt;, you are welcome to write an issue. When doing so please use the default format found when opening an issue. Of course, if you submit a PR directly, it will be greatly appreciated.&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.packal.org/workflow/mark-text&quot;&gt;Alfred Workflow&lt;/a&gt;: A Workflow for the macOS app Alfred: Use &quot;mt&quot; to open files/folder with Mark Text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Mark Text is in full development, please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. Want to add some features to Mark Text? Refer to our &lt;a href=&quot;https://github.com/marktext/marktext/projects&quot;&gt;roadmap&lt;/a&gt; and open issues.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to all the people who have already contributed to Mark Text[&lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;contributors&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Special thanks to @&lt;a href=&quot;https://github.com/Yasujizr&quot;&gt;Yasujizr&lt;/a&gt; who designed the Mark Text logo.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/marktext/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/LICENSE&quot;&gt;&lt;strong&gt;MIT&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;img src=&quot;https://assets.vercel.com/image/upload/v1607554385/repositories/next-js/next-logo.png&quot; height=&quot;128&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a aria-label=&quot;Vercel logo&quot; href=&quot;https://vercel.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;NPM version&quot; href=&quot;https://www.npmjs.com/package/next&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/vercel/next.js/raw/canary/license.md&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label=&quot;next.js learn&quot; href=&quot;https://nextjs.org/learn&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nextjs.org/learn&quot;&gt;https://nextjs.org/learn&lt;/a&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/vercel/next.js/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ethereum/remix-project</title>
      <link>https://github.com/ethereum/remix-project</link>
      <description>&lt;p&gt;Remix is a browser-based compiler and IDE that enables users to build Ethereum contracts with Solidity language and to debug transactions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/ethereum/remix-project&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/ethereum/remix-project.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://remix-ide.readthedocs.io/en/latest/index.html&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/docs/badge/?version=latest&quot; alt=&quot;Documentation Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ethereum/remix-project/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot; alt=&quot;contributions welcome&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/ethereum/remix-project&quot; alt=&quot;GitHub contributors&quot;&gt; &lt;a href=&quot;https://github.com/ethereum/awesome-remix&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Awesome--Remix-resources-green&quot; alt=&quot;Awesome Remix&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/ethereum/remix-project&quot; alt=&quot;GitHub&quot;&gt; &lt;a href=&quot;https://gitter.im/ethereum/remix?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/ethereum/remix.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/ethereum/remix&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ethereumremix&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ethereumremix?style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Remix Project&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Remix Project&lt;/strong&gt; is a platform for development tools that use a plugin architecture. It encompasses sub-projects including Remix Plugin Engine, Remix Libraries, and of course Remix IDE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Remix IDE&lt;/strong&gt; is an open source web and desktop application. It fosters a fast development cycle and has a rich set of plugins with intuitive GUIs. Remix is used for the &lt;strong&gt;entire journey of contract development with &lt;a href=&quot;https://soliditylang.org/&quot;&gt;Solidity language&lt;/a&gt;&lt;/strong&gt; as well as a playground for learning and teaching &lt;a href=&quot;https://ethereum.org/&quot;&gt;Ethereum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Start developing using Remix on browser, visit: &lt;a href=&quot;https://remix.ethereum.org&quot;&gt;https://remix.ethereum.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For desktop version, see releases: &lt;a href=&quot;https://github.com/ethereum/remix-desktop/releases&quot;&gt;https://github.com/ethereum/remix-desktop/releases&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/ethereum/remix-project/raw/master/apps/remix-ide/remix_screenshot.png&quot; alt=&quot;Remix screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;üëâ&lt;/span&gt; &lt;strong&gt;Remix libraries&lt;/strong&gt; work as a core of native plugins of Remix IDE. Read more about libraries &lt;a href=&quot;https://raw.githubusercontent.com/ethereum/remix-project/master/libs/README.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Offline Usage&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;gh-pages&lt;/code&gt; branch of &lt;a href=&quot;https://github.com/ethereum/remix-live&quot;&gt;remix-live&lt;/a&gt; always has the latest stable build of Remix. It contains a ZIP file with the entire build. Download it to use offline.&lt;/p&gt; 
&lt;p&gt;Note: It contains the latest supported version of Solidity available at the time of the packaging. Other compiler versions can be used online only.&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;strong&gt;NPM&lt;/strong&gt; and &lt;strong&gt;Node.js&lt;/strong&gt;. See &lt;a href=&quot;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&quot;&gt;Guide&lt;/a&gt; &lt;br&gt; &lt;em&gt;Supported versions:&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;engines&quot;: {
    &quot;node&quot;: &quot;^14.17.6&quot;,
    &quot;npm&quot;: &quot;^6.14.15&quot;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nx.dev/react/cli/overview&quot;&gt;Nx CLI&lt;/a&gt; globally to enable running &lt;strong&gt;nx executable commands&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g @nrwl/cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the github repository (&lt;code&gt;wget&lt;/code&gt; need to be installed first):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/ethereum/remix-project.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build &lt;code&gt;remix-project&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd remix-project
npm install
nx build
nx serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; in your browser to load Remix IDE locally.&lt;/p&gt; 
&lt;p&gt;Go to your &lt;code&gt;text editor&lt;/code&gt; and start developing. Browser will automatically refresh when files are saved.&lt;/p&gt; 
&lt;h2&gt;Production Build&lt;/h2&gt; 
&lt;p&gt;To generate react production builds for remix-project.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build:production
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build can be found in &lt;code&gt;remix-project/dist/apps/remix-ide&lt;/code&gt; directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run serve:production
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Production build will be served by default to &lt;code&gt;http://localhost:8080/&lt;/code&gt; or &lt;code&gt;http://127.0.0.1:8080/&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Docker:&lt;/h2&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker (&lt;a href=&quot;https://docs.docker.com/desktop/&quot;&gt;https://docs.docker.com/desktop/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Docker Compose (&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with docker&lt;/h3&gt; 
&lt;p&gt;If you want to run latest changes that are merged into master branch then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull remixproject/remix-ide:latest
docker run -p 8080:80 remixproject/remix-ide:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to run latest remix-live release run.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull remixproject/remix-ide:remix_live
docker run -p 8080:80 remixproject/remix-ide:remix_live
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with docker-compose:&lt;/h3&gt; 
&lt;p&gt;To run locally without building you only need docker-compose.yaml file and you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker-compose pull
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then go to &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; and you can use you Remix instance.&lt;/p&gt; 
&lt;p&gt;To fetch docker-compose file without cloning this repo run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/ethereum/remix-project/master/docker-compose.yaml &amp;gt; docker-compose.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you have trouble building the project, make sure that you have the correct version of &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;nvm&lt;/code&gt;. Also ensure &lt;a href=&quot;https://nx.dev/react/cli/overview&quot;&gt;Nx CLI&lt;/a&gt; is installed globally.&lt;/p&gt; 
&lt;p&gt;Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node --version
npm --version
nvm --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Debian based OS such as Ubuntu 14.04LTS you may need to run &lt;code&gt;apt-get install build-essential&lt;/code&gt;. After installing &lt;code&gt;build-essential&lt;/code&gt;, run &lt;code&gt;npm rebuild&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Unit Testing&lt;/h2&gt; 
&lt;p&gt;Run the unit tests using library name like: &lt;code&gt;nx test &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For example, to run unit tests of &lt;code&gt;remix-analyzer&lt;/code&gt;, use &lt;code&gt;nx test remix-analyzer&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Browser Testing&lt;/h2&gt; 
&lt;p&gt;To run the Selenium tests via Nightwatch:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install Selenium for first time: &lt;code&gt;npm run selenium-install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run a selenium server: &lt;code&gt;npm run selenium&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build &amp;amp; Serve Remix: &lt;code&gt;nx serve&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run all the end-to-end tests:&lt;/p&gt; &lt;p&gt;for Firefox: &lt;code&gt;npm run nightwatch_local_firefox&lt;/code&gt;, or&lt;/p&gt; &lt;p&gt;for Google Chrome: &lt;code&gt;npm run nightwatch_local_chrome&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run a specific test case instead, use one of following commands:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; - npm run nightwatch_local_ballot

 - npm run nightwatch_local_usingWorker
 
 - npm run nightwatch_local_libraryDeployment
 
 - npm run nightwatch_local_solidityImport
 
 - npm run nightwatch_local_recorder
 
 - npm run nightwatch_local_transactionExecution
 
 - npm run nightwatch_local_staticAnalysis
 
 - npm run nightwatch_local_signingMessage

 - npm run nightwatch_local_specialFunctions

 - npm run nightwatch_local_solidityUnitTests

 - npm run nightwatch_local_remixd # remixd needs to be run

 - npm run nightwatch_local_terminal

 - npm run nightwatch_local_gist

 - npm run nightwatch_local_workspace

 - npm run nightwatch_local_defaultLayout

 - npm run nightwatch_local_pluginManager

 - npm run nightwatch_local_publishContract

 - npm run nightwatch_local_generalSettings

 - npm run nightwatch_local_fileExplorer

 - npm run nightwatch_local_debugger

 - npm run nightwatch_local_editor

 - npm run nightwatch_local_compiler

 - npm run nightwatch_local_txListener

 - npm run nightwatch_local_fileManager

 - npm run nightwatch_local_runAndDeploy
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;ballot&lt;/code&gt; tests suite&lt;/strong&gt; requires to run &lt;code&gt;ganache-cli&lt;/code&gt; locally.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;remixd&lt;/code&gt; tests suite&lt;/strong&gt; requires to run &lt;code&gt;remixd&lt;/code&gt; locally.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;gist&lt;/code&gt; tests suite&lt;/strong&gt; requires specifying a github access token in &lt;strong&gt;.env file&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;    gist_token = &amp;lt;token&amp;gt; // token should have permission to create a gist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Important Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Official documentation: &lt;a href=&quot;https://remix-ide.readthedocs.io/en/latest/&quot;&gt;https://remix-ide.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Curated list of Remix resources, tutorials etc.: &lt;a href=&quot;https://github.com/ethereum/awesome-remix&quot;&gt;https://github.com/ethereum/awesome-remix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Medium: &lt;a href=&quot;https://medium.com/remix-ide&quot;&gt;https://medium.com/remix-ide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ethereumremix&quot;&gt;https://twitter.com/ethereumremix&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>electerm/electerm</title>
      <link>https://github.com/electerm/electerm</link>
      <description>&lt;p&gt;üìªTerminal/ssh/sftp client(linux, mac, win)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://electerm.github.io/electerm&quot;&gt; &lt;img src=&quot;https://github.com/electerm/electerm-resource/raw/master/static/images/electerm.png&quot; , alt=&quot;&quot;&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;h1&gt;electerm&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/electerm/electerm/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/electerm/electerm/all.svg?sanitize=true&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/electerm/electerm/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fatrox%2Fsync-dotenv%2Fbadge&quot; alt=&quot;GitHub Actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/electerm/electerm/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/electerm/electerm.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://standardjs.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-standard-brightgreen.svg?sanitize=true&quot; alt=&quot;JavaScript Style Guide&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snapcraft.io/electerm&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Snap-Store-green&quot; alt=&quot;Get it from the Snap Store&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Terminal/ssh/sftp client(linux, mac, win) based on electron/ssh2/node-pty/xterm/antd/&lt;a href=&quot;https://github.com/tylerlong/subx&quot;&gt;subx&lt;/a&gt; and other libs.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://github.com/electerm/electerm-resource/raw/master/static/images/electerm.gif&quot; , alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Work as a terminal/file manager or ssh/sftp client(similar to xshell)&lt;/li&gt; 
 &lt;li&gt;Global hotkey to toggle window visibility (simliar to guake, default is &lt;code&gt;ctrl + 2&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Multi platform(linux, mac, win)&lt;/li&gt; 
 &lt;li&gt;üá∫üá∏ üá®üá≥ üáßüá∑ üá∑üá∫ üá™üá∏ üá´üá∑ üáπüá∑ üá≠üá∞ üáØüáµ üá∏üá¶ Support multi-language(&lt;a href=&quot;https://github.com/electerm/electerm-locales&quot;&gt;electerm-locales&lt;/a&gt;, contribute/fix welcome)&lt;/li&gt; 
 &lt;li&gt;Double click to directly edit remote file(small ones).&lt;/li&gt; 
 &lt;li&gt;Edit local file with built-in editor(small ones).&lt;/li&gt; 
 &lt;li&gt;Auth with publickey + password.&lt;/li&gt; 
 &lt;li&gt;Zmodem(rz, sz).&lt;/li&gt; 
 &lt;li&gt;Transparent window(Mac, win).&lt;/li&gt; 
 &lt;li&gt;Terminal background image.&lt;/li&gt; 
 &lt;li&gt;Global/session proxy.&lt;/li&gt; 
 &lt;li&gt;Quick commands&lt;/li&gt; 
 &lt;li&gt;Sync bookmarks/themes/quick commands to github/gitee secret gist&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;Serial Port support&lt;/del&gt;(removed after version 1.10.14)&lt;/li&gt; 
 &lt;li&gt;Quick input to one or all terminal&lt;/li&gt; 
 &lt;li&gt;Command line usage: check &lt;a href=&quot;https://github.com/electerm/electerm/wiki/Command-line-usage&quot;&gt;wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Zip and transfer folder and auto unzip&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download/install&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://electerm.github.io/electerm&quot;&gt;https://electerm.github.io/electerm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;From release: &lt;a href=&quot;https://github.com/electerm/electerm/releases&quot;&gt;https://github.com/electerm/electerm/releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For Mac user: &lt;code&gt;brew install --cask electerm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;With snap: &lt;code&gt;sudo snap install electerm --classic&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For some Linux distribution, you can find it from OS default App store(Ubuntu, Deepin, Mint...).&lt;/li&gt; 
 &lt;li&gt;For some linux OS, the &lt;code&gt;rpm&lt;/code&gt;, &lt;code&gt;deb&lt;/code&gt;, or &lt;code&gt;snap&lt;/code&gt; release may not work, you can try the &lt;code&gt;tar.gz&lt;/code&gt; release.&lt;/li&gt; 
 &lt;li&gt;For Windows users, you can install it from &lt;a href=&quot;https://www.microsoft.com/store/apps/9NCN7272GTFF&quot;&gt;windows store&lt;/a&gt;, command-line installer &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;winget&lt;/a&gt; and &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt; is also recommended:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# winget https://github.com/microsoft/winget-cli
winget install electerm

# scoop https://github.com/lukesampson/scoop
scoop bucket add dorado https://github.com/chawyehsu/dorado
scoop install dorado/electerm
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install from npm&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g electerm

# after install it will open at once for windows and linux,
# for mac, will open the drag to install panel

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrade&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Auto upgrade: When new version released, you will get upgrade notification after you start electerm again, then you click the upgrade button to upgrade.&lt;/li&gt; 
 &lt;li&gt;Download: Just download the latest edition, reinstall.&lt;/li&gt; 
 &lt;li&gt;Npm: If you install from npm, just run &lt;code&gt;npm i -g electerm&lt;/code&gt; again.&lt;/li&gt; 
 &lt;li&gt;If use Snap or some other distribution systems, these systems may provide upgrade.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known issues&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/electerm/electerm/wiki/Know-issues&quot;&gt;https://github.com/electerm/electerm/wiki/Know-issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Troubleshoot&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/electerm/electerm/wiki/Troubleshoot&quot;&gt;https://github.com/electerm/electerm/wiki/Troubleshoot&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Without users&#39;s feedbacks/suggestions/pull requests/language files, this project would not get this far, would love to hear from you, please tell me what you think, &lt;a href=&quot;https://github.com/electerm/electerm/issues&quot;&gt;submit an issue&lt;/a&gt;, &lt;a href=&quot;mailto:zxdong@gmail.com&quot;&gt;send me an email&lt;/a&gt;, &lt;a href=&quot;https://github.com/electerm/electerm-locales&quot;&gt;create/fix language files&lt;/a&gt; or create pull requests, all welcome.&lt;/p&gt; 
&lt;h2&gt;Dev&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# tested in ubuntu16.04+/mac os 10.13+ only
# need nodejs/npm, suggest using nvm to install nodejs/npm
# https://github.com/creationix/nvm
# with node 8.6+

git clone git@github.com:electerm/electerm.git
cd electerm
npm i

# start webpack dev server, requires 5570 port
npm start

# in a separate terminal session run app
npm run app

# code format check
npm run lint

# code format fix
npm run fix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Test&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run pre-test
cp .sample.env .env
# then edit .env, fill your test host/username/password
npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Test build&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Tested only in ubuntu 16.04 x64+
# Install yarn first(to do yarn autoclean)
# See https://yarnpkg.com/en/docs/install

# Build linux only with -l
npm i
npm run pre-test
npm run release -l
# visit dist/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/electerm/electerm/wiki/autorun-electerm-when-login-to-os&quot;&gt;Set autorun when login to os&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://github.com/electerm/electerm/releases&quot;&gt;Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chartjs/Chart.js</title>
      <link>https://github.com/chartjs/Chart.js</link>
      <description>&lt;p&gt;Simple HTML5 Charts using the &lt;canvas&gt; tag&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.chartjs.org/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://www.chartjs.org/media/logo-title.svg?sanitize=true&quot; alt=&quot;https://www.chartjs.org/&quot;&gt;&lt;br&gt; &lt;/a&gt; Simple yet flexible JavaScript charting for designers &amp;amp; developers &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/installation.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chartjs/Chart.js/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/workflow/status/chartjs/Chart.js/CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/chartjs/Chart.js?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chartjs-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-chartjs-blue.svg?style=flat-square&amp;amp;maxAge=3600&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the links point to the new version 3 of the lib.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/index&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/general/data-structures&quot;&gt;General&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/configuration/index&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/charts/line&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/axes/index&quot;&gt;Axes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/developers/index&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;Popular Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/samples/&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In case you are looking for the docs of version 2, you will have to specify the specific version in the url like this: &lt;a href=&quot;https://www.chartjs.org/docs/2.9.4/&quot;&gt;https://www.chartjs.org/docs/2.9.4/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Instructions on building and testing Chart.js can be found in &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing&quot;&gt;the documentation&lt;/a&gt;. Before submitting an issue or a pull request, please take a moment to look over the &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing&quot;&gt;contributing guidelines&lt;/a&gt; first. For support, please post questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/chartjs&quot;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;chartjs&lt;/code&gt; tag.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Chart.js is available under the &lt;a href=&quot;https://raw.githubusercontent.com/chartjs/Chart.js/master/LICENSE.md&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OlympusDAO/olympus-frontend</title>
      <link>https://github.com/OlympusDAO/olympus-frontend</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://app.olympusdao.finance/&quot;&gt;Œ© Olympus Frontend&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;This is the front-end repo for Olympus that allows users be part of the future of Greece.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;_ Note We&#39;re currently in the process of switching to TypeScript. Please read this guide on how to use TypeScript for this repository. &lt;a href=&quot;https://github.com/OlympusDAO/olympus-frontend/wiki/TypeScript-Refactor-General-Guidelines&quot;&gt;https://github.com/OlympusDAO/olympus-frontend/wiki/TypeScript-Refactor-General-Guidelines&lt;/a&gt; _&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;üîß Setting up Local Development&lt;/h2&gt; 
&lt;p&gt;Required:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/download/release/latest-v14.x/&quot;&gt;Node v14&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/OlympusDAO/olympusdao.git
$ cd olympusdao

# set up your environment variables
# read the comments in the .env files for what is required/optional
$ cp .env.example .env

# fill in your own values in .env, then =&amp;gt;
$ yarn
$ yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The site is now running at &lt;code&gt;http://localhost:3000&lt;/code&gt;! Open the source code and start editing!&lt;/p&gt; 
&lt;h2&gt;Rinkeby Testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Rinkeby faucet for sOHM:&lt;/strong&gt; &lt;a href=&quot;https://rinkeby.etherscan.io/address/0x800B3d87b77361F0D1d903246cA1F51b5acb43c9#writeContract&quot;&gt;Lives here&lt;/a&gt;, to retrieve test sOHM click &lt;code&gt;Connect to Web3&lt;/code&gt; and use function #3: &lt;code&gt;dripSOHM&lt;/code&gt;. After connecting to web3, click &lt;code&gt;Write&lt;/code&gt; to execute and 10 sOHM will automatically be transferred to your connected wallet.&lt;/p&gt; 
&lt;p&gt;Note: The faucet is limited to one transfer per wallet every 6500 blocks (~1 day)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rinkeby faucet for WETH:&lt;/strong&gt; &lt;a href=&quot;https://app.uniswap.org/#/swap&quot;&gt;Wrap rinkeby eth on rinkeby uniswap&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rinkeby faucets for LUSD, FRAX &amp;amp; DAI can be taken from rinkeby etherscan:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to &lt;code&gt;src/helpers/AllBonds.ts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;then copy the rinkeby &lt;code&gt;reserveAddress&lt;/code&gt; for the applicable bond &amp;amp; navigate to that contract on rinkeby etherscan.&lt;/li&gt; 
 &lt;li&gt;On Rinkeby etherscan use the &lt;code&gt;mint&lt;/code&gt; function. You can use the number helper for 10^18 &amp;amp; then add four more zeros for 10,000 units of whichever reserve you are minting.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Architecture/Layout&lt;/h2&gt; 
&lt;p&gt;The app is written in &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; using &lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt; as the state container.&lt;/p&gt; 
&lt;p&gt;The files/folder structure are a &lt;strong&gt;WIP&lt;/strong&gt; and may contain some unused files. The project is rapidly evolving so please update this section if you see it is inaccurate!&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./src/
‚îú‚îÄ‚îÄ App.jsx       // Main app page
‚îú‚îÄ‚îÄ abi/          // Contract ABIs from etherscan.io
‚îú‚îÄ‚îÄ actions/      // Redux actions 
‚îú‚îÄ‚îÄ assets/       // Static assets (SVGs)
‚îú‚îÄ‚îÄ components/   // Reusable individual components
‚îú‚îÄ‚îÄ constants.js/ // Mainnet Addresses &amp;amp; common ABI
‚îú‚îÄ‚îÄ contracts/    // TODO: The contracts be here as submodules
‚îú‚îÄ‚îÄ helpers/      // Helper methods to use in the app
‚îú‚îÄ‚îÄ hooks/        // Shared reactHooks
‚îú‚îÄ‚îÄ themes/       // Style sheets for dark vs light theme
‚îî‚îÄ‚îÄ views/        // Individual Views
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Application translation&lt;/h2&gt; 
&lt;p&gt;Olympus uses &lt;a href=&quot;https://github.com/lingui/js-lingui&quot;&gt;linguijs&lt;/a&gt; to manage translation.&lt;/p&gt; 
&lt;p&gt;The language files are located in a submodule deployed in &lt;code&gt;src/locales/translations&lt;/code&gt;. This submodule points to the &lt;a href=&quot;https://github.com/OlympusDAO/olympus-translations&quot;&gt;olympus translation repository&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;In order to mark text for translation you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The 
  &lt;trans&gt;
    component in jsx templates eg. 
   &lt;code&gt;&amp;lt;Trans&amp;gt;Translate me!&amp;lt;/Trans&amp;gt;&lt;/code&gt;
  &lt;/trans&gt;&lt;/li&gt; 
 &lt;li&gt;The t function in javascript code and jsx templates. &lt;code&gt;t`Translate me`&lt;/code&gt; You can also add comments for the translators. eg.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;t({
	id: &quot;do_bond&quot;,
	comment: &quot;The action of bonding (verb)&quot;,
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When new texts are created or existing texts are modified in the application please leave a message in the OlympusDao app-translation channel for the translators to translate them.&lt;/p&gt; 
&lt;h2&gt;üöÄ Deployment&lt;/h2&gt; 
&lt;p&gt;Auto deployed on &lt;a href=&quot;http://fleek.co/&quot;&gt;Fleek.co&lt;/a&gt; fronted by &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudflare&lt;/a&gt;. Since it is hosted via IPFS there is no running &quot;server&quot; component and we don&#39;t have server sided business logic. Users are served an &lt;code&gt;index.html&lt;/code&gt; and javascript to run our applications.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;TODO&lt;/strong&gt;: TheGraph implementation/how/why we use it.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Continuous deployment&lt;/h3&gt; 
&lt;p&gt;Commits to the follow branches are automatically deployed to their respective URLs.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Branch&lt;/th&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;master&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.olympusdao.finance&quot;&gt;https://app.olympusdao.finance&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;deploy&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://staging.olympusdao.finance&quot;&gt;https://staging.olympusdao.finance&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: Each PR into master will get its own custom URL that is visible on the PR page. QA &amp;amp; validate changes on that URL before merging into the deploy branch.&lt;/p&gt; 
&lt;h2&gt;üëèüèΩ Contributing Guidelines&lt;/h2&gt; 
&lt;p&gt;We keep an updated list of bugs/feature requests in &lt;a href=&quot;https://github.com/OlympusDAO/olympusdao/issues&quot;&gt;Github Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/issues/olympusdao/olympusdao?style=flat-square&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Filter by &lt;a href=&quot;https://github.com/OlympusDAO/olympusdao/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&quot;&gt;&quot;good first issue&quot;&lt;/a&gt; to get your feet wet! Once you submit a PR, our CI will generate a temporary testing URL where you can validate your changes. Tag any of the gatekeepers on the review to merge them into master.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/em&gt;: For big changes associated with feature releases/milestones, they will be merged onto the &lt;code&gt;develop&lt;/code&gt; branch for more thorough QA before a final merge to &lt;code&gt;master&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Defenders of the code&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;Only the following people have merge access for the master branch.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dwjanus&quot;&gt;@Girth Brooks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unbanksy&quot;&gt;@Unbanksy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lolchocotaco&quot;&gt;@ZayenX&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üó£ Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/gGZUMVDuhQ&quot;&gt;Join our Discord&lt;/a&gt; and ask how you can get involved with the DAO!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/flybywiresim/fbw-branding/master/svg/FBW-Logo.svg?sanitize=true&quot; placeholder=&quot;FlyByWire&quot; width=&quot;400&quot;&gt; 
&lt;h1&gt;FlyByWire Simulations A32NX&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=twitter&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/c/FlyByWire-Simulations&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=youtube&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;YouTube&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=facebook&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Facebook&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://instagram.com/flybywiresim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=instagram&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Instagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;h3&gt;A320neo&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Model       A320-251N
Engine      CFM LEAP 1A-26
APU         APS3200
FMGS        Honeywell Release H3
FWC Std.    H2F9C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h2&gt;How to download and use the aircraft&lt;/h2&gt; 
&lt;p&gt;To download the aircraft please go to the &lt;a href=&quot;https://flybywiresim.com&quot;&gt;FlyByWire Simulations website&lt;/a&gt;. Please be sure to thoroughly read the &lt;a href=&quot;https://docs.flybywiresim.com&quot;&gt;documentation&lt;/a&gt; on how to install and use the aircraft.&lt;/p&gt; 
&lt;p&gt;If you&#39;re still running into problems after reading through the documentation, feel free to jump into our Discord &lt;a href=&quot;https://discord.gg/snueqJjDUN&quot;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you would like to contribute to the project, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Known issues and bug reporting&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://docs.flybywiresim.com/start/reported-issues&quot;&gt;known issues&lt;/a&gt; list contains the most commonly reported issues. Should you have an issue not found on this list, then please take a look at the reported issues within the &lt;a href=&quot;https://github.com/flybywiresim/a32nx/issues&quot;&gt;issue tracker&lt;/a&gt; and report a new issue if your issue isn&#39;t found there. You can also use the issue tracker to request a new feature.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What liveries are available?&lt;/h3&gt; 
&lt;p&gt;Liveries for the A32NX can be found on &lt;a href=&quot;https://flightsim.to/c/liveries/flybywire-a32nx/&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;When is the next update?&lt;/h3&gt; 
&lt;p&gt;We don&#39;t know, since it depends on many factors. We will announce each new stable version via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord&lt;/a&gt; and our social media channels listed above.&lt;/p&gt; 
&lt;h3&gt;How do I join the team?&lt;/h3&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;h3&gt;Is the A32NX payware?&lt;/h3&gt; 
&lt;p&gt;No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;h3&gt;How do we report bugs?&lt;/h3&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#known-issues-and-bug-reporting&quot;&gt;known Issues and bug reporting&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Is this going to be &quot;study-level&quot;?&lt;/h3&gt; 
&lt;p&gt;While many in the team dislike the term &quot;study-level&quot; as its use is mostly applicable to certified training devices, we are in fact very dedicated on bringing a high fidelity A320neo to the Microsoft Flight Simulator platform.&lt;/p&gt; 
&lt;h3&gt;Is feature X from the A320neo going to be implemented?&lt;/h3&gt; 
&lt;p&gt;Chances are, yes! While we do not guarantee every single detail of the aircraft will eventually be represented, our goal is to produce an extremely accurate simulation based on technical data and real-world testing. This means you can be almost certain every feature of the aircraft will eventually be simulated to the best of the simulator&#39;s ability as long as the technical data backs it up.&lt;/p&gt; 
&lt;h3&gt;Why has feature X not been implemented yet?&lt;/h3&gt; 
&lt;p&gt;It&#39;s very likely that the feature you are awaiting is already under development! However, we strive for the greatest accuracy possible when producing aircraft, and it is therefore likely that a great deal of time will be spent on developing a proper software design and gathering sufficient references before we are able to offer the feature.&lt;/p&gt; 
&lt;h3&gt;Why is my version not the same as what I see others using?&lt;/h3&gt; 
&lt;p&gt;We have two mainline versions: stable and development. The stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time.&lt;/p&gt; 
&lt;p&gt;You can read more about the differences between the versions we offer &lt;a href=&quot;https://docs.flybywiresim.com/fbw-a32nx/fbw-versions/&quot;&gt;on our documentation portal&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Is there a list of features or a changelog available?&lt;/h3&gt; 
&lt;p&gt;We do not keep a list of features implemented, but a lengthy &lt;a href=&quot;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt; of what has been implemented, and their associated &lt;a href=&quot;https://github.com/flybywiresim/a32nx/pulls&quot;&gt;pull requests&lt;/a&gt; can be &lt;a href=&quot;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Original source code assets present in this repository are licensed under the GNU GPLv3. Original 3D assets are licensed under CC BY-NC 4.0.&lt;/p&gt; 
&lt;p&gt;Microsoft Flight Simulator ¬© Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft&#39;s &quot;Game Content Usage Rules&quot; using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/p&gt; 
&lt;p&gt;The contents of distribution packages built from the sources in this repository are therefore licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;in the case of original source code from FBW or compiled artifacts generated from it, under GPLv3.&lt;/li&gt; 
 &lt;li&gt;in the case of original 3D assets from FBW, under CC BY-NC 4.0.&lt;/li&gt; 
 &lt;li&gt;in the case of assets covered by the &quot;Game Content Usage Rules&quot;, under the license granted by those rules.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>parallax/jsPDF</title>
      <link>https://github.com/parallax/jsPDF</link>
      <description>&lt;p&gt;Client-side JavaScript PDF generation for everyone.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://parall.ax/parallax-2016/img/svg/jspdf-logo.svg?sanitize=true&quot; alt=&quot;jsPDF&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Continous Integration&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/feed&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg?sanitize=true&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/MrRio/jsPDF.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/alerts/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Total alerts&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library to generate PDFs in JavaScript.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;catch me on twitter&lt;/a&gt;: &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;@MrRio&lt;/a&gt; or head over to &lt;a href=&quot;http://parall.ax&quot;&gt;my company&#39;s website&lt;/a&gt; for consultancy.&lt;/p&gt; 
&lt;p&gt;jsPDF is now co-maintained by &lt;a href=&quot;https://www.yworks.com/&quot;&gt;yWorks - the diagramming experts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/&quot;&gt;Live Demo&lt;/a&gt; | &lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Recommended: get jsPDF from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install jspdf --save
# or
yarn add jspdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, load it from a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or always get latest version via &lt;a href=&quot;https://unpkg.com/browse/jspdf/&quot;&gt;unpkg&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;dist&lt;/code&gt; folder of this package contains different kinds of files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.es.*.js&lt;/strong&gt;: Modern ES2015 module format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.node.*.js&lt;/strong&gt;: For running in Node. Uses file operations for loading/saving files instead of browser APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.umd.*.js&lt;/strong&gt;: UMD module format. For AMD or script-tag loading.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;polyfills*.js&lt;/strong&gt;: Required polyfills for older browsers like Internet Explorer. The es variant simply imports all required polyfills from &lt;code&gt;core-js&lt;/code&gt;, the umd variant is self-contained.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Usually it is not necessary to specify the exact file in the import statement. Build tools or Node automatically figure out the right file, so importing &quot;jspdf&quot; is enough.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Then you&#39;re ready to start making your document:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;

// Default export is a4 paper, portrait, using millimeters for units
const doc = new jsPDF();

doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to change the paper size, orientation, or units, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Landscape export, 2√ó4 inches
const doc = new jsPDF({
  orientation: &quot;landscape&quot;,
  unit: &quot;in&quot;,
  format: [4, 2]
});

doc.text(&quot;Hello world!&quot;, 1, 1);
doc.save(&quot;two-by-four.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running in Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const { jsPDF } = require(&quot;jspdf&quot;); // will automatically load the node version

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;); // will save the file in the current working directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other Module Formats&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;AMD&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;require([&quot;jspdf&quot;], ({ jsPDF }) =&amp;gt; {
  const doc = new jsPDF();
  doc.text(&quot;Hello world!&quot;, 10, 10);
  doc.save(&quot;a4.pdf&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Globals&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { jsPDF } = window.jspdf;

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Optional dependencies&lt;/h3&gt; 
&lt;p&gt;Some functions of jsPDF require optional dependencies. E.g. the &lt;code&gt;html&lt;/code&gt; method, which depends on &lt;code&gt;html2canvas&lt;/code&gt; and, when supplied with a string HTML document, &lt;code&gt;dompurify&lt;/code&gt;. JsPDF loads them dynamically when required (using the respective module format, e.g. dynamic imports). Build tools like Webpack will automatically create separate chunks for each of the optional dependencies. If your application does not use any of the optional dependencies, you can prevent Webpack from generating the chunks by defining them as external dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// webpack.config.js
module.exports = {
  // ...
  externals: {
    // only define the dependencies you are NOT using as externals!
    canvg: &quot;canvg&quot;,
    html2canvas: &quot;html2canvas&quot;,
    dompurify: &quot;dompurify&quot;
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;strong&gt;Vue CLI&lt;/strong&gt; projects, externals can be defined via the &lt;a href=&quot;https://cli.vuejs.org/config/#configurewebpack&quot;&gt;configureWebpack&lt;/a&gt; or &lt;a href=&quot;https://cli.vuejs.org/config/#chainwebpack&quot;&gt;chainWebpack&lt;/a&gt; properties of the &lt;code&gt;vue.config.js&lt;/code&gt; file (needs to be created, first, in fresh projects).&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;Angular&lt;/strong&gt; projects, externals can be defined using &lt;a href=&quot;https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack&quot;&gt;custom webpack builders&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;React&lt;/strong&gt; (&lt;code&gt;create-react-app&lt;/code&gt;) projects, externals can be defined by either using &lt;a href=&quot;https://github.com/timarney/react-app-rewired&quot;&gt;react-app-rewired&lt;/a&gt; or ejecting.&lt;/p&gt; 
&lt;h3&gt;TypeScript/Angular/Webpack/React/etc. Configuration:&lt;/h3&gt; 
&lt;p&gt;jsPDF can be imported just like any other 3rd party library. This works with all major toolkits and frameworks. jsPDF also offers a typings file for TypeScript projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add jsPDF to your meteor-project as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;meteor add jspdf:core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;p&gt;jsPDF requires modern browser APIs in order to function. To use jsPDF in older browsers like Internet Explorer, polyfills are required. You can load all required polyfills as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &quot;jspdf/dist/polyfills.es.js&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can load the prebundled polyfill file. This is not recommended, since you might end up loading polyfills multiple times. Might still be nifty for small applications or quick POCs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/polyfills.umd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use of Unicode Characters / UTF-8:&lt;/h2&gt; 
&lt;p&gt;The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports the wanted glyphs or else it will show garbled characters instead of the right text.&lt;/p&gt; 
&lt;p&gt;To add the font to jsPDF use our fontconverter in &lt;a href=&quot;https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html&quot;&gt;/fontconverter/fontconverter.html&lt;/a&gt;. The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string and additional code for jsPDF. You just have to add this generated js-File to your project. You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.&lt;/p&gt; 
&lt;p&gt;Alternatively you can just load the content of the *.ttf file as a binary string using &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;XMLHttpRequest&lt;/code&gt; and add the font to the PDF file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const doc = new jsPDF();

const myFont = ... // load the *.ttf font file as binary string

// add the font to jsPDF
doc.addFileToVFS(&quot;MyFont.ttf&quot;, myFont);
doc.addFont(&quot;MyFont.ttf&quot;, &quot;MyFont&quot;, &quot;normal&quot;);
doc.setFont(&quot;MyFont&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Functionality&lt;/h2&gt; 
&lt;p&gt;Since the merge with the &lt;a href=&quot;https://github.com/yWorks/jsPDF&quot;&gt;yWorks fork&lt;/a&gt; there are a lot of new features. However, some of them are API breaking, which is why there is an API-switch between two API modes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In &quot;compat&quot; API mode, jsPDF has the same API as MrRio&#39;s original version, which means full compatibility with plugins. However, some advanced features like transformation matrices and patterns won&#39;t work. This is the default mode.&lt;/li&gt; 
 &lt;li&gt;In &quot;advanced&quot; API mode, jsPDF has the API you&#39;re used from the yWorks-fork version. This means the availability of all advanced features like patterns, FormObjects, and transformation matrices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can switch between the two modes by calling&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doc.advancedAPI(doc =&amp;gt; {
  // your code
});
// or
doc.compatAPI(doc =&amp;gt; {
  // your code
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JsPDF will automatically switch back to the original API mode after the callback has run.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please check if your question is already handled at Stackoverflow &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jspdf&quot;&gt;https://stackoverflow.com/questions/tagged/jspdf&lt;/a&gt;. Feel free to ask a question there with the tag &lt;code&gt;jspdf&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests, bug reports, etc. are very welcome as issues. Note that bug reports should follow these guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A bug should be reported as an &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;mcve&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure code is properly indented and &lt;a href=&quot;https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code&quot;&gt;formatted&lt;/a&gt; (Use ``` around code blocks)&lt;/li&gt; 
 &lt;li&gt;Provide a runnable example.&lt;/li&gt; 
 &lt;li&gt;Try to make sure and show in your issue that the issue is actually related to jspdf and not your framework of choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;jsPDF cannot live without help from the community! If you think a feature is missing or you found a bug, please consider if you can spare one or two hours and prepare a pull request. If you&#39;re simply interested in this project and want to help, have a look at the open issues, especially those labeled with &quot;bug&quot;.&lt;/p&gt; 
&lt;p&gt;You can find information about building and testing jsPDF in the &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/CONTRIBUTING.md#pull-requests&quot;&gt;contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Big thanks to Daniel Dotsenko from &lt;a href=&quot;https://github.com/willowsystems&quot;&gt;Willow Systems Corporation&lt;/a&gt; for making huge contributions to the codebase.&lt;/li&gt; 
 &lt;li&gt;Thanks to Ajaxian.com for &lt;a href=&quot;http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript&quot;&gt;featuring us back in 2009&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Our special thanks to GH Lee (&lt;a href=&quot;https://github.com/sphilee&quot;&gt;sphilee&lt;/a&gt;) for programming the ttf-file-support and providing a large and long sought after feature&lt;/li&gt; 
 &lt;li&gt;Everyone else that&#39;s contributed patches or bug reports. You rock.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License (MIT)&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2010-2021 James Hall, &lt;a href=&quot;https://github.com/MrRio/jsPDF&quot;&gt;https://github.com/MrRio/jsPDF&lt;/a&gt; (c) 2015-2021 yWorks GmbH, &lt;a href=&quot;https://www.yworks.com/&quot;&gt;https://www.yworks.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;üßô&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; ‚Äî an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker‚Äôs Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href=&quot;https://www.immunefi.com/bounty/openzeppelin&quot;&gt;&lt;strong&gt;bug bounty program&lt;/strong&gt; on Immunefi&lt;/a&gt;. Please report any security issues you find through the Immunefi dashboard, or reach out to &lt;a href=&quot;mailto:security@openzeppelin.com&quot;&gt;security@openzeppelin.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hyperledger/fabric-samples</title>
      <link>https://github.com/hyperledger/fabric-samples</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hyperledger Fabric Samples&lt;/h1&gt; 
&lt;p&gt;You can use Fabric samples to get started working with Hyperledger Fabric, explore important Fabric features, and learn how to build applications that can interact with blockchain networks using the Fabric SDKs. To learn more about Hyperledger Fabric, visit the &lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest&quot;&gt;Fabric documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started with the Fabric samples&lt;/h2&gt; 
&lt;p&gt;To use the Fabric samples, you need to download the Fabric Docker images and the Fabric CLI tools. First, make sure that you have installed all of the &lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html&quot;&gt;Fabric prerequisites&lt;/a&gt;. You can then follow the instructions to &lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/install.html&quot;&gt;Install the Fabric Samples, Binaries, and Docker Images&lt;/a&gt; in the Fabric documentation. In addition to downloading the Fabric images and tool binaries, the Fabric samples will also be cloned to your local machine.&lt;/p&gt; 
&lt;h2&gt;Test network&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/test-network&quot;&gt;Fabric test network&lt;/a&gt; in the samples repository provides a Docker Compose based test network with two Organization peers and an ordering service node. You can use it on your local machine to run the samples listed below. You can also use it to deploy and test your own Fabric chaincodes and applications. To get started, see the &lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html&quot;&gt;test network tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/test-network-k8s&quot;&gt;Kubernetes Test Network&lt;/a&gt; sample builds upon the Compose network, constructing a Fabric network with peer, orderer, and CA infrastructure nodes running on Kubernetes. In addition to providing a sample Kubernetes guide, the Kube test network can be used as a platform to author and debug &lt;em&gt;cloud ready&lt;/em&gt; Fabric Client applications on a development or CI workstation.&lt;/p&gt; 
&lt;h2&gt;Asset transfer samples and tutorials&lt;/h2&gt; 
&lt;p&gt;The asset transfer series provides a series of sample smart contracts and applications to demonstrate how to store and transfer assets using Hyperledger Fabric. Each sample and associated tutorial in the series demonstrates a different core capability in Hyperledger Fabric. The &lt;strong&gt;Basic&lt;/strong&gt; sample provides an introduction on how to write smart contracts and how to interact with a Fabric network using the Fabric SDKs. The &lt;strong&gt;Ledger queries&lt;/strong&gt;, &lt;strong&gt;Private data&lt;/strong&gt;, and &lt;strong&gt;State-based endorsement&lt;/strong&gt; samples demonstrate these additional capabilities. Finally, the &lt;strong&gt;Secured agreement&lt;/strong&gt; sample demonstrates how to bring all the capabilities together to securely transfer an asset in a more realistic transfer scenario.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Smart Contract&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Smart contract languages&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Application languages&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-basic&quot;&gt;Basic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Basic sample smart contract that allows you to create and transfer an asset by putting data on the ledger and retrieving it. This sample is recommended for new Fabric users.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html&quot;&gt;Writing your first application&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go, JavaScript, TypeScript, Java&lt;/td&gt; 
   &lt;td&gt;Go, JavaScript, TypeScript, Java&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-ledger-queries&quot;&gt;Ledger queries&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The ledger queries sample demonstrates range queries and transaction updates using range queries (applicable for both LevelDB and CouchDB state databases), and how to deploy an index with your chaincode to support JSON queries (applicable for CouchDB state database only).&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/couchdb_tutorial.html&quot;&gt;Using CouchDB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go, JavaScript&lt;/td&gt; 
   &lt;td&gt;Java, JavaScript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-private-data&quot;&gt;Private data&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;This sample demonstrates the use of private data collections, how to manage private data collections with the chaincode lifecycle, and how the private data hash can be used to verify private data on the ledger. It also demonstrates how to control asset updates and transfers using client-based ownership and access control.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/private_data_tutorial.html&quot;&gt;Using Private Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go, Java&lt;/td&gt; 
   &lt;td&gt;JavaScript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-sbe&quot;&gt;State-Based Endorsement&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;This sample demonstrates how to override the chaincode-level endorsement policy to set endorsement policies at the key-level (data/asset level).&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hyperledger/fabric-samples/tree/main/asset-transfer-sbe&quot;&gt;Using State-based endorsement&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Java, TypeScript&lt;/td&gt; 
   &lt;td&gt;JavaScript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-secured-agreement&quot;&gt;Secured agreement&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Smart contract that uses implicit private data collections, state-based endorsement, and organization-based ownership and access control to keep data private and securely transfer an asset with the consent of both the current owner and buyer.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/secured_asset_transfer/secured_private_asset_transfer_tutorial.html&quot;&gt;Secured asset transfer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;JavaScript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-events&quot;&gt;Events&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The events sample demonstrates how smart contracts can emit events that are read by the applications interacting with the network.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-events/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;JavaScript, Java&lt;/td&gt; 
   &lt;td&gt;JavaScript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-abac&quot;&gt;Attribute-based access control&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates the use of attribute and identity based access control using a simple asset transfer scenario&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/asset-transfer-abac/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Additional samples&lt;/h2&gt; 
&lt;p&gt;Additional samples demonstrate various Fabric use cases and application patterns.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Sample&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/commercial-paper&quot;&gt;Commercial paper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Explore a use case and detailed application development tutorial in which two organizations use a blockchain network to trade commercial paper.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/tutorial/commercial_paper.html&quot;&gt;Commercial paper tutorial&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/off_chain_data&quot;&gt;Off chain data&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how to use the Peer channel-based event services to build an off-chain database for reporting and analytics.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hyperledger-fabric.readthedocs.io/en/latest/peer_event_services.html&quot;&gt;Peer channel-based event services&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-20&quot;&gt;Token ERC-20&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Smart contract demonstrating how to create and transfer fungible tokens using an account-based model.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-erc-20/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-utxo&quot;&gt;Token UTXO&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Smart contract demonstrating how to create and transfer fungible tokens using a UTXO (unspent transaction output) model.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/token-utxo/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/high-throughput&quot;&gt;High throughput&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how you can design your smart contract to avoid transaction collisions in high volume environments.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/high-throughput/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-simple&quot;&gt;Simple Auction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Run an auction where bids are kept private until the auction is closed, after which users can reveal their bid.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-simple/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-dutch&quot;&gt;Dutch Auction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Run an auction in which multiple items of the same type can be sold to more than one buyer. This example also includes the ability to add an auditor organization.&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/auction-dutch/README.md&quot;&gt;README&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/chaincode&quot;&gt;Chaincode&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A set of other sample smart contracts, many of which were used in tutorials prior to the asset transfer sample series.&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/interest_rate_swaps&quot;&gt;Interest rate swaps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Deprecated in favor of state based endorsement asset transfer sample&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/fabcar&quot;&gt;Fabcar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Deprecated in favor of basic asset transfer sample&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License &lt;a name=&quot;license&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Hyperledger Project source code files are made available under the Apache License, Version 2.0 (Apache-2.0), located in the &lt;a href=&quot;https://raw.githubusercontent.com/hyperledger/fabric-samples/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file. Hyperledger Project documentation files are made available under the Creative Commons Attribution 4.0 International License (CC-BY-4.0), available at &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://community.metamask.io/c/learn/26&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://community.metamask.io/c/feature-requests-ideas/13&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://community.metamask.io/c/developer-questions/11&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://community.metamask.io/&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 14 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn setup&lt;/code&gt; (not the usual install command)&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you&#39;ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they&#39;re built.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/build/README.md&quot;&gt;build system readme&lt;/a&gt; for build system usage information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;To start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;https://github.com/reduxjs/redux-devtools/tree/main/extension&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
 &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
  &lt;ul&gt; 
   &lt;li&gt;You will also need to check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://metamask.github.io/test-dapp/&quot;&gt;Test site&lt;/a&gt; can be used to execute different user flows.&lt;/p&gt; 
&lt;h3&gt;Running Unit Tests and Linting&lt;/h3&gt; 
&lt;p&gt;Run unit tests and the linter with &lt;code&gt;yarn test&lt;/code&gt;. To run just unit tests, run &lt;code&gt;yarn test:unit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;, and you can automatically fix some lint problems with &lt;code&gt;yarn lint:fix&lt;/code&gt;. You can also run these two commands just on your local changes to save time with &lt;code&gt;yarn lint:changed&lt;/code&gt; and &lt;code&gt;yarn lint:changed:fix&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h3&gt;Running E2E Tests&lt;/h3&gt; 
&lt;p&gt;Our e2e test suite can be run on either Firefox or Chrome. In either case, start by creating a test build by running &lt;code&gt;yarn build:test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Firefox e2e tests can be run with &lt;code&gt;yarn test:e2e:firefox&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Chrome e2e tests can be run with &lt;code&gt;yarn test:e2e:chrome&lt;/code&gt;, but they will only work if you have Chrome v79 installed. Update the &lt;code&gt;chromedriver&lt;/code&gt; package to a version matching your local Chrome installation to run e2e tests on newer Chrome versions.&lt;/p&gt; 
&lt;h3&gt;Changing dependencies&lt;/h3&gt; 
&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn setup&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package&#39;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The LavaMoat policy files. The &lt;em&gt;tl;dr&lt;/em&gt; is to run &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; to update these files, but there can be devils in the details. Continue reading for more information. 
  &lt;ul&gt; 
   &lt;li&gt;There are two sets of LavaMoat policy files: 
    &lt;ul&gt; 
     &lt;li&gt;The production LavaMoat policy files (&lt;code&gt;lavamoat/browserify/*/policy.json&lt;/code&gt;), which are re-generated using &lt;code&gt;yarn lavamoat:background:auto&lt;/code&gt;. 
      &lt;ul&gt; 
       &lt;li&gt;These should be regenerated whenever the production dependencies for the background change.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;The build system LavaMoat policy file (&lt;code&gt;lavamoat/build-system/policy.json&lt;/code&gt;), which is re-generated using &lt;code&gt;yarn lavamoat:build:auto&lt;/code&gt;. 
      &lt;ul&gt; 
       &lt;li&gt;This should be regenerated whenever the dependencies used by the build system itself change.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
   &lt;li&gt;Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#39;s static analysis. Refer to the LavaMoat documentation or ask for help if you run into any issues.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository&#39;s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub watchers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://open.vscode.dev/microsoft/Web-Dev-For-Beginners&quot;&gt;&lt;img src=&quot;https://open.vscode.dev/badges/open-in-vscode.svg?sanitize=true&quot; alt=&quot;Open in Visual Studio Code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to &#39;stick&#39;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We&#39;d love your feedback &lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner&quot;&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-13441-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/web.gif&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gif by &lt;a href=&quot;https://linkedin.com/in/mohitjaisal&quot;&gt;Mohit Jaisal&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üé• Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a &#39;green&#39; browser extension, a &#39;space invaders&#39; type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today&#39;s web developer.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üéì You can take the first few lessons in this curriculum as a &lt;a href=&quot;https://docs.microsoft.com/learn/paths/web-development-101?WT.mc_id=academic-13441-cxa&quot;&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=academic-13441-cxa&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;&quot; collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=academic-13441-cxa&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&quot;https://happy-mud-02d95f10f.azurestaticapps.net/&quot;&gt;in this app&lt;/a&gt;, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Project Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application&#39;s logic flow&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser&#39;s background processes to manage the extension&#39;s icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game&#39;s status and performance&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website&#39;s architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handing validation routines&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href=&quot;https://microsoft.github.io/Web-Dev-For-Beginners/pdf/readme.pdf&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Curricula&lt;/h2&gt; 
&lt;p&gt;Our team produces other curricula! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ml-beginners&quot;&gt;Machine Learning for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/iot-beginners&quot;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/datascience-beginners&quot;&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>twbs/bootstrap</title>
      <link>https://github.com/twbs/bootstrap</link>
      <description>&lt;p&gt;The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://getbootstrap.com/&quot;&gt; &lt;img src=&quot;https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Sleek, intuitive, and powerful front-end framework for faster and easier web development. &lt;br&gt; &lt;a href=&quot;https://getbootstrap.com/docs/5.1/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=-&amp;amp;labels=bug&amp;amp;template=bug_report.yml&quot;&gt;Report bug&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=&amp;amp;labels=feature&amp;amp;template=feature_request.yml&quot;&gt;Request feature&lt;/a&gt; ¬∑ &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt; ¬∑ &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Bootstrap 5&lt;/h2&gt; 
&lt;p&gt;Our default branch is for development of our Bootstrap 5 release. Head to the &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/v4-dev&quot;&gt;&lt;code&gt;v4-dev&lt;/code&gt; branch&lt;/a&gt; to view the readme, documentation, and source code for Bootstrap 4.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#quick-start&quot;&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#status&quot;&gt;Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#whats-included&quot;&gt;What&#39;s included&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#bugs-and-feature-requests&quot;&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#creators&quot;&gt;Creators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#thanks&quot;&gt;Thanks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#copyright-and-license&quot;&gt;Copyright and license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Several quick start options are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/archive/v5.1.3.zip&quot;&gt;Download the latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone the repo: &lt;code&gt;git clone https://github.com/twbs/bootstrap.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;: &lt;code&gt;composer require twbs/bootstrap:5.1.3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt;: CSS: &lt;code&gt;Install-Package bootstrap&lt;/code&gt; Sass: &lt;code&gt;Install-Package bootstrap.sass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://getbootstrap.com/docs/5.1/getting-started/introduction/&quot;&gt;Getting started page&lt;/a&gt; for information on the framework contents, templates, examples, and more.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://bootstrap-slack.herokuapp.com/badge.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/actions?query=workflow%3AJS+Tests+branch%3Amain&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/twbs/bootstrap/JS%20Tests/main?label=JS%20Tests&amp;amp;logo=github&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/bootstrap&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/bootstrap&quot; alt=&quot;Gem version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://atmospherejs.com/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue&quot; alt=&quot;Meteor Atmosphere&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagist.org/packages/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/vpre/twbs/bootstrap&quot; alt=&quot;Packagist Prerelease&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/bootstrap/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/bootstrap&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/twbs/bootstrap?branch=main&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/twbs/bootstrap/main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;amp;label=CSS%20gzip%20size&quot; alt=&quot;CSS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;amp;label=CSS%20Brotli%20size&quot; alt=&quot;CSS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;amp;label=JS%20gzip%20size&quot; alt=&quot;JS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;amp;label=JS%20Brotli%20size&quot; alt=&quot;JS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot;&gt;&lt;img src=&quot;https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot; alt=&quot;BrowserStack Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/bootstrap&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/bootstrap&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What&#39;s included&lt;/h2&gt; 
&lt;p&gt;Within the download you&#39;ll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You&#39;ll see something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;bootstrap/
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.min.css
‚îÇ   ‚îî‚îÄ‚îÄ bootstrap.rtl.min.css.map
‚îî‚îÄ‚îÄ js/
    ‚îú‚îÄ‚îÄ bootstrap.bundle.js
    ‚îú‚îÄ‚îÄ bootstrap.bundle.js.map
    ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js
    ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js.map
    ‚îú‚îÄ‚îÄ bootstrap.esm.js
    ‚îú‚îÄ‚îÄ bootstrap.esm.js.map
    ‚îú‚îÄ‚îÄ bootstrap.esm.min.js
    ‚îú‚îÄ‚îÄ bootstrap.esm.min.js.map
    ‚îú‚îÄ‚îÄ bootstrap.js
    ‚îú‚îÄ‚îÄ bootstrap.js.map
    ‚îú‚îÄ‚îÄ bootstrap.min.js
    ‚îî‚îÄ‚îÄ bootstrap.min.js.map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We provide compiled CSS and JS (&lt;code&gt;bootstrap.*&lt;/code&gt;), as well as compiled and minified CSS and JS (&lt;code&gt;bootstrap.min.*&lt;/code&gt;). &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps&quot;&gt;Source maps&lt;/a&gt; (&lt;code&gt;bootstrap.*.map&lt;/code&gt;) are available for use with certain browsers&#39; developer tools. Bundled JS files (&lt;code&gt;bootstrap.bundle.js&lt;/code&gt; and minified &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt;) include &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; 
&lt;p&gt;Have a bug or a feature request? Please first read the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md#using-the-issue-tracker&quot;&gt;issue guidelines&lt;/a&gt; and search for existing and closed issues. If your problem or idea is not addressed yet, &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new&quot;&gt;please open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Bootstrap&#39;s documentation, included in this repo in the root directory, is built with &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and publicly hosted on GitHub Pages at &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;https://getbootstrap.com/&lt;/a&gt;. The docs may also be run locally.&lt;/p&gt; 
&lt;p&gt;Documentation search is powered by &lt;a href=&quot;https://community.algolia.com/docsearch/&quot;&gt;Algolia&#39;s DocSearch&lt;/a&gt;. Working on our search? Be sure to set &lt;code&gt;debug: true&lt;/code&gt; in &lt;code&gt;site/assets/js/search.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running documentation locally&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the Node.js dependencies, including Hugo (the site builder).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run test&lt;/code&gt; (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.&lt;/li&gt; 
 &lt;li&gt;From the root &lt;code&gt;/bootstrap&lt;/code&gt; directory, run &lt;code&gt;npm run docs-serve&lt;/code&gt; in the command line.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:9001/&lt;/code&gt; in your browser, and voil√†.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more about using Hugo by reading its &lt;a href=&quot;https://gohugo.io/documentation/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation for previous releases&lt;/h3&gt; 
&lt;p&gt;You can find all our previous releases docs on &lt;a href=&quot;https://getbootstrap.com/docs/versions/&quot;&gt;https://getbootstrap.com/docs/versions/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;Previous releases&lt;/a&gt; and their documentation are also available for download.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; 
&lt;p&gt;Moreover, if your pull request contains JavaScript patches or features, you must include &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/main/js/tests&quot;&gt;relevant unit tests&lt;/a&gt;. All HTML and CSS should conform to the &lt;a href=&quot;https://github.com/mdo/code-guide&quot;&gt;Code Guide&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/mdo&quot;&gt;Mark Otto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Editor preferences are available in the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.editorconfig&quot;&gt;editor config&lt;/a&gt; for easy use in common text editors. Read more and download plugins at &lt;a href=&quot;https://editorconfig.org/&quot;&gt;https://editorconfig.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get updates on Bootstrap&#39;s development and chat with the project maintainers and community members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/getbootstrap&quot;&gt;@getbootstrap on Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read and subscribe to &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;The Official Bootstrap Blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join &lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;the official Slack room&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with fellow Bootstrappers in IRC. On the &lt;code&gt;irc.libera.chat&lt;/code&gt; server, in the &lt;code&gt;#bootstrap&lt;/code&gt; channel.&lt;/li&gt; 
 &lt;li&gt;Implementation help may be found at Stack Overflow (tagged &lt;a href=&quot;https://stackoverflow.com/questions/tagged/bootstrap-5&quot;&gt;&lt;code&gt;bootstrap-5&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Developers should use the keyword &lt;code&gt;bootstrap&lt;/code&gt; on packages which modify or add to the functionality of Bootstrap when distributing through &lt;a href=&quot;https://www.npmjs.com/browse/keyword/bootstrap&quot;&gt;npm&lt;/a&gt; or similar delivery mechanisms for maximum discoverability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under &lt;a href=&quot;https://semver.org/&quot;&gt;the Semantic Versioning guidelines&lt;/a&gt;. Sometimes we screw up, but we adhere to those rules whenever possible.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;the Releases section of our GitHub project&lt;/a&gt; for changelogs for each release version of Bootstrap. Release announcement posts on &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;the official Bootstrap blog&lt;/a&gt; contain summaries of the most noteworthy changes made in each release.&lt;/p&gt; 
&lt;h2&gt;Creators&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mark Otto&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mdo&quot;&gt;https://twitter.com/mdo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdo&quot;&gt;https://github.com/mdo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Jacob Thornton&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/fat&quot;&gt;https://twitter.com/fat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fat&quot;&gt;https://github.com/fat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;a href=&quot;https://www.browserstack.com/&quot;&gt; &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg?sanitize=true&quot; alt=&quot;BrowserStack Logo&quot; width=&quot;192&quot; height=&quot;42&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; for providing the infrastructure that allows us to test in real browsers!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&quot;https://opencollective.com/bootstrap#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/backers.svg?width=890&quot; alt=&quot;Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Copyright and license&lt;/h2&gt; 
&lt;p&gt;Code and documentation copyright 2011‚Äì2021 the &lt;a href=&quot;https://github.com/twbs/bootstrap/graphs/contributors&quot;&gt;Bootstrap Authors&lt;/a&gt; and &lt;a href=&quot;https://twitter.com&quot;&gt;Twitter, Inc.&lt;/a&gt; Code released under the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;. Docs released under &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AsyncBanana/microdiff</title>
      <link>https://github.com/AsyncBanana/microdiff</link>
      <description>&lt;p&gt;A fast, zero dependency object and array comparison library. Significantly faster than most other deep comparison libraries and has full TypeScript support.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AsyncBanana/microdiff/master/Logo.svg?sanitize=true&quot; alt=&quot;Microdiff Logo&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;Microdiff is a tiny (currently &amp;lt;1kb), fast, zero dependency object and array comparison library. It is significantly faster than most other deep comparison libraries, and has full TypeScript support.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/bundlephobia/minzip/microdiff?style=flat-square&quot; alt=&quot;Minizipped Size (from Bundlephobia)&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/l/microdiff?style=flat-square&quot; alt=&quot;License&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/dependencies-0-green?style=flat-square&quot; alt=&quot;dependency Count&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ More than double the speed of other object diff libraries&lt;/li&gt; 
 &lt;li&gt;üì¶ Extremely lightweight, &amp;lt;1kb minified&lt;/li&gt; 
 &lt;li&gt;üåé Supports Deno, Node, the web, and even service workers. Also comes with built in Typescript types&lt;/li&gt; 
 &lt;li&gt;üî∞ Very easy to use, having just a single &lt;code&gt;diff()&lt;/code&gt; function&lt;/li&gt; 
 &lt;li&gt;üìÖ Full support for objects like &lt;code&gt;new Date()&lt;/code&gt; and &lt;code&gt;new RegExp()&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Get started&lt;/h1&gt; 
&lt;p&gt;First, install Microdiff&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm i microdiff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using Deno, you can import it from Deno.land with the link &lt;code&gt;https://deno.land/x/microdiff@VERSION/index.ts&lt;/code&gt; (remember to change &lt;code&gt;@VERSION&lt;/code&gt; to the version you want to use).&lt;/p&gt; 
&lt;p&gt;After you install it, simply import it and run it on two objects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import diff from &quot;microdiff&quot;;

const obj1 = {
	originalProperty: true,
};
const obj2 = {
	originalProperty: true,
	newProperty: &quot;new&quot;,
};

console.log(diff(obj1, obj2));
// [{type: &quot;CREATE&quot;, path: [&quot;newProperty&quot;], value: &quot;new&quot;}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using CommonJS, you can import it like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const diff = require(&quot;microdiff&quot;).default;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are three different types of changes. &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;REMOVE&lt;/code&gt;, and &lt;code&gt;CHANGE&lt;/code&gt;. The &lt;code&gt;path&lt;/code&gt; property gives a path to the property in the new object (or the old object in the case of &lt;code&gt;REMOVE&lt;/code&gt;). Each element in the paths is a key to the next property a level deeper until you get to the property changed, and it is string or a number, depending on whether the object is an Array or Object (Objects with number keys will still be strings). The &lt;code&gt;value&lt;/code&gt; property exists in types &lt;code&gt;CREATE&lt;/code&gt; and &lt;code&gt;CHANGE&lt;/code&gt;, and it contains the value of the property added/changed.&lt;/p&gt; 
&lt;h1&gt;Cycles support&lt;/h1&gt; 
&lt;p&gt;By default cycles are supported, but if you are sure that the object has no cycles (for example if you are parsing JSON) you can disable cycles using the &lt;code&gt;cyclesFix&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;diff(obj1, obj2, { cyclesFix: false });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Benchmarks&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;Benchmarks: Small object
deep-diff: 17929ns - 409% slower
deep-object-diff: 10763ns - 206% slower
jsdiff: 79700ns - 2164% slower
microdiff: 3520ns - Fastest

Benchmarks: Large Object
deep-diff: 272887ns - 259% slower
deep-object-diff: 160019ns - 111% slower
jsdiff: 1688294ns - 2123% slower
microdiff: 75934ns - Fastest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These benchmarks are currently only for one small object and a very large object, so they might not be accurate. I will be working on creating benchmarks with more varying types.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lerna/lerna</title>
      <link>https://github.com/lerna/lerna</link>
      <description>&lt;p&gt;üêâ A tool for managing JavaScript projects with multiple packages.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Lerna&quot; src=&quot;https://user-images.githubusercontent.com/645641/79596653-38f81200-80e1-11ea-98cd-1c6a3bb5de51.png&quot; width=&quot;480&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A tool for managing JavaScript projects with multiple packages. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/lerna&quot;&gt;&lt;img alt=&quot;NPM Status&quot; src=&quot;https://img.shields.io/npm/v/lerna.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lerna/lerna/actions?query=branch%3Amain+workflow%3Aci&quot;&gt;&lt;img alt=&quot;CI Status&quot; src=&quot;https://github.com/lerna/lerna/workflows/ci/badge.svg?branch=main&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#how-it-works&quot;&gt;How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Commands 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/publish#readme&quot;&gt;&lt;code&gt;lerna publish&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/version#readme&quot;&gt;&lt;code&gt;lerna version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/bootstrap#readme&quot;&gt;&lt;code&gt;lerna bootstrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/list#readme&quot;&gt;&lt;code&gt;lerna list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/changed#readme&quot;&gt;&lt;code&gt;lerna changed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/diff#readme&quot;&gt;&lt;code&gt;lerna diff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/exec#readme&quot;&gt;&lt;code&gt;lerna exec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/run#readme&quot;&gt;&lt;code&gt;lerna run&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/init#readme&quot;&gt;&lt;code&gt;lerna init&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/add#readme&quot;&gt;&lt;code&gt;lerna add&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/clean#readme&quot;&gt;&lt;code&gt;lerna clean&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/import#readme&quot;&gt;&lt;code&gt;lerna import&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/link#readme&quot;&gt;&lt;code&gt;lerna link&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/create#readme&quot;&gt;&lt;code&gt;lerna create&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/info#readme&quot;&gt;&lt;code&gt;lerna info&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#lernajson&quot;&gt;Lerna.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/core/global-options&quot;&gt;Global Flags&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/core/filter-options&quot;&gt;Filter Flags&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Splitting up large codebases into separate independently versioned packages is extremely useful for code sharing. However, making changes across many repositories is &lt;em&gt;messy&lt;/em&gt; and difficult to track, and testing across repositories becomes complicated very quickly.&lt;/p&gt; 
&lt;p&gt;To solve these (and many other) problems, some projects will organize their codebases into multi-package repositories (sometimes called &lt;a href=&quot;https://github.com/babel/babel/raw/master/doc/design/monorepo.md&quot;&gt;monorepos&lt;/a&gt;). Projects like &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages&quot;&gt;Babel&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/react/tree/master/packages&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/angular/angular/tree/master/modules&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/master/packages&quot;&gt;Ember&lt;/a&gt;, &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages&quot;&gt;Meteor&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/jest/tree/master/packages&quot;&gt;Jest&lt;/a&gt;, and many others develop all of their packages within a single repository.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Lerna can also reduce the time and space requirements for numerous copies of packages in development and build environments - normally a downside of dividing a project into many separate NPM packages. See the &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/doc/hoist.md&quot;&gt;hoist documentation&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;What does a Lerna repo look like?&lt;/h3&gt; 
&lt;p&gt;There&#39;s actually very little to it. You have a file structure that looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-lerna-repo/
  package.json
  packages/
    package-1/
      package.json
    package-2/
      package.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;What can Lerna do?&lt;/h3&gt; 
&lt;p&gt;The two primary commands in Lerna are &lt;code&gt;lerna bootstrap&lt;/code&gt; and &lt;code&gt;lerna publish&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bootstrap&lt;/code&gt; will link dependencies in the repo together. &lt;code&gt;publish&lt;/code&gt; will help publish any updated packages.&lt;/p&gt; 
&lt;h3&gt;What can&#39;t Lerna do?&lt;/h3&gt; 
&lt;p&gt;Lerna is not a deployment tool for serverless monorepos. Hoisting might be incompatible with traditional serverless monorepo deployment techniques.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The instructions below are for Lerna 3.x. We recommend using it instead of 2.x for a new Lerna project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Let&#39;s start by installing Lerna as a dev dependency of your project with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ mkdir lerna-repo &amp;amp;&amp;amp; cd $_
$ npx lerna init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;code&gt;lerna.json&lt;/code&gt; configuration file as well as a &lt;code&gt;packages&lt;/code&gt; folder, so your folder should now look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lerna-repo/
  packages/
  package.json
  lerna.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;Lerna allows you to manage your project using one of two modes: Fixed or Independent.&lt;/p&gt; 
&lt;h3&gt;Fixed/Locked mode (default)&lt;/h3&gt; 
&lt;p&gt;Fixed mode Lerna projects operate on a single version line. The version is kept in the &lt;code&gt;lerna.json&lt;/code&gt; file at the root of your project under the &lt;code&gt;version&lt;/code&gt; key. When you run &lt;code&gt;lerna publish&lt;/code&gt;, if a module has been updated since the last time a release was made, it will be updated to the new version you&#39;re releasing. This means that you only publish a new version of a package when you need to.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you have a major version zero, all updates are &lt;a href=&quot;https://semver.org/#spec-item-4&quot;&gt;considered breaking&lt;/a&gt;. Because of that, running &lt;code&gt;lerna publish&lt;/code&gt; with a major version zero and choosing any non-prerelease version number will cause new versions to be published for all packages, even if not all packages have changed since the last release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This is the mode that &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; is currently using. Use this if you want to automatically tie all package versions together. One issue with this approach is that a major change in any package will result in all packages having a new major version.&lt;/p&gt; 
&lt;h3&gt;Independent mode&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;lerna init --independent&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Independent mode Lerna projects allows maintainers to increment package versions independently of each other. Each time you publish, you will get a prompt for each package that has changed to specify if it&#39;s a patch, minor, major or custom change.&lt;/p&gt; 
&lt;p&gt;Independent mode allows you to more specifically update versions for each package and makes sense for a group of components. Combining this mode with something like &lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;semantic-release&lt;/a&gt; would make it less painful. (There is work on this already at &lt;a href=&quot;https://github.com/atlassian/lerna-semantic-release&quot;&gt;atlassian/lerna-semantic-release&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Set the &lt;code&gt;version&lt;/code&gt; key in &lt;code&gt;lerna.json&lt;/code&gt; to &lt;code&gt;independent&lt;/code&gt; to run in independent mode.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues while using Lerna please check out our &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/doc/troubleshooting.md&quot;&gt;Troubleshooting&lt;/a&gt; document where you might find the answer to your problem.&lt;/p&gt; 
&lt;h2&gt;Frequently asked questions&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/FAQ.md&quot;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Concepts&lt;/h2&gt; 
&lt;p&gt;Lerna will log to a &lt;code&gt;lerna-debug.log&lt;/code&gt; file (same as &lt;code&gt;npm-debug.log&lt;/code&gt;) when it encounters an error running a command.&lt;/p&gt; 
&lt;p&gt;Lerna also has support for &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped packages&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;lerna --help&lt;/code&gt; to see all available commands and options.&lt;/p&gt; 
&lt;h3&gt;lerna.json&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;version&quot;: &quot;1.1.3&quot;,
  &quot;npmClient&quot;: &quot;npm&quot;,
  &quot;command&quot;: {
    &quot;publish&quot;: {
      &quot;ignoreChanges&quot;: [&quot;ignored-file&quot;, &quot;*.md&quot;],
      &quot;message&quot;: &quot;chore(release): publish&quot;,
      &quot;registry&quot;: &quot;https://npm.pkg.github.com&quot;
    },
    &quot;bootstrap&quot;: {
      &quot;ignore&quot;: &quot;component-*&quot;,
      &quot;npmClientArgs&quot;: [&quot;--no-package-lock&quot;]
    }
  },
  &quot;packages&quot;: [&quot;packages/*&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: the current version of the repository.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npmClient&lt;/code&gt;: an option to specify a specific client to run commands with (this can also be specified on a per command basis). Change to &lt;code&gt;&quot;yarn&quot;&lt;/code&gt; to run all commands with yarn. Defaults to &quot;npm&quot;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.ignoreChanges&lt;/code&gt;: an array of globs that won&#39;t be included in &lt;code&gt;lerna changed/publish&lt;/code&gt;. Use this to prevent publishing a new version unnecessarily for changes, such as fixing a &lt;code&gt;README.md&lt;/code&gt; typo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.message&lt;/code&gt;: a custom commit message when performing version updates for publication. See &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/version#--message-msg&quot;&gt;@lerna/version&lt;/a&gt; for more details.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.registry&lt;/code&gt;: use it to set a custom registry url to publish to instead of npmjs.org, you must already be authenticated if required.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.ignore&lt;/code&gt;: an array of globs that won&#39;t be bootstrapped when running the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.npmClientArgs&lt;/code&gt;: array of strings that will be passed as arguments directly to &lt;code&gt;npm install&lt;/code&gt; during the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.scope&lt;/code&gt;: an array of globs that restricts which packages will be bootstrapped when running the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;packages&lt;/code&gt;: Array of globs to use as package locations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The packages config in &lt;code&gt;lerna.json&lt;/code&gt; is a list of globs that match directories containing a &lt;code&gt;package.json&lt;/code&gt;, which is how lerna recognizes &quot;leaf&quot; packages (vs the &quot;root&quot; &lt;code&gt;package.json&lt;/code&gt;, which is intended to manage the dev dependencies and scripts for the entire repo).&lt;/p&gt; 
&lt;p&gt;By default, lerna initializes the packages list as &lt;code&gt;[&quot;packages/*&quot;]&lt;/code&gt;, but you can also use another directory such as &lt;code&gt;[&quot;modules/*&quot;]&lt;/code&gt;, or &lt;code&gt;[&quot;package1&quot;, &quot;package2&quot;]&lt;/code&gt;. The globs defined are relative to the directory that &lt;code&gt;lerna.json&lt;/code&gt; lives in, which is usually the repository root. The only restriction is that you can&#39;t directly nest package locations, but this is a restriction shared by &quot;normal&quot; npm packages as well.&lt;/p&gt; 
&lt;p&gt;For example, &lt;code&gt;[&quot;packages/*&quot;, &quot;src/**&quot;]&lt;/code&gt; matches this tree:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;packages/
‚îú‚îÄ‚îÄ foo-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ bar-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ baz-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ qux-pkg
    ‚îî‚îÄ‚îÄ package.json
src/
‚îú‚îÄ‚îÄ admin
‚îÇ   ‚îú‚îÄ‚îÄ my-app
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îú‚îÄ‚îÄ stuff
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ profile
‚îÇ   ‚îî‚îÄ‚îÄ more-things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ property
‚îÇ   ‚îú‚îÄ‚îÄ more-stuff
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ other-things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ upload
    ‚îî‚îÄ‚îÄ other-stuff
        ‚îî‚îÄ‚îÄ package.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Locating leaf packages under &lt;code&gt;packages/*&lt;/code&gt; is considered a &quot;best-practice&quot;, but is not a requirement for using Lerna.&lt;/p&gt; 
&lt;h4&gt;Legacy Fields&lt;/h4&gt; 
&lt;p&gt;Some &lt;code&gt;lerna.json&lt;/code&gt; fields are no longer in use. Those of note include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lerna&lt;/code&gt;: originally used to indicate the current version of Lerna. &lt;a href=&quot;https://github.com/lerna/lerna/pull/1122&quot;&gt;Made obsolete&lt;/a&gt; and &lt;a href=&quot;https://github.com/lerna/lerna/pull/1225&quot;&gt;removed&lt;/a&gt; in v3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Common &lt;code&gt;devDependencies&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Most &lt;code&gt;devDependencies&lt;/code&gt; can be pulled up to the root of a Lerna repo with &lt;code&gt;lerna link convert&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The above command will automatically hoist things and use relative &lt;code&gt;file:&lt;/code&gt; specifiers.&lt;/p&gt; 
&lt;p&gt;Hoisting has a few benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All packages use the same version of a given dependency&lt;/li&gt; 
 &lt;li&gt;Can keep dependencies at the root up-to-date with an automated tool such as &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dependency installation time is reduced&lt;/li&gt; 
 &lt;li&gt;Less storage is needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that &lt;code&gt;devDependencies&lt;/code&gt; providing &quot;binary&quot; executables that are used by npm scripts still need to be installed directly in each package where they&#39;re used.&lt;/p&gt; 
&lt;p&gt;For example the &lt;code&gt;nsp&lt;/code&gt; dependency is necessary in this case for &lt;code&gt;lerna run nsp&lt;/code&gt; (and &lt;code&gt;npm run nsp&lt;/code&gt; within the package&#39;s directory) to work correctly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;nsp&quot;: &quot;nsp&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;nsp&quot;: &quot;^2.3.3&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Git Hosted Dependencies&lt;/h3&gt; 
&lt;p&gt;Lerna allows target versions of local dependent packages to be written as a &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;git remote url&lt;/a&gt; with a &lt;code&gt;committish&lt;/code&gt; (e.g., &lt;code&gt;#v1.0.0&lt;/code&gt; or &lt;code&gt;#semver:^1.0.0&lt;/code&gt;) instead of the normal numeric version range. This allows packages to be distributed via git repositories when packages must be private and a &lt;a href=&quot;https://www.dotconferences.com/2016/05/fabien-potencier-monolithic-repositories-vs-many-repositories&quot;&gt;private npm registry is not desired&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that lerna does &lt;em&gt;not&lt;/em&gt; perform the actual splitting of git history into the separate read-only repositories. This is the responsibility of the user. (See &lt;a href=&quot;https://github.com/lerna/lerna/pull/1033#issuecomment-335894690&quot;&gt;this comment&lt;/a&gt; for implementation details)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// packages/pkg-1/package.json
{
  name: &quot;pkg-1&quot;,
  version: &quot;1.0.0&quot;,
  dependencies: {
    &quot;pkg-2&quot;: &quot;github:example-user/pkg-2#v1.0.0&quot;
  }
}

// packages/pkg-2/package.json
{
  name: &quot;pkg-2&quot;,
  version: &quot;1.0.0&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example above,&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lerna bootstrap&lt;/code&gt; will properly symlink &lt;code&gt;pkg-2&lt;/code&gt; into &lt;code&gt;pkg-1&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lerna publish&lt;/code&gt; will update the committish (&lt;code&gt;#v1.0.0&lt;/code&gt;) in &lt;code&gt;pkg-1&lt;/code&gt; when &lt;code&gt;pkg-2&lt;/code&gt; changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;README Badge&lt;/h3&gt; 
&lt;p&gt;Using Lerna? Add a README badge to show it off: &lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Wizard&lt;/h3&gt; 
&lt;p&gt;If you prefer some guidance for cli (in case you&#39;re about to start using lerna or introducing it to a new team), you might like &lt;a href=&quot;https://github.com/szarouski/lerna-wizard&quot;&gt;lerna-wizard&lt;/a&gt;. It will lead you through a series of well-defined steps:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/szarouski/lerna-wizard/2e269fb5a3af7100397a1f874cea3fa78089486e/demo.png&quot; alt=&quot;lerna-wizard demo image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typescript-cheatsheets/react</title>
      <link>https://github.com/typescript-cheatsheets/react</link>
      <description>&lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;React+TypeScript Cheatsheets&lt;/h1&gt; 
 &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/81&quot;&gt; &lt;img height=&quot;90&quot; width=&quot;90&quot; alt=&quot;react + ts logo&quot; src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; align=&quot;left&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/setup&quot;&gt;&lt;strong&gt;Web docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn&quot;&gt;‰∏≠ÊñáÁøªËØë&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet-es&quot;&gt;&lt;strong&gt;Espa√±ol&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-pt&quot;&gt;&lt;strong&gt;Portugu√™s&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/CONTRIBUTING.md&quot;&gt;Contribute!&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;Ask!&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;span&gt;üëã&lt;/span&gt; This repo is maintained by &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ferdaber&quot;&gt;@ferdaber&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;@eps1lon&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jsjoeio&quot;&gt;@jsjoeio&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/_arvindone&quot;&gt;@arvind-one&lt;/a&gt;, we&#39;re so happy you want to try out TypeScript with React! If you see anything wrong or missing, please &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;file an issue&lt;/a&gt;! &lt;span&gt;üëç&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/wTGS5z9&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/508357248330760243.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;http://twitter.com/home?status=Awesome%20%40Reactjs%20%2B%20%40TypeScript%20cheatsheet%20by%20%40ferdaber%2C%20%40sebsilbermann%2C%20%40swyx%20%26%20others!%20https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?label=Help%20spread%20the%20word%21&amp;amp;style=social&amp;amp;url=https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;All React + TypeScript Cheatsheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;The Basic Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/README.md#basic-cheatsheet-table-of-contents&quot;&gt;&lt;code&gt;/README.md&lt;/code&gt;&lt;/a&gt;) is focused on helping React devs just start using TS in React &lt;strong&gt;apps&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Focus on opinionated best practices, copy+pastable examples.&lt;/li&gt; 
   &lt;li&gt;Explains some basic TS types usage and setup along the way.&lt;/li&gt; 
   &lt;li&gt;Answers the most Frequently Asked Questions.&lt;/li&gt; 
   &lt;li&gt;Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.&lt;/li&gt; 
   &lt;li&gt;The goal is to get effective with TS without learning &lt;em&gt;too much&lt;/em&gt; TS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Advanced Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro&quot;&gt;&lt;code&gt;/ADVANCED.md&lt;/code&gt;&lt;/a&gt;) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React &lt;strong&gt;libraries&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It also has miscellaneous tips and tricks for pro users.&lt;/li&gt; 
   &lt;li&gt;Advice for contributing to DefinitelyTyped.&lt;/li&gt; 
   &lt;li&gt;The goal is to take &lt;em&gt;full advantage&lt;/em&gt; of TypeScript.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Migrating Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/intro&quot;&gt;&lt;code&gt;/MIGRATING.md&lt;/code&gt;&lt;/a&gt;) helps collate advice for incrementally migrating large codebases from JS or Flow, &lt;strong&gt;from people who have done it&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;We do not try to convince people to switch, only to help people who have already decided.&lt;/li&gt; 
   &lt;li&gt;‚ö†Ô∏èThis is a new cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The HOC Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/hoc/intro&quot;&gt;&lt;code&gt;/HOC.md&lt;/code&gt;&lt;/a&gt;) specifically teaches people to write HOCs with examples. 
  &lt;ul&gt; 
   &lt;li&gt;Familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/generics.html&quot;&gt;Generics&lt;/a&gt; is necessary.&lt;/li&gt; 
   &lt;li&gt;‚ö†Ô∏èThis is the newest cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Basic Cheatsheet Table of Contents&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Expand Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-1-setup-typescript-with-react&quot;&gt;Section 1: Setup TypeScript with React&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usestate&quot;&gt;useState&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usereducer&quot;&gt;useReducer&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useeffect&quot;&gt;useEffect&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useref&quot;&gt;useRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useimperativehandle&quot;&gt;useImperativeHandle&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#you-may-not-need-defaultprops&quot;&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#consuming-props-of-a-component-with-defaultprops&quot;&gt;Consuming Props of a Component with defaultProps&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#problem-statement&quot;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#solution&quot;&gt;Solution&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#misc-discussions-and-knowledge&quot;&gt;Misc Discussions and Knowledge&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getderivedstatefromprops&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#extended-example&quot;&gt;Extended Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#option-1-using-react-error-boundary&quot;&gt;Option 1: Using react-error-boundary&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#options-2-writing-your-custom-error-boundary-component&quot;&gt;Options 2: Writing your custom error boundary component&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-types&quot;&gt;Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilities&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-fixing-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-globals-images-and-other-non-ts-files&quot;&gt;Troubleshooting Handbook: Globals, Images and other non-TS files&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources-1&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;!--START-SECTION:setup-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#vs-code-extensions&quot;&gt;VS Code Extensions&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#video-tutorial&quot;&gt;Video Tutorial&lt;/a&gt;
     &lt;!--END-SECTION:setup-toc--&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing defaultProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#types-or-interfaces&quot;&gt;Types or Interfaces?&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getDerivedStateFromProps&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-troubleshooting-handbook-types&quot;&gt;Basic Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;!--START-SECTION:types-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#frequent-known-problems-with-typescript&quot;&gt;Frequent Known Problems with TypeScript&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-narrow-after-an-object-element-null-check&quot;&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-let-you-restrict-the-type-of-children&quot;&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/a&gt;
       &lt;!--END-SECTION:types-toc--&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilties&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-codebases-to-learn-from&quot;&gt;Recommended React + TypeScript codebases to learn from&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;!--START-SECTION:setup--&gt; 
&lt;h1&gt;Section 1: Setup TypeScript with React&lt;/h1&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;good understanding of &lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html&quot;&gt;TypeScript Types&lt;/a&gt; (&lt;a href=&quot;http://2ality.com/2018/04/type-notation-typescript.html&quot;&gt;2ality&#39;s guide&lt;/a&gt; is helpful. If you‚Äôre an absolute beginner in TypeScript, check out &lt;a href=&quot;https://ts.chibicode.com/todo/&quot;&gt;chibicode‚Äôs tutorial&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;https://reactjs.org/docs/static-type-checking.html#typescript&quot;&gt;the TypeScript section in the official React docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=2&amp;amp;esModuleInterop=true&amp;amp;e=181#example/typescript-with-react&quot;&gt;the React section of the new TypeScript playground&lt;/a&gt; (optional: also step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This guide will always assume you are starting with the latest TypeScript version. Notes for older versions will be in expandable &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags.&lt;/p&gt; 
&lt;h2&gt;VS Code Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;refactoring help &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;R+TS Code Snippets (there are a few...) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&quot;&gt;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&quot;&gt;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;TypeScript official extension &lt;a href=&quot;https://code.visualstudio.com/docs/languages/typescript&quot;&gt;https://code.visualstudio.com/docs/languages/typescript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;React + TypeScript Starter Kits&lt;/h2&gt; 
&lt;p&gt;Cloud setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwCwAUKJLHAN5wCuqWAyjMhhYANFx4BRAgSz44AXzhES5Snhi1GjLAA8W8XBAB2qeAGEInQ0KjjtycABsscALxwAFAEpXAPnaM4OANjeABtA0sYUR4Yc0iAXVcxPgEhdwAGT3oGAOTJaXx3L19-BkDAgBMIXE4QLCsAOhhgGCckgAMATQsgh2BcAGssCrgAEjYIqwVmutR27MC5LM0yuEoYTihDD1zAgB4K4AA3H13yvbAfbs5e-qGRiYspuBmsVD2Aekuz-YAjThgMCMcCMpj6gxcbGKLj8MTiVnck3gAGo4ABGTxyU6rcrlMF3OB1H5wT7-QFGbG4z6HE65ZYMOSMIA&quot;&gt;TypeScript Playground with React&lt;/a&gt; just if you are debugging types (and reporting issues), not for running code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ts.react.new&quot;&gt;CodeSandbox&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackblitz.com/edit/react-typescript-base&quot;&gt;Stackblitz&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local dev setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/typescript&quot;&gt;Next.js&lt;/a&gt;: &lt;code&gt;npx create-next-app -e with-typescript&lt;/code&gt; will create in your current folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-typescript&quot;&gt;Create React App&lt;/a&gt;: &lt;code&gt;npx create-react-app name-of-app --template typescript&lt;/code&gt; will create in new folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/build-tool.html#typescript&quot;&gt;Meteor&lt;/a&gt;: &lt;code&gt;meteor create --typescript name-of-my-new-typescript-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infinitered/ignite#use-ignite-andross-infinite-red-andross-boilerplate&quot;&gt;Ignite&lt;/a&gt; for React Native: &lt;code&gt;ignite new myapp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsdx.io/&quot;&gt;TSDX&lt;/a&gt;: &lt;code&gt;npx tsdx create mylib&lt;/code&gt; for Creating React+TS &lt;em&gt;libraries&lt;/em&gt;. (in future: &lt;a href=&quot;https://twitter.com/jaredpalmer/status/1346217789942591488&quot;&gt;TurboRepo&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt; Other tools &lt;/summary&gt; 
 &lt;p&gt;Less mature tools still worth checking out:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1282727239230996480?lang=en&quot;&gt;Vite&lt;/a&gt;: &lt;code&gt;npm init vite-app my-react-project --template react-ts&lt;/code&gt; (note - not yet v1.0, but very fast)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/#create-snowpack-app-(csa)&quot;&gt;Snowpack&lt;/a&gt;: &lt;code&gt;npx create-snowpack-app my-app --template app-template-react-typescript&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.docusaurus.io/docs/installation&quot;&gt;Docusaurus v2&lt;/a&gt; with &lt;a href=&quot;https://v2.docusaurus.io/docs/typescript-support&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.parceljs.org/languages/typescript/&quot;&gt;Parcel&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jpmorganchase/modular&quot;&gt;JP Morgan&#39;s &lt;code&gt;modular&lt;/code&gt;&lt;/a&gt;: CRA + TS + Yarn Workspaces toolkit. &lt;code&gt;yarn create modular-react-app &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Manual setup:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/basarat/typescript-react/tree/master/01%20bootstrap&quot;&gt;Basarat&#39;s guide&lt;/a&gt; for &lt;strong&gt;manual setup&lt;/strong&gt; of React + TypeScript + Webpack + Babel&lt;/li&gt; 
  &lt;li&gt;In particular, make sure that you have &lt;code&gt;@types/react&lt;/code&gt; and &lt;code&gt;@types/react-dom&lt;/code&gt; installed (&lt;a href=&quot;https://definitelytyped.org/&quot;&gt;Read more about the DefinitelyTyped project if you are unfamiliar&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;There are also many React + TypeScript boilerplates, please see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/recommended/resources/&quot;&gt;our Other Resources list&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Import React&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;
import * as ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/&quot;&gt;most futureproof way&lt;/a&gt; to import React. If you set &lt;code&gt;--allowSyntheticDefaultImports&lt;/code&gt; (or add &lt;code&gt;&quot;allowSyntheticDefaultImports&quot;: true&lt;/code&gt;) in your &lt;code&gt;tsconfig.json&lt;/code&gt; you can use more familiar imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Explanation&lt;/summary&gt; 
 &lt;p&gt;Why &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; over &lt;code&gt;esModuleInterop&lt;/code&gt;? &lt;a href=&quot;https://twitter.com/drosenwasser/status/1003097042653073408&quot;&gt;Daniel Rosenwasser&lt;/a&gt; has said that it&#39;s better for webpack/parcel. For more discussion check out &lt;a href=&quot;https://github.com/wmonk/create-react-app-typescript/issues/214&quot;&gt;https://github.com/wmonk/create-react-app-typescript/issues/214&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;You should also check &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;the new TypeScript docs for official descriptions between each compiler flag&lt;/a&gt;!&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Video Tutorial&lt;/h2&gt; 
&lt;p&gt;Have a look at the 7-part &quot;React Typescript Course&quot; video series below for an introduction to TypeScript with React.&lt;/p&gt; 
&lt;a href=&quot;https://www.youtube.com/watch?v=PL1NUl7fQ2I&amp;amp;list=PLG-Mk4wQm9_LyKE5EwoZz2_GGXR-zJ5Ml&quot;&gt; &lt;img width=&quot;200px&quot; alt=&quot;react typescript course video series&quot; src=&quot;https://i.imgur.com/IIG0Xu9.jpeg&quot;&gt; &lt;/a&gt; 
&lt;!--END-SECTION:setup--&gt; 
&lt;h1&gt;Section 2: Getting Started&lt;/h1&gt; 
&lt;!--START-SECTION:function-components--&gt; 
&lt;h2&gt;Function Components&lt;/h2&gt; 
&lt;p&gt;These can be written as normal functions that take a &lt;code&gt;props&lt;/code&gt; argument and return a JSX element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// Declaring type of props - see &quot;Typing Component Props&quot; for more examples
type AppProps = {
  message: string;
}; /* use `interface` if exporting so that consumers can extend */

// Easiest way to declare a Function Component; return type is inferred.
const App = ({ message }: AppProps) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can choose annotate the return type so an error is raised if you accidentally return some other type
const App = ({ message }: AppProps): JSX.Element =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can also inline the type declaration; eliminates naming the prop types, but looks repetitive
const App = ({ message }: { message: string }) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tip: You might use &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;Paul Shen&#39;s VS Code Extension&lt;/a&gt; to automate the type destructure declaration (incl a &lt;a href=&quot;https://twitter.com/_paulshen/status/1392915279466745857?s=20&quot;&gt;keyboard shortcut&lt;/a&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why is `React.FC` discouraged? What about `React.FunctionComponent`/`React.VoidFunctionComponent`?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You may see this in many React+TypeScript codebases:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const App: React.FunctionComponent&amp;lt;{ message: string }&amp;gt; = ({ message }) =&amp;gt; (
  &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;However, the general consensus today is that &lt;code&gt;React.FunctionComponent&lt;/code&gt; (or the shorthand &lt;code&gt;React.FC&lt;/code&gt;) is &lt;a href=&quot;https://github.com/facebook/create-react-app/pull/8177&quot;&gt;discouraged&lt;/a&gt;. This is a nuanced opinion of course, but if you agree and want to remove &lt;code&gt;React.FC&lt;/code&gt; from your codebase, you can use &lt;a href=&quot;https://github.com/gndelia/codemod-replace-react-fc-typescript&quot;&gt;this jscodeshift codemod&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Some differences from the &quot;normal function&quot; version:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;React.FunctionComponent&lt;/code&gt; is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides typechecking and autocomplete for static properties like &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Note that there are some known issues using &lt;code&gt;defaultProps&lt;/code&gt; with &lt;code&gt;React.FunctionComponent&lt;/code&gt;. See &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;this issue for details&lt;/a&gt;. We maintain a separate &lt;code&gt;defaultProps&lt;/code&gt; section you can also look up.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides an implicit definition of &lt;code&gt;children&lt;/code&gt; (see below) - however there are some issues with the implicit &lt;code&gt;children&lt;/code&gt; type (e.g. &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006&quot;&gt;DefinitelyTyped#33006&lt;/a&gt;), and it might be better to be explicit about components that consume &lt;code&gt;children&lt;/code&gt;, anyway.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const Title: React.FunctionComponent&amp;lt;{ title: string }&amp;gt; = ({
  children,
  title,
}) =&amp;gt; &amp;lt;div title={title}&amp;gt;{children}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Using `React.VoidFunctionComponent` or `React.VFC` instead&lt;/summary&gt; 
  &lt;p&gt;As of &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643&quot;&gt;@types/react 16.9.48&lt;/a&gt;, you can also use &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; type if you want to type &lt;code&gt;children&lt;/code&gt; explicitly. This is an interim solution until &lt;code&gt;FunctionComponent&lt;/code&gt; will accept no children by default (planned for &lt;code&gt;@types/react@^18.0.0&lt;/code&gt;).&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}: Props) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo} {children}
    &amp;lt;/div&amp;gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo}
      {children}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;em&gt;In the future&lt;/em&gt;, it may&amp;nbsp;automatically mark props as &lt;code&gt;readonly&lt;/code&gt;, though that&#39;s a moot point if the props object is destructured in the parameter list.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of &lt;code&gt;React.FunctionComponent&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Minor Pitfalls&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;These patterns are not supported:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Conditional rendering&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyConditionalComponent = ({ shouldRender = false }) =&amp;gt;
  shouldRender ? &amp;lt;div /&amp;gt; : false; // don&#39;t do this in JS either
const el = &amp;lt;MyConditionalComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because due to limitations in the compiler, function components cannot return anything other than a JSX expression or &lt;code&gt;null&lt;/code&gt;, otherwise it complains with a cryptic error message saying that the other type is not assignable to &lt;code&gt;Element&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Array.fill&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; Array(5).fill(&amp;lt;div /&amp;gt;);
const el2 = &amp;lt;MyArrayComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Unfortunately just annotating the function type will not help so if you really need to return other exotic types that React supports, you&#39;d need to perform a type assertion:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; (Array(5).fill(&amp;lt;div /&amp;gt;) as any) as JSX.Element;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:function-components--&gt; 
&lt;!--START-SECTION:hooks--&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;Hooks are &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031&quot;&gt;supported in &lt;code&gt;@types/react&lt;/code&gt; from v16.8 up&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;useState&lt;/h2&gt; 
&lt;p&gt;Type inference works very well for simple values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [val, toggle] = React.useState(false);
// `val` is inferred to be a boolean
// `toggle` only takes booleans
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also the &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt; section if you need to use a complex type that you&#39;ve relied on inference for.&lt;/p&gt; 
&lt;p&gt;However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser | null&amp;gt;(null);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use type assertions if a state is initialized soon after setup and always has a value after:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser&amp;gt;({} as IUser);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This temporarily &quot;lies&quot; to the TypeScript compiler that &lt;code&gt;{}&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt;. You should follow up by setting the &lt;code&gt;user&lt;/code&gt; state ‚Äî if you don&#39;t, the rest of your code may rely on the fact that &lt;code&gt;user&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt; and that may lead to runtime errors.&lt;/p&gt; 
&lt;h2&gt;useReducer&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; for reducer actions. Don&#39;t forget to define the return type of reducer, otherwise TypeScript will infer it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = React.useReducer(reducer, initialState);
  return (
    &amp;lt;&amp;gt;
      Count: {state.count}
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&amp;gt;
        -
      &amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&amp;gt;
        +
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage with `Reducer` from `redux`&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;In case you use the &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt; library to write reducer function, It provides a convenient helper of the format &lt;code&gt;Reducer&amp;lt;State, Action&amp;gt;&lt;/code&gt; which takes care of the return type for you.&lt;/p&gt; 
 &lt;p&gt;So the above reducer example becomes:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Reducer } from &#39;redux&#39;;

export function reducer: Reducer&amp;lt;AppState, Action&amp;gt;() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useEffect / useLayoutEffect&lt;/h2&gt; 
&lt;p&gt;Both of &lt;code&gt;useEffect&lt;/code&gt; and &lt;code&gt;useLayoutEffect&lt;/code&gt; are used for performing &lt;b&gt;side effects&lt;/b&gt; and return an optional cleanup function which means they don&#39;t deal with returning values, no types are necessary. When using &lt;code&gt;useEffect&lt;/code&gt;, take care not to return anything other than a function or &lt;code&gt;undefined&lt;/code&gt;, otherwise both TypeScript and React will yell at you. This can be subtle when using arrow functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(
    () =&amp;gt;
      setTimeout(() =&amp;gt; {
        /* do stuff */
      }, timerMs),
    [timerMs]
  );
  // bad example! setTimeout implicitly returns a number
  // because the arrow function body isn&#39;t wrapped in curly braces
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Solution to the above example &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(() =&amp;gt; {
    setTimeout(() =&amp;gt; {
      /* do stuff */
    }, timerMs);
  }, [timerMs]);
  // better; use the void keyword to make sure you return undefined
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useRef&lt;/h2&gt; 
&lt;p&gt;In TypeScript, &lt;code&gt;useRef&lt;/code&gt; returns a reference that is either &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1025-L1039&quot;&gt;read-only&lt;/a&gt; or &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1012-L1023&quot;&gt;mutable&lt;/a&gt;, depends on whether your type argument fully covers the initial value or not. Choose one that suits your use case.&lt;/p&gt; 
&lt;h3&gt;Option 1: DOM element ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html&quot;&gt;To access a DOM element&lt;/a&gt;:&lt;/strong&gt; provide only the element type as argument, and use &lt;code&gt;null&lt;/code&gt; as initial value. In this case, the returned reference will have a read-only &lt;code&gt;.current&lt;/code&gt; that is managed by React. TypeScript expects you to give this ref to an element&#39;s &lt;code&gt;ref&lt;/code&gt; prop:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // - If possible, prefer as specific as possible. For example, HTMLDivElement
  //   is better than HTMLElement and way better than Element.
  // - Technical-wise, this returns RefObject&amp;lt;HTMLDivElement&amp;gt;
  const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null);

  useEffect(() =&amp;gt; {
    // Note that ref.current may be null. This is expected, because you may
    // conditionally render the ref-ed element, or you may forgot to assign it
    if (!divRef.current) throw Error(&quot;divRef is not assigned&quot;);

    // Now divRef.current is sure to be HTMLDivElement
    doSomethingWith(divRef.current);
  });

  // Give the ref to an element so React can manage it for you
  return &amp;lt;div ref={divRef}&amp;gt;etc&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are sure that &lt;code&gt;divRef.current&lt;/code&gt; will never be null, it is also possible to use the non-null assertion operator &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null!);
// Later... No need to check if it is null
doSomethingWith(divRef.current);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you are opting out of type safety here - you will have a runtime error if you forget to assign the ref to an element in the render, or if the ref-ed element is conditionally rendered.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;Tip: Choosing which &lt;code&gt;HTMLElement&lt;/code&gt; to use&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;Refs demand specificity - it is not enough to just specify any old &lt;code&gt;HTMLElement&lt;/code&gt;. If you don&#39;t know the name of the element type you need, you can check &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/v3.9.5/lib/lib.dom.d.ts#L19224-L19343&quot;&gt;lib.dom.ts&lt;/a&gt; or make an intentional type error and let the language service tell you:&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/116914284-1c436380-ac7d-11eb-9150-f52c571c5f07.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Option 2: Mutable value ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables&quot;&gt;To have a mutable value&lt;/a&gt;:&lt;/strong&gt; provide the type you want, and make sure the initial value fully belongs to that type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // Technical-wise, this returns MutableRefObject&amp;lt;number | null&amp;gt;
  const intervalRef = useRef&amp;lt;number | null&amp;gt;(null);

  // You manage the ref yourself (that&#39;s why it&#39;s called MutableRefObject!)
  useEffect(() =&amp;gt; {
    intervalRef.current = setInterval(...);
    return () =&amp;gt; clearInterval(intervalRef.current);
  }, []);

  // The ref is not passed to any element&#39;s &quot;ref&quot; prop
  return &amp;lt;button onClick={/* clearInterval the ref */}&amp;gt;Cancel timer&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;See also&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/388&quot;&gt;Related issue by @rajivpunjabi&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwCwAUI7hAHarwCCYYcAvHAAUASn4A+OAG9GjOHAD0CBLLnKGcxHABiwKBzgQwMYGxS4WUACbBWAczgwIcSxFwBXEFlYxkxtgDoVTQBJVmBjZAAbOAA3KLcsOAB3YEjogCNE1jc0-zgAGQBPG3tHOAAVQrAsAGVcKGAjOHTCuDdUErhWNgBabLSUVFQsWBNWA2qoX2hA9VU4AGFKXyx0AFk3H3TIxOwCOAB5dIArLHwgpHcoSm84MGJJmFbgdG74ZcsDVkjC2Y01f7yFQsdjvLAEACM-EwVBg-naWD2AB4ABLlNb5GpgZCsACiO083jEgn6kQAhMJ6HMQfpKJCFpE2IkBNg8HCEci0RisTj8VhCTBiaSKVSVIoAaoLnBQuFgFFYvFEikBpkujkMps4FgAB7VfCdLmY7F4gleOFwAByEHg7U63VYfXVg2Go1MhhG0ygf3mAHVUtF6jgYLtwUdTvguta4Bstjs9mGznCpVcbvB7u7YM90B8vj9vYgLkDqWxaeCAEzQ1n4eHDTnoo2801EknqykyObii5SmpnNifA5GMZmCzWOwOJwudwC3xjKUyiLROKRBLJf3NLJO9KanV64xj0koVifQ08k38s1Sv0DJZBxIx5DbRGhk6J5Nua5mu4PEZPOAvSNgsgnxsHmXZzIgRZyDSYIEAAzJWsI1k+BCovWp58gKcAAD5qmkQqtqKHbyCexoYRecw7IQugcAs76ptCdIQv4KZmoRcjyMRaGkU28A4aSKiUXAwwgpYtEfrcAh0mWzF0ax7bsZx3Lceetx8eqAlYPAMAABa6KJskSXAdKwTJ4kwGxCjyKy-bfK05SrDA8mWVagHAbZeScOY0CjqUE6uOgqDaRAOSfKqOYgb8KiMaZ9GSeCEIMkyMVyUwRHWYc7nSvAgUQEk6AjMQXpReWyWGdFLHeBZHEuTCQEZT8xVwaV8BxZCzUWZQMDvuMghBHASJVnCWhTLYApiH1chIqgxpGeCfCSIxAC+Yj3o+8YvvgSLyNNOLjeBGhTTNdLzVJy3reGMBbTtrB7RoB3XbNBAneCsHLatcbPhdV3GrdB1WYhw3IKNZq-W2DCLYRO7QPAljgsgORcDwVJAA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;Example from Stefan Baumgartner&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wFgAoCzAVwDsNgJa4AVJADxgElaxqYA6sBgALAGIQ01AM4AhfjCYAKAJRwA3hThwA9DrjBaw4CgA2waUjgB3YSLi1qp0wBo4AI35wYSZ6wCeYEgAymhQwGDw1lYoRHCmEBAA1oYA5nCY0HAozAASLACyADI8fDAAoqZIIEi0MFpwaEzS8IZllXAAvIjEMAB0MkjImAA8+cWl-JXVtTAAfEqOzioA3A1NtC1wTPIwirQAwuZoSV1wql1zGg3aenAt4RgOTqaNIkgn0g5ISAAmcDJvBA3h9TsBMAZeFNXjl-lIoEQ6nAOBZ+jddPpPPAmGgrPDEfAUS1pG5hAYvhAITBAlZxiUoRUqjU6m5RIDhOi7iIUF9RFYaqIIP9MlJpABCOCAUHJ0eDzm1oXAAGSKyHtUx9fGzNSacjaPWq6Ea6gI2Z9EUyVRrXV6gC+DRtVu0RBgxuYSnRIzm6O06h0ACpIdlfr9jExSQyOkxTP5GjkPFZBv9bKIDYSmbNpH04ABNFD+CV+nR2636kby+BETCddTlyo27w0zr4HycfC6L0lvUjLH7baHY5Jas7BRMI7AE42uYSUXed6pkY6HtMDulnQruCrCg2oA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;useImperativeHandle&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;We don&#39;t have much here, but this is from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/106&quot;&gt;a discussion in our issues&lt;/a&gt;. Please contribute if you have anything to add!&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ListProps&amp;lt;ItemType&amp;gt; = {
  items: ItemType[];
  innerRef?: React.Ref&amp;lt;{ scrollToItem(item: ItemType): void }&amp;gt;;
};

function List&amp;lt;ItemType&amp;gt;(props: ListProps&amp;lt;ItemType&amp;gt;) {
  useImperativeHandle(props.innerRef, () =&amp;gt; ({
    scrollToItem() {},
  }));
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Hooks&lt;/h2&gt; 
&lt;p&gt;If you are returning an array in your Custom Hook, you will want to avoid type inference as TypeScript will infer a union type (when you actually want different types in each position of the array). Instead, use &lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#const-assertions&quot;&gt;TS 3.4 const assertions&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?target=5&amp;amp;jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuRgZyQBkIKACbBmAcwAUASjgBvCnDhoO3eAG1g3AcNFiANHF4wAyjBQwkAXTgBeRMRgA6HklPmkEzCgA2vKQG4FJRV4b0EhWzgJFAAFHBBNJAAuODjcRIAeFGYATwA+GRs8uSDFIzcLCRgoRiQA0rgiGEYoTlj4xMdMUR9vHIlpW2Lys0qvXzr68kUAX0DpxqRm1rgNLXDdAzDhaxRuYOZVfzgAehO4UUwkKH21ACMICG9UZgMYHLAkCEw4baFrUSqVARb5RB5PF5wAA+cHen1BfykaksFBmQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This way, when you destructure you actually get the right types based on destructure position.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Alternative: Asserting a tuple return type&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you are &lt;a href=&quot;https://github.com/babel/babel/issues/9800&quot;&gt;having trouble with const assertions&lt;/a&gt;, you can also assert or define the function return types:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as [
    boolean,
    (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; Promise&amp;lt;any&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;A helper function that automatically types tuples can also be helpful if you write a lot of custom hooks:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function tuplify&amp;lt;T extends any[]&amp;gt;(...elements: T) {
  return elements;
}

function useArray() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return [numberValue, functionValue]; // type is (number | (() =&amp;gt; void))[]
}

function useTuple() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return tuplify(numberValue, functionValue); // type is [number, () =&amp;gt; void]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Note that the React team recommends that custom hooks that return more than two values should use proper objects instead of tuples, however.&lt;/p&gt; 
&lt;h2&gt;More Hooks + TypeScript reading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&quot;&gt;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;https://fettblog.eu/typescript-react/hooks/#useref&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are writing a React Hooks library, don&#39;t forget that you should also expose your types for users to use.&lt;/p&gt; 
&lt;h2&gt;Example React Hooks + TypeScript Libraries:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mweststrate/use-st8&quot;&gt;https://github.com/mweststrate/use-st8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/the-platform&quot;&gt;https://github.com/palmerhq/the-platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sw-yx/hooks&quot;&gt;https://github.com/sw-yx/hooks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:hooks--&gt; 
&lt;!--START-SECTION:class-components--&gt; 
&lt;h2&gt;Class Components&lt;/h2&gt; 
&lt;p&gt;Within TypeScript, &lt;code&gt;React.Component&lt;/code&gt; is a generic type (aka &lt;code&gt;React.Component&amp;lt;PropType, StateType&amp;gt;&lt;/code&gt;), so you want to provide it with (optional) prop and state type parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  // using `interface` is also ok
  message: string;
};
type MyState = {
  count: number; // like this
};
class App extends React.Component&amp;lt;MyProps, MyState&amp;gt; {
  state: MyState = {
    // optional second annotation for better type inference
    count: 0,
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgFlqAFHMAZzgF44BvCuHAD0QuAFd2wAHYBzOAANpMJFEzok8uME4oANuwhwIAawFwQSduxQykALjjsYUaTIDcFAL4fyNOo2oAZRgUZW4+MzQIMSkYBykxEAAjFTdhUV1gY3oYAAttLx80XRQrOABBMDA4JAAPZSkAE05kdBgAOgBhXEgpJFiAHiZWCA4AGgDg0KQAPgjyQSdphyYpsJ5+BcF0ozAYYAgpPUckKKa4FCkpCBD9w7hMaDgUmGUoOD96aUwVfrQkMyCKIxOJwAAMZm8ZiITRUAAoAJTzbZwIgwMRQKRwOGA7YDRrAABuM1xKN4eW07TAbHY7QsVhsSE8fAptKWynawNinlJcAGQgJxNxCJ8gh55E8QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Don&#39;t forget that you can export/import/extend these types/interfaces for reuse.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why annotate &lt;code&gt;state&lt;/code&gt; twice?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;It isn&#39;t strictly necessary to annotate the &lt;code&gt;state&lt;/code&gt; class property, but it allows better type inference when accessing &lt;code&gt;this.state&lt;/code&gt; and also initializing the state.&lt;/p&gt; 
 &lt;p&gt;This is because they work in two different ways, the 2nd generic type parameter will allow &lt;code&gt;this.setState()&lt;/code&gt; to work correctly, because that method comes from the base class, but initializing &lt;code&gt;state&lt;/code&gt; inside the component overrides the base implementation so you have to make sure that you tell the compiler that you&#39;re not actually doing anything different.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;No need for &lt;code&gt;readonly&lt;/code&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You often see sample code include &lt;code&gt;readonly&lt;/code&gt; to mark props and state immutable:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  readonly message: string;
};
type MyState = {
  readonly count: number;
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is not necessary as &lt;code&gt;React.Component&amp;lt;P,S&amp;gt;&lt;/code&gt; already marks them as immutable. (&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26813&quot;&gt;See PR and discussion!&lt;/a&gt;)&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Class Methods&lt;/strong&gt;: Do it like normal, but just remember any arguments for your functions also need to be typed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{ message: string }, { count: number }&amp;gt; {
  state = { count: 0 };
  render() {
    return (
      &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
  increment = (amt: number) =&amp;gt; {
    // like this
    this.setState((state) =&amp;gt; ({
      count: state.count + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN5wQSBigDmSAFxw6MKMB5q4AXwA0cRWggBXHjG09rIAEZIoJgHwWKcHTBTccAC8FnBWtvZwAAwmANw+cET8bgAUAJTe5L6+RDDWUDxwKQnZcLJ8wABucBA8YtTAaADWQfLpwV4wABbAdCIGaETKdikAjGnGHiWlFt29ImA4YH3KqhrGsz19ugFIIuF2xtO+sgD0FZVTWdlp8ddH1wNDMsFFKCCRji5uGUFe8tNTqc4A0mkg4HM6NNISI6EgYABlfzcFI7QJ-IoA66lA6RNF7XFwADUcHeMGmxjStwSxjuxiAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Class Properties&lt;/strong&gt;: If you need to declare class properties for later use, just declare it like &lt;code&gt;state&lt;/code&gt;, but without assignment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  pointer: number; // like this
  componentDidMount() {
    this.pointer = 3;
  }
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} and {this.pointer}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN4U4cEEgYoA5kgBccOjCjAeGgNwUAvgD44i8sshHuUXTwCuIAEZIoJuAHo-OGpgAGskOBgAC2A6JTg0SQhpHhgAEWA+AFkIVxSACgBKGzjlKJiRBxTvOABeOABmMzs4cziifm9C4ublIhhXKB44PJLlOFk+YAA3S1GxmzK6CpwwJdV1LXM4FH4F6KXKp1aesdk-SZnRgqblY-MgA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Typing getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be implemented using hooks which can also help set up memoization.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:class-components--&gt; 
&lt;!--START-SECTION:default-props--&gt; 
&lt;h2&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As per &lt;a href=&quot;https://twitter.com/dan_abramov/status/1133878326358171650&quot;&gt;this tweet&lt;/a&gt;, defaultProps will eventually be deprecated. You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/hswolff/status/1133759319571345408&quot;&gt;https://twitter.com/hswolff/status/1133759319571345408&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The consensus is to use object default values.&lt;/p&gt; 
&lt;p&gt;Function Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age?: number };

const Greet = ({ age = 21 }: GreetProps) =&amp;gt; // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Class Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = {
  age?: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  render() {
    const { age = 21 } = this.props;
    /*...*/
  }
}

let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Type inference improved greatly for &lt;code&gt;defaultProps&lt;/code&gt; in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0+&lt;/a&gt;, although &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61&quot;&gt;some edge cases are still problematic&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Function Components&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// using typeof as a shortcut; note that it hoists!
// you can also declare the type of DefaultProps if you choose
// e.g. https://github.com/typescript-cheatsheets/react/issues/415#issuecomment-841223219
type GreetProps = { age: number } &amp;amp; typeof defaultProps;

const defaultProps = {
  age: 21,
};

const Greet = (props: GreetProps) =&amp;gt; {
  // etc
};
Greet.defaultProps = defaultProps;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAOKVYwAKxY6ALxwA3igDmWAFxwAdgFcQAIyxQ4AXzgAyOM1YQCcACZYCyeQBte-VPVwRZqeCbOXrEAXGEi6cCdLgAJgBGABo6dXo6e0d4TixuLzgACjAbGXjuPg9UAEovAD5RXzhKGHkoWTgAHiNgADcCkTScgDpkSTgAeiQFZVVELvVqrrrGiPpMmFaXcytsz2FZtwXbOiA&quot;&gt;See this in TS Playground&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Class components&lt;/strong&gt;, there are &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/103#issuecomment-481061483&quot;&gt;a couple ways to do it&lt;/a&gt; (including using the &lt;code&gt;Pick&lt;/code&gt; utility type) but the recommendation is to &quot;reverse&quot; the props definition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = typeof Greet.defaultProps &amp;amp; {
  age: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = {
    age: 21,
  };
  /*...*/
}

// Type-checks! No type assertions needed!
let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; nuance for library authors&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;The above implementations work fine for App creators, but sometimes you want to be able to export &lt;code&gt;GreetProps&lt;/code&gt; so that others can consume it. The problem here is that the way &lt;code&gt;GreetProps&lt;/code&gt; is defined, &lt;code&gt;age&lt;/code&gt; is a required prop when it isn&#39;t because of &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;The insight to have here is that &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/66#issuecomment-453878710&quot;&gt;&lt;code&gt;GreetProps&lt;/code&gt; is the &lt;em&gt;internal&lt;/em&gt; contract for your component, not the &lt;em&gt;external&lt;/em&gt;, consumer facing contract&lt;/a&gt;. You could create a separate type specifically for export, or you could make use of the &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; utility:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// internal contract, should not be exported out
type GreetProps = {
  age: number;
};

class Greet extends Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = { age: 21 };
}

// external contract
export type ApparentGreetProps = JSX.LibraryManagedAttributes&amp;lt;
  typeof Greet,
  GreetProps
&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will work properly, although hovering over&lt;code&gt;ApparentGreetProps&lt;/code&gt;may be a little intimidating. You can reduce this boilerplate with the&lt;code&gt;ComponentProps&lt;/code&gt; utility detailed below.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Consuming Props of a Component with defaultProps&lt;/h2&gt; 
&lt;p&gt;A component with &lt;code&gt;defaultProps&lt;/code&gt; may seem to have some required props that actually aren&#39;t.&lt;/p&gt; 
&lt;h3&gt;Problem Statement&lt;/h3&gt; 
&lt;p&gt;Here&#39;s what you want to do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface IProps {
  name: string;
}
const defaultProps = {
  age: 25,
};
const GreetComponent = ({ name, age }: IProps &amp;amp; typeof defaultProps) =&amp;gt; (
  &amp;lt;div&amp;gt;{`Hello, my name is ${name}, ${age}`}&amp;lt;/div&amp;gt;
);
GreetComponent.defaultProps = defaultProps;

const TestComponent = (props: React.ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// Property &#39;age&#39; is missing in type &#39;{ name: string; }&#39; but required in type &#39;{ age: number; }&#39;
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Solution&lt;/h3&gt; 
&lt;p&gt;Define a utility that applies &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ComponentProps&amp;lt;T&amp;gt; = T extends
  | React.ComponentType&amp;lt;infer P&amp;gt;
  | React.Component&amp;lt;infer P&amp;gt;
  ? JSX.LibraryManagedAttributes&amp;lt;T, P&amp;gt;
  : never;

const TestComponent = (props: ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// No error
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAMImQB2W3MABWJhUAHgAqAPjgBeOOLhYAHjD4ATdNjwwAdJ3ARe-cSyyjg3AlihwB0gD6Yqu-Tz4xzl67cl04cAH44ACkAZQANHQAZYAAjKGQoJgBZZG5kAHMsNQBBGBgoOIBXVTFxABofPzgALjheADdrejoLVSgCPDYASSEIETgAb2r0kCw61AKLDPoAXzpcQ0m4NSxOooAbQWF0OWH-TPG4ACYAVnK6WfpF7mWAcUosGFdDd1k4AApB+uQxysO4LM6r0dnAAGRwZisCAEFZrZCbbb9VAASlk0g+1VEamADUkgwABgAJLAbDYQSogJg-MZwYDoAAkg1GWFmlSZh1mBNmogA9Di8XQUfQHlgni8jLpVustn0BnJpQjZTsWrzeXANsh2gwbstxFhJhK3nIPmAdnUjfw5WIoVgYXBReKuK9+JI0TJpPs4JQYEUoNw4KIABYARjgvN8VwYargADkIIooMQoAslvBSe8JAbns7JTSsDIyAQIBAyOHJDQgA&quot;&gt;&lt;em&gt;See this in TS Playground&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Misc Discussions and Knowledge&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does React.FC break defaultProps?&lt;/summary&gt; 
 &lt;p&gt;You can check the discussions here:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&quot;&gt;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&quot;&gt;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;This is just the current state and may be fixed in future.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;TypeScript 2.9 and earlier&lt;/summary&gt; 
 &lt;p&gt;For TypeScript 2.9 and earlier, there&#39;s more than one way to do it, but this is the best advice we&#39;ve yet seen:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = Required&amp;lt;typeof MyComponent.defaultProps&amp;gt; &amp;amp; {
  /* additional props here */
};

export class MyComponent extends React.Component&amp;lt;Props&amp;gt; {
  static defaultProps = {
    foo: &quot;foo&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Our former recommendation used the &lt;code&gt;Partial type&lt;/code&gt; feature in TypeScript, which means that the current interface will fulfill a partial version on the wrapped interface. In that way we can extend defaultProps without any changes in the types!&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface IMyComponentProps {
  firstProp?: string;
  secondProp: IPerson[];
}

export class MyComponent extends React.Component&amp;lt;IMyComponentProps&amp;gt; {
  public static defaultProps: Partial&amp;lt;IMyComponentProps&amp;gt; = {
    firstProp: &quot;default&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The problem with this approach is it causes complex issues with the type inference working with &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;. Basically it causes the compiler to think that when creating a JSX expression with that component, that all of its props are optional.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt; and &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/61&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:default-props--&gt; 
&lt;!--START-SECTION:basic-type-examples--&gt; 
&lt;h2&gt;Typing Component Props&lt;/h2&gt; 
&lt;p&gt;This is intended as a basic orientation and reference for React developers familiarizing with TypeScript.&lt;/p&gt; 
&lt;h2&gt;Basic Prop Types Examples&lt;/h2&gt; 
&lt;p&gt;A list of TypeScript types you will likely use in a React+TypeScript app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = {
  message: string;
  count: number;
  disabled: boolean;
  /** array of a type! */
  names: string[];
  /** string literals to specify exact string values, with a union type to join them together */
  status: &quot;waiting&quot; | &quot;success&quot;;
  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */
  obj: object;
  obj2: {}; // almost the same as `object`, exactly the same as `Object`
  /** an object with any number of properties (PREFERRED) */
  obj3: {
    id: string;
    title: string;
  };
  /** array of objects! (common) */
  objArr: {
    id: string;
    title: string;
  }[];
  /** a dict object with any number of properties of the same type */
  dict1: {
    [key: string]: MyTypeHere;
  };
  dict2: Record&amp;lt;string, MyTypeHere&amp;gt;; // equivalent to dict1
  /** any function as long as you don&#39;t invoke it (not recommended) */
  onSomething: Function;
  /** function that doesn&#39;t take or return anything (VERY COMMON) */
  onClick: () =&amp;gt; void;
  /** function with named prop (VERY COMMON) */
  onChange: (id: number) =&amp;gt; void;
  /** alternative function type syntax that takes an event (VERY COMMON) */
  onClick(event: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void;
  /** an optional prop (VERY COMMON!) */
  optional?: OptionalType;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we have used the TSDoc &lt;code&gt;/** comment */&lt;/code&gt; style here on each prop. You can and are encouraged to leave descriptive comments on reusable components. For a fuller example and discussion, see our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/misc_concerns/#commenting-components&quot;&gt;Commenting Components&lt;/a&gt; section in the Advanced Cheatsheet.&lt;/p&gt; 
&lt;h2&gt;Useful React Prop Type Examples&lt;/h2&gt; 
&lt;p&gt;Relevant for components that accept other React components as props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare interface AppProps {
  children1: JSX.Element; // bad, doesnt account for arrays
  children2: JSX.Element | JSX.Element[]; // meh, doesn&#39;t accept strings
  children3: React.ReactChildren; // despite the name, not at all an appropriate type; it is a utility
  children4: React.ReactChild[]; // better, accepts array children
  children: React.ReactNode; // best, accepts everything (see edge case below)
  functionChildren: (name: string) =&amp;gt; React.ReactNode; // recommended function as a child render prop type
  style?: React.CSSProperties; // to pass through style props
  onChange?: React.FormEventHandler&amp;lt;HTMLInputElement&amp;gt;; // form events! the generic parameter is the type of event.target
  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring
  props: Props &amp;amp; React.ComponentPropsWithoutRef&amp;lt;&quot;button&quot;&amp;gt;; // to impersonate all the props of a button element and explicitly not forwarding its ref
  props2: Props &amp;amp; React.ComponentPropsWithRef&amp;lt;MyButtonWithForwardRef&amp;gt;; // to impersonate all the props of MyButtonForwardedRef and explicitly forwarding its ref
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Small `React.ReactNode` edge case &lt;/summary&gt; 
 &lt;p&gt;This code typechecks but has a runtime error:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = {
  children: React.ReactNode;
};

function Comp({ children }: Props) {
  return &amp;lt;div&amp;gt;{children}&amp;lt;/div&amp;gt;;
}
function App() {
  return &amp;lt;Comp&amp;gt;{{}}&amp;lt;/Comp&amp;gt;; // Runtime Error: Objects not valid as React Child!
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because &lt;code&gt;ReactNode&lt;/code&gt; includes &lt;code&gt;ReactFragment&lt;/code&gt; which allows a &lt;code&gt;{}&lt;/code&gt; type, which is &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37596#issue-480260937&quot;&gt;too wide&lt;/a&gt;. Fixing this would break a lot of libraries, so for now you just have to be mindful that &lt;code&gt;ReactNode&lt;/code&gt; is not absolutely bulletproof.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/357&quot;&gt;Thanks @pomle for raising this.&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;JSX.Element vs React.ReactNode?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Quote &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;@ferdaber&lt;/a&gt;: A more technical explanation is that a valid React node is not the same thing as what is returned by &lt;code&gt;React.createElement&lt;/code&gt;. Regardless of what a component ends up rendering, &lt;code&gt;React.createElement&lt;/code&gt; always returns an object, which is the &lt;code&gt;JSX.Element&lt;/code&gt; interface, but &lt;code&gt;React.ReactNode&lt;/code&gt; is the set of all possible return values of a component.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;JSX.Element&lt;/code&gt; -&amp;gt; Return value of &lt;code&gt;React.createElement&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;React.ReactNode&lt;/code&gt; -&amp;gt; Return value of a component&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/129&quot;&gt;More discussion: Where ReactNode does not overlap with JSX.Element&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Types or Interfaces?&lt;/h2&gt; 
&lt;p&gt;You can use either Types or Interfaces to type Props and State, so naturally the question arises - which do you use?&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Use Interface until You Need Type - &lt;a href=&quot;https://twitter.com/orta/status/1356129195835973632?s=20&quot;&gt;orta&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;More Advice&lt;/h3&gt; 
&lt;p&gt;Here&#39;s a helpful rule of thumb:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;always use &lt;code&gt;interface&lt;/code&gt; for public API&#39;s definition when authoring a library or 3rd party ambient type definitions, as this allows a consumer to extend them via &lt;em&gt;declaration merging&lt;/em&gt; if some definitions are missing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consider using &lt;code&gt;type&lt;/code&gt; for your React Component Props and State, for consistency and because it is more constrained.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read more about the reasoning behind this rule of thumb in &lt;a href=&quot;https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c&quot;&gt;Interface vs Type alias in TypeScript 2.7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The TypeScript Handbook now also includes guidance on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces&quot;&gt;Differences Between Type Aliases and Interfaces&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: At scale, there are performance reasons to prefer interfaces (&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance#preferring-interfaces-over-intersections&quot;&gt;see official Microsoft notes on this&lt;/a&gt;) but &lt;a href=&quot;https://news.ycombinator.com/item?id=25201887&quot;&gt;take this with a grain of salt&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Types are useful for union types (e.g. &lt;code&gt;type MyType = TypeA | TypeB&lt;/code&gt;) whereas Interfaces are better for declaring dictionary shapes and then &lt;code&gt;implementing&lt;/code&gt; or &lt;code&gt;extending&lt;/code&gt; them.&lt;/p&gt; 
&lt;h3&gt;Useful table for Types vs Interfaces&lt;/h3&gt; 
&lt;p&gt;It&#39;s a nuanced topic, don&#39;t get too hung up on it. Here&#39;s a handy table:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Aspect&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Type&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Interface&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe functions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe constructors&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe tuples&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Interfaces can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚ö†Ô∏è&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;üö´&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can implement it (&lt;code&gt;implements&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚ö†Ô∏è&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can intersect another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚ö†Ô∏è&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can create a union with another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;üö´&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be used to create mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;üö´&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be mapped over with mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expands in error messages and logs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;üö´&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be augmented&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;üö´&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be recursive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚ö†Ô∏è&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;‚ö†Ô∏è In some cases&lt;/p&gt; 
&lt;p&gt;(source: &lt;a href=&quot;https://twitter.com/karoljmajewski/status/1082413696075382785&quot;&gt;Karol Majewski&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:basic-type-examples--&gt; 
&lt;!--START-SECTION:get-derived-state-from-props--&gt; 
&lt;h2&gt;getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be easily achieved using hooks which can also help set up memoization easily.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:get-derived-state-from-props--&gt; 
&lt;!--START-SECTION:forms-and-events--&gt; 
&lt;h2&gt;Forms and Events&lt;/h2&gt; 
&lt;p&gt;If performance is not an issue (and it usually isn&#39;t!), inlining handlers is easiest as you can just use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing&quot;&gt;type inference and contextual typing&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const el = (
  &amp;lt;button
    onClick={(event) =&amp;gt; {
      /* event will be correctly typed automatically! */
    }}
  /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you need to define your event handler separately, IDE tooling really comes in handy here, as the @type definitions come with a wealth of typing. Type what you are looking for and usually the autocomplete will help you out. Here is what it looks like for an &lt;code&gt;onChange&lt;/code&gt; for a form event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type State = {
  text: string;
};
class App extends React.Component&amp;lt;Props, State&amp;gt; {
  state = {
    text: &quot;&quot;,
  };

  // typing on RIGHT hand side of =
  onChange = (e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void =&amp;gt; {
    this.setState({ text: e.currentTarget.value });
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.text} onChange={this.onChange} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2KA9Drg8IcMDjB1tcblwBccOjCjAeAcwDcmlRQB8W8ovso3HAAvL6KilYwtgBE0R7ulH5wepYAnmBOznAQPIgAkgDiABIAKnAAFij8dsB8SNmYIZo5YpUu9aEAFEi2QhgiAGLQIACiAG4ysqUAsgAyeTxgAK4wI9RIIDJeAJS2YxC1IT5KFjDlwHQidEgwAMowgUidSpacUewiaEtQRDwwJSgoM4biIxihqEt6iptglFCpYXBfnUoJ1tmFwkQYN9cp0LIpZHxgGMvHjwrInMt4DB0khgtFItE4GCIbSlGcLlcHtwRJEVNkeK0qsDgmzzpcWm1gXydCSkuE4LIdITiRYYR4KCogA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Instead of typing the arguments and return values with &lt;code&gt;React.FormEvent&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt;, you may alternatively apply types to the event handler itself (&lt;em&gt;contributed by @TomasHubelbauer&lt;/em&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;  // typing on LEFT hand side of =
  onChange: React.ChangeEventHandler&amp;lt;HTMLInputElement&amp;gt; = (e) =&amp;gt; {
    this.setState({text: e.currentTarget.value})
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why two ways to do the same thing?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The first method uses an inferred method signature &lt;code&gt;(e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void&lt;/code&gt; and the second method enforces a type of the delegate provided by &lt;code&gt;@types/react&lt;/code&gt;. So &lt;code&gt;React.ChangeEventHandler&amp;lt;&amp;gt;&lt;/code&gt; is simply a &quot;blessed&quot; typing by &lt;code&gt;@types/react&lt;/code&gt;, whereas you can think of the inferred method as more... &lt;em&gt;artisanally hand-rolled&lt;/em&gt;. Either way it&#39;s a good pattern to know. &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/24&quot;&gt;See our Github PR for more&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Typing onSubmit, with Uncontrolled components in a Form&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you don&#39;t quite care about the type of the event, you can just use React.SyntheticEvent. If your target form has custom named inputs that you&#39;d like to access, you can use a type assertion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;form
  ref={formRef}
  onSubmit={(e: React.SyntheticEvent) =&amp;gt; {
    e.preventDefault();
    const target = e.target as typeof e.target &amp;amp; {
      email: { value: string };
      password: { value: string };
    };
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    // etc...
  }}
&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Email:
      &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Password:
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Log in&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGctoRlM4BeRYmAOgFc6kLABQBKClVoM4AMSbs4o9gD4FFOHAA8mJmrhFMbAN7aozJJgC+u2gGVeAIxDAYRoUgBcndDxsBPGjAAFkgwwGgAogBuSAEiynCGuupI3GBE0QEAIuYovAA2MKIA3Elw1PTwMChQAOYh8ilVtfUodHAwvmBIEKyN1XXwAGQJpckgKMB5noZwkSh5vB5wDFDANDVwFiXk6rtwYK10AO7QACbTs-OLnitrG1ulDzu75VJI45PyTQPc7xN53DmCyQRTgAHowe1Okg0ME0ABrOgAQlKr3gBzoxzOX36IVShxOUFOgKuIPBkI6XVhMMRKOe6ghcBCaG4rN0Fis5CUug0p2AkW59M0eRQ9iQeUFe3U4Q+U1GmjWYF4lWhbAARH9Jmq4DQUCAkOrNXltWDJbsNGCRWKJTywXyBTz7Wb1BoreLnbsAAoEs7ueUaRXKqFddUYrFE7W6-Whn0R8Eei1um3PC1Ox38hOBlUhtV0BxOGDaoGLdUAGQgGzWJrNqYzFAtJhAgpEQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Of course, if you&#39;re making any sort of significant form, &lt;a href=&quot;https://jaredpalmer.com/formik&quot;&gt;you should use Formik&lt;/a&gt; or &lt;a href=&quot;https://react-hook-form.com/&quot;&gt;React Hook Form&lt;/a&gt;, which are written in TypeScript.&lt;/p&gt; 
&lt;h3&gt;List of event types&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Event Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AnimationEvent&lt;/td&gt; 
   &lt;td&gt;CSS Animations.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChangeEvent&lt;/td&gt; 
   &lt;td&gt;Changing the value of &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ClipboardEvent&lt;/td&gt; 
   &lt;td&gt;Using copy, paste and cut events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CompositionEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user indirectly entering text (e.g. depending on Browser and PC setup, a popup window may appear with additional characters if you e.g. want to type Japanese on a US Keyboard)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DragEvent&lt;/td&gt; 
   &lt;td&gt;Drag and drop interaction with a pointer device (e.g. mouse).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FocusEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs when elements gets or loses focus.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FormEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs whenever a form or form element gets/loses focus, a form element value is changed or the form is submitted.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;InvalidEvent&lt;/td&gt; 
   &lt;td&gt;Fired when validity restrictions of an input fails (e.g &lt;code&gt;&amp;lt;input type=&quot;number&quot; max=&quot;10&quot;&amp;gt;&lt;/code&gt; and someone would insert number 20).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KeyboardEvent&lt;/td&gt; 
   &lt;td&gt;User interaction with the keyboard. Each event describes a single key interaction.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MouseEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a pointing device (e.g. mouse)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PointerEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to user interaction with a variety pointing of devices such as mouse, pen/stylus, a touchscreen and which also supports multi-touch. Unless you develop for older browsers (IE10 or Safari 12), pointer events are recommended. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TouchEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a touch device. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TransitionEvent&lt;/td&gt; 
   &lt;td&gt;CSS Transition. Not fully browser supported. Extends UIEvent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIEvent&lt;/td&gt; 
   &lt;td&gt;Base Event for Mouse, Touch and Pointer events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WheelEvent&lt;/td&gt; 
   &lt;td&gt;Scrolling on a mouse wheel or similar input device. (Note: &lt;code&gt;wheel&lt;/code&gt; event should not be confused with the &lt;code&gt;scroll&lt;/code&gt; event)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyntheticEvent&lt;/td&gt; 
   &lt;td&gt;The base event for all above events. Should be used when unsure about event type&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;strong&gt;What about &lt;code&gt;InputEvent&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;You&#39;ve probably noticed that there is no &lt;code&gt;InputEvent&lt;/code&gt;. This is because it is not supported by Typescript as the event itself has no fully browser support and may behave differently in different browsers. You can use &lt;code&gt;KeyboardEvent&lt;/code&gt; instead.&lt;/p&gt; 
 &lt;p&gt;Sources:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/29441&quot;&gt;https://github.com/microsoft/TypeScript/issues/29441&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:forms-and-events--&gt; 
&lt;!--START-SECTION:context--&gt; 
&lt;h2&gt;Context&lt;/h2&gt; 
&lt;h2&gt;Basic Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

interface AppContextInterface {
  name: string;
  author: string;
  url: string;
}

const AppCtx = React.createContext&amp;lt;AppContextInterface | null&amp;gt;(null);

// Provider in your app

const sampleAppContext: AppContextInterface = {
  name: &quot;Using React Context in a Typescript App&quot;,
  author: &quot;thehappybug&quot;,
  url: &quot;http://www.example.com&quot;,
};

export const App = () =&amp;gt; (
  &amp;lt;AppCtx.Provider value={sampleAppContext}&amp;gt;...&amp;lt;/AppCtx.Provider&amp;gt;
);

// Consume in your app

export const PostInfo = () =&amp;gt; {
  const appContext = React.useContext(AppCtx);
  return (
    &amp;lt;div&amp;gt;
      Name: {appContext.name}, Author: {appContext.author}, Url:{&quot; &quot;}
      {appContext.url}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://reactjs.org/docs/context.html#classcontexttype&quot;&gt;Class.contextType&lt;/a&gt; or &lt;a href=&quot;https://reactjs.org/docs/context.html#contextconsumer&quot;&gt;Context.Consumer&lt;/a&gt; API, let us know if you have trouble with that.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/97&quot;&gt;Thanks to @AlvSovereign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Extended Example&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; with an empty object as default value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ContextState {
  // set the type of state you want to handle with context e.g.
  name: string | null;
}
//set an empty object as default state
const Context = React.createContext({} as ContextState);
// set up context provider as you normally would in JavaScript [React Context API](https://reactjs.org/docs/context.html#api)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;strong&gt;no &lt;code&gt;defaultValue&lt;/code&gt;, yet no need to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as React from &quot;react&quot;;

const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);

function EnthusasticGreeting() {
  const currentUser = React.useContext(currentUserContext);
  return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;currentUserContext.Provider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/currentUserContext.Provider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice the explicit type arguments which we need because we don&#39;t have a default &lt;code&gt;string&lt;/code&gt; value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);
//                                             ^^^^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;along with the non-null assertion to tell TypeScript that &lt;code&gt;currentUser&lt;/code&gt; is definitely going to be there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
//                              ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is unfortunate because &lt;em&gt;we know&lt;/em&gt; that later in our app, a &lt;code&gt;Provider&lt;/code&gt; is going to fill in the context.&lt;/p&gt; 
&lt;p&gt;There are a few solutions for this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can get around this by asserting non null:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string&amp;gt;(undefined!);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;a href=&quot;https://www.typescriptlang.org/play/index.html?jsx=1#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQduEAdqvLgK5SXMwCqqLFADCLGFgAe8ALyYqMAHS5KycaN6SYAHjZRgzAOYA+ABQdmAEywF9WCwEIAlPQLn8wFnACivABYdUNBhgXABxSixgwxNHOABvOjg4JlZ2Lh5+QSg4WWw8RQCsdXEpE05uLF4BIWLNZ0S4ShguZjgtC2AANyMACS8AGX6AeXjyjOqoBRgIPjAwGrQsGIBfey0Aeg7u+mW6V2Z3TwBBOZj4hqaWtrHKzJqxTQUABWJO4CtszuQAGw4saTIAGVfMgAO7MMhGBpJLQ+GD+QJsELhLCRfQGODrKEw9Y3KpZWpSZ6vd5CIw7IA&quot;&gt;Playground here&lt;/a&gt;) This is a quick and easy fix, but this loses type-safety, and if you forget to supply a value to the Provider, you will get an error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We can write a helper function called &lt;code&gt;createCtx&lt;/code&gt; that guards against accessing a &lt;code&gt;Context&lt;/code&gt; whose value wasn&#39;t provided. By doing this, API instead, &lt;strong&gt;we never have to provide a default and never have to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// Usage:

// We still have to specify a type, but no default!
export const [useCurrentUserName, CurrentUserProvider] = createCtx&amp;lt;string&amp;gt;();

function EnthusasticGreeting() {
  const currentUser = useCurrentUserName();
  return &amp;lt;div&amp;gt;HELLO {currentUser.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;CurrentUserProvider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/CurrentUserProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=1&amp;amp;ssl=1&amp;amp;ssc=1&amp;amp;pln=31&amp;amp;pc=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdA9AgnYnAIJwAWWANmCxQ4MCHFyVkMLCjgBhCADtpAD3jJFAEzgAFYgDdgmoXADuwGNziKxAVzBEl8YwWS2+8fcj62sAGhQtNiRzSwhbeG5kQ0UAcxExXF5cAGs4Amg4Wy0sAmBFLG1vPhFeEVAsADpgxjoCbPxgJXFJaTkYFQAeLiw1LC10AG8AXzgAH2t3PgA+AAoASjhBtnElVHh8FTgAXkwqGEqJHDanXphu8aycvILNOeyXfML5+jh0hpgmxSzULHaVBZLFZvXBrDY7PZ4A62X4KZRnWabF7AuDAAhwRE7ba7B65J6aRaWYimaxYEkAUSgxCgszIML+HTgIBh8AARjJ8qgjDJkLoDNzhKErLyvD4sGRkW83pQYLYoN9cK84MMVjK5d8ANr0-4BTaVPQQQzGKAAXRQ6FBinWNDgjEYcAA5GhVlaYA6mcgUlh0AAVACeggAyhJgGB4PkCCZebKwHwsHQVUx7QBVVDIWJYABcDDtcAA6jJ1sA+CUovoZKI4KhBLg0X7ZDAA-44KyItYxC43B4AIR0XqQWAu9ZwLWwuWUZSpoQAOWQIGbcnH-RgU6gBqNQjNuyOUgZXXWUHysTmyLqHy+cHJym4MLQn1wAHFKFhPnFAcsQWDxEvJ79hDixypZdV1necFiVNV5TgTpNGAfRpgACXJAAZZCAHkllwH8Vz-SpRGTMBBCgOQ0CwBZhm7TpGFg+D6ETepFEaZoOEI99VRfdVoMXIDfyEdcBTgUVfG2MhAyiUxFDIaYUU6K9LFvItH2fV94kYaS3io7iJxwvj+WNaY6KAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can go even further and combine this idea using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// usage

export const [useCtx, SettingProvider] = createCtx&amp;lt;string&amp;gt;(); // specify type, but no need to specify value upfront!
export function App() {
  const key = useCustomHook(&quot;key&quot;); // get a value from a hook, must be in a component
  return (
    &amp;lt;SettingProvider value={key}&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/SettingProvider&amp;gt;
  );
}
export function Component() {
  const key = useCtx(); // can still use without null check!
  return &amp;lt;div&amp;gt;{key}&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGd4BXOpAYWZlwAkIIBrOAF44ACj5IAngC44DKMBoBzAJRCAfHADeFOHGr14AbQYoYSADSykMAMoxTSALpDExGADpmSOw5GaAvso6cEQwjFA0svZmhuISjhT+FAD0yXpEDnq0ZgAe8ADuwDAAFnA0EHCMYNjZcAAmSJgojAA2MABqKC2MSClphSUQjPDFKABuCopwnPUVjDQNmApIdXrFSGgCXS3T69OgveSY8xjAtOmoZqwwOQA8AIJqIqra5Lr6DHo3LsjoHmgZK7ZJB5B5wAA+lQWjWWdSe80WsOUAG5gscaKdzl5rjlnlpgu9aJ80D83J4WKxgXkRBgciiCXBgJhRABCNCqEo4fJlJDcgCiUBwUBEACJsd8QBw4AAjJCM+jABpwFBwAAKOAmDSgcAGpRVYy6PRF9LeuhC1nCkTQqNNSVNoUtcEM4pyllp7nVEE1SCgzhQdCyBmRcFScBAKHEcAAKhIwN4AcAwPAFJgfcrplUWhYyhB4ChIihBSgJHAIMz5mdIjBY0g6IkKH1KnQUIpDhQQZBYIHPs6KTdLDZrDBJp7vb6XADLmwbrc5JMniiQ2k6HG0EyS9W45ZpcMczyVtMKiuNuu4AbunKqjUaDAWe2cp2sCdh+d7mAwHjXoSDHA4i5sRw3C8HwopxMawahq2eZnoaco1HgKrFMBliSp8sryum1DgLQSA3sEDoRKIDK3IOMDDkoo6Kmm549IImhxP4agMrotyUthNC4fAyRMaaLHJKR5GKJRWo8boJp2h20BPhiL6RGxkAcTen7BB88B-sILrPBBaRoPmUTAC0OxeDqRRIbuNCtDsaDrJsd72hahG3HUwBjGo9GSP4tzJM5rk2v4QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;a href=&quot;https://github.com/jamiebuilds/unstated&quot;&gt;&lt;code&gt;unstated&lt;/code&gt;&lt;/a&gt;-like context setters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function createCtx&amp;lt;A&amp;gt;(defaultValue: A) {
  type UpdateType = React.Dispatch&amp;lt;
    React.SetStateAction&amp;lt;typeof defaultValue&amp;gt;
  &amp;gt;;
  const defaultUpdate: UpdateType = () =&amp;gt; defaultValue;
  const ctx = React.createContext({
    state: defaultValue,
    update: defaultUpdate,
  });
  function Provider(props: React.PropsWithChildren&amp;lt;{}&amp;gt;) {
    const [state, update] = React.useState(defaultValue);
    return &amp;lt;ctx.Provider value={{ state, update }} {...props} /&amp;gt;;
  }
  return [ctx, Provider] as const; // alternatively, [typeof ctx, typeof Provider]
}

// usage

const [ctx, TextProvider] = createCtx(&quot;someText&quot;);
export const TextContext = ctx;
export function App() {
  return (
    &amp;lt;TextProvider&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/TextProvider&amp;gt;
  );
}
export function Component() {
  const { state, update } = React.useContext(TextContext);
  return (
    &amp;lt;label&amp;gt;
      {state}
      &amp;lt;input type=&quot;text&quot; onChange={(e) =&amp;gt; update(e.target.value)} /&amp;gt;
    &amp;lt;/label&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuNIlGJAYRjUAPAEEAfAAoAJkkwpGAGxgA1FIsZIAXHFEBKOAG8KcODACeYJHACqYabyQAVS9YC8iYjAB0AEWAAzmC8aAAWwsjoPgDKSDDRMI6ibBzCFlYQmHCy8kqq6pri4gDcJlwcAfA5Csp2Dnw6dY4uVnAekgZu4tlyNfkaSKXkpmgV8BjUbZ5R3tyofPwcfNQwksbDpnCVjjrVeWoDADRlpoz2Oz25ted8ZQC+ekOmTKww7JwACjgAbsCyUJIwDgwAEdJEMN4vhAQQB1YAwUL8ULARTSIjMYSGO7iAzrTblZiVOAAbW2fEOcDO9SQAF0puCfIwAkgEo4ZL19gUkI8TnAiDBGFBOMIJpCfn8kFA4N8uW5DIYtolyZSbtY7ncjN4tUDoQENQB6Er3Mr8wWcYkTClQ37-OkoAIEyrFOD6-VwdR8IW8YDfJCKcwU4npJCZLhCCnB0PWiVQGkUO4UCiuykBFAAcyQifIo0J8At4bgThoMGjtqmc0cgmokgARAFcM5izWeeQaHRxmNC8XFsxlvAPBMhm3oFgWClOKIwGAOkYTXEzXBJLzhEWVqXJeJeaZhItwBwkL2XZuNtv9auS+L-sfTC2E63aCOGGO3hw4LvIMwD6tcWUc0SFWSSAUlSjhwBqHgMt4TICEsxaSOePZ9i2pimkKi7LooKAAEZ+te+JGIBd74XAwjAMwYCMPAwZuDWfY1nAHBIigzAZnK7jdCBfCSEg3iJFAGY+DKAx6AaeGnphOGKHht5AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href=&quot;https://gist.github.com/sw-yx/f18fe6dd4c43fddb3a4971e80114a052&quot;&gt;useReducer-based version&lt;/a&gt; may also be helpful.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Mutable Context Using a Class component wrapper&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;em&gt;Contributed by: &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/13&quot;&gt;@jpavon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ProviderState {
  themeColor: string;
}

interface UpdateStateArg {
  key: keyof ProviderState;
  value: string;
}

interface ProviderStore {
  state: ProviderState;
  update: (arg: UpdateStateArg) =&amp;gt; void;
}

const Context = React.createContext({} as ProviderStore); // type assertion on empty object

class Provider extends React.Component&amp;lt;{}, ProviderState&amp;gt; {
  public readonly state = {
    themeColor: &quot;red&quot;,
  };

  private update = ({ key, value }: UpdateStateArg) =&amp;gt; {
    this.setState({ [key]: value });
  };

  public render() {
    const store: ProviderStore = {
      state: this.state,
      update: this.update,
    };

    return (
      &amp;lt;Context.Provider value={store}&amp;gt;{this.props.children}&amp;lt;/Context.Provider&amp;gt;
    );
  }
}

const Consumer = Context.Consumer;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:context--&gt; 
&lt;!--START-SECTION:forward-create-ref--&gt; 
&lt;h2&gt;forwardRef/createRef&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#hooks&quot;&gt;Hooks section&lt;/a&gt; for &lt;code&gt;useRef&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;createRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class CssThemeProvider extends React.PureComponent&amp;lt;Props&amp;gt; {
  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); // like this
  render() {
    return &amp;lt;div ref={this.rootRef}&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;forwardRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef&amp;lt;Ref, Props&amp;gt;((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;pre&gt;&lt;code&gt;Side note: the `ref` you get from `forwardRef` is mutable so you can assign to it if needed.
&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt; 
 &lt;p&gt;This was done &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43265/&quot;&gt;on purpose&lt;/a&gt;. You can make it immutable if you have to - assign &lt;code&gt;React.Ref&lt;/code&gt; if you want to ensure nobody reassigns it:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef((
  props: Props,
  ref: React.Ref&amp;lt;Ref&amp;gt; // &amp;lt;-- here!
) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;If you are grabbing the props of a component that forwards refs, use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More info: &lt;a href=&quot;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&quot;&gt;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to do &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/167&quot;&gt;Conditional Rendering with &lt;code&gt;forwardRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:forward-create-ref--&gt; 
&lt;!--START-SECTION:portals--&gt; 
&lt;h2&gt;Portals&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;ReactDOM.createPortal&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const modalRoot = document.getElementById(&quot;modal-root&quot;) as HTMLElement;
// assuming in your html file has a div with id &#39;modal-root&#39;;

export class Modal extends React.Component {
  el: HTMLElement = document.createElement(&quot;div&quot;);

  componentDidMount() {
    modalRoot.appendChild(this.el);
  }

  componentWillUnmount() {
    modalRoot.removeChild(this.el);
  }

  render() {
    return ReactDOM.createPortal(this.props.children, this.el);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWRYmAEQHkBZObXAo9GAWgBNcZchTQQAdgGd4ICHxQAbBBAjwAvHAFoAriCRiYAOgDmSGAFF5SXfoBCATwCSfABQAiGXPk8cK1wEo4FAk4AAkAFWYAGQsrPRgAbgoAeiTAiQkdYDEjOCy4OwgtKDgACxgQeTZgS1KgwI1gADc4AHdgGBLcvgIPBW9lGHxE4XIkAA9qeDR5IODmWQU4cZg9PmDkbgMAYVxIMTi4AG8KOCX5AC5QiOjLazUNCG07gzQuFZi7tz4m-2GTuFE4HEcXowD48y0+mcAWO5FOp16igGBhQYDAqy2JWqLg6wAkBiQ8j8w1OAF8KP9AXs4gB1aryACqYhkkJg0KO-wRCyRKgMRBkjSQmOxzlx+MJxP+5JGpyIYj4SCg7Nh8LgRBgRTEtG4TGYLzeSAACtAYApRVj8WAcGB8WgsfI+HKADRwMUEokkuDS0lAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using hooks&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Same as above but using hooks&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React, { useEffect, useRef } from &quot;react&quot;;
import { createPortal } from &quot;react-dom&quot;;

const modalRoot = document.querySelector(&quot;#modal-root&quot;) as HTMLElement;

const Modal: React.FC&amp;lt;{}&amp;gt; = ({ children }) =&amp;gt; {
  const el = useRef(document.createElement(&quot;div&quot;));

  useEffect(() =&amp;gt; {
    // Use this in case CRA throws an error about react-hooks/exhaustive-deps
    const current = el.current;

    // We assume `modalRoot` exists with &#39;!&#39;
    modalRoot!.appendChild(current);
    return () =&amp;gt; void modalRoot!.removeChild(current);
  }, []);

  return createPortal(children, el.current);
};

export default Modal;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOAbzjSJRiQAVoYUAbOAXzmy4CTDAFoAJrjLkKAellwUAZyUBXEMAB2Aczha4ATwiqocABYwQPTMC5JzyxXHHAAbnADuwGGb3iCIBDi3KI4EDD4ANwUFGgQmkrwALJB3ABciMQwAHQAYgDCADy0vAB8cAC8cAAU9GhmtuJEmnwAlJXltBRwcPJwAKIgqlzM9j72aCMqDLiQmkiaEUp6CZyaaPauKFDAKABGdp7evihwRJjdM6twSDxVyOg5qkpIyJjVkmjqCzmMqCz9OwgH7VABELlcoNarWiMnIPQeGGyzyQ-UwmCQGGq1XaFU6lx6fQA6vZlGpgXAAAaBYJcBAQcKUm4AD2AiWWXh8BAAhNIej04tcadx6eFKs4IF9gYtsgBHVRIKAGADKt0xMGgYIAxMKuKEGTAoYplgAJAAqSQAMoCkNKYLD+XBdaKYNzsigwGAFuJ8g0uOJqrdsl8oM0YDCCWckDATC0cR04K4IMB-M6DW6iIFXEhfY1A1xgyYwxH4XwADRwADaAF0S5c+gBJVaofwQTBU26UivjK6cLSKvTLHuU86F0M-SmXIgxqAtP6jdiwbjVeqNZoVoMh4uw3iwuQKZ4obRIGLkTCqdYwYDxOAAQU98a6pcFiSrSjMEA8KVpFZeMGVH5fqkXDVuKiJPC8yqcCw1SYNwLwlj006xjUkaFBCpSRoSChGKoDAoC08EQHAYCqPAPhsishjGKYiTMMAaDmJY1i2CepaOuhbh+BUoK6vq4SgqUhSyBhWF0O+n7ftwcAAGQyah7GOnAhRSVwmGKUpykQmJmmJAYdgVLQT6aSZzhsmAIwGBkoLaDs4igmWOkmRZ6BIA2LAgEo1kbIsioOU5mlmEgwDaBY1kAIwAAyRa4Zj+RpplHOIPgZPgUUxWY+COQlpl7OgADWtnGJo4jWVA2h5dUkVltVtXZOFrTxYlSkAF5NuISDMhkACc3XZc1PS8LwAVwOpA1wA2+B4KcurcrQoJwKCw05UphR7GRGotHpBlGXlaCFTgF6lYtYAegYKAeA0YBLfw8T5FwDH5YZ8Z4nAf4AZJwGwfBSCtGUkwQC8wnrTAm1jYlwmiStwmqeDjp-WJa0bTed0Pftz24uU72Aap1QwFACp-aUEkeHAqnA8jmhw-yfREK+bbUSYiiemhIluODrQULwQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Modal Component Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const [showModal, setShowModal] = React.useState(false);
  return (
    &amp;lt;div&amp;gt;
      // you can also put this in your static html file
      &amp;lt;div id=&quot;modal-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
      {showModal &amp;amp;&amp;amp; (
        &amp;lt;Modal&amp;gt;
          &amp;lt;div
            style={{
              display: &quot;grid&quot;,
              placeItems: &quot;center&quot;,
              height: &quot;100vh&quot;,
              width: &quot;100vh&quot;,
              background: &quot;rgba(0,0,0,0.1)&quot;,
              zIndex: 99,
            }}
          &amp;gt;
            I&#39;m a modal!{&quot; &quot;}
            &amp;lt;button
              style={{ background: &quot;papyawhip&quot; }}
              onClick={() =&amp;gt; setShowModal(false)}
            &amp;gt;
              close
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/Modal&amp;gt;
      )}
      &amp;lt;button onClick={() =&amp;gt; setShowModal(true)}&amp;gt;show Modal&amp;lt;/button&amp;gt;
      // rest of your app
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Context of Example&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;This example is based on the &lt;a href=&quot;https://reactjs.org/docs/portals.html#event-bubbling-through-portals&quot;&gt;Event Bubbling Through Portal&lt;/a&gt; example of React docs.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:portals--&gt; 
&lt;!--START-SECTION:error-boundaries--&gt; 
&lt;h2&gt;Error Boundaries&lt;/h2&gt; 
&lt;h3&gt;Option 1: Using react-error-boundary&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bvaughn/react-error-boundary&quot;&gt;React-error-boundary&lt;/a&gt; - is a lightweight package ready to use for this scenario with TS support built-in. This approach also lets you avoid class components that are not that popular anymore.&lt;/p&gt; 
&lt;h3&gt;Options 2: Writing your custom error boundary component&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to add a new npm package for this, you can also write your own &lt;code&gt;ErrorBoundary&lt;/code&gt; component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { Component, ErrorInfo, ReactNode } from &quot;react&quot;;

interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
}

class ErrorBoundary extends Component&amp;lt;Props, State&amp;gt; {
  public state: State = {
    hasError: false
  };

  public static getDerivedStateFromError(_: Error): State {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error(&quot;Uncaught error:&quot;, error, errorInfo);
  }

  public render() {
    if (this.state.hasError) {
      return &amp;lt;h1&amp;gt;Sorry.. there was an error&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}

export default ErrorBoundary;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:error-boundaries--&gt; 
&lt;!--START-SECTION:concurrent--&gt; 
&lt;h2&gt;Concurrent React/React Suspense&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Not written yet.&lt;/em&gt; watch &lt;a href=&quot;https://github.com/sw-yx/fresh-async-react&quot;&gt;https://github.com/sw-yx/fresh-async-react&lt;/a&gt; for more on React Suspense and Time Slicing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:concurrent--&gt; 
&lt;!--START-SECTION:types--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Types&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è Have you read &lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/FAQ?&quot;&gt;the TypeScript FAQ&lt;/a&gt; Your answer might be there!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Facing weird type errors? You aren&#39;t alone. This is the hardest part of using TypeScript with React. Be patient - you are learning a new language after all. However, the more you get good at this, the less time you&#39;ll be working &lt;em&gt;against&lt;/em&gt; the compiler and the more the compiler will be working &lt;em&gt;for&lt;/em&gt; you!&lt;/p&gt; 
&lt;p&gt;Try to avoid typing with &lt;code&gt;any&lt;/code&gt; as much as possible to experience the full benefits of TypeScript. Instead, let&#39;s try to be familiar with some of the common strategies to solve these issues.&lt;/p&gt; 
&lt;h2&gt;Union Types and Type Guarding&lt;/h2&gt; 
&lt;p&gt;Union types are handy for solving some of these typing problems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;
  {},
  {
    count: number | null; // like this
  }
&amp;gt; {
  state = {
    count: null,
  };
  render() {
    return &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;{this.state.count}&amp;lt;/div&amp;gt;;
  }
  increment = (amt: number) =&amp;gt; {
    this.setState((state) =&amp;gt; ({
      count: (state.count || 0) + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2K0EAK48YALjg89IAEZIocAD6m91agG44AejdxqwANZI4MAAWwHSaKhQAfFrkinQwKNxwALzRijr6hiZmTmHOmkT81gAUAJSpaUQwelA8cLJ8wABucBA8Yt5oPklKpclRQSEiwDxoRCAyRQCMJSoRSgN0InEJSCK6BjAqsm4NjRF5MXDhh8OjSOOGyXBFKCDGDpbWZUlRStoBwYt0SDAAyvHcIrLRIva5vQ5pODrTLXYGraHwWz2AAMZQA1HBbjB3ioSiUDooVAcVEA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type Guarding&lt;/strong&gt;: Sometimes Union Types solve a problem in one area but create another downstream. If &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both object types, &lt;code&gt;A | B&lt;/code&gt; isn&#39;t &quot;either A or B&quot;, it is &quot;A or B or both at once&quot;, which causes some confusion if you expected it to be the former. Learn how to write checks, guards, and assertions (also see the Conditional Rendering section below). For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface Admin {
  role: string;
}
interface User {
  email: string;
}

// Method 1: use `in` keyword
function redirect(user: Admin | User) {
  if (&quot;role&quot; in user) {
    // use the `in` operator for typeguards since TS 2.7+
    routeToAdminPage(user.role);
  } else {
    routeToHomePage(user.email);
  }
}

// Method 2: custom type guard, does the same thing in older TS versions or where `in` isnt enough
function isAdmin(user: Admin | User): user is Admin {
  return (user as any).role !== undefined;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoC4AOxiSk3STgEEATEGuAbwrjhwAbJAC44AZxhQaAcwDcFAL5Va9RmmYBVcfR584SECmCCxk6dXlKKFTAFdqGYBGoCIdugBUI7TtQAKKDJIABTiwDLUwJjA9ACUeuT80XBhEVExugC8OQR2OlAIEML4CbxJ-AJIMHZQrvi+NGQVinDWlOT2jjDOrjgeSN4AErhIgcFpkdGxUGX6KZMZM3A5WQSGxoKliZVVNXUEIyBIYEFIzfzK5FcUAPS3cACy1QAWEGxwAIxi+cwABjQ-nAANZIACeAHdoGxbA4nC4qmxgEQMCFflAxI1XAAfODaeI7ODREIAIiESBJRNc6LKcHucF+cBgL3+gLgEDA9BQMGgcEwvJgYM5MjsKCgbHEEhoGjgngAynAAEwAOgA7ABqfT8fpeHwcGjjULo5XkuIKFoGQQ6Qna9y6o5jM5ogrKjYmM36K43cj057M95KsRofI8vCCzlwEVitgAGjgbAgSElzOY4hQxyZL1kVPZgjYunlcAAbvRwi5JbyISyiHAAdQgcBxLQDNR3DIXrDur0ieIsc76Jj9Ti8QU4j8Cj3WEPCUR9q5+1A4ChJShqGC4ibiswAIS5Bz5mLUJAw65AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Method 2 is also known as &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards&quot;&gt;User-Defined Type Guards&lt;/a&gt; and can be really handy for readable code. This is how TS itself refines types with &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you need &lt;code&gt;if...else&lt;/code&gt; chains or the &lt;code&gt;switch&lt;/code&gt; statement instead, it should &quot;just work&quot;, but look up &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; if you need help. (See also: &lt;a href=&quot;https://basarat.gitbook.io/typescript/type-system/discriminated-unions&quot;&gt;Basarat&#39;s writeup&lt;/a&gt;). This is handy in typing reducers for &lt;code&gt;useReducer&lt;/code&gt; or Redux.&lt;/p&gt; 
&lt;h2&gt;Optional Types&lt;/h2&gt; 
&lt;p&gt;If a component has an optional prop, add a question mark and assign during destructure (or use defaultProps).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message?: string; // like this
}&amp;gt; {
  render() {
    const { message = &quot;default&quot; } = this.props;
    return &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a &lt;code&gt;!&lt;/code&gt; character to assert that something is not undefined, but this is not encouraged.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Something to add? &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Enum Types&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We recommend avoiding using enums as far as possible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Enums have a few &lt;a href=&quot;https://fettblog.eu/tidy-typescript-avoid-enums/&quot;&gt;documented issues&lt;/a&gt; (the TS team &lt;a href=&quot;https://twitter.com/orta/status/1348966323271987201?s=20&quot;&gt;agrees&lt;/a&gt;). A simpler alternative to enums is just declaring a union type of string literals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare type Position = &quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you must use enums, remember that enums in TypeScript default to numbers. You will usually want to use them as strings instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export enum ButtonSizes {
  default = &quot;default&quot;,
  small = &quot;small&quot;,
  large = &quot;large&quot;,
}

// usage
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; &amp;lt;Button size={ButtonSizes.default} {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Type Assertion&lt;/h2&gt; 
&lt;p&gt;Sometimes you know better than TypeScript that the type you&#39;re using is narrower than it thinks, or union types need to be asserted to a more specific type to work with other APIs, so assert with the &lt;code&gt;as&lt;/code&gt; keyword. This tells the compiler you know better than it does.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  render() {
    const { message } = this.props;
    return (
      &amp;lt;Component2 message={message as SpecialMessageType}&amp;gt;{message}&amp;lt;/Component2&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgGU61gUAbAWSQGduUBzJABVa9ALwFuMKMAB2-fAG4KFOTCRRM6egAUcYbnADeFOHBA8+ggFxwpM+XAA+cAK6yAJkkxykH5eQAvirkaBCyUnAAwriQskiyMABMtsjoMAB0AGJRADx6EAYAfHASABRG5pYCSIEAlKUlZaZwuR7AAG5FLWa5ABYAjEVGFrw1gbkA9IPd5L2T7V0UdSFobCi8cBzUMeDhCfBIAB7qnoZpGBm7cQe5JnNVYzZ20nL8AYEl92ZEnhplDW+ZjgYQi8Eqoys9ECpTgMD6wG4GTA+m4AWBcCIMFcUFkcGaDwxuWu+0SSUeULEI2qgjgG0YzFYnBpwlEn2pT1qUxJ8TJswxdXRcGCQSAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that you cannot assert your way to anything - basically it is only for refining types. Therefore it is not the same as &quot;casting&quot; a type.&lt;/p&gt; 
&lt;p&gt;You can also assert a property is non-null, when accessing it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;element.parentNode!.removeChild(element); // ! before the period
myFunction(document.getElementById(dialog.id!)!); // ! after the property accessing
let userID!: string; // definite assignment assertion... be careful!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, try to actually handle the null case instead of asserting :)&lt;/p&gt; 
&lt;h2&gt;Simulating Nominal Types&lt;/h2&gt; 
&lt;p&gt;TS&#39; structural typing is handy, until it is inconvenient. However you can simulate nominal typing with &lt;a href=&quot;https://basarat.gitbook.io/typescript/main-1/nominaltyping&quot;&gt;&lt;code&gt;type branding&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type OrderID = string &amp;amp; { readonly brand: unique symbol };
type UserID = string &amp;amp; { readonly brand: unique symbol };
type ID = OrderID | UserID;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can create these values with the Companion Object Pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function OrderID(id: string) {
  return id as OrderID;
}
function UserID(id: string) {
  return id as UserID;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now TypeScript will disallow you from using the wrong ID in the wrong place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function queryForUser(id: UserID) {
  // ...
}
queryForUser(OrderID(&quot;foobar&quot;)); // Error, Argument of type &#39;OrderID&#39; is not assignable to parameter of type &#39;UserID&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In future you can use the &lt;code&gt;unique&lt;/code&gt; keyword to brand. &lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/33038&quot;&gt;See this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Intersection Types&lt;/h2&gt; 
&lt;p&gt;Adding two types together can be handy, for example when your component is supposed to mirror the props of a native component like a &lt;code&gt;button&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export interface PrimaryButtonProps {
  label: string;
}
export const PrimaryButton = (
  props: PrimaryButtonProps &amp;amp; React.ButtonHTMLAttributes&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; {
  // do custom buttony stuff
  return &amp;lt;button {...props}&amp;gt; {props.label} &amp;lt;/button&amp;gt;;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Playground &lt;a href=&quot;https://www.typescriptlang.org/play?ssl=4&amp;amp;ssc=1&amp;amp;pln=12&amp;amp;pc=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCipAD0ljmADsYkpN0k4AFKUFKAE8AQgFcYMCE14QwAZzgBvCnDgAbFACMkagFxw5MPkwDmAbgoBfanWjw0Uwzz4gBI8ZKZwAvHAAUKnBgOPL6vPxCYhJSMvJwAGSIxDAAdFGeABIAKgCyADIAghJ8muJIcgA82fnpUgCiakggSCwAfBQAlD6tSoEA9H1wACYQcGiihrhwpdFMggYwopiYgUSLUF4VM55KKXvBsnKWPYoH8ika2mqWcBV921KtFuSWQA&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can also use Intersection Types to make reusable subsets of props for similar components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type BaseProps = {
   className?: string,
   style?: React.CSSProperties
   name: string // used in both
}
type DogProps = {
  tailsCount: number
}
type HumanProps = {
  handsCount: number
}
export const Human: React.FC&amp;lt;BaseProps &amp;amp; HumanProps&amp;gt; = // ...
export const Dog: React.FC&amp;lt;BaseProps &amp;amp; DogProps&amp;gt; = // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgCEUBnJABRzGbgF44BvCnGFoANi2YA5FCCQB+AFxxmMKMAB2AcwA0Q4Suqj5S5OhgA6AMIBlaxwh1YwJMz1x1MpEpVqtcAPT+cACurAAmcBpwAEYQMAAWFAC+VLT0ACIQmvZcvAJ6MCjAosyWEMHqMErqwSDRSFDJqXRwABK1KOo53HyC5MLxnWGl5ZXVtfWN5CnkSAAekLBwaBDqKm0d6ibEFgBilgA8TKzdcABkGyCd3QB8eQAUAJS8d-d6B2HAAG4BNxSPFAo80W8BWa3gmU02zM5n2RxY7E43AukNuD2ePFe70+P38f3IjyAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Make sure not to confuse Intersection Types (which are &lt;strong&gt;and&lt;/strong&gt; operations) with Union Types (which are &lt;strong&gt;or&lt;/strong&gt; operations).&lt;/p&gt; 
&lt;h2&gt;Union Types&lt;/h2&gt; 
&lt;p&gt;This section is yet to be written (please contribute!). Meanwhile, see our &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#union-types-and-type-guarding&quot;&gt;commentary on Union Types usecases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The ADVANCED cheatsheet also has information on Discriminated Union Types, which are helpful when TypeScript doesn&#39;t seem to be narrowing your union type as you expect.&lt;/p&gt; 
&lt;h2&gt;Overloading Function Types&lt;/h2&gt; 
&lt;p&gt;Specifically when it comes to functions, you may need to overload instead of union type. The most common way function types are written uses the shorthand:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type FunctionType1 = (x: string, y: number) =&amp;gt; number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But this doesn&#39;t let you do any overloading. If you have the implementation, you can put them after each other with the function keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function pickCard(x: { suit: string; card: number }[]): number;
function pickCard(x: number): { suit: string; card: number };
function pickCard(x): any {
  // implementation with combined signature
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, if you don&#39;t have an implementation and are just writing a &lt;code&gt;.d.ts&lt;/code&gt; definition file, this won&#39;t help you either. In this case you can forego any shorthand and write them the old-school way. The key thing to remember here is as far as TypeScript is concerned, &lt;code&gt;functions are just callable objects with no key&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type pickCard = {
  (x: { suit: string; card: number }[]): number;
  (x: number): { suit: string; card: number };
  // no need for combined signature in this form
  // you can also type static properties of functions here eg `pickCard.wasCalled`
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when you implement the actual overloaded function, the implementation will need to declare the combined call signature that you&#39;ll be handling, it won&#39;t be inferred for you. You can see readily see examples of overloads in DOM APIs, e.g. &lt;code&gt;createElement&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/functions.html#overloads&quot;&gt;Read more about Overloading in the Handbook.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using Inferred Types&lt;/h2&gt; 
&lt;p&gt;Leaning on TypeScript&#39;s Type Inference is great... until you realize you need a type that was inferred, and have to go back and explicitly declare types/interfaces so you can export them for reuse.&lt;/p&gt; 
&lt;p&gt;Fortunately, with &lt;code&gt;typeof&lt;/code&gt;, you won&#39;t have to do that. Just use it on any value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

const someMethod = (obj: typeof state) =&amp;gt; {
  // grabbing the type of state even though it was inferred
  // some code using obj
  setState(obj); // this works
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Partial Types&lt;/h2&gt; 
&lt;p&gt;Working with slicing state and props is common in React. Again, you don&#39;t really have to go and explicitly redefine your types if you use the &lt;code&gt;Partial&lt;/code&gt; generic type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

// NOTE: stale state merging is not actually encouraged in React.useState
// we are just demonstrating how to use Partial here
const partialStateUpdate = (obj: Partial&amp;lt;typeof state&amp;gt;) =&amp;gt;
  setState({ ...state, ...obj });

// later on...
partialStateUpdate({ foo: 2 }); // this works
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Minor caveats on using &lt;code&gt;Partial&lt;/code&gt; &lt;/summary&gt; 
 &lt;p&gt;Note that there are some TS users who don&#39;t agree with using &lt;code&gt;Partial&lt;/code&gt; as it behaves today. See &lt;a href=&quot;https://twitter.com/ferdaber/status/1084798596027957248&quot;&gt;subtle pitfalls of the above example here&lt;/a&gt;, and check out this long discussion on &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365&quot;&gt;why @types/react uses Pick instead of Partial&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;The Types I need weren&#39;t exported!&lt;/h2&gt; 
&lt;p&gt;This can be annoying but here are ways to grab the types!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the Prop types of a component: Use &lt;code&gt;React.ComponentProps&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt;, and optionally &lt;code&gt;Omit&lt;/code&gt; any overlapping types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Button } from &quot;library&quot;; // but doesn&#39;t export ButtonProps! oh no!
type ButtonProps = React.ComponentProps&amp;lt;typeof Button&amp;gt;; // no problem! grab your own!
type AlertButtonProps = Omit&amp;lt;ButtonProps, &quot;onClick&quot;&amp;gt;; // modify
const AlertButton: React.FC&amp;lt;AlertButtonProps&amp;gt; = (props) =&amp;gt; (
  &amp;lt;Button onClick={() =&amp;gt; alert(&quot;hello&quot;)} {...props} /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L774&quot;&gt;&lt;code&gt;ComponentPropsWithoutRef&lt;/code&gt;&lt;/a&gt; (instead of ComponentProps) and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt; (if your component specifically forwards refs)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the return type of a function: use &lt;code&gt;ReturnType&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// inside some library - return type { baz: number } is inferred but not exported
function foo(bar: string) {
  return { baz: 1 };
}

//  inside your app, if you need { baz: number }
type FooReturn = ReturnType&amp;lt;typeof foo&amp;gt;; // { baz: number }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact you can grab virtually anything public: &lt;a href=&quot;http://ikoshelev.azurewebsites.net/search/id/11/Pragmatic-uses-of-TypeScript-type-system-My-type-of-type&quot;&gt;see this blogpost from Ivan Koshelev&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function foo() {
  return {
    a: 1,
    b: 2,
    subInstArr: [
      {
        c: 3,
        d: 4,
      },
    ],
  };
}

type InstType = ReturnType&amp;lt;typeof foo&amp;gt;;
type SubInstArr = InstType[&quot;subInstArr&quot;];
type SubIsntType = SubInstArr[0];

let baz: SubIsntType = {
  c: 5,
  d: 6, // type checks ok!
};

//You could just write a one-liner,
//But please make sure it is forward-readable
//(you can understand it from reading once left-to-right with no jumps)
type SubIsntType2 = ReturnType&amp;lt;typeof foo&amp;gt;[&quot;subInstArr&quot;][0];
let baz2: SubIsntType2 = {
  c: 5,
  d: 6, // type checks ok!
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;TS also ships with a &lt;code&gt;Parameters&lt;/code&gt; utility type for extracting the parameters of a function&lt;/li&gt; 
 &lt;li&gt;for anything more &quot;custom&quot;, the &lt;code&gt;infer&lt;/code&gt; keyword is the basic building block for this, but takes a bit of getting used to. Look at the source code for the above utility types, and &lt;a href=&quot;https://twitter.com/mgechev/status/1211030455224422401?s=20&quot;&gt;this example&lt;/a&gt; to get the idea. Basarat &lt;a href=&quot;https://www.youtube.com/watch?v=ijK-1R-LFII&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=3&amp;amp;t=0s&quot;&gt;also has a good video on &lt;code&gt;infer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Types I need don&#39;t exist!&lt;/h2&gt; 
&lt;p&gt;What&#39;s more annoying than modules with unexported types? Modules that are &lt;strong&gt;untyped&lt;/strong&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before you proceed - make sure you have checked that types don&#39;t exist in &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Fret not! There are more than a couple of ways in which you can solve this problem.&lt;/p&gt; 
&lt;h3&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;lazier&lt;/strong&gt; way would be to create a new type declaration file, say &lt;code&gt;typedec.d.ts&lt;/code&gt;‚Äì if you don&#39;t already have one. Ensure that the path to file is resolvable by TypeScript by checking the &lt;code&gt;include&lt;/code&gt; array in the &lt;code&gt;tsconfig.json&lt;/code&gt; file at the root of your directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// inside tsconfig.json
{
  // ...
  &quot;include&quot;: [
    &quot;src&quot; // automatically resolves if the path to declaration is src/typedec.d.ts
  ]
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Within this file, add the &lt;code&gt;declare&lt;/code&gt; syntax for your desired module, say &lt;code&gt;my-untyped-module&lt;/code&gt;‚Äì to the declaration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// inside typedec.d.ts
declare module &quot;my-untyped-module&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This one-liner alone is enough if you just need it to work without errors. A even hackier, write-once-and-forget way would be to use &lt;code&gt;&quot;*&quot;&lt;/code&gt; instead which would then apply the &lt;code&gt;Any&lt;/code&gt; type for all existing and future untyped modules.&lt;/p&gt; 
&lt;p&gt;This solution works well as a workaround if you have less than a couple untyped modules. Anything more, you now have a ticking type-bomb in your hands. The only way of circumventing this problem would be to define the missing types for those untyped modules as explained in the following sections.&lt;/p&gt; 
&lt;h3&gt;Autogenerate types&lt;/h3&gt; 
&lt;p&gt;You can use TypeScript with &lt;code&gt;--allowJs&lt;/code&gt; and &lt;code&gt;--declaration&lt;/code&gt; to see TypeScript&#39;s &quot;best guess&quot; at the types of the library.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work well enough, use &lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot;&gt;&lt;code&gt;dts-gen&lt;/code&gt;&lt;/a&gt; to use the runtime shape of the object to accurately enumerate all available properties. This tends to be very accurate, BUT the tool does not yet support scraping JSDoc comments to populate additional types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g dts-gen
dts-gen -m &amp;lt;your-module&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other automated JS to TS conversion tools and migration strategies - see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/from_js&quot;&gt;our MIGRATION cheatsheet&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Typing Exported Hooks&lt;/h3&gt; 
&lt;p&gt;Typing Hooks is just like typing pure functions.&lt;/p&gt; 
&lt;p&gt;The following steps work under two assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have already created a type declaration file as stated earlier in the section.&lt;/li&gt; 
 &lt;li&gt;You have access to the source code - specifically the code that directly exports the functions you will be using. In most cases, it would be housed in an &lt;code&gt;index.js&lt;/code&gt; file. Typically you need a minimum of &lt;strong&gt;two&lt;/strong&gt; type declarations (one for &lt;strong&gt;Input Prop&lt;/strong&gt; and the other for &lt;strong&gt;Return Prop&lt;/strong&gt;) to define a hook completely. Suppose the hook you wish to type follows the following structure,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ...
const useUntypedHook = (prop) =&amp;gt; {
  // some processing happens here
  return {
    /* ReturnProps */
  };
};
export default useUntypedHook;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then, your type declaration should most likely follow the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &#39;use-untyped-hook&#39; {
  export interface InputProps { ... }   // type declaration for prop
  export interface ReturnProps { ... } // type declaration for return props
  export default function useUntypedHook(
    prop: InputProps
    // ...
  ): ReturnProps;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;For instance, the &lt;a href=&quot;https://github.com/donavon/use-dark-mode&quot;&gt;useDarkMode hook&lt;/a&gt; exports the functions that follows a similar structure.&lt;/p&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// inside src/index.js
const useDarkMode = (
  initialValue = false, // -&amp;gt; input props / config props to be exported
  {
    // -&amp;gt; input props / config props to be exported
    element,
    classNameDark,
    classNameLight,
    onChange,
    storageKey = &quot;darkMode&quot;,
    storageProvider,
    global,
  } = {}
) =&amp;gt; {
  // ...
  return {
    // -&amp;gt; return props to be exported
    value: state,
    enable: useCallback(() =&amp;gt; setState(true), [setState]),
    disable: useCallback(() =&amp;gt; setState(false), [setState]),
    toggle: useCallback(() =&amp;gt; setState((current) =&amp;gt; !current), [setState]),
  };
};
export default useDarkMode;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;As the comments suggest, exporting these config props and return props following the aforementioned structure will result in the following type export.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;use-dark-mode&quot; {
  /**
   * A config object allowing you to specify certain aspects of `useDarkMode`
   */
  export interface DarkModeConfig {
    classNameDark?: string; // A className to set &quot;dark mode&quot;. Default = &quot;dark-mode&quot;.
    classNameLight?: string; // A className to set &quot;light mode&quot;. Default = &quot;light-mode&quot;.
    element?: HTMLElement; // The element to apply the className. Default = `document.body`
    onChange?: (val?: boolean) =&amp;gt; void; // Override the default className handler with a custom callback.
    storageKey?: string; // Specify the `localStorage` key. Default = &quot;darkMode&quot;. Set to `null` to disable persistent storage.
    storageProvider?: WindowLocalStorage; // A storage provider. Default = `localStorage`.
    global?: Window; // The global object. Default = `window`.
  }
  /**
   * An object returned from a call to `useDarkMode`.
   */
  export interface DarkMode {
    readonly value: boolean;
    enable: () =&amp;gt; void;
    disable: () =&amp;gt; void;
    toggle: () =&amp;gt; void;
  }
  /**
   * A custom React Hook to help you implement a &quot;dark mode&quot; component for your application.
   */
  export default function useDarkMode(
    initialState?: boolean,
    config?: DarkModeConfig
  ): DarkMode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Typing Exported Components&lt;/h3&gt; 
&lt;p&gt;In case of typing untyped class components, there&#39;s almost no difference in approach except for the fact that after declaring the types, you export the extend the type using &lt;code&gt;class UntypedClassComponent extends React.Component&amp;lt;UntypedClassComponentProps, any&amp;gt; {}&lt;/code&gt; where &lt;code&gt;UntypedClassComponentProps&lt;/code&gt; holds the type declaration.&lt;/p&gt; 
&lt;p&gt;For instance, &lt;a href=&quot;https://gist.github.com/sw-yx/37a6a3d248c2d4031801f0d568904df8&quot;&gt;sw-yx&#39;s Gist on React Router 6 types&lt;/a&gt; implemented a similar method for typing the then untyped RR6.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;react-router-dom&quot; {
  import * as React from &#39;react&#39;;
  // ...
  type NavigateProps&amp;lt;T&amp;gt; = {
    to: string | number,
    replace?: boolean,
    state?: T
  }
  //...
  export class Navigate&amp;lt;T = any&amp;gt; extends React.Component&amp;lt;NavigateProps&amp;lt;T&amp;gt;&amp;gt;{}
  // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on creating type definitions for class components, you can refer to this &lt;a href=&quot;https://templecoding.com/blog/2016/03/31/creating-typescript-typings-for-existing-react-components&quot;&gt;post&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;h2&gt;Frequent Known Problems with TypeScript&lt;/h2&gt; 
&lt;p&gt;Just a list of stuff that React developers frequently run into, that TS has no solution for. Not necessarily TSX only.&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot; alt=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ref: &lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&lt;/a&gt;. see also &lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/9998&quot;&gt;https://github.com/microsoft/TypeScript/issues/9998&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/h3&gt; 
&lt;p&gt;Guaranteeing typesafety for this kind of API isn&#39;t possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;Menu&amp;gt;
  &amp;lt;MenuItem/&amp;gt; {/* ok */}
  &amp;lt;MenuLink/&amp;gt; {/* ok */}
  &amp;lt;div&amp;gt; {/* error */}
&amp;lt;/Menu&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Source: &lt;a href=&quot;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&quot;&gt;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:types--&gt; 
&lt;!--START-SECTION:operators--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Operators&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: type query used for refinement&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyof&lt;/code&gt;: get keys of an object. &lt;code&gt;keyof T&lt;/code&gt; is an operator to tell you what values of &lt;code&gt;k&lt;/code&gt; can be used for &lt;code&gt;obj[k]&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeaRyanC/status/1418678670739218438?s=20&quot;&gt;Some misconceptions here&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O[K]&lt;/code&gt;: property lookup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[K in O]&lt;/code&gt;: mapped types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;: addition and subtraction and readonly and optional modifiers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;x ? Y : Z&lt;/code&gt;: Conditional types for generic types, type aliases, function parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Nonnull assertion for nullable types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Generic type parameter default for generic types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;as&lt;/code&gt;: type assertion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is&lt;/code&gt;: type guard for function return types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional Types are a difficult topic to get around so here are some extra resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fully walked through explanation &lt;a href=&quot;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&quot;&gt;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bailing out and other advanced topics &lt;a href=&quot;https://github.com/sw-yx/ts-spec/raw/master/conditional-types.md&quot;&gt;https://github.com/sw-yx/ts-spec/blob/master/conditional-types.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s video &lt;a href=&quot;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&quot;&gt;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:operators--&gt; 
&lt;!--START-SECTION:utilities--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Utilities&lt;/h1&gt; 
&lt;p&gt;These are all built in, &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/2c458c0d1ccb96442bca9ce43aa987fb0becf8a9/src/lib/es5.d.ts#L1401-L1474&quot;&gt;see source in es5.d.ts&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ConstructorParameters&lt;/code&gt;: a tuple of class constructor&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Exclude&lt;/code&gt;: exclude a type from another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Extract&lt;/code&gt;: select a subtype that is assignable to another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;InstanceType&lt;/code&gt;: the instance type you get from a &lt;code&gt;new&lt;/code&gt;ing a class constructor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NonNullable&lt;/code&gt;: exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from a type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Parameters&lt;/code&gt;: a tuple of a function&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Partial&lt;/code&gt;: Make all properties in an object optional&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Readonly&lt;/code&gt;: Make all properties in an object readonly&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadonlyArray&lt;/code&gt;: Make an immutable array of the given type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pick&lt;/code&gt;: A subtype of an object type with a subset of its keys&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Record&lt;/code&gt;: A map from a key type to a value type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Required&lt;/code&gt;: Make all properties in an object required&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReturnType&lt;/code&gt;: A function&#39;s return type&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:utilities--&gt; 
&lt;!--START-SECTION:ts-config--&gt; 
&lt;h1&gt;Troubleshooting Handbook: tsconfig.json&lt;/h1&gt; 
&lt;p&gt;You can find &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;all the Compiler options in the TypeScript docs&lt;/a&gt;. &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;The new TS docs also has per-flag annotations of what each does&lt;/a&gt;. This is the setup I roll with for APPS (not libraries - for libraries you may wish to see the settings we use in &lt;code&gt;tsdx&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;incremental&quot;: true,
    &quot;outDir&quot;: &quot;build/lib&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;lib&quot;: [&quot;DOM&quot;, &quot;ESNext&quot;],
    &quot;sourceMap&quot;: true,
    &quot;importHelpers&quot;: true,
    &quot;declaration&quot;: true,
    &quot;rootDir&quot;: &quot;src&quot;,
    &quot;strict&quot;: true,
    &quot;noUnusedLocals&quot;: true,
    &quot;noUnusedParameters&quot;: true,
    &quot;noImplicitReturns&quot;: true,
    &quot;noFallthroughCasesInSwitch&quot;: true,
    &quot;allowJs&quot;: false,
    &quot;jsx&quot;: &quot;react&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;baseUrl&quot;: &quot;src&quot;,
    &quot;forceConsistentCasingInFileNames&quot;: true,
    &quot;esModuleInterop&quot;: true,
    &quot;suppressImplicitAnyIndexErrors&quot;: true,
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;experimentalDecorators&quot;: true
  },
  &quot;include&quot;: [&quot;src/**/*&quot;],
  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;build&quot;, &quot;scripts&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more &lt;a href=&quot;https://github.com/tsconfig/bases&quot;&gt;recommended TS config here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please open an issue and discuss if there are better recommended choices for React.&lt;/p&gt; 
&lt;p&gt;Selected flags and why we like them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;esModuleInterop&lt;/code&gt;: disables namespace imports (&lt;code&gt;import * as foo from &quot;foo&quot;&lt;/code&gt;) and enables CJS/AMD/UMD style imports (&lt;code&gt;import fs from &quot;fs&quot;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: &lt;code&gt;strictPropertyInitialization&lt;/code&gt; forces you to initialize class properties or explicitly declare that they can be undefined. You can opt out of this with a definite assignment assertion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;typeRoots&quot;: [&quot;./typings&quot;, &quot;./node_modules/@types&quot;]&lt;/code&gt;: By default, TypeScript looks in &lt;code&gt;node_modules/@types&lt;/code&gt; and parent folders for third party type declarations. You may wish to override this default resolution so you can put all your global type declarations in a special &lt;code&gt;typings&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compilation speed grows linearly with size of codebase. For large projects, you will want to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/project-references.html&quot;&gt;Project References&lt;/a&gt;. See our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro/&quot;&gt;ADVANCED&lt;/a&gt; cheatsheet for commentary.&lt;/p&gt; 
&lt;!--END-SECTION:ts-config--&gt; 
&lt;!--START-SECTION:official-typings-bugs--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/h1&gt; 
&lt;p&gt;If you run into bugs with your library&#39;s official typings, you can copy them locally and tell TypeScript to use your local version using the &quot;paths&quot; field. In your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;paths&quot;: {
      &quot;mobx-react&quot;: [&quot;../typings/modules/mobx-react&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AdamRackis/status/1024827730452520963&quot;&gt;Thanks to @adamrackis for the tip.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you just need to add an interface, or add missing members to an existing interface, you don&#39;t need to copy the whole typing package. Instead, you can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot; {
  interface PlotlyHTMLElement {
    removeAllListeners(): void;
  }
}

// MyComponent.tsx
import { PlotlyHTMLElement } from &quot;plotly.js&quot;;

const f = (e: PlotlyHTMLElement) =&amp;gt; {
  e.removeAllListeners();
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You dont always have to implement the module, you can simply import the module as &lt;code&gt;any&lt;/code&gt; for a quick start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot;; // each of its imports are `any`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because you don&#39;t have to explicitly import this, this is known as an &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#pitfalls-of-namespaces-and-modules&quot;&gt;ambient module declaration&lt;/a&gt;. You can do AMD&#39;s in a script-mode &lt;code&gt;.ts&lt;/code&gt; file (no imports or exports), or a &lt;code&gt;.d.ts&lt;/code&gt; file anywhere in your project.&lt;/p&gt; 
&lt;p&gt;You can also do ambient variable and ambient type declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// ambient utiltity type
type ToArray&amp;lt;T&amp;gt; = T extends unknown[] ? T : T[];
// ambient variable
declare let process: {
  env: {
    NODE_ENV: &quot;development&quot; | &quot;production&quot;;
  };
};
process = {
  env: {
    NODE_ENV: &quot;production&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see examples of these included in the built in type declarations in the &lt;code&gt;lib&lt;/code&gt; field of &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/p&gt; 
&lt;!--END-SECTION:official-typings-bugs--&gt; 
&lt;!--START-SECTION:non-ts-files--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:non-ts-files--&gt; 
&lt;!--START-SECTION:resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&quot;&gt;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&quot;&gt;10 Bad TypeScript Habits&lt;/a&gt;: 
  &lt;ol&gt; 
   &lt;li&gt;not using &lt;code&gt;&quot;strict&quot;: true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;||&lt;/code&gt; for default values when we have &lt;code&gt;??&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Using &lt;code&gt;any&lt;/code&gt; instead of &lt;code&gt;unknown&lt;/code&gt; for API responses&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;as&lt;/code&gt; assertion instead of Type Guards (&lt;code&gt;function isFoo(obj: unknown): obj is Foo {}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;as any&lt;/code&gt; in tests&lt;/li&gt; 
   &lt;li&gt;Marking optional properties instead of modeling which combinations exist by extending interfaces&lt;/li&gt; 
   &lt;li&gt;One letter generics&lt;/li&gt; 
   &lt;li&gt;Non-boolean &lt;code&gt;if (nonboolean)&lt;/code&gt; checks&lt;/li&gt; 
   &lt;li&gt;bangbang checks &lt;code&gt;if (!!nonboolean)&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;!= null&lt;/code&gt; to check for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/production-typescript/&quot;&gt;Mike North&#39;s Production TypeScript course on Frontend Masters (paid)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jenil.github.io/chota/&quot;&gt;TSX Guide&lt;/a&gt; by &lt;a href=&quot;https://github.com/gojutin/www.tsx.guide&quot;&gt;gojutin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:resources--&gt; 
&lt;!--START-SECTION:editor-integration--&gt; 
&lt;h1&gt;Editor Tooling and Integration&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;VSCode 
  &lt;ul&gt; 
   &lt;li&gt;swyx&#39;s VSCode Extension: &lt;a href=&quot;https://github.com/sw-yx/swyx-react-typescript-snippets&quot;&gt;https://github.com/sw-yx/swyx-react-typescript-snippets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;amVim: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&quot;&gt;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VIM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Quramy/tsuquyomi&quot;&gt;https://github.com/Quramy/tsuquyomi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;nvim-typescript?&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/leafgarland/typescript-vim&quot;&gt;https://github.com/leafgarland/typescript-vim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;peitalin/vim-jsx-typescript&lt;/li&gt; 
   &lt;li&gt;NeoVim: &lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot;&gt;https://github.com/neoclide/coc.nvim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;other discussion: &lt;a href=&quot;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&quot;&gt;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You are free to use this repo&#39;s TSX logo if you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; alt=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to use alternative logos - &lt;a href=&quot;https://github.com/Protectator/jsx-tsx-logos&quot;&gt;jsx-tsx-logos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot; alt=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot;&gt;&lt;/p&gt; 
&lt;!--END-SECTION:editor-integration--&gt; 
&lt;!--START-SECTION:linting--&gt; 
&lt;h1&gt;Linting&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏èNote that &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint is now in maintenance and you should try to use ESLint instead&lt;/a&gt;. If you are interested in TSLint tips, please check this PR from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/14&quot;&gt;@azdanov&lt;/a&gt;. The rest of this section just focuses on ESLint. &lt;a href=&quot;https://github.com/typescript-eslint/tslint-to-eslint-config&quot;&gt;You can convert TSlint to ESlint with this tool&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏èThis is an evolving topic. &lt;code&gt;typescript-eslint-parser&lt;/code&gt; is no longer maintained and &lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot;&gt;work has recently begun on &lt;code&gt;typescript-eslint&lt;/code&gt; in the ESLint community&lt;/a&gt; to bring ESLint up to full parity and interop with TSLint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the TypeScript + ESLint docs at &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot;&gt;https://github.com/typescript-eslint/typescript-eslint&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;add a &lt;code&gt;lint&lt;/code&gt; script to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint &#39;src/**/*.ts&#39;&quot;
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and a suitable &lt;code&gt;.eslintrc.js&lt;/code&gt; (using &lt;code&gt;.js&lt;/code&gt; over &lt;code&gt;.json&lt;/code&gt; here so we can add comments):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  env: {
    es6: true,
    node: true,
    jest: true,
  },
  extends: &quot;eslint:recommended&quot;,
  parser: &quot;@typescript-eslint/parser&quot;,
  plugins: [&quot;@typescript-eslint&quot;],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: &quot;module&quot;,
  },
  rules: {
    indent: [&quot;error&quot;, 2],
    &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],
    quotes: [&quot;error&quot;, &quot;single&quot;],
    &quot;no-console&quot;: &quot;warn&quot;,
    &quot;no-unused-vars&quot;: &quot;off&quot;,
    &quot;@typescript-eslint/no-unused-vars&quot;: [
      &quot;error&quot;,
      { vars: &quot;all&quot;, args: &quot;after-used&quot;, ignoreRestSiblings: false },
    ],
    &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;warn&quot;, // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    &quot;no-empty&quot;: &quot;warn&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most of this is taken from &lt;a href=&quot;https://github.com/palmerhq/tsdx/pull/70/files&quot;&gt;the &lt;code&gt;tsdx&lt;/code&gt; PR&lt;/a&gt; which is for &lt;strong&gt;libraries&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;More &lt;code&gt;.eslintrc.json&lt;/code&gt; options to consider with more options you may want for &lt;strong&gt;apps&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/react&quot;,
    &quot;plugin:prettier/recommended&quot;,
    &quot;plugin:jest/recommended&quot;,
    &quot;plugin:unicorn/recommended&quot;
  ],
  &quot;plugins&quot;: [&quot;prettier&quot;, &quot;jest&quot;, &quot;unicorn&quot;],
  &quot;parserOptions&quot;: {
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;jest&quot;: true
  },
  &quot;settings&quot;: {
    &quot;import/resolver&quot;: {
      &quot;node&quot;: {
        &quot;extensions&quot;: [&quot;.js&quot;, &quot;.jsx&quot;, &quot;.ts&quot;, &quot;.tsx&quot;]
      }
    }
  },
  &quot;overrides&quot;: [
    {
      &quot;files&quot;: [&quot;**/*.ts&quot;, &quot;**/*.tsx&quot;],
      &quot;parser&quot;: &quot;typescript-eslint-parser&quot;,
      &quot;rules&quot;: {
        &quot;no-undef&quot;: &quot;off&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://blog.matterhorn.dev/posts/learn-typescript-linting-part-1/&quot;&gt;fuller TypeScript + ESLint setup guide here&lt;/a&gt; from Matterhorn, in particular check &lt;a href=&quot;https://github.com/MatterhornDev/learn-typescript-linting&quot;&gt;https://github.com/MatterhornDev/learn-typescript-linting&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Another great resource is &lt;a href=&quot;https://dev.to/robertcoopercode/using-eslint-and-prettier-in-a-typescript-project-53jb&quot;&gt;&quot;Using ESLint and Prettier in a TypeScript Project&quot;&lt;/a&gt; by @robertcoopercode.&lt;/p&gt; 
&lt;p&gt;Wes Bos is also working on &lt;a href=&quot;https://github.com/wesbos/eslint-config-wesbos/issues/68&quot;&gt;TypeScript support for his eslint+prettier config.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for information on Prettier, check out the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/raw/main/docs/advanced/misc-concerns.md#prettier&quot;&gt;Prettier&lt;/a&gt; guide.&lt;/p&gt; 
&lt;!--END-SECTION:linting--&gt; 
&lt;!--START-SECTION:other-resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react&quot;&gt;Stefan Baumgartner&#39;s TypeScript + React Guide&lt;/a&gt;, which serves as a side-by-side guide to the official docs with extra articles on styling, custom hooks and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react&quot;&gt;DefinitelyTyped React source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:other-resources--&gt; 
&lt;!--START-SECTION:talks--&gt; 
&lt;h1&gt;Recommended React + TypeScript talks&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_PBQ3if6Fmg&quot;&gt;Ultimate React Component Patterns with TypeScript&lt;/a&gt;, by Martin Hochel, GeeCon Prague 2018&lt;/li&gt; 
 &lt;li&gt;Please help contribute this new section!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:talks--&gt; 
&lt;!--START-SECTION:learn-ts--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:learn-ts--&gt; 
&lt;!--START-SECTION:examples--&gt; 
&lt;h1&gt;Example App&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laststance/create-react-app-typescript-todo-example-2021&quot;&gt;Create React App TypeScript Todo Example 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6ypD7qv3Z8&quot;&gt;Ben Awad&#39;s 14 hour Fullstack React/GraphQL/TypeScript Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-realworld-app&quot;&gt;Cypress Realworld App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:examples--&gt; 
&lt;h1&gt;My question isn&#39;t answered here!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. See &lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;CONTRIBUTORS.md&lt;/a&gt; for the full list. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.cypress.io&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1268976/20607953/d7ae489c-b24a-11e6-9cc4-91c6c74c5e88.png&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://on.cypress.io&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/changelog&quot;&gt;Changelog&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/roadmap&quot;&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; The web has evolved. Finally, testing has too. &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Fast, easy and reliable testing for anything that runs in a browser. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Join us, we&#39;re &lt;a href=&quot;https://cypress.io/jobs&quot;&gt;hiring&lt;/a&gt;. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/cypress.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/gitter/room/cypress-io/cypress.svg?sanitize=true&quot; alt=&quot;Gitter chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://stackshare.io/cypress&quot;&gt; &lt;img src=&quot;https://img.stackshare.io/misc/follow-on-stackshare-badge.svg?sanitize=true&quot; alt=&quot;StackShare&quot;&gt; &lt;/a&gt;&lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://player.vimeo.com/video/237527670&quot;&gt; &lt;img alt=&quot;Why Cypress Video&quot; src=&quot;https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png&quot; width=&quot;75%&quot; height=&quot;75%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/cypress&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cypress.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href=&quot;https://docs.cypress.io/guides/getting-started/installing-cypress.html&quot;&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif&quot; alt=&quot;installing-cli e1693232&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md&quot;&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg?sanitize=true&quot; alt=&quot;Cypress.io&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
