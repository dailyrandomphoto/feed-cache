<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 23 May 2021 02:35:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>GitSquared/edex-ui</title>
      <link>https://github.com/GitSquared/edex-ui</link>
      <description>&lt;p&gt;A cross-platform, customizable science fiction terminal emulator with advanced monitoring &amp; touchscreen support.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;br&gt; &lt;img alt=&quot;Logo&quot; src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/logo.png&quot;&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;amp;logoWidth=18&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/latest&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.7/eDEX-UI-Windows.exe&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Windows/?color=blue&amp;amp;icon=windows&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.7/eDEX-UI-macOS.dmg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/macOS/?color=grey&amp;amp;icon=apple&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.7/eDEX-UI-Linux-x86_64.AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Linux64/?color=orange&amp;amp;icon=terminal&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.7/eDEX-UI-Linux-arm64-AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;amp;icon=terminal&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/AUR/Package/cyan&quot;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p&gt;eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.&lt;/p&gt; 
&lt;p&gt;Heavily inspired from the &lt;a href=&quot;https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671&quot;&gt;TRON Legacy movie effects&lt;/a&gt; (especially the &lt;a href=&quot;https://gmunk.com/TRON-Board-Room&quot;&gt;Board Room sequence&lt;/a&gt;), the eDEX-UI project was originally meant to be &lt;em&gt;”&lt;a href=&quot;https://github.com/seenaburns/dex-ui&quot;&gt;DEX-UI&lt;/a&gt; with less « art » and more « distributable software »”&lt;/em&gt;. While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.&lt;/p&gt; 
&lt;p&gt;It might or might not be a joke taken too seriously.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;( Jump to: &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#screenshots&quot;&gt;Screenshots&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#qa&quot;&gt;Questions &amp;amp; Answers&lt;/a&gt; - &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&quot;&gt;Featured In&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#useful-commands-for-the-nerds&quot;&gt;Developer Instructions&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#credits&quot;&gt;Credits&lt;/a&gt; )&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Click the banner below and sign up to &lt;strong&gt;Bytes&lt;/strong&gt;, the only newsletter cool enough to be recommended by eDEX-UI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ui.dev/bytes/?r=gabriel&quot;&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/sponsor-uidev-bytes.jpg&quot; alt=&quot;Bytes by UI.dev&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully featured terminal emulator with tabs, colors, mouse events, and support for &lt;code&gt;curses&lt;/code&gt; and &lt;code&gt;curses&lt;/code&gt;-like applications.&lt;/li&gt; 
 &lt;li&gt;Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.&lt;/li&gt; 
 &lt;li&gt;Full support for touch-enabled displays, including an on-screen keyboard.&lt;/li&gt; 
 &lt;li&gt;Directory viewer that follows the CWD (current working directory) of the terminal.&lt;/li&gt; 
 &lt;li&gt;Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki&quot;&gt;wiki&lt;/a&gt; for more info.&lt;/li&gt; 
 &lt;li&gt;Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_default.png&quot; alt=&quot;Default screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt; on eDEX-UI 2.2 with the default “tron” theme &amp;amp; QWERTY keyboard&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_blade.png&quot; alt=&quot;Blade screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Checking out available themes in &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki/userData&quot;&gt;eDEX’s config dir&lt;/a&gt; with &lt;a href=&quot;https://github.com/ranger/ranger&quot;&gt;&lt;code&gt;ranger&lt;/code&gt;&lt;/a&gt; on eDEX-UI 2.2 with the “blade” theme&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_disrupted.png&quot; alt=&quot;Disrupted screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/abishekvashok/cmatrix&quot;&gt;cmatrix&lt;/a&gt; on eDEX-UI 2.2 with the experimental “tron-disrupted” theme, and the user-contributed DVORAK keyboard&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/GitSquared/edex-ui/raw/master/media/screenshot_horizon.png&quot; alt=&quot;Horizon screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Editing eDEX-UI source code with &lt;code&gt;nvim&lt;/code&gt; on eDEX-UI 2.2 with the custom &lt;a href=&quot;https://github.com/GitSquared/horizon-edex-theme&quot;&gt;&lt;code&gt;horizon-full&lt;/code&gt;&lt;/a&gt; theme&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; 
&lt;h4&gt;How do I get it?&lt;/h4&gt; 
&lt;p&gt;Click on the little badges under the eDEX logo at the top of this page, or go to the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases&quot;&gt;Releases&lt;/a&gt; tab, or download it through &lt;a href=&quot;https://repology.org/project/edex-ui/versions&quot;&gt;one of the available repositories&lt;/a&gt; (Homebrew, AUR…).&lt;/p&gt; 
&lt;p&gt;Public release binaries are unsigned (&lt;a href=&quot;https://gaby.dev/posts/code-signing&quot;&gt;why&lt;/a&gt;). On Linux, you will need to &lt;code&gt;chmod +x&lt;/code&gt; the AppImage file in order to run it.&lt;/p&gt; 
&lt;h4&gt;I have a problem!&lt;/h4&gt; 
&lt;p&gt;Search through the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues&quot;&gt;Issues&lt;/a&gt; to see if yours has already been reported. If you’re confident it hasn’t been reported yet, feel free to open up a new one. If you see your issue and it’s been closed, it probably means that the fix for it will ship in the next version, and you’ll have to wait a bit.&lt;/p&gt; 
&lt;h4&gt;Can you disable the keyboard/the filesystem display?&lt;/h4&gt; 
&lt;p&gt;You can’t disable them (yet) but you can hide them. See the &lt;code&gt;tron-notype&lt;/code&gt; theme.&lt;/p&gt; 
&lt;h4&gt;Why is the file browser saying that “Tracking Failed”? (Windows only)&lt;/h4&gt; 
&lt;p&gt;On Linux and macOS, eDEX tracks where you’re going in your terminal tab to display the content of the current folder on-screen. Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a “detached” mode. You can still use it to browse files &amp;amp; directories and click on files to input their path in the terminal.&lt;/p&gt; 
&lt;h4&gt;Can this run on a Raspberry Pi / ARM device?&lt;/h4&gt; 
&lt;p&gt;We provide prebuilt arm64 builds. For other platforms, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345&quot;&gt;this issue comment&lt;/a&gt;, and the thread on issue &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/818&quot;&gt;#818&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Is this repo actively maintained?&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/769&quot;&gt;See this notice&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;How did you make this?&lt;/h4&gt; 
&lt;p&gt;Glad you’re interested! See &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/272&quot;&gt;#272&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;This is so cool.&lt;/h4&gt; 
&lt;p&gt;Thanks! If you feel like it, you can &lt;a href=&quot;https://buymeacoff.ee/gaby&quot;&gt;buy me a coffee&lt;/a&gt; or &lt;a href=&quot;https://github.com/sponsors/GitSquared&quot;&gt;sponsor me on GitHub&lt;/a&gt; to encourage me to build more awesome stuff.&lt;/p&gt; 
&lt;img width=&quot;220&quot; src=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot;&gt; 
&lt;h2&gt;Featured in…&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html&quot;&gt;Linux Uprising Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/&quot;&gt;My post on r/unixporn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html&quot;&gt;Korben article (in french)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18509828&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mikemaccana/status/1065615451940667396&quot;&gt;This tweet that made me smile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boingboing.net/2018/11/23/simulacrum-sf.html&quot;&gt;BoingBoing article&lt;/a&gt; - Apparently i’m a “French hacker”&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/ideas/four-short-links-23-november-2018&quot;&gt;OReilly 4 short links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hackaday.com/2018/11/23/look-like-a-movie-hacker/&quot;&gt;Hackaday&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/&quot;&gt;Developpez.com (another french link)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.github.com/2018-12-21-release-radar-november-2018/&quot;&gt;GitHub Blog’s Release Radar November 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opensource.com/article/19/1/productivity-tool-edex-ui&quot;&gt;opensource.com Productive Tools for 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/radar/four-short-links-7-july-2020/&quot;&gt;O’Reilly 4 short links (again)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/&quot;&gt;LinuxLinks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gbzqCAjm--g&quot;&gt;Linux For Everyone (Youtube)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://risingstars.js.org/2020/en#edex-ui&quot;&gt;BestOfJS Rising Stars 2020&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Useful commands for the nerds&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you’d like to get stable software instead, refer to &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;these&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;h4&gt;Starting from source:&lt;/h4&gt; 
&lt;p&gt;on *nix systems (You’ll need the Xcode command line tools on macOS):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-linux&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;on Windows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;start cmd or powershell &lt;strong&gt;as administrator&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-windows&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Building&lt;/h4&gt; 
&lt;p&gt;Note: Due to native modules, you can only build targets for the host OS you are using.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (NOT &lt;code&gt;install-linux&lt;/code&gt; or &lt;code&gt;install-windows&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run build-linux&lt;/code&gt; or &lt;code&gt;build-windows&lt;/code&gt; or &lt;code&gt;build-darwin&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The script will minify the source code, recompile native dependencies and create distributable assets in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h4&gt;Getting the bleeding edge&lt;/h4&gt; 
&lt;p&gt;If you’re interested in running the latest in-development version but don’t want to compile source code yourself, you can can get pre-built nightly binaries on &lt;a href=&quot;https://github.com/GitSquared/edex-ui/actions&quot;&gt;GitHub Actions&lt;/a&gt;: click the latest commits, and download the artifacts bundle for your OS.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;eDEX-UI’s source code was primarily written by me, &lt;a href=&quot;https://github.com/GitSquared&quot;&gt;Squared&lt;/a&gt;. If you want to get in touch with me or find other projects I’m involved in, check out &lt;a href=&quot;https://gaby.dev&quot;&gt;my website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/PixelyIon&quot;&gt;PixelyIon&lt;/a&gt; helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://soundcloud.com/iamicewolf&quot;&gt;IceWolf&lt;/a&gt; composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Of course, eDEX would never have existed if I hadn’t stumbled upon the amazing work of &lt;a href=&quot;https://github.com/seenaburns&quot;&gt;Seena&lt;/a&gt; on &lt;a href=&quot;https://reddit.com/r/unixporn&quot;&gt;r/unixporn&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project uses a bunch of open-source libraries, frameworks and tools, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/network/dependencies&quot;&gt;the full dependency graph&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I want to namely thank the developers behind &lt;a href=&quot;https://github.com/xtermjs/xterm.js&quot;&gt;xterm.js&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation&quot;&gt;systeminformation&lt;/a&gt; and &lt;a href=&quot;https://github.com/joewalnes/smoothie&quot;&gt;SmoothieCharts&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/arscan&quot;&gt;Rob “Arscan” Scanlon&lt;/a&gt; for making the fantastic &lt;a href=&quot;https://github.com/arscan/encom-globe&quot;&gt;ENCOM Globe&lt;/a&gt;, also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&quot;&gt;GPLv3.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>khanhas/spicetify-cli</title>
      <link>https://github.com/khanhas/spicetify-cli</link>
      <description>&lt;p&gt;Commandline tool to customize Spotify client. Supports Windows, MacOS and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt;&lt;img src=&quot;https://i.imgur.com/iwcLITQ.png&quot; width=&quot;600px&quot;&gt;&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/khanhas/spicetify-cli&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/khanhas/spicetify-cli&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/khanhas/spicetify-cli/all.svg?colorB=97CA00?label=version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/khanhas/spicetify-cli/total.svg?colorB=97CA00&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://spectrum.chat/spicetify&quot;&gt;&lt;img src=&quot;https://withspectrum.github.io/badge/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Command-line tool to customize new Spotify client (v1.1.58 or later). Supports Windows, MacOS and Linux.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/26436809/118751529-d0abcf00-b8a4-11eb-9876-8b15f930a691.png&quot; alt=&quot;img&quot; align=&quot;right&quot; width=&quot;500px&quot;&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change colors whole UI&lt;/li&gt; 
 &lt;li&gt;Inject CSS for advanced customization&lt;/li&gt; 
 &lt;li&gt;Inject Extensions (Javascript script) to extend functionalities, manipulate UI and control player.&lt;/li&gt; 
 &lt;li&gt;Inject Custom apps&lt;/li&gt; 
 &lt;li&gt;Remove bloated components to improve performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Installation&quot;&gt;Installation&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Basic-Usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Customization&quot;&gt;Customization&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Custom-Apps&quot;&gt;Custom Apps&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/h4&gt; 
&lt;h1&gt;Legacy Spotify&lt;/h1&gt; 
&lt;p&gt;If you wish to use old Spotify client v1.1.56 or older, you have to install spicetify v1.2.1. To install older release, please use install script to download pre-built package and specify version:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;: In powershell&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;$v=&quot;1.2.1&quot;; Invoke-WebRequest -UseBasicParsing &quot;https://raw.githubusercontent.com/khanhas/spicetify-cli/master/install.ps1&quot; | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Linux/MacOS:&lt;/strong&gt; In bash&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/khanhas/spicetify-cli/master/install.sh -o /tmp/install.sh
sh /tmp/install.sh 1.2.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;spicetify v1 code is available in branch &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/tree/legacy&quot;&gt;&lt;code&gt;legacy&lt;/code&gt;&lt;/a&gt; if you want to build from source.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>agalwood/Motrix</title>
      <link>https://github.com/agalwood/Motrix</link>
      <description>&lt;p&gt;A full-featured download manager.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Motrix&lt;/h1&gt; 
&lt;a href=&quot;https://motrix.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/static/512x512.png&quot; width=&quot;256&quot; alt=&quot;App Icon&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;A full-featured download manager&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/agalwood/Motrix.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg?sanitize=true&quot; alt=&quot;Build/release&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/agalwood/Motrix/total.svg?sanitize=true&quot; alt=&quot;Total Downloads&quot;&gt; &lt;img src=&quot;https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667&quot; alt=&quot;Support Platforms&quot;&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/README-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.&lt;/p&gt; 
&lt;p&gt;Motrix has a clean and easy to use interface. I hope you will like it 👻.&lt;/p&gt; 
&lt;p&gt;✈️ &lt;a href=&quot;https://motrix.app&quot;&gt;Official Website&lt;/a&gt; | 📖 &lt;a href=&quot;https://github.com/agalwood/Motrix/wiki&quot;&gt;Manual&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💽 Installation&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub Releases&lt;/a&gt; and install it.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.&lt;/p&gt; 
&lt;p&gt;If you use package management tools to manage applications on Windows, such as &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt;. You can use them to install Motrix.&lt;/p&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/iYato&quot;&gt;Yato&lt;/a&gt; for continuing to maintain the &lt;a href=&quot;https://community.chocolatey.org/packages/motrix&quot;&gt;Motrix Chocolatey&lt;/a&gt; package. To install motrix, run the following command from the &lt;code&gt;command line&lt;/code&gt; or from &lt;code&gt;PowerShell&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
choco install motrix

# Upgrade
choco upgrade motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;scoop&lt;/h4&gt; 
&lt;p&gt;If you prefer the portable version, you can use &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt; (need Windows 7+) to install Motrix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scoop bucket add extras
scoop install motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;The macOS users can install Motrix using &lt;code&gt;brew cask&lt;/code&gt;, thanks to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/pull/59494&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/Mitscherlich&quot;&gt;@Mitscherlich&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew update &amp;amp;&amp;amp; brew install --cask motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download the &lt;code&gt;AppImage&lt;/code&gt; (for all Linux distributions) or &lt;code&gt;snap&lt;/code&gt; to install Motrix, see &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub/release&lt;/a&gt; for more Linux installation package formats.&lt;/p&gt; 
&lt;p&gt;Motrix may need to run with &lt;code&gt;sudo&lt;/code&gt; for the first time in Linux because there is no permission to create the download session file (&lt;code&gt;/var/cache/aria2.session&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If you want to build from source code, please read the &lt;strong&gt;Build&lt;/strong&gt; section.&lt;/p&gt; 
&lt;h4&gt;AppImage&lt;/h4&gt; 
&lt;p&gt;The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; .&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Desktop Integration Since electron-builder 21 desktop integration is not a part of produced AppImage file. &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; is the recommended way to integrate AppImages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deepin 20 Beta users failed to install Motrix, please follow the steps below:&lt;/p&gt; 
&lt;p&gt;Open the &lt;code&gt;Terminal&lt;/code&gt;, paste and run the following command to install Motrix again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt --fix-broken install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;Motrix has been listed on &lt;a href=&quot;https://snapcraft.io/motrix&quot;&gt;Snapcraft&lt;/a&gt; , Ubuntu users recommend downloading from the Snap Store.&lt;/p&gt; 
&lt;p&gt;Tips for v1.5.10&lt;/p&gt; 
&lt;p&gt;The tray may not display the indicator normally, which makes it inconvenient to exit the application.&lt;/p&gt; 
&lt;p&gt;Please unchecked Preferences–Basic Settings–Hide App Menu (Windows &amp;amp; Linux Only), click Save &amp;amp; Apply. Then click “Exit” in the File menu to exit the application.&lt;/p&gt; 
&lt;p&gt;Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.&lt;/p&gt; 
&lt;h4&gt;AUR&lt;/h4&gt; 
&lt;p&gt;For Arch Linux users, Motrix is available in &lt;a href=&quot;https://aur.archlinux.org/packages/motrix/&quot;&gt;aur&lt;/a&gt;, thanks to the maintainer &lt;a href=&quot;https://github.com/weearc&quot;&gt;@weearc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the following command to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yay motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Flatpak&lt;/h4&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/flathub/flathub/pull/2334&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/proletarius101&quot;&gt;@proletarius101&lt;/a&gt;, Motrix has been listed &lt;a href=&quot;https://flathub.org/apps/details/net.agalwood.Motrix&quot;&gt;Flathub&lt;/a&gt;, Linux users who like the Flatpak can try it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🕹 Simple and clear user interface&lt;/li&gt; 
 &lt;li&gt;🦄 Supports BitTorrent &amp;amp; Magnet&lt;/li&gt; 
 &lt;li&gt;☑️ BitTorrent selective download&lt;/li&gt; 
 &lt;li&gt;📡 Update tracker list every day automatically&lt;/li&gt; 
 &lt;li&gt;🔌 UPnP &amp;amp; NAT-PMP Port Mapping&lt;/li&gt; 
 &lt;li&gt;🎛 Up to 10 concurrent download tasks&lt;/li&gt; 
 &lt;li&gt;🚀 Supports 64 threads in a single task&lt;/li&gt; 
 &lt;li&gt;🚥 Supports speed limit&lt;/li&gt; 
 &lt;li&gt;🕶 Mock User-Agent&lt;/li&gt; 
 &lt;li&gt;🔔 Download completed Notification&lt;/li&gt; 
 &lt;li&gt;💻 Ready for Touch Bar (Mac only)&lt;/li&gt; 
 &lt;li&gt;🤖 Resident system tray for quick operation&lt;/li&gt; 
 &lt;li&gt;📟 Tray speed meter displays real-time speed (Mac only)&lt;/li&gt; 
 &lt;li&gt;🌑 Dark mode&lt;/li&gt; 
 &lt;li&gt;🗑 Delete related files when removing tasks (optional)&lt;/li&gt; 
 &lt;li&gt;🌍 I18n, &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/#-internationalization&quot;&gt;View supported languages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🛠 More features in development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖥 User Interface&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png&quot; alt=&quot;motrix-screenshot-task-en.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;⌨️ Development&lt;/h2&gt; 
&lt;h3&gt;Clone Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:agalwood/Motrix.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd Motrix
yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Error: Electron failed to install correctly, please delete node_modules/electron and try installing again&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;Electron&lt;/code&gt; failed to install correctly, please refer to https://github.com/electron/electron/issues/8466#issuecomment-571425574&lt;/p&gt; 
&lt;h3&gt;Dev Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Release&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building, the application will be found in the project’s &lt;code&gt;release&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;🛠 Technology Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; + &lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;VueX&lt;/a&gt; + &lt;a href=&quot;https://element.eleme.io&quot;&gt;Element&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/&quot;&gt;Aria2&lt;/a&gt; (Note: macOS and Linux versions use 64-bit aria2c, Windows version uses 32-bit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;☑️ TODO&lt;/h2&gt; 
&lt;p&gt;Development Roadmap see: &lt;a href=&quot;https://trello.com/b/qNUzA0bv/motrix&quot;&gt;Trello&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contribute &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;If you are interested in participating in joint development, PR and Forks are welcome!&lt;/p&gt; 
&lt;h2&gt;🌍 Internationalization&lt;/h2&gt; 
&lt;p&gt;Translations into versions for other languages are welcome 🧐! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/CONTRIBUTING.md#-translation-guide&quot;&gt;translation guide&lt;/a&gt; before starting translations.&lt;/p&gt; 
&lt;p&gt;| Key | Name | Status | |—––|:––––––––––|:———––| | ar | Arabic | ✔️ &lt;a href=&quot;https://github.com/hadialqattan&quot;&gt;@hadialqattan&lt;/a&gt;, &lt;a href=&quot;https://github.com/AhmedElTabarani&quot;&gt;@AhmedElTabarani&lt;/a&gt; | | bg | Българският език | ✔️ &lt;a href=&quot;https://github.com/null-none&quot;&gt;@null-none&lt;/a&gt; | | ca | Català | ✔️ &lt;a href=&quot;https://github.com/marcizhu&quot;&gt;@marcizhu&lt;/a&gt; | | de | Deutsch | ✔️ &lt;a href=&quot;https://github.com/Schloemicher&quot;&gt;@Schloemicher&lt;/a&gt; | | el | Ελληνικά | ✔️ &lt;a href=&quot;https://github.com/Likecinema&quot;&gt;@Likecinema&lt;/a&gt; | | en-US | English | ✔️ | | es | Español | ✔️ &lt;a href=&quot;https://github.com/Chofito&quot;&gt;@Chofito&lt;/a&gt;| | fa | فارسی | ✔️ &lt;a href=&quot;https://github.com/Nima-Ra&quot;&gt;@Nima-Ra&lt;/a&gt; | | fr | Français | ✔️ &lt;a href=&quot;https://github.com/gpatarin&quot;&gt;@gpatarin&lt;/a&gt; | | hu | Hungarian | ✔️ &lt;a href=&quot;https://github.com/zalnaRs&quot;&gt;@zalnaRs&lt;/a&gt; | | id | Indonesia | ✔️ &lt;a href=&quot;https://github.com/aarestu&quot;&gt;@aarestu&lt;/a&gt; | | it | Italiano | ✔️ &lt;a href=&quot;https://github.com/blackcat-917&quot;&gt;@blackcat-917&lt;/a&gt; | | ja | 日本語 | ✔️ &lt;a href=&quot;https://github.com/hbkrkzk&quot;&gt;@hbkrkzk&lt;/a&gt; | | ko | 한국어 | ✔️ &lt;a href=&quot;https://github.com/KOZ39&quot;&gt;@KOZ39&lt;/a&gt; | | nb | Norsk Bokmål | &lt;a href=&quot;https://github.com/rubjo&quot;&gt;@rubjo&lt;/a&gt; | | pl | Polski | ✔️ &lt;a href=&quot;https://github.com/KanarekLife&quot;&gt;@KanarekLife&lt;/a&gt; | | pt-BR | Portuguese (Brazil) | ✔️ &lt;a href=&quot;https://github.com/andrenoberto&quot;&gt;@andrenoberto&lt;/a&gt; | | ro | Română | ✔️ &lt;a href=&quot;https://github.com/alyn3d&quot;&gt;@alyn3d&lt;/a&gt; | | ru | Русский | ✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt; | | tr | Türkçe | ✔️ &lt;a href=&quot;https://github.com/abdullah&quot;&gt;@abdullah&lt;/a&gt; | | uk | Українська | ✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt; | | vi | Tiếng Việt | ✔️ &lt;a href=&quot;https://github.com/duythanhvn&quot;&gt;@duythanhvn&lt;/a&gt; | | zh-CN | 简体中文 | ✔️ | | zh-TW | 繁體中文 | ✔️ &lt;a href=&quot;https://github.com/Yukaii&quot;&gt;@Yukaii&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; Copyright (c) 2018-present Dr_rOot&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>covid19india/covid19india-react</title>
      <link>https://github.com/covid19india/covid19india-react</link>
      <description>&lt;p&gt;Tracking the impact of COVID-19 in India&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://repository-images.githubusercontent.com/247386519/67519080-8691-11ea-9481-0732fb55380b&quot; width=&quot;100%&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Here&#39;s our data &lt;a href=&quot;https://api.covid19india.org&quot;&gt;API&lt;/a&gt;. &lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;yarn install &amp;amp;&amp;amp; yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;If you’re new to contributing to Open Source on Github, &lt;a href=&quot;https://guides.github.com/activities/contributing-to-open-source/&quot;&gt;this guide&lt;/a&gt; can help you get started. Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/covid19india/covid19india-react/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt; for more details on how issues and pull requests work.&lt;/p&gt; 
&lt;h6&gt;This repository is just a small subset of work put together by a much larger pool of voluntary efforts contributed by generous people all around the world. Reach out to us through hello@covid19india.org&lt;/h6&gt;</description>
    </item>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI &amp; Web App for analyzing &amp; finding a person&#39;s profile across social media \ websites (Detections are updated regularly)&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=version&amp;amp;query=$.version&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20sites&amp;amp;query=$.websites&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20detections&amp;amp;query=$.detections&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=pending%20sites&amp;amp;query=$.pending&amp;amp;colorB=orange&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=build&amp;amp;query=$.build&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=test&amp;amp;query=$.test&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/raw/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=docker&amp;amp;query=$.docker&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=%F0%9F%91%8D&amp;amp;message=!&amp;amp;color=yellow&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Social Analyzer - API, CLI &amp;amp; Web App for analyzing &amp;amp; finding a person’s profile across social media \ websites. It includes different string analysis and detection modules, you can choose which combination of modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module intended to have less false positive and it’s documented in this &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt; link&lt;/p&gt; 
&lt;p&gt;The analysis and public extracted information from this OSINT tool could help in investigating profiles related to suspicious or malicious activities such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Cyberbullying&quot;&gt;cyberbullying&lt;/a&gt;, &lt;a href=&quot;https://de.wikipedia.org/wiki/Cyber-Grooming&quot;&gt;cybergrooming&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyberstalking&quot;&gt;cyberstalking&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Misinformation&quot;&gt;spreading misinformation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is &lt;em&gt;“currently used by some law enforcement agencies in countries where resources are limited”&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Update&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Save the GUI analysis \ output as JSON file has been implemented (Users request)&lt;/li&gt; 
 &lt;li&gt;For issues and questions related to the private modules, email me directly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;So·cial Me·di·a&lt;/h2&gt; 
&lt;p&gt;Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary&lt;/p&gt; 
&lt;h2&gt;Security Testing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;-------------------------------------              ---------------------------------
|        Security Testing           |              |        Social-Analyzer        |
-------------------------------------              ---------------------------------
|   Passive Information Gathering   |     &amp;lt;--&amp;gt;     |   Find Social Media Profiles  |
|                                   |              |                               |
|    Active Information Gathering   |     &amp;lt;--&amp;gt;     |    Post Analysis Activities   |
-------------------------------------              ---------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Find Profile WEB APP (Fast)&lt;/h2&gt; 
&lt;p&gt;Standard localhost WEB APP url: http://0.0.0.0:9005/app.html&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif&quot; style=&quot;max-width:768px&quot;&gt; 
&lt;h2&gt;Find Profile WEB APP (Slow)&lt;/h2&gt; 
&lt;p&gt;Standard localhost WEB APP url: http://0.0.0.0:9005/app.html&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_slow.gif&quot; style=&quot;max-width:768px&quot;&gt; 
&lt;p&gt;Profile images &lt;strong&gt;will not&lt;/strong&gt; be blurred. If you want them to be blurred, turn that option on&lt;/p&gt; 
&lt;h2&gt;(New) Find Profile CLI (Fast)&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif&quot; style=&quot;max-width:768px&quot;&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis (Permutations and Combinations)&lt;/li&gt; 
 &lt;li&gt;Find profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi layers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Metadata &amp;amp; Patterns extraction (Added from Qeeqbox osint project)&lt;/li&gt; 
 &lt;li&gt;Force-directed Graph for Metadata (Needs ExtractPatterns)&lt;/li&gt; 
 &lt;li&gt;Auto-flirtation to unnecessary output&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;Filter profiles by good, maybe, and bad&lt;/li&gt; 
 &lt;li&gt;Save the analysis as JSON file&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (example@gmail.com)&lt;/li&gt; 
 &lt;li&gt;Google (example@example.com)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles
# Do not mix FindUserProfilesFast, with FindUserProfilesSlow and ShowUserProfilesSlow

apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
add-apt-repository ppa:mozillateam/ppa -y
apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (Windows + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles
# Do not mix FindUserProfilesFast, with FindUserProfilesSlow and ShowUserProfilesSlow

Download &amp;amp; Install firefox esr (Extended Support Release) from https://www.mozilla.org/en-US/firefox/enterprise/#download
Download &amp;amp; Install https://nodejs.org/en/download/
Download &amp;amp; Extract https://github.com/qeeqbox/social-analyzer/archive/main.zip
cd social-analyzer
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App with a grid (docker-compose)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker-compose -f docker-compose.yml up --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (docker)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker build -t social-analyzer . &amp;amp;&amp;amp; docker run -p 9005:9005 -it social-analyzer
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as Python Module CLI (Windows, Linux, MacOS, Raspberry pi..)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# You can scan all websites using --websites &quot;all&quot;
# There will be status:good or rate:%100 for existing profiles
# If you want to list all websites use python3 -m social-analyzer --cli --list

#install social-analyzer
pip3 install social-analyzer

#all websites with metadata and extraction
python3 -m social-analyzer --cli --username &quot;johndoe&quot; --metadata --extract --trim

#all websites with metadata, extraction, filter only existing profiles with status good
python3 -m social-analyzer --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;all&quot; --metadata --extract --trim --filter &quot;good&quot; --profile &quot;detected&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as Python CLI (Windows, Linux, MacOS, Raspberry pi..)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# You can scan all websites using --websites &quot;all&quot;
# There will be status:good or rate:%100 for existing profiles
# If you want to list all websites use python3 -m social-analyzer --cli --list

#install social-analyzer
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer

#all websites with metadata and extraction
python3 app.py --cli --username &quot;johndoe&quot; --metadata --extract --trim

#all websites with metadata, extraction, filter only existing profiles with status good
python3 app.py --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;all&quot; --metadata --extract --trim --filter &quot;good&quot; --profile &quot;detected&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS CLI (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# You can scan all websites using --websites &quot;all&quot;
# Remember the following runs as FindUserProfilesFast
# There will be status:good or rate:%100 for existing profiles
# If you want to list all websites use app.js --cli --list

apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
add-apt-repository ppa:mozillateam/ppa -y
apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install

#all websites with metadata and extraction
nodejs app.js --cli --username &quot;johndoe&quot; --metadata --extract --trim

#all websites with metadata, extraction, filter only existing profiles with status good
nodejs app.js --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;all&quot; --metadata --extract --trim --filter &quot;good&quot; --profile &quot;detected&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;social-analyzer –h&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Required Arguments:
  --cli        Turn this CLI on
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites   Website or websites separated by space E.g. youtube, tiktok or tumblr
  --mode       Analysis mode E.g.fast -&amp;gt; FindUserProfilesFast, slow -&amp;gt; FindUserProfilesSlow or special -&amp;gt; FindUserProfilesSpecial
  --output     Show the output in the following format: json -&amp;gt; json output for integration or pretty -&amp;gt; prettify the output
  --options    Show the following when a profile is found: link, rate, titleor text
  --method     find -&amp;gt; show detected profiles, get -&amp;gt; show all profiles regardless detected or not, both -&amp;gt; combine find &amp;amp; get
  --filter     filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles   filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --extract    Extract profiles, urls &amp;amp; patterns if possible
  --metadata   Extract metadata if possible (pypi QeeqBox OSINT)
  --trim       Trim long strings

Listing websites &amp;amp; detections:
  --list       List all available websites
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Open in Cloud Shell&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;amp;tutorial=README.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20Cloud%20Shell&amp;amp;color=3267d6&amp;amp;style=flat-square&quot; alt=&quot;Open in Cloud Shell&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Running Issues&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remember that existing profiles show &lt;code&gt;status:good&lt;/code&gt; or &lt;code&gt;rate:%100&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Some websites return &lt;code&gt;blocked&lt;/code&gt; or &lt;code&gt;invalid&lt;/code&gt; &amp;lt;- this is the intended behavior&lt;/li&gt; 
 &lt;li&gt;Use Proxy, VPN, TOR or anything similar for periodic suspicious-profiles checking&lt;/li&gt; 
 &lt;li&gt;Change the user-agent to most updated one or increase the random time between requests&lt;/li&gt; 
 &lt;li&gt;Use the slow mode (Not available in the CLIs) to avoid running into blocking\results issue&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Adding the generic websites detections (These need some reviewing, but I will try to add them in 2021)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interviews&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://console.substack.com/p/console-37&quot;&gt;Console 37&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Some News\Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/GithubProjects/status/1395205169617547266&quot;&gt;5 Open-Source Intelligence (OSINT) GitHub Repositories For Every Security Analyst (Cyber Security)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure to download this tool from GitHub&lt;/li&gt; 
 &lt;li&gt;This is a security project (Treat it as a security project)&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project list, please reach out to me&lt;/li&gt; 
 &lt;li&gt;This tool meant to be used locally not as a service (It does not have any type of Access Control)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/qeeqbox/analyzer&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/analyzer.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/chameleon&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/chameleon.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/honeypots&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/honeypots.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/osint&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/osint.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/url-sandbox&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/url-sandbox.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/mitre-visualizer&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/mitre-visualizer.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/woodpecker&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/woodpecker.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/docker-images&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/docker-images.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/seahorse&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/seahorse.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/rhino&quot;&gt;&lt;img src=&quot;https://github.com/qeeqbox/.github/raw/main/data/rhino.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>h5bp/html5-boilerplate</title>
      <link>https://github.com/h5bp/html5-boilerplate</link>
      <description>&lt;p&gt;A professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;HTML5 Boilerplate&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/actions?query=workflow%3A%22Build+status%22+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/h5bp/html5-boilerplate/workflows/Build%20status/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/raw/master/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-lightgrey.svg?sanitize=true&quot; alt=&quot;LICENSE&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/h5bp/html5-boilerplate#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/h5bp/html5-boilerplate/dev-status.svg?sanitize=true&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/html5-boilerplate&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/html5-boilerplate.svg?sanitize=true&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars&quot; alt=&quot;github-stars-image&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;/p&gt; 
&lt;p&gt;This project is the product of over 10 years of iterative development and community knowledge. It does not impose a specific development philosophy or framework, so you’re free to architect your code in the way that you want.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Homepage: &lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;https://html5boilerplate.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Source: &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate&quot;&gt;https://github.com/h5bp/html5-boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/h5bp&quot;&gt;@h5bp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Choose one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download the latest stable release from &lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;html5boilerplate.com&lt;/a&gt;. This zip file is a snapshot of the &lt;code&gt;dist&lt;/code&gt; folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like &lt;code&gt;html5-boilerplate_v7.3.0&lt;/code&gt;. From the command line will need to create a folder and unzip the contents into that folder.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir html5-boilerplate
unzip html5-boilerplate*.zip -d html5-boilerplate
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the git repo — &lt;code&gt;git clone https://github.com/h5bp/html5-boilerplate.git&lt;/code&gt; - and checkout the &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases&quot;&gt;tagged release&lt;/a&gt; you’d like to use. The &lt;code&gt;dist&lt;/code&gt; folder represents the latest version of the project for end users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install html5-boilerplate&lt;/code&gt; or &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add html5-boilerplate&lt;/code&gt;. The resulting &lt;code&gt;node_modules/html5-boilerplate/dist&lt;/code&gt; folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using our new &lt;a href=&quot;https://github.com/h5bp/create-html5-boilerplate&quot;&gt;create-html5-boilerplate&lt;/a&gt; project, instantly fetch the latest npm published package (or any version available on npm) with &lt;code&gt;npx&lt;/code&gt;, &lt;code&gt;npm init&lt;/code&gt; or &lt;code&gt;yarn create&lt;/code&gt; without having to install any dependencies. Running the following &lt;code&gt;npx&lt;/code&gt; command installs the latest version into a folder called &lt;code&gt;new-site&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npx create-html5-boilerplate new-site
cd new-site
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A finely-tuned starter template. Reap the benefits of 10 years of analysis, research and experimentation by over 200 contributors.&lt;/li&gt; 
 &lt;li&gt;Designed with progressive enhancement in mind.&lt;/li&gt; 
 &lt;li&gt;Includes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://necolas.github.io/normalize.css/&quot;&gt;&lt;code&gt;Normalize.css&lt;/code&gt;&lt;/a&gt; for CSS normalizations and common bug fixes&lt;/li&gt; 
   &lt;li&gt;A custom build of &lt;a href=&quot;https://modernizr.com/&quot;&gt;&lt;code&gt;Modernizr&lt;/code&gt;&lt;/a&gt; for feature detection&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/h5bp/server-configs-apache&quot;&gt;&lt;code&gt;Apache Server Configs&lt;/code&gt;&lt;/a&gt; that improve the web site’s performance and security&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Placeholder Open Graph elements and attributes.&lt;/li&gt; 
 &lt;li&gt;An example package.json file with &lt;a href=&quot;https://parceljs.org/&quot;&gt;Parcel&lt;/a&gt; commands built in to jumpstart application development&lt;/li&gt; 
 &lt;li&gt;Placeholder CSS Media Queries.&lt;/li&gt; 
 &lt;li&gt;Useful CSS helper classes.&lt;/li&gt; 
 &lt;li&gt;Default print styles, performance optimized.&lt;/li&gt; 
 &lt;li&gt;An optimized version of the Google Universal Analytics snippet.&lt;/li&gt; 
 &lt;li&gt;Protection against any stray &lt;code&gt;console&lt;/code&gt; statements causing JavaScript errors in older browsers.&lt;/li&gt; 
 &lt;li&gt;“Delete-key friendly.” Easy to strip out parts you don’t need.&lt;/li&gt; 
 &lt;li&gt;Extensive documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Edge &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Firefox &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Internet Explorer 11&lt;/li&gt; 
 &lt;li&gt;Opera &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Safari &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;This doesn’t mean that HTML5 Boilerplate cannot be used in older browsers, just that we’ll ensure compatibility with the ones mentioned above.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you need legacy browser support you can use &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases/tag/6.1.0&quot;&gt;HTML5 Boilerplate v6&lt;/a&gt; (IE9/IE10) or &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases/tag/5.3.0&quot;&gt;HTML5 Boilerplate v5&lt;/a&gt; (IE 8). They are no longer actively developed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/dist/doc/TOC.md&quot;&gt;documentation table of contents&lt;/a&gt;. This documentation is bundled with the project which makes it available for offline reading and provides a useful starting point for any documentation you want to write about your project.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Hundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;, however, if you decide to get involved, please take a moment to review the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md&quot;&gt;guidelines&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#bugs&quot;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#features&quot;&gt;Feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#pull-requests&quot;&gt;Pull requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code is available under the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yichahucha/surge</title>
      <link>https://github.com/yichahucha/surge</link>
      <description>&lt;p&gt;Some useful scripts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Surge&lt;/h1&gt; 
&lt;p&gt;Weibo&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[Script]
http-response ^https?://(sdk|wb)app\.uve\.weibo\.com(/interface/sdk/sdkad.php|/wbapplua/wbpullad.lua) requires-body=1,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_launch.js
http-response ^https?://m?api\.weibo\.c(n|om)/2/(statuses/(unread|extend|positives/get|(friends|video)(/|_)(mix)?timeline)|stories/(video_stream|home_list)|(groups|fangle)/timeline|profile/statuses|comments/build_comments|photo/recommend_list|service/picfeed|searchall|cardlist|page|!/(photos/pic_recommend_status|live/media_homelist)|video/tiny_stream_video_list|photo/info|remind/unread_count) requires-body=1,max-size=-1,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_ad.js
[MITM]
hostname = api.weibo.cn, mapi.weibo.com, *.uve.weibo.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display netflix ratings（IMDb、douban）&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[Script]
nf_rating.js = type=http-request,pattern=^https?:\/\/ios(-.*)?\.prod\.ftl\.netflix\.com\/iosui\/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js
nf_rating.js = type=http-response,requires-body=1,pattern=^https?:\/\/ios(-.*)?\.prod\.ftl\.netflix\.com\/iosui\/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js
# 单集评分
nf_rating_season.js = type=http-response,pattern=^https?:\/\/ios(-.*)?\.prod\.ftl\.netflix\.com\/iosui\/warmer/.+type=show-ath,requires-body=1,max-size=0,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating_season.js
[MITM]
hostname = ios-*.prod.ftl.netflix.com,ios.prod.ftl.netflix.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display jd historical price&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;# 不生效或失效的检查一下配置有没有这两条复写，删除试试
# ^https?:\/\/api\.m\.jd.com\/client\.action\?functionId=start - reject
# ^https?:\/\/api\.m\.jd.com\/client\.action\?functionId=(start|queryMaterialAdverts) - reject
[Script]
http-response ^https?://api\.m\.jd\.com/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) requires-body=1,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/jd_price.js
[MITM]
hostname = api.m.jd.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display taobao historical price&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;# 不生效或失效的需要卸载 tb 重装，注意不开脚本进 tb 会失效
[Script]
http-request ^http://.+/amdc/mobileDispatch requires-body=1,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
http-response ^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail requires-body=1,script-path=https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
[MITM]
hostname = trade-acs.m.taobao.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DingDing clock in&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[Script]
cron &quot;0 9,18 * * 1-5&quot; script-path=https://raw.githubusercontent.com/yichahucha/surge/master/clock_in.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Quan-X&lt;/h1&gt; 
&lt;p&gt;Weibo&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[rewrite_local]
^https?://(sdk|wb)app\.uve\.weibo\.com(/interface/sdk/sdkad.php|/wbapplua/wbpullad.lua) url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/wb_launch.js
^https?://m?api\.weibo\.c(n|om)/2/(statuses/(unread|extend|positives/get|(friends|video)(/|_)(mix)?timeline)|stories/(video_stream|home_list)|(groups|fangle)/timeline|profile/statuses|comments/build_comments|photo/recommend_list|service/picfeed|searchall|cardlist|page|!/(photos/pic_recommend_status|live/media_homelist)|video/tiny_stream_video_list|photo/info|remind/unread_count) url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/wb_ad.js
[mitm]
hostname = api.weibo.cn, mapi.weibo.com, *.uve.weibo.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display netflix ratings（IMDb、douban）&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[rewrite_local]
^https?://ios(-.*)?\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D url script-request-header https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js
^https?://ios(-.*)?\.prod\.ftl\.netflix\.com/iosui/user/.+path=%5B%22videos%22%2C%\d+%22%2C%22summary%22%5D url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/nf_rating.js
[mitm]
hostname = ios-*.prod.ftl.netflix.com,ios.prod.ftl.netflix.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display jd historical price&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[rewrite_local]
^https?://api\.m\.jd\.com/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/jd_price.js
[mitm]
hostname = api.m.jd.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display taobao historical price&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;# 不生效或失效的需要卸载 tb 重装，注意不开脚本进 tb 会失效
[rewrite_local]
^http://.+/amdc/mobileDispatch url script-request-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
[mitm]
hostname = trade-acs.m.taobao.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DingDing clock in&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;[task_local]
0 9,18 * * 1-5 https://raw.githubusercontent.com/yichahucha/surge/master/clock_in.js
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mikecao/umami</title>
      <link>https://github.com/mikecao/umami</link>
      <description>&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;umami&lt;/h1&gt; 
&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href=&quot;https://umami.is/docs/&quot;&gt;https://umami.is/docs/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing from source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js 10.13 or newer&lt;/li&gt; 
 &lt;li&gt;A database (MySQL or Postgresql)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the source code and install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/mikecao/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create database tables&lt;/h3&gt; 
&lt;p&gt;Umami supports &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;Postgresql&lt;/a&gt;. Create a database for your Umami installation and install the tables with the included scripts.&lt;/p&gt; 
&lt;p&gt;For MySQL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mysql -u username -p databasename &amp;lt; sql/schema.mysql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Postgresql:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;psql -h hostname -U username -d databasename -f sql/schema.postgresql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will also create a login account with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Configure umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DATABASE_URL=(connection url)
HASH_SALT=(any random string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection url is in the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;postgresql://username:mypassword@localhost:5432/mydb

mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;HASH_SALT&lt;/code&gt; is used to generate unique values for your installation.&lt;/p&gt; 
&lt;h3&gt;Build the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/&quot;&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href=&quot;https://nextjs.org/docs/api-reference/cli#production&quot;&gt;port&lt;/a&gt; to serve the application directly.&lt;/p&gt; 
&lt;h2&gt;Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/iptv-org/iptv/actions/workflows/auto-update.yml/badge.svg?sanitize=true&quot; alt=&quot;auto-update&quot;&gt; &lt;img src=&quot;https://github.com/iptv-org/iptv/actions/workflows/clean.yml/badge.svg?sanitize=true&quot; alt=&quot;clean&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Collection of publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h3&gt;Playlists by category&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Auto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Animation&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Business&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;56&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Classic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Comedy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Cooking&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Culture&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Documentary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Education&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Entertainment&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;98&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Family&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;General&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;197&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kids&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Legislative&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lifestyle&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Local&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;340&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/local.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Movies&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Music&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;261&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;News&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;365&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Outdoor&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;36&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Relax&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Religious&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;218&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Series&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Science&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Shop&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sports&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;123&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Travel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Weather&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;XXX&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;73&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Other&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8261&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/other.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by language&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Akan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aka.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;320&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;732&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1774&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;161&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;209&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;114&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;147&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Korean&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kurdish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Latvian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lithuanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lit.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Luxembourgish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ltz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Macedonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mkd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malay (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/msa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malayalam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mal.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mandarin Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;76&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cmn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Maori&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mri.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Min Nan Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Modern Greek (1453-)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mongolian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mon.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Montenegrin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Nepali (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nep.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Norwegian Bokmål&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nob.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Panjabi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Persian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;80&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fas.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Polish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pol.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Portuguese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;92&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/por.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Pushto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Romanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;67&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ron.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Russian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;340&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/rus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Serbian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/srp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sinhala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovak&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Somali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/som.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Spanish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;514&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/spa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Swedish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/swe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tagalog&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tgl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tamil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tam.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Thai&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tha.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;81&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkmen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tuk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Ukrainian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;79&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ukr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Urdu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/urd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Uzbek&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/uzb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Vietnamese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/vie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Western Frisian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fry.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Yue Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/yue.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5086&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by country&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Country&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇫&amp;nbsp;Afghanistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/af.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇱&amp;nbsp;Albania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/al.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇿&amp;nbsp;Algeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇸&amp;nbsp;American Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/as.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇩&amp;nbsp;Andorra&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ad.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇴&amp;nbsp;Angola&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇮&amp;nbsp;Anguilla&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ai.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇬&amp;nbsp;Antigua &amp;amp; Barbuda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ag.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇷&amp;nbsp;Argentina&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ar.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇲&amp;nbsp;Armenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/am.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇼&amp;nbsp;Aruba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/aw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇺&amp;nbsp;Australia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;110&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/au.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇹&amp;nbsp;Austria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;54&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/at.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇿&amp;nbsp;Azerbaijan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/az.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇸&amp;nbsp;Bahamas&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇭&amp;nbsp;Bahrain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;59&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇩&amp;nbsp;Bangladesh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇧&amp;nbsp;Barbados&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇾&amp;nbsp;Belarus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/by.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇪&amp;nbsp;Belgium&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/be.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇿&amp;nbsp;Belize&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇯&amp;nbsp;Benin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇲&amp;nbsp;Bermuda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇹&amp;nbsp;Bhutan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇴&amp;nbsp;Bolivia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇦&amp;nbsp;Bosnia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ba.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇼&amp;nbsp;Botswana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇷&amp;nbsp;Brazil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;159&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/br.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇬&amp;nbsp;British Virgin Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇳&amp;nbsp;Brunei&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇬&amp;nbsp;Bulgaria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇫&amp;nbsp;Burkina Faso&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇮&amp;nbsp;Burundi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇭&amp;nbsp;Cambodia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇲&amp;nbsp;Cameroon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇦&amp;nbsp;Canada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;126&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ca.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇻&amp;nbsp;Cape Verde&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇾&amp;nbsp;Cayman Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ky.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇫&amp;nbsp;Central African Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇩&amp;nbsp;Chad&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/td.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇱&amp;nbsp;Chile&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇳&amp;nbsp;China&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;869&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇴&amp;nbsp;Colombia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;33&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/co.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇲&amp;nbsp;Comoros&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/km.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇬&amp;nbsp;Congo - Brazzaville&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇩&amp;nbsp;Congo - Kinshasa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇰&amp;nbsp;Cook Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ck.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇷&amp;nbsp;Costa Rica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇷&amp;nbsp;Croatia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇺&amp;nbsp;Cuba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇼&amp;nbsp;Curaçao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇾&amp;nbsp;Cyprus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇿&amp;nbsp;Czechia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇮&amp;nbsp;Côte d’Ivoire&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ci.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇰&amp;nbsp;Denmark&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇯&amp;nbsp;Djibouti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇲&amp;nbsp;Dominica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇴&amp;nbsp;Dominican Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;65&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/do.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇨&amp;nbsp;Ecuador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ec.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇬&amp;nbsp;Egypt&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;67&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇻&amp;nbsp;El Salvador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇶&amp;nbsp;Equatorial Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇷&amp;nbsp;Eritrea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/er.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇪&amp;nbsp;Estonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ee.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇿&amp;nbsp;Eswatini&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇹&amp;nbsp;Ethiopia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/et.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇴&amp;nbsp;Faroe Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇯&amp;nbsp;Fiji&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇮&amp;nbsp;Finland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇷&amp;nbsp;France&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;168&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇫&amp;nbsp;French Guiana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇫&amp;nbsp;French Polynesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇫&amp;nbsp;French Southern Territories&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇦&amp;nbsp;Gabon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ga.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇲&amp;nbsp;Gambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇪&amp;nbsp;Georgia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ge.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇪&amp;nbsp;Germany&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;344&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/de.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇭&amp;nbsp;Ghana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇷&amp;nbsp;Greece&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;143&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇱&amp;nbsp;Greenland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇩&amp;nbsp;Grenada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇵&amp;nbsp;Guadeloupe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇺&amp;nbsp;Guam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇹&amp;nbsp;Guatemala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇳&amp;nbsp;Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇼&amp;nbsp;Guinea-Bissau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇹&amp;nbsp;Haiti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ht.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇳&amp;nbsp;Honduras&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇰&amp;nbsp;Hong Kong&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇺&amp;nbsp;Hungary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇸&amp;nbsp;Iceland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/is.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇳&amp;nbsp;India&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;231&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/in.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇩&amp;nbsp;Indonesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;50&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/id.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🌍&amp;nbsp;International&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;92&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/int.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇷&amp;nbsp;Iran&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;92&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ir.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇶&amp;nbsp;Iraq&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/iq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇪&amp;nbsp;Ireland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇱&amp;nbsp;Israel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/il.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇹&amp;nbsp;Italy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;337&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/it.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇲&amp;nbsp;Jamaica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇵&amp;nbsp;Japan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;56&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇴&amp;nbsp;Jordan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;55&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇿&amp;nbsp;Kazakhstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇪&amp;nbsp;Kenya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ke.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇮&amp;nbsp;Kiribati&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ki.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇽🇰&amp;nbsp;Kosovo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/xk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇼&amp;nbsp;Kuwait&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇬&amp;nbsp;Kyrgyzstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇦&amp;nbsp;Laos&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/la.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇻&amp;nbsp;Latvia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇧&amp;nbsp;Lebanon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;71&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇸&amp;nbsp;Lesotho&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ls.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇷&amp;nbsp;Liberia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇾&amp;nbsp;Libya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ly.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇮&amp;nbsp;Liechtenstein&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/li.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇹&amp;nbsp;Lithuania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇺&amp;nbsp;Luxembourg&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;36&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇴&amp;nbsp;Macao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇬&amp;nbsp;Madagascar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇼&amp;nbsp;Malawi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇾&amp;nbsp;Malaysia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/my.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇻&amp;nbsp;Maldives&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇱&amp;nbsp;Mali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ml.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇹&amp;nbsp;Malta&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇭&amp;nbsp;Marshall Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇶&amp;nbsp;Martinique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇷&amp;nbsp;Mauritania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇺&amp;nbsp;Mauritius&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇾🇹&amp;nbsp;Mayotte&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/yt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇽&amp;nbsp;Mexico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇲&amp;nbsp;Micronesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇩&amp;nbsp;Moldova&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/md.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇨&amp;nbsp;Monaco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇳&amp;nbsp;Mongolia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇪&amp;nbsp;Montenegro&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/me.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇸&amp;nbsp;Montserrat&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ms.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇦&amp;nbsp;Morocco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;62&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ma.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇿&amp;nbsp;Mozambique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇲&amp;nbsp;Myanmar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇦&amp;nbsp;Namibia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/na.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇷&amp;nbsp;Nauru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇵&amp;nbsp;Nepal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/np.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇱&amp;nbsp;Netherlands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇨&amp;nbsp;New Caledonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇿&amp;nbsp;New Zealand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇮&amp;nbsp;Nicaragua&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ni.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇪&amp;nbsp;Niger&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ne.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇬&amp;nbsp;Nigeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇺&amp;nbsp;Niue&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇫&amp;nbsp;Norfolk Island&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇵&amp;nbsp;North Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇰&amp;nbsp;North Macedonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇵&amp;nbsp;Northern Mariana Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇴&amp;nbsp;Norway&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/no.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇴🇲&amp;nbsp;Oman&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;55&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/om.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇰&amp;nbsp;Pakistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇼&amp;nbsp;Palau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇸&amp;nbsp;Palestine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ps.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇦&amp;nbsp;Panama&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇬&amp;nbsp;Papua New Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇾&amp;nbsp;Paraguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/py.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇪&amp;nbsp;Peru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇭&amp;nbsp;Philippines&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ph.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇳&amp;nbsp;Pitcairn Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇱&amp;nbsp;Poland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇹&amp;nbsp;Portugal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;39&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇷&amp;nbsp;Puerto Rico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇶🇦&amp;nbsp;Qatar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/qa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇴&amp;nbsp;Romania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;84&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ro.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇺&amp;nbsp;Russia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;466&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ru.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇼&amp;nbsp;Rwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇪&amp;nbsp;Réunion&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/re.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇼🇸&amp;nbsp;Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ws.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇲&amp;nbsp;San Marino&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇦&amp;nbsp;Saudi Arabia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;91&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇳&amp;nbsp;Senegal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇸&amp;nbsp;Serbia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇨&amp;nbsp;Seychelles&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇱&amp;nbsp;Sierra Leone&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇬&amp;nbsp;Singapore&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇽&amp;nbsp;Sint Maarten&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇰&amp;nbsp;Slovakia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;46&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇮&amp;nbsp;Slovenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/si.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇧&amp;nbsp;Solomon Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇴&amp;nbsp;Somalia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;50&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/so.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇦&amp;nbsp;South Africa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/za.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇷&amp;nbsp;South Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;127&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇸&amp;nbsp;South Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ss.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇸&amp;nbsp;Spain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;264&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/es.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇰&amp;nbsp;Sri Lanka&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇱&amp;nbsp;St. Barthélemy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇭&amp;nbsp;St. Helena&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇳&amp;nbsp;St. Kitts &amp;amp; Nevis&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇨&amp;nbsp;St. Lucia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇫&amp;nbsp;St. Martin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇲&amp;nbsp;St. Pierre &amp;amp; Miquelon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇨&amp;nbsp;St. Vincent &amp;amp; Grenadines&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇩&amp;nbsp;Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇪&amp;nbsp;Sweden&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/se.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇭&amp;nbsp;Switzerland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;113&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ch.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇾&amp;nbsp;Syria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇹&amp;nbsp;São Tomé &amp;amp; Príncipe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/st.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇼&amp;nbsp;Taiwan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;77&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇯&amp;nbsp;Tajikistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇿&amp;nbsp;Tanzania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇭&amp;nbsp;Thailand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/th.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇱&amp;nbsp;Timor-Leste&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇬&amp;nbsp;Togo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇰&amp;nbsp;Tokelau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇴&amp;nbsp;Tonga&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/to.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇹&amp;nbsp;Trinidad &amp;amp; Tobago&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇳&amp;nbsp;Tunisia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇷&amp;nbsp;Turkey&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;298&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇲&amp;nbsp;Turkmenistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇨&amp;nbsp;Turks &amp;amp; Caicos Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇻&amp;nbsp;Tuvalu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇮&amp;nbsp;U.S. Virgin Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇬&amp;nbsp;Uganda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ug.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇦&amp;nbsp;Ukraine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ua.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇪&amp;nbsp;United Arab Emirates&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;119&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ae.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇧&amp;nbsp;United Kingdom&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;193&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇸&amp;nbsp;United States&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1648&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/us.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇾&amp;nbsp;Uruguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇿&amp;nbsp;Uzbekistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇺&amp;nbsp;Vanuatu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇦&amp;nbsp;Vatican City&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/va.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇪&amp;nbsp;Venezuela&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ve.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇳&amp;nbsp;Vietnam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇼🇫&amp;nbsp;Wallis &amp;amp; Futuna&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/wf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇭&amp;nbsp;Western Sahara&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇾🇪&amp;nbsp;Yemen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;57&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇲&amp;nbsp;Zambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇼&amp;nbsp;Zimbabwe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇽&amp;nbsp;Åland Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ax.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2661&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Add &lt;code&gt;.sfw&lt;/code&gt; to the end of the filename for the lists without any adult channels (For example: &lt;code&gt;https://iptv-org.github.io/iptv/countries/fr.sfw.m3u&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue. However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that’s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_mern_memories</title>
      <link>https://github.com/adrianhajdin/project_mern_memories</link>
      <description>&lt;p&gt;This is a code repository for the corresponding video tutorial. Using React, Node.js, Express &amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memories&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/Z8Y0CJv/Screenshot-2020-10-30-at-11-10-04.png&quot; alt=&quot;Memories&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial - https://youtube.com/playlist?list=PL6QREj8te1P7VSwhrMf3D3Xt4V6_SRkhu.&lt;/p&gt; 
&lt;p&gt;Using React, Node.js, Express &amp;amp; MongoDB you’ll learn how to build a Full Stack MERN Application - from start to finish. The App is called “Memories” and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will have a strong understanding of how the MERN Stack works.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the app&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/vy29n6aj/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don’t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>parcel-bundler/parcel</title>
      <link>https://github.com/parcel-bundler/parcel</link>
      <description>&lt;p&gt;📦🚀 Blazing fast, zero configuration web application bundler&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://parceljs.org/&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Parcel&quot; src=&quot;https://user-images.githubusercontent.com/19409/31321658-f6aed0f2-ac3d-11e7-8100-1587e676e0ec.png&quot; width=&quot;749&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/parcel/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/parcel/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/devongovett/devongovett/_build/latest?definitionId=1&quot;&gt;&lt;img src=&quot;https://dev.azure.com/devongovett/devongovett/_apis/build/status/parcel-bundler.parcel?branchName=v2&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/parcel&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/parcel.svg?sanitize=true&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/parcel&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/parcel.svg?sanitize=true&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/parceljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/parceljs.svg?style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Blazing fast&lt;/strong&gt; bundle times - multicore compilation, and a filesystem cache for fast rebuilds even after a restart.&lt;/li&gt; 
 &lt;li&gt;📦 Out of the box support for JS, CSS, HTML, file assets, and more - &lt;strong&gt;no plugins to install&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;🐠 &lt;strong&gt;Automatically transforms modules&lt;/strong&gt; using Babel, PostCSS, and PostHTML when needed - even &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;✂️ Zero configuration &lt;strong&gt;code splitting&lt;/strong&gt; using dynamic &lt;code&gt;import()&lt;/code&gt; statements.&lt;/li&gt; 
 &lt;li&gt;🔥 Built in support for &lt;strong&gt;hot module replacement&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🚨 Friendly error logging experience - syntax highlighted code frames help pinpoint the problem.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Below is the design document that was created before work on the implementation of Parcel 2 started and some sections are outdated. The actual (somewhat complete) documentation for Parcel 2 is available here: https://v2.parceljs.org/.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Before we get started, you’ll need to install Node and Yarn (or npm) and create a &lt;code&gt;package.json&lt;/code&gt; for your project if you haven’t already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then with Yarn you can install &lt;code&gt;parcel&lt;/code&gt; into your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn add --dev parcel@next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From there you just need to point Parcel at some of your entry files. Like if you’re building a website, an &lt;code&gt;index.html&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now if you just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn parcel index.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get a URL that looks something like: &lt;code&gt;http://localhost:1234/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Next you can start adding dependencies by specifying them in your code (however your language specifies other assets). So for HTML we could create a &lt;code&gt;styles.css&lt;/code&gt; file next to our &lt;code&gt;index.html&lt;/code&gt; file and include it with a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;h1 {
  color: hotpink;
  font-family: cursive;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./styles.css&quot; /&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If we want parcel to update our changes in the browser without refreshing the page, we need to add at least a dummy javascript file e.g. &lt;code&gt;app.js&lt;/code&gt; next to our &lt;code&gt;index.html&lt;/code&gt;. This file allows parcel to inject all the necessary code to show your changes. This file will later contain your javascript application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;Hello World&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./styles.css&quot; /&amp;gt;
    &amp;lt;script src=&quot;./app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-cli&quot;&gt;Parcel CLI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#cli-args--flags&quot;&gt;CLI Args &amp;amp; Flags&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-serve&quot;&gt;&lt;code&gt;parcel serve&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-watch&quot;&gt;&lt;code&gt;parcel watch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-build&quot;&gt;&lt;code&gt;parcel build&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#entries&quot;&gt;&lt;code&gt;[...entries]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--target-name&quot;&gt;&lt;code&gt;--target [name]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--open--o-browser&quot;&gt;&lt;code&gt;--open, -o [browser]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--host-host&quot;&gt;&lt;code&gt;--host &amp;lt;host&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--port-port--p&quot;&gt;&lt;code&gt;--port &amp;lt;port&amp;gt;, -p&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--https&quot;&gt;&lt;code&gt;--https&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--cert-path&quot;&gt;&lt;code&gt;--cert &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--key-path&quot;&gt;&lt;code&gt;--key &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--dist-dir-dir&quot;&gt;&lt;code&gt;--dist-dir &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--cache-dir-dir---no-cache&quot;&gt;&lt;code&gt;--cache-dir &amp;lt;dir&amp;gt;&lt;/code&gt;, &lt;code&gt;--no-cache&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot---no-hot&quot;&gt;&lt;code&gt;--hot&lt;/code&gt;, &lt;code&gt;--no-hot&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot-host-hostname&quot;&gt;&lt;code&gt;--hot-host &amp;lt;hostname&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot-port-port&quot;&gt;&lt;code&gt;--hot-port &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--no-source-maps&quot;&gt;&lt;code&gt;--[no-]source-maps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--autoinstall-npmyarn---no-autoinstall&quot;&gt;&lt;code&gt;--autoinstall [npm/yarn], --no-autoinstall&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--log-level-level&quot;&gt;&lt;code&gt;--log-level &amp;lt;level&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--version--v--v&quot;&gt;&lt;code&gt;--version, -v, -V&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--help--h&quot;&gt;&lt;code&gt;--help, -h&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-config&quot;&gt;Parcel Config&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#configuring-external-tools&quot;&gt;Configuring external tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#configuring-parcel&quot;&gt;Configuring Parcel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejson&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonname&quot;&gt;&lt;code&gt;package.json#name&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonversion&quot;&gt;&lt;code&gt;package.json#version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonmain&quot;&gt;&lt;code&gt;package.json#main&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonmodule&quot;&gt;&lt;code&gt;package.json#module&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonbrowser&quot;&gt;&lt;code&gt;package.json#browser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonsource&quot;&gt;&lt;code&gt;package.json#source&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonbrowserslist&quot;&gt;&lt;code&gt;package.json#browserslist&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonengines&quot;&gt;&lt;code&gt;package.json#engines&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsontargets&quot;&gt;&lt;code&gt;package.json#targets&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonalias&quot;&gt;&lt;code&gt;package.json#alias&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrc&quot;&gt;&lt;code&gt;.parcelrc&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#glob-maps-in-parcelrc&quot;&gt;Glob maps in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcextends&quot;&gt;&lt;code&gt;.parcelrc#extends&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcresolvers&quot;&gt;&lt;code&gt;.parcelrc#resolvers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrctransformers&quot;&gt;&lt;code&gt;.parcelrc#transformers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcbundler&quot;&gt;&lt;code&gt;.parcelrc#bundler&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcnamers&quot;&gt;&lt;code&gt;.parcelrc#namers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcruntimes&quot;&gt;&lt;code&gt;.parcelrc#runtimes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcpackagers&quot;&gt;&lt;code&gt;.parcelrc#packagers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcoptimizers&quot;&gt;&lt;code&gt;.parcelrc#optimizers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcreporters&quot;&gt;&lt;code&gt;.parcelrc#reporters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcvalidators&quot;&gt;&lt;code&gt;.parcelrc#validators&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-architecture&quot;&gt;Parcel Architecture&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#phases-of-parcel&quot;&gt;Phases of Parcel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-graph&quot;&gt;Asset Graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundles&quot;&gt;Bundles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#target-configuration&quot;&gt;Target Configuration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#caching&quot;&gt;Caching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-resolution&quot;&gt;Asset Resolution&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#local-paths&quot;&gt;Local Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#package-paths&quot;&gt;Package Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#urls&quot;&gt;URLs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#tilde-paths&quot;&gt;Tilde Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#aliases&quot;&gt;Aliases&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#plugins&quot;&gt;Plugins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers&quot;&gt;Resolvers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers&quot;&gt;Transformers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundlers&quot;&gt;Bundlers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers&quot;&gt;Namers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes&quot;&gt;Runtimes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers&quot;&gt;Packagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers&quot;&gt;Optimizers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters&quot;&gt;Reporters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators&quot;&gt;Validators&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#creating-plugins&quot;&gt;Creating Plugins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#naming&quot;&gt;Naming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#engines&quot;&gt;Engines&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#plugin-apis&quot;&gt;Plugin APIs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers-1&quot;&gt;Resolvers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers-1&quot;&gt;Transformers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundler&quot;&gt;Bundler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers-1&quot;&gt;Namers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes-1&quot;&gt;Runtimes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers-1&quot;&gt;Packagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers-1&quot;&gt;Optimizers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters-1&quot;&gt;Reporters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators-1&quot;&gt;Validators&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Parcel is a compiler for all your code, regardless of the language or toolchain.&lt;/p&gt; 
&lt;p&gt;Parcel takes all of your files and dependencies, transforms them, and merges them together into a smaller set of output files that can be used to run your code.&lt;/p&gt; 
&lt;p&gt;Parcel supports many different languages and file types out of the box, from web technologies like HTML, CSS, and JavaScript, to lower level languages like Rust, and anything that compiles to WebAssembly (WASM), to assets like images, fonts, videos, and more.&lt;/p&gt; 
&lt;p&gt;Parcel makes your code portable. You can build your code for different environments, for the web for your server, or for an app. You can even build multiple targets at once and have them live update as you make changes.&lt;/p&gt; 
&lt;p&gt;Parcel is fast and predictable. It compiles all of your files in isolation in parallel inside workers, caching all of them as it goes along. Caches are stable across machines and are only affected by the files and configs within your project (unless you want to pass specific environment variables).&lt;/p&gt; 
&lt;h2&gt;Parcel CLI&lt;/h2&gt; 
&lt;p&gt;The Parcel CLI is built into the main &lt;code&gt;parcel&lt;/code&gt; package. While you can install it globally and run it, it is much better to install it locally into your project as a dev dependency.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn add --dev parcel@next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should also add some “scripts” to your &lt;code&gt;package.json&lt;/code&gt; to run it easier.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-project&quot;,
  &quot;scripts&quot;: {
    &quot;build&quot;: &quot;parcel build index.html&quot;,
    &quot;start&quot;: &quot;parcel serve index.html&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;parcel&quot;: &quot;latest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can run &lt;code&gt;yarn build&lt;/code&gt; to bundle your project for production and &lt;code&gt;yarn start&lt;/code&gt; to dev on your project.&lt;/p&gt; 
&lt;h3&gt;CLI Args &amp;amp; Flags&lt;/h3&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ parcel [command] [...entries] [...flags]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;parcel serve&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Serve assets on a local server.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;parcel watch&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Watch and rebuild code on file changes.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;parcel build&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Build code once, in production mode.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;[...entries]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Entry files to start bundling, these will be preserved as entry points in the output. Defaults to &lt;code&gt;package.json#source&lt;/code&gt;, falling back to &lt;code&gt;src/index.*&lt;/code&gt; or &lt;code&gt;index.*&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;#Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--target [name]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies a specific target to build. If unspecified, Parcel builds all targets specified in package.json. See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;#Targets&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--open, -o [browser]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Open your local server in a browser. You can optionally pass the name of the browser you want to open, otherwise it will use your default browser.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--host &amp;lt;host&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the host to serve assets on. The default is to listen on all interfaces.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--port &amp;lt;port&amp;gt;, -p&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the port to serve assets on. Alternatively you can use the &lt;code&gt;$PORT&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--https&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This will generate a local certificate (which will be untrusted by your browser, you’ll need to approve it) and serve your assets over &lt;code&gt;https://&lt;/code&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--cert &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Specify the filepath to your SSL certificate when using &lt;code&gt;--https&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--key &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Specify the filepath to your SSL key when using &lt;code&gt;--https&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--dist-dir &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the directory where compiled assets are output. Default is &lt;code&gt;./dist&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--cache-dir &amp;lt;dir&amp;gt;&lt;/code&gt;, &lt;code&gt;--no-cache&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the cache directory with &lt;code&gt;--cache &amp;lt;dir&amp;gt;&lt;/code&gt; or disable it altogether with &lt;code&gt;--no-cache&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--hot&lt;/code&gt;, &lt;code&gt;--no-hot&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Turn hot reloading on or off.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--hot-host &amp;lt;hostname&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Configure the hot reloading hostname.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--hot-port &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Configure the hot reloading port.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--[no-]source-maps&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Turn source maps on or off. Source maps are turned on by default.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--autoinstall [npm/yarn], --no-autoinstall&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;When enabled, whenever Parcel discovers a dependency that isn’t installed it will attempt to install it with either npm or Yarn (defaults to npm unless a &lt;code&gt;yarn.lock&lt;/code&gt; exists).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--log-level &amp;lt;level&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Set the log level, either either “none”, “error”, “warn”, “info”, or “verbose”. The default is “info”.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--version, -v, -V&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Return the current version of Parcel.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--help, -h&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Get help with the CLI.&lt;/p&gt; 
&lt;h2&gt;Parcel Config&lt;/h2&gt; 
&lt;p&gt;Parcel has always and will always work out of the box for many projects with zero configuration. It should always be extremely simple to get started. But if you do want more control, we give you the tools to do so.&lt;/p&gt; 
&lt;h3&gt;Configuring external tools&lt;/h3&gt; 
&lt;p&gt;A huge part of what Parcel does is run other tools over your code. Instead of pulling all that configuration into Parcel, we make use of their own configuration systems. So if you’re using Babel, you should just use &lt;code&gt;.babelrc&lt;/code&gt; files to configure it.&lt;/p&gt; 
&lt;p&gt;When we do need to introduce config, we create tool specific config files in order to do so.&lt;/p&gt; 
&lt;h3&gt;Configuring Parcel&lt;/h3&gt; 
&lt;p&gt;When you do need to configure Parcel, it will be in one of 3 places.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you need to configure the CLI, it will be a CLI flag&lt;/li&gt; 
 &lt;li&gt;If you need to configure your package, it will be in the &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you need to configure something with your files or the Parcel asset pipeline, it will be in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;[todo]&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;foo&quot;,
  &quot;main&quot;: &quot;dist/main/index.js&quot;,
  &quot;module&quot;: &quot;dist/module/index.js&quot;,
  &quot;browser&quot;: &quot;dist/browser/index.js&quot;,
  &quot;browserslist&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;],
  &quot;engines&quot;: {
    &quot;node&quot;: &quot;&amp;gt;=4.x&quot;
  },
  &quot;source&quot;: &quot;src/index.js&quot;,
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;
      }
    },
    &quot;module&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=8.x&quot;
      }
    },
    &quot;browser&quot;: {
      &quot;engines&quot;: {
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  },
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#name&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;(Required)&lt;/strong&gt; The name of the package is always required in order to be considered a valid &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-package&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#version&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;(Required)&lt;/strong&gt; All packages inside &lt;code&gt;node_modules&lt;/code&gt; must have a &lt;code&gt;package.json#version&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;version&quot;: &quot;1.0.0&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#main&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “main” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;main&quot;: &quot;dist/main/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#module&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “module” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;module&quot;: &quot;dist/module/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#browser&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “browser” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;browser&quot;: &quot;dist/browser/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#source&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specify the entry points for your source code which gets mapped to your targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;source&quot;: &quot;src/index.js&quot;,
  &quot;source&quot;: [&quot;src/index.js&quot;, &quot;src/index.html&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;Sources&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#browserslist&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;As specified by Browserslist, this field is for specifying which transformers should be applied to browser bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;browserslist&quot;: [&quot;&amp;gt; 0.2%&quot;, &quot;not dead&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#engines&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specify what versions of what engines you want to support.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;engines&quot;: {
    &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
    &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#targets&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configuration for individual targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
        &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;
      },
    },
    &quot;browser&quot;: {
      &quot;engines&quot;: {
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#alias&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Aliases asset names/paths to other assets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#aliases&quot;&gt;Aliases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;.parcelrc&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Your &lt;code&gt;.parcelrc&lt;/code&gt; file will likely contain just a few fields (if you have one at all), but here’s an example of a &lt;code&gt;.parcelrc&lt;/code&gt; file that contains every field:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [&quot;@parcel/config-default&quot;],
  &quot;resolvers&quot;: [&quot;@parcel/resolver-default&quot;],
  &quot;transformers&quot;: {
    &quot;*.vue&quot;: [&quot;@parcel/transformer-vue&quot;],
    &quot;*.scss&quot;: [&quot;@parcel/transformer-sass&quot;],
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;],
    &quot;*.css&quot;: [&quot;@parcel/transformer-postcss&quot;],
    &quot;*.html&quot;: [&quot;@parcel/transformer-posthtml&quot;]
  },
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;,
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;],
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;],
  &quot;packagers&quot;: {
    &quot;*.js&quot;: &quot;@parcel/packager-js&quot;,
    &quot;*.css&quot;: &quot;@parcel/packager-css&quot;,
    &quot;*.html&quot;: &quot;@parcel/packager-html&quot;,
    &quot;*.wasm&quot;: &quot;@parcel/packager-wasm&quot;,
    &quot;*.raw&quot;: &quot;@parcel/packager-raw&quot;
  },
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-uglify&quot;],
    &quot;*.css&quot;: [&quot;@parcel/optimizer-cssnano&quot;],
    &quot;*.html&quot;: [&quot;@parcel/optimizer-htmlnano&quot;],
    &quot;*.{png,jpg,jpeg,svg,...}&quot;: [&quot;@parcel/optimizer-imagemin&quot;]
  },
  &quot;reporters&quot;: [&quot;@parcel/reporter-cli&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Glob maps in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Many config properties like &lt;code&gt;transformers&lt;/code&gt; or &lt;code&gt;packagers&lt;/code&gt; use objects as maps of globs to package names. While objects in JSON are technically unordered, Parcel does use the order to give globs priority when a file name is being tested against them.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;icons/*.svg&quot;: [&quot;highest-priority&quot;],
    &quot;*.svg&quot;: [&quot;lowest-priority&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here if we are trying to find a transform for the file &lt;code&gt;icons/home.svg&lt;/code&gt;, we’ll work our way down the globs until we find a match, which would be &lt;code&gt;icons/*.svg&lt;/code&gt;, we never reach &lt;code&gt;*.svg&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#extends&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;extends&lt;/code&gt; can either be a string or an array of strings that specify base configs to extend. That base configuration can be the path to another &lt;code&gt;.parcelrc&lt;/code&gt; file or the name of a Parcel config package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: &quot;@parcel/config-default&quot;,
  &quot;extends&quot;: &quot;../.parcelrc&quot;,
  &quot;extends&quot;: [&quot;@parcel/config-default&quot;, &quot;@company/parcel-config&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When extending a config, Parcel does a shallow merge of the two configs.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#resolvers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;resolvers&lt;/code&gt; is an array of strings that specifies the name of a Parcel resolver package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;resolvers&quot;: [&quot;@parcel/resolver-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers&quot;&gt;Resolvers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#transformers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;transformers&lt;/code&gt; is an object map of globs to arrays of Parcel transform packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers&quot;&gt;Transformers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#bundler&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bundler&lt;/code&gt; is a string that specifies the name of a Parcel bundler package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundlers&quot;&gt;Bundlers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#namers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;namers&lt;/code&gt; is an array of Parcel namer packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers&quot;&gt;Namers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#runtimes&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;runtimes&lt;/code&gt; is an array of Parcel runtime packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;],
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes&quot;&gt;Runtimes&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#packagers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;packagers&lt;/code&gt; is an object map of globs to Parcel packager packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;packagers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/packager-js&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers&quot;&gt;Packagers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#optimizers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;optimizers&lt;/code&gt; is an object map of globs to arrays of Parcel optimizer packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-uglify&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers&quot;&gt;Optimizers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#reporters&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;reporters&lt;/code&gt; is an array of Parcel reporter packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;reporters&quot;: [&quot;@parcel/reporter-detailed&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters&quot;&gt;Reporters&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#validators&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;validators&lt;/code&gt; is an object map of globs to arrays of Parcel validator packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;
  &quot;validators&quot;: {
    &quot;*.ts&quot;: [&quot;@parcel/validator-typescript&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators&quot;&gt;Validators&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Parcel Architecture&lt;/h2&gt; 
&lt;p&gt;Even if you aren’t doing anything that complex, if you are going to use Parcel a lot it makes sense to take some time and understand how it works.&lt;/p&gt; 
&lt;h3&gt;Phases of Parcel&lt;/h3&gt; 
&lt;p&gt;At a high level Parcel runs through several phases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resolving&lt;/li&gt; 
 &lt;li&gt;Transforming&lt;/li&gt; 
 &lt;li&gt;Bundling&lt;/li&gt; 
 &lt;li&gt;Packaging&lt;/li&gt; 
 &lt;li&gt;Optimizing&lt;/li&gt; 
 &lt;li&gt;(Validating)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;strong&gt;resolving&lt;/strong&gt; and &lt;strong&gt;transforming&lt;/strong&gt; phases work together in parallel to build a graph of all your assets.&lt;/p&gt; 
&lt;p&gt;This asset graph gets translated into bundles in the &lt;strong&gt;bundling&lt;/strong&gt; phase.&lt;/p&gt; 
&lt;p&gt;Then the &lt;strong&gt;packaging&lt;/strong&gt; phase takes the assets in the calculated bundles and merges them together into files each containing an entire bundle.&lt;/p&gt; 
&lt;p&gt;Finally, in the &lt;strong&gt;optimizing&lt;/strong&gt; phase, Parcel takes these bundles files and runs them through optimizing transforms.&lt;/p&gt; 
&lt;h3&gt;Asset Graph&lt;/h3&gt; 
&lt;p&gt;During the resolving and transforming phases, Parcel discovers all the assets in your app or program. Every asset can have its own dependencies on other assets which Parcel will pull in.&lt;/p&gt; 
&lt;p&gt;The data structure that represents all of these assets and their dependencies on one another is known as “The Asset Graph”.&lt;/p&gt; 
&lt;p&gt;| Asset Name | Dependencies | | ———— | —————–– | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;app.css&lt;/code&gt;, &lt;code&gt;app.js&lt;/code&gt; | | &lt;code&gt;app.css&lt;/code&gt; | N/A | | &lt;code&gt;app.js&lt;/code&gt; | &lt;code&gt;navbar.js&lt;/code&gt; | | &lt;code&gt;navbar.js&lt;/code&gt; | etc. |&lt;/p&gt; 
&lt;h3&gt;Bundles&lt;/h3&gt; 
&lt;p&gt;Once Parcel has built the entire Asset Graph, it begins turning it into “bundles”. These bundles are groupings of assets that get placed together in a single file.&lt;/p&gt; 
&lt;p&gt;Bundles will (generally) contain only assets in the same language:&lt;/p&gt; 
&lt;p&gt;| Bundle Name | Assets | | ———— | ————————— | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;index.html&lt;/code&gt; | | &lt;code&gt;app.css&lt;/code&gt; | &lt;code&gt;app.css&lt;/code&gt; | | &lt;code&gt;app.js&lt;/code&gt; | &lt;code&gt;app.js&lt;/code&gt;, &lt;code&gt;navbar.js&lt;/code&gt;, etc. |&lt;/p&gt; 
&lt;p&gt;Some assets are considered “entry” points into your app, and will stay as separate bundles. For example, if your &lt;code&gt;index.html&lt;/code&gt; file links to an &lt;code&gt;about.html&lt;/code&gt; file, they won’t be merged together.&lt;/p&gt; 
&lt;p&gt;| Bundle Name | Assets | Entry URL | | ———— | ———— | ——— | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;/&lt;/code&gt; | | &lt;code&gt;about.html&lt;/code&gt; | &lt;code&gt;about.html&lt;/code&gt; | &lt;code&gt;/about&lt;/code&gt; |&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;“Sources” are the files that contain the source code to your app before being compiled by Parcel.&lt;/p&gt; 
&lt;p&gt;Parcel discovers these sources by following their dependencies on one another starting at your “entries”.&lt;/p&gt; 
&lt;p&gt;These entries will be one of:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$ parcel &amp;lt;...entries&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;~/package.json#source&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./src/index.*&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./index.*&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;From there, everything those assets depend on will be considered a “source” in Parcel.&lt;/p&gt; 
&lt;h3&gt;Targets&lt;/h3&gt; 
&lt;p&gt;When Parcel runs, it can build your asset graph in multiple different ways simultaneously. These are called “targets”.&lt;/p&gt; 
&lt;p&gt;For example, you could have a “modern” target that &lt;em&gt;targets&lt;/em&gt; newer browsers and a “legacy” target for older browsers.&lt;/p&gt; 
&lt;p&gt;Sources get mapped to targets,&lt;/p&gt; 
&lt;h4&gt;Target Configuration&lt;/h4&gt; 
&lt;p&gt;In the most explicit form, targets are configured via the &lt;code&gt;package.json#targets&lt;/code&gt; field.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;app&quot;: &quot;dist/browser/index.js&quot;,
  &quot;appModern&quot;: &quot;dist/browserModern/index.js&quot;,
  &quot;targets&quot;: {
    &quot;app&quot;: { /* target env */ },
    &quot;appModern&quot;: { /* target env */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each target has a name which corresponds to a top-level &lt;code&gt;package.json&lt;/code&gt; field such as &lt;code&gt;package.json#main&lt;/code&gt; or &lt;code&gt;package.json#browser&lt;/code&gt; which specify the primary entry point for that target.&lt;/p&gt; 
&lt;p&gt;Inside each of those targets contains the target’s environment configuration:&lt;/p&gt; 
&lt;p&gt;| Option | Possible values | Description | | –––––––––– | ————— | ———– | | &lt;code&gt;context&lt;/code&gt; | &lt;code&gt;&#39;node&#39; \| &#39;browser&#39; \| &#39;web-worker&#39; \| &#39;electron-main&#39; \| &#39;electron-renderer&#39;&lt;/code&gt; | Where the bundle should run | | &lt;code&gt;includeNodeModules&lt;/code&gt; | &lt;code&gt;boolean \| [String]&lt;/code&gt; | Whether to bundle all/none/some &lt;code&gt;node_module&lt;/code&gt; dependency | | &lt;code&gt;outputFormat&lt;/code&gt; | &lt;code&gt;&#39;global&#39; \| &#39;esmodule&#39; \| &#39;commonjs&#39;&lt;/code&gt; | Which type of imports/exports should be emitted| | &lt;code&gt;publicUrl&lt;/code&gt; | &lt;code&gt;string&lt;/code&gt; | The public url of the bundle at runtime | | &lt;code&gt;isLibrary&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | Library as in ‘npm library’ | | &lt;code&gt;sourceMap&lt;/code&gt; | &lt;code&gt;boolean \| {inlineSources?: boolean, sourceRoot?: string, inline?: boolean}&lt;/code&gt; | Enable/disable sourcemap and set options | &lt;code&gt;engines&lt;/code&gt; | Engines | Same as &lt;code&gt;package.json#engines&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;However, a lot of the normal configuration you might want will already have defaults provided for you:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;targets = {
  main: {
    engines: {
      node: value(&quot;package.json#engines.node&quot;),
      browsers: unless exists(&quot;package.json#browser&quot;) then value(&quot;package.json#browserlist&quot;)
    },
    isLibrary: true
  },
  module: {
    engines: {
      node: value(&quot;package.json#engines.node&quot;),
      browsers: unless exists(&quot;package.json#browser&quot;) then value(&quot;package.json#browserlist&quot;)
    },
    isLibrary: true
  },
  browser: {
    engines: {
      browsers: value(&quot;package.json#browserslist&quot;)
    },
    isLibrary: true
  },
  ...value(&quot;package.json#targets&quot;),
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environments&lt;/h3&gt; 
&lt;p&gt;Environments tell Parcel how to transform and bundle each asset. They tell Parcel if an asset is going to be run in a browser or in NodeJS/Electron.&lt;/p&gt; 
&lt;p&gt;They also tell Parcel’s transform plugins how they should run. They tell &lt;a href=&quot;http://babeljs.io/docs/en/babel-preset-env#targetsbrowsers&quot;&gt;Babel&lt;/a&gt; or &lt;a href=&quot;https://github.com/postcss/autoprefixer#browsers&quot;&gt;Autoprefixer&lt;/a&gt; what browsers your asset is targetting.&lt;/p&gt; 
&lt;p&gt;You can configure environments through your targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
        &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;,
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When one asset depends on another, the environment is inherited from its parent. But how you depend on the asset can change some properties of that environment.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;navigator.serviceWorker.register(&#39;./service-worker.js&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let childEnvironment = {...parentEnvironment, browserContext: &#39;service-worker&#39;};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Caching&lt;/h3&gt; 
&lt;p&gt;Parcel will create a &lt;code&gt;/.parcel-cache&lt;/code&gt; directory. It will be filled with directories with two letters, which are the start of a hash which is finished by the names of the JSON files inside.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/.parcel-cache
  /00/
    213debd8ddd45819b79a3a974ed487.json
    40ae9b581afc53841307a4b3c2463d.json
    63a9dd58fc1e8f8bb819759ea9793c.json
    ...
  /01/
  /../
  /zy/
  /zz/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It follows this weird structure in order to avoid too many files being created in a single directory, which degrades file system performance.&lt;/p&gt; 
&lt;h2&gt;Asset Resolution&lt;/h2&gt; 
&lt;p&gt;Parcel follows the Node module resolution algorithm with a few additions.&lt;/p&gt; 
&lt;h3&gt;Local Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./path/to/file
./path/to/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These follow the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Package Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;preact
lodash/cloneDeep
@sindresorhus/is
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These follow the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;URLs&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;https://unpkg.com/preact@8.2.9/dist/preact.min.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Parcel by default will ignore URL dependencies, other resolver plugins may choose to do something with them.&lt;/p&gt; 
&lt;h3&gt;Tilde Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;~/src/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only when used outside of &lt;code&gt;node_modules&lt;/code&gt; directories, the &lt;code&gt;~&lt;/code&gt; is replaced by an absolute path to the closest package root:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;/path/to/app #(/package.json)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To form a path that looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/path/to/app/src/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then it follows the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Aliases&lt;/h3&gt; 
&lt;p&gt;Aliases come in two forms:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Package Aliases: &lt;code&gt;react -&amp;gt; preact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;File/Directory Aliases: &lt;code&gt;utils&lt;/code&gt; -&amp;gt; &lt;code&gt;./src/utils&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-project&quot;,
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;,
    &quot;utils&quot;: &quot;./src/utils&quot;,
    &quot;components&quot;: &quot;./src/components&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are a couple of rules:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Aliases will only be respected when specified outside of &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Aliases specified outside of &lt;code&gt;node_modules&lt;/code&gt; will affect assets inside of &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Aliases cannot build off of other aliases.&lt;/li&gt; 
 &lt;li&gt;Only one alias will be applied at a time.&lt;/li&gt; 
 &lt;li&gt;Aliases must be valid npm package names.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;h3&gt;Resolvers&lt;/h3&gt; 
&lt;p&gt;When one asset depends on another through an asset specifier, the resolver is responsible for determining what asset is being requested.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-resolution&quot;&gt;Asset Resolution&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;resolvers&quot;: [&quot;@parcel/resolver-v1&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Resolvers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/resolver-v1&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Transformers&lt;/h3&gt; 
&lt;p&gt;transformers &lt;em&gt;transform&lt;/em&gt; single assets as they are discovered and added to the asset graph. They mostly call out to different compilers and preprocessors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-babel&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-coffeescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-glsl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-graphql&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-json5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-less&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-posthtml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-postcss&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-pug&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-raw&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-reason&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-stylus&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-wasm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-webmanifest&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-elm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bundlers&lt;/h3&gt; 
&lt;p&gt;Bundlers accept the entire asset graph and turn it into sets of bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Bundlers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/bundler-default&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Namers&lt;/h3&gt; 
&lt;p&gt;Namers accept a bundle and return a filename for that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Namers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/namer-default&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Runtimes&lt;/h3&gt; 
&lt;p&gt;Runtimes get called after the bundler phase and generate an asset which gets included in the final bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Runtimes:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/runtime-js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/runtime-hmr&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packagers&lt;/h3&gt; 
&lt;p&gt;Packagers determine how to merge different asset types into a single bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;packagers&quot;: {
    &quot;*.css&quot;: &quot;@parcel/packager-css&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Packagers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-html&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-css&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-wasm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-raw&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimizers&lt;/h3&gt; 
&lt;p&gt;Optimizers are similar to transformers, but they accept a bundle instead of a single asset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-terser&quot;],
    &quot;*.css&quot;: [&quot;@parcel/optimizer-csso&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Optimizers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-terser&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-csso&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporters&lt;/h3&gt; 
&lt;p&gt;Reporters receive events as they happen and can either use the Parcel logger to output to stdout/stderr or they can return assets to be generated on the file system.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;reporters&quot;: [&quot;@parcel/reporter-cli&quot;, &quot;@parcel/reporter-dev-server&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Reporters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/reporter-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/reporter-dev-server&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Validators&lt;/h3&gt; 
&lt;p&gt;Validators emit errors for source code after a build is completed. For example, type checking and linting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;validators&quot;: {
    &quot;*.ts&quot;: [&quot;@parcel/validator-typescript&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Validators:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/validator-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/validator-eslint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Creating Plugins&lt;/h2&gt; 
&lt;h3&gt;Naming&lt;/h3&gt; 
&lt;p&gt;All plugins must follow a naming system:&lt;/p&gt; 
&lt;p&gt;| | Official package | Community packages | Private company/scoped team packages | | ––––– | ––––––––––––– | ———————–– | ———————————— | | Configs | &lt;code&gt;@parcel/config-{name}&lt;/code&gt; | &lt;code&gt;parcel-config-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-config[-{name}]&lt;/code&gt; | | Resolvers | &lt;code&gt;@parcel/resolver-{name}&lt;/code&gt; | &lt;code&gt;parcel-resolver-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-resolver[-{name}]&lt;/code&gt; | | Transformers | &lt;code&gt;@parcel/transformer-{name}&lt;/code&gt; | &lt;code&gt;parcel-transformer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-transformer[-{name}]&lt;/code&gt; | | Bundlers | &lt;code&gt;@parcel/bundler-{name}&lt;/code&gt; | &lt;code&gt;parcel-bundler-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-bundler[-{name}]&lt;/code&gt; | | Namers | &lt;code&gt;@parcel/namer-{name}&lt;/code&gt; | &lt;code&gt;parcel-namer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-namer[-{name}]&lt;/code&gt; | | Runtimes | &lt;code&gt;@parcel/runtime-{name}&lt;/code&gt; | &lt;code&gt;parcel-runtime-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-runtime[-{name}]&lt;/code&gt; | | Packagers | &lt;code&gt;@parcel/packager-{name}&lt;/code&gt; | &lt;code&gt;parcel-packager-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-packager[-{name}]&lt;/code&gt; | | Optimizers | &lt;code&gt;@parcel/optimizer-{name}&lt;/code&gt; | &lt;code&gt;parcel-optimizer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-optimizer[-{name}]&lt;/code&gt; | | Reporters | &lt;code&gt;@parcel/reporter-{name}&lt;/code&gt; | &lt;code&gt;parcel-reporter-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-reporter[-{name}]&lt;/code&gt; | | Validators | &lt;code&gt;@parcel/validator-{name}&lt;/code&gt; | &lt;code&gt;parcel-validator-{name}&lt;/code&gt;| &lt;code&gt;@scope/parcel-validator[-{name}]&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;{name}&lt;/code&gt; must be descriptive and directly related to the purpose of the package. Someone should be able to have an idea of what the package does simply by reading the name in a &lt;code&gt;.parcelrc&lt;/code&gt; or &lt;code&gt;package.json#devDependencies&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-posthtml
parcel-packager-wasm
parcel-reporter-graph-visualizer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin adds support for a specific tool, please use the name of the tool.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-es6 (bad)
parcel-transformer-babel (good)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin is a reimplementation of something that exists, try naming it something that explains why it is a separate:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-better-typescript (bad)
parcel-transformer-typescript-server (good)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We ask that community members work together and when forks happen to try and resolve them. If someone made a better version of your plugin, please consider giving the better package name over, have them make a major version bump, and redirect people to the new tool.&lt;/p&gt; 
&lt;h3&gt;Versioning&lt;/h3&gt; 
&lt;p&gt;You must follow semantic versioning (to the best of your ability). No, it’s not the perfect system, but it’s the best one we have and people do depend on it.&lt;/p&gt; 
&lt;p&gt;If plugin authors intentionally don’t follow semantic versioning, Parcel may start warning users that they should be locking down the version number for your plugin.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Warning: The plugin “parcel-transform-typescript” does not follow semantic versioning. You should lock the version range down so your code does not break when they make changes. Please upvote this issue to encourage them to follow semver: https://github.com/user/parcel-transform-typescript/issues/43&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Engines&lt;/h3&gt; 
&lt;p&gt;You must specify a &lt;code&gt;package.json#engines.parcel&lt;/code&gt; field with the version range of Parcel that your plugin supports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;parcel-transform-imagemin&quot;,
  &quot;engines&quot;: {
    &quot;parcel&quot;: &quot;2.x&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not specify this field, Parcel will output a warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: The plugin &quot;parcel-transform-typescript&quot; needs to specify a `package.json#engines.parcel` field with the supported Parcel version range.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do specify the parcel engine field and the user is using an incompatible version of Parcel, they will see an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Error: The plugin &quot;parcel-transform-typescript&quot; is not compatible with the
current version of Parcel. Requires &quot;2.x&quot; but the current version is &quot;3.1.4&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Parcel uses node-semver to match version ranges.&lt;/p&gt; 
&lt;h2&gt;Plugin APIs&lt;/h2&gt; 
&lt;p&gt;There are several different types of plugins. They all look very similar, but are kept separate so we can have strict contracts one what each one is allowed to do.&lt;/p&gt; 
&lt;p&gt;There are some rules that should be followed across every type of plugin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Stateless&lt;/strong&gt; — Avoid any kind of state, it will likely be the source of bugs for your users. For example, the same transform may exist in multiple separate workers which are not allowed to communicate with one another, state will not work as expected.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pure&lt;/strong&gt; — Given the same input, a plugin must produce the same output, and you must not have any observable side effects, or implicit dependencies. Otherwise Parcel’s caching will break and your users will be sad. You should never have to tell users to delete their caches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The plugin APIs all follow a common shape:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {NameOfPluginType} from &#39;@parcel/plugin&#39;;

export default new NameOfPluginType({
  async methodName(opts: JSONObject): Promise&amp;lt;JSONObject&amp;gt; {
    return result;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;They are made up of modules with well-known named exports of async functions that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Accept a strictly validated JSON-serializable &lt;code&gt;opts&lt;/code&gt; object.&lt;/li&gt; 
 &lt;li&gt;Return a strictly validated JSON-serializable &lt;code&gt;vals&lt;/code&gt; object.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If something you need is not being passed through &lt;code&gt;opts&lt;/code&gt;, please come talk to the Parcel team about it. Avoid trying to get information yourself from other sources, especially from the file system.&lt;/p&gt; 
&lt;h3&gt;Resolvers&lt;/h3&gt; 
&lt;p&gt;Resolvers get called with an asset request (consisting of a source file path and the specifier of what is being requested) which it then attempts to resolve. If the resolver isn’t sure how to handle a request, it can also return &lt;code&gt;null&lt;/code&gt; and pass it to the next resolver in the chain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Resolver} from &#39;@parcel/plugin&#39;;

export default new Resolver({
  async resolve({dependency}) {
    // ...
    return {filePath} || null;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transformers&lt;/h3&gt; 
&lt;p&gt;Transformers &lt;em&gt;transform&lt;/em&gt; single assets as they are discovered and added to the asset graph. They mostly call out to different compilers and preprocessors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Transform} from &#39;@parcel/plugin&#39;;

export default new Transform({
  async parse({asset}) {
    // ...
    return ast;
  },

  async transform({asset}) {
    // ...
    return [assets];
  },

  async generate({asset}) {
    // ...
    return {code, map};
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Bundler&lt;/h3&gt; 
&lt;p&gt;Bundlers accept the entire asset graph and modify it to add bundle nodes that group the assets into output bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Bundler} from &#39;@parcel/plugin&#39;;

export default new Bundler({
  async bundle({graph}) {
    // ...
  },

  async optimize({graph}) {
    // ...
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Namers&lt;/h3&gt; 
&lt;p&gt;Namers accept a bundle and output a filename for that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Namer} from &#39;@parcel/plugin&#39;;

export default new Namer({
  async name({bundle, bundleGraph}) {
    // ...
    return name;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Runtimes&lt;/h3&gt; 
&lt;p&gt;Runtimes accept a bundle and return assets to be inserted into that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Runtime} from &#39;@parcel/runtime&#39;;

export default new Runtime({
  async apply({bundle, bundleGraph}) {
    // ...
    return assets;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Packagers&lt;/h3&gt; 
&lt;p&gt;Packagers determine how to merge different asset types into a single bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Packager} from &#39;@parcel/plugin&#39;;

export default new Packager({
  async package({bundle}) {
    // ...
    return {contents, map};
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optimizers&lt;/h3&gt; 
&lt;p&gt;Optimizers are similar to transformers, but they accept a bundle instead of a single asset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Optimizer} from &#39;@parcel/plugin&#39;;

export default new Optimizer({
  async optimize({bundle, contents, map}) {
    // ...
    return {contents, map};
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reporters&lt;/h3&gt; 
&lt;p&gt;Reporters receive events as they happen and can output to stdout/stderr, or perform other actions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Reporter} from &#39;@parcel/plugin&#39;;

export default new Reporter({
  async report({ event: { type, ... } }) {
    // ...
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Validators&lt;/h3&gt; 
&lt;p&gt;Validators receive an asset, and can throw errors if that asset is invalid in some way, e.g. type errors or linting errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Validator} from &#39;@parcel/plugin&#39;;

export default new Validator({
  async validate({asset}) {
    // ...
    throw error;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some validators (such as &lt;code&gt;@parcel/validator-typescript&lt;/code&gt;) may wish to maintain a project-wide cache for efficiency. For these cases, it is appropriate to use a different interface where parcel hands &lt;em&gt;all&lt;/em&gt; changed files to the validator at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Validator} from &#39;@parcel/plugin&#39;;

export default new Validator({
  async validateAll({assets}) {
    // ...
    throw error;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin implements &lt;code&gt;validateAll&lt;/code&gt;, Parcel will make sure to always invoke this method on the same thread (so that your cache state is accessible).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://github.com/parcel-bundler/parcel/raw/v2/LICENSE&quot;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>quasarframework/quasar</title>
      <link>https://github.com/quasarframework/quasar</link>
      <description>&lt;p&gt;Quasar Framework - Build high-performance VueJS user interfaces in record time&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.quasar.dev/logo/svg/quasar-logo-full-inline.svg?sanitize=true&quot; alt=&quot;Quasar Framework logo&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Quasar Framework&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Build high-performance VueJS user interfaces in record time: responsive Single Page Apps, SSR Apps, PWAs, Browser extensions, Hybrid Mobile Apps and Electron Apps. If you want, all using the same codebase!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/v/quasar.svg?label=quasar&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app.svg?label=@quasar/app&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/cli.svg?label=@quasar/cli&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/extras.svg?label=@quasar/extras&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/icongenie.svg?label=@quasar/icongenie&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://chat.quasar.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Join the chat at https://chat.quasar.dev&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.quasar.dev&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/community-forum-brightgreen.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://good-labs.github.io/greater-good-affirmation&quot;&gt;&lt;img src=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg?sanitize=true&quot; alt=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please submit a PR to https://github.com/quasarframework/quasar-awesome with your website/app/Quasar tutorial/video etc. Thank you!&lt;/p&gt; 
&lt;h2&gt;Supporting Quasar&lt;/h2&gt; 
&lt;p&gt;Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome &lt;a href=&quot;https://github.com/rstoenescu/quasar-framework/raw/dev/backers.md&quot;&gt;backers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please read our manifest on &lt;a href=&quot;https://quasar.dev/why-donate&quot;&gt;Why donations are important&lt;/a&gt;&lt;/strong&gt;. If you’d like to become a donator, check out &lt;a href=&quot;https://donate.quasar.dev&quot;&gt;Quasar Framework’s Donator campaign&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Proudly sponsored by:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://truelogic.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;300px&quot; src=&quot;https://cdn.quasar.dev/sponsors/truelogic.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://campuscloudservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/campus-cloud-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.jugglestreet.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/juggle-street.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://comcomservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/com-com-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.kalisio.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/kalisio.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://platformpurple.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/platform-purple.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.bgasoft.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/bgasoft.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.letsbutterfly.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;170px&quot; src=&quot;https://cdn.quasar.dev/sponsors/letsbutterfly.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.projectfinance.io/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/project-finance.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://dreamonkey.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/dreamonkey.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/ib-langenthal.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://debricked.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;35px&quot; src=&quot;https://cdn.quasar.dev/sponsors/debricked.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Head on to the Quasar Framework official website: &lt;a href=&quot;https://quasar.dev&quot;&gt;https://quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stay in Touch&lt;/h2&gt; 
&lt;p&gt;For latest releases and announcements, follow on Twitter: &lt;a href=&quot;https://twitter.com/quasarframework&quot;&gt;@quasarframework&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Chat Support&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community Discord server: &lt;a href=&quot;https://chat.quasar.dev&quot;&gt;https://chat.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Forum&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community forum: &lt;a href=&quot;https://forum.quasar.dev&quot;&gt;https://forum.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/quasarframework/quasar/dev/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Quasar-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/quasarframework/quasar-awesome&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already &lt;a href=&quot;https://github.com/quasarframework/quasar/graphs/contributors&quot;&gt;contributed to Quasar&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Semver&lt;/h2&gt; 
&lt;p&gt;Quasar is following &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2015-present Razvan Stoenescu&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced-Frontend/Daily-Interview-Question</title>
      <link>https://github.com/Advanced-Frontend/Daily-Interview-Question</link>
      <description>&lt;p&gt;我是依扬（木易杨），公众号「高级前端进阶」作者，每天搞定一道前端大厂面试题，祝大家天天进步，一年后会看到不一样的自己。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Daily-Interview-Question&lt;/h1&gt; 
&lt;p&gt;加入「前端面试互助群」学习小组，搜索公众号「高级前端进阶」，关注即可加入！&lt;/p&gt; 
&lt;p&gt;工作日每天一道大厂前端面试题，一年后再回头，会感谢曾经努力的自己！&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://muyiy.cn/question/&quot;&gt;线上版本阅读更流畅，点击阅读&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sisterAn/JavaScript-Algorithms&quot;&gt;推荐一个不错的前端算法系列，点击查看&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;推荐扫码使用微信小程序，除了本项目之外，还囊括了算法题、选择题等多种类型题目和详细解析&lt;/p&gt; 
&lt;p&gt;记住我们的 Slogan：上下班路上刷一点，半年突击进大厂&lt;/p&gt; 
&lt;img src=&quot;http://resource.muyiy.cn/image/20200106214930.jpg&quot; height=&quot;250px&quot;&gt; 
&lt;br&gt; 
&lt;h2&gt;今日面试题&lt;/h2&gt; 
&lt;p&gt;第 162 题：实现对象的 Map 函数类似 Array.prototype.map&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/431&quot;&gt;第 162 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;最近汇总&lt;/h2&gt; 
&lt;p&gt;第 161 题：用最精炼的代码实现数组非零非负最小值 index&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// 例如：[10,21,0,-7,35,7,9,23,18] 输出 5, 7 最小
function getIndex(arr){
      let index=null;
      ...
      return index;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/421&quot;&gt;第 161 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 160 题：输出以下代码运行结果，为什么？如果希望每隔 1s 输出一个结果，应该如何改造？注意不可改动 square 方法&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const list = [1, 2, 3]
const square = num =&amp;gt; {
  return new Promise((resolve, reject) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(num * num)
    }, 1000)
  })
}

function test() {
  list.forEach(async x=&amp;gt; {
    const res = await square(x)
    console.log(res)
  })
}
test()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/389&quot;&gt;第 160 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 159 题：实现 &lt;code&gt;Promise.retry&lt;/code&gt;，成功后 &lt;code&gt;resolve&lt;/code&gt; 结果，失败后重试，尝试超过一定次数才真正的 &lt;code&gt;reject&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/387&quot;&gt;第 159 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 158 题：如何模拟实现 Array.prototype.splice&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/384&quot;&gt;第 158 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 157 题：浏览器缓存 ETag 里的值是怎么生成的&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/383&quot;&gt;第 157 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 156 题：求最终 left、right 的宽度&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div class=&quot;left&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;right&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;style&amp;gt;
  * {
    padding: 0;
    margin: 0;
  }
  .container {
    width: 600px;
    height: 300px;
    display: flex;
  }
  .left {
    flex: 1 2 300px;
    background: red;
  }
  .right {
    flex: 2 1 200px;
    background: blue;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注：此题和 155 题 left、right 样式有些不同&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/382&quot;&gt;第 156 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 155 题：求最终 left、right 的宽度&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div class=&quot;left&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;right&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;style&amp;gt;
  * {
    padding: 0;
    margin: 0;
  }
  .container {
    width: 600px;
    height: 300px;
    display: flex;
  }
  .left {
    flex: 1 2 500px;
    background: red;
  }
  .right {
    flex: 2 1 400px;
    background: blue;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/381&quot;&gt;第 155 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 154 题：弹性盒子中 flex: 0 1 auto 表示什么意思&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/380&quot;&gt;第 154 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;第 153 题：实现一个批量请求函数 multiRequest(urls, maxNum)&lt;/p&gt; 
&lt;p&gt; 要求如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;要求最大并发数 maxNum&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;每当有一个请求返回，就留下一个空位，可以增加新的请求&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;所有请求完成后，结果按照 urls 里面的顺序依次打出&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/378&quot;&gt;第 153 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-12-31&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 152 题：实现一个 normalize 函数，能将输入的特定的字符串转化为特定的结构化数据&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/331&quot;&gt;第 152 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-11-25&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 151 题：用最简洁代码实现 indexOf 方法&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/321&quot;&gt;第 151 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-11-21&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 150 题：二分查找如何定位左边界和右边界&lt;/p&gt; 
 &lt;p&gt;不使用JS数组API，查找有序数列最先出现的位置和最后出现的位置&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/320&quot;&gt;第 150 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-11-12&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 149 题：babel 怎么把字符串解析成 AST，是怎么进行词法/语法分析的？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/315&quot;&gt;第 149 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-11-01&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 148 题： webpack 中 loader 和 plugin 的区别是什么（平安）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/308&quot;&gt;第 148 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-31&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 147 题：v-if、v-show、v-html 的原理是什么，它是如何封装的？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/307&quot;&gt;第 147 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-29&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 146 题：Vue 中的 computed 和 watch 的区别在哪里（虾皮）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/304&quot;&gt;第 146 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-24&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 145 题：前端项目如何找出性能瓶颈（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/300&quot;&gt;第 145 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-22&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 144 题：手写二进制转 Base64（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/299&quot;&gt;第 144 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-21&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 143 题：将 ‘10000000000’ 形式的字符串，以每 3 位进行分隔展示 ‘10.000.000.000’&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/296&quot;&gt;第 143 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-17&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 142 题：（算法题）求多个数组之间的交集（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/293&quot;&gt;第 142 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-15&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 141 题：Vue 中的 computed 是如何实现的（腾讯、平安）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/291&quot;&gt;第 141 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-10-14&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 140 题：为什么 HTTP1.1 不能实现多路复用（腾讯）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/290&quot;&gt;第 140 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-09-17&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 139 题：谈一谈 nextTick 的原理&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/281&quot;&gt;第 139 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-09-11&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 138 题：反转链表，每 k 个节点反转一次，不足 k 就保持原有顺序（哔哩哔哩）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/278&quot;&gt;第 138 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;2019-09-04&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 137 题：如何在 H5 和小程序项目中计算白屏时间和首屏时间，说说你的思路&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/272&quot;&gt;第 137 题&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;所有面试题汇总&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/raw/master/datum/summary.md&quot;&gt;壹题所有题目及答案汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;半月刊&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yygmind/blog/issues/43&quot;&gt;前端 100 问：能搞懂 80% 的请把简历给我&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c6977e46fb9a049fd1063dc&quot;&gt;【半月刊 1】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c7bd72ef265da2de80f7f17&quot;&gt;【半月刊 2】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c9ac3f66fb9a070e056718f&quot;&gt;【半月刊 3】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5cb3376bf265da039c0543da&quot;&gt;【半月刊 4】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;联系我&lt;/h2&gt; 
&lt;p&gt;进阶系列文章汇总如下，觉得不错点个 star，欢迎 &lt;strong&gt;加群&lt;/strong&gt; 互相学习。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yygmind/blog&quot;&gt;https://github.com/yygmind/blog&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;我是木易杨，公众号「高级前端进阶」作者，跟着我&lt;strong&gt;每周重点攻克一个前端面试重难点&lt;/strong&gt;。接下来让我带你走进高级前端的世界，在进阶的路上，共勉！&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://resource.muyiy.cn/image/20200123162151.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/1268976/20607953/d7ae489c-b24a-11e6-9cc4-91c6c74c5e88.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://on.cypress.io&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/changelog&quot;&gt;Changelog&lt;/a&gt; | &lt;a href=&quot;https://on.cypress.io/roadmap&quot;&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; The web has evolved. Finally, testing has too. &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Fast, easy and reliable testing for anything that runs in a browser. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/cypress.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt; &lt;img src=&quot;https://img.shields.io/gitter/room/cypress-io/cypress.svg?sanitize=true&quot; alt=&quot;Gitter chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://stackshare.io/cypress&quot;&gt; &lt;img src=&quot;https://img.stackshare.io/misc/follow-on-stackshare-badge.svg?sanitize=true&quot; alt=&quot;StackShare&quot;&gt; &lt;/a&gt;&lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://player.vimeo.com/video/237527670&quot;&gt; &lt;img alt=&quot;Why Cypress Video&quot; src=&quot;https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png&quot; width=&quot;75%&quot; height=&quot;75%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/cypress&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cypress.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href=&quot;https://docs.cypress.io/guides/getting-started/installing-cypress.html&quot;&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif&quot; alt=&quot;installing-cli e1693232&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md&quot;&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg?sanitize=true&quot; alt=&quot;Cypress.io&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;img src=&quot;https://assets.vercel.com/image/upload/v1607554385/repositories/next-js/next-logo.png&quot; height=&quot;128&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a aria-label=&quot;Vercel logo&quot; href=&quot;https://vercel.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;NPM version&quot; href=&quot;https://www.npmjs.com/package/next&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/vercel/next.js/raw/canary/license.md&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label=&quot;next.js learn&quot; href=&quot;https://nextjs.org/learn&quot;&gt;https://nextjs.org/learn&lt;/a&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world’s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/vercel/next.js/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;:mage: &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won’t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you’re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don’t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts’s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to security@openzeppelin.org.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>appwrite/appwrite</title>
      <link>https://github.com/appwrite/appwrite</link>
      <description>&lt;p&gt;Appwrite is a secure end-to-end backend server for Web, Mobile, and Flutter developers that is packaged as a set of Docker containers for easy deployment 🚀&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://appwrite.io&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;260&quot; height=&quot;39&quot; src=&quot;https://appwrite.io/images/github-logo.png&quot; alt=&quot;Appwrite Logo&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;A complete backend solution for your [Flutter / Vue / Angular / React / iOS / Android / *ANY OTHER*] app&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;!--[![Hacktoberfest](https://badgen.net/badge/hacktoberfest/friendly/pink)](CONTRIBUTING.md)--&gt; 
&lt;p&gt;&lt;a href=&quot;https://appwrite.io/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/564160730845151244?label=discord&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;amp;style=flat-square&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/appwrite_io?color=00acee&amp;amp;label=twitter&amp;amp;style=flat-square&quot; alt=&quot;Twitter Account&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://stackshare.io/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/follow%20on-stackshare-blue?style=flat-square&quot; alt=&quot;Follow Appwrite on StackShare&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.to/appwrite/announcing-appwrite-0-8-an-open-source-self-hosted-baas-kda&quot;&gt;&lt;strong&gt;Appwrite 0.8 has been released! Learn what’s new!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker
 &lt;nobr&gt;
   microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.
 &lt;/nobr&gt;&lt;/p&gt;
&lt;nobr&gt; 
 &lt;p&gt;Using Appwrite, you can easily integrate your app with user authentication &amp;amp; multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, and &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;more services&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/github.png&quot; alt=&quot;Appwrite&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;Find out more at: &lt;a href=&quot;https://appwrite.io&quot;&gt;https://appwrite.io&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Table of Contents:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#installation&quot;&gt;Installation&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#unix&quot;&gt;Unix&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#windows&quot;&gt;Windows&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#cmd&quot;&gt;CMD&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#powershell&quot;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#upgrade-from-an-older-version&quot;&gt;Upgrade from an Older Version&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#sdks&quot;&gt;SDKs&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#client&quot;&gt;Client&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#server&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;Installation&lt;/h2&gt; 
 &lt;p&gt;Appwrite backend server is designed to run in a container environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool like Kubernetes, Docker Swarm, or Rancher.&lt;/p&gt; 
 &lt;p&gt;The easiest way to start running your Appwrite server is by running our docker-compose file. Before running the installation command make sure you have &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;Docker&lt;/a&gt; installed on your machine:&lt;/p&gt; 
 &lt;h3&gt;Unix&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -it --rm \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume &quot;$(pwd)&quot;/appwrite:/usr/src/code/appwrite:rw \
    --entrypoint=&quot;install&quot; \
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;h4&gt;CMD&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;docker run -it --rm ^
    --volume //var/run/docker.sock:/var/run/docker.sock ^
    --volume &quot;%cd%&quot;/appwrite:/usr/src/code/appwrite:rw ^
    --entrypoint=&quot;install&quot; ^
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;PowerShell&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;docker run -it --rm ,
    --volume /var/run/docker.sock:/var/run/docker.sock ,
    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw ,
    --entrypoint=&quot;install&quot; ,
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the Docker installation completes, go to http://localhost to access the Appwrite console from your browser. Please note that on non-linux native hosts, the server might take a few minutes to start after installation completes.&lt;/p&gt; 
 &lt;p&gt;For advanced production and custom installation, check out our Docker &lt;a href=&quot;https://appwrite.io/docs/environment-variables&quot;&gt;environment variables&lt;/a&gt; docs. You can also use our public &lt;a href=&quot;https://gist.github.com/eldadfux/977869ff6bdd7312adfd4e629ee15cc5#file-docker-compose-yml&quot;&gt;docker-compose.yml&lt;/a&gt; file to manually set up an environment.&lt;/p&gt; 
 &lt;h3&gt;Upgrade from an Older Version&lt;/h3&gt; 
 &lt;p&gt;If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the &lt;a href=&quot;https://appwrite.io/docs/installation&quot;&gt;Installation Docs&lt;/a&gt;.&lt;/p&gt; 
 &lt;h2&gt;Getting Started&lt;/h2&gt; 
 &lt;p&gt;Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK in your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-web&quot;&gt;Getting Started for Web&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-flutter&quot;&gt;Getting Started for Flutter&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-server&quot;&gt;Getting Started for Server&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/command-line&quot;&gt;Getting Started for CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Getting Started for Android (Coming soon…)&lt;/li&gt; 
  &lt;li&gt;Getting Started for iOS (Coming soon…)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Services&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/account&quot;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt; - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/users&quot;&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/a&gt; - Manage and list all project users when in admin mode.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/teams&quot;&gt;&lt;strong&gt;Teams&lt;/strong&gt;&lt;/a&gt; - Manage and group users in teams. Manage memberships, invites, and user roles within a team.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/database&quot;&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/a&gt; - Manage database collections and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/storage&quot;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt; - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to fit your app perfectly. All files are scanned by ClamAV and stored in a secure and encrypted way.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/functions&quot;&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Customize your Appwrite server by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event, manually or using a CRON schedule.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/locale&quot;&gt;&lt;strong&gt;Locale&lt;/strong&gt;&lt;/a&gt; - Track your user’s location, and manage your app locale-based data.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/avatars&quot;&gt;&lt;strong&gt;Avatars&lt;/strong&gt;&lt;/a&gt; - Manage your users’ avatars, countries’ flags, browser icons, credit card symbols, and generate QR codes.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;For the complete API documentation, visit &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;https://appwrite.io/docs&lt;/a&gt;. For more tutorials, news and announcements check out our &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;blog&lt;/a&gt; and &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
 &lt;h3&gt;SDKs&lt;/h3&gt; 
 &lt;p&gt;Below is a list of currently supported platforms and languages. If you wish to help us add support to your platform of choice, you can go over to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt; project and view our &lt;a href=&quot;https://github.com/appwrite/sdk-generator/raw/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
 &lt;h4&gt;Client&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-web&quot;&gt;Web&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-flutter&quot;&gt;Flutter&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Server&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-node&quot;&gt;NodeJS&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-php&quot;&gt;PHP&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dart&quot;&gt;Dart&lt;/a&gt; &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-deno&quot;&gt;Deno&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-ruby&quot;&gt;Ruby&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-python&quot;&gt;Python&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dotnet&quot;&gt;.NET&lt;/a&gt; - &lt;strong&gt;Experimental&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Looking for more SDKs? - Help us by contributing a pull request to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt;!&lt;/p&gt; 
 &lt;h2&gt;Contributing&lt;/h2&gt; 
 &lt;p&gt;All code contributions - including those of people having commit access - must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.&lt;/p&gt; 
 &lt;p&gt;We truly ❤️ pull requests! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
 &lt;h2&gt;Security&lt;/h2&gt; 
 &lt;p&gt;For security issues, kindly email us at &lt;a href=&quot;mailto:security@appwrite.io&quot;&gt;security@appwrite.io&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; 
 &lt;h2&gt;Follow Us&lt;/h2&gt; 
 &lt;p&gt;Join our growing community around the world! See our official &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;Blog&lt;/a&gt;. Follow us on &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/appwrite.io&quot;&gt;Facebook Page&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/groups/appwrite.developers/&quot;&gt;Facebook Group&lt;/a&gt; or join our live &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord server&lt;/a&gt; for more help, ideas, and discussions.&lt;/p&gt; 
 &lt;h2&gt;License&lt;/h2&gt; 
 &lt;p&gt;This repository is available under the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/LICENSE&quot;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt; 
&lt;/nobr&gt;</description>
    </item>
    
    <item>
      <title>austintgriffith/scaffold-eth</title>
      <link>https://github.com/austintgriffith/scaffold-eth</link>
      <description>&lt;p&gt;🏗 forkable Ethereum dev stack focused on fast product iterations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🏗 scaffold-eth&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;is everything you need to get started building decentralized applications on Ethereum! 🚀&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#%EF%B8%8F-quick-start&quot;&gt; 🏃‍♀️ Quick Start &lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-learning-solidity&quot;&gt; 🔭 Learning Solidity &lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-deploy&quot;&gt; 📡 Deploy &lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-frontend&quot;&gt; 📺 Frontend&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-providers&quot;&gt; 🛰 Providers &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-hooks&quot;&gt; 🖇 Hooks &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-components&quot;&gt; 📦 Components &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-ui-library&quot;&gt; 🖲 UI Library &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-helpers&quot;&gt; ⛑ Helpers &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-extras&quot;&gt; 🎚 Extras &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt; &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-ship-it&quot;&gt; 🛳 Ship it! &lt;/a&gt; &lt;/b&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-challenges&quot;&gt; 🚩 Challenges &lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-1-decentralized-staking&quot;&gt; 🥩 Staking App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-2-token-vendor&quot;&gt; 🏵 Token Vendor &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-examples-and-tutorials&quot;&gt; 👩‍💻 Examples &amp;amp; Tutorials &lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/simple-nft-example&quot;&gt; 🎟 Simple NFT &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-built-with--scaffold-eth&quot;&gt; Built with 🏗 scaffold-eth &lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nifty.ink&quot;&gt; 🎨 Nifty.ink &lt;/a&gt; (&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/nifty-ink-dev&quot;&gt;code&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://punkwallet.io/&quot;&gt; 🧑‍🎤PunkWallet.io &lt;/a&gt; (&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/punk-wallet&quot;&gt;code&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-infrastructure&quot;&gt;🌉 Infrastructure &lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-using-the-graph&quot;&gt; 🛰 The Graph &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-using-tenderly&quot;&gt; 🔬 Tenderly &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-etherscan&quot;&gt; 🌐 Etherscan &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-using-infura&quot;&gt; 🔶 Infura &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🟪 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-blocknative&quot;&gt; Blocknative &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;|- &lt;b&gt; &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-legacy-content&quot;&gt; 📠 Legacy Content &lt;/a&gt; &lt;/b&gt; - | - &lt;b&gt; &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-support-chat&quot;&gt; 💬 Support Chat &lt;/a&gt; &lt;/b&gt; -|&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/austintgriffith/scaffold-eth&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/33gnKe7ttCc?t=477&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/109873369-e2c58c00-7c2a-11eb-8adf-0ec4b8dcae1e.png&quot; alt=&quot;ethdenvervideo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;🏃‍♀️ Quick Start&lt;/h1&gt; 
&lt;p&gt;required: &lt;a href=&quot;https://nodejs.org/dist/latest-v12.x/&quot;&gt;Node&lt;/a&gt; plus &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;Yarn&lt;/a&gt; and &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/austintgriffith/scaffold-eth.git

cd scaffold-eth
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
yarn install

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
yarn start

&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;in a second terminal window:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd scaffold-eth
yarn chain

&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;in a third terminal window:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd scaffold-eth
yarn deploy

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔏 Edit your smart contract &lt;code&gt;YourContract.sol&lt;/code&gt; in &lt;code&gt;packages/hardhat/contracts&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;📝 Edit your frontend &lt;code&gt;App.jsx&lt;/code&gt; in &lt;code&gt;packages/react-app/src&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;💼 Edit your deployment script &lt;code&gt;deploy.js&lt;/code&gt; in &lt;code&gt;packages/hardhat/scripts&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;📱 Open http://localhost:3000 to see the app&lt;/p&gt; 
&lt;p&gt;🏗 scaffold-eth is a hackthon stack for quick product prototyping on Ethereum.&lt;/p&gt; 
&lt;p&gt;👩‍🔬 This scaffolding leverages state of the art tooling from the ecosystem.&lt;/p&gt; 
&lt;p&gt;🧪 It is a free standing dapp so you can learn by making small changes.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;After installing&lt;/em&gt;, your dev environment should look like this:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/109870279-24ecce80-7c27-11eb-91f3-b2c4febac118.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;React dev server, HardHat blockchain, deploy terminal, code IDE, and frontend browser.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;✏️ Make small changes to &lt;code&gt;YourContract.sol&lt;/code&gt; and watch your app auto update!&lt;/p&gt; 
&lt;p&gt;🔁 You can &lt;code&gt;yarn deploy&lt;/code&gt; any time and get a fresh new contract in the frontend:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93149199-f8fa8280-f6b2-11ea-9da7-3b26413ec8ab.gif&quot; alt=&quot;deploy&quot;&gt;&lt;/p&gt; 
&lt;p&gt;💵 Each browser has an account in the top right and you can use the faucet (bottom left) to get ⛽️ testnet eth for gas:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93150077-6c04f880-f6b5-11ea-9ee8-5c646b5b7afc.gif&quot; alt=&quot;faucet&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🔨Once you have funds, you can call &lt;code&gt;setPurpose&lt;/code&gt; on your contract and “write” to the &lt;code&gt;purpose&lt;/code&gt; storage:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93229761-2d625300-f734-11ea-9036-44a75429ef0c.gif&quot; alt=&quot;setp&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Look for the &lt;a href=&quot;https://hardhat.org&quot;&gt;HardHat&lt;/a&gt; console.log() output in the &lt;code&gt;yarn chain&lt;/code&gt; terminal:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93687934-2f534b80-fa7f-11ea-84b2-c0ba99533dc2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚗️ Spend some time tinkering with &lt;code&gt;YourContract.sol&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;🔭 Learning Solidity&lt;/h1&gt; 
&lt;p&gt;📕 Read the docs: https://docs.soliditylang.org&lt;/p&gt; 
&lt;p&gt;📚 Go through each topic from &lt;a href=&quot;https://solidity-by-example.org&quot;&gt;solidity by example&lt;/a&gt; editing &lt;code&gt;YourContract.sol&lt;/code&gt; in &lt;strong&gt;🏗 scaffold-eth&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/primitives/&quot;&gt;Primitive Data Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/mapping/&quot;&gt;Mappings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/structs/&quot;&gt;Structs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/function-modifier/&quot;&gt;Modifiers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/events/&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/inheritance/&quot;&gt;Inheritance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/payable/&quot;&gt;Payable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/fallback/&quot;&gt;Fallback&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📧 Learn all the &lt;a href=&quot;https://solidity.readthedocs.io/en/v0.6.6/units-and-global-variables.html&quot;&gt;Solidity globals and units&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;👨‍🏫 Start super simple with a counter: &lt;code&gt;uint8 public count = 1;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;⬇️ Then a &lt;code&gt;function dec() public {}&lt;/code&gt; that does a &lt;code&gt;count = count - 1;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93150263-dae25180-f6b5-11ea-94e1-b24ab2a63fa5.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🔬 What happens when you subtract 1 from 0? Try it out in the app to see what happens!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/93688066-46466d80-fa80-11ea-85df-81fbafa46575.gif&quot; alt=&quot;underflow&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🚽 UNDERFLOW!?! (🚑 &lt;a href=&quot;https://docs.soliditylang.org/en/v0.8.0/&quot;&gt;Solidity &amp;gt;0.8.0&lt;/a&gt; will catch this!)&lt;/p&gt; 
&lt;p&gt;🧫 You can iterate and learn as you go. Test your assumptions!&lt;/p&gt; 
&lt;p&gt;🔐 Global variables like &lt;code&gt;msg.sender&lt;/code&gt; and &lt;code&gt;msg.value&lt;/code&gt; are cryptographically backed and can be used to make rules&lt;/p&gt; 
&lt;p&gt;📝 Keep this &lt;a href=&quot;https://solidity.readthedocs.io/en/v0.7.0/cheatsheet.html?highlight=global#global-variables&quot;&gt;cheat sheet&lt;/a&gt; handy&lt;/p&gt; 
&lt;p&gt;⏳ Maybe we could use &lt;code&gt;block.timestamp&lt;/code&gt; or &lt;code&gt;block.number&lt;/code&gt; to track time in our contract&lt;/p&gt; 
&lt;p&gt;🔏 Or maybe keep track of an &lt;code&gt;address public owner;&lt;/code&gt; then make a rule like &lt;code&gt;require( msg.sender == owner );&lt;/code&gt; for an important function&lt;/p&gt; 
&lt;p&gt;🧾 Maybe create a smart contract that keeps track of a &lt;code&gt;mapping ( address =&amp;gt; uint256 ) public balance;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;🏦 It could be like a decentralized bank that you &lt;code&gt;function deposit() public payable {}&lt;/code&gt; and &lt;code&gt;withdraw()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;📟 Events are really handy for signaling to the frontend. &lt;a href=&quot;https://solidity-by-example.org/0.6/events/&quot;&gt;Read more about events here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;📲 Spend some time in &lt;code&gt;App.jsx&lt;/code&gt; in &lt;code&gt;packages/react-app/src&lt;/code&gt; and learn about the 🛰 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-web3-providers&quot;&gt;Providers&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;⚠️ Big numbers are stored as objects: &lt;code&gt;formatEther&lt;/code&gt; and &lt;code&gt;parseEther&lt;/code&gt; (ethers.js) will help with WEI-&amp;gt;ETH and ETH-&amp;gt;WEI.&lt;/p&gt; 
&lt;p&gt;🧳 The single page (searchable) &lt;a href=&quot;https://docs.ethers.io/v5/single-page/&quot;&gt;ethers.js docs&lt;/a&gt; are pretty great too.&lt;/p&gt; 
&lt;p&gt;🐜 The UI framework &lt;code&gt;Ant Design&lt;/code&gt; has a &lt;a href=&quot;https://ant.design/components/overview/&quot;&gt;bunch of great components&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;📃 Check the console log for your app to see some extra output from hooks like &lt;code&gt;useContractReader&lt;/code&gt; and &lt;code&gt;useEventListener&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;🏗 You’ll notice the &lt;code&gt;&amp;lt;Contract /&amp;gt;&lt;/code&gt; component that displays the dynamic form as scaffolding for interacting with your contract.&lt;/p&gt; 
&lt;p&gt;🔲 Try making a &lt;code&gt;&amp;lt;Button/&amp;gt;&lt;/code&gt; that calls &lt;code&gt;writeContracts.YourContract.setPurpose(&quot;👋 Hello World&quot;)&lt;/code&gt; to explore how your UI might work…&lt;/p&gt; 
&lt;p&gt;💬 Wrap the call to &lt;code&gt;writeContracts&lt;/code&gt; with a &lt;code&gt;tx()&lt;/code&gt; helper that uses BlockNative’s &lt;a href=&quot;https://www.blocknative.com/notify&quot;&gt;Notify.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;🧬 Next learn about &lt;a href=&quot;https://solidity-by-example.org/0.6/structs/&quot;&gt;structs&lt;/a&gt; in Solidity.&lt;/p&gt; 
&lt;p&gt;🗳 Maybe an make an array &lt;code&gt;YourStructName[] public proposals;&lt;/code&gt; that could call be voted on with &lt;code&gt;function vote() public {}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;🔭 Your dev environment is perfect for &lt;em&gt;testing assumptions&lt;/em&gt; and learning by prototyping.&lt;/p&gt; 
&lt;p&gt;📝 Next learn about the &lt;a href=&quot;https://solidity-by-example.org/0.6/fallback/&quot;&gt;fallback function&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;💸 Maybe add a &lt;code&gt;receive() external payable {}&lt;/code&gt; so your contract will accept ETH?&lt;/p&gt; 
&lt;p&gt;🚁 OH! Programming decentralized money! 😎 So rad!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;📡 Deploy&lt;/h1&gt; 
&lt;p&gt;🛰 Ready to deploy to a testnet? Change the &lt;code&gt;defaultNetwork&lt;/code&gt; in &lt;code&gt;packages/hardhat/hardhat.config.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;🔐 Generate a deploy account with &lt;code&gt;yarn generate&lt;/code&gt; and view it with &lt;code&gt;yarn account&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;💵 Fund your deployer account (pro tip: use an &lt;a href=&quot;https://instantwallet.io&quot;&gt;instant wallet&lt;/a&gt; to send funds to the QR code from &lt;code&gt;yarn account&lt;/code&gt;)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Deploy your contract:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;📺 Frontend&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Edit your frontend &lt;code&gt;App.jsx&lt;/code&gt; in &lt;code&gt;packages/react-app/src&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📡 Make sure your &lt;code&gt;targetNetwork&lt;/code&gt; is the same as 👷‍♀️ HardHat’s &lt;code&gt;defaultNetwork&lt;/code&gt; (where you deployed your contracts).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110500412-68778a80-80b6-11eb-91bd-194d47d62771.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🤡 Adjust your debugging settings as needed:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110499550-95776d80-80b5-11eb-8024-287878b180d5.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🔏 Providers:&lt;/h2&gt; 
&lt;p&gt;Providers are your connections to different blockchains.&lt;/p&gt; 
&lt;p&gt;The frontend has three different providers that provide different levels of access to different chains:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;mainnetProvider&lt;/code&gt;: (read only) &lt;a href=&quot;https://alchemyapi.io/&quot;&gt;Alchemy&lt;/a&gt; or &lt;a href=&quot;https://infura.io/&quot;&gt;Infura&lt;/a&gt; connection to main &lt;a href=&quot;https://ethereum.org/developers/&quot;&gt;Ethereum&lt;/a&gt; network (and contracts already deployed like &lt;a href=&quot;https://etherscan.io/address/0x6b175474e89094c44da98b954eedeac495271d0f#code&quot;&gt;DAI&lt;/a&gt; or &lt;a href=&quot;https://etherscan.io/address/0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667&quot;&gt;Uniswap&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;localProvider&lt;/code&gt;: local &lt;a href=&quot;https://hardhat.org&quot;&gt;HardHat&lt;/a&gt; accounts, used to read from &lt;em&gt;your&lt;/em&gt; contracts (&lt;code&gt;.env&lt;/code&gt; file points you at testnet or mainnet)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;injectedProvider&lt;/code&gt;: your personal &lt;a href=&quot;https://metamask.io/download.html&quot;&gt;MetaMask&lt;/a&gt;, &lt;a href=&quot;https://walletconnect.org/apps&quot;&gt;WalletConnect&lt;/a&gt; via &lt;a href=&quot;https://www.argent.xyz/&quot;&gt;Argent&lt;/a&gt;, or other injected wallet (generates &lt;a href=&quot;https://www.npmjs.com/package/burner-provider&quot;&gt;burner-provider&lt;/a&gt; on page load)&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110499705-bc35a400-80b5-11eb-826d-44815b89296c.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🖇 Hooks:&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110499834-dcfdf980-80b5-11eb-9d2d-de7046bf5c2b.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Commonly used Ethereum hooks located in &lt;code&gt;packages/react-app/src/&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;usePoller(fn, delay)&lt;/code&gt;: runs a function on app load and then on a custom interval&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;usePoller(() =&amp;gt; {
  //do something cool at start and then every three seconds
}, 3000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useBalance(address, provider, [pollTime])&lt;/code&gt;: poll for the balance of an address from a provider&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const localBalance = useBalance(address, localProvider);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useBlockNumber(provider,[pollTime])&lt;/code&gt;: get current block number from a provider&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const blockNumber = useBlockNumber(props.provider);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useGasPrice([speed])&lt;/code&gt;: gets current “fast” price from &lt;a href=&quot;https://ethgasstation.info&quot;&gt;ethgasstation&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const gasPrice = useGasPrice();
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useExchangePrice(mainnetProvider, [pollTime])&lt;/code&gt;: gets current price of Ethereum on the Uniswap exchange&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const price = useExchangePrice(mainnetProvider);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useContractLoader(provider)&lt;/code&gt;: loads your smart contract interface&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const readContracts = useContractLoader(localProvider);
const writeContracts = useContractLoader(injectedProvider);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useContractReader(contracts, contractName, variableName, [pollTime])&lt;/code&gt;: reads a variable from your contract and keeps it in the state&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const title = useContractReader(props.readContracts, contractName, &quot;title&quot;);
const owner = useContractReader(props.readContracts, contractName, &quot;owner&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;code&gt;useEventListener(contracts, contractName, eventName, [provider], [startBlock])&lt;/code&gt;: listens for events from a smart contract and keeps them in the state&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const ownerUpdates = useEventListener(
  readContracts,
  contractName,
  &quot;UpdateOwner&quot;,
  props.localProvider,
  1
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;📦 Components:&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110500019-04ed5d00-80b6-11eb-97a4-74068fa90846.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Your commonly used React Ethereum components located in &lt;code&gt;packages/react-app/src/&lt;/code&gt;:&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;📬 &lt;code&gt;&amp;lt;Address /&amp;gt;&lt;/code&gt;: A simple display for an Ethereum address that uses a &lt;a href=&quot;https://www.npmjs.com/package/ethereum-blockies&quot;&gt;Blockie&lt;/a&gt;, lets you copy, and links to &lt;a href=&quot;https://etherscan.io/&quot;&gt;Etherescan&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;  &amp;lt;Address value={address} /&amp;gt;
  &amp;lt;Address value={address} size=&quot;short&quot; /&amp;gt;
  &amp;lt;Address value={address} size=&quot;long&quot; blockexplorer=&quot;https://blockscout.com/poa/xdai/address/&quot;/&amp;gt;
  &amp;lt;Address value={address} ensProvider={mainnetProvider}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/80522487-e375fd80-8949-11ea-84fd-0de3eab5cd03.gif&quot; alt=&quot;ensaddress&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;🖋 &lt;code&gt;&amp;lt;AddressInput /&amp;gt;&lt;/code&gt;: An input box you control with useState for an Ethereum address that uses a &lt;a href=&quot;https://www.npmjs.com/package/ethereum-blockies&quot;&gt;Blockie&lt;/a&gt; and ENS lookup/display.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;  const [ address, setAddress ] = useState(&quot;&quot;)
  &amp;lt;AddressInput
    value={address}
    ensProvider={props.ensProvider}
    onChange={(address)=&amp;gt;{
      setAddress(address)
    }}
  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p&gt;💵 &lt;code&gt;&amp;lt;Balance /&amp;gt;&lt;/code&gt;: Displays the balance of an address in either dollars or decimal.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Balance
  address={address}
  provider={injectedProvider}
  dollarMultiplier={price}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/80522919-86c71280-894a-11ea-8f61-70bac7a72106.gif&quot; alt=&quot;balance&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;👤 &lt;code&gt;&amp;lt;Account /&amp;gt;&lt;/code&gt;: Allows your users to start with an Ethereum address on page load but upgrade to a more secure, injected provider, using &lt;a href=&quot;https://web3modal.com/&quot;&gt;Web3Modal&lt;/a&gt;. It will track your &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;localProvider&lt;/code&gt; in your app’s state:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const [address, setAddress] = useState();
const [injectedProvider, setInjectedProvider] = useState();
const price = useExchangePrice(mainnetProvider);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Account
  address={address}
  setAddress={setAddress}
  localProvider={localProvider}
  injectedProvider={injectedProvider}
  setInjectedProvider={setInjectedProvider}
  dollarMultiplier={price}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/80527048-fdffa500-8950-11ea-9a0f-576be87e4368.gif&quot; alt=&quot;account&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;Notice&lt;/strong&gt;: the &lt;code&gt;&amp;lt;Account /&amp;gt;&lt;/code&gt; component will call &lt;code&gt;setAddress&lt;/code&gt; and &lt;code&gt;setInjectedProvider&lt;/code&gt; for you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🖲 UI Library&lt;/h2&gt; 
&lt;p&gt;🐜 &lt;a href=&quot;https://ant.design/components/button/&quot;&gt;Ant.design&lt;/a&gt; is a fantastic UI library with components like the &lt;a href=&quot;https://ant.design/components/grid/&quot;&gt;grids&lt;/a&gt;, &lt;a href=&quot;https://ant.design/components/menu/&quot;&gt;menus&lt;/a&gt;, &lt;a href=&quot;https://ant.design/components/date-picker/&quot;&gt;dates&lt;/a&gt;, &lt;a href=&quot;https://ant.design/components/time-picker/&quot;&gt;times&lt;/a&gt;, &lt;a href=&quot;https://ant.design/components/button/&quot;&gt;buttons&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;⛑ Helpers:&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Transactor&lt;/code&gt;: The transactor returns a &lt;code&gt;tx()&lt;/code&gt; function to make running and tracking transactions as simple and standardized as possible. We will bring in &lt;a href=&quot;https://www.blocknative.com/notify&quot;&gt;BlockNative’s Notify&lt;/a&gt; library to track our testnet and mainnet transactions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const tx = Transactor(props.injectedProvider, props.gasPrice);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can use the &lt;code&gt;tx()&lt;/code&gt; function to send funds and write to your smart contracts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;tx({
  to: readContracts[contractName].address,
  value: parseEther(&quot;0.001&quot;),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;tx(writeContracts[&quot;SmartContractWallet&quot;].updateOwner(newOwner));
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;☢️ &lt;strong&gt;Warning&lt;/strong&gt;: You will need to update the configuration for &lt;code&gt;react-app/src/helpers/Transactor.js&lt;/code&gt; to use &lt;em&gt;your&lt;/em&gt; &lt;a href=&quot;https://www.blocknative.com/notify&quot;&gt;BlockNative dappId&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;🎚 Extras:&lt;/h2&gt; 
&lt;p&gt;🔑 Create wallet links to your app with &lt;code&gt;yarn wallet&lt;/code&gt; and &lt;code&gt;yarn fundedwallet&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;⬇️ Installing a new package to your frontend? You need to &lt;code&gt;cd packages/react-app&lt;/code&gt; and then &lt;code&gt;yarn add PACKAGE&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;⬇️ Installing a new package to your backend? You need to &lt;code&gt;cd packages/harthat&lt;/code&gt; and then &lt;code&gt;yarn add PACKAGE&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🛳 Ship it!&lt;/h2&gt; 
&lt;p&gt;You can deploy your app with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
# packge up the static site:

yarn build

# ship it!

yarn surge

OR

yarn s3

OR

yarn ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🚀 Good luck!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚩 Challenges&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-1-decentralized-staking&quot;&gt; 🥩 Decentralized Staking App &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-2-token-vendor&quot;&gt; 🏵 Token Vendor &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h2&gt;📡 Examples and Tutorials&lt;/h2&gt; 
&lt;p&gt;(todo: insert all the cool active branches)&lt;/p&gt; 
&lt;p&gt;| 
 &lt;m&gt; 
  &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/tenderly&quot;&gt; tenderly &lt;/a&gt; | | — | | 
  &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/simple-nft-example&quot;&gt; simple-nft-example &lt;/a&gt; |
 &lt;/m&gt;&lt;/p&gt; 
&lt;p&gt;^^^ ⛏ &lt;b&gt;PR&lt;/b&gt; your 🏗 scaffold-eth branch!!! 🙏🙏🙏 ^^^&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;🔨 Built with 🏗 scaffold-eth:&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://nifty.ink&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://nifty.ink&quot;&gt;👩‍🎨 Nifty Ink&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Paintings come to life as you “ink” new creations and trade them on Ethereum. A deep dive into 🖼 NFTs, 🐳 OpenSea, 🖍 react-canvas-draw, 🎨 react-color, and 🛬 onboarding user experience.&lt;/p&gt; 
&lt;p&gt;🏃‍♂️ SpeedRun 📹 (TODO)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/nifty-ink-dev&quot;&gt;💾 Source Code &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://instantwallet.io&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://instantwallet.io&quot;&gt;🧙‍♂️ Instant Wallet&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;An instant wallet running on xDAI insired by &lt;a href=&quot;https://xdai.io&quot;&gt;xdai.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/instantwallet-dev-session&quot;&gt;💾 Source Code &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/personal-token-voting-73b44a598d8e&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://medium.com/@austin_48503/personal-token-voting-73b44a598d8e&quot;&gt;🗳 Personal Token Voting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Poll your holders! Build an example emoji voting system with 🏗 &lt;b&gt;scaffold-eth&lt;/b&gt;. 🔏 Cryptographically signed votes but tracked off-chain with 📡 Zapier and 📑 Google Sheets.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/Q5zgxcQtwWI&quot;&gt;🏃‍♂️ SpeedRun 📹 &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/emoji-vote-dev&quot;&gt;💾 Source Code &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;^^^ ⛏ PLEASE &lt;b&gt;PR&lt;/b&gt; your 🏗 scaffold-eth project in above!!! 🙏🙏🙏 ^^^&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h1&gt;📟 Infrastructure&lt;/h1&gt; 
&lt;hr&gt; 
&lt;h2&gt;🛰 Using The Graph&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/T5ylzOTkn-Q&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/101052782-4664ee00-3544-11eb-8805-887ad4d1406e.png&quot; alt=&quot;thegraphplayvideo&quot;&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/T5ylzOTkn-Q&quot;&gt; 🎥 here is another Graph speed run tutorial video &lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🔬 Using Tenderly&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://tenderly.co&quot;&gt;Tenderly&lt;/a&gt; is a platform for monitoring, alerting and trouble-shooting smart contracts. They also have a hardhat plugin and CLI tool that can be helpful for local development!&lt;/p&gt; 
&lt;p&gt;Hardhat Tenderly &lt;a href=&quot;https://blog.tenderly.co/level-up-your-smart-contract-productivity-using-hardhat-and-tenderly/&quot;&gt;announcement blog&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;h3&gt;Verifying contracts on Tenderly&lt;/h3&gt; 
&lt;p&gt;scaffold-eth includes the hardhat-tenderly plugin. When deploying to any of the following networks:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[&quot;kovan&quot;,&quot;goerli&quot;,&quot;mainnet&quot;,&quot;rinkeby&quot;,&quot;ropsten&quot;,&quot;matic&quot;,&quot;mumbai&quot;,&quot;xDai&quot;,&quot;POA&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can verify contracts as part of the &lt;code&gt;deploy.js&lt;/code&gt; script. We have created a &lt;code&gt;tenderlyVerify()&lt;/code&gt; helper function, which takes your contract name and its deployed address:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;await tenderlyVerify(
  {contractName: &quot;YourContract&quot;,
   contractAddress: yourContract.address
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure your target network is present in the hardhat networks config, then either update the default network in &lt;code&gt;hardhat.config.js&lt;/code&gt; to your network of choice or run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn deploy --network NETWORK_OF_CHOICE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once verified, they will then be available to view on Tenderly!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=c04rrld1IiE&amp;amp;t=47s&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/110502199-38c98200-80b8-11eb-8d79-a98bb1f39617.png&quot; alt=&quot;TenderlyRun&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Exporting local Transactions&lt;/h4&gt; 
&lt;p&gt;One of Tenderly’s best features for builders is the ability to &lt;a href=&quot;https://dashboard.tenderly.co/tx/main/0xb8f28a9cace2bdf6d10809b477c9c83e81ce1a1b2f75f35ddd19690bbc6612aa/local-transactions&quot;&gt;upload local transactions&lt;/a&gt; so that you can use all of Tenderly’s tools for analysis and debugging. You will need to create a &lt;a href=&quot;https://tenderly.co/&quot;&gt;tenderly account&lt;/a&gt; if you haven’t already.&lt;/p&gt; 
&lt;p&gt;Exporting local transactions can be done using the &lt;a href=&quot;https://github.com/tenderly/tenderly-cli&quot;&gt;Tenderly CLI&lt;/a&gt;. Installing the Tenderly CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew tap tenderly/tenderly
brew install tenderly
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;See alternative installation steps &lt;a href=&quot;https://github.com/tenderly/tenderly-cli#installation&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You need to log in and configure for your local chain (including any forking information) - this can be done from any directory, but it probably makes sense to do under &lt;code&gt;/packages/hardhat&lt;/code&gt; to ensure that local contracts are also uploaded with the local transaction (see more below!)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd packages/hardhat
tenderly login
tenderly export init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then take transaction hashes from your local chain and run the following from the &lt;code&gt;packages/hardhat&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tenderly export &amp;lt;transactionHash&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Which will upload them to tenderly.co/dashboard!&lt;/p&gt; 
&lt;p&gt;Tenderly also allows users to debug smart contracts deployed to a local fork of some network (see &lt;code&gt;yarn fork&lt;/code&gt;). To let Tenderly know that we are dealing with a fork, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tenderly export init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CLI will ask you for your network’s name and whether you are forking a public network. After choosing the right fork, your exporting will look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tenderly export &amp;lt;transactionHash&amp;gt; --export-network &amp;lt;networkName&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that &lt;code&gt;tenderly.yaml&lt;/code&gt; file stores information about all networks that you initialized for exporting transactions. There can be multiple of them in a single file. You only need the &lt;code&gt;--export-network&lt;/code&gt; if you have more than one network in your tenderly.yaml config!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A quick note on local contracts:&lt;/strong&gt; if your local contracts are persisted in a place that Tenderly can find them, then they will also be uploaded as part of the local transaction &lt;code&gt;export&lt;/code&gt;, which is one of the freshest features! We have added a call to &lt;code&gt;tenderly.persistArtifacts()&lt;/code&gt; as part of the scaffold-eth deploy() script, which stores the contracts &amp;amp; meta-information in a &lt;code&gt;deployments&lt;/code&gt; folder, so this should work out of the box.&lt;/p&gt; 
&lt;p&gt;Another pitfall when dealing with a local network (fork or not) is that you will not see the transaction hash if it fails. This happens because the hardhat detects an error while &lt;code&gt;eth_estimateGas&lt;/code&gt; is executed. To prevent such behaviour, you can skip this estimation by passing a &lt;code&gt;gasLimit&lt;/code&gt; override when making a call - an example of this is demonstrated in the &lt;code&gt;FunctionForm.jsx&lt;/code&gt; file of the Contract component:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;let overrides = {}
// Uncomment the next line if you want to skip the gas estimation for each transaction
// overrides.gasLimit = hexlify(1200000);
const returned = await tx(contractFunction(...args, overrides));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;One gotcha&lt;/strong&gt; - Tenderly does not (currently) support yarn workspaces, so any imported solidity contracts need to be local to &lt;code&gt;packages/hardhat&lt;/code&gt; for your contracts to be exported. You can achieve this by using &lt;a href=&quot;https://classic.yarnpkg.com/blog/2018/02/15/nohoist/&quot;&gt;&lt;code&gt;nohoist&lt;/code&gt;&lt;/a&gt; - this has been done for &lt;code&gt;hardhat&lt;/code&gt; so that we can export &lt;code&gt;console.sol&lt;/code&gt; - see the top-level &lt;code&gt;package.json&lt;/code&gt; to see how!&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&quot;workspaces&quot;: {
  &quot;packages&quot;: [
    &quot;packages/*&quot;
  ],
  &quot;nohoist&quot;: [
    &quot;**/hardhat&quot;,
    &quot;**/hardhat/**&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌐 Etherscan&lt;/h2&gt; 
&lt;p&gt;Hardhat has a truly wonderful &lt;a href=&quot;https://www.npmjs.com/package/@nomiclabs/hardhat-etherscan&quot;&gt;&lt;code&gt;hardhat-etherscan&lt;/code&gt; plugin&lt;/a&gt; that takes care of contract verification after deployment. You need to add the following to your &lt;code&gt;hardhat.config.js&lt;/code&gt; imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;require(&quot;@nomiclabs/hardhat-etherscan&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then add your etherscan API key to the module.exports:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;etherscan: {
  // Your API key for Etherscan
  // Obtain one at https://etherscan.io/
  apiKey: &quot;YOUR-API-KEY-HERE&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verifying is simple, assuming you are verifying a contract that you have just deployed from your hardhat setup - you just need to run the verify script, passing constructor arguments as an array if necessary (there is an example commented out in the &lt;code&gt;deploy.js&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;await run(&quot;verify:verify&quot;, {
  address: yourContract.address,
  // constructorArguments: args // If your contract has constructor arguments, you can pass them as an array
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You only have to pass the contract because the plugin figures out which of the locally compiled contracts is the right one to verify. Pretty cool stuff!&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🔶 Using Infura&lt;/h2&gt; 
&lt;p&gt;You will need to update the &lt;code&gt;constants.js&lt;/code&gt; in &lt;code&gt;packages/react-app/src&lt;/code&gt; with &lt;a href=&quot;https://infura.io&quot;&gt;your own Infura ID&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🟪 Blocknative&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;update the &lt;code&gt;BLOCKNATIVE_DAPPID&lt;/code&gt; in &lt;code&gt;packages/react-app/src/constants.js&lt;/code&gt; with &lt;a href=&quot;https://docs.blocknative.com/notify&quot;&gt;your own Blocknative DappID&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h2&gt;📠 Legacy Content&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/building-on-ethereum-in-2020-dca52eda5f00&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;&lt;a href=&quot;https://medium.com/@austin_48503/building-on-ethereum-in-2020-dca52eda5f00&quot;&gt;🧫 Building on Ethereum in 2020 (research for this repo)&lt;/a&gt;&lt;/h5&gt;
&lt;a href=&quot;https://medium.com/@austin_48503/building-on-ethereum-in-2020-dca52eda5f00&quot;&gt; &lt;/a&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ShJZf5lsXiM&amp;amp;feature=youtu.be&amp;amp;t=19&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/88085723-7ab2b180-cb43-11ea-832d-8db6efcbdc02.png&quot; alt=&quot;splash&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/programming-decentralized-money-300bacec3a4f&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a href=&quot;https://medium.com/@austin_48503/programming-decentralized-money-300bacec3a4f&quot;&gt;Tutorial 1: 🛠 Programming Decentralized Money&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Learn the basics of 🏗 &lt;b&gt;scaffold-eth&lt;/b&gt; and building on &lt;b&gt;Ethereum&lt;/b&gt;. 👷‍♂️ HardHat, 📦 create-eth-app, 🔥 hot reloading smart contracts, 🛰 providers, 🔗 hooks, 🎛 components, and building a decentralized application. &lt;a href=&quot;https://youtu.be/7rq3TPL-tgI&quot;&gt;🎥 Guided Tutorial&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h6&gt;Tutorial 2: 🏵 The Token&lt;/h6&gt; 
&lt;p&gt;Learn about tokens. [coming soon] What is a token? Why is it cool? How can I deploy one? Exotic mechanisms? (todo)&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/%EF%B8%8F-minimum-viable-exchange-d84f30bd0c90&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a href=&quot;https://medium.com/@austin_48503/%EF%B8%8F-minimum-viable-exchange-d84f30bd0c90&quot;&gt;Tutorial 3: ⚖️ Minimum Viable Decentralized Exchange&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Learn the basics of Automated Market Makers like 🦄 Uniswap. Learn how 💰Reserves affect the 📉 price, ⚖️ trading, and 💦 slippage from low liquidity.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/eP5w6Ger1EQ&quot;&gt;🏃‍♀️ SpeedRun 📹&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/tl-dr-scaffold-eth-ipfs-20fa35b11c35&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a href=&quot;https://medium.com/@austin_48503/tl-dr-scaffold-eth-ipfs-20fa35b11c35&quot;&gt;Tutorial 4: 🚀 Connecting ETH to IPFS&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Build a simple IPFS application in 🏗 &lt;b&gt;scaffold-eth&lt;/b&gt; to learn more about distributed file storage and content addressing. &lt;a href=&quot;https://youtu.be/vqrLr5eOjLo?t=342&quot;&gt;🎥 Live Tutorial&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h6&gt;Tutorial 5: ⛽️GSN and Meta Transactions&lt;/h6&gt; 
&lt;p&gt;Learn about to provide your users with better UX by abstracting away gas fees and blockchain mechanics. (todo)&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://medium.com/@austin_48503/decentralized-deployment-7d975c9d5016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a href=&quot;https://medium.com/@austin_48503/decentralized-deployment-7d975c9d5016&quot;&gt;Tutorial 6: 🛰 Decentralized Deployment&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Learn how to deploy your smart contract to a production blockchain. Then deploy your applicaton to Surge, S3, and IPFS. Finally, register an ENS and point it at the decentralized content! &lt;a href=&quot;https://youtu.be/vqrLr5eOjLo?t=1350&quot;&gt;🎥 Live Tutorial&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;💬 Support Chat&lt;/h2&gt; 
&lt;p&gt;Join the telegram &lt;a href=&quot;https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA&quot;&gt;support chat 💬&lt;/a&gt; to ask questions and find others building with 🏗 scaffold-eth!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;===================================================== &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth#-scaffold-eth&quot;&gt;⏫ back to the top ⏫&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>facebookexperimental/Recoil</title>
      <link>https://github.com/facebookexperimental/Recoil</link>
      <description>&lt;p&gt;Recoil is an experimental state management library for React apps. It provides several capabilities that are difficult to achieve with React alone, while being compatible with the newest features of React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recoil · &lt;a href=&quot;https://www.npmjs.com/package/recoil&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/recoil&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/actions&quot;&gt;&lt;img src=&quot;https://github.com/facebookexperimental/Recoil/workflows/Node.js%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/recoiljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/recoiljs?label=Follow%20Recoil&amp;amp;style=social&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Recoil is an experimental set of utilities for state management with React.&lt;/p&gt; 
&lt;p&gt;Please see the website: https://recoiljs.org&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The Recoil package lives in &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;npm&lt;/a&gt;. To install the latest stable version, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you’re using &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;yarn&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you’re using &lt;a href=&quot;https://cloud.google.com/community/tutorials/install-bower-dependencies-on-google-app-engine&quot;&gt;bower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;bower install --save recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Development of Recoil happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Recoil.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Recoil is &lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nuxt/nuxt.js</title>
      <link>https://github.com/nuxt/nuxt.js</link>
      <description>&lt;p&gt;The Intuitive Vue Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; style=&quot;width:320px&quot; src=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/.github/nuxt.png&quot;&gt;&lt;/p&gt;
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/nuxt/nuxt.js/actions?query=branch%3Adev+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/nuxt/nuxt.js/workflows/test/badge.svg?branch=dev&amp;amp;event=push&quot; alt=&quot;Tests Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nuxt/nuxt.js/actions?query=branch%3Adev+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/nuxt/nuxt.js/workflows/windows/badge.svg?branch=dev&amp;amp;event=push&quot; alt=&quot;Windows Status&quot;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&quot;https://codecov.io/gh/nuxt/nuxt.js&quot;&gt;&lt;img src=&quot;https://badgen.net/codecov/c/github/nuxt/nuxt.js/master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dm/nuxt&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/nuxt&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/license/nuxt&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.nuxtjs.org/&quot;&gt;&lt;img src=&quot;https://badgen.net/badge/Discord/join-us/7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/#platinum-sponsors&quot; alt=&quot;Platinum Sponsors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/platinum-sponsors/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/#gold-sponsors&quot; alt=&quot;Gold Sponsors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/gold-sponsors/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/#silver-sponsors&quot; alt=&quot;Silver Sponsors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/silver-sponsors/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/#bronze-sponsors&quot; alt=&quot;Bronze Sponsors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/bronze-sponsors/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nuxt/nuxt.js/dev/#nuxters&quot; alt=&quot;Nuxters on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/nuxters/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://oc.nuxtjs.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg?sanitize=true&quot; alt=&quot;Support us&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://otechie.com/nuxt?ref=badge&quot;&gt;&lt;img src=&quot;https://api.otechie.com/consultancy/nuxt/badge.svg?sanitize=true&quot; alt=&quot;Hire Nuxt&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Build your next Vue.js application with confidence using Nuxt: a framework making web development simple and powerful.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📘 Documentation: &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 Community: &lt;a href=&quot;https://cmty.app/nuxt&quot;&gt;cmty.app/nuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎬 Video: &lt;a href=&quot;https://www.youtube.com/watch?v=kmf-p-pTi40&quot;&gt;1 minute demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐦 Twitter: &lt;a href=&quot;https://twitter.nuxtjs.org/&quot;&gt;@nuxt_js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 Chat: &lt;a href=&quot;https://discord.nuxtjs.org/&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;a href=&quot;https://awesome.nuxtjs.org/&quot;&gt;AwesomeNuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👉 &lt;a href=&quot;https://template.nuxtjs.org&quot;&gt;Play with Nuxt online&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automatic transpilation and bundling (with webpack and babel)&lt;/li&gt; 
 &lt;li&gt;Hot code reloading&lt;/li&gt; 
 &lt;li&gt;Server-side rendering OR Single Page App OR Static Generated, you choose :fire:&lt;/li&gt; 
 &lt;li&gt;Static file serving. &lt;code&gt;./static/&lt;/code&gt; is mapped to &lt;code&gt;/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Configurable with a &lt;code&gt;nuxt.config.js&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Custom layouts with the &lt;code&gt;layouts/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
 &lt;li&gt;Code splitting for every &lt;code&gt;pages/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Loading just the critical CSS (page-level)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more at &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npx create-nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It’s as simple as that!&lt;/p&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/installation&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Please take a look at &lt;a href=&quot;https://nuxtjs.org/examples&quot;&gt;https://nuxtjs.org/examples&lt;/a&gt; or directly in &lt;a href=&quot;https://github.com/nuxt/nuxt.js/tree/dev/examples&quot;&gt;https://github.com/nuxt/nuxt.js/tree/dev/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Production deployment&lt;/h2&gt; 
&lt;p&gt;To deploy, instead of running nuxt, you probably want to build ahead of time. Therefore, building and starting are separate commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nuxt build
nuxt start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/commands#production-deployment&lt;/p&gt; 
&lt;h2&gt;Consulting from the Nuxt team&lt;/h2&gt; 
&lt;p&gt;Get help with that tough bug or make sure your Nuxt app is ready to deploy. For $250 an hour, get technical support, advice, code reviews, and development from the Nuxt core team: &lt;a href=&quot;https://otechie.com/nuxt?ref=readme&quot;&gt;Hire Nuxt on Otechie&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Professional support with TideLift&lt;/h2&gt; 
&lt;p&gt;Professionally supported Nuxt is now available!&lt;/p&gt; 
&lt;p&gt;Tidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-nuxt?utm_source=npm-nuxt&amp;amp;utm_medium=readme&quot;&gt;Get supported Nuxt with the Tidelift Subscription&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Nuxt&lt;/h2&gt; 
&lt;p&gt;Nuxt is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events.&lt;/p&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/nuxtjs#contribute&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/platinum-sponsors.svg?avatarHeight=96&amp;amp;width=890&quot; alt=&quot;Open Collective Platinum Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/gold-sponsors.svg?avatarHeight=80&amp;amp;width=890&quot; alt=&quot;Open Collective Gold Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Silver Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/silver-sponsors.svg?avatarHeight=64&amp;amp;width=890&quot; alt=&quot;Open Collective Silver Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/bronze-sponsors.svg?avatarHeight=48&amp;amp;width=890&quot; alt=&quot;Open Collective Bronze Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to all our &lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;contributors&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Nuxt Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/nuxt/nuxt.js&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href=&quot;https://nuxtjs.org/guide/contribution-guide#codefund_ad&quot;&gt;Contribution Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cross-browser testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;http://browserstack.com&quot;&gt;BrowserStack&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://browserstack.com&quot;&gt;&lt;img height=&quot;70&quot; src=&quot;https://nuxtjs.org/browserstack.svg?sanitize=true&quot; alt=&quot;BrowserStack&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Automated testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt; for supporting Open Source &amp;lt;3&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://saucelabs.com&quot;&gt;&lt;img height=&quot;70&quot; src=&quot;https://nuxtjs.org/saucelabs.svg?sanitize=true&quot; alt=&quot;SauceLabs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability regarding Nuxt, please send an e-mail to the team via security@nuxtjs.org! All security vulnerabilities will be promptly addressed.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/raw/dev/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Open Collective Tiers --&gt;</description>
    </item>
    
    <item>
      <title>google/eleventy-high-performance-blog</title>
      <link>https://github.com/google/eleventy-high-performance-blog</link>
      <description>&lt;p&gt;A high performance blog template for the 11ty static site generator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eleventy-high-performance-blog&lt;/h1&gt; 
&lt;p&gt;A starter repository for building a blog with the &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy static site generator&lt;/a&gt; implementing a wide range of performance best practices.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.glitch.com/db98564e-04da-47bf-a3d6-70803c3d0fe7%2FScreen%20Shot%202020-09-04%20at%2012.07.27.png?v=1599214260591&quot; alt=&quot;Screenshot showing that the site achieves 100 points on Lighthouse by default&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Based on the awesome &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog&quot;&gt;eleventy-base-blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eleventy-high-performance-blog-sample.industrialempathy.com/&quot;&gt;Netlify Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.industrialempathy.com/&quot;&gt;Original site this template was based on&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;1. Generate a new repository from this repository template&lt;/h3&gt; 
&lt;p&gt;Click the &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog/generate&quot;&gt;“Use this template”&lt;/a&gt; button. Alternatively you can clone this repo yourself and push your copy to your favorite git repository.&lt;/p&gt; 
&lt;h3&gt;2. Clone your new repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/YOUR_REPO
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Navigate to the directory&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;cd my-blog-name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5. Build, serve, watch and test&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;6. Build and test&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customize&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for “Update me” across files in your editor to find all the site specific things you should update.&lt;/li&gt; 
 &lt;li&gt;Update the favicons in ‘img/favicon/’.&lt;/li&gt; 
 &lt;li&gt;Otherwise: Knock yourself out. This is a template repository.&lt;/li&gt; 
 &lt;li&gt;For a simple color override, adjust these CSS variables at the top of &lt;code&gt;css/main.css&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;:root {
  --primary: #e7bf60;
  --primary-dark: #f9c412;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Performance outcomes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Perfect score in applicable lighthouse audits (including accessibility).&lt;/li&gt; 
 &lt;li&gt;Single HTTP request to &lt;a href=&quot;https://web.dev/first-contentful-paint/&quot;&gt;First Contentful Paint&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Very optimized &lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint&lt;/a&gt; (score depends on image usage, but images are optimized).&lt;/li&gt; 
 &lt;li&gt;0 &lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;~0 &lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance optimizations&lt;/h3&gt; 
&lt;h4&gt;Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generates multiple sizes of each image and uses them in &lt;strong&gt;&lt;code&gt;srcset&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Generates a &lt;strong&gt;blurry placeholder&lt;/strong&gt; for each image (without adding an HTML element or using JS).&lt;/li&gt; 
 &lt;li&gt;Transcodes images to &lt;a href=&quot;https://en.wikipedia.org/wiki/AV1#AV1_Image_File_Format_(AVIF)&quot;&gt;AVIF&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/speed/webp&quot;&gt;webp&lt;/a&gt; and generates &lt;code&gt;picture&lt;/code&gt; element.&lt;/li&gt; 
 &lt;li&gt;Transcodes GIFs to muted looping autoplaying MP4 videos for greatly reduced file size.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lazy loads&lt;/strong&gt; images (using &lt;a href=&quot;https://web.dev/native-lazy-loading/&quot;&gt;native &lt;code&gt;loading=lazy&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Async decodes&lt;/strong&gt; images (using &lt;code&gt;decoding=async&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lazy layout&lt;/strong&gt; of images and placeholders using &lt;a href=&quot;https://web.dev/content-visibility/#skipping-rendering-work-with-content-visibility&quot;&gt;&lt;code&gt;content-visibility: auto&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoids CLS impact&lt;/strong&gt; of images by inferring and providing width and height (Supported in Chrome, Firefox and Safari 14+).&lt;/li&gt; 
 &lt;li&gt;Downloads remote images and stores/serves them locally.&lt;/li&gt; 
 &lt;li&gt;Immutable URLs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;CSS&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Defaults to the compact “classless” &lt;a href=&quot;https://kimeiga.github.io/bahunya/&quot;&gt;Bahunya CSS framework&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Inlines CSS.&lt;/li&gt; 
 &lt;li&gt;Dead-code-eliminates / tree-shakes / purges (pick your favorite word) unused CSS on a per-page basis with &lt;a href=&quot;https://purgecss.com/&quot;&gt;PurgeCSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Minified CSS with &lt;a href=&quot;https://www.npmjs.com/package/csso&quot;&gt;csso&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Miscellaneous&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Immutable URLs for JS.&lt;/li&gt; 
 &lt;li&gt;Sets immutable caching headers for images, fonts, and JS (CSS is inlined). Currently implements for Netlify &lt;code&gt;_headers&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;Minifies HTML and optimizes it for compression. Uses &lt;a href=&quot;https://www.npmjs.com/package/html-minifier&quot;&gt;html-minifier&lt;/a&gt; with aggressive options.&lt;/li&gt; 
 &lt;li&gt;Uses &lt;a href=&quot;https://rollupjs.org/&quot;&gt;rollup&lt;/a&gt; to bundle JS and minifies it with &lt;a href=&quot;https://terser.org/&quot;&gt;terser&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Prefetches same-origin navigations when a navigation is likely.&lt;/li&gt; 
 &lt;li&gt;If an AMP files is present, &lt;a href=&quot;https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/optimize_amp/&quot;&gt;optimizes it&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Fonts&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Serves fonts from same origin.&lt;/li&gt; 
 &lt;li&gt;Makes fonts &lt;code&gt;display:optional&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Analytics&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports locally serving Google Analytics’s JS and proxying it’s hit requests to a Netlify proxy (other proxies could be easily added).&lt;/li&gt; 
 &lt;li&gt;Supports sending &lt;a href=&quot;https://web.dev/vitals/&quot;&gt;Core Web Vitals&lt;/a&gt; metrics to Google Analytics as &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#send-the-results-to-google-analytics&quot;&gt;events&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Support for noscript hit requests.&lt;/li&gt; 
 &lt;li&gt;Avoids blocking onload on analytics requests.&lt;/li&gt; 
 &lt;li&gt;To turn this on, specify &lt;code&gt;googleAnalyticsId&lt;/code&gt; in &lt;code&gt;metadata.json&lt;/code&gt;. (Note, that this is not compatible with the not-yet-commonly used version 4 of Google Analytics.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;DX features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uses 🚨 as favicon during local development.&lt;/li&gt; 
 &lt;li&gt;Supports a range of default tests.&lt;/li&gt; 
 &lt;li&gt;Runs build and tests on &lt;code&gt;git push&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Sourcemap generated for JS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SEO &amp;amp; Social&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share button preferring &lt;code&gt;navigator.share()&lt;/code&gt; and falling back to Twitter. Using OS-like share-icon.&lt;/li&gt; 
 &lt;li&gt;Support for OGP metadata.&lt;/li&gt; 
 &lt;li&gt;Support for Twitter metadata.&lt;/li&gt; 
 &lt;li&gt;Support for schema.org JSON-LD.&lt;/li&gt; 
 &lt;li&gt;Sitemap.xml generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Largely useless glitter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read time estimate.&lt;/li&gt; 
 &lt;li&gt;Animated scroll progress bar…&lt;/li&gt; 
 &lt;li&gt;…with an optimized implementation that should never cause a layout.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;p&gt;Generates a strong CSP for the base template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default-src is self.&lt;/li&gt; 
 &lt;li&gt;Disallows plugins.&lt;/li&gt; 
 &lt;li&gt;Generates hash based CSP for the JS used on the site.&lt;/li&gt; 
 &lt;li&gt;To extend the CSP with new rules, see &lt;a href=&quot;https://github.com/google/eleventy-high-performance-blog/raw/main/_data/csp.js#L22&quot;&gt;CSP.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build performance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Downloaded remote images, and generated sizes are cached in the local filesystem…&lt;/li&gt; 
 &lt;li&gt;…and SHOULD be committed to git.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.persistimages.sh&lt;/code&gt; helps with this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This is not an officially supported Google product, but rather &lt;a href=&quot;https://twitter.com/cramforce&quot;&gt;Malte’s&lt;/a&gt; private best-effort open-source project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>elsewhencode/project-guidelines</title>
      <link>https://github.com/elsewhencode/project-guidelines</link>
      <description>&lt;p&gt;A set of best practices for JavaScript projects&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README-zh.md&quot;&gt;中文版&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README-ja.md&quot;&gt;日本語版&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README-ko.md&quot;&gt;한국어&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README-ru.md&quot;&gt;Русский&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README-pt-BR.md&quot;&gt;Português&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.elsewhen.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/elsewhen-logo.png&quot; width=&quot;180&quot; height=&quot;180&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Project Guidelines · &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;While developing a new project is like rolling on a green field for you, maintaining it is a potential dark twisted nightmare for someone else. Here’s a list of guidelines we’ve found, written and gathered that (we think) works really well with most JavaScript projects here at &lt;a href=&quot;https://www.elsewhen.com&quot;&gt;elsewhen&lt;/a&gt;. If you want to share a best practice, or think one of these guidelines should be removed, &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;feel free to share it with us&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#git&quot;&gt;Git&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#some-git-rules&quot;&gt;Some Git rules&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#git-workflow&quot;&gt;Git workflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#writing-good-commit-messages&quot;&gt;Writing good commit messages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#environments&quot;&gt;Environments&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#consistent-dev-environments&quot;&gt;Consistent dev environments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#consistent-dependencies&quot;&gt;Consistent dependencies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#dependencies&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#structure-and-naming&quot;&gt;Structure and Naming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#code-style&quot;&gt;Code style&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#code-style-check&quot;&gt;Some code style guidelines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#enforcing-code-style-standards&quot;&gt;Enforcing code style standards&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#api&quot;&gt;API&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#api-design&quot;&gt;API design&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#api-security&quot;&gt;API security&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#api-documentation&quot;&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;git&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Git&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/branching.png&quot; alt=&quot;Git&quot;&gt; &lt;a name=&quot;some-git-rules&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;1.1 Some Git rules&lt;/h3&gt; 
&lt;p&gt;There are a set of rules to keep in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Perform work in a feature branch.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because this way all work is done in isolation on a dedicated branch rather than the main branch. It allows you to submit multiple pull requests without confusion. You can iterate without polluting the master branch with potentially unstable, unfinished code. &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows#feature-branch-workflow&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Branch out from &lt;code&gt;develop&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This way, you can make sure that code in master will almost always build without problems, and can be mostly used directly for releases (this might be overkill for some projects).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Never push into &lt;code&gt;develop&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt; branch. Make a Pull Request.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It notifies team members that they have completed a feature. It also enables easy peer-review of the code and dedicates forum for discussing the proposed feature.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update your local &lt;code&gt;develop&lt;/code&gt; branch and do an interactive rebase before pushing your feature and making a Pull Request.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Rebasing will merge in the requested branch (&lt;code&gt;master&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt;) and apply the commits that you have made locally to the top of the history without creating a merge commit (assuming there were no conflicts). Resulting in a nice and clean history. &lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&quot;&gt;read more …&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Resolve potential conflicts while rebasing and before making a Pull Request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Delete local and remote feature branches after merging.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It will clutter up your list of branches with dead branches. It ensures you only ever merge the branch back into (&lt;code&gt;master&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt;) once. Feature branches should only exist while the work is still in progress.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Before making a Pull Request, make sure your feature branch builds successfully and passes all tests (including code style checks).&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You are about to add your code to a stable branch. If your feature-branch tests fail, there is a high chance that your destination branch build will fail too. Additionally, you need to apply code style check before making a Pull Request. It aids readability and reduces the chance of formatting fixes being mingled in with actual changes.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/.gitignore&quot;&gt;this&lt;/a&gt; &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It already has a list of system files that should not be sent with your code into a remote repository. In addition, it excludes setting folders and files for most used editors, as well as most common dependency folders.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Protect your &lt;code&gt;develop&lt;/code&gt; and &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It protects your production-ready branches from receiving unexpected and irreversible changes. read more… &lt;a href=&quot;https://help.github.com/articles/about-protected-branches/&quot;&gt;Github&lt;/a&gt;, &lt;a href=&quot;https://confluence.atlassian.com/bitbucketserver/using-branch-permissions-776639807.html&quot;&gt;Bitbucket&lt;/a&gt; and &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/protected_branches.html&quot;&gt;GitLab&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;git-workflow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;1.2 Git workflow&lt;/h3&gt; 
&lt;p&gt;Because of most of the reasons above, we use &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows#feature-branch-workflow&quot;&gt;Feature-branch-workflow&lt;/a&gt; with &lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing#the-golden-rule-of-rebasing&quot;&gt;Interactive Rebasing&lt;/a&gt; and some elements of &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows#gitflow-workflow&quot;&gt;Gitflow&lt;/a&gt; (naming and having a develop branch). The main steps are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;For a new project, initialize a git repository in the project directory. &lt;strong&gt;For subsequent features/changes this step should be ignored&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd &amp;lt;project directory&amp;gt;
git init
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Checkout a new feature/bug-fix branch.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git checkout -b &amp;lt;branchname&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make Changes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git add &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; ...
git commit
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;git add &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; ... &lt;/code&gt; - you should add only files that make up a small and coherent change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;git commit&lt;/code&gt; will start an editor which lets you separate the subject from the body.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Read more about it in &lt;em&gt;section 1.3&lt;/em&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;Tip:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You could use &lt;code&gt;git add -p&lt;/code&gt; instead, which will give you chance to review all of the introduced changes one by one, and decide whether to include them in the commit or not.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sync with remote to get changes you’ve missed.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git checkout develop
git pull
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This will give you a chance to deal with conflicts on your machine while rebasing (later) rather than creating a Pull Request that contains conflicts.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update your feature branch with latest changes from develop by interactive rebase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git checkout &amp;lt;branchname&amp;gt;
git rebase -i --autosquash develop
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You can use –autosquash to squash all your commits to a single commit. Nobody wants many commits for a single feature in develop branch. &lt;a href=&quot;https://robots.thoughtbot.com/autosquashing-git-commits&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you don’t have conflicts, skip this step. If you have conflicts, &lt;a href=&quot;https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/&quot;&gt;resolve them&lt;/a&gt; and continue rebase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git add &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; ...
git rebase --continue
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Push your branch. Rebase will change history, so you’ll have to use &lt;code&gt;-f&lt;/code&gt; to force changes into the remote branch. If someone else is working on your branch, use the less destructive &lt;code&gt;--force-with-lease&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git push -f
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;When you do a rebase, you are changing the history on your feature branch. As a result, Git will reject normal &lt;code&gt;git push&lt;/code&gt;. Instead, you’ll need to use the -f or –force flag. &lt;a href=&quot;https://developer.atlassian.com/blog/2015/04/force-with-lease/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make a Pull Request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pull request will be accepted, merged and close by a reviewer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Remove your local feature branch if you’re done.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git branch -d &amp;lt;branchname&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;to remove all branches which are no longer on remote&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git fetch -p &amp;amp;&amp;amp; for branch in `git branch -vv --no-color | grep &#39;: gone]&#39; | awk &#39;{print $1}&#39;`; do git branch -D $branch; done
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;writing-good-commit-messages&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;1.3 Writing good commit messages&lt;/h3&gt; 
&lt;p&gt;Having a good guideline for creating commits and sticking to it makes working with Git and collaborating with others a lot easier. Here are some rules of thumb (&lt;a href=&quot;https://chris.beams.io/posts/git-commit/#seven-rules&quot;&gt;source&lt;/a&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Separate the subject from the body with a newline between the two.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Git is smart enough to distinguish the first line of your commit message as your summary. In fact, if you try git shortlog, instead of git log, you will see a long list of commit messages, consisting of the id of the commit, and the summary only.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Limit the subject line to 50 characters and Wrap the body at 72 characters.&lt;/p&gt; &lt;p&gt;&lt;em&gt;why&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Commits should be as fine-grained and focused as possible, it is not the place to be verbose. &lt;a href=&quot;https://medium.com/@preslavrachev/what-s-with-the-50-72-rule-8a906f61f09c&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Capitalize the subject line.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not end the subject line with a period.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Imperative_mood&quot;&gt;imperative mood&lt;/a&gt; in the subject line.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Rather than writing messages that say what a committer has done. It’s better to consider these messages as the instructions for what is going to be done after the commit is applied on the repository. &lt;a href=&quot;https://news.ycombinator.com/item?id=2079612&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use the body to explain &lt;strong&gt;what&lt;/strong&gt; and &lt;strong&gt;why&lt;/strong&gt; as opposed to &lt;strong&gt;how&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;documentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;2. Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/documentation.png&quot; alt=&quot;Documentation&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use this &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README.sample.md&quot;&gt;template&lt;/a&gt; for &lt;code&gt;README.md&lt;/code&gt;, Feel free to add uncovered sections.&lt;/li&gt; 
 &lt;li&gt;For projects with more than one repository, provide links to them in their respective &lt;code&gt;README.md&lt;/code&gt; files.&lt;/li&gt; 
 &lt;li&gt;Keep &lt;code&gt;README.md&lt;/code&gt; updated as a project evolves.&lt;/li&gt; 
 &lt;li&gt;Comment your code. Try to make it as clear as possible what you are intending with each major section.&lt;/li&gt; 
 &lt;li&gt;If there is an open discussion on github or stackoverflow about the code or approach you’re using, include the link in your comment.&lt;/li&gt; 
 &lt;li&gt;Don’t use comments as an excuse for a bad code. Keep your code clean.&lt;/li&gt; 
 &lt;li&gt;Don’t use clean code as an excuse to not comment at all.&lt;/li&gt; 
 &lt;li&gt;Keep comments relevant as your code evolves.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;environments&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;3. Environments&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/laptop.png&quot; alt=&quot;Environments&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Define separate &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt; environments if needed.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Different data, tokens, APIs, ports etc… might be needed in different environments. You may want an isolated &lt;code&gt;development&lt;/code&gt; mode that calls fake API which returns predictable data, making both automated and manual testing much easier. Or you may want to enable Google Analytics only on &lt;code&gt;production&lt;/code&gt; and so on. &lt;a href=&quot;https://stackoverflow.com/questions/8332333/node-js-setting-up-environment-specific-configs-to-be-used-with-everyauth&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Load your deployment specific configurations from environment variables and never add them to the codebase as constants, &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/config.sample.js&quot;&gt;look at this sample&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You have tokens, passwords and other valuable information in there. Your config should be correctly separated from the app internals as if the codebase could be made public at any moment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;How:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;code&gt;.env&lt;/code&gt; files to store your variables and add them to &lt;code&gt;.gitignore&lt;/code&gt; to be excluded. Instead, commit a &lt;code&gt;.env.example&lt;/code&gt; which serves as a guide for developers. For production, you should still set your environment variables in the standard way. &lt;a href=&quot;https://medium.com/@rafaelvidaurre/managing-environment-variables-in-node-js-2cb45a55195f&quot;&gt;read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It’s recommended to validate environment variables before your app starts. &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/configWithTest.sample.js&quot;&gt;Look at this sample&lt;/a&gt; using &lt;code&gt;joi&lt;/code&gt; to validate provided values.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It may save others from hours of troubleshooting.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;consistent-dev-environments&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 Consistent dev environments:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Set your node version in &lt;code&gt;engines&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It lets others know the version of node the project works on. &lt;a href=&quot;https://docs.npmjs.com/files/package.json#engines&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Additionally, use &lt;code&gt;nvm&lt;/code&gt; and create a &lt;code&gt;.nvmrc&lt;/code&gt; in your project root. Don’t forget to mention it in the documentation.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Any one who uses &lt;code&gt;nvm&lt;/code&gt; can simply use &lt;code&gt;nvm use&lt;/code&gt; to switch to the suitable node version. &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It’s a good idea to setup a &lt;code&gt;preinstall&lt;/code&gt; script that checks node and npm versions.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Some dependencies may fail when installed by newer versions of npm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use Docker image if you can.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It can give you a consistent environment across the entire workflow. Without much need to fiddle with dependencies or configs. &lt;a href=&quot;https://hackernoon.com/how-to-dockerize-a-node-js-application-4fbab45a0c19&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use local modules instead of using globally installed modules.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Lets you share your tooling with your colleague instead of expecting them to have it globally on their systems.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;consistent-dependencies&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.2 Consistent dependencies:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Make sure your team members get the exact same dependencies as you.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because you want the code to behave as expected and identical in any development machine &lt;a href=&quot;https://kostasbariotis.com/consistent-dependencies-across-teams/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;how:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;package-lock.json&lt;/code&gt; on &lt;code&gt;npm@5&lt;/code&gt; or higher&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;I don’t have npm@5:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Alternatively you can use &lt;code&gt;Yarn&lt;/code&gt; and make sure to mention it in &lt;code&gt;README.md&lt;/code&gt;. Your lock file and &lt;code&gt;package.json&lt;/code&gt; should have the same versions after each dependency update. &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;I don’t like the name &lt;code&gt;Yarn&lt;/code&gt;:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Too bad. For older versions of &lt;code&gt;npm&lt;/code&gt;, use &lt;code&gt;—save --save-exact&lt;/code&gt; when installing a new dependency and create &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; before publishing. &lt;a href=&quot;https://docs.npmjs.com/files/package-locks&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;dependencies&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;4. Dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/modules.png&quot; alt=&quot;Github&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Keep track of your currently available packages: e.g., &lt;code&gt;npm ls --depth=0&lt;/code&gt;. &lt;a href=&quot;https://docs.npmjs.com/cli/ls&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;See if any of your packages have become unused or irrelevant: &lt;code&gt;depcheck&lt;/code&gt;. &lt;a href=&quot;https://www.npmjs.com/package/depcheck&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You may include an unused library in your code and increase the production bundle size. Find unused dependencies and get rid of them.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Before using a dependency, check its download statistics to see if it is heavily used by the community: &lt;code&gt;npm-stat&lt;/code&gt;. &lt;a href=&quot;https://npm-stat.com/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;More usage mostly means more contributors, which usually means better maintenance, and all of these result in quickly discovered bugs and quickly developed fixes.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Before using a dependency, check to see if it has a good, mature version release frequency with a large number of maintainers: e.g., &lt;code&gt;npm view async&lt;/code&gt;. &lt;a href=&quot;https://docs.npmjs.com/cli/view&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Having loads of contributors won’t be as effective if maintainers don’t merge fixes and patches quickly enough.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If a less known dependency is needed, discuss it with the team before using it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always make sure your app works with the latest version of its dependencies without breaking: &lt;code&gt;npm outdated&lt;/code&gt;. &lt;a href=&quot;https://docs.npmjs.com/cli/outdated&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Dependency updates sometimes contain breaking changes. Always check their release notes when updates show up. Update your dependencies one by one, that makes troubleshooting easier if anything goes wrong. Use a cool tool such as &lt;a href=&quot;https://github.com/tjunnone/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check to see if the package has known security vulnerabilities with, e.g., &lt;a href=&quot;https://snyk.io/test?utm_source=risingstack_blog&quot;&gt;Snyk&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;5. Testing&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/testing.png&quot; alt=&quot;Testing&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Have a &lt;code&gt;test&lt;/code&gt; mode environment if needed.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;While sometimes end to end testing in &lt;code&gt;production&lt;/code&gt; mode might seem enough, there are some exceptions: One example is you may not want to enable analytical information on a ‘production’ mode and pollute someone’s dashboard with test data. The other example is that your API may have rate limits in &lt;code&gt;production&lt;/code&gt; and blocks your test calls after a certain amount of requests.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Place your test files next to the tested modules using &lt;code&gt;*.test.js&lt;/code&gt; or &lt;code&gt;*.spec.js&lt;/code&gt; naming convention, like &lt;code&gt;moduleName.spec.js&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You don’t want to dig through a folder structure to find a unit test. &lt;a href=&quot;https://hackernoon.com/structure-your-javascript-code-for-testability-9bc93d9c72dc&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Put your additional test files into a separate test folder to avoid confusion.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Some test files don’t particularly relate to any specific implementation file. You have to put it in a folder that is most likely to be found by other developers: &lt;code&gt;__test__&lt;/code&gt; folder. This name: &lt;code&gt;__test__&lt;/code&gt; is also standard now and gets picked up by most JavaScript testing frameworks.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write testable code, avoid side effects, extract side effects, write pure functions&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You want to test a business logic as separate units. You have to “minimize the impact of randomness and nondeterministic processes on the reliability of your code”. &lt;a href=&quot;https://medium.com/javascript-scene/tdd-the-rite-way-53c9b46f45e3&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;A pure function is a function that always returns the same output for the same input. Conversely, an impure function is one that may have side effects or depends on conditions from the outside to produce a value. That makes it less predictable. &lt;a href=&quot;https://hackernoon.com/structure-your-javascript-code-for-testability-9bc93d9c72dc&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use a static type checker&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Sometimes you may need a Static type checker. It brings a certain level of reliability to your code. &lt;a href=&quot;https://medium.freecodecamp.org/why-use-static-types-in-javascript-part-1-8382da1e0adb&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run tests locally before making any pull requests to &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You don’t want to be the one who caused production-ready branch build to fail. Run your tests after your &lt;code&gt;rebase&lt;/code&gt; and before pushing your feature-branch to a remote repository.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Document your tests including instructions in the relevant section of your &lt;code&gt;README.md&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It’s a handy note you leave behind for other developers or DevOps experts or QA or anyone who gets lucky enough to work on your code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;structure-and-naming&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6. Structure and Naming&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/folder-tree.png&quot; alt=&quot;Structure and Naming&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Organize your files around product features / pages / components, not roles. Also, place your test files next to their implementation.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Bad&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;.
├── controllers
|   ├── product.js
|   └── user.js
├── models
|   ├── product.js
|   └── user.js
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;.
├── product
|   ├── index.js
|   ├── product.js
|   └── product.test.js
├── user
|   ├── index.js
|   ├── user.js
|   └── user.test.js
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Instead of a long list of files, you will create small modules that encapsulate one responsibility including its test and so on. It gets much easier to navigate through and things can be found at a glance.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Put your additional test files to a separate test folder to avoid confusion.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It is a time saver for other developers or DevOps experts in your team.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use a &lt;code&gt;./config&lt;/code&gt; folder and don’t make different config files for different environments.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;When you break down a config file for different purposes (database, API and so on); putting them in a folder with a very recognizable name such as &lt;code&gt;config&lt;/code&gt; makes sense. Just remember not to make different config files for different environments. It doesn’t scale cleanly, as more deploys of the app are created, new environment names are necessary. Values to be used in config files should be provided by environment variables. &lt;a href=&quot;https://medium.com/@fedorHK/no-config-b3f1171eecd5&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Put your scripts in a &lt;code&gt;./scripts&lt;/code&gt; folder. This includes &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; scripts.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It’s very likely you may end up with more than one script, production build, development build, database feeders, database synchronization and so on.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Place your build output in a &lt;code&gt;./build&lt;/code&gt; folder. Add &lt;code&gt;build/&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Name it what you like, &lt;code&gt;dist&lt;/code&gt; is also cool. But make sure that keep it consistent with your team. What gets in there is most likely generated (bundled, compiled, transpiled) or moved there. What you can generate, your teammates should be able to generate too, so there is no point committing them into your remote repository. Unless you specifically want to.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;code-style&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;7. Code style&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/code-style.png&quot; alt=&quot;Code style&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;code-style-check&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;7.1 Some code style guidelines&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use stage-2 and higher JavaScript (modern) syntax for new projects. For old project stay consistent with existing syntax unless you intend to modernise the project.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This is all up to you. We use transpilers to use advantages of new syntax. stage-2 is more likely to eventually become part of the spec with only minor revisions.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Include code style check in your build process.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Breaking your build is one way of enforcing code style to your code. It prevents you from taking it less seriously. Do it for both client and server-side code. &lt;a href=&quot;https://www.robinwieruch.de/react-eslint-webpack-babel/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint - Pluggable JavaScript linter&lt;/a&gt; to enforce code style.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;We simply prefer &lt;code&gt;eslint&lt;/code&gt;, you don’t have to. It has more rules supported, the ability to configure the rules, and ability to add custom rules.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We use &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb JavaScript Style Guide&lt;/a&gt; for JavaScript, &lt;a href=&quot;https://www.gitbook.com/book/duk/airbnb-javascript-guidelines/details&quot;&gt;Read more&lt;/a&gt;. Use the javascript style guide required by the project or your team.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We use &lt;a href=&quot;https://github.com/gajus/eslint-plugin-flowtype&quot;&gt;Flow type style check rules for ESLint&lt;/a&gt; when using &lt;a href=&quot;https://flow.org/&quot;&gt;FlowType&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Flow introduces few syntaxes that also need to follow certain code style and be checked.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;.eslintignore&lt;/code&gt; to exclude files or folders from code style checks.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You don’t have to pollute your code with &lt;code&gt;eslint-disable&lt;/code&gt; comments whenever you need to exclude a couple of files from style checking.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Remove any of your &lt;code&gt;eslint&lt;/code&gt; disable comments before making a Pull Request.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It’s normal to disable style check while working on a code block to focus more on the logic. Just remember to remove those &lt;code&gt;eslint-disable&lt;/code&gt; comments and follow the rules.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Depending on the size of the task use &lt;code&gt;//TODO:&lt;/code&gt; comments or open a ticket.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;So then you can remind yourself and others about a small task (like refactoring a function or updating a comment). For larger tasks use &lt;code&gt;//TODO(#3456)&lt;/code&gt; which is enforced by a lint rule and the number is an open ticket.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always comment and keep them relevant as code changes. Remove commented blocks of code.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Your code should be as readable as possible, you should get rid of anything distracting. If you refactored a function, don’t just comment out the old one, remove it.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Avoid irrelevant or funny comments, logs or naming.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;While your build process may(should) get rid of them, sometimes your source code may get handed over to another company/client and they may not share the same banter.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make your names search-able with meaningful distinctions avoid shortened names. For functions use long, descriptive names. A function name should be a verb or a verb phrase, and it needs to communicate its intention.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It makes it more natural to read the source code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Organize your functions in a file according to the step-down rule. Higher level functions should be on top and lower levels below.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It makes it more natural to read the source code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;enforcing-code-style-standards&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;7.2 Enforcing code style standards&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use a &lt;a href=&quot;http://editorconfig.org/&quot;&gt;.editorconfig&lt;/a&gt; file which helps developers define and maintain consistent coding styles between different editors and IDEs on the project.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Have your editor notify you about code style errors. Use &lt;a href=&quot;https://github.com/prettier/eslint-plugin-prettier&quot;&gt;eslint-plugin-prettier&lt;/a&gt; and &lt;a href=&quot;https://github.com/prettier/eslint-config-prettier&quot;&gt;eslint-config-prettier&lt;/a&gt; with your existing ESLint configuration. &lt;a href=&quot;https://github.com/prettier/eslint-config-prettier#installation&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Consider using Git hooks.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Git hooks greatly increase a developer’s productivity. Make changes, commit and push to staging or production environments without the fear of breaking builds. &lt;a href=&quot;http://githooks.com/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use Prettier with a precommit hook.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;While &lt;code&gt;prettier&lt;/code&gt; itself can be very powerful, it’s not very productive to run it simply as an npm task alone each time to format code. This is where &lt;code&gt;lint-staged&lt;/code&gt; (and &lt;code&gt;husky&lt;/code&gt;) come into play. Read more on configuring &lt;code&gt;lint-staged&lt;/code&gt; &lt;a href=&quot;https://github.com/okonet/lint-staged#configuration&quot;&gt;here&lt;/a&gt; and on configuring &lt;code&gt;husky&lt;/code&gt; &lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;logging&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;8. Logging&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/logging.png&quot; alt=&quot;Logging&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Avoid client-side console logs in production&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Even though your build process can (should) get rid of them, make sure that your code style checker warns you about leftover console logs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Produce readable production logging. Ideally use logging libraries to be used in production mode (such as &lt;a href=&quot;https://github.com/winstonjs/winston&quot;&gt;winston&lt;/a&gt; or &lt;a href=&quot;https://github.com/trentm/node-bunyan&quot;&gt;node-bunyan&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It makes your troubleshooting less unpleasant with colorization, timestamps, log to a file in addition to the console or even logging to a file that rotates daily. &lt;a href=&quot;https://blog.risingstack.com/node-js-logging-tutorial/&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;api&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;9. API&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;api-design&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/api.png&quot; alt=&quot;API&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;9.1 API design&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Because we try to enforce development of sanely constructed RESTful interfaces, which team members and clients can consume simply and consistently.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Lack of consistency and simplicity can massively increase integration and maintenance costs. Which is why &lt;code&gt;API design&lt;/code&gt; is included in this document.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;We mostly follow resource-oriented design. It has three main factors: resources, collection, and URLs.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A resource has data, gets nested, and there are methods that operate against it.&lt;/li&gt; 
   &lt;li&gt;A group of resources is called a collection.&lt;/li&gt; 
   &lt;li&gt;URL identifies the online location of resource or collection.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This is a very well-known design to developers (your main API consumers). Apart from readability and ease of use, it allows us to write generic libraries and connectors without even knowing what the API is about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;use kebab-case for URLs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;use camelCase for parameters in the query string or resource fields.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;use plural kebab-case for resource names in URLs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always use a plural nouns for naming a url pointing to a collection: &lt;code&gt;/users&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Basically, it reads better and keeps URLs consistent. &lt;a href=&quot;https://apigee.com/about/blog/technology/restful-api-design-plural-nouns-and-concrete-names&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the source code convert plurals to variables and properties with a List suffix.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why&lt;/em&gt;:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Plural is nice in the URL but in the source code, it’s just too subtle and error-prone.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always use a singular concept that starts with a collection and ends to an identifier:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;/students/245743
/airports/kjfk
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Avoid URLs like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;GET /blogs/:blogId/posts/:postId/summary
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This is not pointing to a resource but to a property instead. You can pass the property as a parameter to trim your response.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Keep verbs out of your resource URLs.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because if you use a verb for each resource operation you soon will have a huge list of URLs and no consistent pattern which makes it difficult for developers to learn. Plus we use verbs for something else.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use verbs for non-resources. In this case, your API doesn’t return any resources. Instead, you execute an operation and return the result. These &lt;strong&gt;are not&lt;/strong&gt; CRUD (create, retrieve, update, and delete) operations:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;/translate?text=Hallo
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because for CRUD we use HTTP methods on &lt;code&gt;resource&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; URLs. The verbs we were talking about are actually &lt;code&gt;Controllers&lt;/code&gt;. You usually don’t develop many of these. &lt;a href=&quot;https://github.com/byrondover/api-guidelines/raw/master/Guidelines.md#controller&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The request body or response type is JSON then please follow &lt;code&gt;camelCase&lt;/code&gt; for &lt;code&gt;JSON&lt;/code&gt; property names to maintain the consistency.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This is a JavaScript project guideline, where the programming language for generating and parsing JSON is assumed to be JavaScript.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Even though a resource is a singular concept that is similar to an object instance or database record, you should not use your &lt;code&gt;table_name&lt;/code&gt; for a resource name and &lt;code&gt;column_name&lt;/code&gt; resource property.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because your intention is to expose Resources, not your database schema details.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Again, only use nouns in your URL when naming your resources and don’t try to explain their functionality.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Only use nouns in your resource URLs, avoid endpoints like &lt;code&gt;/addNewUser&lt;/code&gt; or &lt;code&gt;/updateUser&lt;/code&gt; . Also avoid sending resource operations as a parameter.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Explain the CRUD functionalities using HTTP methods:&lt;/p&gt; &lt;p&gt;&lt;em&gt;How:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;GET&lt;/code&gt;: To retrieve a representation of a resource.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;POST&lt;/code&gt;: To create new resources and sub-resources.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;PUT&lt;/code&gt;: To update existing resources.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;PATCH&lt;/code&gt;: To update existing resources. It only updates the fields that were supplied, leaving the others alone.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt;: To delete existing resources.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For nested resources, use the relation between them in the URL. For instance, using &lt;code&gt;id&lt;/code&gt; to relate an employee to a company.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This is a natural way to make resources explorable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;How:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;GET /schools/2/students &lt;/code&gt; , should get the list of all students from school 2.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;GET /schools/2/students/31&lt;/code&gt; , should get the details of student 31, which belongs to school 2.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;DELETE /schools/2/students/31&lt;/code&gt; , should delete student 31, which belongs to school 2.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;PUT /schools/2/students/31&lt;/code&gt; , should update info of student 31, Use PUT on resource-URL only, not collection.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;POST /schools&lt;/code&gt; , should create a new school and return the details of the new school created. Use POST on collection-URLs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use a simple ordinal number for a version with a &lt;code&gt;v&lt;/code&gt; prefix (v1, v2). Move it all the way to the left in the URL so that it has the highest scope:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;http://api.domain.com/v1/schools/3/students	
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;When your APIs are public for other third parties, upgrading the APIs with some breaking change would also lead to breaking the existing products or services using your APIs. Using versions in your URL can prevent that from happening. &lt;a href=&quot;https://apigee.com/about/blog/technology/restful-api-design-tips-versioning&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response messages must be self-descriptive. A good error message response might look something like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;code&quot;: 1234,
    &quot;message&quot; : &quot;Something bad happened&quot;,
    &quot;description&quot; : &quot;More details&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or for validation errors:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;code&quot; : 2314,
    &quot;message&quot; : &quot;Validation Failed&quot;,
    &quot;errors&quot; : [
        {
            &quot;code&quot; : 1233,
            &quot;field&quot; : &quot;email&quot;,
            &quot;message&quot; : &quot;Invalid email&quot;
        },
        {
            &quot;code&quot; : 1234,
            &quot;field&quot; : &quot;password&quot;,
            &quot;message&quot; : &quot;No password provided&quot;
        }
      ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;developers depend on well-designed errors at the critical times when they are troubleshooting and resolving issues after the applications they’ve built using your APIs are in the hands of their users.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;Note: Keep security exception messages as generic as possible. For instance, Instead of saying ‘incorrect password’, you can reply back saying ‘invalid username or password’ so that we don’t unknowingly inform user that username was indeed correct and only the password was incorrect.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use these status codes to send with your response to describe whether &lt;strong&gt;everything worked&lt;/strong&gt;, The &lt;strong&gt;client app did something wrong&lt;/strong&gt; or The &lt;strong&gt;API did something wrong&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Which ones:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;200 OK&lt;/code&gt; response represents success for &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; requests.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;201 Created&lt;/code&gt; for when a new instance is created. Creating a new instance, using &lt;code&gt;POST&lt;/code&gt; method returns &lt;code&gt;201&lt;/code&gt; status code.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;204 No Content&lt;/code&gt; response represents success but there is no content to be sent in the response. Use it when &lt;code&gt;DELETE&lt;/code&gt; operation succeeds.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;304 Not Modified&lt;/code&gt; response is to minimize information transfer when the recipient already has cached representations.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;400 Bad Request&lt;/code&gt; for when the request was not processed, as the server could not understand what the client is asking for.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;401 Unauthorized&lt;/code&gt; for when the request lacks valid credentials and it should re-request with the required credentials.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;403 Forbidden&lt;/code&gt; means the server understood the request but refuses to authorize it.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;404 Not Found&lt;/code&gt; indicates that the requested resource was not found.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;500 Internal Server Error&lt;/code&gt; indicates that the request is valid, but the server could not fulfill it due to some unexpected condition.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Most API providers use a small subset HTTP status codes. For example, the Google GData API uses only 10 status codes, Netflix uses 9, and Digg, only 8. Of course, these responses contain a body with additional information. There are over 70 HTTP status codes. However, most developers don’t have all 70 memorized. So if you choose status codes that are not very common you will force application developers away from building their apps and over to wikipedia to figure out what you’re trying to tell them. &lt;a href=&quot;https://apigee.com/about/blog/technology/restful-api-design-what-about-errors&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Provide total numbers of resources in your response.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Accept &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; parameters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The amount of data the resource exposes should also be taken into account. The API consumer doesn’t always need the full representation of a resource. Use a fields query parameter that takes a comma separated list of fields to include:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;GET /students?fields=id,name,age,class
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pagination, filtering, and sorting don’t need to be supported from start for all resources. Document those resources that offer filtering and sorting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;api-security&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;9.2 API security&lt;/h3&gt; 
&lt;p&gt;These are some basic security best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Don’t use basic authentication unless over a secure connection (HTTPS). Authentication tokens must not be transmitted in the URL: &lt;code&gt;GET /users/123?token=asdf....&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Because Token, or user ID and password are passed over the network as clear text (it is base64 encoded, but base64 is a reversible encoding), the basic authentication scheme is not secure. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Tokens must be transmitted using the Authorization header on every request: &lt;code&gt;Authorization: Bearer xxxxxx, Extra yyyyy&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Authorization Code should be short-lived.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Reject any non-TLS requests by not responding to any HTTP request to avoid any insecure data exchange. Respond to HTTP requests by &lt;code&gt;403 Forbidden&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Consider using Rate Limiting.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;To protect your APIs from bot threats that call your API thousands of times per hour. You should consider implementing rate limit early on.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Setting HTTP headers appropriately can help to lock down and secure your web application. &lt;a href=&quot;https://github.com/helmetjs/helmet&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Your API should convert the received data to their canonical form or reject them. Return 400 Bad Request with details about any errors from bad or missing data.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;All the data exchanged with the REST API must be validated by the API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Serialize your JSON.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;A key concern with JSON encoders is preventing arbitrary JavaScript remote code execution within the browser… or, if you’re using node.js, on the server. It’s vital that you use a proper JSON serializer to encode user-supplied data properly to prevent the execution of user-supplied input on the browser.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Validate the content-type and mostly use &lt;code&gt;application/*json&lt;/code&gt; (Content-Type header).&lt;/p&gt; &lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;For instance, accepting the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; mime type allows the attacker to create a form and trigger a simple POST request. The server should never assume the Content-Type. A lack of Content-Type header or an unexpected Content-Type header should result in the server rejecting the content with a &lt;code&gt;4XX&lt;/code&gt; response.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check the API Security Checklist Project. &lt;a href=&quot;https://github.com/shieldfy/API-Security-Checklist&quot;&gt;read more…&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;api-documentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;9.3 API documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fill the &lt;code&gt;API Reference&lt;/code&gt; section in &lt;a href=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/README.sample.md&quot;&gt;README.md template&lt;/a&gt; for API.&lt;/li&gt; 
 &lt;li&gt;Describe API authentication methods with a code sample.&lt;/li&gt; 
 &lt;li&gt;Explaining The URL Structure (path only, no root URL) including The request type (Method).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For each endpoint explain:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;URL Params If URL Params exist, specify them in accordance with name mentioned in URL section:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Required: id=[integer]
Optional: photo_id=[alphanumeric]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the request type is POST, provide working examples. URL Params rules apply here too. Separate the section into Optional and Required.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Success Response, What should be the status code and is there any return data? This is useful when people need to know what their callbacks should expect:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Code: 200
Content: { id : 12 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Error Response, Most endpoints have many ways to fail. From unauthorized access to wrongful parameters etc. All of those should be listed here. It might seem repetitive, but it helps prevent assumptions from being made. For example&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;code&quot;: 401,
    &quot;message&quot; : &quot;Authentication failed&quot;,
    &quot;description&quot; : &quot;Invalid username or password&quot;
}   
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use API design tools, There are lots of open source tools for good documentation such as &lt;a href=&quot;https://apiblueprint.org/&quot;&gt;API Blueprint&lt;/a&gt; and &lt;a href=&quot;https://swagger.io/&quot;&gt;Swagger&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;licensing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;10. Licensing&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/elsewhencode/project-guidelines/master/images/licensing.png&quot; alt=&quot;Licensing&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Make sure you use resources that you have the rights to use. If you use libraries, remember to look for MIT, Apache or BSD but if you modify them, then take a look at the license details. Copyrighted images and videos may cause legal problems.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Sources: &lt;a href=&quot;https://blog.risingstack.com/&quot;&gt;RisingStack Engineering&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;Mozilla Developer Network&lt;/a&gt;, &lt;a href=&quot;https://devcenter.heroku.com&quot;&gt;Heroku Dev Center&lt;/a&gt;, &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb/javascript&lt;/a&gt;, &lt;a href=&quot;https://www.atlassian.com/git/tutorials&quot;&gt;Atlassian Git tutorials&lt;/a&gt;, &lt;a href=&quot;https://apigee.com/about/blog&quot;&gt;Apigee&lt;/a&gt;, &lt;a href=&quot;https://blog.wishtack.com&quot;&gt;Wishtack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Icons by &lt;a href=&quot;https://icons8.com/&quot;&gt;icons8&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMAI-GmbH/AI-Expert-Roadmap</title>
      <link>https://github.com/AMAI-GmbH/AI-Expert-Roadmap</link>
      <description>&lt;p&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt; &lt;img src=&quot;https://uploads-ssl.webflow.com/58e6a2b25c28230d367487ad/5c32232ecb585fcc5c4645e1_icon_machine-learning.svg?sanitize=true&quot; alt=&quot;Developer Roadmap&quot; width=&quot;96&quot; height=&quot;96&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;i.am.ai&lt;br&gt;AI Expert Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/home?status=https://i.am.ai/roadmap Roadmap to becoming an Artificial Intelligence Expert in 2021&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tweet-blue.svg?logo=twitter&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://i.am.ai/roadmap&amp;amp;title=&amp;amp;summary=Roadmap to becoming an Artificial Intelligence Expert in 2021&amp;amp;source=&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/post-blue.svg?logo=linkedin&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Roadmap-2021-yellowgreen.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Badge&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://img.shields.io/badge/Author-AMAI GmbH-blue.svg&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a data scientist, machine learning or an ai expert. We made these charts for our new employees to make them AI Experts but we wanted to share them here to help the community.&lt;/p&gt; 
&lt;p&gt;If you are interested to become an AI EXPERT at &lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Become+Expert&quot;&gt;AMAI&lt;/a&gt; in Germany, or you want to &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Hire+Expert&quot;&gt;hire an AI Expert&lt;/a&gt;, please say &lt;a href=&quot;mailto:hi@am.ai&quot;&gt;hi@am.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;p&gt;👉 An &lt;strong&gt;interactive version with links to follow&lt;/strong&gt; about each bullet of the list can be found at &lt;a href=&quot;https://i.am.ai/roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Interactive&quot;&gt;i.am.ai/roadmap&lt;/a&gt; 👈&lt;/p&gt; 
&lt;p&gt;To receive updates &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/stargazers&quot;&gt;star :star:&lt;/a&gt; and watch :eyes: the &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/&quot;&gt;GitHub Repo&lt;/a&gt; to get notified, when we add new content to stay on the top of the most recent research.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#introduction?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Introduction&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/intro.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Fundamentals&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#fundamentals?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Fundamentals&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/fundamentals.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Science Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-science-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataScience&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/datascience.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Machine Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#machine-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+MachineLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/machine_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Deep Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#deep-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DeepLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/deep_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Big Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#big-data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+BigDataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/big_data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🚦 Wrap Up&lt;/h2&gt; 
&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, we will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt; 
&lt;h2&gt;🙌 Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/contributing.md&quot;&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open pull request with improvements&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
 &lt;li&gt;Reach out with any feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported By&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+SupportedBy&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/amai.svg?sanitize=true&quot; style=&quot;display: inherit;max-width: 150px;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://digitalhub-ai.de?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/de-hub.svg?sanitize=true&quot; style=&quot;display: inherit; max-width: 150px;&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
