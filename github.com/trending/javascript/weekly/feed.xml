<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Mon, 30 Aug 2021 02:14:04 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>shufflewzc/faker2</title>
      <link>https://github.com/shufflewzc/faker2</link>
      <description>&lt;p&gt;不知名大佬备份&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;重要通知&lt;/h2&gt; 
&lt;h3&gt;薄雷收淡雨，雌蜺映雄虹。云拥奇峰出，霞飞散绮红。&lt;/h3&gt; 
&lt;p&gt;Faker维护仓库，收集全网目前能正常使用的脚本。&lt;/p&gt; 
&lt;p&gt;每日更新。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=shufflewzc&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【Faker集合仓库】 ql repo &lt;a href=&quot;https://ghproxy.com/https://github.com/shufflewzc/faker2.git&quot;&gt;https://ghproxy.com/https://github.com/shufflewzc/faker2.git&lt;/a&gt; &quot;jd_|jx_|gua_|jddj_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate&quot;&lt;/p&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/faker/main/qx.json&quot;&gt;https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/faker/main/qx.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【QX系列教程】 &lt;a href=&quot;https://www.notion.so/Quantumult-X-cd78c6ab616e4ebf947519b2dd690a0c&quot;&gt;https://www.notion.so/Quantumult-X-cd78c6ab616e4ebf947519b2dd690a0c&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【青龙系列教程】 &lt;a href=&quot;https://www.notion.so/Cent-OS-7-6-1c598629675145988b43a37998a1604a&quot;&gt;https://www.notion.so/Cent-OS-7-6-1c598629675145988b43a37998a1604a&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;防走丢:&lt;a href=&quot;https://t.me/jdscrip&quot;&gt;https://t.me/jdscrip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;维护收集不易，各位看官高兴可打赏下~&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/15306294/125604796-955a078a-0e28-4900-9a1c-6fabdc8feb7d.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Special statement:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Any unlocking and decryption analysis scripts involved in the Script project released by this warehouse are only used for testing, learning and research, and are forbidden to be used for commercial purposes. Their legality, accuracy, completeness and effectiveness cannot be guaranteed. Please make your own judgment based on the situation. .&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;All resource files in this project are forbidden to be reproduced or published in any form by any official account or self-media.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;This warehouse is not responsible for any script problems, including but not limited to any loss or damage caused by any script errors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Any user who indirectly uses the script, including but not limited to establishing a VPS or disseminating it when certain actions violate national/regional laws or related regulations, this warehouse is not responsible for any privacy leakage or other consequences caused by this.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not use any content of the Script project for commercial or illegal purposes, otherwise you will be responsible for the consequences.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If any unit or individual believes that the script of the project may be suspected of infringing on their rights, they should promptly notify and provide proof of identity and ownership. We will delete the relevant script after receiving the certification document.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Anyone who views this item in any way or directly or indirectly uses any script of the Script item should read this statement carefully. This warehouse reserves the right to change or supplement this disclaimer at any time. Once you have used and copied any relevant scripts or rules of the Script project, you are deemed to have accepted this disclaimer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;You must completely delete the above content from your computer or mobile phone within 24 hours after downloading.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;You have used or copied any script made by yourself in this warehouse, it is deemed to have accepted this statement, please read it carefully&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Special thanks to:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://t.me/update_help_group&quot;&gt;@Andy Woo&lt;/a&gt;「青龙2.8互助研究院支持」&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Oreomeow&quot;&gt;@Oreo&lt;/a&gt; 「青龙2.8一键配置」&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;欢迎Pull Request！&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>chrisleekr/binance-trading-bot</title>
      <link>https://github.com/chrisleekr/binance-trading-bot</link>
      <description>&lt;p&gt;Automated Binance trading bot - Buy low/Sell high with stop loss limit/Trade multiple cryptocurrencies with Grid Trading&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binance Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/actions?query=workflow%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/chrisleekr/binance-trading-bot/workflows/main/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;CodeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chrisleekr/binance-trading-bot&quot; alt=&quot;Docker pull&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/chrisleekr/binance-trading-bot&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Automated Binance trading bot with trailing buy/sell strategy&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.ko.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%ED%95%9C%EA%B5%AD%EC%96%B4-brightgreen.svg?sanitize=true&quot; alt=&quot;ko&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.zh-cn.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&quot; alt=&quot;中文&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a test project. I am just testing my code.&lt;/p&gt; 
&lt;h2&gt;Warnings&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;I cannot guarantee whether you can make money or not.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk! I have no responsibility for any loss or hardship incurred directly or indirectly by using this code. Read &lt;a href=&quot;https://raw.githubusercontent.com/chrisleekr/binance-trading-bot/master/#disclaimer&quot;&gt;disclaimer&lt;/a&gt; before using this code.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before updating the bot, make sure to record the last buy price in the note. It may lose the configuration or last buy price records.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;h3&gt;Trailing Grid Trade Buy/Sell Bot&lt;/h3&gt; 
&lt;p&gt;This bot is using the concept of trailing buy/sell order which allows following the price fall/rise.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trailing Stop Orders About Trailing Stop Orders Concept you can find at &lt;a href=&quot;https://www.binance.com/en/support/faq/360042299292&quot;&gt;Binance Official document&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;TL;DR Place orders at a fixed value or percentage when the price changes. Using this feature you can buy at the lowest possible price when buying down and sell at the highest possible price when selling up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot supports multiple buy/sell orders based on the configuration.&lt;/li&gt; 
 &lt;li&gt;The bot can monitor multiple symbols. All symbols will be monitored per second.&lt;/li&gt; 
 &lt;li&gt;The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version is 3.2.20, which is provided by &lt;a href=&quot;https://hub.docker.com/r/apcheamitru/arm32v7-mongo&quot;&gt;apcheamitru&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The bot is tested/working with Linux and Raspberry Pi 4 32bit. Other platforms are not tested.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Buy Signal&lt;/h4&gt; 
&lt;p&gt;The bot will continuously monitor the coin based on the grid trade configuration.&lt;/p&gt; 
&lt;p&gt;For grid trade #1, the bot will place a STOP-LOSS-LIMIT order to buy when the current price reaches the lowest price. If the current price continuously falls, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;p&gt;After grid trade #1, the bot will monitor the COIN based on the last buy price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot will not place a buy order of the grid trade #1 if has enough coin (typically over $10 worth) to sell when reaches the trigger price for selling.&lt;/li&gt; 
 &lt;li&gt;The bot will remove the last buy price if the estimated value is less than the last buy price removal threshold.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Buy Scenario&lt;/h5&gt; 
&lt;p&gt;Let say, if the buy grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;USDT&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;1.051&lt;/td&gt; 
     &lt;td&gt;50&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2&lt;/td&gt; 
     &lt;td&gt;0.8&lt;/td&gt; 
     &lt;td&gt;1.03&lt;/td&gt; 
     &lt;td&gt;1.031&lt;/td&gt; 
     &lt;td&gt;100&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To make it easier to understand, I will use &lt;code&gt;$&lt;/code&gt; as a USDT symbol. For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;Your 1st grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No#: 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.05 (5.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.051 (5.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $105&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When the current price is falling to the lowest price ($100) and lower than ATH(All-Time High) restricted price if enabled, the bot will place new STOP-LOSS-LIMIT order for buying.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 1.05 = $105&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 1.051 = $105.1&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.47573&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $95 * 1.05 = $99.75&lt;/li&gt; 
 &lt;li&gt;Limit price: $95 * 1.051 = $99.845&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as &lt;code&gt;$99.845&lt;/code&gt;. The purchased quantity will be &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying.&lt;/p&gt; 
&lt;p&gt;Your 2nd grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid#: 2&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $99.845&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 0.8 (20%)&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.03 (3.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.031 (3.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And if the current price is continuously falling to &lt;code&gt;$79.876&lt;/code&gt; (20% lower), then the bot will place new STOP-LOSS-LIMIT order for the 2nd grid trading for the coin.&lt;/p&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $75&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $75 * 1.03 = $77.25&lt;/li&gt; 
 &lt;li&gt;Limit price: $75 * 1.031 = $77.325&lt;/li&gt; 
 &lt;li&gt;Quantity: 1.29&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $78&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Final last buy price: ($50 + $100)/(0.5 COIN + 1.29 COIN) = $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sell Signal&lt;/h3&gt; 
&lt;p&gt;If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the bot does not have a record for the last buy price, the bot will not sell the coin.&lt;/li&gt; 
 &lt;li&gt;If the coin is worth less than the last buy price removal threshold, then the bot will remove the last buy price.&lt;/li&gt; 
 &lt;li&gt;If the coin is not worth than the minimum notional value, then the bot will not place an order.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;Sell Quantity Percentage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1st&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;0.97&lt;/td&gt; 
     &lt;td&gt;0.969&lt;/td&gt; 
     &lt;td&gt;0.5&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2nd&lt;/td&gt; 
     &lt;td&gt;1.08&lt;/td&gt; 
     &lt;td&gt;0.95&lt;/td&gt; 
     &lt;td&gt;0.949&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as &lt;code&gt;1&lt;/code&gt; (100%).&lt;/p&gt; 
&lt;p&gt;From the last buy actions, you now have the following balances:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 1.79&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your 1st grid trading for selling is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No# 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1.05&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 0.97&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 0.969&lt;/li&gt; 
 &lt;li&gt;Sell amount percentage: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $88&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the current price is higher than the sell trigger price($87.99), then the bot will place new STOP-LOSS-LIMIT order for selling.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $88 * 0.97 = $85.36&lt;/li&gt; 
 &lt;li&gt;Limit price: $88 * 0.969 = $85.272&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $90 * 0.97 = $87.30&lt;/li&gt; 
 &lt;li&gt;Limit price: $90 * 0.969 = $87.21&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 0.895&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $91&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the current price($91) is higher than 2nd selling trigger price ($90.504), the bot will place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $91 * 0.95 = $86.45&lt;/li&gt; 
 &lt;li&gt;Limit price: $91 * 0.949 = $86.359&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 0.95 = $95&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 0.949 = $94.9&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $94&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd sell for the coin.&lt;/p&gt; 
&lt;p&gt;The final profit would be&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1st sell: $94.9 * 0.895 = $84.9355&lt;/li&gt; 
 &lt;li&gt;2nd sell: $87.21 * 0.895 = $78.05295&lt;/li&gt; 
 &lt;li&gt;Final profit: $162 (8% profit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Stop-Loss Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell Stop-Loss configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Max loss percentage: 0.90&lt;/li&gt; 
 &lt;li&gt;Temporary disable for buying (minutes): 60&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
 &lt;li&gt;Last buy price: $100&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will not place a Stop-Loss order because the Stop-Loss price ($90) is less than the current price ($95).&lt;/p&gt; 
&lt;p&gt;If the price is continuously falling, then the bot will keep monitoring until the price reaches the Stop-Loss price.&lt;/p&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The bot will place new MARKET order for selling because the current price ($90) is less or equal than the Stop-Loss price ($90). In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;The bot will also set the symbol to be temporarily disabled for 60 minutes to avoid buying/sell continuously. In the frontend, the action will display the pause icon and how long left to be enabled again. The symbol can be enabled by clicking the play icon.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Features&quot;&gt;Features&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manual trade&lt;/li&gt; 
 &lt;li&gt;Convert small balances to BNB&lt;/li&gt; 
 &lt;li&gt;Trade all symbols&lt;/li&gt; 
 &lt;li&gt;Monitoring multiple coins simultaneously&lt;/li&gt; 
 &lt;li&gt;Stop-Loss&lt;/li&gt; 
 &lt;li&gt;Restrict buying with ATH price&lt;/li&gt; 
 &lt;li&gt;Grid Trade for buy/sell&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend + WebSocket&lt;/h3&gt; 
&lt;p&gt;React.js based frontend communicating via Web Socket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List monitoring coins with buy/sell signals/open orders&lt;/li&gt; 
 &lt;li&gt;View account balances&lt;/li&gt; 
 &lt;li&gt;View open/closed trades&lt;/li&gt; 
 &lt;li&gt;Manage global/symbol settings&lt;/li&gt; 
 &lt;li&gt;Delete caches that are not monitored&lt;/li&gt; 
 &lt;li&gt;Link to public URL&lt;/li&gt; 
 &lt;li&gt;Support Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Secure frontend&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Parameters&lt;/h2&gt; 
&lt;p&gt;Use environment parameters to adjust parameters. Check &lt;code&gt;/config/custom-environment-variables.json&lt;/code&gt; to see list of available environment parameters.&lt;/p&gt; 
&lt;p&gt;Or use the frontend to adjust configurations after launching the application.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.dist&lt;/code&gt;.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Environment Key&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
     &lt;th&gt;Sample Value&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_ENABLED&lt;/td&gt; 
     &lt;td&gt;Slack enable/disable&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_WEBHOOK_URL&lt;/td&gt; 
     &lt;td&gt;Slack webhook URL&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://slack.com/intl/en-au/help/articles/115005265063-Incoming-webhooks-for-Slack&quot;&gt;Slack&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_CHANNEL&lt;/td&gt; 
     &lt;td&gt;Slack channel&lt;/td&gt; 
     &lt;td&gt;&quot;#binance&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_USERNAME&lt;/td&gt; 
     &lt;td&gt;Slack username&lt;/td&gt; 
     &lt;td&gt;Chris&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable &lt;a href=&quot;https://github.com/localtunnel/localtunnel&quot;&gt;local tunnel&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_SUBDOMAIN&lt;/td&gt; 
     &lt;td&gt;Local tunnel public URL subdomain&lt;/td&gt; 
     &lt;td&gt;binance&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable frontend authentication&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_PASSWORD&lt;/td&gt; 
     &lt;td&gt;Frontend password&lt;/td&gt; 
     &lt;td&gt;123456&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOG_LEVEL&lt;/td&gt; 
     &lt;td&gt;Logging level. &lt;a href=&quot;https://www.npmjs.com/package/bunyan#levels&quot;&gt;Possible values described on &lt;code&gt;bunyan&lt;/code&gt; docs.&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;ERROR&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;em&gt;A local tunnel makes the bot accessible from the outside. Please set the subdomain of the local tunnel as a subdomain that only you can remember.&lt;/em&gt; &lt;em&gt;You must change the authentication password; otherwise, it will be configured as the default password.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch/Update the bot with docker-compose&lt;/p&gt; &lt;p&gt;Pull latest code first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If want production/live mode, then use the latest build image from DockerHub:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose -f docker-compose.server.yml pull
docker-compose -f docker-compose.server.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or if want development/test mode, then run below commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When launching the application, it will notify public URL to the Slack.&lt;/li&gt; 
   &lt;li&gt;If you have any issue with the bot, you can check the log to find out what happened with the bot. Please take a look &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install via Stackfile&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://www.portainer.io/&quot;&gt;Portainer&lt;/a&gt; create new Stack&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy content of &lt;code&gt;docker-stack.yml&lt;/code&gt; or upload the file&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set environment keys for &lt;code&gt;binance-bot&lt;/code&gt; in the &lt;code&gt;docker-stack.yml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch and open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Password Protected&lt;/th&gt; 
   &lt;th&gt;Frontend Mobile&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127773484-51d01881-4933-454e-9052-9965b222e716.png&quot; alt=&quot;Password Protected&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367660-743f89fd-2eae-4113-8ce7-6249ba47926a.png&quot; alt=&quot;Frontend Mobile&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Manual Trade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318581-4e422ac9-b145-4e83-a90d-5c05c61d6e2f.png&quot; alt=&quot;Setting&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318630-f2180e1b-3feb-48fa-a083-4cb7f90f743f.png&quot; alt=&quot;Manual Trade&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Frontend Desktop&lt;/th&gt; 
   &lt;th&gt;Closed Trades&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367482-2d88144a-b5e3-49b1-ae11-f21e7251dab0.png&quot; alt=&quot;Frontend Desktop&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367521-019cf591-26f2-4d69-ac9e-9f631605aab2.png&quot; alt=&quot;Closed Trades&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sample Trade&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chart&lt;/th&gt; 
   &lt;th&gt;Buy Orders&lt;/th&gt; 
   &lt;th&gt;Sell Orders&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027391-192db300-8444-11eb-8df4-91c98d0c835b.png&quot; alt=&quot;Chart&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027403-36628180-8444-11eb-91dc-f3cdabc5a79e.png&quot; alt=&quot;Buy Orders&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027411-4b3f1500-8444-11eb-8525-37f02a63de25.png&quot; alt=&quot;Sell Orders&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Changes &amp;amp; Todo&lt;/h2&gt; 
&lt;p&gt;Please refer &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; to view the past changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve sell strategy with conditional stop price percentage based on the profit percentage - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/94&quot;&gt;#94&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add sudden drop buy strategy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/67&quot;&gt;#67&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add minimum required order amount - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/84&quot;&gt;#84&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Manage setting profiles (save/change/load?/export?) - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/151&quot;&gt;#151&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve notifications by supporting Apprise - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/106&quot;&gt;#106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support cool time after hitting the lowest price before buy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/105&quot;&gt;#105&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Reset global configuration to initial configuration - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/97&quot;&gt;#97&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support limit for active buy/sell orders - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/147&quot;&gt;#147&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Develop simple setup screen for secrets&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support multilingual frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/56&quot;&gt;#56&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Non linear stop price and chase function - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/246&quot;&gt;#246&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support STOP-LOSS configuration per grid trade for selling - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/261&quot;&gt;#261&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support triggering buy automatically to rescheduled if the price is over the ATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, feel free to make a small &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/DONATIONS.md&quot;&gt;donation&lt;/a&gt; to the developer.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d0x2f&quot;&gt;@d0x2f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And many others! Thanks guys!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all contributors &lt;span&gt;❤️&lt;/span&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;Click to see our heroes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I give no warranty and accepts no responsibility or liability for the accuracy or the completeness of the information and materials contained in this project. Under no circumstances will I be held responsible or liable in any way for any claims, damages, losses, expenses, costs or liabilities whatsoever (including, without limitation, any direct or indirect damages for loss of profits, business interruption or loss of information) resulting from or arising directly or indirectly from your use of or inability to use this code or any code linked to it, or from your reliance on the information and material on this code, even if I have been advised of the possibility of such damages in advance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Curated interview preparation materials for busy engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot;&gt;Follow us on Facebook&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href=&quot;https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=github&quot; target=&quot;_blank&quot;&gt;Find out more&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here&#39;s &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href=&quot;https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU&quot;&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;&quot;Front-end Job Interview Questions&quot; answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;💰 Looking for a job? Sign up for free with &lt;a href=&quot;https://triplebyte.com/a/PJaJNpO/tihg&quot;&gt;Triplebyte&lt;/a&gt; to efficiently interview with top tech companies! 💰&lt;/strong&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/zx</title>
      <link>https://github.com/google/zx</link>
      <description>&lt;p&gt;A tool for writing better scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐚 zx&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env zx

await $`cat package.json | grep name`

let branch = await $`git branch --show-current`
await $`dep deploy --branch=${branch}`

await Promise.all([
  $`sleep 1; echo 1`,
  $`sleep 2; echo 2`,
  $`sleep 3; echo 3`,
])

let name = &#39;foo bar&#39;
await $`mkdir /tmp/${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bash is great, but when it comes to writing scripts, people usually choose a more convenient programming language. JavaScript is a perfect choice, but standard Node.js library requires additional hassle before using. The &lt;code&gt;zx&lt;/code&gt; package provides useful wrappers around &lt;code&gt;child_process&lt;/code&gt;, escapes arguments and gives sensible defaults.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Requirement&lt;/h3&gt; 
&lt;p&gt;Node.js &amp;gt;= 14.8.0&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Write your scripts in a file with &lt;code&gt;.mjs&lt;/code&gt; extension in order to be able to use &lt;code&gt;await&lt;/code&gt; on top level. If you prefer the &lt;code&gt;.js&lt;/code&gt; extension, wrap your scripts in something like &lt;code&gt;void async function () {...}()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Add the following shebang to the beginning of your &lt;code&gt;zx&lt;/code&gt; scripts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/usr/bin/env zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you will be able to run your script like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;chmod +x ./script.mjs
./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or via the &lt;code&gt;zx&lt;/code&gt; executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx ./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All functions (&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;, etc) are available straight away without any imports.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;$`command` &lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Executes a given string using the &lt;code&gt;spawn&lt;/code&gt; function from the &lt;code&gt;child_process&lt;/code&gt; package and returns &lt;code&gt;ProcessPromise&amp;lt;ProcessOutput&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Everything passed through &lt;code&gt;${...}&lt;/code&gt; will be automatically escaped and quoted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let name = &#39;foo &amp;amp; bar&#39;
await $`mkdir ${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;There is no need to add extra quotes.&lt;/strong&gt; Read more about it in &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/quotes.md&quot;&gt;quotes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can pass an array of arguments if needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let flags = [
  &#39;--oneline&#39;,
  &#39;--decorate&#39;,
  &#39;--color&#39;,
]
await $`git log ${flags}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the executed program returns a non-zero exit code, &lt;code&gt;ProcessOutput&lt;/code&gt; will be thrown.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
  await $`exit 1`
} catch (p) {
  console.log(`Exit code: ${p.exitCode}`)
  console.log(`Error: ${p.stderr}`)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;ProcessPromise&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessPromise&amp;lt;T&amp;gt; extends Promise&amp;lt;T&amp;gt; {
  readonly stdin: Writable
  readonly stdout: Readable
  readonly stderr: Readable
  readonly exitCode: Promise&amp;lt;number&amp;gt;
  pipe(dest): ProcessPromise&amp;lt;T&amp;gt;
  kill(signal = &#39;SIGTERM&#39;): Promise&amp;lt;void&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;pipe()&lt;/code&gt; method can be used to redirect stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cat file.txt`.pipe(process.stdout)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/pipelines.md&quot;&gt;pipelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;ProcessOutput&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessOutput {
  readonly stdout: string
  readonly stderr: string
  readonly exitCode: number
  toString(): string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;cd()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes the current working directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;cd(&#39;/tmp&#39;)
await $`pwd` // outputs /tmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;node-fetch&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let resp = await fetch(&#39;http://wttr.in&#39;)
if (resp.ok) {
  console.log(await resp.text())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;question()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://nodejs.org/api/readline.html&quot;&gt;readline&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let bear = await question(&#39;What kind of bear is best? &#39;)
let token = await question(&#39;Choose env variable: &#39;, {
  choices: Object.keys(process.env)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In second argument, array of choices for Tab autocompletion can be specified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function question(query?: string, options?: QuestionOptions): Promise&amp;lt;string&amp;gt;
type QuestionOptions = { choices: string[] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;code&gt;setTimeout&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await sleep(1000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;nothrow()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes behavior of &lt;code&gt;$&lt;/code&gt; to not throw an exception on non-zero exit codes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function nothrow&amp;lt;P&amp;gt;(p: P): P
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await nothrow($`grep something from-file`)

// Inside a pipe():

await $`find ./examples -type f -print0`
  .pipe(nothrow($`xargs -0 grep something`))
  .pipe($`wc -l`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only the &lt;code&gt;exitCode&lt;/code&gt; is needed, you can use the next code instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (await $`[[ -d path ]]`.exitCode == 0) {
  ...
}

// Equivalent of:

if ((await nothrow($`[[ -d path ]]`)).exitCode == 0) {
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Packages&lt;/h3&gt; 
&lt;p&gt;Next packages is available without importing inside scripts.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;chalk&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/chalk&quot;&gt;chalk&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(chalk.blue(&#39;Hello world!&#39;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fs&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/fs-extra&quot;&gt;fs-extra&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let content = await fs.readFile(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;globby&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/sindresorhus/globby&quot;&gt;globby&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let packages = await globby([&#39;package.json&#39;, &#39;packages/*/package.json&#39;])

let pictures = globby.globbySync(&#39;content/*.(jpg|png)&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, globby available via the &lt;code&gt;glob&lt;/code&gt; shortcut:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`svgo ${await glob(&#39;*.svg&#39;)}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;os&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/os.html&quot;&gt;os&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cd ${os.homedir()} &amp;amp;&amp;amp; mkdir example`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;path&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;path&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`mkdir ${path.join(basedir, &#39;output&#39;)}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;minimist&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/minimist&quot;&gt;minimist&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Available as global const &lt;code&gt;argv&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;$.shell&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies what shell is used. Default is &lt;code&gt;which bash&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$.shell = &#39;/usr/bin/bash&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--shell=/bin/bash&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.prefix&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies the command that will be prefixed to all commands run.&lt;/p&gt; 
&lt;p&gt;Default is &lt;code&gt;set -euo pipefail;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--prefix=&#39;set -e;&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.quote&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies a function for escaping special characters during command substitution.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.verbose&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies verbosity. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In verbose mode, the &lt;code&gt;zx&lt;/code&gt; prints all executed commands alongside with their outputs.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument &lt;code&gt;--quiet&lt;/code&gt; to set &lt;code&gt;$.verbose = false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;__filename&lt;/code&gt; &amp;amp; &lt;code&gt;__dirname&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/esm.html&quot;&gt;ESM&lt;/a&gt; modules, Node.js does not provide &lt;code&gt;__filename&lt;/code&gt; and &lt;code&gt;__dirname&lt;/code&gt; globals. As such globals are really handy in scripts, &lt;code&gt;zx&lt;/code&gt; provides these for use in &lt;code&gt;.mjs&lt;/code&gt; files (when using the &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; modules, the &lt;code&gt;require()&lt;/code&gt; function is not defined. The &lt;code&gt;zx&lt;/code&gt; provides &lt;code&gt;require()&lt;/code&gt; function, so it can be used with imports in &lt;code&gt;.mjs&lt;/code&gt; files (when using &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let {version} = require(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;Passing env variables&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;process.env.FOO = &#39;bar&#39;
await $`echo $FOO`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Passing array of values&lt;/h4&gt; 
&lt;p&gt;If array of values passed as argument to &lt;code&gt;$&lt;/code&gt;, items of the array will be escaped individually and concatenated via space.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let files = [...]
await $`tar cz ${files}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Importing from other scripts&lt;/h4&gt; 
&lt;p&gt;It is possible to make use of &lt;code&gt;$&lt;/code&gt; and other functions via explicit imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env node
import {$} from &#39;zx&#39;
await $`date`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scripts without extensions&lt;/h4&gt; 
&lt;p&gt;If script does not have a file extension (like &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;), zx assumes that it is an &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; module.&lt;/p&gt; 
&lt;h4&gt;Markdown scripts&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can execute scripts written in markdown (&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/markdown.md&quot;&gt;docs/markdown.md&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx docs/markdown.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TypeScript scripts&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can compile &lt;code&gt;.ts&lt;/code&gt; scripts to &lt;code&gt;.mjs&lt;/code&gt; and execute them.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx script.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import {$} from &#39;zx&#39;

void async function () {
  await $`ls -la`
}()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing remote scripts&lt;/h4&gt; 
&lt;p&gt;If the argument to the &lt;code&gt;zx&lt;/code&gt; executable starts with &lt;code&gt;https://&lt;/code&gt;, the file will be downloaded and executed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/example-script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/game-of-life.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing scripts from stdin&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; supports executing scripts from stdin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;zx &amp;lt;&amp;lt;&#39;EOF&#39;
await $`pwd`
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/LICENSE&quot;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Disclaimer: &lt;em&gt;This is not an officially supported Google product.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iamadamdev/bypass-paywalls-chrome</title>
      <link>https://github.com/iamadamdev/bypass-paywalls-chrome</link>
      <description>&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/raw/master/src/icons/bypass.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Bypass Paywalls&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download this repo as a &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&quot;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Enable Developer Mode.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/releases/latest/download/bypass-paywalls-firefox.xpi&quot;&gt;Download and install the latest version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ✕ to keep the extension enabled.&lt;/li&gt; 
 &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; 
 &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; 
 &lt;li&gt;The Firefox version supports automatic updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bypass the following sites&#39; paywalls with this extension:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.adweek.com&quot;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ad.nl&quot;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.americanbanker.com&quot;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ambito.com&quot;&gt;Ámbito&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.baltimoresun.com&quot;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.barrons.com&quot;&gt;Barron&#39;s&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloombergquint.com&quot;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloomberg.com&quot;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bndestem.nl&quot;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bostonglobe.com&quot;&gt;Boston Globe&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bd.nl&quot;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.brisbanetimes.com.au&quot;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.businessinsider.com&quot;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.caixinglobal.com&quot;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.centralwesterndaily.com.au&quot;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://cen.acs.org&quot;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagotribune.com&quot;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.corriere.it&quot;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagobusiness.com&quot;&gt;Crain&#39;s Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailypress.com&quot;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.gelderlander.nl&quot;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.groene.nl&quot;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.destentor.nl&quot;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://speld.nl&quot;&gt;De Speld&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tijd.be&quot;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.volkskrant.nl&quot;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.demorgen.be&quot;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.denverpost.com&quot;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.df.cl&quot;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.editorialedomani.it&quot;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dynamed.com&quot;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ed.nl&quot;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elmercurio.com&quot;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elpais.com&quot;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elperiodico.com&quot;&gt;El Periodico&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elu24.ee&quot;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.britannica.com&quot;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.estadao.com.br&quot;&gt;Estadão&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.examiner.com.au&quot;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.expansion.com&quot;&gt;Expansión&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fnlondon.com&quot;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.financialpost.com&quot;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ft.com&quot;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.firstthings.com&quot;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.foreignpolicy.com&quot;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fortune.com&quot;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.genomeweb.com&quot;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.glassdoor.com&quot;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.globes.co.il&quot;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.grubstreet.com&quot;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.co.il&quot;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.com&quot;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.handelsblatt.com&quot;&gt;Handelsblatt&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://harpers.org&quot;&gt;Harper&#39;s Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.courant.com&quot;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.hbr.org&quot;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.heraldsun.com.au&quot;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://fd.nl&quot;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.historyextra.com&quot;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.humo.be&quot;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ilmanifesto.it&quot;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inc.com&quot;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.interest.co.nz&quot;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.investorschronicle.co.uk&quot;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&quot;https://www.lecho.be&quot;&gt;L&#39;Écho&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://labusinessjournal.com&quot;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lanacion.com.ar&quot;&gt;La Nación&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.repubblica.it&quot;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lastampa.it&quot;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latercera.com&quot;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lavoixdunord.fr&quot;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ledevoir.com&quot;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.leparisien.fr&quot;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lesechos.fr&quot;&gt;Les Échos&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.loebclassics.com&quot;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lrb.co.uk&quot;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latimes.com&quot;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sloanreview.mit.edu&quot;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.technologyreview.com&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medium.com&quot;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medscape.com&quot;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://mexiconewsdaily.com&quot;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mv-voice.com&quot;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalgeographic.com&quot;&gt;National Geographic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nydailynews.com&quot;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nrc.nl&quot;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ntnews.com.au&quot;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalpost.com&quot;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzz.ch&quot;&gt;Neue Zürcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nymag.com&quot;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzherald.co.nz&quot;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://asia.nikkei.com&quot;&gt;Nikkei Asian Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ocregister.com&quot;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.orlandosentinel.com&quot;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.pzc.nl&quot;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.paloaltoonline.com&quot;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.parool.nl&quot;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.postimees.ee&quot;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://qz.com&quot;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.quora.com&quot;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://quotidiani.gelocal.it&quot;&gt;Quotidiani Gelocal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://republic.ru&quot;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.reuters.com&quot;&gt;Reuters&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sandiegouniontribune.com&quot;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sfchronicle.com&quot;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.scientificamerican.com&quot;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://seekingalpha.com&quot;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://slate.com&quot;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sofrep.com&quot;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.statista.com&quot;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.startribune.com&quot;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.stuff.co.nz&quot;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sun-sentinel.com&quot;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.techinasia.com&quot;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraaf.nl&quot;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.adelaidenow.com.au&quot;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theadvocate.com.au&quot;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theage.com.au&quot;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-american-interest.com&quot;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theatlantic.com&quot;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.afr.com&quot;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theaustralian.com.au&quot;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bizjournals.com&quot;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.canberratimes.com.au&quot;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecourier.com.au&quot;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.couriermail.com.au&quot;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecut.com&quot;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailytelegraph.com.au&quot;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thediplomat.com&quot;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.economist.com&quot;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theglobeandmail.com&quot;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theherald.com.au&quot;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thehindu.com&quot;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.irishtimes.com&quot;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.japantimes.co.jp&quot;&gt;The Japan Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.kansascity.com&quot;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mercurynews.com&quot;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themercury.com.au&quot;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mcall.com&quot;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenation.com&quot;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenational.scot&quot;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newstatesman.com&quot;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nytimes.com&quot;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newyorker.com&quot;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.news-gazette.com&quot;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inquirer.com&quot;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thesaturdaypaper.com.au&quot;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.seattletimes.com&quot;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.com.au&quot;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.co.uk&quot;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.smh.com.au&quot;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraph.co.uk&quot;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thestar.com&quot;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wsj.com&quot;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.washingtonpost.com&quot;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thewrap.com&quot;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themarker.com&quot;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-tls.co.uk&quot;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.towardsdatascience.com&quot;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.trouw.nl&quot;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tubantia.nl&quot;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vanityfair.com&quot;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vn.nl&quot;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vulture.com&quot;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://journalnow.com&quot;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wired.com&quot;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.worldpoliticsreview.com&quot;&gt;World Politics Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.zeit.de&quot;&gt;Zeit Online&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; 
&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; 
&lt;p&gt;Install the Cookie Remover extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; 
&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;New site requests&lt;/h3&gt; 
&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the uBlock Origin extension if it hasn&#39;t been installed already. See if you are still getting a paywall.&lt;/li&gt; 
 &lt;li&gt;Check if using Cookie Remover (&lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; 
 &lt;li&gt;First search &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&quot;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; 
 &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; 
 &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; 
 &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; 
 &lt;li&gt;If it loads without a paywall you can &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word &quot;Confirmed&quot;. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&quot;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If a site doesn&#39;t work, try turning off uBlock and refreshing.&lt;/li&gt; 
 &lt;li&gt;Try clearing &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;cookies&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make sure you&#39;re running the latest version of Bypass Paywalls.&lt;/li&gt; 
 &lt;li&gt;If a site is having problems try unchecking &quot;*General Paywall Bypass*&quot; in Options.&lt;/li&gt; 
 &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; 
&lt;p&gt;PRs are welcome.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; 
 &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://github.com/standard/semistandard&quot;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don&#39;t need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Show your support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow me on Twitter &lt;a href=&quot;https://twitter.com/iamadamdev&quot;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; 
 &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This software is provided for educational purposes only and is provided &quot;AS IS&quot;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;  
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🧙&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to &lt;a href=&quot;mailto:security@openzeppelin.org&quot;&gt;security@openzeppelin.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true&quot; width=&quot;128&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;It is a self-hosted monitoring tool like &quot;Uptime Robot&quot;.&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/1.jpg&quot; width=&quot;512&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / Ping / DNS Record.&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href=&quot;https://github.com/louislam/uptime-kuma/issues/284&quot;&gt;70+ notification services, click here for the full list&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;20 seconds interval.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🚀 Installer via CLI&lt;/h3&gt; 
&lt;p&gt;Interactive CLI installer, supports Docker or without Docker.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -o kuma_install.sh http://git.kuma.pet/install.sh &amp;amp;&amp;amp; sudo bash kuma_install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker volume create uptime-kuma
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browse to &lt;a href=&quot;http://localhost:3001&quot;&gt;http://localhost:3001&lt;/a&gt; after started.&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reserve proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What&#39;s Next?&lt;/h2&gt; 
&lt;p&gt;I will mark requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/milestones&quot;&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Dark Mode:&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/128710166-908f8d88-9256-43f3-9c49-bfc2c56011d2.png&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the close ones is statping. Unfortunately, it is not stable and unmaintained.&lt;/li&gt; 
 &lt;li&gt;Want to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving me a ⭐.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to report a bug or request a new feature. Free feel to open a new issue.&lt;/p&gt; 
&lt;p&gt;If you want to modify Uptime Kuma, this guideline may be useful for you: &lt;a href=&quot;https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md&quot;&gt;https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;English proofreading is needed too because my grammar is not that great sadly. Feel free to correct my grammar in this readme, source code, or wiki.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://d3js.org/logo.svg?sanitize=true&quot; align=&quot;left&quot; hspace=&quot;10&quot; vspace=&quot;6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/learn-d3&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/raw/master/API.md&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. You can also download the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release on GitHub&lt;/a&gt;. For vanilla HTML in modern browsers, import D3 from Skypack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import * as d3 from &quot;https://cdn.skypack.dev/d3@7&quot;;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For legacy environments, you can load D3’s UMD bundle from an npm-based CDN such as jsDelivr; a &lt;code&gt;d3&lt;/code&gt; global is exported:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/d3@7&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import {selectAll} from &quot;https://cdn.skypack.dev/d3-selection@3&quot;;

const div = selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;D3 is written using &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES2015 modules&lt;/a&gt;. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {scaleLinear} from &quot;d3-scale&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import * as d3 from &quot;d3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using dynamic import:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await import(&quot;d3&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also import individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await Promise.all([
  import(&quot;d3-format&quot;),
  import(&quot;d3-geo&quot;),
  import(&quot;d3-geo-projection&quot;)
]).then(d3 =&amp;gt; Object.assign({}, ...d3));
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>bytedance/xgplayer</title>
      <link>https://github.com/bytedance/xgplayer</link>
      <description>&lt;p&gt;A HTML5 video player with a parser that saves traffic&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/bytedance/xgplayer/master/xgplayer.png&quot; width=&quot;384&quot; height=&quot;96&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.npmjs.com/package/xgplayer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/xgplayer.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://www.npmjs.com/package/xgplayer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/l/xgplayer.svg?sanitize=true&quot; alt=&quot;license&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;http://commitizen.github.io/cz-cli/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true&quot; alt=&quot;commitizen&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/bytedance/xgplayer/master/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;xgplayer is a web video and audio player library, designed with separate, detachable UI components. Since everything is componentized. the UI layer is very flexable.&lt;br&gt; xgplayer is bold in its functionality: it gets rid of video loading, buffering, and format support for video dependence. For mp4 that does not support streaming, you can use staged loading. This means load control, seamless switching without artifacts, and video bandwidth savings. It also integrates on-demand and live support for FLV, HLS, and dash.&lt;/p&gt; 
&lt;p&gt;For more details, please read the &lt;a href=&quot;http://h5player.bytedance.com/en/&quot;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Start&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ npm install xgplayer
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Usage&lt;/p&gt; &lt;p&gt;Step 1:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;vs&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Step 2:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import Player from &#39;xgplayer&#39;;

const player = new Player({
    id: &#39;vs&#39;,
    url: &#39;https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/byted-player-videos/1.0.0/xgplayer-demo.mp4&#39;
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the easiest way to configure the video player. For more advanced content, see the plug-in section or documentation. &lt;a href=&quot;http://h5player.bytedance.com/en/config/&quot;&gt;more config&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;xgplayer provides more plugins. Plugins are divided into two categories: one is self-starting, and another inherits the player&#39;s core class named xgplayer. In principle, the officially provided plug-ins are self-starting and the packaged third-party libraries are inherited. Some feature plug-ins themselves can provide a downgrade scenario that suggests a self-start approach, or an inheritance approach if not. The player supports custom plugins for more content viewing &lt;a href=&quot;http://h5player.bytedance.com/en/plugins/&quot;&gt;plugins&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The following is how to use a self-starting plug-in：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import Player from &#39;xgplayer&#39;;
import &#39;xgplayer-mp4&#39;;

const player = new Player({
    id: &#39;video&#39;,
    url: &#39;//abc.com/test.mp4&#39;
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;xgplayer-mp4&lt;/code&gt;plugin is self-starting, It loads mp4 video itself, parses mp4 format, implements custom loading, buffering, seamless switching, and so on. it will automatically downgrade devices that do not support &lt;a href=&quot;https://www.w3.org/TR/media-source/&quot;&gt;MSE&lt;/a&gt;. &lt;a href=&quot;http://h5player.bytedance.com/en/plugins/#xgplayer-mp4&quot;&gt;details&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dev&lt;/h3&gt; 
&lt;p&gt;For debugging, we provide example video files in github. You can clone the whole git repository, which includes both code and example videos with &#39;git clone --recurse-submodules -j8&#39;. With &#39;git clone&#39; you will pull only xgplayer code and its plugins.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules -j8 git@github.com:bytedance/xgplayer.git # OR git clone git@github.com:bytedance/xgplayer.git
$ cd xgplayer
$ npm install
$ npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://localhost:9090/examples/index.html&quot;&gt;http://localhost:9090/examples/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Agreement&lt;/h3&gt; 
&lt;p&gt;Welcome to use xgplayer! Please read the following terms carefully. Using xgplayer means that you accept and agree to the terms.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Xgplayer is licensed under the &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; License. You comply with its obligations by default.&lt;/li&gt; 
 &lt;li&gt;By default, you authorize us to place your logo in xgplayer website, which using xgplayer. If you have any problem, please let us know.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Join Us&lt;/h3&gt; 
&lt;p&gt;We welcome anyone with an interest in web media technology to join! Please contact us at &lt;a href=&quot;mailto:yinguohui@bytedance.com&quot;&gt;yinguohui@bytedance.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/nodebestpractices</title>
      <link>https://github.com/goldbergyoni/nodebestpractices</link>
      <description>&lt;p&gt;✅ The Node.js best practices list (August 2021)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Best Practices&lt;/h1&gt; 
&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/banner-2.jpg&quot; alt=&quot;Node.js Best Practices&quot;&gt; &lt;/h1&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/⚙%20Item%20count%20-%20102%20Best%20Practices-blue.svg&quot; alt=&quot;102 items&quot;&gt; 
 &lt;img id=&quot;last-update-badge&quot; src=&quot;https://img.shields.io/badge/%F0%9F%93%85%20Last%20update%20-%20August%2015%2C%202021-green.svg?sanitize=true&quot; alt=&quot;Last update: August 15, 2021&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/ %E2%9C%94%20Updated%20For%20Version%20-%20Node%2014.0.0-brightgreen.svg&quot; alt=&quot;Updated for Node 14.0.0&quot;&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; alt=&quot;nodepractices&quot;&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Read in a different language: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.french.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt;&lt;strong&gt;FR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt;&lt;strong&gt;JA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt;&lt;strong&gt;EU&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translations&quot;&gt;(&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress! )&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h6&gt;Built and maintained by our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#steering-committee&quot;&gt;Steering Committee&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/h6&gt; 
&lt;h1&gt;Latest Best Practices and News&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;👨‍👩‍👧‍👦 New family member!&lt;/strong&gt;: A new repository joins our family - &lt;a href=&quot;https://github.com/testjavascript/nodejs-integration-tests-best-practices&quot;&gt;Node.js Integration Tests Best Practices ✨&lt;/a&gt;. It includes 40+ best practices for writing awesome and performant Node.js component tests&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; French translation!1! :&lt;/strong&gt; The latest translation that joins our international guide is French. Bienvenue&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🇯🇵 Japanese translation:&lt;/strong&gt; Our guide is now also translated to Japanese! Courtesy of the amazing &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;YukiOta&lt;/a&gt; and &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1. You are reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We&#39;d love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/writing-guidelines.md&quot;&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;🔗Read More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs, and more information&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#1-project-structure-practices&quot;&gt;Project Structure Practices (5)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#2-error-handling-practices&quot;&gt;Error Handling Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Code Style Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#4-testing-and-overall-quality-practices&quot;&gt;Testing And Overall Quality Practices (13) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#5-going-to-production-practices&quot;&gt;Going To Production Practices (19) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#6-security-best-practices&quot;&gt;Security Practices (25)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#7-draft-performance-best-practices&quot;&gt;Performance Practices (2) (Work In Progress️ ✍️)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#8-docker-best-practices&quot;&gt;Docker Practices (15)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.1 Structure your solution by components&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit &#39;Read More&#39; below to see examples of correct project structure&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It&#39;s also considered harder to scale-out when all the business units are not separated&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/breakintcomponents.md&quot;&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.2 Layer your components, keep the web layer within its boundaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain &#39;layers&#39; - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/createlayers.md&quot;&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to invent your deployment and the dependency wheel&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/wraputilities.md&quot;&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.4 Separate Express &#39;app&#39; and &#39;server&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; app in a single huge file - separate your &#39;Express&#39; definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won&#39;t be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/separateexpress.md&quot;&gt;&lt;strong&gt;Read More: separate Express &#39;app&#39; and &#39;server&#39;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href=&quot;https://www.npmjs.com/package/rc&quot;&gt;rc&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/nconf&quot;&gt;nconf&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/config&quot;&gt;config&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/convict&quot;&gt;convict&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/configguide.md&quot;&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/asyncerrorhandling.md&quot;&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.2 Use only the built-in Error object&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type – this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error – using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information. There is &lt;code&gt;no-throw-literal&lt;/code&gt; ESLint rule that strictly checks that (although it have some &lt;a href=&quot;https://eslint.org/docs/rules/no-throw-literal&quot;&gt;limitations&lt;/a&gt; which can be solved when using TypeScript and setting the &lt;code&gt;@typescript-eslint/no-throw-literal&lt;/code&gt; rule)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return – it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/useonlythebuiltinerror.md&quot;&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal – keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/operationalvsprogrammererror.md&quot;&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.4 Handle errors centrally, not within a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/centralizedhandling.md&quot;&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you&#39;re using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn’t understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/documentingusingswagger.md&quot;&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like &lt;a href=&quot;https://www.npmjs.com/package/forever&quot;&gt;Forever&lt;/a&gt; or &lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;PM2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/shuttingtheprocess.md&quot;&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href=&quot;https://github.com/pinojs/pino&quot;&gt;Pino&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;Log4js&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/usematurelogger.md&quot;&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing – Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the &quot;Gist popup&quot;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can’t rely on your code to return the right errors. Without meaningful errors – there’s no error handling&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/testingerrorflows.md&quot;&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn’t forget to explicitly handle it. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/catchunhandledpromiserejection.md&quot;&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like &lt;a href=&quot;https://www.npmjs.com/package/ajv&quot;&gt;ajv&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;Joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this – your function expects a numeric argument “Discount” which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/failfast.md&quot;&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.12 Always await promises before returning to avoid a partial stacktrace&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always do &lt;code&gt;return await&lt;/code&gt; when returning a promise to benefit full error stacktrace. If a function returns a promise, that function must be declared as &lt;code&gt;async&lt;/code&gt; function and explicitly &lt;code&gt;await&lt;/code&gt; the promise before returning it&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The function that returns a promise without awaiting won&#39;t appear in the stacktrace. Such missing frames would probably complicate the understanding of the flow that leads to the error, especially if the cause of the abnormal behavior is inside of the missing function&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/returningpromises.md&quot;&gt;&lt;strong&gt;Read More: returning promises&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.1 Use ESLint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;prettier&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/js-beautify&quot;&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project&#39;s code style&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/codestylepractices/eslint_prettier.md&quot;&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.2 Node.js specific plugins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.3 Start a Codeblock&#39;s Curly Braces on the Same Line&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt; 
&lt;h3&gt;Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function someFunction() {
  // code block
}

// Avoid
function someFunction()
{
  // code block
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Why do results vary based on curly brace placement?&quot; (StackOverflow)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.4 Separate your statements properly&lt;/h2&gt; 
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; or &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript&#39;s interpreter automatically adds a semicolon at the end of a statement if there isn&#39;t one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.&lt;/p&gt; 
&lt;h3&gt;Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function doThing() {
    // ...
}

doThing()

// Do

const items = [1, 2, 3]
items.forEach(console.log)

// Avoid — throws exception
const m = new Map()
const a = [1,2,3]
[...m.values()].forEach(console.log)
&amp;gt; [...m.values()].forEach(console.log)
&amp;gt;  ^^^
&amp;gt; SyntaxError: Unexpected token ...

// Avoid — throws exception
const count = 2 // it tries to run 2(), but 2 is not a function
(function doSomething() {
  // do something amazing
}())
// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs altogether
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://eslint.org/docs/rules/semi&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Semi ESLint rule&quot;&lt;/a&gt; 🔗 &lt;a href=&quot;https://eslint.org/docs/rules/no-unexpected-multiline&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;No unexpected multiline ESLint rule&quot;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.5 Name your functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you&#39;re looking at when checking a memory snapshot&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions and &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; JavaScript is the only language in the world that allows invoking a constructor (&quot;Class&quot;) directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt; 
&lt;h3&gt;3.6 Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// for class name we use UpperCamelCase
class SomeClassExample {}

// for const names we use the const keyword and lowerCamelCase
const config = {
  key: &quot;value&quot;,
};

// for variables and functions names we use lowerCamelCase
let someVariableExample = &quot;value&quot;;
function doSomething() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block-scoped, and &lt;a href=&quot;https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70&quot;&gt;shouldn&#39;t be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75&quot;&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.9 Require modules by folders, as opposed to the files directly&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module&#39;s internals so every consumer will pass through it. This serves as an &#39;interface&#39; to your module and eases future changes without breaking the contract&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt; 
&lt;h3&gt;3.9 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
module.exports.SMSProvider = require(&quot;./SMSProvider&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver&quot;);

// Avoid
module.exports.SMSProvider = require(&quot;./SMSProvider/SMSProvider.js&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver/SMSNumberResolver.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt; 
&lt;h3&gt;3.10 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;&quot; == &quot;0&quot;; // false
0 == &quot;&quot;; // true
0 == &quot;0&quot;; // true

false == &quot;false&quot;; // false
false == &quot;0&quot;; // true

false == undefined; // false
false == null; // false
null == undefined; // true

&quot; \t\r\n &quot; == 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow&lt;/p&gt; 
&lt;p&gt;🔗&lt;a href=&quot;https://github.com/yortus/asyncawait&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async-await 1.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it&#39;s recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75&quot;&gt;&lt;strong&gt;Read more: It’s Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don&#39;t have any automated testing due to short timetables or often the &#39;testing project&#39; ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;). Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it&#39;s self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/3-parts-in-name.md&quot;&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/aaa.md&quot;&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.4 Detect code issues with a linter&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/avoid-global-test-fixture.md&quot;&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as 🔗 &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; and 🔗 &lt;a href=&quot;https://snyk.io&quot;&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.7 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;: mocha --grep &#39;sanity&#39;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs&quot;&gt;Istanbul&lt;/a&gt;/&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won&#39;t be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.9 Inspect for outdated packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. &lt;code&gt;npm outdated&lt;/code&gt; or &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt;) to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.10 Use production-like environment for e2e testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the &lt;strong&gt;Otherwise&lt;/strong&gt; clause, this should mention docker-compose)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose, teams must maintain a testing DB for each testing environment including developers&#39; machines, keep all those DBs in sync so test results won&#39;t vary across environments&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/refactoring.md&quot;&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g. test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it&#39;s a trade-off between robustness and speed - choose your side carefully&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/citools.md&quot;&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.13 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When a middleware holds some immense logic that spans many requests, it is worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/test-middlewares.md&quot;&gt;&lt;strong&gt;Read More: Test middlewares in isolation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.1. Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do – obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‘The Gist’ below for an overview of the solutions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/monitoring.md&quot;&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/smartlogging.md&quot;&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‘real’ middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/delegatetoproxy.md&quot;&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.4. Lock dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default – when you install packages at various environments it tries to fetch packages’ latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/lockdependencies.md&quot;&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today&#39;s ‘dockerized’ world, cluster management tools should be considered as well&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/guardprocess.md&quot;&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.6. Utilize all CPU cores&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It’s your duty to replicate the Node process and utilize all CPUs – For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/utilizecpu.md&quot;&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.7. Create a ‘maintenance endpoint’&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it’s highly recommended to rely on standard and battle-tested tools, some valuable information and operations are easier done using code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll find that you’re performing many “diagnostic deploys” – shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/createmaintenanceendpoint.md&quot;&gt;&lt;strong&gt;Read More: Create a ‘maintenance endpoint’&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a. APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-user&#39;s side while suggesting the root cause&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.9. Make your code production-ready&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I’ve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won’t save a system that is badly written&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/productioncode.md&quot;&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node’s code – thus watching Node’s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href=&quot;https://www.joyent.com/blog/walmart-node-js-memory-leak&quot;&gt;Walmart&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/measurememory.md&quot;&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for – serving dynamic content&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/frontendout.md&quot;&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‘killing’ your servers periodically or use ‘serverless’ platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/bestateless.md&quot;&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/detectvulnerabilities.md&quot;&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt; 
&lt;p&gt;Also known as correlation id / transit id / tracing id / request id / request context / etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Until version 14 of Node, this was not easy to achieve due to Node&#39;s async nature, but since AsyncLocalStorage came to town, this became possible and easy than ever. see code examples inside&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context – what happened before – makes it much harder and slower to reason about the issue&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/assigntransactionid.md&quot;&gt;&lt;strong&gt;Read More: Assign ‘TransactionId’ to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.15. Set &lt;code&gt;NODE_ENV=production&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable &lt;code&gt;NODE_ENV&lt;/code&gt; to ‘production’ or ‘development’ to flag whether production optimizations should get activated – many npm packages determine the current environment and optimize their code for production&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/setnodeenv.md&quot;&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don’t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/LTSrelease.md&quot;&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.18. Don&#39;t route logs within the app&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/logrouting.md&quot;&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.19. Install your packages with &lt;code&gt;npm ci&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; You have to be sure that production code uses the exact version of the packages you have tested it with. Run &lt;code&gt;npm ci&lt;/code&gt; to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/installpackageswithnpmci.md&quot;&gt;&lt;strong&gt;Read More: Use npm ci&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/OWASP%20Threats-Top%2010-green.svg?sanitize=true&quot; alt=&quot;54 items&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.1. Embrace linter security rules&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href=&quot;https://github.com/nodesecurity/eslint-plugin-security&quot;&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they&#39;re being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click &#39;Read more&#39; below to see code examples that will get caught by a security linter&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/lintrules.md&quot;&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href=&quot;https://www.npmjs.com/package/rate-limiter-flexible&quot;&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href=&quot;https://www.npmjs.com/package/express-rate-limit&quot;&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/limitrequests.md&quot;&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A3:Sensitive%20Data%20Exposure%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secretmanagement.md&quot;&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;Sequelize&lt;/a&gt;, &lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex&lt;/a&gt;, &lt;a href=&quot;https://github.com/Automattic/mongoose&quot;&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/ormodmusage.md&quot;&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.5. Collection of generic security best practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/commonsecuritybestpractices.md&quot;&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href=&quot;https://www.npmjs.com/package/helmet&quot;&gt;helmet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application&#39;s users, leading to huge security vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secureheaders.md&quot;&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Known%20Vulnerabilities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; or &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/dependencysecurity.md&quot;&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.8. Protect Users&#39; Passwords/Secrets using bcrypt or scrypt&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;,&lt;code&gt;scrypt&lt;/code&gt;, or worst case &lt;code&gt;pbkdf2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/userpasswords.md&quot;&gt;&lt;strong&gt;Read More: User Passwords&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/escape-output.md&quot;&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7: XSS%20-green.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests&#39; body payload and ensure it meets expectations, fail fast if it doesn&#39;t. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href=&quot;https://www.npmjs.com/package/jsonschema&quot;&gt;jsonschema&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/validation.md&quot;&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.11. Support blocklisting JWTs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;Passport.js&lt;/a&gt;), by default there&#39;s no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there&#39;s no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blocklist of untrusted tokens that are validated on each request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/expirejwt.md&quot;&gt;&lt;strong&gt;Read More: Blocklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt; 
 &lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/login-rate-limit.md&quot;&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A5:Broken%20Access%20Access%20Control-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It&#39;s recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user&#39;s behalf by invoking the container with the flag &quot;-u username&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/non-root-user.md&quot;&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href=&quot;https://github.com/expressjs/body-parser&quot;&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/requestpayloadsizelimit.md&quot;&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoideval.md&quot;&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on 🔥. For that reason, prefer third-party validation packages like &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href=&quot;https://github.com/substack/safe-regex&quot;&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/regex.md&quot;&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/safemoduleloading.md&quot;&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of &#39;sandbox&#39; execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sandbox.md&quot;&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/childprocesses.md&quot;&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.20. Hide error details from clients&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/hideerrors.md&quot;&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer&#39;s password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href=&quot;https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8&quot;&gt;Have you heard about the eslint developer whose password was hijacked?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.22. Modify session middleware settings&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses - telling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sessions.md&quot;&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error - unless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There&#39;s no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests - a handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/saferedirects.md&quot;&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to ignore specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as an allow list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project&#39;s API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoid_publishing_secrets.md&quot;&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;Our contributors are working on this section. &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/256&quot;&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.1. Don&#39;t block the event loop&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/block-loop.md&quot;&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It&#39;s often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance. Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it&#39;s now about 50% more performant than utility libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/nativeoverutil.md&quot;&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;8. Docker Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;🏅 Many thanks to &lt;a href=&quot;https://github.com/BretFisher&quot;&gt;Bret Fisher&lt;/a&gt; from whom we learned many of the following practices&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.1 Use multi-stage builds for leaner and more secure Docker images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what&#39;s necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.&lt;/p&gt; 
&lt;h3&gt;Example Dockerfile for multi-stage builds&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM node:14.4.0 AS build

COPY . .
RUN npm ci &amp;amp;&amp;amp; npm run build


FROM node:slim-14.4.0

USER node
EXPOSE 8080

COPY --from=build /home/node/app/dist /home/node/app/package.json /home/node/app/package-lock.json ./
RUN npm ci --production

CMD [ &quot;node&quot;, &quot;dist/app.js&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/multi_stage_builds.md&quot;&gt;&lt;strong&gt;Read More: Use multi-stage builds&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.2. Bootstrap using &lt;code&gt;node&lt;/code&gt; command, avoid &lt;code&gt;npm start&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; use &lt;code&gt;CMD [&#39;node&#39;,&#39;server.js&#39;]&lt;/code&gt; to start your app, avoid using npm scripts which don&#39;t pass OS signals to the code. This prevents problems with child-processes, signal handling, graceful shutdown and having zombie processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and/or data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/bootstrap-using-node.md&quot;&gt;&lt;strong&gt;Read More: Bootstrap container using node command, avoid npm start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.3. Let the Docker runtime handle replication and uptime&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/restart-and-replicate-processes.md&quot;&gt;&lt;strong&gt;Read More: Let the Docker orchestrator restart and replicate processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.4. Use .dockerignore to prevent leaking secrets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Include a &lt;code&gt;.dockerignore&lt;/code&gt; file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;: Common personal secret files like &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;.aws&lt;/code&gt; and &lt;code&gt;.npmrc&lt;/code&gt; will be shared with anybody with access to the image (e.g. Docker repository)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/docker-ignore.md&quot;&gt;&lt;strong&gt;Read More: Use .dockerignore&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.5. Clean-up dependencies before production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running &lt;code&gt;npm ci --production&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many of the infamous npm security breaches were found within development packages (e.g. &lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;eslint-scope&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;🔗 Read More: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/install-for-production.md&quot;&gt;Remove development dependencies&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.6. Shutdown smartly and gracefully&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Dying immediately means not responding to thousands of disappointed users&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/graceful-shutdown.md&quot;&gt;&lt;strong&gt;Read More: Graceful shutdown&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.7. Set memory limits using both Docker and v8&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8&#39;s flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8&#39;s old space memory to be a just bit less than the container limit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8&#39;s limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/memory-limit.md&quot;&gt;&lt;strong&gt;Read More: Set memory limits using Docker only&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.8. Plan for efficient caching&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Docker build will be very long and consume lot of resources even when making tiny changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/use-cache-for-shorter-build-time.md&quot;&gt;&lt;strong&gt;Read More: Leverage caching to reduce build times&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.9. Use explicit image reference, avoid &lt;code&gt;latest&lt;/code&gt; tag&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Specify an explicit image digest or versioned label, never refer to &lt;code&gt;latest&lt;/code&gt;. Developers are often led to believe that specifying the &lt;code&gt;latest&lt;/code&gt; tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.&lt;/p&gt; 
&lt;p&gt;In addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/image-tags.md&quot;&gt;&lt;strong&gt;Read More: Understand image tags and use the &quot;latest&quot; tag with caution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.10. Prefer smaller Docker base images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/smaller_base_images.md&quot;&gt;&lt;strong&gt;Read More: Prefer smaller images&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.11. Clean-out build-time secrets, avoid secrets in args&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like &lt;code&gt;.npmrc&lt;/code&gt; and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/avoid-build-time-secrets.md&quot;&gt;&lt;strong&gt;Read More: Clean-out build-time secrets&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.12. Scan images for multi layers of vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI/CD plugins&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/scan-images.md&quot;&gt;&lt;strong&gt;Read More: Scan the entire image before production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.13 Clean NODE_MODULE cache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; After installing dependencies in a container remove the local cache. It doesn&#39;t make any sense to duplicate the dependencies for faster future installs since there won&#39;t be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The image that will get shipped to production will weigh 30% more due to files that will never get used&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/clean-cache.md&quot;&gt;&lt;strong&gt;Read More: Clean NODE_MODULE cache&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.14. Generic Docker practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/generic-tips.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.15. Lint your Dockerfile&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Mistakenly the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/lint-dockerfile.md&quot;&gt;&lt;strong&gt;Read More: Lint your Dockerfile&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Milestones&lt;/h1&gt; 
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/milestones&quot;&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt; 
&lt;h3&gt;Completed translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mattjin&quot;&gt;Matt Jin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/contributorpw&quot;&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;Japanese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;Yuki Ota&lt;/a&gt;, &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;Basque&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/anediaz&quot;&gt;Ane Diaz de Tuesta&lt;/a&gt; &amp;amp; Joxefe Diaz de Tuesta&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations in progress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.french.md&quot;&gt;French&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/129&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt; Hebrew (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/156&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.korean.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/uronly14me&quot;&gt;Sangbeom Han&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/94&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/raw/spanish-translation/README.spanish.md&quot;&gt;Spanish&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/95&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt; Turkish (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/139&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Steering Committee&lt;/h2&gt; 
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/projects&quot;&gt;GitHub projects&lt;/a&gt;.&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/yoni.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;Yoni Goldberg&lt;/a&gt; &lt;a href=&quot;https://twitter.com/goldbergyoni&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at &lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;@goldbergyoni&lt;/a&gt; or &lt;a href=&quot;mailto:me@goldbergyoni.com&quot;&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/bruno.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt; &lt;a href=&quot;https://brunoscheufler.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;💻 full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kyle.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt; &lt;a href=&quot;https://twitter.com/kylemartin_93&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kylemartinnz&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kevyn.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kevynb&quot;&gt;Kevyn Bruyere&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kevynbruyere/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent full-stack developer with a taste for Ops and automation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Steering Committee Emeriti&lt;/h3&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/sagir.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sagirk&quot;&gt;Sagir Khan&lt;/a&gt; &lt;a href=&quot;https://twitter.com/sagir_k&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://linkedin.com/in/sagirk&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sagirk.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Deep specialist in JavaScript and its ecosystem — React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS/JSON in any layer of the system — building products using the web platform for the world’s most recognized brands. Individual Member of the Node.js Foundation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;p&gt;Thank you to all our collaborators! 🙏&lt;/p&gt; 
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; 🎉&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/idori&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/ido.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/keith.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/raz-luvaton.jpg&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Raz Luvaton&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/josh-hemphill&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/jhemphill.jpg&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Josh Hemphill&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter (Founder)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot;&gt;Raz Luvaton&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/josh-hemphill&quot;&gt;Josh Hemphill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/refack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/refael.png&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/refack&quot;&gt;Refael Ackermann&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve ever wanted to contribute to open source, now is your chance! See the &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributing docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevinrambaud&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7501477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Rambaud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kevinrambaud&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mfine15&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1286554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Fine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mfine15&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://squgeim.github.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4996818?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shreya Dahal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-squgeim&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://matheusrocha89.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3718366?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matheus Cruz Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matheusrocha89&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bityog.github.io/Portfolio/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28219178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yog Mehta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BitYog&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kudapara.co.zw&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13519184?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kudakwashe Paradzayi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kudapara&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.t1st3.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1469638?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;t1st3&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-t1st3&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mulijordan1976&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/33382022?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mulijordan1976&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mulijordan1976&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/matchai&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4658208?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matan Kushner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matchai&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://fabiothiroki.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/670057?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabio Hiroki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-fabiothiroki&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://james.sumners.info/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/321201?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Sumners&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jsumners&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/_DanGamble&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7152041?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Gamble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dan-gamble&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/trainorpj&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13276704?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PJ Trainor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-trainorpj&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/reod&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3164299?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Remek Ambroziak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-reod&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ca.non.co.il&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1829789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yoni Jah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yonjah&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hazolsky&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1270790?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Misha Khokhlov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hazolsky&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://plus.google.com/+ЕвгенийОрехов/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8045060?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgeny Orekhov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-EvgenyOrekhov&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gediminasml&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19854105?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;-&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-gediminasml&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hisaac.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/923876?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Isaac Halvorson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hisaac&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.vedrankaracic.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2808092?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vedran Karačić&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkaracic&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lallenlowe&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10761165?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lallenlowe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lallenlowe&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nwwells&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1039473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nathan Wells&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nwwells&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/paulovitin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/125503?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paulo Reis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-paulovitin&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://snap.simpego.ch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1989646?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;syzer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-syzer&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sancho.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3763599?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Sancho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-davesnx&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apiforge.it&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4929965?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Manolea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-pupix&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jumptoglide.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/708395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xavier Ho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-spaxe&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ocular-rhythm.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2738518?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ocularrhythm&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://septa97.me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13742634?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Charles Maghirang Adona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-septa97&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.cakeresume.com/allenfang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5351390?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Allen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AllenFang&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leonardovillela&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8650543?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leonardo Villela&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leonardovillela&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://michalzalecki.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3136577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michał Załęcki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MichalZalecki&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.wealthbar.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/156449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Nicola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chrisnicola&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aecorredor&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9114987?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Corredor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-aecorredor&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cwar&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/272843?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cwar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-cwar&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyfoxth&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10647132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuwei&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyfoxth&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bigcodenerd.org&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10895594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Utkarsh Bhatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-utkarshbhatt12&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/duartemendes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12852058?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Duarte Mendes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-duartemendes&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jasonkim.ca&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/103456?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-serv&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Max101&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2124249?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mitja O.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Max101&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sandromiguel.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6423157?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandro Miguel Marques&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SandroMiguel&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GabeKuslansky&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9855482?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabeKuslansky&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ripper234.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/172282?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ron Gross&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ripper234&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.thecodebarbarian.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1620265?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Valeri Karpov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkarpov15&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sergiobernal.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20087388?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergio Bernal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-imsergiobernal&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ntelkedzhiev&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7332371?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikola Telkedzhiev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ntelkedzhiev&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vitordagamagodoy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26370059?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitor Godoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vitordagamagodoy&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.manishsaraan.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/19797340?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manish Saraan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-manishsaraan&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/uronly14me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5186814?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sangbeom Han&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-uronly14me&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blackmatch.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12443954?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;blackmatch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-blackmatch&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://simmsreeve.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5173131?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Reeve&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ISNIT0&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BusbyActual&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/14985016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Busby&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BusbyActual&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jsdecorator.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4482199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iman Mohamadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ImanMh&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HeeL&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/287769?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergii Paryzhskyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-HeeL&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kapilepatel&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/25738473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kapil Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kapilepatel&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/justjavac&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/359395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;迷渡&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-justjavac&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hozefaj&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2084833?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hozefa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hozefaj&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/el-ethan&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10249884?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-el-ethan&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/milkdeliver&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3108407?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-milkdeliver&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ArlindXh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19508764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arlind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ArlindXh&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ttous&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19815440?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Teddy Toussaint&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ttous&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ardern.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2419690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-LewisArdern&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gabriellidenor.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/765963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Lidenor &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabrielLidenor&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/animir&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4623196?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-animir&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Francozeira&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47419763?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francozeira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Francozeira&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/invvard&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7305493?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Invvard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Invvard&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://romulogarofalo.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/18492592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rômulo Garofalo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-romulogarofalo&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://thoqbk.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1491103?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tho Q Luong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-thoqbk&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Qeneke&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20271568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Burak Shen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Qeneke&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.happy-css.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2950505?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Muzatko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MartinMuzatko&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/autoboxer&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2757601?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jared Collier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-autoboxer&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hiltonmeyer.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4545860?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hilton Meyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bikingbadger&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kr.vuejs.org&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1451365?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ChangJoo Park(박창주)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ChangJoo-Park&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MasahiroSakaguchi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16427431?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masahiro Sakaguchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasahiroSakaguchi&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1253400?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Keith Holliday&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-TheHollidayInn&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coreycleary.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1485356?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;coreyc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coreyc&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://maxcubing.wordpress.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8260834?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maximilian Berkmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Berkmann18&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32845487?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Douglas Mariano Valero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-DouglasMV&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18266600?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcelo Melo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-marcelosdm&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mperk_&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3465794?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mehmet Perk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mperk&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanouyang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/360426?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ryan ouyang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryanouyang&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shabeer-mdy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26842535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shabeer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shabeer-mdy&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/halfzebra&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3983879?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduard Kyvenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-halfzebra&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://deyvisonrocha.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/686067?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deyvison Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-deyvisonrocha&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/georgemamer&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/20108934?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Mamer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-georgem3&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leimonio&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1969742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konstantinos Leimonis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leimonio&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Zybax&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22094453?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oliver Lluberes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-Zybax&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/story/tiendq&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/815910?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tien Do&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tiendq&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://singh1114.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11356398?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ranvir Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-singh1114&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/collierrgbsitisfise&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13496126?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vadim Nicolaev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-collierrgbsitisfise&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-collierrgbsitisfise&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/germangamboa95&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/28633849?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;German Gamboa Gonzalez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-germangamboa95&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/chandiran-dmc&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/42678579?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chandiran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chandiran-dmc&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VinayaSathyanarayana&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/16976677?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VinayaSathyanarayana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-VinayaSathyanarayana&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.kimkern.de&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2671139?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim Kern&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kiwikern&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://kennethfreitas.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/55669043?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kenneth Freitas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kennethfreitas&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/songe&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1531561?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;songe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-songe&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ksed.dev&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30693707?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Shekhovtsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Ksedline&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SerzN1&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2534649?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Serge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SerzN1&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyrwinz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/21241761?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;keyrwinz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyrwinz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nDmitry&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2134568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Nikitenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nDmitry&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bushuai.cc&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1875256?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bushuai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Abushuai&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bushuai&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/users/1348195/benjamin-gruenbaum&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1315533?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Gruenbaum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-benjamingr&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/byeze&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7424138?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ezequiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-byeze&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/juaoose&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/994594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Juan José Rodríguez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-juaoose&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/OrBin&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6897234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Or Bin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-OrBin&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/andreoav07&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/508827?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreo Vieira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andreoav&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mikicho&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11459632?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Solomon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mikicho&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jimmycallin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2225828?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jimmy Callin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jimmycallin&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/siddharthofficial/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/26025955?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Siddharth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-w01fS&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ryansmith.tech/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1578766?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryan3E0&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://de.linkedin.com/in/tom-boettger&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49961674?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Boettger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bttger&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jormaechea&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5612500?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joaquín Ormaechea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-jormaechea&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dfrzuz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/71859096?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dfrzuz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-dfrzuz&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victor-homyakov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/121449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Homyakov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-victor-homyakov&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://joshuahemphill.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/46608115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-josh-hemphill&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#security-josh-hemphill&quot; title=&quot;Security&quot;&gt;🛡️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alec-francis&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32949882?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alec Francis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-alec-francis&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/arjun6610&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/61268891?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;arjun6610&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-arjun6610&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jan-osch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11651780?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Osch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jan-osch&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thiagotrs&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32005779?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thiago Rotondo Sampaio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-thiagotrs&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Alexsey&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6392013?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexsey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Alexsey&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/13luismb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/32210483?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis A. Acurero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-13luismb&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lromano97.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22394847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Romano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-lromano97&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/denisecase&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13016516?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denise Case&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-denisecase&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/story/elektronik&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1078554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Ribal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-elektronik2k5&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Aelektronik2k5&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/0xflotus&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/26602940?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;0xflotus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-0xflotus&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.dijonkitchen.org/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11434205?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Chen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dijonkitchen&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dilansri&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5089728?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dilan Srilal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dilansri&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vectree.ru&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4215285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vladthelittleone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-vladthelittleone&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nikolaso.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60047271?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nik Osvalds&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nosvalds&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kdaniel21&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/39854385?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Kiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/commits?author=kdaniel21&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/forresst17&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/163352?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Forresst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-forresst&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/svenheden&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/76098?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Svenheden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-svenheden&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AustrisC&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12381652?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AustrisC&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AustrisC&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cisco0808&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60251188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kyeongtae kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-cisco0808&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://keybase.io/651z9pz968v2accj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65741741?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;007&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-6gx7iycn53ioq2e8apk1j1ypwov4giui&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.anediaz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17216937?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ane Diaz de Tuesta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-anediaz&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-anediaz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://yukioh.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23182489?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;YukiOta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-YukiOta&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yeovilhospital.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43814140?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frazer Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Fdawgs&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16746759?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Raz Luvaton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-rluvaton&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/YA21&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37298463?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuta Azumi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-YA21&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrewjbarbour&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77080074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andrewjbarbour&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andrewjbarbour&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://MasujimaRyohei.jp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17163541?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasujimaRyohei&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kubanac95&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16191931?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aleksandar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kubanac95&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://vincentjonathan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32597776?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Owl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SuspiciousLookingOwl&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yedidyas&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36074789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yedidya Schwartz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yedidyas&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#example-yedidyas&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ariel-diaz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20423540?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ariel-diaz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.koenigthomas.de/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7080389?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas König&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Vispercept&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coocos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1397804?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kalle Lämsä&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coocos&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://math.cat&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10328430?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wyatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ZhyMC&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://libkhadir.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45130488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KHADIR Tayeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tkhadir&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shankarregmi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7703345?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shankar Regmi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shankarregmi&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/codebyshubham&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10389723?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shubham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-codebyshubham&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lucalves.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17712401?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Alves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lucalves&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/benjaminudoh10&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9018331?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-benjaminudoh10&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yjoer.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47742486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.miigon.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16161991?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miigon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Miigon&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://brainstorage.me/Egregor2011&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3630318?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rostislav Bogorad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Egregor2011&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Flouse&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1297478?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Flouse&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Flouse&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://taranttini.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6922125?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tarantini Pereira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-taranttini&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kzmat&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34614358?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kazuki Matsuo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kzmat&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/burkybang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/927886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-burkybang&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://codekodo.tistory.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33795856?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dohyeon Ko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-k906506&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vlad99902&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67615003?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vladislav Legkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vlad99902&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kerolloz.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36763164?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kerollos Magdy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kerolloz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/erez-lieberman-b90b7219/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3277260?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erez Lieberman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-erezLieberman&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/breno-macedo-ernani-de-s%C3%A1-110223158/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48841329?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Breno Macedo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-breno404&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JFernando122&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40414805?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fernando Flores&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-JFernando122&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/rafaelconcept/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43880669?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Brito&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-rafaelconcept&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://emiliano-peralta-portfolio.vercel.app/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63617637?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Emiliano Peralta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-emiperalta&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lannex.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7369541?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shin, SJ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lannex&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/zt-rnuegz5e-FQpc6YboDVW~5idlp7GfDw&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/vy29n6aj/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-React</title>
      <link>https://github.com/Asabeneh/30-Days-Of-React</link>
      <description>&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. It requires HTML, CSS, and JavaScript knowledge. You should be comfortable with JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS. This challenge may take more than 100…&lt;/p&gt;&lt;hr&gt;&lt;div&gt; 
 &lt;img align=&quot;right&quot; width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/30_days_of_react.jpg&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of React&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; October, 2020&lt;/small&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;00&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;JavaScript Refresher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;Getting Started React&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&quot;&gt;Setting Up&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&quot;&gt;Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&quot;&gt;Props&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&quot;&gt;List, Map and Keys&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&quot;&gt;Class Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&quot;&gt;States&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&quot;&gt;Conditional Rendering&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&quot;&gt;React Project Folder Structure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&quot;&gt;Events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&quot;&gt;Controlled and Uncontrolled Component&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&quot;&gt;Component Life Cycles&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&quot;&gt;Third Party Packages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&quot;&gt;Higher Order Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&quot;&gt;React Router&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&quot;&gt;Fetch versus Axios&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&quot;&gt;Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&quot;&gt;Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&quot;&gt;Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&quot;&gt;Forms Using Hook&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&quot;&gt;Fetching Data Using Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&quot;&gt;Project using Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&quot;&gt;Context&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&quot;&gt;Ref&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&quot;&gt;project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&quot;&gt;Explore&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&quot;&gt;Conclusions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&quot;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&quot;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&quot;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&quot;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&quot;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&quot;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&quot;&gt;Browser&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/thirtydaysofreact&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; 
&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&quot;https://github.com/Asabeneh/30-Days-Of-JavaScript&quot;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&quot;https://t.me/thirtydaysofreact/992&quot;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
 &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use Repo&lt;/h2&gt; 
&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; 
&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; 
&lt;h3&gt;Clone your Fork&lt;/h3&gt; 
&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# note that an `ssh` link is used here, but an `https` link will work the same
git clone git@github.com:username/30-Days-Of-React.git
cd 30-Days-Of-React
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a New Branch&lt;/h3&gt; 
&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add solutions/day-01/level1.js
git commit -m &quot;chore: exercise level1 complete&quot;
git push origin exercise-solutions # branch `exercise-solutions` was created earlier
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; 
&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git merge upstream/master exercise-solutions
git push origin exercise-solutions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qier222/YesPlayMusic</title>
      <link>https://github.com/qier222/YesPlayMusic</link>
      <description>&lt;p&gt;高颜值的第三方网易云播放器，支持 Windows / macOS / Linux&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/logo.png&quot; alt=&quot;Logo&quot; width=&quot;156&quot; height=&quot;156&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot; style=&quot;font-weight: 600&quot;&gt;YesPlayMusic&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; 高颜值的第三方网易云播放器 &lt;br&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;🌎 访问DEMO&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp; &lt;a href=&quot;#%EF%B8%8F-安装&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;📦️ 下载安装包&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://music.qier222.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library.png&quot; alt=&quot;Library&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 使用 Vue.js 全家桶开发&lt;/li&gt; 
 &lt;li&gt;🔴 网易云账号登录（扫码/手机/邮箱登录）&lt;/li&gt; 
 &lt;li&gt;📺 支持 MV 播放&lt;/li&gt; 
 &lt;li&gt;📃 支持歌词显示&lt;/li&gt; 
 &lt;li&gt;📻 支持私人 FM / 每日推荐歌曲&lt;/li&gt; 
 &lt;li&gt;🚫🤝 无任何社交功能&lt;/li&gt; 
 &lt;li&gt;🌎️ 海外用户可直接播放（需要登录网易云账号）&lt;/li&gt; 
 &lt;li&gt;🔐 支持 &lt;a href=&quot;https://github.com/nondanee/UnblockNeteaseMusic&quot;&gt;UnblockNeteaseMusic&lt;/a&gt;（&lt;a href=&quot;https://github.com/revincx/UnblockNeteaseMusic&quot;&gt;使用 revincx 修复的 npm 包&lt;/a&gt;），自动使用 QQ/酷狗/酷我音源替换变灰歌曲链接 （网页版不支持）&lt;/li&gt; 
 &lt;li&gt;✔️ 每日自动签到（手机端和电脑端同时签到）&lt;/li&gt; 
 &lt;li&gt;🌚 Light/Dark Mode 自动切换&lt;/li&gt; 
 &lt;li&gt;👆 支持 Touch Bar&lt;/li&gt; 
 &lt;li&gt;🖥️ 支持 PWA，可在 Chrome/Edge 里点击地址栏右边的 ➕ 安装到电脑&lt;/li&gt; 
 &lt;li&gt;🟥 支持 Last.fm Scrobble&lt;/li&gt; 
 &lt;li&gt;☁️ 支持音乐云盘&lt;/li&gt; 
 &lt;li&gt;⌨️ 自定义快捷键和全局快捷键&lt;/li&gt; 
 &lt;li&gt;🛠 更多特性开发中&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦️ 安装&lt;/h2&gt; 
&lt;p&gt;Electron 版本由 &lt;a href=&quot;https://github.com/hawtim&quot;&gt;@hawtim&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/qier222&quot;&gt;@qier222&lt;/a&gt; 适配并维护，支持 macOS、Windows、Linux。&lt;/p&gt; 
&lt;p&gt;访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/releases&quot;&gt;Releases&lt;/a&gt; 页面下载安装包，或者访问 &lt;a href=&quot;https://dl.qier222.com/YesPlayMusic/&quot;&gt;镜像下载站 (大陆访问更快)&lt;/a&gt; 下载。&lt;/p&gt; 
&lt;p&gt;macOS 用户也可以通过 &lt;code&gt;brew install --cask yesplaymusic&lt;/code&gt; 来安装。&lt;/p&gt; 
&lt;h2&gt;⚙️ 部署至 Vercel&lt;/h2&gt; 
&lt;p&gt;除了下载安装包使用，你还可以将本项目部署到 Vercel 或你的服务器上。下面是部署到 Vercel 的方法。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://neteasecloudmusicapi.vercel.app/#/?id=%e5%ae%89%e8%a3%85&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt; 。你也可以将 API 部署到 Vercel。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击本仓库右上角的 Fork，复制本仓库到你的 GitHub 账号。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打开 &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel.com&lt;/a&gt;，使用 GitHub 登录。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Import Git Repository 并选择你刚刚复制的仓库并点击 Import。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 PERSONAL ACCOUNT 旁边的 Select。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Environment Variables，填写 Name 为 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt;，Value 为你刚刚部署的网易云 API 地址，点击 Add。最后点击底部的 Deploy 就可以部署到 Vercel 了。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;⚙️ 部署到自己的服务器&lt;/h2&gt; 
&lt;p&gt;除了部署到 Vercel，你还可以部署到自己的服务器上&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;克隆本仓库&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/qier222/YesPlayMusic.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;安装依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn install

&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;（可选）使用 Nginx 反向代理 API，将 API 路径映射为 &lt;code&gt;/api&lt;/code&gt;，如果 API 和网页不在同一个域名下的话（跨域），会有一些 bug。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt;，修改里面 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt; 的值为网易云 API 地址。本地开发的话可以填写 API 地址为 &lt;code&gt;http://localhost:3000&lt;/code&gt;，YesPlayMusic 地址为 &lt;code&gt;http://localhost:8080&lt;/code&gt;。如果你使用了反向代理 API，可以填写 API 地址为 &lt;code&gt;/api&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;VUE_APP_NETEASE_API_URL=http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;编译打包&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;将 &lt;code&gt;/dist&lt;/code&gt; 目录下的文件上传到你的 Web 服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;👷‍♂️ 打包客户端&lt;/h2&gt; 
&lt;p&gt;如果在 Release 页面没有找到适合你的设备的安装包的话，你可以根据下面的步骤来打包自己的客户端。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;打包 Electron 需要用到 Node.js 和 Yarn。可前往 &lt;a href=&quot;https://nodejs.org/zh-cn/&quot;&gt;Node.js 官网&lt;/a&gt; 下载安装包。安装 Node.js 后可在终端里执行 &lt;code&gt;npm install -g yarn&lt;/code&gt; 来安装 Yarn。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;git clone https://github.com/qier222/YesPlayMusic.git&lt;/code&gt; 克隆本仓库到本地。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;yarn install&lt;/code&gt; 安装项目依赖。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt; 。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;选择下列表格的命令来打包适合的你的安装包，打包出来的文件在 &lt;code&gt;/dist_electron&lt;/code&gt; 目录下。了解更多信息可访问 &lt;a href=&quot;https://www.electron.build/cli&quot;&gt;electron-builder 文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;命令&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:ia32&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 32 位&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows ARM&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --linux deb:armv7l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Debian armv7l（树莓派等）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --macos dir:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;macOS ARM&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; 配置开发环境&lt;/h2&gt; 
&lt;p&gt;本项目由 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;NeteaseCloudMusicApi&lt;/a&gt; 提供 API，已经包含在本项目的&lt;code&gt;netease_api&lt;/code&gt;目录。&lt;/p&gt; 
&lt;p&gt;运行本项目&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn

# 创建本地环境变量
cp .env.example .env

# 运行（网页端）
yarn serve

# 运行（electron）
yarn electron:serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;本地运行 NeteaseCloudMusicApi，或者将 API &lt;a href=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/#%EF%B8%8F-%E9%83%A8%E7%BD%B2%E8%87%B3-vercel&quot;&gt;部署至 Vercel&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn netease_api:install

# 运行 API （默认 3000 端口）
yarn netease_api:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;☑️ Todo&lt;/h2&gt; 
&lt;p&gt;查看 Todo 请访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/projects/1&quot;&gt;Projects&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;欢迎提 Issue 和 Pull request。&lt;/p&gt; 
&lt;h2&gt;📜 开源许可&lt;/h2&gt; 
&lt;p&gt;本项目仅供个人学习研究使用，禁止用于商业及非法用途。&lt;/p&gt; 
&lt;p&gt;基于 &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt; 许可进行开源。&lt;/p&gt; 
&lt;h2&gt;灵感来源&lt;/h2&gt; 
&lt;p&gt;API 源代码来自 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.apple.com&quot;&gt;Apple Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.youtube.com&quot;&gt;YouTube Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spotify.com&quot;&gt;Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.163.com&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖼️ 截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/lyrics.png&quot; alt=&quot;lyrics&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library-dark.png&quot; alt=&quot;library-dark&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/album.png&quot; alt=&quot;album&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home-2.png&quot; alt=&quot;home-2&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/artist.png&quot; alt=&quot;artist&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/search.png&quot; alt=&quot;search&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home.png&quot; alt=&quot;home&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/explore.png&quot; alt=&quot;explore&quot;&gt;&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>ascoders/weekly</title>
      <link>https://github.com/ascoders/weekly</link>
      <description>&lt;p&gt;前端精读周刊。帮你理解最前沿、实用的技术。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前端精读&lt;/h1&gt; 
&lt;a href=&quot;https://travis-ci.org/ascoders/weekly&quot;&gt; &lt;img src=&quot;https://travis-ci.org/ascoders/weekly.svg?branch=v2&quot; alt=&quot;CircleCI Status&quot;&gt; &lt;/a&gt; 
&lt;p&gt;前端界的好文精读，每周更新！&lt;/p&gt; 
&lt;p&gt;最新精读：&lt;a href=&quot;./前沿技术/208.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204.4%E3%80%8B.md&quot;&gt;208.精读《Typescript 4.4》&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;素材来源：&lt;a href=&quot;https://github.com/ascoders/weekly/issues/2&quot;&gt;周刊参考池&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;现已涵盖：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;结合大厂工作经验解读的 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF&quot;&gt;前沿技术&lt;/a&gt;，&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB&quot;&gt;源码解读&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;逐渐加入一些后端技术解读。&lt;/li&gt; 
 &lt;li&gt;一些 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%95%86%E4%B8%9A%E6%80%9D%E8%80%83&quot;&gt;商业思考&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;已完成 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86&quot;&gt;编译原理&lt;/a&gt;、&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;设计模式&lt;/a&gt; 两大基础模块。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前沿技术&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/1.%E7%B2%BE%E8%AF%BB%E3%80%8Ajs%20%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8F%91%E5%B1%95%E3%80%8B.md&quot;&gt;1.精读《js 模块化发展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/2.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%A8%A1%E6%80%81%E6%A1%86%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;2.精读《模态框的最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/3.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E5%90%8E%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B9%8B%E4%BA%89%E3%80%8B.md&quot;&gt;3.精读《前后端渲染之争》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/4.%E7%B2%BE%E8%AF%BB%E3%80%8AAsyncAwait%20%E4%BC%98%E8%B6%8A%E4%B9%8B%E5%A4%84%E3%80%8B.md&quot;&gt;4.精读《AsyncAwait 优越之处》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/5.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B0%91%E5%B7%A5%E5%8F%94%E5%8D%95%E9%A1%B5%E6%95%B0%E6%8D%AE%E6%B5%81%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;5.精读《民工叔单页数据流方案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/6.%E7%B2%BE%E8%AF%BB%E3%80%8AJavaScript%20%E9%94%99%E8%AF%AF%E5%A0%86%E6%A0%88%E5%A4%84%E7%90%86%E3%80%8B.md&quot;&gt;6.精读《JavaScript 错误堆栈处理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/7.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AF%B7%E5%81%9C%E6%AD%A2%20css-in-js%20%E7%9A%84%E8%A1%8C%E4%B8%BA%E3%80%8B.md&quot;&gt;7.精读《请停止 css-in-js 的行为》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/8.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A5%E5%9D%91%20React%20%E5%89%8D%E6%B2%A1%E6%9C%89%E4%BA%BA%E4%BC%9A%E5%91%8A%E8%AF%89%E4%BD%A0%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;8.精读《入坑 React 前没有人会告诉你的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/9.%E7%B2%BE%E8%AF%BB%E3%80%8AImmutable%20%E7%BB%93%E6%9E%84%E5%85%B1%E4%BA%AB%E3%80%8B.md&quot;&gt;9.精读《Immutable 结构共享》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/10.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20Components%20%E7%9A%84%E5%9B%B0%E5%A2%83%E3%80%8B.md&quot;&gt;10.精读《Web Components 的困境》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/11.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;11.精读《前端调试技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/12.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;12.精读《React 高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/13.%E7%B2%BE%E8%AF%BB%E3%80%8AThis%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%9B%B0%E6%83%91%E3%80%8B.md&quot;&gt;13.精读《This 带来的困惑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/14.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E4%B9%8B%20DCI%E3%80%8B.md&quot;&gt;14.精读《架构设计之 DCI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/15.%E7%B2%BE%E8%AF%BB%E3%80%8ATC39%20%E4%B8%8E%20ECMAScript%20%E6%8F%90%E6%A1%88%E3%80%8B.md&quot;&gt;15.精读《TC39 与 ECMAScript 提案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/16.%E7%B2%BE%E8%AF%BB%E3%80%8ACSS%20Animations%20vs%20Web%20Animations%20API%E3%80%8B.md&quot;&gt;16.精读《CSS Animations vs Web Animations API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/17.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%AE%89%E5%85%A8%E5%9C%B0%E4%BD%BF%E7%94%A8%20React%20context%E3%80%8B.md&quot;&gt;17.精读《如何安全地使用 React context》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/18.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E5%AE%8C%E7%BE%8E%E7%9A%84%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;18.精读《设计完美的日期选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/19.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E3%80%8B%E5%8F%8A%E9%9D%A2%E8%AF%95%E5%AE%98%E6%8A%80%E5%B7%A7.md&quot;&gt;19.精读《最佳前端面试题》及面试官技巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/20.%E7%B2%BE%E8%AF%BB%E3%80%8ANestjs%E3%80%8B%E6%96%87%E6%A1%A3.md&quot;&gt;20.精读《Nestjs》文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/21.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20fonts%3A%20when%20you%20need%20them%2C%20when%20you%20don%E2%80%99t%E3%80%8B.md&quot;&gt;21.精读《Web fonts: when you need them, when you don’t》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/22.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%E7%89%B9%E6%80%A7%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9A%84%20JS%20%E6%80%A7%E8%83%BD%E5%8F%98%E5%8C%96%E3%80%8B.md&quot;&gt;22.精读《V8 引擎特性带来的的 JS 性能变化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/23.%E7%B2%BE%E8%AF%BB%E3%80%8AAPI%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E3%80%8B.md&quot;&gt;23.精读《API 设计原则》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/24.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20JavaScript%20%E6%A6%82%E8%A7%88%E3%80%8B.md&quot;&gt;24.精读《现代 JavaScript 概览》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/25.%E7%B2%BE%E8%AF%BB%E3%80%8Anull%20%3E%3D%200%3F%E3%80%8B.md&quot;&gt;25.精读《null &amp;gt;= 0?》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/26.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8A%A0%E5%AF%86%E5%AA%92%E4%BD%93%E6%89%A9%E5%B1%95%E3%80%8B.md&quot;&gt;26.精读《加密媒体扩展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/27.%E7%B2%BE%E8%AF%BB%E3%80%8Acss-in-js%20%E6%9D%80%E9%B8%A1%E7%94%A8%E7%89%9B%E5%88%80%E3%80%8B.md&quot;&gt;27.精读《css-in-js 杀鸡用牛刀》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/28.%E7%B2%BE%E8%AF%BB%E3%80%8A2017%20%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%A4%87%E5%BF%98%E5%BD%95%E3%80%8B.md&quot;&gt;28.精读《2017 前端性能优化备忘录》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/29.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E3%80%8B.md&quot;&gt;29.精读《JS 中的内存管理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/30.%E7%B2%BE%E8%AF%BB%E3%80%8AJavascript%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%BC%82%E6%AD%A5%E3%80%8B.md&quot;&gt;30.精读《Javascript 事件循环与异步》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/31.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E4%B8%8D%E5%86%8D%E4%BD%BF%E7%94%A8%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;31.精读《我不再使用高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/32.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router4.0%20%E8%BF%9B%E9%98%B6%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;32.精读《React Router4.0 进阶概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/33.%E7%B2%BE%E8%AF%BB%E3%80%8A30%20%E8%A1%8C%20js%20%E4%BB%A3%E7%A0%81%E5%88%9B%E5%BB%BA%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E3%80%8B.md&quot;&gt;33.精读《30 行 js 代码创建神经网络》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/34.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%E3%80%8B.md&quot;&gt;34.精读《React 代码整洁之道》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/35.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E3%80%8B.md&quot;&gt;35.精读《dob - 框架实现》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/36.%E7%B2%BE%E8%AF%BB%E3%80%8AWhen%20You%20%E2%80%9CGit%E2%80%9D%20in%20Trouble-%20a%20Version%20Control%20Story%E3%80%8B.md&quot;&gt;36.精读《When You “Git” in Trouble- a Version Control Story》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/37.%E7%B2%BE%E8%AF%BB%E3%80%8Ahow%20we%20position%20and%20what%20we%20compare%E3%80%8B.md&quot;&gt;37.精读《how we position and what we compare》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/38.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;38.精读《dob - 框架使用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/39.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A8%E9%93%BE%E8%B7%AF%E4%BD%93%E9%AA%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8C%96%E7%9F%BF%E3%80%8B.md&quot;&gt;39.精读《全链路体验浏览器挖矿》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/40.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%9D%E6%8E%A2%20Reason%20%E4%B8%8E%20GraphQL%E3%80%8B.md&quot;&gt;40.精读《初探 Reason 与 GraphQL》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/41.%E7%B2%BE%E8%AF%BB%E3%80%8AAnt%20Design%203.0%20%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B.md&quot;&gt;41.精读《Ant Design 3.0 背后的故事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/42.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%B5%81%E5%93%B2%E5%AD%A6%E3%80%8B.md&quot;&gt;42.精读《前端数据流哲学》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/43.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A2%9E%E5%BC%BA%E7%8E%B0%E5%AE%9E%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B.md&quot;&gt;43.精读《增强现实与可视化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/44.%E7%B2%BE%E8%AF%BB%E3%80%8ARekit%20Studio%E3%80%8B.md&quot;&gt;44.精读《Rekit Studio》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/45.%E7%B2%BE%E8%AF%BB%E3%80%8AReact&#39;s%20new%20Context%20API%E3%80%8B.md&quot;&gt;45.精读《React&#39;s new Context API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/46.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-rxjs%E3%80%8B.md&quot;&gt;46.精读《react-rxjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/47.%E7%B2%BE%E8%AF%BB%E3%80%8Awebpack4.0%20%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;47.精读《webpack4.0 升级指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/49.%E7%B2%BE%E8%AF%BB%E3%80%8ACompilers%20are%20the%20New%20Frameworks%E3%80%8B.md&quot;&gt;49.精读《Compilers are the New Frameworks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/50.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%9E%84%E5%BB%BA%20ARKit%20%E5%BA%94%E7%94%A8%E3%80%8B.md&quot;&gt;50.精读《快速上手构建 ARKit 应用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/51.%E7%B2%BE%E8%AF%BB%E3%80%8AElements%20of%20Web%20Dev%E3%80%8B.md&quot;&gt;51.精读《Elements of Web Dev》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/52.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BE%E8%A7%A3%20ES%20%E6%A8%A1%E5%9D%97%E3%80%8B.md&quot;&gt;52.精读《图解 ES 模块》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/53.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8F%92%E4%BB%B6%E5%8C%96%E6%80%9D%E7%BB%B4%E3%80%8B.md&quot;&gt;53.精读《插件化思维》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/54.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%20serverRender%E3%80%8B.md&quot;&gt;54.精读《在浏览器运行 serverRender》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/55.%E7%B2%BE%E8%AF%BB%E3%80%8Aasync%20await%20%E6%98%AF%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%E3%80%8B.md&quot;&gt;55.精读《async await 是把双刃剑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/56.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%20Redux%E3%80%8B.md&quot;&gt;56.精读《重新思考 Redux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/57.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20js%20%E6%A1%86%E6%9E%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E3%80%8B.md&quot;&gt;57.精读《现代 js 框架存在的根本原因》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/58.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript2.0%20-%202.9%E3%80%8B.md&quot;&gt;58.精读《Typescript2.0 - 2.9》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/59.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%20Nodejs%20%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%8B.md&quot;&gt;59.精读《如何利用 Nodejs 监听文件夹》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/60.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%9C%A8%20nodejs%20%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E3%80%8B.md&quot;&gt;60.精读《如何在 nodejs 使用环境变量》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/61.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E5%85%AB%E7%A7%8D%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;61.精读《React 八种条件渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/62.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E5%BC%95%E6%93%8E%E5%9F%BA%E7%A1%80%E4%B9%8B%20Shapes%20and%20Inline%20Caches%E3%80%8B.md&quot;&gt;62.精读《JS 引擎基础之 Shapes and Inline Caches》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/63.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E7%9A%84%E5%A4%9A%E6%80%81%E6%80%A7%E3%80%8B.md&quot;&gt;63.精读《React 的多态性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/68.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%A1%A1%E9%87%8F%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E3%80%8B.md&quot;&gt;68.精读《衡量用户体验》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/69.%E7%B2%BE%E8%AF%BB%E3%80%8ASQL%20vs%20Flux%E3%80%8B.md&quot;&gt;69.精读《SQL vs Flux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/72.%E7%B2%BE%E8%AF%BB%E3%80%8AREST%2C%20GraphQL%2C%20Webhooks%2C%20%26%20gRPC%20%E5%A6%82%E4%BD%95%E9%80%89%E5%9E%8B%E3%80%8B.md&quot;&gt;72.精读《REST, GraphQL, Webhooks, &amp;amp; gRPC 如何选型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/74.%E7%B2%BE%E8%AF%BB%E3%80%8A12%20%E4%B8%AA%E8%AF%84%E4%BC%B0%20JS%20%E5%BA%93%E4%BD%A0%E9%9C%80%E8%A6%81%E5%85%B3%E5%BF%83%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;74.精读《12 个评估 JS 库你需要关心的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/76.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%88%E8%B0%88%20Web%20Workers%E3%80%8B.md&quot;&gt;76.精读《谈谈 Web Workers》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/77.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Reduce%20%E5%AE%9E%E7%8E%B0%20Promise%20%E4%B8%B2%E8%A1%8C%E6%89%A7%E8%A1%8C%E3%80%8B.md&quot;&gt;77.精读《用 Reduce 实现 Promise 串行执行》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/79.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%E3%80%8B.md&quot;&gt;79.精读《React Hooks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/80.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%80%8E%E4%B9%88%E7%94%A8%20React%20Hooks%20%E9%80%A0%E8%BD%AE%E5%AD%90%E3%80%8B.md&quot;&gt;80.精读《怎么用 React Hooks 造轮子》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/81.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20CSS%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;81.精读《使用 CSS 属性选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/83.%E7%B2%BE%E8%AF%BB%E3%80%8AReact16%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;83.精读《React16 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/84.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%203.2%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;84.精读《Typescript 3.2 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/86.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BD%E9%99%85%E5%8C%96%E5%B8%83%E5%B1%80%20-%20Logical%20Properties%E3%80%8B.md&quot;&gt;86.精读《国际化布局 - Logical Properties》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/87.%E7%B2%BE%E8%AF%BB%E3%80%8AsetState%20%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;87.精读《setState 做了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/88.%E7%B2%BE%E8%AF%BB%E3%80%8ACaches%20API%E3%80%8B.md&quot;&gt;88.精读《Caches API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/89.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E4%B8%8E%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;89.精读《如何编译前端项目与组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/91.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E5%88%99%20ES2018%E3%80%8B.md&quot;&gt;91.精读《正则 ES2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/94.%E7%B2%BE%E8%AF%BB%E3%80%8AServerless%20%E7%BB%99%E5%89%8D%E7%AB%AF%E5%B8%A6%E6%9D%A5%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;94.精读《Serverless 给前端带来了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/95.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20VS%20Class%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;95.精读《Function VS Class 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/96.%E7%B2%BE%E8%AF%BB%E3%80%8AuseEffect%20%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;96.精读《useEffect 完全指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/97.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BC%96%E5%86%99%E6%9C%89%E5%BC%B9%E6%80%A7%E7%9A%84%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;97.精读《编写有弹性的组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/99.%E7%B2%BE%E8%AF%BB%E3%80%8AScheduling%20in%20React%E3%80%8B.md&quot;&gt;99.精读《Scheduling in React》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/100.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%20Lazy%20Parsing%E3%80%8B.md&quot;&gt;100.精读《V8 引擎 Lazy Parsing》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/101.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%20vs%20%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98%20vs%20%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2%E3%80%8B.md&quot;&gt;101.精读《持续集成 vs 持续交付 vs 持续部署》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/102.%E7%B2%BE%E8%AF%BB%E3%80%8AMonorepo%20%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%8B.md&quot;&gt;102.精读《Monorepo 的优势》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/104.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20Component%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;104.精读《Function Component 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/105.%E7%B2%BE%E8%AF%BB%E3%80%8AWhat&#39;s%20new%20in%20javascript%E3%80%8B.md&quot;&gt;105.精读《What&#39;s new in javascript》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/107.%E7%B2%BE%E8%AF%BB%E3%80%8AOptional%20chaining%E3%80%8B.md&quot;&gt;107.精读《Optional chaining》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/109.%E7%B2%BE%E8%AF%BB%E3%80%8AVue3.0%20Function%20API%E3%80%8B.md&quot;&gt;109.精读《Vue3.0 Function API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/111.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B%E3%80%8B.md&quot;&gt;111.精读《前端未来展望》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/112.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E3%80%8B.md&quot;&gt;112.精读《源码学习》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/113.%E7%B2%BE%E8%AF%BB%E3%80%8ANodejs%20V12%E3%80%8B.md&quot;&gt;113.精读《Nodejs V12》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/117.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E6%8E%A2%E7%B4%A2%E5%BC%8F%E6%A8%A1%E5%9E%8B%E3%80%8B.md&quot;&gt;117.精读《Tableau 探索式模型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/118.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20css%20%E5%8F%98%E9%87%8F%E7%94%9F%E6%88%90%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98%E3%80%8B.md&quot;&gt;118.精读《使用 css 变量生成颜色主题》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/119.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%B7%B1%E6%B0%B4%E5%8C%BA%E3%80%8B.md&quot;&gt;119.精读《前端深水区》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/120.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;120.精读《React Hooks 最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/121.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E4%B8%8E%20BI%E3%80%8B.md&quot;&gt;121.精读《前端与 BI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/123.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Babel%20%E5%88%9B%E9%80%A0%E8%87%AA%E5%AE%9A%E4%B9%89%20JS%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;123.精读《用 Babel 创造自定义 JS 语法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/124.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20css%20grid%20%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%E5%B8%83%E5%B1%80%E3%80%8B.md&quot;&gt;124.精读《用 css grid 重新思考布局》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/125.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%20-%20%E5%87%BD%E6%95%B0%E5%BC%8F%E4%B9%8B%E7%BE%8E%E3%80%8B.md&quot;&gt;125.精读《深度学习 - 函数式之美》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/126.%E7%B2%BE%E8%AF%BB%E3%80%8ANuxtjs%E3%80%8B.md&quot;&gt;126.精读《Nuxtjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/127.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day1%E3%80%8B.md&quot;&gt;127.精读《React Conf 2019 - Day1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/129.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day2%E3%80%8B.md&quot;&gt;129.精读《React Conf 2019 - Day2》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/132.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E4%BA%A4%E7%9A%84%20React%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;132.精读《正交的 React 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/133.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%BB%E6%89%BE%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%B9%B3%E8%A1%A1%E7%82%B9%E3%80%8B.md&quot;&gt;133.精读《寻找框架设计的平衡点》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/134.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E5%9C%A8%E9%98%BF%E9%87%8C%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%E5%A4%A7%E5%89%8D%E7%AB%AF%E3%80%8B.md&quot;&gt;134.精读《我在阿里数据中台大前端》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/138.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%B2%BE%E9%80%9A%20console.log%E3%80%8B.md&quot;&gt;138.精读《精通 console.log》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/139.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20JSON%20Parser%E3%80%8B.md&quot;&gt;139.精读《手写 JSON Parser》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/140.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BB%93%E5%90%88%20React%20%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9F%20Drag%20Drop%20API%E3%80%8B.md&quot;&gt;140.精读《结合 React 使用原生 Drag Drop API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/141.%E7%B2%BE%E8%AF%BB%E3%80%8AuseRef%20%E4%B8%8E%20createRef%20%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;141.精读《useRef 与 createRef 的区别》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/142.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%81%9A%E5%A5%BD%20CodeReview%E3%80%8B.md&quot;&gt;142.精读《如何做好 CodeReview》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/143.%E7%B2%BE%E8%AF%BB%E3%80%8ASuspense%20%E6%94%B9%E5%8F%98%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E3%80%8B.md&quot;&gt;143.精读《Suspense 改变开发方式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/144.%E7%B2%BE%E8%AF%BB%E3%80%8AWebpack5%20%E6%96%B0%E7%89%B9%E6%80%A7%20-%20%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6%E3%80%8B.md&quot;&gt;144.精读《Webpack5 新特性 - 模块联邦》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/145.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router%20v6%E3%80%8B.md&quot;&gt;145.精读《React Router v6》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/146.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E3%80%8B.md&quot;&gt;146.精读《React Hooks 数据流》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/147.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40types%20react%20%E5%80%BC%E5%BE%97%E6%B3%A8%E6%84%8F%E7%9A%84%20TS%20%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;147. 精读《@types react 值得注意的 TS 技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/148.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Error%20Boundaries%E3%80%8B.md&quot;&gt;148. 精读《React Error Boundaries》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/149.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95%E3%80%8B.md&quot;&gt;149. 精读《React 性能调试》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/150.%20%E7%B2%BE%E8%AF%BB%E3%80%8ADeno%201.0%20%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E3%80%8B.md&quot;&gt;150. 精读《Deno 1.0 你需要了解的》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/152.%20%E7%B2%BE%E8%AF%BB%E3%80%8Arecoil%E3%80%8B.md&quot;&gt;152. 精读《recoil》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/153.%20%E7%B2%BE%E8%AF%BB%E3%80%8Asnowpack%E3%80%8B.md&quot;&gt;153. 精读《snowpack》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/154.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20React%20%E5%81%9A%E6%8C%89%E9%9C%80%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;154. 精读《用 React 做按需渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/157.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E6%AF%94%E8%BE%83%20Object%20%E5%AF%B9%E8%B1%A1%E3%80%8B.md&quot;&gt;157. 精读《如何比较 Object 对象》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/158.%20%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204%E3%80%8B.md&quot;&gt;158. 精读《Typescript 4》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/159.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%B9%E4%BD%8E%E4%BB%A3%E7%A0%81%E6%90%AD%E5%BB%BA%E7%9A%84%E7%90%86%E8%A7%A3%E3%80%8B.md&quot;&gt;159. 精读《对低代码搭建的理解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/160.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%87%BD%E6%95%B0%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;160. 精读《函数缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/161.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E6%90%AD%E5%BB%BA%E6%80%9D%E8%80%83%20-%20%E5%AF%8C%E6%96%87%E6%9C%AC%E6%90%AD%E5%BB%BA%E3%80%8B.md&quot;&gt;161.精读《可视化搭建思考 - 富文本搭建》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/162.%E7%B2%BE%E8%AF%BB%E3%80%8ATasks%2C%20microtasks%2C%20queues%20and%20schedules%E3%80%8B.md&quot;&gt;162.精读《Tasks, microtasks, queues and schedules》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/163.%E7%B2%BE%E8%AF%BB%E3%80%8ASpring%20%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;163.精读《Spring 概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/164.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E8%AE%BE%E8%AE%A1%E5%99%A8%E3%80%8B.md&quot;&gt;164.精读《数据搭建引擎 bi-designer API-设计器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/165.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;165.精读《数据搭建引擎 bi-designer API-组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/166.%E7%B2%BE%E8%AF%BB%E3%80%8ABI%20%E6%90%AD%E5%BB%BA%20-%20%E7%AD%9B%E9%80%89%E6%9D%A1%E4%BB%B6%E3%80%8B.md&quot;&gt;166.精读《BI 搭建 - 筛选条件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/190.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E3%80%8B.md&quot;&gt;190.精读《DOM diff 原理详解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/191.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BD%E8%A1%A8%E6%A0%BC%E3%80%8B.md&quot;&gt;191.精读《高性能表格》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/192.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%8B.md&quot;&gt;192.精读《DOM diff 最长上升子序列》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/193.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Server%20Component%E3%80%8B.md&quot;&gt;193.精读《React Server Component》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/194.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B.md&quot;&gt;194.精读《算法基础数据结构》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/195.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%96%B0%E4%B8%80%E4%BB%A3%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E3%80%8B.md&quot;&gt;195.精读《新一代前端构建工具对比》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/196.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%20-%202021%20%E5%B9%B4%E3%80%8B.md&quot;&gt;196.精读《前端职业规划 - 2021 年》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/197.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%8E%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E7%BC%96%E6%8E%92%E3%80%8B.md&quot;&gt;197.精读《低代码逻辑编排》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/202.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%2018%E3%80%8B.md&quot;&gt;202.精读《React 18》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/204.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%BB%98%E8%AE%A4%E3%80%81%E5%91%BD%E5%90%8D%E5%AF%BC%E5%87%BA%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;204.精读《默认、命名导出的区别》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/205.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20with%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;205.精读《JS with 语法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/206.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%80%E7%A7%8D%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;206.精读《一种 Hooks 数据流管理方案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/207.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%20infer%20%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%8B.md&quot;&gt;207.精读《Typescript infer 关键字》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/208.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204.4%E3%80%8B.md&quot;&gt;208.精读《Typescript 4.4》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;设计模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/167.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Abstract%20Factory%20%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E3%80%8B.md&quot;&gt;167.精读《设计模式 - Abstract Factory 抽象工厂》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/168.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Builder%20%E7%94%9F%E6%88%90%E5%99%A8%E3%80%8B.md&quot;&gt;168.精读《设计模式 - Builder 生成器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/169.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Factory%20Method%20%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%8B.md&quot;&gt;169.精读《设计模式 - Factory Method 工厂方法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/170.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Prototype%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;170.精读《设计模式 - Prototype 原型模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/171.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Singleton%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;171.精读《设计模式 - Singleton 单例模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/172.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Adapter%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;172.精读《设计模式 - Adapter 适配器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/173.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Bridge%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;173.精读《设计模式 - Bridge 桥接模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/174.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Composite%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;174.精读《设计模式 - Composite 组合模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/175.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Decorator%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;175.精读《设计模式 - Decorator 装饰器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/176.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Facade%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;176.精读《设计模式 - Facade 外观模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/177.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Flyweight%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;177.精读《设计模式 - Flyweight 享元模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/178.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Proxy%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;178.精读《设计模式 - Proxy 代理模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/179.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Chain%20of%20Responsibility%20%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;179.精读《设计模式 - Chain of Responsibility 职责链模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/180.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Command%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;180.精读《设计模式 - Command 命令模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/181.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Interpreter%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;181.精读《设计模式 - Interpreter 解释器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/182.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Iterator%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;182.精读《设计模式 - Iterator 迭代器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/183.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Mediator%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;183.精读《设计模式 - Mediator 中介者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/184.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Memoto%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;184.精读《设计模式 - Memoto 备忘录模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/185.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Observer%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;185.精读《设计模式 - Observer 观察者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/186.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20State%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;186.精读《设计模式 - State 状态模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/187.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Strategy%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;187.精读《设计模式 - Strategy 策略模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/188.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Template%20Method%20%E6%A8%A1%E7%89%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;188.精读《设计模式 - Template Method 模版模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/189.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Visitor%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;189.精读《设计模式 - Visitor 访问者模式》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;编译原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/64.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;64.精读《手写 SQL 编译器 - 词法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/65.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%96%87%E6%B3%95%E4%BB%8B%E7%BB%8D%E3%80%8B.md&quot;&gt;65.精读《手写 SQL 编译器 - 文法介绍》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/66.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;66.精读《手写 SQL 编译器 - 语法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/67.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;67.精读《手写 SQL 编译器 - 回溯》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/70.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E6%A0%91%E3%80%8B.md&quot;&gt;70.精读《手写 SQL 编译器 - 语法树》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/71.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;71.精读《手写 SQL 编译器 - 错误提示》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/78.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;78.精读《手写 SQL 编译器 - 性能优化之缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/85.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;85.精读《手写 SQL 编译器 - 智能提示》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;源码解读&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/48.%E7%B2%BE%E8%AF%BB%E3%80%8AImmer.js%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;48.精读《Immer.js》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/73.%E7%B2%BE%E8%AF%BB%E3%80%8Asqorn%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;73.精读《sqorn 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/75.%E7%B2%BE%E8%AF%BB%E3%80%8AEpitath%20%E6%BA%90%E7%A0%81%20-%20renderProps%20%E6%96%B0%E7%94%A8%E6%B3%95%E3%80%8B.md&quot;&gt;75.精读《Epitath 源码 - renderProps 新用法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/82.%E7%B2%BE%E8%AF%BB%E3%80%8AHtm%20-%20Hyperscript%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;82.精读《Htm - Hyperscript 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/92.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20PowerPlug%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;92.精读《React PowerPlug 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/93.%E7%B2%BE%E8%AF%BB%E3%80%8Asyntax-parser%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;93.精读《syntax-parser 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/98.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-easy-state%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;98.精读《react-easy-state 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/110.%E7%B2%BE%E8%AF%BB%E3%80%8AInject%20Instance%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;110.精读《Inject Instance 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/122.%E7%B2%BE%E8%AF%BB%E3%80%8Arobot%20%E6%BA%90%E7%A0%81%20-%20%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E3%80%8B.md&quot;&gt;122.精读《robot 源码 - 有限状态机》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/128.%E7%B2%BE%E8%AF%BB%E3%80%8AHooks%20%E5%8F%96%E6%95%B0%20-%20swr%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;128.精读《Hooks 取数 - swr 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/130.%E7%B2%BE%E8%AF%BB%E3%80%8Aunstated%20%E4%B8%8E%20unstated-next%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;130.精读《unstated 与 unstated-next 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/151.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40umijs%20use-request%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;151. 精读《@umijs use-request》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/155.%20%E7%B2%BE%E8%AF%BB%E3%80%8Ause-what-changed%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;155. 精读《use-what-changed 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/156.%20%E7%B2%BE%E8%AF%BB%E3%80%8Areact-intersection-observer%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;156. 精读《react-intersection-observer 源码》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;商业思考&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/90.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%202019%E3%80%8B.md&quot;&gt;90.精读《极客公园 2019》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/103.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%93%E5%AE%B6%E4%B8%8D%E5%86%8D%E5%85%B3%E5%BF%83%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E3%80%8B.md&quot;&gt;103.精读《为什么专家不再关心技术细节》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/106.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E4%B9%8B%E4%B8%8A%C2%B7%E6%99%BA%E6%85%A7%E4%B9%8B%E5%85%89%20-%202018%E3%80%8B.md&quot;&gt;106.精读《数据之上·智慧之光 - 2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/108.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%99%BA%E8%83%BD%E5%95%86%E4%B8%9A%E3%80%8B.md&quot;&gt;108.精读《智能商业》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/114.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%81%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B8%AD%E5%BF%83%E3%80%8B.md&quot;&gt;114.精读《谁在世界中心》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/115.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;115.精读《Tableau 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/116.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%B7%E6%96%B0%E3%80%8B.md&quot;&gt;116.精读《刷新》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/131.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BB%8E%200%20%E5%88%B0%201%E3%80%8B.md&quot;&gt;131.精读《从 0 到 1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/135.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8A%E3%80%8B.md&quot;&gt;135.精读《极客公园 IFX - 上》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/136.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8B%E3%80%8B.md&quot;&gt;136.精读《极客公园 IFX - 下》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/137.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BD%93%E6%88%91%E5%9C%A8%E5%88%86%E4%BA%AB%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F%E3%80%8B.md&quot;&gt;137.精读《当我在分享的时候，我在做什么？》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;算法&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/198.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8B.md&quot;&gt;198.精读《算法 - 动态规划》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/199.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E3%80%8B.md&quot;&gt;199.精读《算法 - 滑动窗口》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/200.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;200.精读《算法 - 回溯》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/201.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%8B.md&quot;&gt;201.精读《算法 - 二叉树》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/203.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%8B.md&quot;&gt;203.精读《算法 - 二叉搜索树》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关注前端精读微信公众号&lt;/h2&gt; 
&lt;img width=&quot;200&quot; src=&quot;https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg&quot;&gt;</description>
    </item>
    
    <item>
      <title>yogeshojha/rengine</title>
      <link>https://github.com/yogeshojha/rengine</link>
      <description>&lt;p&gt;reNgine is a reconnaissance engine(framework) that does end-to-end reconnaissance with the help of highly configurable scan engines and does information gathering about the target web application. reNgine makes use of various open-source tools and makes a configurable pipeline of reconnaissance.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://rengine.wiki&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/banner.gif&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yogeshojha/rengine/releases&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/version-v1.0.1-informational?&amp;amp;logo=none&quot; alt=&quot;reNgine Latest Version&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPLv3-red.svg?&amp;amp;logo=none&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://github.com/yogeshojha/rengine/issues&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/yogeshojha/rengine?color=red&amp;amp;logo=none&quot; alt=&quot;reNgine Issues&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?&amp;amp;logo=none&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://huntr.dev/bounties/disclose/?target=https%3A%2F%2Fgithub.com%2Fyogeshojha%2Frengine&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.huntr.dev/huntr_security_badge_mono.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=A1oNOIc0h5A&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Black--Hat--Arsenal-Europe--2020-blue.svg?&amp;amp;logo=none&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://www.youtube.com/watch?v=7uvP6MaQOX0&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Black--Hat--Arsenal-USA--2021-blue.svg?logo=none&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://drive.google.com/file/d/1Bh8lbf-Dztt5ViHJVACyrXMiglyICPQ2/view?usp=sharing&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Defcon--Demolabs--29-2021-blue.svg?logo=none&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/yogeshojha/rengine/actions/workflows/codeql-analysis.yml&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/yogeshojha/rengine/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://github.com/yogeshojha/rengine/actions/workflows/build.yml&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/yogeshojha/rengine/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/H6WzebwX3H&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/880363103689277461&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt;An automated reconnaissance framework for web applications with focus on highly configurable streamlined recon process via Engines, recon data correlation and organization, continuous monitoring, backed by database and simple yet intuitive User Interface.&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt; reNgine makes is easy for penetration testers to gather reconnaissance with minimal configuration and with the help of reNgine&#39;s correlation, it just makes recon effortless. &lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Dashboard&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Scan Results&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/1.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/2.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; ⭐&lt;a href=&quot;https://rengine.wiki&quot;&gt;reNgine Documentation&lt;/a&gt; · &lt;a href=&quot;https://rengine.wiki/changelog/&quot;&gt;What&#39;s new&lt;/a&gt; · &lt;a href=&quot;https://github.com/yogeshojha/rengine/raw/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt; · &lt;a href=&quot;https://github.com/yogeshojha/rengine/issues&quot;&gt;Report Bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/yogeshojha/rengine/issues&quot;&gt;Request Feature&lt;/a&gt;⭐ &lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#about-reNgine&quot;&gt;About reNgine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#changelog&quot;&gt;What&#39;s new in reNgine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#quick-installation&quot;&gt;Quick Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#reNgine-bug-bounty-program&quot;&gt;reNgine Bug Bounty Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#reNgine-support&quot;&gt;reNgine Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#related-projects&quot;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#support-and-sponsoring&quot;&gt;Support and Sponsor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#acknowledgements-and-credits&quot;&gt;Acknowledgements &amp;amp; Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;About reNgine&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/rengine_1.jpeg&quot;&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;p&gt;reNgine is an automated reconnaissance framework with a focus on a highly configurable streamlined recon process. reNgine is backed by a database, with data correlation and organization, the custom query “like” language for recon data filtering, reNgine aims to address the shortcomings of traditional recon workflow. Developers behind the reNgine understand that recon data can be huge, manually looking up for entries to attack could be cumbersome, with features like Auto Interesting Subdomains discovery, reNgine automatically identifies interesting subdomains to attack based on certain keywords (both built-in and custom) and helps penetration testers focus on attack rather than recon.&lt;/p&gt; 
&lt;p&gt;reNgine is also focused on continuous monitoring. Penetration testers can choose to schedule the scan at periodic intervals, get notified on notification channels like Discord, Slack, and Telegram for any new subdomains or vulnerabilities identified, or any recon data changes.&lt;/p&gt; 
&lt;p&gt;Interoperability is something every recon tool needs, and reNgine is no different. Beginning reNgine 1.0, we additionally developed features such as import and export subdomains, endpoints, GF pattern matched endpoints, etc. This will allow you to use your favourite recon workflow in conjunction with reNgine.&lt;/p&gt; 
&lt;p&gt;reNgine features Highly configurable scan engines based on YAML, that allows penetration testers to create as many recon engines as they want of their choice, configure as they wish, and use it against any targets for the scan. These engines allow penetration testers to use tools of their choice, the configuration of their choice. Out of the box, reNgine comes with several scan engines like Full Scan, Passive Scan, Screenshot gathering, OSINT Engine, etc.&lt;/p&gt; 
&lt;p&gt;Our focus has always been on finding the right recon data with very minimal effort. While having a discussion with fellow hackers/pentesters, screenshots gallery was a must, reNgine 1.0 also comes with a screenshot gallery, and what&#39;s exciting than having a screenshot gallery with filters, filter screenshots with HTTP status, technology, ports, and services.&lt;/p&gt; 
&lt;p&gt;We also want our fellow hackers to stay ahead of the game, reNgine 1.0 introduces automatic vulnerability reporting (currently only Hackerone is supported, other platforms &lt;em&gt;may&lt;/em&gt; come soon). This allows hackers to define their own vulnerability report template and reNgine will do the rest of the job to report vulnerability as soon as it is identified.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Perform Recon: Subdomain Discovery, Ports Discovery, Endpoints Discovery, Directory Bruteforce, Screenshot gathering&lt;/li&gt; 
 &lt;li&gt;IP Discovery, CNAME discovery, Vulnerability scan using Nuclei&lt;/li&gt; 
 &lt;li&gt;Ability to Automatically report Vulnerabilities to Hackerone&lt;/li&gt; 
 &lt;li&gt;Support for Parallel Scans&lt;/li&gt; 
 &lt;li&gt;Recon Data visualization&lt;/li&gt; 
 &lt;li&gt;Highly configurable scan engines&lt;/li&gt; 
 &lt;li&gt;OSINT Capabilities (Metainfo Gathering, Employees Gathering, Email Address with option to look password in leaked database, dorks etc)&lt;/li&gt; 
 &lt;li&gt;Customizable Alerts/Notification on Slack, Discord and Telegram&lt;/li&gt; 
 &lt;li&gt;Perform Advanced Query lookup using natural language alike and, or, not operations&lt;/li&gt; 
 &lt;li&gt;Support for Recon Notes and Todos&lt;/li&gt; 
 &lt;li&gt;Support for Clocked Scans (Run reconnaissance exactly at X Hours and Y minutes) and Periodic Scans (Runs reconnaissance every X minutes/hours/days/week)&lt;/li&gt; 
 &lt;li&gt;Proxy Support&lt;/li&gt; 
 &lt;li&gt;Screenshot Gallery with Filters&lt;/li&gt; 
 &lt;li&gt;Powerful recon data filtering with auto suggestions&lt;/li&gt; 
 &lt;li&gt;Recon Data changes, finds new/removed subdomains/endpoints&lt;/li&gt; 
 &lt;li&gt;Support for tagging targets into Organization&lt;/li&gt; 
 &lt;li&gt;Ability to identify Interesting Subdomains&lt;/li&gt; 
 &lt;li&gt;Support for custom GF patterns and custom Nuclei Templates&lt;/li&gt; 
 &lt;li&gt;Support for editing tool related configuration files (Nuclei, Subfinder, Naabu, amass)&lt;/li&gt; 
 &lt;li&gt;Ability to Mark Important Subdomains&lt;/li&gt; 
 &lt;li&gt;Interoperable with other tools, Import/Export Subdomains/Endpoints&lt;/li&gt; 
 &lt;li&gt;Option to send scan data directly to discord&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find reNgine documentation at &lt;a href=&quot;https://rengine.wiki&quot;&gt;https://rengine.wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;General Usage&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/3.gif&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dark Mode&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/dark.gif&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recon Data filtering&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/filtering.gif&quot;&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other Screenshots (Click to Expand!)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Auto Report Vulnerability to hackerone with customizable vulnerability report template&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/hackerone1.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Report Vulnerability Manually&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/hackerone.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Customizable Notification&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/notif.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Tagging Organization&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/organization.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Recon data Visualization&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/visualization.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Upload custom GF and Nuclei patterns, with option to edit tool configuration&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/tool.gif&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Recon TODO&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/screenshots/todo.gif&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;You can watch &lt;a href=&quot;https://www.youtube.com/watch?v=_jBf_9qEG3U&quot;&gt;reNgine 1.0 release trailer here.&lt;/a&gt; (Recommended)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://rengine.wiki/changelog/&quot;&gt;Please find the latest release notes and changelog here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;(Only Ubuntu/VPS)&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/yogeshojha/rengine &amp;amp;&amp;amp; cd rengine
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Edit the dotenv file, &lt;strong&gt;please make sure to change the password for postgresql POSTGRES_PASSWORD !&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;nano .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Run the installation script, Please keep an eye for any prompt, you will also be asked for username and password for reNgine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;sudo ./install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;if &lt;code&gt;./install.sh&lt;/code&gt; does not have install permission, please change it, &lt;code&gt;chmod +x install.sh&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;reNgine can now be accessed from &lt;a href=&quot;https://127.0.0.1&quot;&gt;https://127.0.0.1&lt;/a&gt; or if you&#39;re on the VPS https://your_vps_ip_address&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Installation (Mac/Windows/Other)&lt;/h2&gt; 
&lt;p&gt;Installation instructions can be found at &lt;a href=&quot;https://reNgine.wiki&quot;&gt;https://reNgine.wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;reNgine Bug Bounty Program&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://huntr.dev/bounties/disclose/?target=https%3A%2F%2Fgithub.com%2Fyogeshojha%2Frengine&quot;&gt;&lt;img src=&quot;https://cdn.huntr.dev/huntr_security_badge_mono.svg?sanitize=true&quot; alt=&quot;huntr&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Security Researchers, welcome onboard! I am excited to announce bug bounty program for reNgine in collaboration with &lt;a href=&quot;https://huntr.dev&quot;&gt;huntr.dev&lt;/a&gt;, this means you&#39;ll be rewarded for any security vulnerabilities discovered in reNgine.&lt;/p&gt; 
&lt;p&gt;Thank you for your interest in reporting vulnerabilities to reNgine! If you are aware of potential security vulnerabilities within reNgine, we encourage you to report immediately via &lt;a href=&quot;https://huntr.dev/bounties/disclose/?target=https%3A%2F%2Fgithub.com%2Fyogeshojha%2Frengine&quot;&gt;huntr.dev&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please do not disclose any vulnerabilities via Github Issues/Blogs/Tweets after/before reporting on huntr.dev as it is explicitly against huntr.dev and reNgine disclosure policy and will not be eligible for monetary rewards.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please note that the maintainer of reNgine does not determine the bounty amount. The bounty reward is determined by industry-first equation from huntr.dev to understand the popularity, impact and value of repositories to the open source community.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What do I expect from security researchers?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Patience: Please note that currently I am the only maintainer in reNgine and will take sometime to validate your report. I request your patience throughout the process.&lt;/li&gt; 
 &lt;li&gt;Respect Privacy and Security Reports: Please do not disclose any vulnerabilities in public (this also includes github issues) before or after reporting on huntr.dev! That is against the disclosure policy and will not be eligible for monetary rewards.&lt;/li&gt; 
 &lt;li&gt;Respect the rules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;What do you get in return?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Much thanks from Maintainer&lt;/li&gt; 
 &lt;li&gt;Monetary Rewards&lt;/li&gt; 
 &lt;li&gt;CVE ID(s)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please find the &lt;a href=&quot;https://www.huntr.dev/faq&quot;&gt;FAQ&lt;/a&gt; and &lt;a href=&quot;https://www.huntr.dev/policy/&quot;&gt;Responsible disclosure policy&lt;/a&gt; from huntr.dev.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;. Your contributions could be as simple as fixing the indentations or fixing UI to as complex as bringing new modules and features.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/.github/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;You can also &lt;a href=&quot;https://discord.gg/JuhHdHTtwd&quot;&gt;join our discord channel #development&lt;/a&gt; for any development related queries.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;First-time Open Source contributors&lt;/h3&gt; 
&lt;p&gt;Please note that reNgine is beginner-friendly. If you have never done any open-source yet, we encourage you to do so. &lt;strong&gt;We will be happy and proud of your first PR ever.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can begin with resolving any &lt;a href=&quot;https://github.com/yogeshojha/rengine/issues&quot;&gt;open issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;reNgine Support&lt;/h2&gt; 
&lt;p&gt;Please do not raise any github issues for support requests. Instead, &lt;a href=&quot;https://discord.gg/azv6fzhNCE&quot;&gt;join our discord channel #support&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;There are many other great reconnaissance frameworks, you may use reNgine in conjunction with these tools. But, they themselves are great, and may sometimes even produce better results than reNgine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/six2dez/reconftw#sample-video&quot;&gt;ReconFTW&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/j3ssie/Osmedeus&quot;&gt;Osmedeus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackerspider1/EchoPwn&quot;&gt;EchoPwn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Support and Sponsoring&lt;/h2&gt; 
&lt;p&gt;If reNgine has helped you in any way, and you love this project and/or support active development of reNgine, please consider any of these options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add a &lt;a href=&quot;https://github.com/yogeshojha/rengine&quot;&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; 
 &lt;li&gt;Tweet about this project, or maybe blogs?&lt;/li&gt; 
 &lt;li&gt;Sponsor financially via Github or Paypal. &lt;a href=&quot;https://paypal.me/yogeshojha11&quot;&gt;https://paypal.me/yogeshojha11&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join DigitalOcean using my &lt;a href=&quot;https://m.do.co/c/e353502d19fc&quot;&gt;referral link&lt;/a&gt; your profit is &lt;strong&gt;$100&lt;/strong&gt; and I get $25 DO credit. This will help me test reNgine on VPS before I release any major features. ps. Please consider running reNgine/any recon on VPS!&lt;/li&gt; 
 &lt;li&gt;If you are looking for Proxies, please use &lt;a href=&quot;https://app.privateproxy.me/from/27103&quot;&gt;this referral&lt;/a&gt; link to purchase. Or you can also use coupon &lt;code&gt;rengine&lt;/code&gt; here on &lt;a href=&quot;https://privateproxy.me/&quot;&gt;PrivateProxy&lt;/a&gt;, using coupon &lt;code&gt;rengine&lt;/code&gt;, you&#39;ll get additional 25% off.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Together, we can make reNgine &lt;strong&gt;better&lt;/strong&gt; every day!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements and Credits&lt;/h2&gt; 
&lt;p&gt;reNgine would not have been possible without the following individuals/organizations. Thanks to these amazing devs/hackers!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Project Discovery 
  &lt;ul&gt; 
   &lt;li&gt;nuclei, httpx, naabu, subfinder&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tom Hudson 
  &lt;ul&gt; 
   &lt;li&gt;gf, assetfinder, waybackurls, unfurl&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;OWASP 
  &lt;ul&gt; 
   &lt;li&gt;amass&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ahmed Aboul-Ela 
  &lt;ul&gt; 
   &lt;li&gt;Sublist3r&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mauro Soria 
  &lt;ul&gt; 
   &lt;li&gt;dirsearch&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Corben Leo 
  &lt;ul&gt; 
   &lt;li&gt;gau&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Luke Stephens 
  &lt;ul&gt; 
   &lt;li&gt;hakrawler&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Jaeles Project 
  &lt;ul&gt; 
   &lt;li&gt;gospider&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Jing Ling 
  &lt;ul&gt; 
   &lt;li&gt;OneForAll&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;FortyNorthSecurity 
  &lt;ul&gt; 
   &lt;li&gt;EyeWitness&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Christian Martorella 
  &lt;ul&gt; 
   &lt;li&gt;theHarvester&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Davidtavarez 
  &lt;ul&gt; 
   &lt;li&gt;pwndb&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Deepseagirl 
  &lt;ul&gt; 
   &lt;li&gt;degoogle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Josué Encinar 
  &lt;ul&gt; 
   &lt;li&gt;Metafinder, Emailfinder&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Bp0lr 
  &lt;ul&gt; 
   &lt;li&gt;gauplus&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Nicolas Crocfer 
  &lt;ul&gt; 
   &lt;li&gt;whatportis&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Helmut Wandl 
  &lt;ul&gt; 
   &lt;li&gt;Gridzy.js&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 reNgine official Icon is made by 
 &lt;a href=&quot;https://www.freepik.com&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from 
 &lt;a href=&quot;https://www.flaticon.com/&quot; title=&quot;Flaticon&quot;&gt;www.flaticon.com&lt;/a&gt;
&lt;/div&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the GNU GPL v3 License. See &lt;a href=&quot;https://raw.githubusercontent.com/yogeshojha/rengine/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&quot; alt=&quot;-----------------------------------------------------&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docmirror/dev-sidecar</title>
      <link>https://github.com/docmirror/dev-sidecar</link>
      <description>&lt;p&gt;开发者边车，github打不开，github加速，git clone加速，git release下载加速，stackoverflow加速&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dev-sidecar&lt;/h1&gt; 
&lt;p&gt;开发者边车，命名取自service-mesh的service-sidecar，意为为开发者打辅助的边车工具&lt;br&gt; 通过本地代理的方式将https请求代理到一些国内的加速通道上&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar&quot;&gt;&lt;img src=&quot;https://gitee.com/docmirror/dev-sidecar/badge/star.svg?theme=dark&quot; alt=&quot;star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/docmirror/dev-sidecar?logo=github&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;一、 特性&lt;/h2&gt; 
&lt;h3&gt;1、 dns优选（解决***污染问题）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;根据网络状况智能解析最佳域名ip地址，获取最佳网络速度&lt;/li&gt; 
 &lt;li&gt;解决一些网站和库无法访问或访问速度慢的问题&lt;/li&gt; 
 &lt;li&gt;建议遇到打开比较慢的国外网站，可以优先尝试将该域名添加到dns设置中（注意：被***封杀的无效）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2、 请求拦截&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;拦截打不开的网站，代理到加速镜像站点上去。&lt;/li&gt; 
 &lt;li&gt;可配置多个镜像站作为备份&lt;/li&gt; 
 &lt;li&gt;具备测速机制，当访问失败或超时之后，自动切换到备用站点，使得目标服务高可用&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3、 github加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;github 直连加速 (通过修改sni实现，感谢 &lt;a href=&quot;https://github.com/dotnetcore/FastGithub&quot;&gt;fastGithub&lt;/a&gt; 提供的思路)&lt;/li&gt; 
 &lt;li&gt;release、source、zip下载加速&lt;/li&gt; 
 &lt;li&gt;clone 加速&lt;/li&gt; 
 &lt;li&gt;头像加速&lt;/li&gt; 
 &lt;li&gt;解决readme中图片引用无法加载的问题&lt;/li&gt; 
 &lt;li&gt;gist.github.com 加速&lt;/li&gt; 
 &lt;li&gt;解决git push 偶尔失败需要输入账号密码的问题（fatal: TaskCanceledException encountered / fatal: HttpRequestException encountered）&lt;/li&gt; 
 &lt;li&gt;raw/blame加速&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;以上部分功能通过&lt;code&gt;X.I.U&lt;/code&gt;的油猴脚本实现， 以下是仓库和脚本下载链接，大家可以去支持一下。&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/XIU2/UserScript&quot;&gt;https://github.com/XIU2/UserScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://greasyfork.org/scripts/412245&quot;&gt;https://greasyfork.org/scripts/412245&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;由于此脚本在ds中是打包在本地的，更新会不及时，你可以直接通过浏览器安装油猴插件使用此脚本，从而获得最新更新（ds本地的可以通过&lt;code&gt;加速服务-&amp;gt;基本设置-&amp;gt;启用脚本&lt;/code&gt;进行关闭）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;4、 Stack Overflow 加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;将ajax.google.com代理到加速CDN上&lt;/li&gt; 
 &lt;li&gt;recaptcha 图片验证码加速&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5、 npm加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持开启npm代理&lt;/li&gt; 
 &lt;li&gt;官方与淘宝npm registry一键切换,&lt;/li&gt; 
 &lt;li&gt;某些npm install的时候，并且使用cnpm也无法安装时，可以尝试开启npm代理再试&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;安全警告&lt;/strong&gt;&lt;/em&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;请勿使用来源不明的服务地址，有隐私和账号泄露风险&lt;/li&gt; 
 &lt;li&gt;本应用及服务端承诺不收集任何信息。介意者请使用安全模式。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、快速开始&lt;/h2&gt; 
&lt;p&gt;支持windows、Mac&lt;/p&gt; 
&lt;h3&gt;DevSidecar桌面应用&lt;/h3&gt; 
&lt;h4&gt;1 下载安装包&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;release下载&lt;br&gt; &lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar/releases&quot;&gt;Gitee Release&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar/releases&quot;&gt;Github Release&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Windows: 请选择DevSidecar-x.x.x.exe&lt;br&gt; Mac: 请选择DevSidecar-x.x.x.dmg&lt;br&gt; Ubuntu: 请选择DevSidecar-x.x.x.deb&lt;br&gt; 其他linux: 请选择DevSidecar-x.x.x.AppImage (未做测试，不保证能用)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;linux安装说明请参考 &lt;a href=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/linux.md&quot;&gt;linux安装文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：由于没有买应用证书，所以应用在下载安装时会有“未知发行者”等安全提示，选择保留即可。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2 安装后打开&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：mac版安装需要在“系统偏好设置-&amp;gt;安全性与隐私-&amp;gt;通用”中解锁并允许应用安装&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/index.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3 安装根证书&lt;/h4&gt; 
&lt;p&gt;第一次打开会提示安装证书，根据提示操作即可&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;根证书是本地随机生成的，所以不用担心根证书的安全问题（本应用不收集任何用户信息）&lt;br&gt; 你也可以在加速服务设置中自定义根证书（PEM格式的证书与私钥）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;火狐浏览器需要&lt;a href=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/#3%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E6%8F%90%E7%A4%BA%E8%AF%81%E4%B9%A6%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB&quot;&gt;手动安装证书&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4 开始加速吧&lt;/h4&gt; 
&lt;p&gt;去试试打开github&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第一次访问会去国外的dns服务器上获取ip，会比较慢一点，后面就快了&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;开启前 vs 开启后&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;开启前&lt;/th&gt; 
   &lt;th&gt;开启后&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;头像&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar2.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar1.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;clone&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone-before.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zip 下载&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download-before.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download.png&quot; alt=&quot;&quot;&gt;秒下的，实在截不到速度的图&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;三、模式说明&lt;/h2&gt; 
&lt;h3&gt;安全模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;此模式：关闭拦截、关闭增强、开启dns优选、开启测速&lt;/li&gt; 
 &lt;li&gt;最安全，无需安装证书，可以在浏览器地址栏左侧查看域名证书&lt;/li&gt; 
 &lt;li&gt;功能也最弱，只有特性1，相当于查询github的国外ip，手动改hosts一个意思。&lt;/li&gt; 
 &lt;li&gt;github的可访问性不稳定，取决于IP测速，如果有绿色ip存在，就 &lt;code&gt;有可能&lt;/code&gt; 可以直连访问。 &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/speed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;默认模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;此模式：开启拦截、关闭增强、开启dns优选、开启测速&lt;/li&gt; 
 &lt;li&gt;需要安装证书，通过修改sni直连访问github&lt;/li&gt; 
 &lt;li&gt;功能上包含特性1/2/3/4。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;四、 最佳实践&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;把dev-sidecar一直开着就行了&lt;/li&gt; 
 &lt;li&gt;建议遇到打开比较慢的国外网站，可以尝试将该域名添加到dns设置中（注意：被GFW封杀的无效）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他加速&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;git clone 加速&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;方式1：快捷复制：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;开启脚本支持，然后在复制clone链接下方，即可复制到加速链接&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;方式2：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;使用方式用实际的名称替换{}的内容，即可加速clone&lt;br&gt; &lt;a href=&quot;https://hub.fastgit.org/%7Busername%7D/%7Breponame%7D.git&quot;&gt;https://hub.fastgit.org/{username}/{reponame}.git&lt;/a&gt;&lt;br&gt; clone 出来的 remote &quot;origin&quot; 为fastgit的地址，需要手动改回来&lt;br&gt; 你也可以直接使用他们的clone加速工具 &lt;a href=&quot;https://github.com/FastGitORG/fgit-go&quot;&gt;fgit-go&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;github.com的镜像网站(注意：不能登录)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href=&quot;https://hub.fastgit.org/&quot;&gt;hub.fastgit.org&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com.cnpmjs.org/&quot;&gt;github.com.cnpmjs.org&lt;/a&gt; 这个很容易超限&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;五、api&lt;/h2&gt; 
&lt;h3&gt;拦截配置&lt;/h3&gt; 
&lt;p&gt;没有配置域名的不会拦截，其他根据配置进行拦截处理&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const intercepts = {
  // 要拦截的域名
  &#39;github.com&#39;: {
     //需要拦截url的正则表达式
     &#39;/.*/.*/releases/download/&#39;: {
        //拦截类型
        // redirect:url,  临时重定向(url会变，一些下载资源可以通过此方式配置)
        // proxy:url,     代理（url不会变，没有跨域问题）
        // abort:true,    取消请求（适用于被GFW封锁的资源，找不到替代，直接取消请求，快速失败，节省时间）
        // success:true,  直接返回成功请求（某些请求不想发出去，可以伪装成功返回）
        redirect: &#39;download.fastgit.org&#39;
      },
      &#39;.*&#39;:{
         proxy:&#39;github.com&#39;, 
         sni:&#39;baidu.com&#39; //修改sni，规避***握手拦截
      }
   },
   &#39;ajax.googleapis.com&#39;: {
     &#39;.*&#39;: {
       proxy: &#39;ajax.loli.net&#39;, //代理请求，url不会变
       backup: [&#39;ajax.proxy.ustclug.org&#39;], //备份，当前代理请求失败后，将会切换到备用地址
       test: &#39;ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&#39;,
       replace:&#39;/(.*)/xxx&#39;//当加速地址的链接和原链接不是完全相同时，可以通过正则表达式replace，此时proxy通过$1$2来重组url， proxy:&#39;ajax.loli.net/xxx/$1&#39;
     }
   },
   &#39;clients*.google.com&#39;: {
      &#39;.*&#39;:{
        abort: true //取消请求，被GFW封锁的资源，找不到替代，直接取消请求，快速失败，节省时间
      }
    }       
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;DNS优选配置&lt;/h3&gt; 
&lt;p&gt;某些域名解析出来的ip会无法访问，（比如api.github.com会被解析到新加坡的ip上，新加坡的服务器在上午挺好，到了晚上就卡死，基本不可用）&lt;br&gt; 通过从dns上获取ip列表，切换不同的ip进行尝试，最终会挑选到一个最快的ip&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; dns: {
    mapping: {
      //
      &#39;api.github.com&#39;: &#39;usa&#39;, // &quot;解决push的时候需要输入密码的问题&quot;,
      &#39;gist.github.com&#39;: &#39;usa&#39; // 解决gist无法访问的问题
      &quot;*.githubusercontent.com&quot;: &quot;usa&quot; // 解决github头像经常下载不到的问题
    }
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注意：暂时只支持IPv4的解析&lt;/p&gt; 
&lt;h2&gt;六、问题排查&lt;/h2&gt; 
&lt;h3&gt;1、dev-sidecar的前两个开关没有处于打开状态&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;尝试将开关按钮手动打开&lt;/li&gt; 
 &lt;li&gt;请尝试右键dev-sidecar图标，点退出。再重新打开&lt;/li&gt; 
 &lt;li&gt;如果还不行，请将日志发送给作者&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;如果是mac系统，可能是下面的原因&lt;/p&gt; 
&lt;h4&gt;Mac系统使用时，首页的系统代理开关无法打开&lt;/h4&gt; 
&lt;p&gt;出现这个问题可能是没有开启系统代理命令的执行权限&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;networksetup -setwebproxy &#39;WiFi&#39; 127.0.0.1 1181 
#看是否有如下错误提示
** Error: Command requires admin privileges.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果有上面的错误提示，请尝试如下两种方法：&lt;/p&gt; 
&lt;p&gt;1、 取消访问偏好设置需要管理员密码 系统偏好设置—&amp;gt;安全性与隐私—&amp;gt; 通用—&amp;gt; 高级—&amp;gt; 访问系统范围的偏好设置需要输入管理员密码（取消勾选）&lt;/p&gt; 
&lt;p&gt;2、 可能是由于安装了xcode，但未授权导致 请在终端输入如下命令进行授权&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo xcodebuild -license
# 一直按回车，该agree的时候输入agree即可
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;然后再次尝试看是否能够打开系统代理开关&lt;br&gt; 如果还不行，请联系作者&lt;/p&gt; 
&lt;h3&gt;2、没有加速效果&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;本应用仅支持https加速，请务必确认你访问的网站地址是https开头的&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;本应用仅支持https加速 请务必确认你访问的地址是https开头的 比如： &lt;a href=&quot;https://github.com/&quot;&gt;https://github.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;检查浏览器是否装了什么插件，与ds有冲突&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;检查是否安装了其他代理软件，与ds有冲突&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;请确认浏览器的代理设置为使用IE代理/或者使用系统代理状态&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以尝试换个浏览器试试&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;请确认网络代理设置处于勾选状态&lt;br&gt; 正常情况下dev-sidecar在“系统代理”开关打开时，会自动设置代理。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3、浏览器打开提示证书不受信任&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;windows: 请确认证书已正确安装在“信任的根证书颁发机构”下&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;mac: 请确认证书已经被安装并已经设置信任。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;火狐浏览器：火狐浏览器不走系统的根证书，需要在选项中添加根证书&lt;br&gt; 1、火狐浏览器-&amp;gt;选项-&amp;gt;隐私与安全-&amp;gt;证书-&amp;gt;查看证书&lt;br&gt; 2、证书颁发机构-&amp;gt;导入&lt;br&gt; 3、选择证书文件&lt;code&gt;C:\Users(用户)\Administrator(你的账号)\.dev-sidecar\dev-sidecar.ca.crt&lt;/code&gt;（Mac或linux为&lt;code&gt;~/.dev-sidecar&lt;/code&gt;目录）&lt;br&gt; 4、勾选信任由此证书颁发机构来标识网站，确定即可&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. 打开github显示连接超时&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;DevSidecar Warning:
Error: www.github.com:443, 代理请求超时
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果是安全模式，则是因为不稳定导致的，等一会再刷新试试&lt;br&gt; 如果是增强模式，则是由于访问人数过多，正常现象&lt;/p&gt; 
&lt;h3&gt;5、查看日志是否有报错&lt;/h3&gt; 
&lt;p&gt;如果还是不行，请在下方加作者好友，将服务日志发送给作者进行分析&lt;br&gt; 日志打开方式：加速服务-&amp;gt;右边日志按钮-&amp;gt;打开日志文件夹&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/log.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;6、某些原本可以打开的网站打不开了&lt;/h3&gt; 
&lt;p&gt;1、可以尝试关闭pac&lt;br&gt; 2、可以将域名加入白名单&lt;/p&gt; 
&lt;h3&gt;7、应用意外关闭导致没有网络了&lt;/h3&gt; 
&lt;p&gt;应用开启后会自动修改系统代理设置，正常退出会自动关闭系统代理&lt;br&gt; 当应用意外关闭时，可能会因为没有将系统代理恢复，从而导致完全无法上网。&lt;/p&gt; 
&lt;p&gt;对于此问题有如下几种解决方案可供选择：&lt;br&gt; 1、重新打开应用即可（右键应用托盘图标可完全退出，将会正常关闭系统代理设置）&lt;br&gt; 2、如果应用被卸载了，此时需要&lt;a href=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/recover.md&quot;&gt;手动关闭系统代理设置&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;七、在其他程序使用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/other.md#Java%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8&quot;&gt;java程序使用&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;八、贡献代码&lt;/h2&gt; 
&lt;h3&gt;开发调试模式启动&lt;/h3&gt; 
&lt;p&gt;运行如下命令即可开发模式启动&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/docmirror/dev-sidecar

cd dev-sidecar 

npm install lerna -g
lerna bootstrap

cd packages/gui

npm run electron

&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果electron依赖包下载不动，可以开启ds的npm加速&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;打包成可执行文件&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd packages/gui
npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;提交pr&lt;/h3&gt; 
&lt;p&gt;如果你想将你的修改贡献出来，请提交pr&lt;/p&gt; 
&lt;h2&gt;九、联系作者&lt;/h2&gt; 
&lt;p&gt;欢迎bug反馈，需求建议，技术交流等（请备注dev-sidecar，或简称DS）&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/contact.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;十、求star&lt;/h2&gt; 
&lt;p&gt;我的其他项目求star&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fast-crud/fast-crud&quot;&gt;fast-crud&lt;/a&gt; : 开发crud快如闪电&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/certd/certd&quot;&gt;certd&lt;/a&gt; : 让你的证书永不过期&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十一、广告&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://curl.qcloud.com/MRY91neQ&quot;&gt;腾讯云企业老用户3折服务器&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://curl.qcloud.com/VQ2ARft2&quot;&gt;腾讯云新用户大礼包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aliyun.com/activity/618/2021?userCode=qya11txb&quot;&gt;阿里云618&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十二、感谢&lt;/h2&gt; 
&lt;p&gt;本项目使用lerna包管理工具&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本项目参考如下开源项目&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wuchangming/node-mitmproxy&quot;&gt;node-mitmproxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justjavac/ReplaceGoogleCDN&quot;&gt;ReplaceGoogleCDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;特别感谢&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD&quot;&gt;github增强油猴脚本&lt;/a&gt; 本项目部分加速功能完全复制该脚本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本项目部分加速资源由如下组织提供&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fastgit.org/&quot;&gt;FastGit UK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub watchers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to &#39;stick&#39;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We&#39;d love your feedback &lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner&quot;&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-13441-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/screenshot.png&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎥 Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a &#39;green&#39; browser extension, a &#39;space invaders&#39; type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today&#39;s web developer.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎓 You can take the first few lessons in this curriculum as a &lt;a href=&quot;https://docs.microsoft.com/learn/paths/web-development-101?WT.mc_id=academic-13441-cxa&quot;&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=academic-13441-cxa&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;&quot; collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=academic-13441-cxa&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&quot;https://happy-mud-02d95f10f.azurestaticapps.net/&quot;&gt;in this app&lt;/a&gt;, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Project Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application&#39;s logic flow&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser&#39;s background processes to manage the extension&#39;s icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game&#39;s status and performance&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website&#39;s architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handing validation routines&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/pdf/readme.pdf&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Curricula&lt;/h2&gt; 
&lt;p&gt;Our team produces other curricula! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ml-beginners&quot;&gt;Machine Learning for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/iot-beginners&quot;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ProjectOpenSea/opensea-creatures</title>
      <link>https://github.com/ProjectOpenSea/opensea-creatures</link>
      <description>&lt;p&gt;Example non-fungible collectible, to demonstrate OpenSea integration&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenSea Creatures - Starter ERC721, ERC1155, and factory contracts&lt;/h2&gt; 
&lt;p&gt;What&#39;s included:&lt;/p&gt; 
&lt;h3&gt;Sample ERC721/ERC1155 Contracts&lt;/h3&gt; 
&lt;p&gt;This includes a very simple sample ERC721 / ERC1155 for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace. We include a script for minting the items.&lt;/p&gt; 
&lt;p&gt;Additionally, this contract whitelists the proxy accounts of OpenSea users so that they are automatically able to trade the ERC721 item on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items. (Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so)&lt;/p&gt; 
&lt;h3&gt;Factory Contracts&lt;/h3&gt; 
&lt;p&gt;In addition to these template 721/1155 contracts, we provide sample factory contracts for running gas-free presales of items that haven&#39;t been minted yet. See &lt;a href=&quot;https://docs.opensea.io/docs/opensea-initial-item-sale-tutorial&quot;&gt;https://docs.opensea.io/docs/opensea-initial-item-sale-tutorial&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you run into an error while building the dependencies and you&#39;re on a Mac, run the code below, remove your &lt;code&gt;node_modules&lt;/code&gt; folder, and do a fresh &lt;code&gt;yarn install&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xcode-select --install # Install Command Line Tools if you haven&#39;t already.
sudo xcode-select --switch /Library/Developer/CommandLineTools # Enable command line tools
sudo npm explore npm -g -- npm install node-gyp@latest # Update node-gyp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;To access a Rinkeby testnet node, you&#39;ll need to sign up for &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy&lt;/a&gt; and get a free API key. Click &quot;View Key&quot; and then copy the part of the URL after &lt;code&gt;v2/&lt;/code&gt;. a. You can use &lt;a href=&quot;https://infura.io&quot;&gt;Infura&lt;/a&gt; if you want as well. Just change &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; below to &lt;code&gt;INFURA_KEY&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your Metamask wallet (make sure you&#39;re using a Metamask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;your_alchemy_project_id&amp;gt;&quot;
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_CREATURES_SALE=1 yarn truffle deploy --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Minting tokens.&lt;/h3&gt; 
&lt;p&gt;After deploying to the Rinkeby network, there will be a contract on Rinkeby that will be viewable on &lt;a href=&quot;https://rinkeby.etherscan.io&quot;&gt;Rinkeby Etherscan&lt;/a&gt;. For example, here is a &lt;a href=&quot;https://rinkeby.etherscan.io/address/0xeba05c5521a3b81e23d15ae9b2d07524bc453561&quot;&gt;recently deployed contract&lt;/a&gt;. You should set this contract address and the address of your Metamask account as environment variables when running the minting script. If a &lt;a href=&quot;https://github.com/ProjectOpenSea/opensea-creatures/raw/master/migrations/2_deploy_contracts.js#L38&quot;&gt;CreatureFactory was deployed&lt;/a&gt;, which the sample deploy steps above do, you&#39;ll need to specify its address below as it will be the owner on the NFT contract, and only it will have mint permissions. In that case, you won&#39;t need NFT_CONTRACT_ADDRESS, as all we need is the contract with mint permissions here.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export OWNER_ADDRESS=&quot;&amp;lt;my_address&amp;gt;&quot;
export NFT_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_contract_address&amp;gt;&quot;
export FACTORY_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_factory_contract_address&amp;gt;&quot;
export NETWORK=&quot;rinkeby&quot;
node scripts/mint.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Diagnosing Common Issues&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a modified version of &lt;code&gt;sell.js&lt;/code&gt; and not getting expected behavior, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; in future? If no, change it to a time in the future.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; a fractional second? If yes, round the listing time to the nearest second.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses all strings? If no, convert them to strings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses checksummed? You might need to use the checksummed version of the address.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is your computer&#39;s internal clock accurate? If no, try enabling automatic clock adjustment locally or following &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html&quot;&gt;this tutorial&lt;/a&gt; to update an Amazon EC2 instance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do you have any conflicts that result from globally installed node packages? If yes, try &lt;code&gt;yarn remove -g truffle; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are you running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;? If no, try &lt;code&gt;nvm use; rm -rf node_modules; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;About OpenSea Creature Accessories&lt;/h1&gt; 
&lt;p&gt;This is a sample ERC-1155 contract for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace for crypto collectibles. We also include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A factory contract for making sell orders for unminted items (allowing for &lt;strong&gt;gas-free and mint-free presales&lt;/strong&gt;).&lt;/li&gt; 
 &lt;li&gt;A configurable lootbox contract for selling randomized collections of ERC-1155 items.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On top of the features from the OpenSea ERC721 sample contracts above, ERC1155&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;supports multiple creators per contract, where only the creator is able to mint more copies&lt;/li&gt; 
 &lt;li&gt;supports pre-minted items for the lootbox to choose from&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuring the Lootbox&lt;/h2&gt; 
&lt;p&gt;Open CreatureAccessoryLootbox.sol&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Change &lt;code&gt;Class&lt;/code&gt; to reflect your rarity levels.&lt;/li&gt; 
 &lt;li&gt;Change &lt;code&gt;NUM_CLASSES&lt;/code&gt; to reflect how many classes you have (this gets used for sizing fixed-length arrays in Solidity)&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;constructor&lt;/code&gt;, set the &lt;code&gt;OptionSettings&lt;/code&gt; for each of your classes. To do this, as in the example, call &lt;code&gt;setOptionSettings&lt;/code&gt; with 
  &lt;ol&gt; 
   &lt;li&gt;Your option id,&lt;/li&gt; 
   &lt;li&gt;The number of items to issue when the box is opened,&lt;/li&gt; 
   &lt;li&gt;An array of probabilities (basis points, so integers out of 10,000) of receiving each class. Should add up to 10k and be descending in value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Then follow the instructions below to deploy it! Purchases will auto-open the box. If you&#39;d like to make lootboxes tradable by users (without a purchase auto-opening it), contact us at &lt;a href=&quot;mailto:contact@opensea.io&quot;&gt;contact@opensea.io&lt;/a&gt; (or better yet, in &lt;a href=&quot;https://discord.gg/ga8EJbv&quot;&gt;Discord&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Why are some standard methods overridden?&lt;/h2&gt; 
&lt;p&gt;This contract overrides the &lt;code&gt;isApprovedForAll&lt;/code&gt; method in order to whitelist the proxy accounts of OpenSea users. This means that they are automatically able to trade your ERC-1155 items on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items.&lt;/p&gt; 
&lt;p&gt;Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so!&lt;/p&gt; 
&lt;h1&gt;Requirements&lt;/h1&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the steps above to get a Rinkeby node API key&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your MetaMask wallet (make sure you&#39;re using a MetaMask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;alchemy_project_id&amp;gt;&quot; # or you can use INFURA_KEY
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_ACCESSORIES_SALE=1 yarn truffle migrate --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploying to the mainnet Ethereum network.&lt;/h3&gt; 
&lt;p&gt;Make sure your wallet has at least a few dollars worth of ETH in it. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn truffle migrate --network live
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for your newly deployed contract address in the logs! 🥳&lt;/p&gt; 
&lt;h3&gt;Viewing your items on OpenSea&lt;/h3&gt; 
&lt;p&gt;OpenSea will automatically pick up transfers on your contract. You can visit an asset by going to &lt;code&gt;https://opensea.io/assets/CONTRACT_ADDRESS/TOKEN_ID&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To load all your metadata on your items at once, visit &lt;a href=&quot;https://opensea.io/get-listed&quot;&gt;https://opensea.io/get-listed&lt;/a&gt; and enter your address to load the metadata into OpenSea! You can even do this for the Rinkeby test network if you deployed there, by going to &lt;a href=&quot;https://rinkeby.opensea.io/get-listed&quot;&gt;https://rinkeby.opensea.io/get-listed&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;It doesn&#39;t compile!&lt;/h4&gt; 
&lt;p&gt;Install truffle locally: &lt;code&gt;yarn add truffle&lt;/code&gt;. Then run &lt;code&gt;yarn truffle migrate ...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also debug just the compile step by running &lt;code&gt;yarn truffle compile&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;It doesn&#39;t deploy anything!&lt;/h4&gt; 
&lt;p&gt;This is often due to the truffle-hdwallet provider not being able to connect. Go to your &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy Dashboard&lt;/a&gt; (or infura.io) and create a new project. Use your &quot;project ID&quot; as your new &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; and make sure you export that command-line variable above.&lt;/p&gt; 
&lt;h3&gt;ERC1155 Implementation&lt;/h3&gt; 
&lt;p&gt;To implement the ERC1155 standard, these contracts use the Multi Token Standard by &lt;a href=&quot;https://horizongames.net/&quot;&gt;Horizon Games&lt;/a&gt;, available on &lt;a href=&quot;https://www.npmjs.com/package/multi-token-standard&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://github.com/arcadeum/multi-token-standard&quot;&gt;github&lt;/a&gt; and also under the MIT License.&lt;/p&gt; 
&lt;h1&gt;Running Local Tests&lt;/h1&gt; 
&lt;p&gt;In one terminal window, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run ganache-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once Ganache has started, run the following in another terminal window:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run test
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ffmpegwasm/ffmpeg.wasm</title>
      <link>https://github.com/ffmpegwasm/ffmpeg.wasm</link>
      <description>&lt;p&gt;FFmpeg for browser and node, powered by WebAssembly&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ffmpegwasm/ffmpeg.wasm/master/#&quot;&gt; &lt;img alt=&quot;ffmpeg.wasm&quot; width=&quot;128px&quot; height=&quot;128px&quot; src=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/images/ffmpegwasm-icon.png&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;ffmpeg.wasm&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://img.shields.io/node/v/@ffmpeg/ffmpeg.svg&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/@ffmpeg/ffmpeg.svg?sanitize=true&quot; alt=&quot;Node Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/actions&quot;&gt;&lt;img src=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Actions Status&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/workflows/CodeQL/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/@ffmpeg/ffmpeg/latest&quot; alt=&quot;npm (tag)&quot;&gt; &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/graphs/commit-activity&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Maintained%3F-yes-green.svg?sanitize=true&quot; alt=&quot;Maintenance&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;&lt;img src=&quot;https://badgen.net/badge/code%20style/airbnb/ff5a5f?icon=airbnb&quot; alt=&quot;Code Style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@ffmpeg/ffmpeg&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/@ffmpeg/ffmpeg.svg?sanitize=true&quot; alt=&quot;Downloads Total&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@ffmpeg/ffmpeg&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@ffmpeg/ffmpeg.svg?sanitize=true&quot; alt=&quot;Downloads Month&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ffmpeg.wasm is a pure Webassembly / Javascript port of FFmpeg. It enables video &amp;amp; audio record, convert and stream right inside browsers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AVI to MP4 Demo&lt;/strong&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ffmpegwasm/ffmpeg.wasm/master/#&quot;&gt; &lt;img alt=&quot;transcode-demo&quot; src=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/images/transcode.gif&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Try it: &lt;a href=&quot;https://ffmpegwasm.netlify.app#demo&quot;&gt;https://ffmpegwasm.netlify.app&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install @ffmpeg/ffmpeg @ffmpeg/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;As we are using the latest experimental features, you need to add few flags to run in Node.js&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;$ node --experimental-wasm-threads --experimental-wasm-bulk-memory transcode.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Or, using a script tag in the browser (only works in some browsers, see list below):&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;SharedArrayBuffer is only available to pages that are &lt;a href=&quot;https://developer.chrome.com/blog/enabling-shared-array-buffer/#cross-origin-isolation&quot;&gt;cross-origin isolated&lt;/a&gt;. So you need to host &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpegwasm.github.io/raw/main/server/server.js&quot;&gt;your own server&lt;/a&gt; with &lt;code&gt;Cross-Origin-Embedder-Policy: require-corp&lt;/code&gt; and &lt;code&gt;Cross-Origin-Opener-Policy: same-origin&lt;/code&gt; headers to use ffmpeg.wasm.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;static/js/ffmpeg.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  const { createFFmpeg } = FFmpeg;
  ...
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Only browsers with SharedArrayBuffer support can use ffmpeg.wasm, you can check &lt;a href=&quot;https://caniuse.com/sharedarraybuffer&quot;&gt;HERE&lt;/a&gt; for the complete list.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;ffmpeg.wasm provides simple to use APIs, to transcode a video you only need few lines of code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
const { createFFmpeg, fetchFile } = require(&#39;@ffmpeg/ffmpeg&#39;);

const ffmpeg = createFFmpeg({ log: true });

(async () =&amp;gt; {
  await ffmpeg.load();
  ffmpeg.FS(&#39;writeFile&#39;, &#39;test.avi&#39;, await fetchFile(&#39;./test.avi&#39;));
  await ffmpeg.run(&#39;-i&#39;, &#39;test.avi&#39;, &#39;test.mp4&#39;);
  await fs.promises.writeFile(&#39;./test.mp4&#39;, ffmpeg.FS(&#39;readFile&#39;, &#39;test.mp4&#39;));
  process.exit(0);
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use other version of ffmpeg.wasm-core / @ffmpeg/core&lt;/h3&gt; 
&lt;p&gt;For each version of ffmpeg.wasm, there is a default version of @ffmpeg/core (you can find it in &lt;strong&gt;devDependencies&lt;/strong&gt; section of &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/package.json&quot;&gt;package.json&lt;/a&gt;), but sometimes you may need to use newer version of @ffmpeg/core to use the latest/experimental features.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Just install the specific version you need:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install @ffmpeg/core@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use your own version with customized path&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const ffmpeg = createFFmpeg({
  corePath: &#39;../../../src/ffmpeg-core.js&#39;,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const ffmpeg = createFFmpeg({
  corePath: &#39;static/js/ffmpeg-core.js&#39;,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the list available versions and their changelog, please check: &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm-core/releases&quot;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Multi-threading&lt;/h2&gt; 
&lt;p&gt;Multi-threading need to be configured per external libraries, only following libraries supports it now:&lt;/p&gt; 
&lt;h3&gt;x264&lt;/h3&gt; 
&lt;p&gt;Run it multi-threading mode by default, no need to pass any arguments.&lt;/p&gt; 
&lt;h3&gt;libvpx / webm&lt;/h3&gt; 
&lt;p&gt;Need to pass &lt;code&gt;-row-mt 1&lt;/code&gt;, but can only use one thread to help, can speed up around 30%&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/raw/master/docs/api.md&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm-core#configuration&quot;&gt;Supported External Libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the license of ffmpeg.wasm?&lt;/h3&gt; 
&lt;p&gt;There are two components inside ffmpeg.wasm:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;@ffmpeg/ffmpeg (&lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm&quot;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;@ffmpeg/core (&lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm-core&quot;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;@ffmpeg/core contains WebAssembly code which is transpiled from original FFmpeg C code with minor modifications, but overall it still following the same licenses as FFmpeg and its external libraries (as each external libraries might have its own license).&lt;/p&gt; 
&lt;p&gt;@ffmpeg/ffmpeg contains kind of a wrapper to handle the complexity of loading core and calling low-level APIs. It is a small code base and under MIT license.&lt;/p&gt; 
&lt;h3&gt;Can I use ffmpeg.wasm in Firefox?&lt;/h3&gt; 
&lt;p&gt;Yes, but only for Firefox 79+ with proper header in both client and server, visit &lt;a href=&quot;https://ffmpegwasm.netlify.app&quot;&gt;https://ffmpegwasm.netlify.app&lt;/a&gt; to try whether your Firefox works.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5723124/98955802-4cb20c80-253a-11eb-8f16-ce0298720a2a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;For more details: &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm/issues/106&quot;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm/issues/106&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;What is the maximum size of input file?&lt;/h3&gt; 
&lt;p&gt;2 GB, which is a hard limit in WebAssembly. Might become 4 GB in the future.&lt;/p&gt; 
&lt;h3&gt;How can I build my own ffmpeg.wasm?&lt;/h3&gt; 
&lt;p&gt;In fact, it is ffmpeg.wasm-core most people would like to build.&lt;/p&gt; 
&lt;p&gt;To build on your own, you can check build.sh inside &lt;a href=&quot;https://github.com/ffmpegwasm/ffmpeg.wasm-core&quot;&gt;https://github.com/ffmpegwasm/ffmpeg.wasm-core&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;Also you can check this series of posts to learn more fundamental concepts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-1-preparation/&quot;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-1-preparation/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-2-compile-with-emscripten/&quot;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-2-compile-with-emscripten/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-3-v0.1/&quot;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-3-v0.1/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-4-v0.2/&quot;&gt;https://jeromewu.github.io/build-ffmpeg-webassembly-version-part-4-v0.2/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why it doesn&#39;t work in my local environment?&lt;/h3&gt; 
&lt;p&gt;When calling &lt;code&gt;ffmpeg.load()&lt;/code&gt;, by default it looks for &lt;code&gt;http://localhost:3000/node_modules/@ffmpeg/core/dist/&lt;/code&gt; to download essential files (ffmpeg-core.js, ffmpeg-core.wasm, ffmpeg-core.worker.js). It is necessary to make sure you have those files served there.&lt;/p&gt; 
&lt;p&gt;If you have those files serving in other location, you can rewrite the default behavior when calling &lt;code&gt;createFFmpeg()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const { createFFmpeg } = FFmpeg;
const ffmpeg = createFFmpeg({
  corePath: &quot;http://localhost:3000/public/ffmpeg-core.js&quot;,
  // Use public address if you don&#39;t want to host your own.
  // corePath: &#39;https://unpkg.com/@ffmpeg/core@0.10.0/dist/ffmpeg-core.js&#39;
  log: true,
});
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>overleaf/overleaf</title>
      <link>https://github.com/overleaf/overleaf</link>
      <description>&lt;p&gt;A web-based collaborative LaTeX editor&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://www.overleaf.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/doc/logo.png&quot; alt=&quot;Overleaf&quot; width=&quot;300&quot;&gt;&lt;/a&gt; &lt;/h1&gt; 
&lt;h4 align=&quot;center&quot;&gt;An open-source online real-time collaborative LaTeX editor.&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/#key-features&quot;&gt;Key Features&lt;/a&gt; • &lt;a href=&quot;https://github.com/overleaf/overleaf/wiki&quot;&gt;Wiki&lt;/a&gt; • &lt;a href=&quot;https://www.overleaf.com/for/enterprises&quot;&gt;Server Pro&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/#contributing&quot;&gt;Contributing&lt;/a&gt; • &lt;a href=&quot;https://mailchi.mp/overleaf.com/community-edition-and-server-pro&quot;&gt;Mailing List&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/#authors&quot;&gt;Authors&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/#license&quot;&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.overleaf.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/overleaf/overleaf/main/doc/screenshot.png&quot; alt=&quot;Overleaf&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Figure 1: A screenshot of Overleaf Server Pro&#39;s comments and tracked changes features. &lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.overleaf.com&quot;&gt;Overleaf&lt;/a&gt; is an open-source online real-time collaborative LaTeX editor. We run a hosted version at &lt;a href=&quot;https://www.overleaf.com&quot;&gt;www.overleaf.com&lt;/a&gt;, but you can also run your own local version, and contribute to the development of Overleaf.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.overleaf.com/for/enterprises&quot;&gt;If you want help installing and maintaining Overleaf in your lab or workplace, we offer an officially supported version called Overleaf Server Pro. It also comes with extra security and admin features. Click here to find out more!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Keeping up to date&lt;/h2&gt; 
&lt;p&gt;Sign up to the &lt;a href=&quot;https://mailchi.mp/overleaf.com/community-edition-and-server-pro&quot;&gt;mailing list&lt;/a&gt; to get updates on Overleaf Releases and development&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;We have detailed installation instructions in our wiki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide&quot;&gt;Overleaf Quick Start Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;If you are upgrading from a previous version of Overleaf, please see the &lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Home&quot;&gt;Release Notes section on the Wiki&lt;/a&gt; for all of the versions between your current version and the version you are upgrading to.&lt;/p&gt; 
&lt;h2&gt;Overleaf Docker Image&lt;/h2&gt; 
&lt;p&gt;This repo contains two dockerfiles, &lt;code&gt;Dockerfile-base&lt;/code&gt;, which builds the &lt;code&gt;sharelatex/sharelatex-base&lt;/code&gt; image, and &lt;code&gt;Dockerfile&lt;/code&gt; which builds the &lt;code&gt;sharelatex/sharelatex&lt;/code&gt; (or &quot;community&quot;) image.&lt;/p&gt; 
&lt;p&gt;The Base image generally contains the basic dependencies like &lt;code&gt;wget&lt;/code&gt; and &lt;code&gt;aspell&lt;/code&gt;, plus &lt;code&gt;texlive&lt;/code&gt;. We split this out because it&#39;s a pretty heavy set of dependencies, and it&#39;s nice to not have to rebuild all of that every time.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;sharelatex/sharelatex&lt;/code&gt; image extends the base image and adds the actual Overleaf code and services.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;make build-base&lt;/code&gt; and &lt;code&gt;make build-community&lt;/code&gt; from &lt;code&gt;server-ce/&lt;/code&gt; to build these images.&lt;/p&gt; 
&lt;p&gt;We use the &lt;a href=&quot;https://github.com/phusion/baseimage-docker&quot;&gt;Phusion base-image&lt;/a&gt; (which is extended by our &lt;code&gt;base&lt;/code&gt; image) to provide us with a VM-like container in which to run the Overleaf services. Baseimage uses the &lt;code&gt;runit&lt;/code&gt; service manager to manage services, and we add our init-scripts from the &lt;code&gt;server-ce/runit&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/overleaf/overleaf/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; file for information on contributing to the development of Overleaf. See &lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Developer-Guidelines&quot;&gt;our wiki&lt;/a&gt; for information on setting up a development environment and how to recompile and run Overleaf after modifications.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.overleaf.com/about&quot;&gt;The Overleaf Team&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code in this repository is released under the GNU AFFERO GENERAL PUBLIC LICENSE, version 3. A copy can be found in the &lt;code&gt;LICENSE&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Copyright (c) Overleaf, 2014-2019.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>agalwood/Motrix</title>
      <link>https://github.com/agalwood/Motrix</link>
      <description>&lt;p&gt;A full-featured download manager.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Motrix&lt;/h1&gt; 
&lt;a href=&quot;https://motrix.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/static/512x512.png&quot; width=&quot;256&quot; alt=&quot;App Icon&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;A full-featured download manager&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/agalwood/Motrix.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg?sanitize=true&quot; alt=&quot;Build/release&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/agalwood/Motrix/total.svg?sanitize=true&quot; alt=&quot;Total Downloads&quot;&gt; &lt;img src=&quot;https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667&quot; alt=&quot;Support Platforms&quot;&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/README-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.&lt;/p&gt; 
&lt;p&gt;Motrix has a clean and easy to use interface. I hope you will like it 👻.&lt;/p&gt; 
&lt;p&gt;✈️ &lt;a href=&quot;https://motrix.app&quot;&gt;Official Website&lt;/a&gt; | 📖 &lt;a href=&quot;https://github.com/agalwood/Motrix/wiki&quot;&gt;Manual&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💽 Installation&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub Releases&lt;/a&gt; and install it.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.&lt;/p&gt; 
&lt;p&gt;If you use package management tools to manage applications on Windows, such as &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt;. You can use them to install Motrix.&lt;/p&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/iYato&quot;&gt;@Yato&lt;/a&gt; for continuing to maintain the &lt;a href=&quot;https://community.chocolatey.org/packages/motrix&quot;&gt;Motrix Chocolatey&lt;/a&gt; package. To install motrix, run the following command from the &lt;code&gt;command line&lt;/code&gt; or from &lt;code&gt;PowerShell&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
choco install motrix

# Upgrade
choco upgrade motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;scoop&lt;/h4&gt; 
&lt;p&gt;If you prefer the portable version, you can use &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt; (need Windows 7+) to install Motrix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scoop bucket add extras
scoop install motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;The macOS users can install Motrix using &lt;code&gt;brew cask&lt;/code&gt;, thanks to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/pull/59494&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/Mitscherlich&quot;&gt;@Mitscherlich&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew update &amp;amp;&amp;amp; brew install --cask motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download the &lt;code&gt;AppImage&lt;/code&gt; (for all Linux distributions) or &lt;code&gt;snap&lt;/code&gt; to install Motrix, see &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub/release&lt;/a&gt; for more Linux installation package formats.&lt;/p&gt; 
&lt;p&gt;Motrix may need to run with &lt;code&gt;sudo&lt;/code&gt; for the first time in Linux because there is no permission to create the download session file (&lt;code&gt;/var/cache/aria2.session&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If you want to build from source code, please read the &lt;strong&gt;Build&lt;/strong&gt; section.&lt;/p&gt; 
&lt;h4&gt;AppImage&lt;/h4&gt; 
&lt;p&gt;The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; .&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Desktop Integration Since electron-builder 21 desktop integration is not a part of produced AppImage file. &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; is the recommended way to integrate AppImages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deepin 20 Beta users failed to install Motrix, please follow the steps below:&lt;/p&gt; 
&lt;p&gt;Open the &lt;code&gt;Terminal&lt;/code&gt;, paste and run the following command to install Motrix again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt --fix-broken install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;Motrix has been listed on &lt;a href=&quot;https://snapcraft.io/motrix&quot;&gt;Snapcraft&lt;/a&gt; , Ubuntu users recommend downloading from the Snap Store.&lt;/p&gt; 
&lt;p&gt;Tips for v1.5.10&lt;/p&gt; 
&lt;p&gt;The tray may not display the indicator normally, which makes it inconvenient to exit the application.&lt;/p&gt; 
&lt;p&gt;Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp;amp; Linux Only), click Save &amp;amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.&lt;/p&gt; 
&lt;p&gt;Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.&lt;/p&gt; 
&lt;h4&gt;AUR&lt;/h4&gt; 
&lt;p&gt;For Arch Linux users, Motrix is available in &lt;a href=&quot;https://aur.archlinux.org/packages/motrix/&quot;&gt;aur&lt;/a&gt;, thanks to the maintainer &lt;a href=&quot;https://github.com/weearc&quot;&gt;@weearc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the following command to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yay motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Flatpak&lt;/h4&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/flathub/flathub/pull/2334&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/proletarius101&quot;&gt;@proletarius101&lt;/a&gt;, Motrix has been listed &lt;a href=&quot;https://flathub.org/apps/details/net.agalwood.Motrix&quot;&gt;Flathub&lt;/a&gt;, Linux users who like the Flatpak can try it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🕹 Simple and clear user interface&lt;/li&gt; 
 &lt;li&gt;🦄 Supports BitTorrent &amp;amp; Magnet&lt;/li&gt; 
 &lt;li&gt;☑️ BitTorrent selective download&lt;/li&gt; 
 &lt;li&gt;📡 Update tracker list every day automatically&lt;/li&gt; 
 &lt;li&gt;🔌 UPnP &amp;amp; NAT-PMP Port Mapping&lt;/li&gt; 
 &lt;li&gt;🎛 Up to 10 concurrent download tasks&lt;/li&gt; 
 &lt;li&gt;🚀 Supports 64 threads in a single task&lt;/li&gt; 
 &lt;li&gt;🚥 Supports speed limit&lt;/li&gt; 
 &lt;li&gt;🕶 Mock User-Agent&lt;/li&gt; 
 &lt;li&gt;🔔 Download completed Notification&lt;/li&gt; 
 &lt;li&gt;💻 Ready for Touch Bar (Mac only)&lt;/li&gt; 
 &lt;li&gt;🤖 Resident system tray for quick operation&lt;/li&gt; 
 &lt;li&gt;📟 Tray speed meter displays real-time speed (Mac only)&lt;/li&gt; 
 &lt;li&gt;🌑 Dark mode&lt;/li&gt; 
 &lt;li&gt;🗑 Delete related files when removing tasks (optional)&lt;/li&gt; 
 &lt;li&gt;🌍 I18n, &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/#-internationalization&quot;&gt;View supported languages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🛠 More features in development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖥 User Interface&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png&quot; alt=&quot;motrix-screenshot-task-en.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;⌨️ Development&lt;/h2&gt; 
&lt;h3&gt;Clone Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:agalwood/Motrix.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd Motrix
yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Error: Electron failed to install correctly, please delete node_modules/electron and try installing again&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;Electron&lt;/code&gt; failed to install correctly, please refer to &lt;a href=&quot;https://github.com/electron/electron/issues/8466#issuecomment-571425574&quot;&gt;https://github.com/electron/electron/issues/8466#issuecomment-571425574&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dev Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Release&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building, the application will be found in the project&#39;s &lt;code&gt;release&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;🛠 Technology Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; + &lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;VueX&lt;/a&gt; + &lt;a href=&quot;https://element.eleme.io&quot;&gt;Element&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/&quot;&gt;Aria2&lt;/a&gt; (Note: macOS and Linux versions use 64-bit aria2c, Windows version uses 32-bit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;☑️ TODO&lt;/h2&gt; 
&lt;p&gt;Development Roadmap see: &lt;a href=&quot;https://trello.com/b/qNUzA0bv/motrix&quot;&gt;Trello&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contribute &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;If you are interested in participating in joint development, PR and Forks are welcome!&lt;/p&gt; 
&lt;h2&gt;🌍 Internationalization&lt;/h2&gt; 
&lt;p&gt;Translations into versions for other languages are welcome 🧐! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/CONTRIBUTING.md#-translation-guide&quot;&gt;translation guide&lt;/a&gt; before starting translations.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/hadialqattan&quot;&gt;@hadialqattan&lt;/a&gt;, &lt;a href=&quot;https://github.com/AhmedElTabarani&quot;&gt;@AhmedElTabarani&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bg&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Българският език&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/null-none&quot;&gt;@null-none&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ca&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/marcizhu&quot;&gt;@marcizhu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Schloemicher&quot;&gt;@Schloemicher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;el&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Likecinema&quot;&gt;@Likecinema&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;en-US&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Español&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Chofito&quot;&gt;@Chofito&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fa&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;فارسی&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Nima-Ra&quot;&gt;@Nima-Ra&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/gpatarin&quot;&gt;@gpatarin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hu&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/zalnaRs&quot;&gt;@zalnaRs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/aarestu&quot;&gt;@aarestu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/blackcat-917&quot;&gt;@blackcat-917&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/hbkrkzk&quot;&gt;@hbkrkzk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/KOZ39&quot;&gt;@KOZ39&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nb&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Norsk Bokmål&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/rubjo&quot;&gt;@rubjo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pl&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/KanarekLife&quot;&gt;@KanarekLife&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/andrenoberto&quot;&gt;@andrenoberto&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ro&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/alyn3d&quot;&gt;@alyn3d&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/abdullah&quot;&gt;@abdullah&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/duythanhvn&quot;&gt;@duythanhvn&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-CN&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;简体中文&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-TW&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;繁體中文&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Yukaii&quot;&gt;@Yukaii&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; Copyright (c) 2018-present Dr_rOot&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nodejs.org/&quot;&gt; &lt;img alt=&quot;Node.js&quot; src=&quot;https://nodejs.org/static/images/logo-light.svg?sanitize=true&quot; width=&quot;400&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Node.js is an open-source, cross-platform, JavaScript runtime environment. It executes JavaScript code outside of a browser. For more information on using Node.js, see the &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js Website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;open governance model&lt;/a&gt;. The &lt;a href=&quot;https://openjsf.org/&quot;&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is bound by a &lt;a href=&quot;https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-types&quot;&gt;Release types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#download&quot;&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-and-lts-releases&quot;&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#nightly-releases&quot;&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#api-documentation&quot;&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#building-nodejs&quot;&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#contributing-to-nodejs&quot;&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-project-team-members&quot;&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#tsc-technical-steering-committee&quot;&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;Release keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/.github/SUPPORT.md&quot;&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href=&quot;https://github.com/nodejs/node/tree/v15.x&quot;&gt;v15.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;. A member of the Release Team &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href=&quot;https://github.com/nodejs/Release#readme&quot;&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/release/&quot;&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/download/release/latest/&quot;&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href=&quot;https://nodejs.org/download/release/latest-fermium/&quot;&gt;latest-fermium&lt;/a&gt; directory contains the latest Fermium (Node.js 14) release.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/nightly/&quot;&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory name and filename contains a date (in UTC) and the commit SHA at the HEAD of the release.&lt;/p&gt; 
&lt;h4&gt;API documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href=&quot;https://nodejs.org/download/docs/&quot;&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt&lt;/code&gt; file with SHA checksums for the files.&lt;/p&gt; 
&lt;p&gt;To download &lt;code&gt;SHASUMS256.txt&lt;/code&gt; using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check that a downloaded file matches the checksum, run it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Current and LTS, the GPG detached signature of &lt;code&gt;SHASUMS256.txt&lt;/code&gt; is in &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt;. You can use it with &lt;code&gt;gpg&lt;/code&gt; to verify the integrity of &lt;code&gt;SHASUMS256.txt&lt;/code&gt;. You will first need to import &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;the GPG keys of individuals authorized to create releases&lt;/a&gt;. To import the keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the bottom of this README for a full script to import active release keys.&lt;/p&gt; 
&lt;p&gt;Next, download the &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt; for the release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use &lt;code&gt;gpg --verify SHASUMS256.txt.sig SHASUMS256.txt&lt;/code&gt; to verify the file&#39;s signature.&lt;/p&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/CONTRIBUTING.md&quot;&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md&quot;&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/strategic-initiatives.md&quot;&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/technical-values.md&quot;&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- node-core-utils depends on the format of the TSC list. If the
     format changes, those utilities need to be tested and updated. --&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;!--lint disable prohibited-strings--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aduh95&quot;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:duhamelantoine1995@gmail.com&quot;&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:apapirovski@mac.com&quot;&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bgriggs@redhat.com&quot;&gt;bgriggs@redhat.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ruben@bridgewater.de&quot;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:chalkerx@gmail.com&quot;&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:cjihrig@gmail.com&quot;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shelley.vohr@gmail.com&quot;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:daniel.bevenius@gmail.com&quot;&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielleadams&quot;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:adamzdanielle@gmail.com&quot;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:franziska.hinkelmann@gmail.com&quot;&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gabrielschulhof@gmail.com&quot;&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gpunathi@in.ibm.com&quot;&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jasnell@gmail.com&quot;&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:joyeec9h3@gmail.com&quot;&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:matteo.collina@gmail.com&quot;&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:midawson@redhat.com&quot;&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:oss@mmarchini.me&quot;&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:myles.borins@gmail.com&quot;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ronagy@icloud.com&quot;&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:targos@protonmail.com&quot;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:tniessen@tnie.de&quot;&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rtrott@gmail.com&quot;&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;h3&gt;TSC emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:anna@addaleax.net&quot;&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:info@bnoordhuis.nl&quot;&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:christopher.s.dickinson@gmail.com&quot;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:evanlucas@me.com&quot;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:fishrock123@rocketmail.com&quot;&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gibfahn@gmail.com&quot;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:fedor@indutny.com&quot;&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:i@izs.me&quot;&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:josh.gavant@outlook.com&quot;&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mscdex@mscdex.net&quot;&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/nebrius&quot;&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bryan@nebri.us&quot;&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ofrobots@google.com&quot;&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:orangemocha@nodejs.org&quot;&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bertbelder@gmail.com&quot;&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:r@va.gg&quot;&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vieuxtech@gmail.com&quot;&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ohtsu@ohtsu.org&quot;&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:thechargingvolcano@gmail.com&quot;&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:timothygu99@gmail.com&quot;&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:trev.norris@gmail.com&quot;&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:anna@addaleax.net&quot;&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aduh95&quot;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:duhamelantoine1995@gmail.com&quot;&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ak239&quot;&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ak239spb@gmail.com&quot;&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antsmartian&quot;&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:anto.aravinth.cse@gmail.com&quot;&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:apapirovski@mac.com&quot;&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AshCripps&quot;&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:acripps@redhat.com&quot;&gt;acripps@redhat.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bcoe&quot;&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bencoe@gmail.com&quot;&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bengl&quot;&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bryan@bryanenglish.com&quot;&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benjamingr&quot;&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:benjamingr@gmail.com&quot;&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bgriggs@redhat.com&quot;&gt;bgriggs@redhat.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeck&quot;&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bradley.meck@gmail.com&quot;&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeurer&quot;&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:benedikt.meurer@gmail.com&quot;&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boneskull&quot;&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:boneskull@boneskull.com&quot;&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ruben@bridgewater.de&quot;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bzoz&quot;&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bartosz@janeasystems.com&quot;&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cclauss&quot;&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:cclauss@me.com&quot;&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:chalkerx@gmail.com&quot;&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:cjihrig@gmail.com&quot;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shelley.vohr@gmail.com&quot;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:daniel.bevenius@gmail.com&quot;&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielleadams&quot;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:adamzdanielle@gmail.com&quot;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davisjam&quot;&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:davisjam@vt.edu&quot;&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DerekNonGeneric&quot;&gt;DerekNonGeneric&lt;/a&gt; - &lt;strong&gt;Derek Lewis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:DerekNonGeneric@inf.is&quot;&gt;DerekNonGeneric@inf.is&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devnexen&quot;&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:devnexen@gmail.com&quot;&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devsnek&quot;&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@gus.host&quot;&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dmabupt&quot;&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:dmabupt@gmail.com&quot;&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dnlup&quot;&gt;dnlup&lt;/a&gt; &lt;strong&gt;Daniele Belardi&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:dwon.dnl@gmail.com&quot;&gt;dwon.dnl@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edsadr&quot;&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:edsadr@gmail.com&quot;&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eugeneo&quot;&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:eostroukhov@google.com&quot;&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:evanlucas@me.com&quot;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:franziska.hinkelmann@gmail.com&quot;&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:fishrock123@rocketmail.com&quot;&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flarna&quot;&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:deb2001-github@yahoo.de&quot;&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gabrielschulhof@gmail.com&quot;&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geek&quot;&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:wpreul@gmail.com&quot;&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gengjiawen&quot;&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:technicalcute@gmail.com&quot;&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geoffreybooth&quot;&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:webmaster@geoffreybooth.com&quot;&gt;webmaster@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gpunathi@in.ibm.com&quot;&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/guybedford&quot;&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:guybedford@gmail.com&quot;&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HarshithaKP&quot;&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:harshitha014@gmail.com&quot;&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hashseed&quot;&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yangguo@chromium.org&quot;&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/himself65&quot;&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu Yang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:himself65@outlook.com&quot;&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hiroppy&quot;&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:hello@hiroppy.me&quot;&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iansu&quot;&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ian@iansutherland.ca&quot;&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:fedor@indutny.com&quot;&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JacksonTian&quot;&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shyvo1987@gmail.com&quot;&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jasnell@gmail.com&quot;&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkrems&quot;&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Krems&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jan.krems@gmail.com&quot;&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joaocgreis&quot;&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:reis@janeasystems.com&quot;&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:joyeec9h3@gmail.com&quot;&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/juanarbol&quot;&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:soyjuanarbol@gmail.com&quot;&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JungMinu&quot;&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:nodecorelab@gmail.com&quot;&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/legendecas&quot;&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:legendecas@gmail.com&quot;&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Leko&quot;&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:leko.noor@gmail.com&quot;&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkgoron&quot;&gt;linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:linkgoron@gmail.com&quot;&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lpinca&quot;&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:luigipinca@gmail.com&quot;&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lundibundi&quot;&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shishugi@gmail.com&quot;&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lxxyx&quot;&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:lxxyxzj@gmail.com&quot;&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mafintosh&quot;&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mathiasbuus@gmail.com&quot;&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:matteo.collina@gmail.com&quot;&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:midawson@redhat.com&quot;&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/miladfarca&quot;&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mfarazma@redhat.com&quot;&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mildsunrise&quot;&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@alba.sh&quot;&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/misterdjules&quot;&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jgilli@netflix.com&quot;&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:oss@mmarchini.me&quot;&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mscdex@mscdex.net&quot;&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:myles.borins@gmail.com&quot;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oyyd&quot;&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:oyydoibh@gmail.com&quot;&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/panva&quot;&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:panva.ip@gmail.com&quot;&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:Pooja.D.P@ibm.com&quot;&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/puzpuzpuz&quot;&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:apechkurov@gmail.com&quot;&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Qard&quot;&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:admin@stephenbelanger.com&quot;&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RaisinTen&quot;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:raisinten@gmail.com&quot;&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/refack&quot;&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:refack@gmail.com&quot;&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rexagod&quot;&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rexagod@gmail.com&quot;&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richardlau&quot;&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rlau@redhat.com&quot;&gt;rlau@redhat.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rickyes&quot;&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:0x19951125@gmail.com&quot;&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ronagy@icloud.com&quot;&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruyadorno&quot;&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ruyadorno@github.com&quot;&gt;ruyadorno@github.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rod@vagg.org&quot;&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryzokuken&quot;&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ryzokuken@disroot.org&quot;&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saghul&quot;&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:s@saghul.net&quot;&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/santigimeno&quot;&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:santiago.gimeno@gmail.com&quot;&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seishun&quot;&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vvnicholas@gmail.com&quot;&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shisama&quot;&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shisama07@gmail.com&quot;&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/silverwind&quot;&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@silverwind.io&quot;&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/srl295&quot;&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:srloomis@us.ibm.com&quot;&gt;srloomis@us.ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/starkwang&quot;&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:starkwang@126.com&quot;&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sxa&quot;&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:sxa@redhat.com&quot;&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:targos@protonmail.com&quot;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:timothygu99@gmail.com&quot;&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:tniessen@tnie.de&quot;&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trivikr&quot;&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:trivikr.dev@gmail.com&quot;&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rtrott@gmail.com&quot;&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vdeturckheim&quot;&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vlad2t@hotmail.com&quot;&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watilde&quot;&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:daijiro.wachi@gmail.com&quot;&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watson&quot;&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:w@tson.dk&quot;&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/XadillaX&quot;&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:i@2333.moe&quot;&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yashLadha&quot;&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yash@yashladha.in&quot;&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yhwang&quot;&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yh.wang@ibm.com&quot;&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yorkie&quot;&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yorkiefixer@gmail.com&quot;&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yosuke-furukawa&quot;&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yosuke.furukawa@gmail.com&quot;&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZYSzys&quot;&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:zyszys98@gmail.com&quot;&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated. --&gt; 
 &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/andrasq&quot;&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:andras@kinvey.com&quot;&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/AnnaMag&quot;&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:anna.m.kedzierska@gmail.com&quot;&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/AndreasMadsen&quot;&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:amwebdk@gmail.com&quot;&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/aqrln&quot;&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:eaglexrlnk@gmail.com&quot;&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:info@bnoordhuis.nl&quot;&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/brendanashworth&quot;&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:brendan.ashworth@me.com&quot;&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/calvinmetcalf&quot;&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:calvin.metcalf@gmail.com&quot;&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:christopher.s.dickinson@gmail.com&quot;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/claudiorodriguez&quot;&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:cjrodr@yahoo.com&quot;&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/DavidCai1993&quot;&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:davidcai1993@yahoo.com&quot;&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/digitalinfinity&quot;&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:digitalinfinity@gmail.com&quot;&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/eljefedelrodeodeljefe&quot;&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:robert.lindstaedt@gmail.com&quot;&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/estliberitas&quot;&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:estliberitas@gmail.com&quot;&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/firedfox&quot;&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:wangyang0123@gmail.com&quot;&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/gdams&quot;&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:george.adams@microsoft.com&quot;&gt;george.adams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gibfahn@gmail.com&quot;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/glentiki&quot;&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:glenkeane.94@gmail.com&quot;&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/iarna&quot;&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@re-becca.org&quot;&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/imran-iq&quot;&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:imran@imraniqbal.org&quot;&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/imyller&quot;&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ilkka.myller@nodefield.com&quot;&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:i@izs.me&quot;&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/italoacasas&quot;&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@italoacasas.com&quot;&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin&quot;&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jasongin@microsoft.com&quot;&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jbergstroem&quot;&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bugs@bergstroem.nu&quot;&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jdalton&quot;&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:john.david.dalton@gmail.com&quot;&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhamhader&quot;&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:yuval@brik.org.il&quot;&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:josh.gavant@outlook.com&quot;&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/julianduque&quot;&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:julianduquej@gmail.com&quot;&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/kfarnung&quot;&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:kfarnung@microsoft.com&quot;&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/kunalspathak&quot;&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:kunal.pathak@microsoft.com&quot;&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/lance&quot;&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:lball@redhat.com&quot;&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/lucamaraschi&quot;&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:luca.maraschi@gmail.com&quot;&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/lxe&quot;&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:lxe@lxe.co&quot;&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/maclover7&quot;&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@jonathanmoss.me&quot;&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/matthewloring&quot;&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mattloring@google.com&quot;&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/micnic&quot;&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:micnic90@gmail.com&quot;&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/mikeal&quot;&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mikeal.rogers@gmail.com&quot;&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/monsanto&quot;&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:chris@monsan.to&quot;&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/MoonBall&quot;&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gangc.cxy@foxmail.com&quot;&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/not-an-aardvark&quot;&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:teddy.katz@gmail.com&quot;&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ofrobots@google.com&quot;&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/Olegas&quot;&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:oleg@elifantiev.ru&quot;&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:orangemocha@nodejs.org&quot;&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/othiym23&quot;&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ogd@aoaioxxysz.net&quot;&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/petkaantonov&quot;&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:petka_antonov@hotmail.com&quot;&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/phillipj&quot;&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:johphi@gmail.com&quot;&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bertbelder@gmail.com&quot;&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/pmq20&quot;&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:pmq2001@gmail.com&quot;&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/princejwesley&quot;&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:princejohnwesley@gmail.com&quot;&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/psmarshall&quot;&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:petermarshall@chromium.org&quot;&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/rlidwka&quot;&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:alex@kocharin.ru&quot;&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/rmg&quot;&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:r.m.graham@gmail.com&quot;&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/robertkowalski&quot;&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rok@kowalski.gd&quot;&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/romankl&quot;&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:romaaan.git@gmail.com&quot;&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/ronkorving&quot;&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ron@ronkorving.nl&quot;&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/RReverser&quot;&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@rreverser.com&quot;&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/rubys&quot;&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rubys@intertwingly.net&quot;&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vieuxtech@gmail.com&quot;&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/sebdeckers&quot;&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:sebdeckers83@gmail.com&quot;&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ohtsu@ohtsu.org&quot;&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/stefanmb&quot;&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:stefan@budeanu.com&quot;&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/tellnes&quot;&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:christian@tellnes.no&quot;&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:thechargingvolcano@gmail.com&quot;&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/thlorenz&quot;&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:thlorenz@gmx.de&quot;&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:trev.norris@gmail.com&quot;&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/tunniclm&quot;&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:m.j.tunnicliffe@gmail.com&quot;&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/vkurchatkin&quot;&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vladimir.kurchatkin@gmail.com&quot;&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/vsemozhetbyt&quot;&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:vsemozhetbyt@gmail.com&quot;&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/whitlockjc&quot;&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jwhitlock@apache.org&quot;&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--lint enable prohibited-strings--&gt; 
&lt;p&gt;Collaborators follow the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/collaborator-guide.md&quot;&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ayase-252&quot;&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:i@ayase-lab.com&quot;&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/himadriganguly&quot;&gt;himadriganguly&lt;/a&gt; - &lt;strong&gt;Himadri Ganguly&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:himadri.tech@gmail.com&quot;&gt;himadri.tech@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marsonya&quot;&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:akhil.marsonya27@gmail.com&quot;&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mesteery&quot;&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:mestery@pm.me&quot;&gt;mestery@pm.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja Durgad&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:Pooja.D.P@ibm.com&quot;&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RaisinTen&quot;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:raisinten@gmail.com&quot;&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Release keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:bgriggs@redhat.com&quot;&gt;bgriggs@redhat.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:cjihrig@gmail.com&quot;&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:adamzdanielle@gmail.com&quot;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jasnell@keybase.io&quot;&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:targos@protonmail.com&quot;&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:myles.borins@gmail.com&quot;&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rlau@redhat.com&quot;&gt;rlau@redhat.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:rod@vagg.org&quot;&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ruben@bridgewater.de&quot;&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:ruyadorno@hotmail.com&quot;&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:shelley.vohr@gmail.com&quot;&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import the full set of trusted release keys (including subkeys possibly used to sign releases):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys 74F12602B6F1C4E913FAA37AD3A89613643B6201
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762
gpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the section above on &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying Binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:christopher.s.dickinson@gmail.com&quot;&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:adamzdanielle@gmail.com&quot;&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:evanlucas@me.com&quot;&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:gibfahn@gmail.com&quot;&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:i@izs.me&quot;&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:me@italoacasas.com&quot;&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:fishrock@keybase.io&quot;&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:jgilli@fastmail.fm&quot;&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href=&quot;mailto:tjfontaine@gmail.com&quot;&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href=&quot;https://github.com/nodejs/node/raw/HEAD/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
