<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Thu, 26 Aug 2021 02:11:57 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>shufflewzc/faker2</title>
      <link>https://github.com/shufflewzc/faker2</link>
      <description>&lt;p&gt;不知名大佬备份&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;重要通知&lt;/h2&gt; 
&lt;h3&gt;薄雷收淡雨，雌蜺映雄虹。云拥奇峰出，霞飞散绮红。&lt;/h3&gt; 
&lt;p&gt;Faker维护仓库，收集全网目前能正常使用的脚本。&lt;/p&gt; 
&lt;p&gt;每日更新。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=shufflewzc&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【Faker集合仓库】 ql repo &lt;a href=&quot;https://ghproxy.com/https://github.com/shufflewzc/faker2.git&quot;&gt;https://ghproxy.com/https://github.com/shufflewzc/faker2.git&lt;/a&gt; &quot;jd_|jx_|gua_|jddj_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate&quot;&lt;/p&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/faker/main/qx.json&quot;&gt;https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/faker/main/qx.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【QX系列教程】 &lt;a href=&quot;https://www.notion.so/Quantumult-X-cd78c6ab616e4ebf947519b2dd690a0c&quot;&gt;https://www.notion.so/Quantumult-X-cd78c6ab616e4ebf947519b2dd690a0c&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【青龙系列教程】 &lt;a href=&quot;https://www.notion.so/Cent-OS-7-6-1c598629675145988b43a37998a1604a&quot;&gt;https://www.notion.so/Cent-OS-7-6-1c598629675145988b43a37998a1604a&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;防走丢:&lt;a href=&quot;https://t.me/jdscrip&quot;&gt;https://t.me/jdscrip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;维护收集不易，各位看官高兴可打赏下~&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/15306294/125604796-955a078a-0e28-4900-9a1c-6fabdc8feb7d.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Special statement:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Any unlocking and decryption analysis scripts involved in the Script project released by this warehouse are only used for testing, learning and research, and are forbidden to be used for commercial purposes. Their legality, accuracy, completeness and effectiveness cannot be guaranteed. Please make your own judgment based on the situation. .&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;All resource files in this project are forbidden to be reproduced or published in any form by any official account or self-media.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;This warehouse is not responsible for any script problems, including but not limited to any loss or damage caused by any script errors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Any user who indirectly uses the script, including but not limited to establishing a VPS or disseminating it when certain actions violate national/regional laws or related regulations, this warehouse is not responsible for any privacy leakage or other consequences caused by this.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not use any content of the Script project for commercial or illegal purposes, otherwise you will be responsible for the consequences.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If any unit or individual believes that the script of the project may be suspected of infringing on their rights, they should promptly notify and provide proof of identity and ownership. We will delete the relevant script after receiving the certification document.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Anyone who views this item in any way or directly or indirectly uses any script of the Script item should read this statement carefully. This warehouse reserves the right to change or supplement this disclaimer at any time. Once you have used and copied any relevant scripts or rules of the Script project, you are deemed to have accepted this disclaimer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;You must completely delete the above content from your computer or mobile phone within 24 hours after downloading.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;You have used or copied any script made by yourself in this warehouse, it is deemed to have accepted this statement, please read it carefully&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Special thanks to:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://t.me/update_help_group&quot;&gt;@Andy Woo&lt;/a&gt;「青龙2.8互助研究院支持」&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Oreomeow&quot;&gt;@Oreo&lt;/a&gt; 「青龙2.8一键配置」&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;欢迎Pull Request！&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>zero205/JD_tencent_scf</title>
      <link>https://github.com/zero205/JD_tencent_scf</link>
      <description>&lt;p&gt;京东JS脚本，支持青龙、云函数、elecV2P。请仔细阅读教程，低调使用，请勿fork！！！gitee备份地址：https://gitee.com/zero205/JD_tencent_scf&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;为防止仓库再次被封，请使用腾讯云函数、Docker、elecV2P等方式运行&lt;/h2&gt; 
&lt;h2&gt;有条（科学）件（上网）的可以 &lt;a href=&quot;https://t.me/jd_zero205&quot;&gt;点此加入组织&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;请勿直接fork！！云函数用户先按照下方教程建立私库！！！&lt;/h2&gt; 
&lt;h2&gt;已经创建公开仓库的请点击仓库右上角&lt;code&gt;Setting&lt;/code&gt;，拉到页面最下方，点击&lt;code&gt;Change visibility&lt;/code&gt;，选择&lt;code&gt;Make private&lt;/code&gt;，填入黑体仓库名称进行确认!&lt;/h2&gt; 
&lt;h3&gt;方式一(如果有一定github基础，十分建议直接方式二)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;建议阅读@hshx123大佬的&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;教程&lt;/a&gt;(就不用看下面步骤了)&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1.创建新仓库&lt;a href=&quot;https://github.com/new&quot;&gt;点击创建自己的仓库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2.点击&lt;code&gt;Import a repository&lt;/code&gt;，在&lt;code&gt;Your old repository’s clone URL&lt;/code&gt;处填入&lt;a href=&quot;https://github.com/zero205/JD_tencent_scf&quot;&gt;https://github.com/zero205/JD_tencent_scf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;3.然后在&lt;code&gt;Repository name&lt;/code&gt;处填写仓库名，选择&lt;code&gt;Private&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;4.最后点击最下方的&lt;code&gt;Begin import&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;5.仓库创建后，在仓库页面点击&lt;code&gt;main&lt;/code&gt;分支，在下拉菜单中点击最下方&lt;code&gt;view all branches&lt;/code&gt;，点击&lt;code&gt;Default branch&lt;/code&gt;最右侧箭头，然后在新页面继续点击箭头，再弹出框中选择&lt;code&gt;scf&lt;/code&gt;为主分支&lt;/li&gt; 
 &lt;li&gt;6.在仓库页面点击&lt;code&gt;main&lt;/code&gt;分支，在下拉菜单中点击最下方&lt;code&gt;view all branches&lt;/code&gt;，点击&lt;code&gt;maim&lt;/code&gt;分支右侧垃圾桶,确认删除分支&lt;/li&gt; 
 &lt;li&gt;7.点击刚才页面&lt;code&gt;scf&lt;/code&gt;分支右侧笔图标，将其重命名为&lt;code&gt;main&lt;/code&gt;，大功告成。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;方式二&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;第一种:有能力用户可以进行尝试,通过任何方法都可以,在空仓库内(保证分支名称为&lt;code&gt;main&lt;/code&gt;),运行一次本仓库&lt;code&gt;scf&lt;/code&gt;分支的sync.yml即可&lt;/li&gt; 
 &lt;li&gt;第二种:直接clone一个&lt;code&gt;scf&lt;/code&gt;分支(名字需要为&lt;code&gt;main&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;自动同步本仓库脚本教程：&lt;a href=&quot;https://github.com/zero205/JD_tencent_scf/raw/main/backUp/reposync.md&quot;&gt;点此查看&lt;/a&gt;&lt;/h2&gt; 
&lt;h1&gt;使用教程（觉得有用的可以点个⭐star &lt;span&gt;😊&lt;/span&gt;）&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;【青龙】拉取仓库命令：&lt;code&gt;ql repo https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR&quot;&lt;/code&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;腾讯云函数部署建议阅读@hshx123大佬的&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;教程&lt;/a&gt;【推荐】.&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/tencentscf.md&quot;&gt;旧教程&lt;/a&gt;【不推荐】&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;a href=&quot;https://github.com/elecV2/elecV2P&quot;&gt;elecV2P&lt;/a&gt; 部署【备用】&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;安装教程：&lt;a href=&quot;https://github.com/elecV2/elecV2P-dei/raw/master/docs/01-overview.md&quot;&gt;点此查看&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;订阅任务：&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/jd_task.json&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;elecV2P京东CK、通知填写格式等相关补充说明：&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/elecV2P.md&quot;&gt;点此查看&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;获取京东cookie教程可参考：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie.md&quot;&gt;浏览器获取京东cookie教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie2.md&quot;&gt;插件获取京东cookie教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;特别声明:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本仓库发布的Script项目中涉及的任何解锁和解密分析脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;lxk0301对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, lxk0301 对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;请勿将Script项目的任何内容用于商业或非法目的，否则后果自负.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任何以任何方式查看此项目的人或直接或间接使用该Script项目的任何脚本的使用者都应仔细阅读此声明。lxk0301 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或Script项目的规则，则视为您已接受此免责声明.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;环境变量&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/githubAction.md&quot;&gt;环境变量集合&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;特别感谢(排名不分先后)：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JDHelloWorld&quot;&gt;@JDHelloWorld&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/smiek2221&quot;&gt;@smiek2221&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/star261&quot;&gt;@star261&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Wenmoux&quot;&gt;@Wenmoux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Tsukasa007&quot;&gt;@Tsukasa007&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Aaron&quot;&gt;@Aaron&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>chrisleekr/binance-trading-bot</title>
      <link>https://github.com/chrisleekr/binance-trading-bot</link>
      <description>&lt;p&gt;Automated Binance trading bot - Buy low/Sell high with stop loss limit/Trade multiple cryptocurrencies with Grid Trading&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binance Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/actions?query=workflow%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/chrisleekr/binance-trading-bot/workflows/main/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;CodeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chrisleekr/binance-trading-bot&quot; alt=&quot;Docker pull&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/chrisleekr/binance-trading-bot&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Automated Binance trading bot with trailing buy/sell strategy&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.ko.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%ED%95%9C%EA%B5%AD%EC%96%B4-brightgreen.svg?sanitize=true&quot; alt=&quot;ko&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.zh-cn.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&quot; alt=&quot;中文&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a test project. I am just testing my code.&lt;/p&gt; 
&lt;h2&gt;Warnings&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;I cannot guarantee whether you can make money or not.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk! I have no responsibility for any loss or hardship incurred directly or indirectly by using this code. Read &lt;a href=&quot;https://raw.githubusercontent.com/chrisleekr/binance-trading-bot/master/#disclaimer&quot;&gt;disclaimer&lt;/a&gt; before using this code.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before updating the bot, make sure to record the last buy price in the note. It may lose the configuration or last buy price records.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;h3&gt;Trailing Grid Trade Buy/Sell Bot&lt;/h3&gt; 
&lt;p&gt;This bot is using the concept of trailing buy/sell order which allows following the price fall/rise.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trailing Stop Orders About Trailing Stop Orders Concept you can find at &lt;a href=&quot;https://www.binance.com/en/support/faq/360042299292&quot;&gt;Binance Official document&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;TL;DR Place orders at a fixed value or percentage when the price changes. Using this feature you can buy at the lowest possible price when buying down and sell at the highest possible price when selling up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot supports multiple buy/sell orders based on the configuration.&lt;/li&gt; 
 &lt;li&gt;The bot can monitor multiple symbols. All symbols will be monitored per second.&lt;/li&gt; 
 &lt;li&gt;The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version is 3.2.20, which is provided by &lt;a href=&quot;https://hub.docker.com/r/apcheamitru/arm32v7-mongo&quot;&gt;apcheamitru&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The bot is tested/working with Linux and Raspberry Pi 4 32bit. Other platforms are not tested.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Buy Signal&lt;/h4&gt; 
&lt;p&gt;The bot will continuously monitor the coin based on the grid trade configuration.&lt;/p&gt; 
&lt;p&gt;For grid trade #1, the bot will place a STOP-LOSS-LIMIT order to buy when the current price reaches the lowest price. If the current price continuously falls, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;p&gt;After grid trade #1, the bot will monitor the COIN based on the last buy price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot will not place a buy order of the grid trade #1 if has enough coin (typically over $10 worth) to sell when reaches the trigger price for selling.&lt;/li&gt; 
 &lt;li&gt;The bot will remove the last buy price if the estimated value is less than the last buy price removal threshold.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Buy Scenario&lt;/h5&gt; 
&lt;p&gt;Let say, if the buy grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;USDT&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;1.051&lt;/td&gt; 
     &lt;td&gt;50&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2&lt;/td&gt; 
     &lt;td&gt;0.8&lt;/td&gt; 
     &lt;td&gt;1.03&lt;/td&gt; 
     &lt;td&gt;1.031&lt;/td&gt; 
     &lt;td&gt;100&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To make it easier to understand, I will use &lt;code&gt;$&lt;/code&gt; as a USDT symbol. For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;Your 1st grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No#: 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.05 (5.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.051 (5.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $105&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When the current price is falling to the lowest price ($100) and lower than ATH(All-Time High) restricted price if enabled, the bot will place new STOP-LOSS-LIMIT order for buying.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 1.05 = $105&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 1.051 = $105.1&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.47573&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $95 * 1.05 = $99.75&lt;/li&gt; 
 &lt;li&gt;Limit price: $95 * 1.051 = $99.845&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as &lt;code&gt;$99.845&lt;/code&gt;. The purchased quantity will be &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying.&lt;/p&gt; 
&lt;p&gt;Your 2nd grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid#: 2&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $99.845&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 0.8 (20%)&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.03 (3.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.031 (3.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And if the current price is continuously falling to &lt;code&gt;$79.876&lt;/code&gt; (20% lower), then the bot will place new STOP-LOSS-LIMIT order for the 2nd grid trading for the coin.&lt;/p&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $75&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $75 * 1.03 = $77.25&lt;/li&gt; 
 &lt;li&gt;Limit price: $75 * 1.031 = $77.325&lt;/li&gt; 
 &lt;li&gt;Quantity: 1.29&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $78&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Final last buy price: ($50 + $100)/(0.5 COIN + 1.29 COIN) = $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sell Signal&lt;/h3&gt; 
&lt;p&gt;If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the bot does not have a record for the last buy price, the bot will not sell the coin.&lt;/li&gt; 
 &lt;li&gt;If the coin is worth less than the last buy price removal threshold, then the bot will remove the last buy price.&lt;/li&gt; 
 &lt;li&gt;If the coin is not worth than the minimum notional value, then the bot will not place an order.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;Sell Quantity Percentage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1st&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;0.97&lt;/td&gt; 
     &lt;td&gt;0.969&lt;/td&gt; 
     &lt;td&gt;0.5&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2nd&lt;/td&gt; 
     &lt;td&gt;1.08&lt;/td&gt; 
     &lt;td&gt;0.95&lt;/td&gt; 
     &lt;td&gt;0.949&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as &lt;code&gt;1&lt;/code&gt; (100%).&lt;/p&gt; 
&lt;p&gt;From the last buy actions, you now have the following balances:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 1.79&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your 1st grid trading for selling is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No# 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1.05&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 0.97&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 0.969&lt;/li&gt; 
 &lt;li&gt;Sell amount percentage: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $88&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the current price is higher than the sell trigger price($87.99), then the bot will place new STOP-LOSS-LIMIT order for selling.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $88 * 0.97 = $85.36&lt;/li&gt; 
 &lt;li&gt;Limit price: $88 * 0.969 = $85.272&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $90 * 0.97 = $87.30&lt;/li&gt; 
 &lt;li&gt;Limit price: $90 * 0.969 = $87.21&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 0.895&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $91&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the current price($91) is higher than 2nd selling trigger price ($90.504), the bot will place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $91 * 0.95 = $86.45&lt;/li&gt; 
 &lt;li&gt;Limit price: $91 * 0.949 = $86.359&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 0.95 = $95&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 0.949 = $94.9&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $94&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd sell for the coin.&lt;/p&gt; 
&lt;p&gt;The final profit would be&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1st sell: $94.9 * 0.895 = $84.9355&lt;/li&gt; 
 &lt;li&gt;2nd sell: $87.21 * 0.895 = $78.05295&lt;/li&gt; 
 &lt;li&gt;Final profit: $162 (8% profit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Stop-Loss Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell Stop-Loss configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Max loss percentage: 0.90&lt;/li&gt; 
 &lt;li&gt;Temporary disable for buying (minutes): 60&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
 &lt;li&gt;Last buy price: $100&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will not place a Stop-Loss order because the Stop-Loss price ($90) is less than the current price ($95).&lt;/p&gt; 
&lt;p&gt;If the price is continuously falling, then the bot will keep monitoring until the price reaches the Stop-Loss price.&lt;/p&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The bot will place new MARKET order for selling because the current price ($90) is less or equal than the Stop-Loss price ($90). In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;The bot will also set the symbol to be temporarily disabled for 60 minutes to avoid buying/sell continuously. In the frontend, the action will display the pause icon and how long left to be enabled again. The symbol can be enabled by clicking the play icon.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Features&quot;&gt;Features&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manual trade&lt;/li&gt; 
 &lt;li&gt;Convert small balances to BNB&lt;/li&gt; 
 &lt;li&gt;Trade all symbols&lt;/li&gt; 
 &lt;li&gt;Monitoring multiple coins simultaneously&lt;/li&gt; 
 &lt;li&gt;Stop-Loss&lt;/li&gt; 
 &lt;li&gt;Restrict buying with ATH price&lt;/li&gt; 
 &lt;li&gt;Grid Trade for buy/sell&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend + WebSocket&lt;/h3&gt; 
&lt;p&gt;React.js based frontend communicating via Web Socket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List monitoring coins with buy/sell signals/open orders&lt;/li&gt; 
 &lt;li&gt;View account balances&lt;/li&gt; 
 &lt;li&gt;View open/closed trades&lt;/li&gt; 
 &lt;li&gt;Manage global/symbol settings&lt;/li&gt; 
 &lt;li&gt;Delete caches that are not monitored&lt;/li&gt; 
 &lt;li&gt;Link to public URL&lt;/li&gt; 
 &lt;li&gt;Support Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Secure frontend&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Parameters&lt;/h2&gt; 
&lt;p&gt;Use environment parameters to adjust parameters. Check &lt;code&gt;/config/custom-environment-variables.json&lt;/code&gt; to see list of available environment parameters.&lt;/p&gt; 
&lt;p&gt;Or use the frontend to adjust configurations after launching the application.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.dist&lt;/code&gt;.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Environment Key&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
     &lt;th&gt;Sample Value&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_ENABLED&lt;/td&gt; 
     &lt;td&gt;Slack enable/disable&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_WEBHOOK_URL&lt;/td&gt; 
     &lt;td&gt;Slack webhook URL&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://slack.com/intl/en-au/help/articles/115005265063-Incoming-webhooks-for-Slack&quot;&gt;Slack&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_CHANNEL&lt;/td&gt; 
     &lt;td&gt;Slack channel&lt;/td&gt; 
     &lt;td&gt;&quot;#binance&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_USERNAME&lt;/td&gt; 
     &lt;td&gt;Slack username&lt;/td&gt; 
     &lt;td&gt;Chris&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable &lt;a href=&quot;https://github.com/localtunnel/localtunnel&quot;&gt;local tunnel&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_SUBDOMAIN&lt;/td&gt; 
     &lt;td&gt;Local tunnel public URL subdomain&lt;/td&gt; 
     &lt;td&gt;binance&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable frontend authentication&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_PASSWORD&lt;/td&gt; 
     &lt;td&gt;Frontend password&lt;/td&gt; 
     &lt;td&gt;123456&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOG_LEVEL&lt;/td&gt; 
     &lt;td&gt;Logging level. &lt;a href=&quot;https://www.npmjs.com/package/bunyan#levels&quot;&gt;Possible values described on &lt;code&gt;bunyan&lt;/code&gt; docs.&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;ERROR&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;em&gt;A local tunnel makes the bot accessible from the outside. Please set the subdomain of the local tunnel as a subdomain that only you can remember.&lt;/em&gt; &lt;em&gt;You must change the authentication password; otherwise, it will be configured as the default password.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch/Update the bot with docker-compose&lt;/p&gt; &lt;p&gt;Pull latest code first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If want production/live mode, then use the latest build image from DockerHub:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose -f docker-compose.server.yml pull
docker-compose -f docker-compose.server.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or if want development/test mode, then run below commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When launching the application, it will notify public URL to the Slack.&lt;/li&gt; 
   &lt;li&gt;If you have any issue with the bot, you can check the log to find out what happened with the bot. Please take a look &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install via Stackfile&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://www.portainer.io/&quot;&gt;Portainer&lt;/a&gt; create new Stack&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy content of &lt;code&gt;docker-stack.yml&lt;/code&gt; or upload the file&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set environment keys for &lt;code&gt;binance-bot&lt;/code&gt; in the &lt;code&gt;docker-stack.yml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch and open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Password Protected&lt;/th&gt; 
   &lt;th&gt;Frontend Mobile&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127773484-51d01881-4933-454e-9052-9965b222e716.png&quot; alt=&quot;Password Protected&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367660-743f89fd-2eae-4113-8ce7-6249ba47926a.png&quot; alt=&quot;Frontend Mobile&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Manual Trade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318581-4e422ac9-b145-4e83-a90d-5c05c61d6e2f.png&quot; alt=&quot;Setting&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318630-f2180e1b-3feb-48fa-a083-4cb7f90f743f.png&quot; alt=&quot;Manual Trade&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Frontend Desktop&lt;/th&gt; 
   &lt;th&gt;Closed Trades&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367482-2d88144a-b5e3-49b1-ae11-f21e7251dab0.png&quot; alt=&quot;Frontend Desktop&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/129367521-019cf591-26f2-4d69-ac9e-9f631605aab2.png&quot; alt=&quot;Closed Trades&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sample Trade&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chart&lt;/th&gt; 
   &lt;th&gt;Buy Orders&lt;/th&gt; 
   &lt;th&gt;Sell Orders&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027391-192db300-8444-11eb-8df4-91c98d0c835b.png&quot; alt=&quot;Chart&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027403-36628180-8444-11eb-91dc-f3cdabc5a79e.png&quot; alt=&quot;Buy Orders&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027411-4b3f1500-8444-11eb-8525-37f02a63de25.png&quot; alt=&quot;Sell Orders&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Changes &amp;amp; Todo&lt;/h2&gt; 
&lt;p&gt;Please refer &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; to view the past changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve sell strategy with conditional stop price percentage based on the profit percentage - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/94&quot;&gt;#94&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add sudden drop buy strategy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/67&quot;&gt;#67&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add minimum required order amount - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/84&quot;&gt;#84&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Manage setting profiles (save/change/load?/export?) - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/151&quot;&gt;#151&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve notifications by supporting Apprise - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/106&quot;&gt;#106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support cool time after hitting the lowest price before buy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/105&quot;&gt;#105&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Reset global configuration to initial configuration - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/97&quot;&gt;#97&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support limit for active buy/sell orders - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/147&quot;&gt;#147&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Develop simple setup screen for secrets&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support multilingual frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/56&quot;&gt;#56&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Non linear stop price and chase function - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/246&quot;&gt;#246&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support STOP-LOSS configuration per grid trade for selling - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/261&quot;&gt;#261&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support triggering buy automatically to rescheduled if the price is over the ATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, feel free to make a small &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/DONATIONS.md&quot;&gt;donation&lt;/a&gt; to the developer.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d0x2f&quot;&gt;@d0x2f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And many others! Thanks guys!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all contributors &lt;span&gt;❤️&lt;/span&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;Click to see our heroes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I give no warranty and accepts no responsibility or liability for the accuracy or the completeness of the information and materials contained in this project. Under no circumstances will I be held responsible or liable in any way for any claims, damages, losses, expenses, costs or liabilities whatsoever (including, without limitation, any direct or indirect damages for loss of profits, business interruption or loss of information) resulting from or arising directly or indirectly from your use of or inability to use this code or any code linked to it, or from your reliance on the information and material on this code, even if I have been advised of the possibility of such damages in advance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qier222/YesPlayMusic</title>
      <link>https://github.com/qier222/YesPlayMusic</link>
      <description>&lt;p&gt;高颜值的第三方网易云播放器，支持 Windows / macOS / Linux&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/logo.png&quot; alt=&quot;Logo&quot; width=&quot;156&quot; height=&quot;156&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot; style=&quot;font-weight: 600&quot;&gt;YesPlayMusic&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; 高颜值的第三方网易云播放器 &lt;br&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;🌎 访问DEMO&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp; &lt;a href=&quot;#%EF%B8%8F-安装&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;📦️ 下载安装包&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://music.qier222.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library.png&quot; alt=&quot;Library&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 使用 Vue.js 全家桶开发&lt;/li&gt; 
 &lt;li&gt;🔴 网易云账号登录（扫码/手机/邮箱登录）&lt;/li&gt; 
 &lt;li&gt;📺 支持 MV 播放&lt;/li&gt; 
 &lt;li&gt;📃 支持歌词显示&lt;/li&gt; 
 &lt;li&gt;📻 支持私人 FM / 每日推荐歌曲&lt;/li&gt; 
 &lt;li&gt;🚫🤝 无任何社交功能&lt;/li&gt; 
 &lt;li&gt;🌎️ 海外用户可直接播放（需要登录网易云账号）&lt;/li&gt; 
 &lt;li&gt;🔐 支持 &lt;a href=&quot;https://github.com/nondanee/UnblockNeteaseMusic&quot;&gt;UnblockNeteaseMusic&lt;/a&gt;（&lt;a href=&quot;https://github.com/revincx/UnblockNeteaseMusic&quot;&gt;使用 revincx 修复的 npm 包&lt;/a&gt;），自动使用 QQ/酷狗/酷我音源替换变灰歌曲链接 （网页版不支持）&lt;/li&gt; 
 &lt;li&gt;✔️ 每日自动签到（手机端和电脑端同时签到）&lt;/li&gt; 
 &lt;li&gt;🌚 Light/Dark Mode 自动切换&lt;/li&gt; 
 &lt;li&gt;👆 支持 Touch Bar&lt;/li&gt; 
 &lt;li&gt;🖥️ 支持 PWA，可在 Chrome/Edge 里点击地址栏右边的 ➕ 安装到电脑&lt;/li&gt; 
 &lt;li&gt;🟥 支持 Last.fm Scrobble&lt;/li&gt; 
 &lt;li&gt;☁️ 支持音乐云盘&lt;/li&gt; 
 &lt;li&gt;⌨️ 自定义快捷键和全局快捷键&lt;/li&gt; 
 &lt;li&gt;🛠 更多特性开发中&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦️ 安装&lt;/h2&gt; 
&lt;p&gt;Electron 版本由 &lt;a href=&quot;https://github.com/hawtim&quot;&gt;@hawtim&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/qier222&quot;&gt;@qier222&lt;/a&gt; 适配并维护，支持 macOS、Windows、Linux。&lt;/p&gt; 
&lt;p&gt;访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/releases&quot;&gt;Releases&lt;/a&gt; 页面下载安装包，或者访问 &lt;a href=&quot;https://dl.qier222.com/YesPlayMusic/&quot;&gt;镜像下载站 (大陆访问更快)&lt;/a&gt; 下载。&lt;/p&gt; 
&lt;p&gt;macOS 用户也可以通过 &lt;code&gt;brew install --cask yesplaymusic&lt;/code&gt; 来安装。&lt;/p&gt; 
&lt;h2&gt;⚙️ 部署至 Vercel&lt;/h2&gt; 
&lt;p&gt;除了下载安装包使用，你还可以将本项目部署到 Vercel 或你的服务器上。下面是部署到 Vercel 的方法。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://neteasecloudmusicapi.vercel.app/#/?id=%e5%ae%89%e8%a3%85&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt; 。你也可以将 API 部署到 Vercel。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击本仓库右上角的 Fork，复制本仓库到你的 GitHub 账号。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打开 &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel.com&lt;/a&gt;，使用 GitHub 登录。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Import Git Repository 并选择你刚刚复制的仓库并点击 Import。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 PERSONAL ACCOUNT 旁边的 Select。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Environment Variables，填写 Name 为 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt;，Value 为你刚刚部署的网易云 API 地址，点击 Add。最后点击底部的 Deploy 就可以部署到 Vercel 了。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;⚙️ 部署到自己的服务器&lt;/h2&gt; 
&lt;p&gt;除了部署到 Vercel，你还可以部署到自己的服务器上&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;克隆本仓库&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/qier222/YesPlayMusic.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;安装依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn install

&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;（可选）使用 Nginx 反向代理 API，将 API 路径映射为 &lt;code&gt;/api&lt;/code&gt;，如果 API 和网页不在同一个域名下的话（跨域），会有一些 bug。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt;，修改里面 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt; 的值为网易云 API 地址。本地开发的话可以填写 API 地址为 &lt;code&gt;http://localhost:3000&lt;/code&gt;，YesPlayMusic 地址为 &lt;code&gt;http://localhost:8080&lt;/code&gt;。如果你使用了反向代理 API，可以填写 API 地址为 &lt;code&gt;/api&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;VUE_APP_NETEASE_API_URL=http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;编译打包&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;将 &lt;code&gt;/dist&lt;/code&gt; 目录下的文件上传到你的 Web 服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;👷‍♂️ 打包客户端&lt;/h2&gt; 
&lt;p&gt;如果在 Release 页面没有找到适合你的设备的安装包的话，你可以根据下面的步骤来打包自己的客户端。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;打包 Electron 需要用到 Node.js 和 Yarn。可前往 &lt;a href=&quot;https://nodejs.org/zh-cn/&quot;&gt;Node.js 官网&lt;/a&gt; 下载安装包。安装 Node.js 后可在终端里执行 &lt;code&gt;npm install -g yarn&lt;/code&gt; 来安装 Yarn。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;git clone https://github.com/qier222/YesPlayMusic.git&lt;/code&gt; 克隆本仓库到本地。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;yarn install&lt;/code&gt; 安装项目依赖。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt; 。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;选择下列表格的命令来打包适合的你的安装包，打包出来的文件在 &lt;code&gt;/dist_electron&lt;/code&gt; 目录下。了解更多信息可访问 &lt;a href=&quot;https://www.electron.build/cli&quot;&gt;electron-builder 文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;命令&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:ia32&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 32 位&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows ARM&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --linux deb:armv7l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Debian armv7l（树莓派等）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --macos dir:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;macOS ARM&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; 配置开发环境&lt;/h2&gt; 
&lt;p&gt;本项目由 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;NeteaseCloudMusicApi&lt;/a&gt; 提供 API，已经包含在本项目的&lt;code&gt;netease_api&lt;/code&gt;目录。&lt;/p&gt; 
&lt;p&gt;运行本项目&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn

# 创建本地环境变量
cp .env.example .env

# 运行（网页端）
yarn serve

# 运行（electron）
yarn electron:serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;本地运行 NeteaseCloudMusicApi，或者将 API &lt;a href=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/#%EF%B8%8F-%E9%83%A8%E7%BD%B2%E8%87%B3-vercel&quot;&gt;部署至 Vercel&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn netease_api:install

# 运行 API （默认 3000 端口）
yarn netease_api:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;☑️ Todo&lt;/h2&gt; 
&lt;p&gt;查看 Todo 请访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/projects/1&quot;&gt;Projects&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;欢迎提 Issue 和 Pull request。&lt;/p&gt; 
&lt;h2&gt;📜 开源许可&lt;/h2&gt; 
&lt;p&gt;本项目仅供个人学习研究使用，禁止用于商业及非法用途。&lt;/p&gt; 
&lt;p&gt;基于 &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt; 许可进行开源。&lt;/p&gt; 
&lt;h2&gt;灵感来源&lt;/h2&gt; 
&lt;p&gt;API 源代码来自 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.apple.com&quot;&gt;Apple Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.youtube.com&quot;&gt;YouTube Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spotify.com&quot;&gt;Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.163.com&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖼️ 截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/lyrics.png&quot; alt=&quot;lyrics&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library-dark.png&quot; alt=&quot;library-dark&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/album.png&quot; alt=&quot;album&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home-2.png&quot; alt=&quot;home-2&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/artist.png&quot; alt=&quot;artist&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/search.png&quot; alt=&quot;search&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home.png&quot; alt=&quot;home&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/explore.png&quot; alt=&quot;explore&quot;&gt;&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot;&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true&quot; width=&quot;128&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;It is a self-hosted monitoring tool like &quot;Uptime Robot&quot;.&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/1.jpg&quot; width=&quot;512&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / Ping.&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX.&lt;/li&gt; 
 &lt;li&gt;Notifications via Webhook, Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP) and more by Apprise.&lt;/li&gt; 
 &lt;li&gt;20 seconds interval.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🚀 Installer via cli&lt;/h3&gt; 
&lt;p&gt;Interactive cli installer, supports Docker or without Docker.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -o kuma_install.sh https://raw.githubusercontent.com/louislam/uptime-kuma/master/install.sh &amp;amp;&amp;amp; sudo bash kuma_install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker volume create uptime-kuma
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browse to &lt;a href=&quot;http://localhost:3001&quot;&gt;http://localhost:3001&lt;/a&gt; after started.&lt;/p&gt; 
&lt;h3&gt;☸️ Kubernetes&lt;/h3&gt; 
&lt;p&gt;See more &lt;a href=&quot;https://raw.githubusercontent.com/louislam/uptime-kuma/master/kubernetes/README.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reserve proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&quot;&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What&#39;s Next?&lt;/h2&gt; 
&lt;p&gt;I will mark requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/louislam/uptime-kuma/milestones&quot;&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Dark Mode:&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/128710166-908f8d88-9256-43f3-9c49-bfc2c56011d2.png&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot;&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the close one is statping. Unfortunately, it is not stable and unmaintained.&lt;/li&gt; 
 &lt;li&gt;Want to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving me a ⭐.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to report a bug or request a new feature. Free feel to open a new issue.&lt;/p&gt; 
&lt;p&gt;If you want to modify Uptime Kuma, this guideline maybe useful for you: &lt;a href=&quot;https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md&quot;&gt;https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;English proofreading is needed too, because my grammar is not that great sadly. Feel free to correct my grammar in this Readme, source code or wiki.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lutzroeder/netron</title>
      <link>https://github.com/lutzroeder/netron</link>
      <description>&lt;p&gt;Visualizer for neural network, deep learning, and machine learning models&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lutzroeder/netron&quot;&gt;&lt;img width=&quot;400px&quot; height=&quot;100px&quot; src=&quot;https://raw.githubusercontent.com/lutzroeder/netron/main/.github/logo.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netron is a viewer for neural network, deep learning and machine learning models.&lt;/p&gt; 
&lt;p&gt;Netron supports ONNX, TensorFlow Lite, Keras, Caffe, Darknet, ncnn, MNN, PaddlePaddle, Core ML, MXNet, RKNN, MindSpore Lite, TNN, Barracuda, Tengine, TensorFlow.js, Caffe2 and UFF.&lt;/p&gt; 
&lt;p&gt;Netron has experimental support for PyTorch, TensorFlow, TorchScript, OpenVINO, Torch, Vitis AI, Arm NN, BigDL, Chainer, CNTK, Deeplearning4j, MediaPipe, ML.NET and scikit-learn.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.lutzroeder.com/ai&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lutzroeder/netron/main/.github/screenshot.png&quot; width=&quot;800&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.dmg&lt;/code&gt; file or run &lt;code&gt;brew install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.AppImage&lt;/code&gt; file or run &lt;code&gt;snap install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.exe&lt;/code&gt; installer or run &lt;code&gt;winget install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;: &lt;a href=&quot;https://netron.app&quot;&gt;&lt;strong&gt;Start&lt;/strong&gt;&lt;/a&gt; the browser version.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Python Server&lt;/strong&gt;: Run &lt;code&gt;pip install netron&lt;/code&gt; and &lt;code&gt;netron [FILE]&lt;/code&gt; or &lt;code&gt;netron.start(&#39;[FILE]&#39;)&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Models&lt;/h2&gt; 
&lt;p&gt;Sample model files to download or open using the browser version:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ONNX&lt;/strong&gt;: &lt;a href=&quot;https://media.githubusercontent.com/media/onnx/models/master/vision/classification/squeezenet/model/squeezenet1.0-3.onnx&quot;&gt;squeezenet&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://media.githubusercontent.com/media/onnx/models/master/vision/classification/squeezenet/model/squeezenet1.0-3.onnx&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TensorFlow Lite&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/models/hair_segmentation.tflite&quot;&gt;hair_segmentation&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/models/hair_segmentation.tflite&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/srom/chessbot/master/model/chessbot.pb&quot;&gt;chessbot&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/srom/chessbot/master/model/chessbot.pb&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keras&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/aio-libs/aiohttp-demos/master/demos/imagetagger/tests/data/mobilenet.h5&quot;&gt;mobilenet&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/aio-libs/aiohttp-demos/master/demos/imagetagger/tests/data/mobilenet.h5&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Caffe&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/shicai/MobileNet-Caffe/master/mobilenet_v2.caffemodel&quot;&gt;mobilenet_v2&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/shicai/MobileNet-Caffe/master/mobilenet_v2.caffemodel&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TorchScript&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/ApolloAuto/apollo/master/modules/prediction/data/traced_online_pred_layer.pt&quot;&gt;traced_online_pred_layer&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/ApolloAuto/apollo/master/modules/prediction/data/traced_online_pred_layer.pt&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Core ML&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/Lausbert/Exermote/master/ExermoteInference/ExermoteCoreML/ExermoteCoreML/Model/Exermote.mlmodel&quot;&gt;exermote&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/Lausbert/Exermote/master/ExermoteInference/ExermoteCoreML/ExermoteCoreML/Model/Exermote.mlmodel&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Darknet&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolo.cfg&quot;&gt;yolo&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolo.cfg&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; · &lt;a href=&quot;https://github.com/facebook/react/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render &quot;Hello Taylor&quot; into a container on the page.&lt;/p&gt; 
&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/main/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Curated interview preparation materials for busy engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot;&gt;Follow us on Facebook&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href=&quot;https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=github&quot; target=&quot;_blank&quot;&gt;Find out more&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here&#39;s &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href=&quot;https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU&quot;&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;&quot;Front-end Job Interview Questions&quot; answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;💰 Looking for a job? Sign up for free with &lt;a href=&quot;https://triplebyte.com/a/PJaJNpO/tihg&quot;&gt;Triplebyte&lt;/a&gt; to efficiently interview with top tech companies! 💰&lt;/strong&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-React</title>
      <link>https://github.com/Asabeneh/30-Days-Of-React</link>
      <description>&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. It requires HTML, CSS, and JavaScript knowledge. You should be comfortable with JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS. This challenge may take more than 100…&lt;/p&gt;&lt;hr&gt;&lt;div&gt; 
 &lt;img align=&quot;right&quot; width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/30_days_of_react.jpg&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of React&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; October, 2020&lt;/small&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;00&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;JavaScript Refresher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;Getting Started React&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&quot;&gt;Setting Up&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&quot;&gt;Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&quot;&gt;Props&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&quot;&gt;List, Map and Keys&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&quot;&gt;Class Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&quot;&gt;States&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&quot;&gt;Conditional Rendering&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&quot;&gt;React Project Folder Structure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&quot;&gt;Events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&quot;&gt;Controlled and Uncontrolled Component&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&quot;&gt;Component Life Cycles&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&quot;&gt;Third Party Packages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&quot;&gt;Higher Order Components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&quot;&gt;React Router&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&quot;&gt;Fetch versus Axios&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&quot;&gt;Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&quot;&gt;Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&quot;&gt;Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&quot;&gt;Forms Using Hook&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&quot;&gt;Fetching Data Using Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&quot;&gt;Project using Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&quot;&gt;Context&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&quot;&gt;Ref&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&quot;&gt;project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&quot;&gt;Explore&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&quot;&gt;Conclusions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&quot;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&quot;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&quot;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&quot;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&quot;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&quot;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&quot;&gt;Browser&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/thirtydaysofreact&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; 
&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&quot;https://github.com/Asabeneh/30-Days-Of-JavaScript&quot;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&quot;https://t.me/thirtydaysofreact/992&quot;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
 &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use Repo&lt;/h2&gt; 
&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; 
&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; 
&lt;h3&gt;Clone your Fork&lt;/h3&gt; 
&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# note that an `ssh` link is used here, but an `https` link will work the same
git clone git@github.com:username/30-Days-Of-React.git
cd 30-Days-Of-React
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a New Branch&lt;/h3&gt; 
&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add solutions/day-01/level1.js
git commit -m &quot;chore: exercise level1 complete&quot;
git push origin exercise-solutions # branch `exercise-solutions` was created earlier
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; 
&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git merge upstream/master exercise-solutions
git push origin exercise-solutions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;  
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kristories/awesome-guidelines</title>
      <link>https://github.com/Kristories/awesome-guidelines</link>
      <description>&lt;p&gt;A curated list of high quality coding style conventions and standards.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Awesome Guidelines&quot; src=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/assets/header.png&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;Awesome Guidelines &lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A set of guidelines for a specific programming language that recommend programming style, practices, and methods for each aspect of a program written in that language.&lt;/p&gt; 
&lt;p&gt;Contributions welcome. Please read the &lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#contribute&quot;&gt;contribution guidelines&lt;/a&gt; before contributing. Add links through pull requests or create an issue to start a discussion.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Make a small donation to help us fight Covid19&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Visit &lt;a href=&quot;https://kitabisa.com/campaign/indonesialawancorona&quot;&gt;kitabisa.com&lt;/a&gt; and &lt;a href=&quot;https://donasi.dompetdhuafa.org/?donasi_1=Kemanusiaan&amp;amp;donasi_2=Indonesia%20Siap%20Siaga&amp;amp;donasi_3=Bersama%20Lawan%20Corona&quot;&gt;dompetdhuafa.org&lt;/a&gt;. Your small help goes a long way. ❤️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#programming-languages&quot;&gt;Programming Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#development-environment&quot;&gt;Development Environment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#platforms&quot;&gt;Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#frameworks&quot;&gt;Frameworks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#content-management-system&quot;&gt;Content Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Programming Languages&lt;/h2&gt; 
&lt;h3&gt;Brainfuck&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codepen.io/renmans/full/JjdJPpW&quot;&gt;BF Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20080039927.pdf&quot;&gt;NASA C++ Coding Standards and Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://users.ece.cmu.edu/~eno/coding/CCodingStandard.html&quot;&gt;C Coding Standard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikibooks.org/wiki/C_Programming/Structure_and_style&quot;&gt;C Programming/Structure and style&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C#&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions&quot;&gt;C# Coding Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raywenderlich/c-sharp-style-guide&quot;&gt;C# Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dofactory.com/reference/csharp-coding-standards&quot;&gt;C# Coding Standards and Naming Conventions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C++&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/cppguide.html&quot;&gt;Google C++ Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&quot;&gt;C++ Core Guidelines&lt;/a&gt; - A set of tried-and-true guidelines, rules, and best practices about coding in C++.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Clojure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bbatsov/clojure-style-guide&quot;&gt;The Clojure Style Guide&lt;/a&gt; - A community coding style guide for the Clojure programming language.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Common Lisp&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lisp-lang.org/style-guide/&quot;&gt;Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/lispguide.xml&quot;&gt;Google Common Lisp Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://labs.ariel-networks.com/cl-style-guide.html&quot;&gt;Common Lisp Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;D&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dlang.org/dstyle.html&quot;&gt;The D Style&lt;/a&gt; - A set of style conventions for writing D programs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dart&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dartlang.org/guides/language/effective-dart&quot;&gt;Effective Dart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Elixir&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/christopheradams/elixir_style_guide&quot;&gt;Elixir Styleguide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Elm&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://elm-lang.org/docs/style-guide&quot;&gt;Elm style guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Erlang&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.erlang.se/doc/programming_rules.shtml&quot;&gt;Programming Rules and Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inaka/erlang_guidelines&quot;&gt;Erlang Coding Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;F#&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/fsharp/style-guide/component-design-guidelines&quot;&gt;The F# Component Design Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fortran&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://research.metoffice.gov.uk/research/nwp/numerical/fortran90/f90_standards.html&quot;&gt;Fortran 90 Standards&lt;/a&gt; - European Standards For Writing and Documenting Exchangeable Fortran 90 Code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://golang.org/doc/effective_go.html&quot;&gt;Effective Go&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Groovy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://groovy-lang.org/style-guide.html&quot;&gt;Apache Groovy style guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Haskell&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.haskell.org/Programming_guidelines&quot;&gt;Haskell Programming guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Java&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/codeconvtoc-136057.html&quot;&gt;Code Conventions for the Java™ Programming Language&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javaguide.html&quot;&gt;Google Java Style Guide&lt;/a&gt; - Google&#39;s coding standards for source code in the Java™ Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javaranch.com/style.jsp&quot;&gt;Java Programming Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alibaba.github.io/Alibaba-Java-Coding-Guidelines/&quot;&gt;Alibaba-Java-Coding-Guidelines&lt;/a&gt; - A guide for Java developers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mgechev/angularjs-style-guide&quot;&gt;AngularJS Style Guide&lt;/a&gt; - Community-driven set of best practices for AngularJS application development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jstherightway.org&quot;&gt;JavaScript The Right Way&lt;/a&gt; - An easy-to-read, quick reference for JS best practices, accepted coding standards, and links around the Web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt; - This document serves as the complete definition of Google&#39;s coding standards for source code in the JavaScript programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb JavaScript Style Guide&lt;/a&gt; - A mostly reasonable approach to JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://addyosmani.com/blog/javascript-style-guides-and-beautifiers/&quot;&gt;JavaScript Style Guides And Beautifiers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/js/js_conventions.asp&quot;&gt;JavaScript Style Guide and Coding Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://crockford.com/javascript/code.html&quot;&gt;Code Conventions for the JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;JavaScript Clean Code&lt;/a&gt; - Software engineering principles, from Robert C. Martin&#39;s book &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;Clean Code&lt;/a&gt;, adapted for JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsoncstyleguide.xml&quot;&gt;Google JSON Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kotlin&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/reference/coding-conventions.html&quot;&gt;Coding Conventions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Lua&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lua-users.org/wiki/LuaStyleGuide&quot;&gt;Lua Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Markdown&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google/styleguide/raw/gh-pages/docguide/style.md&quot;&gt;Google Markdown Style Guide&lt;/a&gt; - Style guide for Google-originated projects using Markdown.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cirosantilli.com/markdown-style-guide/&quot;&gt;Markdown Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/standard&quot;&gt;.NET Standard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/security/secure-coding-guidelines&quot;&gt;.NET Secure Coding Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines&quot;&gt;.NET Naming Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Objective-C&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/github/objective-c-style-guide&quot;&gt;Objective-C Style guide&lt;/a&gt; - Style guide &amp;amp; coding conventions for Objective-C projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/objcguide.xml&quot;&gt;Google Objective-C Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NYTimes/objective-c-style-guide&quot;&gt;NYTimes Objective-C Style Guide&lt;/a&gt; - The Objective-C Style Guide used by The New York Times.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pascal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wiki.freepascal.org/Coding_style&quot;&gt;Coding style&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Perl&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/RandalSchwartz/perl-best-practices-v4&quot;&gt;Perl best practices v4&lt;/a&gt; - Slides by Randal Schwartz, based on the book by Damian Conway.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perl-begin.org/tutorials/bad-elements/&quot;&gt;Perl Elements to Avoid&lt;/a&gt; - A list of unrecommended practices, and what to do instead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://perldoc.perl.org/perlstyle.html&quot;&gt;perlstyle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.php-fig.org/psr/&quot;&gt;PHP FIG&lt;/a&gt; - PHP Standards Recommendations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.phptherightway.com&quot;&gt;PHP The Right Way&lt;/a&gt; - An easy-to-read, quick reference for PHP best practices, accepted coding standards, and links to authoritative tutorials around the Web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jupeter/clean-code-php&quot;&gt;Clean Code PHP&lt;/a&gt; - Clean Code concepts adapted for PHP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;Style Guide for Python Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/pyguide.html&quot;&gt;Google Python Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.python-guide.org/&quot;&gt;The Hitchhiker&#39;s Guide to Python&lt;/a&gt; - Highly regarded Python best practices guide.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;R&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/Rguide.xml&quot;&gt;Google&#39;s R Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://style.tidyverse.org&quot;&gt;The tidyverse style guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Racket&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.racket-lang.org/style/index.html&quot;&gt;How to Program Racket: a Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ruby&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubystyle.guide&quot;&gt;The Ruby Style Guide&lt;/a&gt; - A community-driven Ruby coding style guide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby Style Guide&lt;/a&gt; - Airbnb&#39;s Ruby Style Guide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bbatsov/ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt; - A community-driven Ruby coding style guide.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang-nursery/fmt-rfcs/raw/master/guide/guide.md&quot;&gt;Rust Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aturon.github.io&quot;&gt;Rust Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Scala&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.scala-lang.org/style/&quot;&gt;Scala Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/databricks/scala-style-guide&quot;&gt;Databricks Scala Guide&lt;/a&gt; - Databricks Scala Coding Style Guide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexandru/scala-best-practices&quot;&gt;Scala Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Swift&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swift.org/documentation/api-design-guidelines/&quot;&gt;API Design Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/github/swift-style-guide&quot;&gt;Swift&lt;/a&gt; - GitHub Official Swift style and conventions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-style-guide&quot;&gt;Swift style guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkedin/swift-style-guide&quot;&gt;Swift Style Guide&lt;/a&gt; - LinkedIn Official Swift Style Guide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metova/swift-style-guide&quot;&gt;Metova&#39;s Swift style guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Swift-Style-Guide&quot;&gt;Xmartlabs Swift Style Guide&lt;/a&gt; - Swift language style guide &amp;amp; coding conventions followed by Xmartlabs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Basic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa240822(v=vs.60).aspx&quot;&gt;Visual Basic Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikibooks.org/wiki/Visual_Basic/Coding_Standards&quot;&gt;Visual Basic/Coding Standards&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;XML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/xmlstyle.html&quot;&gt;Google XML Document Format Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development Environment&lt;/h2&gt; 
&lt;h3&gt;Shell&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/shell.xml&quot;&gt;Shell Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Git&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agis/git-style-guide&quot;&gt;Git Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/git/git/raw/master/Documentation/CodingGuidelines&quot;&gt;Few Rules from Git Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerShell&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoshCode/PowerShellPracticeAndStyle&quot;&gt;The PowerShell Best Practices and Style Guide&lt;/a&gt; - The Unofficial PowerShell Best Practices and Style Guide.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ribot/android-guidelines&quot;&gt;Android Guidelines&lt;/a&gt; - Architecture and code guidelines we use at ribot when developing for Android.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Android-Style-Guide&quot;&gt;Xmartlabs Android Style Guide&lt;/a&gt; - Style guide for Android by Xmartlabs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apache&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://httpd.apache.org/dev/styleguide.html&quot;&gt;Apache Developers&#39; C Language Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stateless.co/hal_specification.html&quot;&gt;HAL&lt;/a&gt; - A simple format that gives a consistent and easy way to hyperlink between resources in your API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/api-guidelines&quot;&gt;Microsoft REST API Guidelines&lt;/a&gt; - The Microsoft REST API Guidelines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsonapi.org/recommendations&quot;&gt;JSON API - Recommendations&lt;/a&gt; - This section contains recommendations for JSON API implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shieldfy/API-Security-Checklist&quot;&gt;API Security Checklist&lt;/a&gt; - Checklist of the most important security countermeasures when designing, testing, and releasing your API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Arduino&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/StyleGuide&quot;&gt;Arduino style guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/APIStyleGuide&quot;&gt;API Style Guide for Arduino&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cssguidelin.es&quot;&gt;CSS Guidelines&lt;/a&gt; - High-level advice and guidelines for writing sane, manageable, scalable CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Some HTML, CSS and JS best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sass-guidelin.es&quot;&gt;Sass Guidelines&lt;/a&gt; - An opinionated styleguide for writing sane, maintainable and scalable Sass.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;Airbnb CSS / Sass Styleguide&lt;/a&gt; - A mostly reasonable approach to CSS and Sass.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcobiedermann/html-style-guide&quot;&gt;HTML Style Guide&lt;/a&gt; - A style guide which helps you write better, performant, structured, scalable and maintainable HTML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://codeguide.co&quot;&gt;HTML + CSS Code Guide&lt;/a&gt; - Standards for flexible, durable, and sustainable HTML and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standards.usa.gov&quot;&gt;U.S. Web Design Standards&lt;/a&gt; - Open source UI components and visual style guide for U.S. government websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/polarmobile/coffeescript-style-guide&quot;&gt;CoffeeScript Style Guide&lt;/a&gt; - A collection of best-practices and coding conventions for the CoffeeScript programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fat/a47b882eb5f84293c4ed&quot;&gt;LESS Coding Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/htmlcssguide.html&quot;&gt;Google HTML/CSS Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/&quot;&gt;Guidelines for Responsive Web Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yelp.com/styleguide&quot;&gt;Yelp Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://conventions.getambassador.com&quot;&gt;Ambassador Conventions&lt;/a&gt; - A UX and design pattern library for all Ambassador apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thedaviddias/Front-End-Checklist&quot;&gt;Front-End Checklist&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GNU&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/prep/standards/&quot;&gt;GNU coding standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Writing-C.html&quot;&gt;Making The Best Use of C&lt;/a&gt; - This chapter provides advice on how best to use the C language when writing GNU software.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Java&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/javaee/javaee-spec&quot;&gt;JavaEE Specification&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kernel.org/doc/html/latest/process/coding-style.html&quot;&gt;Linux kernel coding style&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mailchimp&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://styleguide.mailchimp.com&quot;&gt;Mailchimp Content Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mozilla&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style&quot;&gt;Mozilla Coding Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/misc/coding-style&quot;&gt;npm-coding-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/nodejs-guidelines&quot;&gt;Microsoft + Node.js Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/felixge/node-style-guide&quot;&gt;Node.js Style Guide&lt;/a&gt; - A guide for styling your Node.js / JavaScript code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MongoDB&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsoendermann/MongoStyleGuide&quot;&gt;Mongo Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SQL&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sqlstyle.guide&quot;&gt;SQL Style Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://keepachangelog.com/en/0.3.0/&quot;&gt;Keep a CHANGELOG&lt;/a&gt; - Don&#39;t let your friends dump git logs into CHANGELOGs™.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wearehive/project-guidelines&quot;&gt;Project Guidelines&lt;/a&gt; - A set of best practices for JavaScript projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style&quot;&gt;Indent style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.mozilla.org/WebAppSec/Secure_Coding_Guidelines&quot;&gt;WebAppSec/Secure Coding Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html&quot;&gt;Robot Framework User Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frameworks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://symfony.com/doc/current/contributing/code/standards.html&quot;&gt;Symfony Coding Standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style&quot;&gt;Django Coding Style&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content Management System&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://make.wordpress.org/core/handbook/best-practices/coding-standards/&quot;&gt;WordPress Coding Standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/docs/develop/standards&quot;&gt;Drupal Coding Standards&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;JavaScript Standard Style&lt;/a&gt; - One JavaScript Style to Rule Them All.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/checkstyle/checkstyle&quot;&gt;Checkstyle&lt;/a&gt; - Tool for checking Java source code for adherence to a Code Standard or set of validation rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/conventional-changelog/conventional-changelog&quot;&gt;Conventional Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;semantic-release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pointnorth.io&quot;&gt;North&lt;/a&gt; - Design and development standards to align and guide your project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Symplify/EasyCodingStandard&quot;&gt;EasyCodingStandard&lt;/a&gt; - The Easiest Way to Use Any Coding Standard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cs.symfony.com&quot;&gt;PHP Coding Standards Fixer&lt;/a&gt; - The PHP Coding Standards Fixer (PHP CS Fixer) tool fixes your code to follow standards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubocop.org&quot;&gt;RuboCop&lt;/a&gt; - A Ruby static code analyzer and formatter, based on the community Ruby style guide.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Contributions welcome! Read the &lt;a href=&quot;https://raw.githubusercontent.com/Kristories/awesome-guidelines/master/contributing.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/Kristories/awesome-guidelines/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/awesome-guidelines/contribute&quot;&gt;Contribute on opencollective.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community.&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/awesome-guidelines&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/individuals.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/awesome-guidelines/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/awesome-guidelines/organization/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;🛁 Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures&quot;&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid&quot;&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting&quot;&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.osnews.com/images/comics/wtfm.jpg&quot; alt=&quot;Humorous image of software quality estimation as a count of how many expletives you shout when reading code&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin&#39;s book &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It&#39;s a guide to producing &lt;a href=&quot;https://github.com/ryanmcdermott/3rs-of-software-architecture&quot;&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won&#39;t immediately make you a better software developer, and working with them for many years doesn&#39;t mean you won&#39;t make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don&#39;t beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It&#39;s important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href=&quot;https://github.com/danielstjules/buddy.js&quot;&gt;buddy.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/eslint/eslint/raw/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md&quot;&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don&#39;t repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.carColor = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.color = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default arguments instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default arguments are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other &quot;falsy&quot; values such as &lt;code&gt;&#39;&#39;&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it&#39;s not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it&#39;s immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you&#39;ll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#39;s hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there&#39;s more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there&#39;s only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that&#39;s why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don&#39;t repeat yourself, otherwise you&#39;ll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#39;body&#39; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don&#39;t have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it&#39;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#39;Ryan McDermott&#39;;
console.log(newName); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it&#39;s important to handle them carefully when they&#39;re passed as parameters to a function. A JavaScript function can change an object&#39;s properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there&#39;s a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let&#39;s imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the &quot;Purchase&quot; button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an &quot;Add to Cart&quot; button on an item they don&#39;t actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn&#39;t be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn&#39;t a big issue in practice because there are &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let&#39;s think about an example: what if you wanted to extend JavaScript&#39;s native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn&#39;t a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, &quot;how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?&quot; The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, &quot;well that&#39;s great but why would I want to do that?&quot; The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case &quot;777&quot;:
        return this.getMaxAltitude() - this.getPassengerCount();
      case &quot;Air Force One&quot;:
        return this.getMaxAltitude();
      case &quot;Cessna&quot;:
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location(&quot;texas&quot;));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location(&quot;texas&quot;));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location(&quot;texas&quot;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can&#39;t use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux &quot;type-safety&quot; you get doesn&#39;t make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  if (
    (typeof val1 === &quot;number&quot; &amp;amp;&amp;amp; typeof val2 === &quot;number&quot;) ||
    (typeof val1 === &quot;string&quot; &amp;amp;&amp;amp; typeof val2 === &quot;string&quot;)
  ) {
    return val1 + val2;
  }

  throw new Error(&quot;Must be of type String or Number&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href=&quot;https://github.com/petkaantonov/bluebird/wiki/Optimization-killers&quot;&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There&#39;s no reason to keep it in your codebase. If it&#39;s not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. &quot;Why?&quot; you might ask. Well, here&#39;s an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don&#39;t have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object&#39;s properties, let&#39;s say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a &quot;getter&quot;, made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a &quot;setter&quot;, made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It&#39;s very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error(&quot;Instantiate Animal with `new`&quot;);
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error(&quot;Instantiate Mammal with `new`&quot;);
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error(&quot;Instantiate Human with `new`&quot;);
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;);
car.setColor(&quot;pink&quot;);
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;).setColor(&quot;pink&quot;).save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href=&quot;https://en.wikipedia.org/wiki/Design_Patterns&quot;&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, &quot;when should I use inheritance?&quot; It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an &quot;is-a&quot; relationship and not a &quot;has-a&quot; relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees &quot;have&quot; tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, &quot;There should never be more than one reason for a class to change&quot;. It&#39;s tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won&#39;t be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It&#39;s important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, &quot;software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification.&quot; What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === &quot;ajaxAdapter&quot;) {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === &quot;nodeAdapter&quot;) {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It&#39;s formally defined as &quot;If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.).&quot; That&#39;s an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let&#39;s take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the &quot;is-a&quot; relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn&#39;t have interfaces so this principle doesn&#39;t apply as strictly as others. However, it&#39;s important and relevant even with JavaScript&#39;s lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that &quot;Clients should not be forced to depend upon interfaces that they do not use.&quot; Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won&#39;t need all of the settings. Making them optional helps prevent having a &quot;fat interface&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  animationModule() {} // Most of the time, we won&#39;t need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you&#39;ve worked with AngularJS, you&#39;ve seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn&#39;t have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker([&quot;apples&quot;, &quot;bananas&quot;]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = [&quot;WS&quot;];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  [&quot;apples&quot;, &quot;bananas&quot;],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won&#39;t be sure that you didn&#39;t break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href=&quot;https://gotwarlost.github.io/istanbul/&quot;&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There&#39;s no excuse to not write tests. There are &lt;a href=&quot;https://jstherightway.org/#testing-tools&quot;&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles date boundaries&quot;, () =&amp;gt; {
    let date;

    date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);

    date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);

    date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles 30-day months&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);
  });

  it(&quot;handles leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);
  });

  it(&quot;handles non-leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren&#39;t clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request&quot;;
import { writeFile } from &quot;fs&quot;;

get(
  &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;,
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile(&quot;article.html&quot;, body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log(&quot;File written&quot;);
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

async function getCleanCodeArticle() {
  try {
    const body = await get(
      &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;
    );
    await writeFile(&quot;article.html&quot;, body);
    console.log(&quot;File written&quot;);
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it&#39;s letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don&#39;t ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn&#39;t give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn&#39;t much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don&#39;t ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn&#39;t ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href=&quot;https://standardjs.com/rules.html&quot;&gt;tons of tools&lt;/a&gt; to automate this. Use one! It&#39;s a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don&#39;t fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const Artists = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const ARTISTS = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There&#39;s no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/**
 * 2016-12-20: Removed monads, didn&#39;t understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png&quot; alt=&quot;am&quot;&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hanumanum/clean-code-javascript&quot;&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png&quot; alt=&quot;bd&quot;&gt; &lt;strong&gt;Bangla(বাংলা)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/InsomniacSabbir/clean-code-javascript/&quot;&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fesnt/clean-code-javascript&quot;&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alivebao/clean-code-js&quot;&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/beginor/clean-code-javascript&quot;&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AllJointTW/clean-code-javascript&quot;&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GavBaros/clean-code-javascript-fr&quot;&gt;GavBaros/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/marcbruederlin/clean-code-javascript&quot;&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png&quot; alt=&quot;id&quot;&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andirkh/clean-code-javascript/&quot;&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/frappacchio/clean-code-javascript/&quot;&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;ja&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/clean-code-javascript/&quot;&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/qkraudghgh/clean-code-javascript-ko&quot;&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png&quot; alt=&quot;pl&quot;&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greg-dev/clean-code-javascript-pl&quot;&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/BoryaMogila/clean-code-javascript-ru/&quot;&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/maksugr/clean-code-javascript&quot;&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tureey/clean-code-javascript&quot;&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andersontr15/clean-code-javascript-es&quot;&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Serbia.png&quot; alt=&quot;rs&quot;&gt; &lt;strong&gt;Serbian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/doskovicmilos/clean-code-javascript&quot;&gt;doskovicmilos/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation&quot;&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mindfr1k/clean-code-javascript-ua&quot;&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vi&quot;&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hienvd/clean-code-javascript/&quot;&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atralice/Curso.Prep.Henry</title>
      <link>https://github.com/atralice/Curso.Prep.Henry</link>
      <description>&lt;p&gt;Curso de Preparación para Ingresar a Henry.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/logo.png&quot; height=&quot;70px&quot;&gt; 
&lt;h2&gt;Introducción&lt;/h2&gt; 
&lt;h1&gt;Modulo 0 - Prep&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/00-PrimerosPasos&quot;&gt;00 - Primeros Pasos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/01-Git&quot;&gt;01 - Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/02-JS-I&quot;&gt;02 - I - Introducción a Javascript: Variables, tipos de datos y funciones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/03-JS-II&quot;&gt;03 - II- Flujos de control, operadores de comparación, bucles for&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/04-JS-III&quot;&gt;04 - III - continuación de bucles for y Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/05-JS-IV&quot;&gt;05 - IV - Objetos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/06-JS-V&quot;&gt;06 - V - Clases y prototype&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/07-JS-VI&quot;&gt;07 - VI - Callbacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/08-HTML&quot;&gt;08 - HTML&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/09-CSS-Positioning&quot;&gt;09 - CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Henry Challenge =&amp;gt; &lt;a href=&quot;https://airtable.com/shrjhdL2GfsusMZ05&quot;&gt;Inscribite acá para rendir&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conceptos:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/JS-conceptos/Statements-Expressions/&quot;&gt;Expressions vs Statements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Homeworks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Para ejecutar los tests de cada homework tenes que pararte en la carpeta donde clonaste tu repo (es decir la carpeta donde está este &lt;code&gt;README.md&lt;/code&gt;) y ejecutar el siguiente comando:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Esto instalará todas las dependencias necesarias (lo tenés que hacer una sóla vez), una vez terminado y cada vez que quieras ver cuantos tests pasaste ejecutá:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test {nombre del homework}.test.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Por ejemplo, para ejecutar los tests del homework 02, ejecutar: &lt;code&gt;npm test JSII.test.js&lt;/code&gt; el del homework 01: &lt;code&gt;npm test JSI.test.js&lt;/code&gt; y así.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;No todos los homeworks tiene tests, está detallado en la descripción de cada uno.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;La Carrera&lt;/h1&gt; 
&lt;p&gt;Si querés saber más sobre la carrera, mirá este video:&lt;/p&gt; &amp;lt;iframe src=&quot;https://player.vimeo.com/video/426051769&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://d3js.org/logo.svg?sanitize=true&quot; align=&quot;left&quot; hspace=&quot;10&quot; vspace=&quot;6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/learn-d3&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/raw/master/API.md&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. You can also download the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release on GitHub&lt;/a&gt;. For vanilla HTML in modern browsers, import D3 from Skypack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import * as d3 from &quot;https://cdn.skypack.dev/d3@7&quot;;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For legacy environments, you can load D3’s UMD bundle from an npm-based CDN such as jsDelivr; a &lt;code&gt;d3&lt;/code&gt; global is exported:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/d3@7&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;

const div = d3.selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;

import {selectAll} from &quot;https://cdn.skypack.dev/d3-selection@3&quot;;

const div = selectAll(&quot;div&quot;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;D3 is written using &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES2015 modules&lt;/a&gt;. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {scaleLinear} from &quot;d3-scale&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import * as d3 from &quot;d3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using dynamic import:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await import(&quot;d3&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also import individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = await Promise.all([
  import(&quot;d3-format&quot;),
  import(&quot;d3-geo&quot;),
  import(&quot;d3-geo-projection&quot;)
]).then(d3 =&amp;gt; Object.assign({}, ...d3));
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don&#39;t do &quot;whiteboard&quot; interviews. &quot;Whiteboards&quot; is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhh/status/834146806594433025?lang=en&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xJV6cF4.png&quot; width=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.affinipay.com&quot;&gt;Affinipay&lt;/a&gt; | Austin, TX | Short takehome project + video interview about coding with engineering manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you&#39;re applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; São Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and &quot;meet the team&quot;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitpanda.com/en/career&quot;&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bloomworks.digital/software-engineer/&quot;&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate&#39;s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonus.ly/careers&quot;&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute&#39;s Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/careers&quot;&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bryter.com/careers&quot;&gt;BRYTER&lt;/a&gt; | Remote | Initial 30min video call for getting to know each other, one 90min technical interview where you talk about one relevant previous project and we then dive deeper together (no pairing session or any other kind of exercise), second 90min interview where we ask questions around giving/receiving feedback and your ability to build relationships in remote setting, two final calls with people lead and then founder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.btw.so&quot;&gt;btw&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Initial phone screen for cultural round, optional take-home assignment, two rounds of video interviews (1-2hrs) discussing through previous projects and technical stack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We&#39;ll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we&#39;ve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston&#39;s Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia&#39;s Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they&#39;ve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/cquence-app/jobs&quot;&gt;Cquence&lt;/a&gt; | Remote | Phone screen, take-home coding challenge, collaborative technical interview, and behavioral interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone&#39;s professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate&#39;s achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You&#39;ll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working &quot;sprint&quot; in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash &lt;span&gt;🏃&lt;/span&gt;&lt;span&gt;💨&lt;/span&gt;&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it&#39;s real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, &quot;Resume&quot; interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we&#39;ve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate&#39;s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you&#39;re looking for in your next role, followed by a take-home practical test relevant to the work you&#39;ll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ezgress.com&quot;&gt;ezgress&lt;/a&gt; | Idaho Falls, ID | Our policy is for the technical interview to be tailored to the given candidate and role. Questions delve into real-world experience and how that can be used to tackle current company challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://field33.com/jobs&quot;&gt;Field 33&lt;/a&gt; | Berlin, Germany | Video call interview followed by a take home project over a 3 day duration chosen by the candidate with hours spent up to the candidate. The project is tailored to the position and skill level of the candidate and resembles a past real-life problem encountered at our company. Solution is discussed in a ~30min call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ginger.com/careers&quot;&gt;Ginger&lt;/a&gt; | Remote; San Francisco, CA | Realistic coding exercise, take-home project, virtual onsite (system design, experience, and culture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate&#39;s experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herodigital.com&quot;&gt;Hero Digital&lt;/a&gt; |&amp;nbsp;San Francisco, CA; Remote | Take-home project with code review, multiple (non-technical) interviews with different areas of the company about past projects and experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, &quot;meet the team&quot; meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hologram.io/careers&quot;&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interfrog.de/jobs&quot;&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.microfocus.com&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.knock.com/careers&quot;&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gokoho.com&quot;&gt;Koho by Expeditors&lt;/a&gt; | Portland, OR | Phone screening. Take home assignment. Conversational technical and cultural interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kulkul.tech/careers&quot;&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lattice.com/careers&quot;&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a &quot;guest lecture&quot; for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linxsystems.com&quot;&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we&#39;ve had to solve in production. Our entire interview process and what we&#39;re looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft&#39;s Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate&#39;s completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mealme.ai&quot;&gt;MealMe&lt;/a&gt; | San Francisco, California | Initial introductory interview, 1 hour technical interview with CTO (real-world problem), rapid fire questions about thinking and working in a start-up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate&#39;s previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate&#39;s experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you&#39;ll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee&#39;s platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there&#39;s a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordsecurity.com/careers&quot;&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noyo.com/careers/&quot;&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you&#39;re proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O&#39;Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming...&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oncue.co&quot;&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/openbasecom&quot;&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site &quot;meet the team&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and &quot;soft skills&quot; interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.rapptrlabs.com&quot;&gt;Rapptr Labs&lt;/a&gt; | Jersey City, NJ | Take-home exercise followed by a video interview with 2-3 engineers about domain-specific knowledge and open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.realtor.com/careers&quot;&gt;Realtor.com&lt;/a&gt; | Santa Clara, CA; Austin, TX; Vancouver, BC; Westlake Village, CA; Scottsdale, AZ; Morgantown, WV; New York, NY; Chicago, IL | Phone interview with the hiring manager, then a take home project (5 hours max), then video interview with a set of engineers to discuss the project and ask technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate&#39;s profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/our-company/careers/current-opportunities/&quot;&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/render&quot;&gt;Render&lt;/a&gt; | San Francisco, CA; Remote | Phone screen followed by an onsite project based on our day-to-day, real world challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta&#39; Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we&#39;ve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.splyt.com&quot;&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen --&amp;gt; Take-home coding assignment --&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams --&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strv.com/careers&quot;&gt;STRV&lt;/a&gt; | Prague, Czech Republic; Brno, Czech Republic; Remote | A social interview with a recruiter + take-home coding challenge followed by a technical interview session discussing your approach in solving the take-home assignment + a culture-fit interview with the head of engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn&#39;t include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.swisscom.ch/en/about/career.html&quot;&gt;Swisscom&lt;/a&gt; | Rotterdam, The Netherlands | A mix of behavioural, technical and cultural interview, take-home project, project review with engineers from different teams and cultural interview with staff members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal &quot;Meet the Team&quot; meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they’re looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let&#39;s pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/wallapop/&quot;&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It’s followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3boxlabs.com&quot;&gt;3BoxLabs&lt;/a&gt; | Remote | Intro call, resume walk-through, and finally live work exercise with ~2 hours indepdendent work followed by ~1.5 hour debrief discussing the work with the rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product&#39;s domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that&#39;s representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml&quot;&gt;&lt;img src=&quot;https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml/badge.svg?branch=master&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leaflet/Leaflet</title>
      <link>https://github.com/Leaflet/Leaflet</link>
      <description>&lt;p&gt;🍃 JavaScript library for mobile-friendly interactive maps&lt;/p&gt;&lt;hr&gt;&lt;img width=&quot;600&quot; src=&quot;https://rawgit.com/Leaflet/Leaflet/master/src/images/logo.svg?sanitize=true&quot; alt=&quot;Leaflet&quot;&gt; 
&lt;p&gt;Leaflet is the leading open-source JavaScript library for &lt;strong&gt;mobile-friendly interactive maps&lt;/strong&gt;. Weighing just about 39 KB of gzipped JS plus 4 KB of gzipped CSS code, it has all the mapping &lt;a href=&quot;http://leafletjs.com/#features&quot;&gt;features&lt;/a&gt; most developers ever need.&lt;/p&gt; 
&lt;p&gt;Leaflet is designed with &lt;em&gt;simplicity&lt;/em&gt;, &lt;em&gt;performance&lt;/em&gt; and &lt;em&gt;usability&lt;/em&gt; in mind. It works efficiently across all major desktop and mobile platforms out of the box, taking advantage of HTML5 and CSS3 on modern browsers while being accessible on older ones too. It can be extended with a huge amount of &lt;a href=&quot;http://leafletjs.com/plugins.html&quot;&gt;plugins&lt;/a&gt;, has a beautiful, easy to use and &lt;a href=&quot;http://leafletjs.com/reference.html&quot; title=&quot;Leaflet API reference&quot;&gt;well-documented&lt;/a&gt; API and a simple, readable &lt;a href=&quot;https://github.com/Leaflet/Leaflet&quot; title=&quot;Leaflet GitHub repository&quot;&gt;source code&lt;/a&gt; that is a joy to &lt;a href=&quot;https://github.com/Leaflet/Leaflet/raw/master/CONTRIBUTING.md&quot; title=&quot;A guide to contributing to Leaflet&quot;&gt;contribute&lt;/a&gt; to.&lt;/p&gt; 
&lt;p&gt;For more info, docs and tutorials, check out the &lt;a href=&quot;http://leafletjs.com&quot;&gt;official website&lt;/a&gt;.&lt;br&gt; For &lt;strong&gt;Leaflet downloads&lt;/strong&gt; (including the built master version), check out the &lt;a href=&quot;http://leafletjs.com/download.html&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We&#39;re happy to meet new contributors. If you want to &lt;strong&gt;get involved&lt;/strong&gt; with Leaflet development, check out the &lt;a href=&quot;https://github.com/Leaflet/Leaflet/raw/master/CONTRIBUTING.md&quot; title=&quot;A guide to contributing to Leaflet&quot;&gt;contribution guide&lt;/a&gt;. Let&#39;s make the best mapping library that will ever exist, and push the limits of what&#39;s possible with online maps!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Leaflet/Leaflet&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Leaflet/Leaflet.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio-desktop</title>
      <link>https://github.com/jgraph/drawio-desktop</link>
      <description>&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a &lt;strong&gt;diagrams.net&lt;/strong&gt; desktop app based on &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. draw.io is the old name for diagrams.net, we just don&#39;t want the hassle of changing all the binary&#39;s names.&lt;/p&gt; 
&lt;p&gt;Download built binaries from the &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; 
&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To run this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; runs the app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To release:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; 
 &lt;li&gt;Wait for the builds to complete (&lt;a href=&quot;https://travis-ci.org/jgraph/drawio-desktop&quot;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&quot;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&quot;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; 
 &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add release notes&lt;/li&gt; 
 &lt;li&gt;Publish release&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Marak/faker.js</title>
      <link>https://github.com/Marak/faker.js</link>
      <description>&lt;p&gt;generate massive amounts of realistic fake data in Node.js and the browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;faker.js - generate massive amounts of fake data in the browser and node.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/logo.png&quot; alt=&quot;Faker.js&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Marak/faker.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Marak/faker.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/Marak/faker.js?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/Marak/faker.js/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/js/faker&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/faker.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backers/badge.svg?sanitize=true&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsors/badge.svg?sanitize=true&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/Faker-js/community&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/marak/faker.js.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&quot;&gt;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Faker Cloud&lt;/h3&gt; 
&lt;p&gt;Don&#39;t have a local development setup ready?&lt;/p&gt; 
&lt;p&gt;Try our hosted version of Faker at &lt;a href=&quot;https://fakercloud.com/api&quot;&gt;https://fakercloud.com/api&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/faker/faker-cloud&quot;&gt;https://github.com/faker/faker-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;script src = &quot;faker.js&quot; type = &quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      var randomName = faker.name.findName(); // Caitlyn Kerluke
      var randomEmail = faker.internet.email(); // Rusty@arne.info
      var randomCard = faker.helpers.createCard(); // random contact card containing many properties
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    var faker = require(&#39;faker&#39;);

    var randomName = faker.name.findName(); // Rowan Nikolaus
    var randomEmail = faker.internet.email(); // Kassandra.Haley@erich.biz
    var randomCard = faker.helpers.createCard(); // random contact card containing many properties
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;JSDoc API Browser&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://marak.github.io/faker.js/&quot;&gt;http://marak.github.io/faker.js/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;API Methods&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;address 
  &lt;ul&gt; 
   &lt;li&gt;zipCode&lt;/li&gt; 
   &lt;li&gt;zipCodeByState&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;cityPrefix&lt;/li&gt; 
   &lt;li&gt;citySuffix&lt;/li&gt; 
   &lt;li&gt;cityName&lt;/li&gt; 
   &lt;li&gt;streetName&lt;/li&gt; 
   &lt;li&gt;streetAddress&lt;/li&gt; 
   &lt;li&gt;streetSuffix&lt;/li&gt; 
   &lt;li&gt;streetPrefix&lt;/li&gt; 
   &lt;li&gt;secondaryAddress&lt;/li&gt; 
   &lt;li&gt;county&lt;/li&gt; 
   &lt;li&gt;country&lt;/li&gt; 
   &lt;li&gt;countryCode&lt;/li&gt; 
   &lt;li&gt;state&lt;/li&gt; 
   &lt;li&gt;stateAbbr&lt;/li&gt; 
   &lt;li&gt;latitude&lt;/li&gt; 
   &lt;li&gt;longitude&lt;/li&gt; 
   &lt;li&gt;direction&lt;/li&gt; 
   &lt;li&gt;cardinalDirection&lt;/li&gt; 
   &lt;li&gt;ordinalDirection&lt;/li&gt; 
   &lt;li&gt;nearbyGPSCoordinate&lt;/li&gt; 
   &lt;li&gt;timeZone&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;animal 
  &lt;ul&gt; 
   &lt;li&gt;dog&lt;/li&gt; 
   &lt;li&gt;cat&lt;/li&gt; 
   &lt;li&gt;snake&lt;/li&gt; 
   &lt;li&gt;bear&lt;/li&gt; 
   &lt;li&gt;lion&lt;/li&gt; 
   &lt;li&gt;cetacean&lt;/li&gt; 
   &lt;li&gt;horse&lt;/li&gt; 
   &lt;li&gt;bird&lt;/li&gt; 
   &lt;li&gt;cow&lt;/li&gt; 
   &lt;li&gt;fish&lt;/li&gt; 
   &lt;li&gt;crocodilia&lt;/li&gt; 
   &lt;li&gt;insect&lt;/li&gt; 
   &lt;li&gt;rabbit&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;commerce 
  &lt;ul&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;department&lt;/li&gt; 
   &lt;li&gt;productName&lt;/li&gt; 
   &lt;li&gt;price&lt;/li&gt; 
   &lt;li&gt;productAdjective&lt;/li&gt; 
   &lt;li&gt;productMaterial&lt;/li&gt; 
   &lt;li&gt;product&lt;/li&gt; 
   &lt;li&gt;productDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;company 
  &lt;ul&gt; 
   &lt;li&gt;suffixes&lt;/li&gt; 
   &lt;li&gt;companyName&lt;/li&gt; 
   &lt;li&gt;companySuffix&lt;/li&gt; 
   &lt;li&gt;catchPhrase&lt;/li&gt; 
   &lt;li&gt;bs&lt;/li&gt; 
   &lt;li&gt;catchPhraseAdjective&lt;/li&gt; 
   &lt;li&gt;catchPhraseDescriptor&lt;/li&gt; 
   &lt;li&gt;catchPhraseNoun&lt;/li&gt; 
   &lt;li&gt;bsAdjective&lt;/li&gt; 
   &lt;li&gt;bsBuzz&lt;/li&gt; 
   &lt;li&gt;bsNoun&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;database 
  &lt;ul&gt; 
   &lt;li&gt;column&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;collation&lt;/li&gt; 
   &lt;li&gt;engine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;datatype 
  &lt;ul&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;float&lt;/li&gt; 
   &lt;li&gt;datetime&lt;/li&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;uuid&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;hexaDecimal&lt;/li&gt; 
   &lt;li&gt;json&lt;/li&gt; 
   &lt;li&gt;array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;date 
  &lt;ul&gt; 
   &lt;li&gt;past&lt;/li&gt; 
   &lt;li&gt;future&lt;/li&gt; 
   &lt;li&gt;between&lt;/li&gt; 
   &lt;li&gt;betweens&lt;/li&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
   &lt;li&gt;soon&lt;/li&gt; 
   &lt;li&gt;month&lt;/li&gt; 
   &lt;li&gt;weekday&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;fake&lt;/li&gt; 
 &lt;li&gt;finance 
  &lt;ul&gt; 
   &lt;li&gt;account&lt;/li&gt; 
   &lt;li&gt;accountName&lt;/li&gt; 
   &lt;li&gt;routingNumber&lt;/li&gt; 
   &lt;li&gt;mask&lt;/li&gt; 
   &lt;li&gt;amount&lt;/li&gt; 
   &lt;li&gt;transactionType&lt;/li&gt; 
   &lt;li&gt;currencyCode&lt;/li&gt; 
   &lt;li&gt;currencyName&lt;/li&gt; 
   &lt;li&gt;currencySymbol&lt;/li&gt; 
   &lt;li&gt;bitcoinAddress&lt;/li&gt; 
   &lt;li&gt;litecoinAddress&lt;/li&gt; 
   &lt;li&gt;creditCardNumber&lt;/li&gt; 
   &lt;li&gt;creditCardCVV&lt;/li&gt; 
   &lt;li&gt;ethereumAddress&lt;/li&gt; 
   &lt;li&gt;iban&lt;/li&gt; 
   &lt;li&gt;bic&lt;/li&gt; 
   &lt;li&gt;transactionDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;git 
  &lt;ul&gt; 
   &lt;li&gt;branch&lt;/li&gt; 
   &lt;li&gt;commitEntry&lt;/li&gt; 
   &lt;li&gt;commitMessage&lt;/li&gt; 
   &lt;li&gt;commitSha&lt;/li&gt; 
   &lt;li&gt;shortSha&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;hacker 
  &lt;ul&gt; 
   &lt;li&gt;abbreviation&lt;/li&gt; 
   &lt;li&gt;adjective&lt;/li&gt; 
   &lt;li&gt;noun&lt;/li&gt; 
   &lt;li&gt;verb&lt;/li&gt; 
   &lt;li&gt;ingverb&lt;/li&gt; 
   &lt;li&gt;phrase&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;helpers 
  &lt;ul&gt; 
   &lt;li&gt;randomize&lt;/li&gt; 
   &lt;li&gt;slugify&lt;/li&gt; 
   &lt;li&gt;replaceSymbolWithNumber&lt;/li&gt; 
   &lt;li&gt;replaceSymbols&lt;/li&gt; 
   &lt;li&gt;replaceCreditCardSymbols&lt;/li&gt; 
   &lt;li&gt;repeatString&lt;/li&gt; 
   &lt;li&gt;regexpStyleStringParse&lt;/li&gt; 
   &lt;li&gt;shuffle&lt;/li&gt; 
   &lt;li&gt;mustache&lt;/li&gt; 
   &lt;li&gt;createCard&lt;/li&gt; 
   &lt;li&gt;contextualCard&lt;/li&gt; 
   &lt;li&gt;userCard&lt;/li&gt; 
   &lt;li&gt;createTransaction&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;image 
  &lt;ul&gt; 
   &lt;li&gt;image&lt;/li&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;imageUrl&lt;/li&gt; 
   &lt;li&gt;abstract&lt;/li&gt; 
   &lt;li&gt;animals&lt;/li&gt; 
   &lt;li&gt;business&lt;/li&gt; 
   &lt;li&gt;cats&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;food&lt;/li&gt; 
   &lt;li&gt;nightlife&lt;/li&gt; 
   &lt;li&gt;fashion&lt;/li&gt; 
   &lt;li&gt;people&lt;/li&gt; 
   &lt;li&gt;nature&lt;/li&gt; 
   &lt;li&gt;sports&lt;/li&gt; 
   &lt;li&gt;technics&lt;/li&gt; 
   &lt;li&gt;transport&lt;/li&gt; 
   &lt;li&gt;dataUri&lt;/li&gt; 
   &lt;li&gt;lorempixel&lt;/li&gt; 
   &lt;li&gt;unsplash&lt;/li&gt; 
   &lt;li&gt;lorempicsum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;internet 
  &lt;ul&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;email&lt;/li&gt; 
   &lt;li&gt;exampleEmail&lt;/li&gt; 
   &lt;li&gt;userName&lt;/li&gt; 
   &lt;li&gt;protocol&lt;/li&gt; 
   &lt;li&gt;httpMethod&lt;/li&gt; 
   &lt;li&gt;url&lt;/li&gt; 
   &lt;li&gt;domainName&lt;/li&gt; 
   &lt;li&gt;domainSuffix&lt;/li&gt; 
   &lt;li&gt;domainWord&lt;/li&gt; 
   &lt;li&gt;ip&lt;/li&gt; 
   &lt;li&gt;ipv6&lt;/li&gt; 
   &lt;li&gt;port&lt;/li&gt; 
   &lt;li&gt;userAgent&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;mac&lt;/li&gt; 
   &lt;li&gt;password&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;lorem 
  &lt;ul&gt; 
   &lt;li&gt;word&lt;/li&gt; 
   &lt;li&gt;words&lt;/li&gt; 
   &lt;li&gt;sentence&lt;/li&gt; 
   &lt;li&gt;slug&lt;/li&gt; 
   &lt;li&gt;sentences&lt;/li&gt; 
   &lt;li&gt;paragraph&lt;/li&gt; 
   &lt;li&gt;paragraphs&lt;/li&gt; 
   &lt;li&gt;text&lt;/li&gt; 
   &lt;li&gt;lines&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;mersenne 
  &lt;ul&gt; 
   &lt;li&gt;rand&lt;/li&gt; 
   &lt;li&gt;seed&lt;/li&gt; 
   &lt;li&gt;seed_array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;music 
  &lt;ul&gt; 
   &lt;li&gt;genre&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;name 
  &lt;ul&gt; 
   &lt;li&gt;firstName&lt;/li&gt; 
   &lt;li&gt;lastName&lt;/li&gt; 
   &lt;li&gt;middleName&lt;/li&gt; 
   &lt;li&gt;findName&lt;/li&gt; 
   &lt;li&gt;jobTitle&lt;/li&gt; 
   &lt;li&gt;gender&lt;/li&gt; 
   &lt;li&gt;prefix&lt;/li&gt; 
   &lt;li&gt;suffix&lt;/li&gt; 
   &lt;li&gt;title&lt;/li&gt; 
   &lt;li&gt;jobDescriptor&lt;/li&gt; 
   &lt;li&gt;jobArea&lt;/li&gt; 
   &lt;li&gt;jobType&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;phone 
  &lt;ul&gt; 
   &lt;li&gt;phoneNumber&lt;/li&gt; 
   &lt;li&gt;phoneNumberFormat&lt;/li&gt; 
   &lt;li&gt;phoneFormats&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;system 
  &lt;ul&gt; 
   &lt;li&gt;fileName&lt;/li&gt; 
   &lt;li&gt;commonFileName&lt;/li&gt; 
   &lt;li&gt;mimeType&lt;/li&gt; 
   &lt;li&gt;commonFileType&lt;/li&gt; 
   &lt;li&gt;commonFileExt&lt;/li&gt; 
   &lt;li&gt;fileType&lt;/li&gt; 
   &lt;li&gt;fileExt&lt;/li&gt; 
   &lt;li&gt;directoryPath&lt;/li&gt; 
   &lt;li&gt;filePath&lt;/li&gt; 
   &lt;li&gt;semver&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;time 
  &lt;ul&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;unique&lt;/li&gt; 
 &lt;li&gt;vehicle 
  &lt;ul&gt; 
   &lt;li&gt;vehicle&lt;/li&gt; 
   &lt;li&gt;manufacturer&lt;/li&gt; 
   &lt;li&gt;model&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;fuel&lt;/li&gt; 
   &lt;li&gt;vin&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;vrm&lt;/li&gt; 
   &lt;li&gt;bicycle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Faker.fake()&lt;/h3&gt; 
&lt;p&gt;faker.js contains a super useful generator method &lt;code&gt;Faker.fake&lt;/code&gt; for combining faker API methods using a mustache string format.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(faker.fake(&quot;{{name.lastName}}, {{name.firstName}} {{name.suffix}}&quot;));
// outputs: &quot;Marks, Dean Sr.&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will interpolate the format string with the value of methods &lt;code&gt;name.lastName()&lt;/code&gt;, &lt;code&gt;name.firstName()&lt;/code&gt;, and &lt;code&gt;name.suffix()&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;As of version &lt;code&gt;v2.0.0&lt;/code&gt; faker.js has support for multiple localities.&lt;/p&gt; 
&lt;p&gt;The default language locale is set to English.&lt;/p&gt; 
&lt;p&gt;Setting a new locale is simple:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// sets locale to de
faker.locale = &quot;de&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;az&lt;/li&gt; 
 &lt;li&gt;ar&lt;/li&gt; 
 &lt;li&gt;cz&lt;/li&gt; 
 &lt;li&gt;de&lt;/li&gt; 
 &lt;li&gt;de_AT&lt;/li&gt; 
 &lt;li&gt;de_CH&lt;/li&gt; 
 &lt;li&gt;en&lt;/li&gt; 
 &lt;li&gt;en_AU&lt;/li&gt; 
 &lt;li&gt;en_AU_ocker&lt;/li&gt; 
 &lt;li&gt;en_BORK&lt;/li&gt; 
 &lt;li&gt;en_CA&lt;/li&gt; 
 &lt;li&gt;en_GB&lt;/li&gt; 
 &lt;li&gt;en_IE&lt;/li&gt; 
 &lt;li&gt;en_IND&lt;/li&gt; 
 &lt;li&gt;en_US&lt;/li&gt; 
 &lt;li&gt;en_ZA&lt;/li&gt; 
 &lt;li&gt;es&lt;/li&gt; 
 &lt;li&gt;es_MX&lt;/li&gt; 
 &lt;li&gt;fa&lt;/li&gt; 
 &lt;li&gt;fi&lt;/li&gt; 
 &lt;li&gt;fr&lt;/li&gt; 
 &lt;li&gt;fr_CA&lt;/li&gt; 
 &lt;li&gt;fr_CH&lt;/li&gt; 
 &lt;li&gt;ge&lt;/li&gt; 
 &lt;li&gt;hy&lt;/li&gt; 
 &lt;li&gt;hr&lt;/li&gt; 
 &lt;li&gt;id_ID&lt;/li&gt; 
 &lt;li&gt;it&lt;/li&gt; 
 &lt;li&gt;ja&lt;/li&gt; 
 &lt;li&gt;ko&lt;/li&gt; 
 &lt;li&gt;nb_NO&lt;/li&gt; 
 &lt;li&gt;ne&lt;/li&gt; 
 &lt;li&gt;nl&lt;/li&gt; 
 &lt;li&gt;nl_BE&lt;/li&gt; 
 &lt;li&gt;pl&lt;/li&gt; 
 &lt;li&gt;pt_BR&lt;/li&gt; 
 &lt;li&gt;pt_PT&lt;/li&gt; 
 &lt;li&gt;ro&lt;/li&gt; 
 &lt;li&gt;ru&lt;/li&gt; 
 &lt;li&gt;sk&lt;/li&gt; 
 &lt;li&gt;sv&lt;/li&gt; 
 &lt;li&gt;tr&lt;/li&gt; 
 &lt;li&gt;uk&lt;/li&gt; 
 &lt;li&gt;vi&lt;/li&gt; 
 &lt;li&gt;zh_CN&lt;/li&gt; 
 &lt;li&gt;zh_TW&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Individual Localization Packages&lt;/h3&gt; 
&lt;p&gt;faker.js supports incremental loading of locales.&lt;/p&gt; 
&lt;p&gt;By default, requiring &lt;code&gt;faker&lt;/code&gt; will include &lt;em&gt;all&lt;/em&gt; locale data.&lt;/p&gt; 
&lt;p&gt;In a production environment, you may only want to include the locale data for a specific set of locales.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// loads only de locale
var faker = require(&#39;faker/locale/de&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setting a randomness seed&lt;/h2&gt; 
&lt;p&gt;If you want consistent results, you can set your own seed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;faker.seed(123);

var firstRandom = faker.datatype.number();

// Setting the seed again resets the sequence.
faker.seed(123);

var secondRandom = faker.datatype.number();

console.log(firstRandom === secondRandom);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install .
npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can view a code coverage report generated in coverage/lcov-report/index.html.&lt;/p&gt; 
&lt;h2&gt;Building faker.js&lt;/h2&gt; 
&lt;p&gt;faker uses &lt;a href=&quot;http://gulpjs.com/&quot;&gt;gulp&lt;/a&gt; to automate its build process. Each build operation is a separate task which can be run independently.&lt;/p&gt; 
&lt;h3&gt;Browser Bundle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run browser
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building JSDocs&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://jsdoc.app/&quot;&gt;JSDOC&lt;/a&gt; v3 HTML API documentation&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run jsdoc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building ReadMe&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;ReadMe.md&lt;/code&gt; file for &lt;code&gt;faker.js&lt;/code&gt; is automatically generated and should not be modified directly. All updates to &lt;code&gt;ReadMe.md&lt;/code&gt; should be performed in &lt;code&gt;./build/src/docs.md&lt;/code&gt; and then the build script should be run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run readme
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Version Release Schedule&lt;/h2&gt; 
&lt;p&gt;faker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.&lt;/p&gt; 
&lt;p&gt;If you require the absolute latest version of &lt;code&gt;faker.js&lt;/code&gt; the &lt;code&gt;master&lt;/code&gt; branch @ &lt;a href=&quot;http://github.com/marak/faker.js/&quot;&gt;http://github.com/marak/faker.js/&lt;/a&gt; should always be up to date and working.&lt;/p&gt; 
&lt;h2&gt;Maintainer&lt;/h2&gt; 
&lt;h4&gt;Marak Squires&lt;/h4&gt; 
&lt;p&gt;faker.js - Copyright (c) 2020 Marak Squires &lt;a href=&quot;http://www.marak.com&quot;&gt;www.marak.com&lt;/a&gt; &lt;a href=&quot;http://github.com/marak/faker.js/&quot;&gt;http://github.com/marak/faker.js/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;faker.js was inspired by and has used data definitions from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stympy/faker/&quot;&gt;https://github.com/stympy/faker/&lt;/a&gt; - Copyright (c) 2007-2010 Benjamin Curtis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://search.cpan.org/~jasonk/Data-Faker-0.07/&quot;&gt;http://search.cpan.org/~jasonk/Data-Faker-0.07/&lt;/a&gt; - Copyright 2004-2005 by Jason Kohles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/fakerjs#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/fakerjs/backer/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&quot;https://opencollective.com/fakerjs#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>agalwood/Motrix</title>
      <link>https://github.com/agalwood/Motrix</link>
      <description>&lt;p&gt;A full-featured download manager.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Motrix&lt;/h1&gt; 
&lt;a href=&quot;https://motrix.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/static/512x512.png&quot; width=&quot;256&quot; alt=&quot;App Icon&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;A full-featured download manager&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/agalwood/Motrix.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg?sanitize=true&quot; alt=&quot;Build/release&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/agalwood/Motrix/total.svg?sanitize=true&quot; alt=&quot;Total Downloads&quot;&gt; &lt;img src=&quot;https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667&quot; alt=&quot;Support Platforms&quot;&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/README-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.&lt;/p&gt; 
&lt;p&gt;Motrix has a clean and easy to use interface. I hope you will like it 👻.&lt;/p&gt; 
&lt;p&gt;✈️ &lt;a href=&quot;https://motrix.app&quot;&gt;Official Website&lt;/a&gt; | 📖 &lt;a href=&quot;https://github.com/agalwood/Motrix/wiki&quot;&gt;Manual&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💽 Installation&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub Releases&lt;/a&gt; and install it.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.&lt;/p&gt; 
&lt;p&gt;If you use package management tools to manage applications on Windows, such as &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt;. You can use them to install Motrix.&lt;/p&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/iYato&quot;&gt;@Yato&lt;/a&gt; for continuing to maintain the &lt;a href=&quot;https://community.chocolatey.org/packages/motrix&quot;&gt;Motrix Chocolatey&lt;/a&gt; package. To install motrix, run the following command from the &lt;code&gt;command line&lt;/code&gt; or from &lt;code&gt;PowerShell&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
choco install motrix

# Upgrade
choco upgrade motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;scoop&lt;/h4&gt; 
&lt;p&gt;If you prefer the portable version, you can use &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt; (need Windows 7+) to install Motrix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scoop bucket add extras
scoop install motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;The macOS users can install Motrix using &lt;code&gt;brew cask&lt;/code&gt;, thanks to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/pull/59494&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/Mitscherlich&quot;&gt;@Mitscherlich&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew update &amp;amp;&amp;amp; brew install --cask motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download the &lt;code&gt;AppImage&lt;/code&gt; (for all Linux distributions) or &lt;code&gt;snap&lt;/code&gt; to install Motrix, see &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub/release&lt;/a&gt; for more Linux installation package formats.&lt;/p&gt; 
&lt;p&gt;Motrix may need to run with &lt;code&gt;sudo&lt;/code&gt; for the first time in Linux because there is no permission to create the download session file (&lt;code&gt;/var/cache/aria2.session&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If you want to build from source code, please read the &lt;strong&gt;Build&lt;/strong&gt; section.&lt;/p&gt; 
&lt;h4&gt;AppImage&lt;/h4&gt; 
&lt;p&gt;The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; .&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Desktop Integration Since electron-builder 21 desktop integration is not a part of produced AppImage file. &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; is the recommended way to integrate AppImages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deepin 20 Beta users failed to install Motrix, please follow the steps below:&lt;/p&gt; 
&lt;p&gt;Open the &lt;code&gt;Terminal&lt;/code&gt;, paste and run the following command to install Motrix again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt --fix-broken install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;Motrix has been listed on &lt;a href=&quot;https://snapcraft.io/motrix&quot;&gt;Snapcraft&lt;/a&gt; , Ubuntu users recommend downloading from the Snap Store.&lt;/p&gt; 
&lt;p&gt;Tips for v1.5.10&lt;/p&gt; 
&lt;p&gt;The tray may not display the indicator normally, which makes it inconvenient to exit the application.&lt;/p&gt; 
&lt;p&gt;Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp;amp; Linux Only), click Save &amp;amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.&lt;/p&gt; 
&lt;p&gt;Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.&lt;/p&gt; 
&lt;h4&gt;AUR&lt;/h4&gt; 
&lt;p&gt;For Arch Linux users, Motrix is available in &lt;a href=&quot;https://aur.archlinux.org/packages/motrix/&quot;&gt;aur&lt;/a&gt;, thanks to the maintainer &lt;a href=&quot;https://github.com/weearc&quot;&gt;@weearc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the following command to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yay motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Flatpak&lt;/h4&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/flathub/flathub/pull/2334&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/proletarius101&quot;&gt;@proletarius101&lt;/a&gt;, Motrix has been listed &lt;a href=&quot;https://flathub.org/apps/details/net.agalwood.Motrix&quot;&gt;Flathub&lt;/a&gt;, Linux users who like the Flatpak can try it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🕹 Simple and clear user interface&lt;/li&gt; 
 &lt;li&gt;🦄 Supports BitTorrent &amp;amp; Magnet&lt;/li&gt; 
 &lt;li&gt;☑️ BitTorrent selective download&lt;/li&gt; 
 &lt;li&gt;📡 Update tracker list every day automatically&lt;/li&gt; 
 &lt;li&gt;🔌 UPnP &amp;amp; NAT-PMP Port Mapping&lt;/li&gt; 
 &lt;li&gt;🎛 Up to 10 concurrent download tasks&lt;/li&gt; 
 &lt;li&gt;🚀 Supports 64 threads in a single task&lt;/li&gt; 
 &lt;li&gt;🚥 Supports speed limit&lt;/li&gt; 
 &lt;li&gt;🕶 Mock User-Agent&lt;/li&gt; 
 &lt;li&gt;🔔 Download completed Notification&lt;/li&gt; 
 &lt;li&gt;💻 Ready for Touch Bar (Mac only)&lt;/li&gt; 
 &lt;li&gt;🤖 Resident system tray for quick operation&lt;/li&gt; 
 &lt;li&gt;📟 Tray speed meter displays real-time speed (Mac only)&lt;/li&gt; 
 &lt;li&gt;🌑 Dark mode&lt;/li&gt; 
 &lt;li&gt;🗑 Delete related files when removing tasks (optional)&lt;/li&gt; 
 &lt;li&gt;🌍 I18n, &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/#-internationalization&quot;&gt;View supported languages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🛠 More features in development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖥 User Interface&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png&quot; alt=&quot;motrix-screenshot-task-en.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;⌨️ Development&lt;/h2&gt; 
&lt;h3&gt;Clone Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:agalwood/Motrix.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd Motrix
yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Error: Electron failed to install correctly, please delete node_modules/electron and try installing again&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;Electron&lt;/code&gt; failed to install correctly, please refer to &lt;a href=&quot;https://github.com/electron/electron/issues/8466#issuecomment-571425574&quot;&gt;https://github.com/electron/electron/issues/8466#issuecomment-571425574&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dev Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Release&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building, the application will be found in the project&#39;s &lt;code&gt;release&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;🛠 Technology Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; + &lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;VueX&lt;/a&gt; + &lt;a href=&quot;https://element.eleme.io&quot;&gt;Element&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/&quot;&gt;Aria2&lt;/a&gt; (Note: macOS and Linux versions use 64-bit aria2c, Windows version uses 32-bit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;☑️ TODO&lt;/h2&gt; 
&lt;p&gt;Development Roadmap see: &lt;a href=&quot;https://trello.com/b/qNUzA0bv/motrix&quot;&gt;Trello&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contribute &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;If you are interested in participating in joint development, PR and Forks are welcome!&lt;/p&gt; 
&lt;h2&gt;🌍 Internationalization&lt;/h2&gt; 
&lt;p&gt;Translations into versions for other languages are welcome 🧐! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/CONTRIBUTING.md#-translation-guide&quot;&gt;translation guide&lt;/a&gt; before starting translations.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/hadialqattan&quot;&gt;@hadialqattan&lt;/a&gt;, &lt;a href=&quot;https://github.com/AhmedElTabarani&quot;&gt;@AhmedElTabarani&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bg&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Българският език&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/null-none&quot;&gt;@null-none&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ca&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/marcizhu&quot;&gt;@marcizhu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Schloemicher&quot;&gt;@Schloemicher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;el&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Likecinema&quot;&gt;@Likecinema&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;en-US&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Español&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Chofito&quot;&gt;@Chofito&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fa&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;فارسی&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Nima-Ra&quot;&gt;@Nima-Ra&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/gpatarin&quot;&gt;@gpatarin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hu&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/zalnaRs&quot;&gt;@zalnaRs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/aarestu&quot;&gt;@aarestu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/blackcat-917&quot;&gt;@blackcat-917&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/hbkrkzk&quot;&gt;@hbkrkzk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/KOZ39&quot;&gt;@KOZ39&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nb&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Norsk Bokmål&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/rubjo&quot;&gt;@rubjo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pl&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/KanarekLife&quot;&gt;@KanarekLife&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/andrenoberto&quot;&gt;@andrenoberto&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ro&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/alyn3d&quot;&gt;@alyn3d&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/abdullah&quot;&gt;@abdullah&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/duythanhvn&quot;&gt;@duythanhvn&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-CN&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;简体中文&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-TW&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;繁體中文&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✔️ &lt;a href=&quot;https://github.com/Yukaii&quot;&gt;@Yukaii&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; Copyright (c) 2018-present Dr_rOot&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🧙&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to &lt;a href=&quot;mailto:security@openzeppelin.org&quot;&gt;security@openzeppelin.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/zx</title>
      <link>https://github.com/google/zx</link>
      <description>&lt;p&gt;A tool for writing better scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐚 zx&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env zx

await $`cat package.json | grep name`

let branch = await $`git branch --show-current`
await $`dep deploy --branch=${branch}`

await Promise.all([
  $`sleep 1; echo 1`,
  $`sleep 2; echo 2`,
  $`sleep 3; echo 3`,
])

let name = &#39;foo bar&#39;
await $`mkdir /tmp/${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bash is great, but when it comes to writing scripts, people usually choose a more convenient programming language. JavaScript is a perfect choice, but standard Node.js library requires additional hassle before using. The &lt;code&gt;zx&lt;/code&gt; package provides useful wrappers around &lt;code&gt;child_process&lt;/code&gt;, escapes arguments and gives sensible defaults.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Requirement&lt;/h3&gt; 
&lt;p&gt;Node.js &amp;gt;= 14.8.0&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Write your scripts in a file with &lt;code&gt;.mjs&lt;/code&gt; extension in order to be able to use &lt;code&gt;await&lt;/code&gt; on top level. If you prefer the &lt;code&gt;.js&lt;/code&gt; extension, wrap your scripts in something like &lt;code&gt;void async function () {...}()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Add the following shebang to the beginning of your &lt;code&gt;zx&lt;/code&gt; scripts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/usr/bin/env zx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you will be able to run your script like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;chmod +x ./script.mjs
./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or via the &lt;code&gt;zx&lt;/code&gt; executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx ./script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All functions (&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;, etc) are available straight away without any imports.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;$`command` &lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Executes a given string using the &lt;code&gt;spawn&lt;/code&gt; function from the &lt;code&gt;child_process&lt;/code&gt; package and returns &lt;code&gt;ProcessPromise&amp;lt;ProcessOutput&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Everything passed through &lt;code&gt;${...}&lt;/code&gt; will be automatically escaped and quoted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let name = &#39;foo &amp;amp; bar&#39;
await $`mkdir ${name}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;There is no need to add extra quotes.&lt;/strong&gt; Read more about it in &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/quotes.md&quot;&gt;quotes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can pass an array of arguments if needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let flags = [
  &#39;--oneline&#39;,
  &#39;--decorate&#39;,
  &#39;--color&#39;,
]
await $`git log ${flags}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the executed program returns a non-zero exit code, &lt;code&gt;ProcessOutput&lt;/code&gt; will be thrown.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
  await $`exit 1`
} catch (p) {
  console.log(`Exit code: ${p.exitCode}`)
  console.log(`Error: ${p.stderr}`)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;ProcessPromise&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessPromise&amp;lt;T&amp;gt; extends Promise&amp;lt;T&amp;gt; {
  readonly stdin: Writable
  readonly stdout: Readable
  readonly stderr: Readable
  readonly exitCode: Promise&amp;lt;number&amp;gt;
  pipe(dest): ProcessPromise&amp;lt;T&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;pipe()&lt;/code&gt; method can be used to redirect stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cat file.txt`.pipe(process.stdout)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about &lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/pipelines.md&quot;&gt;pipelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;ProcessOutput&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;class ProcessOutput {
  readonly stdout: string
  readonly stderr: string
  readonly exitCode: number
  toString(): string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;cd()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes the current working directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;cd(&#39;/tmp&#39;)
await $`pwd` // outputs /tmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;node-fetch&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let resp = await fetch(&#39;http://wttr.in&#39;)
if (resp.ok) {
  console.log(await resp.text())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;question()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;a href=&quot;https://nodejs.org/api/readline.html&quot;&gt;readline&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let bear = await question(&#39;What kind of bear is best? &#39;)
let token = await question(&#39;Choose env variable: &#39;, {
  choices: Object.keys(process.env)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In second argument, array of choices for Tab autocompletion can be specified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function question(query?: string, options?: QuestionOptions): Promise&amp;lt;string&amp;gt;
type QuestionOptions = { choices: string[] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A wrapper around the &lt;code&gt;setTimeout&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await sleep(1000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;nothrow()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Changes behavior of &lt;code&gt;$&lt;/code&gt; to not throw an exception on non-zero exit codes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function nothrow&amp;lt;P&amp;gt;(p: P): P
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await nothrow($`grep something from-file`)

// Inside a pipe():

await $`find ./examples -type f -print0`
  .pipe(nothrow($`xargs -0 grep something`))
  .pipe($`wc -l`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only the &lt;code&gt;exitCode&lt;/code&gt; is needed, you can use the next code instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (await $`[[ -d path ]]`.exitCode == 0) {
  ...
}

// Equivalent of:

if ((await nothrow($`[[ -d path ]]`)).exitCode == 0) {
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Packages&lt;/h3&gt; 
&lt;p&gt;Next packages is available without importing inside scripts.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;chalk&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/chalk&quot;&gt;chalk&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(chalk.blue(&#39;Hello world!&#39;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;fs&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/fs-extra&quot;&gt;fs-extra&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let content = await fs.readFile(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;globby&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/sindresorhus/globby&quot;&gt;globby&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let packages = await globby([&#39;package.json&#39;, &#39;packages/*/package.json&#39;])

let pictures = globby.globbySync(&#39;content/*.(jpg|png)&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, globby available via the &lt;code&gt;glob&lt;/code&gt; shortcut:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`svgo ${await glob(&#39;*.svg&#39;)}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;os&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/os.html&quot;&gt;os&lt;/a&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await $`cd ${os.homedir()} &amp;amp;&amp;amp; mkdir example`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;minimist&lt;/code&gt; package&lt;/h4&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.npmjs.com/package/minimist&quot;&gt;minimist&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;Available as global const &lt;code&gt;argv&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;$.shell&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies what shell is used. Default is &lt;code&gt;which bash&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$.shell = &#39;/usr/bin/bash&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--shell=/bin/bash&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.prefix&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies the command that will be prefixed to all commands run.&lt;/p&gt; 
&lt;p&gt;Default is &lt;code&gt;set -euo pipefail;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument: &lt;code&gt;--prefix=&#39;set -e;&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.quote&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies a function for escaping special characters during command substitution.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;$.verbose&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies verbosity. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In verbose mode, the &lt;code&gt;zx&lt;/code&gt; prints all executed commands alongside with their outputs.&lt;/p&gt; 
&lt;p&gt;Or use a CLI argument &lt;code&gt;--quiet&lt;/code&gt; to set &lt;code&gt;$.verbose = false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;__filename&lt;/code&gt; &amp;amp; &lt;code&gt;__dirname&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/esm.html&quot;&gt;ESM&lt;/a&gt; modules, Node.js does not provide &lt;code&gt;__filename&lt;/code&gt; and &lt;code&gt;__dirname&lt;/code&gt; globals. As such globals are really handy in scripts, &lt;code&gt;zx&lt;/code&gt; provides these for use in &lt;code&gt;.mjs&lt;/code&gt; files (when using the &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; modules, the &lt;code&gt;require()&lt;/code&gt; function is not defined. The &lt;code&gt;zx&lt;/code&gt; provides &lt;code&gt;require()&lt;/code&gt; function, so it can be used with imports in &lt;code&gt;.mjs&lt;/code&gt; files (when using &lt;code&gt;zx&lt;/code&gt; executable).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let {version} = require(&#39;./package.json&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;Passing env variables&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;process.env.FOO = &#39;bar&#39;
await $`echo $FOO`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Passing array of values&lt;/h4&gt; 
&lt;p&gt;If array of values passed as argument to &lt;code&gt;$&lt;/code&gt;, items of the array will be escaped individually and concatenated via space.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let files = [...]
await $`tar cz ${files}`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Importing from other scripts&lt;/h4&gt; 
&lt;p&gt;It is possible to make use of &lt;code&gt;$&lt;/code&gt; and other functions via explicit imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#!/usr/bin/env node
import {$} from &#39;zx&#39;
await $`date`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scripts without extensions&lt;/h4&gt; 
&lt;p&gt;If script does not have a file extension (like &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;), zx assumes that it is an &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_module_createrequire_filename&quot;&gt;ESM&lt;/a&gt; module.&lt;/p&gt; 
&lt;h4&gt;Markdown scripts&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can execute scripts written in markdown (&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/docs/markdown.md&quot;&gt;docs/markdown.md&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx docs/markdown.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TypeScript scripts&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; can compile &lt;code&gt;.ts&lt;/code&gt; scripts to &lt;code&gt;.mjs&lt;/code&gt; and execute them.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx script.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In TypeScript file include the &lt;code&gt;zx&lt;/code&gt; package to import types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import &#39;zx&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or reference the &lt;code&gt;zx&lt;/code&gt; package via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/// &amp;lt;reference types=&quot;zx&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;#!/usr/bin/env zx
import &#39;zx&#39;

void async function () {
  await $`ls -la`
}()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing remote scripts&lt;/h4&gt; 
&lt;p&gt;If the argument to the &lt;code&gt;zx&lt;/code&gt; executable starts with &lt;code&gt;https://&lt;/code&gt;, the file will be downloaded and executed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/example-script.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;zx https://medv.io/game-of-life.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Executing scripts from stdin&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;zx&lt;/code&gt; supports executing scripts from stdin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;zx &amp;lt;&amp;lt;&#39;EOF&#39;
await $`pwd`
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/google/zx/main/LICENSE&quot;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Disclaimer: &lt;em&gt;This is not an officially supported Google product.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>serverless/serverless</title>
      <link>https://github.com/serverless/serverless</link>
      <description>&lt;p&gt;⚡ Serverless Framework – Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions &amp; more! –&lt;/p&gt;&lt;hr&gt;&lt;p&gt;⚡ &lt;strong&gt;Serverless Inc. is hiring to build the next generation of serverless development tools, &lt;a href=&quot;https://www.serverless.com/company/jobs/&quot;&gt;join us!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;http://serverless.com&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/assets.github.serverless/readme-serverless-framework.gif&quot; alt=&quot;Serverless Application Framework AWS Lambda API Gateway&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;&lt;img src=&quot;http://public.serverless.com/badges/v3.svg?sanitize=true&quot; alt=&quot;serverless&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/serverless/serverless/actions?query=workflow%3AIntegrate&quot;&gt;&lt;img src=&quot;https://github.com/serverless/serverless/workflows/Integrate/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/serverless&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/serverless.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/serverless/serverless&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/serverless/serverless/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/serverless/serverless.svg?sanitize=true&quot; alt=&quot;gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/serverless/serverless&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/serverless/serverless/badge.svg?sanitize=true&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/serverless.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/README_CN.md&quot;&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;Website&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/framework/docs/&quot;&gt;Docs&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/subscribe/&quot;&gt;Newsletter&lt;/a&gt; • &lt;a href=&quot;https://teespring.com/stores/serverless&quot;&gt;Swag&lt;/a&gt; • &lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;Gitter&lt;/a&gt; • &lt;a href=&quot;http://forum.serverless.com&quot;&gt;Forum&lt;/a&gt; • &lt;a href=&quot;https://www.meetup.com/pro/serverless/&quot;&gt;Meetups&lt;/a&gt; • &lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/company/jobs/&quot;&gt;We&#39;re Hiring&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Serverless Framework&lt;/strong&gt; – Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.&lt;/p&gt; 
&lt;p&gt;The Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It&#39;s a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It&#39;s also completely extensible via plugins.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://app.serverless.com&quot;&gt;Serverless Framework Dashboard&lt;/a&gt; for monitoring, troubleshooting, ci/cd and more features for serverless teams.&lt;/p&gt; 
&lt;p&gt;Serverless is actively maintained by &lt;a href=&quot;https://www.serverless.com&quot;&gt;Serverless Inc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;img align=&quot;right&quot; width=&quot;400&quot; src=&quot;https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/email/sls-getting-started.gif&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#consultants&quot;&gt;Consultants&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#v.5&quot;&gt;Previous Version 0.5.x&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;quick-start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install via npm:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g serverless
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set-up your &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/docs/providers/aws/guide/credentials.md&quot;&gt;Provider Credentials&lt;/a&gt;&lt;/strong&gt;. &lt;a href=&quot;https://youtu.be/VUKDRoUdMek&quot;&gt;Watch the video on setting up credentials&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Service:&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can create a new service or &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#how-to-install-a-service&quot;&gt;install existing services&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Create a new Serverless Service/Project
serverless create --template aws-nodejs --path my-service
# Change into the newly created directory
cd my-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy a Service:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Use this when you have made changes to your Functions, Events or Resources in &lt;code&gt;serverless.yml&lt;/code&gt; or you simply want to deploy all changes within your Service at the same time.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy the Function:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Use this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy function -f hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Invoke the Function on AWS:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on AWS and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Invoke the Function on your machine:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on your local machine and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke local -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;8&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Fetch the Function Logs:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Open up a separate tab in your console and stream all logs for a specific Function using this command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless logs -f hello -t
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;9&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Remove the Service:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Removes all Functions, Events and Resources from your AWS account.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless remove
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to Install a Service:&lt;/h3&gt; 
&lt;p&gt;This is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless install -u https://github.com/your-url-to-the-serverless-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/docs/providers/aws/guide/README.md&quot;&gt;Serverless Framework Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;services&quot;&gt;&lt;/a&gt;Services (V1.0)&lt;/h2&gt; 
&lt;p&gt;The following are services you can instantly install and use by running &lt;code&gt;serverless install --url &amp;lt;service-github-url&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/examples&quot;&gt;serverless-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-crud&quot;&gt;CRUD&lt;/a&gt; - CRUD service, &lt;a href=&quot;https://github.com/jahangirmohammed/serverless-crud-scala&quot;&gt;Scala Port&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/faunadb/serverless-crud&quot;&gt;CRUD with FaunaDB&lt;/a&gt; - CRUD service using FaunaDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tscanlin/serverless-s3-crud&quot;&gt;CRUD with S3&lt;/a&gt; - CRUD service using S3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jetbridge/sls-flask&quot;&gt;CRUD with Flask and SQLAlchemy&lt;/a&gt; - Python &lt;a href=&quot;https://blog.jetbridge.com/framework/&quot;&gt;CRUD API service&lt;/a&gt; with Flask, SQLAlchemy and Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/serverless-graphql&quot;&gt;GraphQL Boilerplate&lt;/a&gt; - GraphQL application Boilerplate service&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laardee/serverless-authentication-boilerplate&quot;&gt;Authentication&lt;/a&gt; - Authentication boilerplate service&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-mailer&quot;&gt;Mailer&lt;/a&gt; - Service for sending emails&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-kinesis-streams&quot;&gt;Kinesis streams&lt;/a&gt; - Service to showcase Kinesis stream support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-dynamodb-streams&quot;&gt;DynamoDB streams&lt;/a&gt; - Service to showcase DynamoDB stream support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-landingpage-backend&quot;&gt;Landingpage backend&lt;/a&gt; - Landingpage backend service to store E-Mail addresses&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-facebook-messenger-bot&quot;&gt;Facebook Messenger Chatbot&lt;/a&gt; - Chatbot for the Facebook Messenger platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-lambda-chaining&quot;&gt;Lambda chaining&lt;/a&gt; - Service which chains Lambdas through SNS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-secured-api&quot;&gt;Secured API&lt;/a&gt; - Service which exposes an API key accessible API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-authorizer&quot;&gt;Authorizer&lt;/a&gt; - Service that uses API Gateway custom authorizers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-thumbnails&quot;&gt;Thumbnails&lt;/a&gt; - Service that takes an image url and returns a 100x100 thumbnail&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-boilerplate&quot;&gt;Boilerplate&lt;/a&gt; - Opinionated boilerplate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/americansystems/serverless-es6-jest&quot;&gt;ES6 + Jest&lt;/a&gt; - ES6 + Jest Boilerplate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZeroSharp/serverless-php&quot;&gt;PHP&lt;/a&gt; - Call a PHP function from your lambda&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stewartlord/serverless-ruby&quot;&gt;Ruby&lt;/a&gt; - Call a Ruby function from your lambda&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnagan/serverless-slack-app&quot;&gt;Slack App&lt;/a&gt; - Slack App Boilerplate with OAuth and Bot actions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/choefele/swift-lambda-app&quot;&gt;Swift&lt;/a&gt; - Full-featured project template to develop Lambda functions in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dav009/serverless-aws-alarms-notifier&quot;&gt;Cloudwatch Alerts on Slack&lt;/a&gt; - Get AWS Cloudwatch alerts notifications on Slack&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;serverless install&lt;/code&gt; command will only work on V1.0 or later.&lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;features&quot;&gt;&lt;/a&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, &amp;amp; F#&lt;/li&gt; 
 &lt;li&gt;Manages the lifecycle of your serverless architecture (build, deploy, update, delete).&lt;/li&gt; 
 &lt;li&gt;Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).&lt;/li&gt; 
 &lt;li&gt;Functions can be grouped (&quot;serverless services&quot;) for easy management of code, resources &amp;amp; processes, across large projects &amp;amp; teams.&lt;/li&gt; 
 &lt;li&gt;Minimal configuration and scaffolding.&lt;/li&gt; 
 &lt;li&gt;Built-in support for multiple stages.&lt;/li&gt; 
 &lt;li&gt;Optimized for CI/CD workflows.&lt;/li&gt; 
 &lt;li&gt;Loaded with automation, optimization and best practices.&lt;/li&gt; 
 &lt;li&gt;100% Extensible: Extend or modify the Framework and its operations via Plugins.&lt;/li&gt; 
 &lt;li&gt;An ecosystem of serverless services and plugins.&lt;/li&gt; 
 &lt;li&gt;A passionate and welcoming community!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;contributing&quot;&gt;&lt;/a&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love our contributors! Please read our &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/CONTRIBUTING.md&quot;&gt;Contributing Document&lt;/a&gt; to learn how you can start working on the Framework yourself.&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/serverless/serverless/labels/help%20wanted&quot;&gt;help wanted&lt;/a&gt; or &lt;a href=&quot;https://github.com/serverless/serverless/labels/good%20first%20issue&quot;&gt;good first issue&lt;/a&gt; labels to find issues we want to move forward on with your help.&lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;community&quot;&gt;&lt;/a&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eepurl.com/b8dv4P&quot;&gt;Email Updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://forum.serverless.com&quot;&gt;Serverless Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;Gitter Chatroom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.meetup.com/serverless/&quot;&gt;Serverless Meetups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/serverless-framework&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/serverless&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;mailto:hello@serverless.com&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;consultants&quot;&gt;&lt;/a&gt;Consultants&lt;/h2&gt; 
&lt;p&gt;We recommend the following professional services organizations who are experts in serverless development:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serverlessguru.com/&quot;&gt;Serverless Guru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.antstack.io/&quot;&gt;Antstack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.theodo.co.uk&quot;&gt;Theodo&lt;/a&gt; - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter &amp;amp; Blog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://null.tc/&quot;&gt;null&lt;/a&gt; - maintains &lt;a href=&quot;https://bref.sh/&quot;&gt;Bref&lt;/a&gt; to create serverless PHP applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordcloud.com&quot;&gt;Nordcloud&lt;/a&gt; - they created &lt;a href=&quot;https://github.com/nordcloud?utf8=%E2%9C%93&amp;amp;q=serverless&amp;amp;type=&amp;amp;language=&quot;&gt;several plugins&lt;/a&gt;, sponsor &lt;a href=&quot;https://helsinki.serverlessdays.io/&quot;&gt;Serverless Days Helsinki&lt;/a&gt; and regularly host &lt;a href=&quot;https://www.meetup.com/Serverless-Finland/&quot;&gt;Serverless Finland&lt;/a&gt; Meetups.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.apitalent.co.nz&quot;&gt;API talent&lt;/a&gt; - who also run &lt;a href=&quot;http://www.meetup.com/Serverless-Auckland&quot;&gt;Serverless-Auckland Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.epxlabs.com/&quot;&gt;EPX Labs&lt;/a&gt; - runs &lt;a href=&quot;https://www.meetup.com/Serverless-NYC/&quot;&gt;Serverless NYC Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.seraro.com/&quot;&gt;Seraro&lt;/a&gt; - Who also runs Atlanta Serverless Meetup (&lt;a href=&quot;https://www.meetup.com/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT&quot;&gt;https://www.meetup.com/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT&lt;/a&gt;) and Delhi Serverless Meetup (&lt;a href=&quot;https://www.meetup.com/Delhi-NCR-Serverless-Architecture-Meetup/&quot;&gt;https://www.meetup.com/Delhi-NCR-Serverless-Architecture-Meetup/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superluminar.io&quot;&gt;superluminar&lt;/a&gt; - runs serverlessdays Hamburg and Serverless Meetup Hamburg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jetbridge.com&quot;&gt;JetBridge&lt;/a&gt; - cloud-native and serverless application development services.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;d like to be featured here, &lt;a href=&quot;mailto:hello@serverless.com&quot;&gt;please contact us&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;a name=&quot;licensing&quot;&gt;&lt;/a&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Serverless is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.&lt;/p&gt; 
&lt;h1&gt;&lt;a name=&quot;v.5&quot;&gt;&lt;/a&gt;Previous Serverless Version 0.5.x&lt;/h1&gt; 
&lt;p&gt;You can read the v0.5.x documentation at &lt;a href=&quot;https://serverless.readme.io/v0.5.0/docs&quot;&gt;readme.io&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RobinLinus/snapdrop</title>
      <link>https://github.com/RobinLinus/snapdrop</link>
      <description>&lt;p&gt;A Progressive Web App for local file sharing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Snapdrop&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://snapdrop.net&quot;&gt;Snapdrop&lt;/a&gt;: local file sharing in your browser. Inspired by Apple&#39;s Airdrop.&lt;/p&gt; 
&lt;h4&gt;Snapdrop is built with the following awesome technologies:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vanilla HTML5 / ES6 / CSS3 frontend&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://webrtc.org/&quot;&gt;WebRTC&lt;/a&gt; / &lt;a href=&quot;http://www.websocket.org/&quot;&gt;WebSockets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt; backend&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://de.wikipedia.org/wiki/Progressive_Web_App&quot;&gt;Progressive Web App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Have any questions? Read our &lt;a href=&quot;https://raw.githubusercontent.com/RobinLinus/snapdrop/master/docs/faq.md&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can &lt;a href=&quot;https://raw.githubusercontent.com/RobinLinus/snapdrop/master/docs/local-dev.md&quot;&gt;host your own instance with Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support the Snapdrop Community&lt;/h2&gt; 
&lt;p&gt;Snapdrop is free. Still, we have to pay for the server. If you want to contribute, please use PayPal:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FTP9DXUR7LA7Q&amp;amp;source=url&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;or Bitcoin:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://coins.github.io/thx/#1K9zQ8f4iTyhKyHWmiDKt21cYX2QSDckWB?label=Snapdrop&amp;amp;message=Thanks!%20Your%20contribution%20helps%20to%20keep%20Snapdrop%20free%20for%20everybody!&quot;&gt;&lt;img src=&quot;https://coins.github.io/thx/logo-color-large-pill-320px.png&quot; alt=&quot;CoinThx&quot; width=&quot;200&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alternatively, you can become a &lt;a href=&quot;https://github.com/sponsors/RobinLinus&quot;&gt;Github Sponsor&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thanks a lot for supporting free and open software!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react-native</title>
      <link>https://github.com/facebook/react-native</link>
      <description>&lt;p&gt;A framework for building native applications using React&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/&quot;&gt; React Native &lt;/a&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;Learn once, write anywhere:&lt;/strong&gt;&lt;br&gt; Build mobile apps with React. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;React Native is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react-native&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/facebook/react-native.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/react-native&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/react-native?color=brightgreen&amp;amp;label=npm%20package&quot; alt=&quot;Current npm package version.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=reactnative&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/reactnative.svg?label=Follow%20@reactnative&quot; alt=&quot;Follow @reactnative&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/tutorial&quot;&gt;Learn the Basics&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/showcase.html&quot;&gt;Showcase&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contribute&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/help&quot;&gt;Community&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/.github/SUPPORT.md&quot;&gt;Support&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;React Native brings &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;&#39;s&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&quot;https://reactnative.dev/docs/out-of-tree-platforms&quot;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/ECOSYSTEM.md&quot;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-building-your-first-react-native-app&quot;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/main/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 Requirements&lt;/h2&gt; 
&lt;p&gt;React Native apps may target iOS 11.0 and Android 5.0 (API 21) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&quot;https://expo.io&quot;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; 
&lt;h2&gt;🎉 Building your first React Native app&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snack.expo.io/@hramos/hello,-world!&quot;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/integration-with-existing-apps&quot;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Upgrading&lt;/h2&gt; 
&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&quot;https://reactnative.dev/docs/upgrading&quot;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;p&gt;React Native releases are discussed in the React Native Community, &lt;a href=&quot;https://github.com/react-native-community/react-native-releases&quot;&gt;&lt;strong&gt;@react-native-community/react-native-releases&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👏 How to Contribute&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h3&gt;Discussions&lt;/h3&gt; 
&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&quot;https://github.com/react-native-community/discussions-and-proposals&quot;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/HEAD/LICENSE-docs&quot;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
