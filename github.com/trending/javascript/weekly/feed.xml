<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Fri, 26 Feb 2021 01:49:13 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI &amp; Web App for analyzing &amp; finding a person&#39;s profile across 350+ social media websites (Detections are updated regularly)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=version&amp;amp;query=$.version&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20sites&amp;amp;query=$.websites&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20detections&amp;amp;query=$.detections&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=build&amp;amp;query=$.build&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=test&amp;amp;query=$.test&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=docker&amp;amp;query=$.docker&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=%F0%9F%91%8D&amp;amp;message=!&amp;amp;color=yellow&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Social Analyzer - API, CLI &amp;amp; Web App for analyzing &amp;amp; finding a person&#39;s profile across +300 social media websites. It includes different string analysis and detection modules, you can choose which combination of modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module intended to have less false positive and it&#39;s documented in this &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt; link&lt;/p&gt; 
&lt;p&gt;The analysis and extracted social media information from this OSINT tool could help in investigating profiles related to suspicious or malicious activities such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Cyberbullying&quot;&gt;cyberbullying&lt;/a&gt;, &lt;a href=&quot;https://de.wikipedia.org/wiki/Cyber-Grooming&quot;&gt;cybergrooming&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyberstalking&quot;&gt;cyberstalking&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Misinformation&quot;&gt;spreading misinformation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is &lt;em&gt;&quot;currently used by some law enforcement agencies in countries where resources are limited&quot;&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Testing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;-------------------------------------              ---------------------------------
|        Security Testing           |              |        Social-Analyzer        |
-------------------------------------              ---------------------------------
|   Passive Information Gathering   |     &amp;lt;--&amp;gt;     |   Find Social Media Profiles  |
|                                   |              |                               |
|    Active Information Gathering   |     &amp;lt;--&amp;gt;     |    Post Analysis Activities   |
-------------------------------------              ---------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Find Profile WEB APP (Fast)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Find Profile WEB APP (Slow)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Profile images &lt;strong&gt;will not&lt;/strong&gt; be blurred. If you want them to be blurred, turn that option on&lt;/p&gt; 
&lt;h2&gt;(New) Find Profile CLI (Fast)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis&lt;/li&gt; 
 &lt;li&gt;Find profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi layers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (example@gmail.com)&lt;/li&gt; 
 &lt;li&gt;Google (example@example.com)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install and run as Python CLI (Windows, Linux, MacOS, Raspberry pi..)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Remember the following runs as FindUserProfilesFast
# You can also scan all websites using --websites &quot;all&quot;
# There will be status:good or rate:%100 for existing profiles

pip install social-analyzer
python -m social-analyzer --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;youtube pinterest tumblr&quot; --output &quot;pretty&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

sudo add-apt-repository ppa:mozillateam/ppa
sudo apt-get update
sudo apt-get install -y firefox-esr tesseract-ocr git
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install lodash
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (Windows + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

Download &amp;amp; Install firefox esr (Extended Support Release) from https://www.mozilla.org/en-US/firefox/enterprise/#download
Download &amp;amp; Install https://nodejs.org/en/download/
Download &amp;amp; Extract https://github.com/qeeqbox/social-analyzer/archive/main.zip
cd social-analyzer
npm install lodash
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS CLI (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# If you want to list all websites use node app.js --cli --list
# Remember the following runs as FindUserProfilesFast
# You can also scan all websites using --websites &quot;all&quot;
# There will be status:good or rate:%100 for existing profiles

sudo add-apt-repository ppa:mozillateam/ppa
sudo apt-get update
sudo apt-get install -y firefox-esr tesseract-ocr git
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install lodash
npm install
node app.js --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;youtube pinterest tumblr&quot; --output &quot;pretty&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App with a grid (docker-compose)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker-compose -f docker-compose.yml up --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as NodeJS Web App (docker)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# There will be status:good or rate:%100 for existing profiles

git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker build -t social-analyzer . &amp;amp;&amp;amp; docker run -p 9005:9005 -it social-analyzer
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Issues&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remember that existing profiles show &lt;code&gt;status:good&lt;/code&gt; or &lt;code&gt;rate:%100&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Use Proxy, VPN, TOR or anything similar for periodic suspicious-profiles checking&lt;/li&gt; 
 &lt;li&gt;Change the user-agent to most updated one or increase the random time between requests&lt;/li&gt; 
 &lt;li&gt;Use the slow mode (Not available in the CLIs) to avoid running into blocking\results issue&lt;/li&gt; 
 &lt;li&gt;Some websites return &lt;code&gt;blocked&lt;/code&gt; or &lt;code&gt;invalid&lt;/code&gt; &amp;lt;- this is the intended behavior and correct!&lt;/li&gt; 
 &lt;li&gt;Check out the WiKi before submitting an issue regarding this project&lt;/li&gt; 
 &lt;li&gt;Make sure to update to the latest nodejs and npm&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Adding the generic websites detections (These need some reviewing, but I will try to add them in 2021)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interviews&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://console.substack.com/p/console-37&quot;&gt;Console 37&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure to download this tool from GitHub - (ONLY) ⚠️&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project, please reach out&lt;/li&gt; 
 &lt;li&gt;This tool meant to be used locally (It does not have any type of Access Control)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MostlyAdequate/mostly-adequate-guide</title>
      <link>https://github.com/MostlyAdequate/mostly-adequate-guide</link>
      <description>&lt;p&gt;Mostly adequate guide to FP (in javascript)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/SUMMARY.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/images/cover.png&quot; alt=&quot;cover&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About this book&lt;/h2&gt; 
&lt;p&gt;This is a book on the functional paradigm in general. We&#39;ll use the world&#39;s most popular functional programming language: JavaScript. Some may feel this is a poor choice as it&#39;s against the grain of the current culture which, at the moment, feels predominately imperative. However, I believe it is the best way to learn FP for several reasons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;You likely use it every day at work.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This makes it possible to practice and apply your acquired knowledge each day on real world programs rather than pet projects on nights and weekends in an esoteric FP language.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;We don&#39;t have to learn everything up front to start writing programs.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In a pure functional language, you cannot log a variable or read a DOM node without using monads. Here we can cheat a little as we learn to purify our codebase. It&#39;s also easier to get started in this language since it&#39;s mixed paradigm and you can fall back on your current practices while there are gaps in your knowledge.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The language is fully capable of writing top notch functional code.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We have all the features we need to mimic a language like Scala or Haskell with the help of a tiny library or two. Object-oriented programming currently dominates the industry, but it&#39;s clearly awkward in JavaScript. It&#39;s akin to camping off of a highway or tap dancing in galoshes. We have to &lt;code&gt;bind&lt;/code&gt; all over the place lest &lt;code&gt;this&lt;/code&gt; change out from under us, we have various work arounds for the quirky behavior when the &lt;code&gt;new&lt;/code&gt; keyword is forgotten, private members are only available via closures. To a lot of us, FP feels more natural anyways.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;That said, typed functional languages will, without a doubt, be the best place to code in the style presented by this book. JavaScript will be our means of learning a paradigm, where you apply it is up to you. Luckily, the interfaces are mathematical and, as such, ubiquitous. You&#39;ll find yourself at home with Swiftz, Scalaz, Haskell, PureScript, and other mathematically inclined environments.&lt;/p&gt; 
&lt;h2&gt;Read it Online&lt;/h2&gt; 
&lt;p&gt;For a best reading experience, &lt;a href=&quot;https://mostly-adequate.gitbooks.io/mostly-adequate-guide/&quot;&gt;read it online via Gitbook&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quick-access side-bar&lt;/li&gt; 
 &lt;li&gt;In-browser exercises&lt;/li&gt; 
 &lt;li&gt;In-depth examples&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Play Around with Code&lt;/h2&gt; 
&lt;p&gt;To make the training efficient and not get too bored while I am telling you another story, make sure to play around with the concepts introduced in this book. Some can be tricky to catch at first and are better understood by getting your hands dirty. All functions and algebraic data-structures presented in the book are gathered in the appendixes. The corresponding code is also available as an npm module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm i @mostly-adequate/support
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, exercises of each chapter are runnable and can be completed in your editor! For example, complete the &lt;code&gt;exercise_*.js&lt;/code&gt; in &lt;code&gt;exercises/ch04&lt;/code&gt; and then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm run ch04
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Download it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/pdf/book/mostly-adequate/mostly-adequate-guide&quot;&gt;Download PDF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/epub/book/mostly-adequate/mostly-adequate-guide&quot;&gt;Download EPUB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/download/mobi/book/mostly-adequate/mostly-adequate-guide&quot;&gt;Download Mobi (Kindle)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Do it yourself&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/MostlyAdequate/mostly-adequate-guide.git
cd mostly-adequate-guide/
npm install
npm run setup
npm run generate-pdf
npm run generate-epub
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note! To generate the ebook version you will need to install &lt;code&gt;ebook-convert&lt;/code&gt;. &lt;a href=&quot;https://toolchain.gitbook.com/ebook.html#installing-ebook-convert&quot;&gt;Installation instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/SUMMARY.md&quot;&gt;SUMMARY.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/TRANSLATIONS.md&quot;&gt;TRANSLATIONS.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/MostlyAdequate/mostly-adequate-guide/master/FAQ.md&quot;&gt;FAQ.md&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Plans for the future&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Part 1&lt;/strong&gt; (chapters 1-7) is a guide to the basics. I&#39;m updating as I find errors since this is the initial draft. Feel free to help!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Part 2&lt;/strong&gt; (chapters 8-13) address type classes like functors and monads all the way through to traversable. I hope to squeeze in transformers and a pure application.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Part 3&lt;/strong&gt; (chapters 14+) will start to dance the fine line between practical programming and academic absurdity. We&#39;ll look at comonads, f-algebras, free monads, yoneda, and other categorical constructs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/bitwarden_rs</title>
      <link>https://github.com/dani-garcia/bitwarden_rs</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;This is a Bitwarden server API implementation written in Rust compatible with &lt;a href=&quot;https://bitwarden.com/#download&quot;&gt;upstream Bitwarden clients&lt;/a&gt;*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://travis-ci.org/dani-garcia/bitwarden_rs.svg?branch=master&quot; alt=&quot;Travis Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/bitwardenrs/server&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/bitwardenrs/server.svg&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs&quot;&gt;&lt;img src=&quot;https://deps.rs/repo/github/dani-garcia/bitwarden_rs/status.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/blob/master/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dani-garcia/bitwarden_rs.svg&quot; alt=&quot;GPL-3.0 Licensed&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/matrix/bitwarden_rs:matrix.org.svg?logo=matrix&quot; alt=&quot;Matrix Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Image is based on &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs&quot;&gt;Rust implementation of Bitwarden API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with the &lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt; project nor 8bit Solutions LLC.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;⚠️&lt;strong&gt;IMPORTANT&lt;/strong&gt;⚠️: When using this server, please report any bugs or suggestions to us directly (look at the bottom of this page for ways to get in touch), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official support channels.&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Basically full implementation of Bitwarden API is provided including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Organizations support&lt;/li&gt; 
 &lt;li&gt;Attachments&lt;/li&gt; 
 &lt;li&gt;Vault API support&lt;/li&gt; 
 &lt;li&gt;Serving the static files for Vault interface&lt;/li&gt; 
 &lt;li&gt;Website icons API&lt;/li&gt; 
 &lt;li&gt;Authenticator and U2F support&lt;/li&gt; 
 &lt;li&gt;YubiKey and Duo support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Pull the docker image and mount a volume from the host for persistent storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker pull bitwardenrs/server:latest
docker run -d --name bitwarden -v /bw-data/:/data/ -p 80:80 bitwardenrs/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under /bw-data/, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Some web browsers, like Chrome, disallow the use of Web Crypto APIs in insecure contexts. In this case, you might get an error like &lt;code&gt;Cannot read property &#39;importKey&#39;&lt;/code&gt;. To solve this problem, you need to access the web vault from HTTPS.&lt;/p&gt; 
&lt;p&gt;This can be configured in &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Enabling-HTTPS&quot;&gt;bitwarden_rs directly&lt;/a&gt; or using a third-party reverse proxy (&lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki/Proxy-examples&quot;&gt;some examples&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;If you have an available domain name, you can get HTTPS certificates with &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let&#39;s Encrypt&lt;/a&gt;, or you can generate self-signed certificates with utilities like &lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;mkcert&lt;/a&gt;. Some proxies automatically do this step, like Caddy (see examples linked above).&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/wiki&quot;&gt;bitwarden_rs wiki&lt;/a&gt; for more information on how to configure and run the bitwarden_rs server.&lt;/p&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;To ask a question, offer suggestions or new features or to get help configuring or installing the software, please &lt;a href=&quot;https://bitwardenrs.discourse.group/&quot;&gt;use the forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you spot any bugs or crashes with bitwarden_rs itself, please &lt;a href=&quot;https://github.com/dani-garcia/bitwarden_rs/issues/&quot;&gt;create an issue&lt;/a&gt;. Make sure there aren&#39;t any similar issues open, though!&lt;/p&gt; 
&lt;p&gt;If you prefer to chat, we&#39;re usually hanging around at &lt;a href=&quot;https://matrix.to/#/#bitwarden_rs:matrix.org&quot;&gt;#bitwarden_rs:matrix.org&lt;/a&gt; room on Matrix. Feel free to join us!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChonoN&quot;&gt;@ChonoN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/themightychris&quot;&gt;@themightychris&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>scutan90/DeepLearning-500-questions</title>
      <link>https://github.com/scutan90/DeepLearning-500-questions</link>
      <description>&lt;p&gt;深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 全书分为18个章节，50余万字。由于水平有限，书中不妥之处恳请广大读者批评指正。 未完待续............ 如有意合作，联系scutjy2015@163.com 版权所有，违权必究 Tan 2018.06&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;京东预售链接：https://item.jd.com/12785031.html&lt;/h1&gt; 
&lt;h2&gt;深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著&lt;/h2&gt; 
&lt;h1&gt;内容简介&lt;/h1&gt; 
&lt;p&gt;本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。&lt;/p&gt; 
&lt;p&gt;本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。&lt;/p&gt; 
&lt;h1&gt;作者简介&lt;/h1&gt; 
&lt;p&gt;谈继勇 主编&lt;/p&gt; 
&lt;p&gt;南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。&lt;/p&gt; 
&lt;p&gt;郭子钊 副主编&lt;/p&gt; 
&lt;p&gt;四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。&lt;/p&gt; 
&lt;p&gt;李剑 副主编&lt;/p&gt; 
&lt;p&gt;同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。&lt;/p&gt; 
&lt;p&gt;佃松宜 副主编&lt;/p&gt; 
&lt;p&gt;日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。&lt;/p&gt; 
&lt;p&gt;王晋东 特邀编委&lt;/p&gt; 
&lt;p&gt;中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。&lt;/p&gt; 
&lt;p&gt;王超锋&lt;/p&gt; 
&lt;p&gt;上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;郭晓锋&lt;/p&gt; 
&lt;p&gt;中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。&lt;/p&gt; 
&lt;p&gt;黄伟&lt;/p&gt; 
&lt;p&gt;华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;陈方杰（Amusi）&lt;/p&gt; 
&lt;p&gt;上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。&lt;/p&gt; 
&lt;p&gt;李元伟&lt;/p&gt; 
&lt;p&gt;国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。&lt;/p&gt; 
&lt;p&gt;陈琳&lt;/p&gt; 
&lt;p&gt;北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。&lt;/p&gt; 
&lt;h1&gt;目录&lt;/h1&gt; 
&lt;p&gt;第1章 数学基础 1&lt;/p&gt; 
&lt;p&gt;1.1 向量和矩阵 1&lt;/p&gt; 
&lt;p&gt;1.1.1 标量、向量、矩阵和张量 1&lt;/p&gt; 
&lt;p&gt;1.1.2 张量与矩阵的区别 2&lt;/p&gt; 
&lt;p&gt;1.1.3 矩阵和向量相乘的结果 2&lt;/p&gt; 
&lt;p&gt;1.1.4 向量和矩阵的范数归纳 2&lt;/p&gt; 
&lt;p&gt;1.1.5 判断一个矩阵是否为正定矩阵 4&lt;/p&gt; 
&lt;p&gt;1.2 导数和偏导数 5&lt;/p&gt; 
&lt;p&gt;1.2.1 导数偏导计算 5&lt;/p&gt; 
&lt;p&gt;1.2.2 导数和偏导数的区别 6&lt;/p&gt; 
&lt;p&gt;1.3 特征值和特征向量 6&lt;/p&gt; 
&lt;p&gt;1.3.1 特征值分解 6&lt;/p&gt; 
&lt;p&gt;1.3.2 奇异值和特征值的关系 6&lt;/p&gt; 
&lt;p&gt;1.4 概率分布与随机变量 7&lt;/p&gt; 
&lt;p&gt;1.4.1 机器学习为什么要使用概率 7&lt;/p&gt; 
&lt;p&gt;1.4.2 变量与随机变量的区别 7&lt;/p&gt; 
&lt;p&gt;1.4.3 随机变量与概率分布的联系 8&lt;/p&gt; 
&lt;p&gt;1.4.4 离散型随机变量和概率质量函数 8&lt;/p&gt; 
&lt;p&gt;1.4.5 连续型随机变量和概率密度函数 8&lt;/p&gt; 
&lt;p&gt;1.4.6 举例理解条件概率 9&lt;/p&gt; 
&lt;p&gt;1.4.7 联合概率与边缘概率的区别和联系 9&lt;/p&gt; 
&lt;p&gt;1.4.8 条件概率的链式法则 10&lt;/p&gt; 
&lt;p&gt;1.4.9 独立性和条件独立性 10&lt;/p&gt; 
&lt;p&gt;1.5 常见概率分布 11&lt;/p&gt; 
&lt;p&gt;1.5.1 伯努利分布 11&lt;/p&gt; 
&lt;p&gt;1.5.2 高斯分布 11&lt;/p&gt; 
&lt;p&gt;1.5.3 何时采用正态分布 12&lt;/p&gt; 
&lt;p&gt;1.5.4 指数分布 12&lt;/p&gt; 
&lt;p&gt;1.5.5 Laplace分布 13&lt;/p&gt; 
&lt;p&gt;1.5.6 Dirac分布和经验分布 13&lt;/p&gt; 
&lt;p&gt;1.6 期望、方差、协方差、相关系数 13&lt;/p&gt; 
&lt;p&gt;1.6.1 期望 13&lt;/p&gt; 
&lt;p&gt;1.6.2 方差 14&lt;/p&gt; 
&lt;p&gt;1.6.3 协方差 14&lt;/p&gt; 
&lt;p&gt;1.6.4 相关系数 15&lt;/p&gt; 
&lt;p&gt;第2章 机器学习基础 16&lt;/p&gt; 
&lt;p&gt;2.1 基本概念 16&lt;/p&gt; 
&lt;p&gt;2.1.1 大话机器学习本质 16&lt;/p&gt; 
&lt;p&gt;2.1.2 什么是神经网络 16&lt;/p&gt; 
&lt;p&gt;2.1.3 各种常见算法图示 17&lt;/p&gt; 
&lt;p&gt;2.1.4 计算图的导数计算 17&lt;/p&gt; 
&lt;p&gt;2.1.5 理解局部最优与全局最优 18&lt;/p&gt; 
&lt;p&gt;2.1.6 大数据与深度学习之间的关系 19&lt;/p&gt; 
&lt;p&gt;2.2 机器学习的学习方式 20&lt;/p&gt; 
&lt;p&gt;2.2.1 监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.2 非监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.3 半监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.4 弱监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.5 监督学习模型的搭建步骤 21&lt;/p&gt; 
&lt;p&gt;2.3 分类算法 22&lt;/p&gt; 
&lt;p&gt;2.3.1 常用分类算法的优缺点 22&lt;/p&gt; 
&lt;p&gt;2.3.2 分类算法的评估方法 23&lt;/p&gt; 
&lt;p&gt;2.3.3 正确率能否很好地评估分类算法 25&lt;/p&gt; 
&lt;p&gt;2.3.4 什么样的分类器是最好的 26&lt;/p&gt; 
&lt;p&gt;2.4 逻辑回归 26&lt;/p&gt; 
&lt;p&gt;2.4.1 回归的种类 26&lt;/p&gt; 
&lt;p&gt;2.4.2 逻辑回归适用性 27&lt;/p&gt; 
&lt;p&gt;2.4.3 逻辑回归与朴素贝叶斯的区别 27&lt;/p&gt; 
&lt;p&gt;2.4.4 线性回归与逻辑回归的区别 27&lt;/p&gt; 
&lt;p&gt;2.5 代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.1 为什么需要代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.2 代价函数作用原理 28&lt;/p&gt; 
&lt;p&gt;2.5.3 常见代价函数 30&lt;/p&gt; 
&lt;p&gt;2.5.4 为什么代价函数要非负 31&lt;/p&gt; 
&lt;p&gt;2.5.5 为什么用交叉熵代替二次代价函数 31&lt;/p&gt; 
&lt;p&gt;2.6 损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.1 什么是损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.2 常见的损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.3 逻辑回归为什么使用对数损失函数 34&lt;/p&gt; 
&lt;p&gt;2.6.4 对数损失函数如何度量损失 34&lt;/p&gt; 
&lt;p&gt;2.7 梯度下降法 35&lt;/p&gt; 
&lt;p&gt;2.7.1 梯度下降法的作用 36&lt;/p&gt; 
&lt;p&gt;2.7.2 梯度下降法的直观理解 36&lt;/p&gt; 
&lt;p&gt;2.7.3 梯度下降法算法描述 37&lt;/p&gt; 
&lt;p&gt;2.7.4 梯度下降法的缺点 38&lt;/p&gt; 
&lt;p&gt;2.7.5 如何对梯度下降法进行调优 38&lt;/p&gt; 
&lt;p&gt;2.7.6 随机梯度下降和批量梯度下降的区别 38&lt;/p&gt; 
&lt;p&gt;2.7.7 各种梯度下降法性能比较 40&lt;/p&gt; 
&lt;p&gt;2.8 线性判别分析 40&lt;/p&gt; 
&lt;p&gt;2.8.1 LDA思想总结 40&lt;/p&gt; 
&lt;p&gt;2.8.2 图解LDA核心思想 41&lt;/p&gt; 
&lt;p&gt;2.8.3 二类LDA算法原理 41&lt;/p&gt; 
&lt;p&gt;2.8.4 LDA算法流程总结 42&lt;/p&gt; 
&lt;p&gt;2.8.5 LDA和PCA的异同 43&lt;/p&gt; 
&lt;p&gt;2.8.6 LDA的优缺点 43&lt;/p&gt; 
&lt;p&gt;2.9 主成分分析 43&lt;/p&gt; 
&lt;p&gt;2.9.1 图解PCA核心思想 43&lt;/p&gt; 
&lt;p&gt;2.9.2 PCA算法推理 44&lt;/p&gt; 
&lt;p&gt;2.9.3 PCA算法流程总结 45&lt;/p&gt; 
&lt;p&gt;2.9.4 PCA思想总结 46&lt;/p&gt; 
&lt;p&gt;2.9.5 PCA算法的优缺点 46&lt;/p&gt; 
&lt;p&gt;2.9.6 降维的必要性及目的 46&lt;/p&gt; 
&lt;p&gt;2.9.7 KPCA与PCA的区别 47&lt;/p&gt; 
&lt;p&gt;2.10 模型评估 47&lt;/p&gt; 
&lt;p&gt;2.10.1 模型评估常用方法 48&lt;/p&gt; 
&lt;p&gt;2.10.2 误差、偏差和方差的区别和联系 48&lt;/p&gt; 
&lt;p&gt;2.10.3 为什么使用标准差 49&lt;/p&gt; 
&lt;p&gt;2.10.4 经验误差与泛化误差 50&lt;/p&gt; 
&lt;p&gt;2.10.5 图解欠拟合与过拟合 50&lt;/p&gt; 
&lt;p&gt;2.10.6 如何解决欠拟合与过拟合 52&lt;/p&gt; 
&lt;p&gt;2.10.7 交叉验证的主要作用 52&lt;/p&gt; 
&lt;p&gt;2.10.8 理解K折交叉验证 53&lt;/p&gt; 
&lt;p&gt;2.10.9 理解混淆矩阵 53&lt;/p&gt; 
&lt;p&gt;2.10.10 理解查准率与查全率 53&lt;/p&gt; 
&lt;p&gt;2.10.11 理解ROC与AUC 54&lt;/p&gt; 
&lt;p&gt;2.10.12 如何绘制ROC曲线 55&lt;/p&gt; 
&lt;p&gt;2.10.13 如何计算TPR和FPR 56&lt;/p&gt; 
&lt;p&gt;2.10.14 如何计算AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.15 直观理解AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.16 ROC评估分类器 60&lt;/p&gt; 
&lt;p&gt;2.10.17 代价敏感错误率与代价曲线 60&lt;/p&gt; 
&lt;p&gt;2.10.18 比较检验方法 61&lt;/p&gt; 
&lt;p&gt;2.11 决策树 61&lt;/p&gt; 
&lt;p&gt;2.11.1 决策树的基本原理 62&lt;/p&gt; 
&lt;p&gt;2.11.2 决策树的生成过程 62&lt;/p&gt; 
&lt;p&gt;2.11.3 决策树学习基本算法步骤 62&lt;/p&gt; 
&lt;p&gt;2.11.4 决策树算法的优缺点 63&lt;/p&gt; 
&lt;p&gt;2.11.5 决策树和熵的联系 63&lt;/p&gt; 
&lt;p&gt;2.11.6 熵的概念及定义 63&lt;/p&gt; 
&lt;p&gt;2.11.7 理解信息增益 64&lt;/p&gt; 
&lt;p&gt;2.11.8 决策树中熵、条件熵和信息增益的联系 64&lt;/p&gt; 
&lt;p&gt;2.11.9 决策树算法中剪枝的作用及策略 65&lt;/p&gt; 
&lt;p&gt;2.12 支持向量机（SVM） 65&lt;/p&gt; 
&lt;p&gt;2.12.1 什么是SVM 65&lt;/p&gt; 
&lt;p&gt;2.12.2 SVM能解决的问题 66&lt;/p&gt; 
&lt;p&gt;2.12.3 核函数特点及其作用 67&lt;/p&gt; 
&lt;p&gt;2.12.4 SVM为什么引入对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.5 如何理解SVM中的对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.6 常见的核函数 69&lt;/p&gt; 
&lt;p&gt;2.12.7 SVM的主要特点 69&lt;/p&gt; 
&lt;p&gt;2.12.8 SVM的主要缺点 70&lt;/p&gt; 
&lt;p&gt;2.12.9 逻辑回归与SVM的异同 70&lt;/p&gt; 
&lt;p&gt;2.13 贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.1 贝叶斯分类器的基本原理 72&lt;/p&gt; 
&lt;p&gt;2.13.2 朴素贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.3 举例理解朴素贝叶斯分类器 73&lt;/p&gt; 
&lt;p&gt;2.13.4 半朴素贝叶斯分类器 75&lt;/p&gt; 
&lt;p&gt;2.13.5 极大似然估计和贝叶斯估计的联系与区别 75&lt;/p&gt; 
&lt;p&gt;2.13.6 极大似然估计原理 76&lt;/p&gt; 
&lt;p&gt;2.13.7 图解极大似然估计 76&lt;/p&gt; 
&lt;p&gt;2.14 EM算法 77&lt;/p&gt; 
&lt;p&gt;2.14.1 EM算法的基本思想 77&lt;/p&gt; 
&lt;p&gt;2.14.2 EM算法推导 77&lt;/p&gt; 
&lt;p&gt;2.14.3 图解EM算法 78&lt;/p&gt; 
&lt;p&gt;2.14.4 EM算法流程 79&lt;/p&gt; 
&lt;p&gt;2.15 降维和聚类 79&lt;/p&gt; 
&lt;p&gt;2.15.1 图解为什么会产生维数灾难 79&lt;/p&gt; 
&lt;p&gt;2.15.2 怎样避免维数灾难 83&lt;/p&gt; 
&lt;p&gt;2.15.3 聚类和降维 83&lt;/p&gt; 
&lt;p&gt;2.15.4 聚类算法优劣的衡量标准 84&lt;/p&gt; 
&lt;p&gt;2.15.5 聚类和分类 85&lt;/p&gt; 
&lt;p&gt;2.15.6 聚类算法的性能比较 85&lt;/p&gt; 
&lt;p&gt;2.15.7 4种常用聚类方法比较 85&lt;/p&gt; 
&lt;p&gt;第3章 深度学习基础 89&lt;/p&gt; 
&lt;p&gt;3.1 基本概念 89&lt;/p&gt; 
&lt;p&gt;3.1.1 神经网络的类型 89&lt;/p&gt; 
&lt;p&gt;3.1.2 神经网络的常用模型结构 92&lt;/p&gt; 
&lt;p&gt;3.1.3 深度学习和机器学习的区别与联系 93&lt;/p&gt; 
&lt;p&gt;3.1.4 为什么使用深层表示 93&lt;/p&gt; 
&lt;p&gt;3.1.5 深度学习架构分类 94&lt;/p&gt; 
&lt;p&gt;3.1.6 如何选择深度学习开发平台 94&lt;/p&gt; 
&lt;p&gt;3.2 神经网络计算 95&lt;/p&gt; 
&lt;p&gt;3.2.1 前向传播和反向传播 95&lt;/p&gt; 
&lt;p&gt;3.2.2 如何计算神经网络的输出 96&lt;/p&gt; 
&lt;p&gt;3.2.3 如何计算卷积神经网络输出值 97&lt;/p&gt; 
&lt;p&gt;3.2.4 如何计算池化层输出值 100&lt;/p&gt; 
&lt;p&gt;3.2.5 反向传播实例 101&lt;/p&gt; 
&lt;p&gt;3.2.6 神经网络更“深”的意义 104&lt;/p&gt; 
&lt;p&gt;3.3 激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.1 为什么需要激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.2 为什么激活函数需要非线性函数 105&lt;/p&gt; 
&lt;p&gt;3.3.3 常见的激活函数及其图像 105&lt;/p&gt; 
&lt;p&gt;3.3.4 常见激活函数的导数计算 107&lt;/p&gt; 
&lt;p&gt;3.3.5 激活函数有哪些性质 108&lt;/p&gt; 
&lt;p&gt;3.3.6 如何选择激活函数 108&lt;/p&gt; 
&lt;p&gt;3.3.7 为什么tanh收敛速度比sigmoid快 109&lt;/p&gt; 
&lt;p&gt;3.3.8 Relu激活函数的优点 109&lt;/p&gt; 
&lt;p&gt;3.3.9 理解Relu激活函数的稀疏激活性 109&lt;/p&gt; 
&lt;p&gt;3.3.10 什么时候可以用线性激活函数 109&lt;/p&gt; 
&lt;p&gt;3.3.11 softmax函数的定义及作用 110&lt;/p&gt; 
&lt;p&gt;3.3.12 softmax函数如何应用于多分类 110&lt;/p&gt; 
&lt;p&gt;3.4 BATCH SIZE 112&lt;/p&gt; 
&lt;p&gt;3.4.1 为什么需要Batch Size 112&lt;/p&gt; 
&lt;p&gt;3.4.2 如何选择Batch Size值 112&lt;/p&gt; 
&lt;p&gt;3.4.3 调节Batch Size对训练效果的影响 113&lt;/p&gt; 
&lt;p&gt;3.4.4 在合理范围内增大Batch Size的好处 113&lt;/p&gt; 
&lt;p&gt;3.4.5 盲目增大Batch Size的坏处 114&lt;/p&gt; 
&lt;p&gt;3.5 归一化 114&lt;/p&gt; 
&lt;p&gt;3.5.1 理解归一化含义 114&lt;/p&gt; 
&lt;p&gt;3.5.2 归一化和标准化的联系与区别 114&lt;/p&gt; 
&lt;p&gt;3.5.3 为什么要归一化或标准化 115&lt;/p&gt; 
&lt;p&gt;3.5.4 图解为什么要归一化 115&lt;/p&gt; 
&lt;p&gt;3.5.5 为什么归一化能提高求最优解速度 115&lt;/p&gt; 
&lt;p&gt;3.5.6 归一化有哪些类型 116&lt;/p&gt; 
&lt;p&gt;3.5.7 局部响应归一化作用 116&lt;/p&gt; 
&lt;p&gt;3.5.8 局部响应归一化原理 117&lt;/p&gt; 
&lt;p&gt;3.5.9 什么是批归一化 118&lt;/p&gt; 
&lt;p&gt;3.5.10 批归一化的优点 118&lt;/p&gt; 
&lt;p&gt;3.5.11 批归一化算法流程 118&lt;/p&gt; 
&lt;p&gt;3.5.12 批归一化和组归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.13 权重归一化和批归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.14 批归一化适用范围 120&lt;/p&gt; 
&lt;p&gt;3.5.15 BN、LN、IN和GN的对比 120&lt;/p&gt; 
&lt;p&gt;3.6 参数初始化 121&lt;/p&gt; 
&lt;p&gt;3.6.1 参数初始化应满足的条件 121&lt;/p&gt; 
&lt;p&gt;3.6.2 常用的几种初始化方式 121&lt;/p&gt; 
&lt;p&gt;3.6.3 全0初始化带来的问题 121&lt;/p&gt; 
&lt;p&gt;3.6.4 全都初始化为同样的值 122&lt;/p&gt; 
&lt;p&gt;3.6.5 初始化为小的随机数 123&lt;/p&gt; 
&lt;p&gt;3.6.6 用 校准方差 123&lt;/p&gt; 
&lt;p&gt;3.7 预训练与微调 123&lt;/p&gt; 
&lt;p&gt;3.7.1 什么是预训练和微调 123&lt;/p&gt; 
&lt;p&gt;3.7.2 预训练和微调的作用 124&lt;/p&gt; 
&lt;p&gt;3.7.3 预训练模型的复用 124&lt;/p&gt; 
&lt;p&gt;3.7.4 预训练和迁移学习 125&lt;/p&gt; 
&lt;p&gt;3.7.5 微调时网络参数是否更新 125&lt;/p&gt; 
&lt;p&gt;3.7.6 微调模型的三种状态 125&lt;/p&gt; 
&lt;p&gt;3.7.7 为什么深层神经网络难以训练 125&lt;/p&gt; 
&lt;p&gt;3.8 超参数 127&lt;/p&gt; 
&lt;p&gt;3.8.1 超参数有哪些 127&lt;/p&gt; 
&lt;p&gt;3.8.2 参数和模型的关系 127&lt;/p&gt; 
&lt;p&gt;3.8.3 参数和超参数的区别 127&lt;/p&gt; 
&lt;p&gt;3.8.4 如何寻找超参数的最优值 128&lt;/p&gt; 
&lt;p&gt;3.8.5 超参数搜索的一般过程 128&lt;/p&gt; 
&lt;p&gt;3.9 学习率 129&lt;/p&gt; 
&lt;p&gt;3.9.1 学习率的作用 129&lt;/p&gt; 
&lt;p&gt;3.9.2 学习率衰减的常用参数 129&lt;/p&gt; 
&lt;p&gt;3.9.3 常用的学习率衰减方法 129&lt;/p&gt; 
&lt;p&gt;3.10 正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.1 为什么要正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.2 常见正则化方法 133&lt;/p&gt; 
&lt;p&gt;3.10.3 图解L1和L2正则化 134&lt;/p&gt; 
&lt;p&gt;3.10.4 Dropout具体工作流程 135&lt;/p&gt; 
&lt;p&gt;3.10.5 为什么Dropout可以解决过拟合问题 137&lt;/p&gt; 
&lt;p&gt;3.10.6 Dropout的缺点&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;🖖 Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/BACKERS.md&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/evanyou&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/support-vuejs/#One-time-Donations&quot;&gt;One-time donation via PayPal or crypto-currencies.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h4&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support Evan You&#39;s full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuː/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;| Project | Status | Description | |---------|--------|-------------| | &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-router&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-router.svg&quot; alt=&quot;vue-router-status&quot;&gt;&lt;/a&gt; | Single-page application routing | | &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg&quot; alt=&quot;vuex-status&quot;&gt;&lt;/a&gt; | Large-scale state management | | &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;vue-cli&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/@vue/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vue/cli.svg&quot; alt=&quot;vue-cli-status&quot;&gt;&lt;/a&gt; | Project scaffolding | | &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-loader&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg&quot; alt=&quot;vue-loader-status&quot;&gt;&lt;/a&gt; | Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack | | &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-server-renderer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-server-renderer.svg&quot; alt=&quot;vue-server-renderer-status&quot;&gt;&lt;/a&gt; | Server-side rendering support | | &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-class-component&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-class-component.svg&quot; alt=&quot;vue-class-component-status&quot;&gt;&lt;/a&gt; | TypeScript decorator for a class-based API | | &lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-rx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-rx.svg&quot; alt=&quot;vue-rx-status&quot;&gt;&lt;/a&gt; | RxJS integration | | &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; | &lt;a href=&quot;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg&quot; alt=&quot;vue-devtools-status&quot;&gt;&lt;/a&gt; | Browser DevTools extension |&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href=&quot;https://vuejs.org/v2/examples/&quot;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&quot;https://vuejs.org&quot;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href=&quot;https://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt; or &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejobs.com/?ref=vuejs&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/zdjankqw/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>babel/babel</title>
      <link>https://github.com/babel/babel</link>
      <description>&lt;p&gt;🐠 Babel is a compiler for writing next generation JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Babel (pronounced &lt;a href=&quot;https://soundcloud.com/sebmck/how-to-pronounce-babel&quot;&gt;&quot;babble&quot;&lt;/a&gt;) is a community-driven project used by many companies and projects, and is maintained by a group of &lt;a href=&quot;https://babeljs.io/team&quot;&gt;volunteers&lt;/a&gt;. If you&#39;d like to help support the future of the project, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving developer time on the project. (Message us on &lt;a href=&quot;https://twitter.com/babeljs&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://slack.babeljs.io/&quot;&gt;Slack&lt;/a&gt; for guidance!)&lt;/li&gt; 
 &lt;li&gt;Giving funds by becoming a sponsor on &lt;a href=&quot;https://opencollective.com/babel&quot;&gt;Open Collective&lt;/a&gt; or &lt;a href=&quot;https://www.patreon.com/henryzhu&quot;&gt;Patreon&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Our top sponsors are shown below! [&lt;a href=&quot;https://opencollective.com/babel#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;Babel is a tool that helps you write code in the latest version of JavaScript. When your supported environments don&#39;t support certain features natively, Babel will help you compile those features down to a supported version.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;In&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ES2020 nullish coalescing
function greet(input) {
  return input ?? &quot;Hello world&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Out&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function greet(input) {
  return input != null ? input : &quot;Hello world&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Try it out at our &lt;a href=&quot;https://babel.dev/repl#?browsers=defaults%2C%20not%20ie%2011&amp;amp;loose=true&amp;amp;code_lz=GYVwdgxgLglg9mABAcwE4FN1QBQzABxCgEpEBvAKEUQyhFST0KkQH5XEAiACXQBs-cRAHc4qPgBNOAbgoBfIA&amp;amp;shippedProposals=true&amp;amp;sourceType=script&amp;amp;lineWrap=true&amp;amp;presets=env%2Cenv&amp;amp;prettier=true&quot;&gt;REPL&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Who maintains Babel?&lt;/h3&gt; 
&lt;p&gt;Mostly a handful of volunteers, funded by you! Please check out our &lt;a href=&quot;https://babeljs.io/team&quot;&gt;team page&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Is there a Babel song?&lt;/h3&gt; 
&lt;p&gt;I&#39;m so glad you asked: &lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/SONG.md&quot;&gt;Hallelujah —— In Praise of Babel&lt;/a&gt; by &lt;a href=&quot;https://github.com/angus-c&quot;&gt;@angus-c&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/40abpedBKK8&quot;&gt;audio version&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/@swyx&quot;&gt;@swyx&lt;/a&gt;. Tweet us your recordings!&lt;/p&gt; 
&lt;h3&gt;Looking for support?&lt;/h3&gt; 
&lt;p&gt;For questions and support please join our &lt;a href=&quot;https://slack.babeljs.io/&quot;&gt;Slack Community&lt;/a&gt; (you can &lt;a href=&quot;https://slack.babeljs.io/&quot;&gt;sign up here&lt;/a&gt; for an invite), ask a question on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/babeljs&quot;&gt;Stack Overflow&lt;/a&gt;, or ping us on &lt;a href=&quot;https://twitter.com/babeljs&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Where are the docs?&lt;/h3&gt; 
&lt;p&gt;Check out our website: &lt;a href=&quot;https://babeljs.io/&quot;&gt;babeljs.io&lt;/a&gt;, and report issues/features at &lt;a href=&quot;https://github.com/babel/website/issues&quot;&gt;babel/website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Want to report a bug or request a feature?&lt;/h3&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; and fill out the issue template at &lt;a href=&quot;https://github.com/babel/babel/issues&quot;&gt;babel/issues&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Want to contribute to Babel?&lt;/h3&gt; 
&lt;p&gt;Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://babeljs.slack.com/messages/development&quot;&gt;#development&lt;/a&gt; Slack channel and say hi! (&lt;a href=&quot;https://slack.babeljs.io&quot;&gt;sign-up&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Issues with the &lt;a href=&quot;https://github.com/babel/babel/labels/good%20first%20issue&quot;&gt;good first issue&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/labels/help%20wanted&quot;&gt;help wanted&lt;/a&gt; label. We suggest also looking at the &lt;a href=&quot;https://github.com/babel/babel/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aclosed+label%3A%22good+first+issue%22&quot;&gt;closed ones&lt;/a&gt; to get a sense of the kinds of issues you can tackle.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; to get started with setting up the repo.&lt;/li&gt; 
 &lt;li&gt;Our discussions/notes/roadmap: &lt;a href=&quot;https://github.com/babel/notes&quot;&gt;babel/notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our progress on TC39 proposals: &lt;a href=&quot;https://github.com/babel/proposals&quot;&gt;babel/proposals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our blog which contains release posts and explanations: &lt;a href=&quot;https://babeljs.io/blog&quot;&gt;/blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our videos page with talks about open source and Babel: &lt;a href=&quot;https://babeljs.io/videos&quot;&gt;/videos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://podcast.babeljs.io&quot;&gt;podcast&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How is the repo structured?&lt;/h3&gt; 
&lt;p&gt;The Babel repo is managed as a &lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/doc/design/monorepo.md&quot;&gt;monorepo&lt;/a&gt; that is composed of many &lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/packages/README.md&quot;&gt;npm packages&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/babel/babel/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NervJS/taro</title>
      <link>https://github.com/NervJS/taro</link>
      <description>&lt;p&gt;开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信/京东/百度/支付宝/字节跳动/ QQ 小程序/H5/React Native 等应用。 https://taro.zone/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Taro&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/@tarojs/cli.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/NervJS/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;👽 Taro[&#39;tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Taro&lt;/strong&gt; 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信/京东/百度/支付宝/字节跳动/ QQ 小程序/H5 等应用。现如今市面上端的形态多种多样，Web、React Native、微信小程序等各种端大行其道，当业务要求同时在不同的端都要求有所表现的时候，针对不同的端去编写多套代码的成本显然非常高，这时候只编写一套代码就能够适配到多端的能力就显得极为需要。&lt;/p&gt; 
&lt;h3&gt;版本说明&lt;/h3&gt; 
&lt;p&gt;当前 Taro 已进入 3.x 时代，相较于 Taro 1/2 采用了重运行时的架构，让开发者可以获得完整的 React/Vue 等框架的开发体验，具体请参考&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3NDkzMTI3MA==&amp;amp;mid=2247483770&amp;amp;idx=1&amp;amp;sn=ba2cdea5256e1c4e7bb513aa4c837834&quot;&gt;《小程序跨框架开发的探索与实践》&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;如果你想使用 Taro 1/2，可以访问&lt;a href=&quot;https://nervjs.github.io/taro/versions&quot;&gt;文档版本&lt;/a&gt;获得帮助。&lt;/p&gt; 
&lt;h2&gt;学习资源&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://taro-docs.jd.com/taro/docs/guide&quot;&gt;5 分钟上手 Taro 开发&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/awesome-taro&quot;&gt;awesome-taro&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;掘金小册：&lt;a href=&quot;https://juejin.im/book/5b73a131f265da28065fb1cd?referrer=5ba228f16fb9a05d3251492d&quot;&gt;Taro 多端开发实现原理与实战&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;社区共享&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-club.jd.com/&quot;&gt;Taro 交流社区——让每一次交流都被沉淀&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-ext.jd.com/&quot;&gt;Taro 物料市场——让每一个轮子产生价值&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;使用案例&lt;/h2&gt; 
&lt;p&gt;Taro 已经投入了我们的生产环境中使用，业界也在广泛地使用 Taro 开发多端应用。&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/244&quot;&gt;征集更多优秀案例&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Taro 特性&lt;/h2&gt; 
&lt;h3&gt;框架支持&lt;/h3&gt; 
&lt;h4&gt;React/Nerv 支持&lt;/h4&gt; 
&lt;p&gt;在 Taro 3 中可以使用完整的 React/Nerv 开发体验，具体请参考&lt;a href=&quot;https://nervjs.github.io/taro/docs/react&quot;&gt;基础教程——React&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;代码示例&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { View, Text } from &#39;@tarojs/components&#39;

export default class Index extends Component {
  state = {
    msg: &#39;Hello World！&#39;
  }
  componentWillUnmount () { }

  componentDidShow () { }

  componentDidHide () { }

  render () {
    return (
      &amp;lt;View className=&#39;index&#39;&amp;gt;
        &amp;lt;Text&amp;gt;{this.state.msg}&amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vue 支持&lt;/h4&gt; 
&lt;p&gt;在 Taro 3 中可以使用完整的 Vue 开发体验，具体请参考&lt;a href=&quot;https://nervjs.github.io/taro/docs/vue&quot;&gt;基础教程——Vue&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;代码示例&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vue&quot;&gt;&amp;lt;template&amp;gt;
  &amp;lt;view class=&quot;index&quot;&amp;gt;
    &amp;lt;text&amp;gt;{{msg}}&amp;lt;/text&amp;gt;
  &amp;lt;/view&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default {
  data () {
    return {
      msg: &#39;Hello World！&#39;
    }
  },
  created () {},
  onShow () {},
  onHide () {}
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;多端转换支持&lt;/h3&gt; 
&lt;p&gt;Taro 方案的初心就是为了打造一个多端开发的解决方案。&lt;/p&gt; 
&lt;p&gt;目前 Taro 3 可以支持转换到 &lt;strong&gt;微信/京东/百度/支付宝/字节跳动/QQ 小程序&lt;/strong&gt; 以及 &lt;strong&gt;H5 端&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;加入共建&lt;/h2&gt; 
&lt;h4&gt;加入 Taro 社区共建倡议&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/4714&quot;&gt;Taro 邀你加入社区共建&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;为 Taro 贡献代码&lt;/h4&gt; 
&lt;p&gt;Taro 非常欢迎社区开发者为 Taro 贡献代码，在贡献之前请先阅读&lt;a href=&quot;https://nervjs.github.io/taro/docs/CONTRIBUTING.html&quot;&gt;贡献指南&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;如果你想为 Taro 实现一个重要功能，需要先撰写 RFC 文档，按照 Taro 的&lt;a href=&quot;https://github.com/NervJS/taro-rfcs&quot;&gt;RFC 机制&lt;/a&gt;进行操作，在经过社区讨论完善后才可以进行代码的提交。&lt;/p&gt; 
&lt;h2&gt;问题反馈与建议&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://nervjs.github.io/taro-issue-helper/&quot;&gt;给 Taro 提 ISSUE&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;强烈推荐阅读 &lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&quot;&gt;《提问的智慧》&lt;/a&gt;、&lt;a href=&quot;https://github.com/seajs/seajs/issues/545&quot;&gt;《如何向开源社区提问题》&lt;/a&gt; 和 &lt;a href=&quot;http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html&quot;&gt;《如何有效地报告 Bug》&lt;/a&gt;、&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25795393&quot;&gt;《如何向开源项目提交无法解答的问题》&lt;/a&gt;，更好的问题更容易获得帮助。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://issuehunt.io/repos/128624453&quot;&gt;&lt;img src=&quot;https://issuehunt.io/static/embed/issuehunt-button-v1.svg&quot; alt=&quot;Let&#39;s fund issues in this repository&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特别鸣谢&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1390888?s=100&amp;amp;v=4&quot; alt=&quot;nanjingboy&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20449400?s=100&amp;amp;v=4&quot; alt=&quot;jsNewbee&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15245051?s=100&amp;amp;v=4&quot; alt=&quot;Qiyu8&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3471836?s=100&amp;amp;v=4&quot; alt=&quot;Garfield550&quot;&gt;&lt;/a&gt; :---:|:---:|:---:|:---: &lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;nanjingboy&lt;/a&gt; | &lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;jsNewbee&lt;/a&gt; | &lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;Qiyu8&lt;/a&gt; | &lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;Garfield Lee&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;贡献者们&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;开发计划&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/milestones&quot;&gt;Milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;本项目遵从 &lt;a href=&quot;https://gist.github.com/stephenparish/9941e89d80e2bc58a153&quot;&gt;Angular Style Commit Message Conventions&lt;/a&gt;，更新日志请查阅 &lt;a href=&quot;https://github.com/NervJS/taro/releases&quot;&gt;Release&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;开发交流&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/198&quot;&gt;官方交流微信群&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) O2Team&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nuxt/nuxt.js</title>
      <link>https://github.com/nuxt/nuxt.js</link>
      <description>&lt;p&gt;The Intuitive Vue Framework&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;Build your next Vue.js application with confidence using Nuxt: a framework making web development simple and powerful.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📘 Documentation: &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 Community: &lt;a href=&quot;https://cmty.app/nuxt&quot;&gt;cmty.app/nuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎬 Video: &lt;a href=&quot;https://www.youtube.com/watch?v=kmf-p-pTi40&quot;&gt;1 minute demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐦 Twitter: &lt;a href=&quot;https://twitter.nuxtjs.org/&quot;&gt;@nuxt_js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 Chat: &lt;a href=&quot;https://discord.nuxtjs.org/&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;a href=&quot;https://awesome.nuxtjs.org/&quot;&gt;AwesomeNuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👉 &lt;a href=&quot;https://template.nuxtjs.org&quot;&gt;Play with Nuxt online&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automatic transpilation and bundling (with webpack and babel)&lt;/li&gt; 
 &lt;li&gt;Hot code reloading&lt;/li&gt; 
 &lt;li&gt;Server-side rendering OR Single Page App OR Static Generated, you choose :fire:&lt;/li&gt; 
 &lt;li&gt;Static file serving. &lt;code&gt;./static/&lt;/code&gt; is mapped to &lt;code&gt;/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Configurable with a &lt;code&gt;nuxt.config.js&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Custom layouts with the &lt;code&gt;layouts/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
 &lt;li&gt;Code splitting for every &lt;code&gt;pages/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Loading just the critical CSS (page-level)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more at &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npx create-nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It&#39;s as simple as that!&lt;/p&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/installation&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Please take a look at &lt;a href=&quot;https://nuxtjs.org/examples&quot;&gt;https://nuxtjs.org/examples&lt;/a&gt; or directly in &lt;a href=&quot;https://github.com/nuxt/nuxt.js/tree/dev/examples&quot;&gt;https://github.com/nuxt/nuxt.js/tree/dev/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Production deployment&lt;/h2&gt; 
&lt;p&gt;To deploy, instead of running nuxt, you probably want to build ahead of time. Therefore, building and starting are separate commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nuxt build
nuxt start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/commands#production-deployment&lt;/p&gt; 
&lt;h2&gt;Consulting from the Nuxt team&lt;/h2&gt; 
&lt;p&gt;Get help with that tough bug or make sure your Nuxt app is ready to deploy. For $250 an hour, get technical support, advice, code reviews, and development from the Nuxt core team: &lt;a href=&quot;https://otechie.com/nuxt?ref=readme&quot;&gt;Hire Nuxt on Otechie&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Professional support with TideLift&lt;/h2&gt; 
&lt;p&gt;Professionally supported Nuxt is now available!&lt;/p&gt; 
&lt;p&gt;Tidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-nuxt?utm_source=npm-nuxt&amp;amp;utm_medium=readme&quot;&gt;Get supported Nuxt with the Tidelift Subscription&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Nuxt&lt;/h2&gt; 
&lt;p&gt;Nuxt is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events.&lt;/p&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/nuxtjs#contribute&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/platinum-sponsors.svg?avatarHeight=96&amp;amp;width=890&quot; alt=&quot;Open Collective Platinum Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/gold-sponsors.svg?avatarHeight=80&amp;amp;width=890&quot; alt=&quot;Open Collective Gold Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Silver Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/silver-sponsors.svg?avatarHeight=64&amp;amp;width=890&quot; alt=&quot;Open Collective Silver Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/bronze-sponsors.svg?avatarHeight=48&amp;amp;width=890&quot; alt=&quot;Open Collective Bronze Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to all our &lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;contributors&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Nuxt Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/nuxt/nuxt.js&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href=&quot;https://nuxtjs.org/guide/contribution-guide#codefund_ad&quot;&gt;Contribution Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cross-browser testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;http://browserstack.com&quot;&gt;BrowserStack&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Automated testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt; for supporting Open Source &amp;lt;3&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability regarding Nuxt, please send an e-mail to the team via security@nuxtjs.org! All security vulnerabilities will be promptly addressed.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/blob/dev/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>appium/appium</title>
      <link>https://github.com/appium/appium</link>
      <description>&lt;p&gt;📱 Automation for iOS, Android, and Windows Apps.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Appium&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/appium&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/appium.svg&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/appium/appium&quot;&gt;&lt;img src=&quot;https://david-dm.org/appium/appium.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/appium/appium#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/appium/appium/dev-status.svg&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/appium&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/appium.svg&quot; alt=&quot;Monthly Downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Appium is an open-source, cross-platform test automation tool for native, hybrid, and mobile web and desktop apps. We support simulators (iOS), emulators (Android), and real devices (iOS, Android, Windows, Mac).&lt;/p&gt; 
&lt;p&gt;Want to skip straight to the action? Check out our &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/about-appium/getting-started.md&quot;&gt;getting started&lt;/a&gt; doc.&lt;/p&gt; 
&lt;h3&gt;Supported Platforms&lt;/h3&gt; 
&lt;p&gt;Appium supports app automation across a variety of platforms, like iOS, Android, and Windows. Each platform is supported by one or more &quot;drivers&quot;, which know how to automate that particular platform.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/about-appium/platform-support.md&quot;&gt;Appium Platform Support&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Why Appium?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;You don&#39;t have to recompile your app or modify it in any way, due to the use of standard automation APIs on all platforms.&lt;/li&gt; 
 &lt;li&gt;You can write tests with your favorite dev tools using any &lt;a href=&quot;https://w3c.github.io/webdriver/webdriver-spec.html&quot;&gt;WebDriver&lt;/a&gt;-compatible language such as Java, Objective-C, JavaScript (Node), PHP, Python, Ruby, C#, Clojure, or Perl with the Selenium WebDriver API and &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/about-appium/appium-clients.md&quot;&gt;language-specific client libraries&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You can use any testing framework.&lt;/li&gt; 
 &lt;li&gt;Appium has built-in mobile web and hybrid app support. Within the same script, you can switch seamlessly between native app automation and webview automation, all using the WebDriver model that&#39;s already the standard for web automation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Investing in the &lt;a href=&quot;https://w3c.github.io/webdriver/webdriver-spec.html&quot;&gt;WebDriver&lt;/a&gt; protocol means you are betting on a single, free, and open protocol for testing that has become a web standard. Don&#39;t lock yourself into a proprietary stack.&lt;/p&gt; 
&lt;p&gt;For example, if you use Apple&#39;s XCUITest library without Appium you can only write tests using Obj-C/Swift, and you can only run tests through Xcode. Similarly, with Google&#39;s UiAutomator or Espresso, you can only write tests in Java/Kotlin. Appium opens up the possibility of true cross-platform native app automation, for mobile and beyond. Finally!&lt;/p&gt; 
&lt;p&gt;If you&#39;re new to Appium or want a more comprehensive description of what this is all about, please read our &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/about-appium/intro.md&quot;&gt;Introduction to Appium Concepts&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;Your environment needs to be set up for the particular platforms that you want to run tests on. Each of the drivers above documents the requirements for their particular brand of automation. At a minimum, you will need to be able to run Node.js 12+.&lt;/p&gt; 
&lt;h3&gt;Get Started&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/about-appium/getting-started.md&quot;&gt;Getting Started&lt;/a&gt; guide to get going with Appium.&lt;/p&gt; 
&lt;p&gt;There is also a sample code that contains &lt;a href=&quot;https://github.com/appium/appium/tree/master/sample-code&quot;&gt;many examples of tests in a variety of different languages&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For prettily-rendered docs, please visit &lt;a href=&quot;http://appium.io&quot;&gt;appium.io&lt;/a&gt;. You can always find the full list of Appium doc pages at &lt;a href=&quot;https://github.com/appium/appium/tree/master/docs/en/&quot;&gt;Appium&#39;s GitHub Repo&lt;/a&gt; as well.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/appium/appium/blob/master/ci-jobs/update-appium-io.yml&quot;&gt;update-appium-io.yml&lt;/a&gt; creates a PR by &lt;a href=&quot;https://dev.azure.com/AppiumCI/Appium%20CI/_build?definitionId=37&quot;&gt;CI job&lt;/a&gt;. in the appium.io repository with the documentation update.&lt;/p&gt; 
&lt;p&gt;Once the PR has been merged, the latest documentation will be in &lt;a href=&quot;http://appium.io&quot;&gt;appium.io&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Please take a look at our &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/CONTRIBUTING.md&quot;&gt;contribution documentation&lt;/a&gt; for instructions on how to build, test, and run Appium from the source.&lt;/p&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;Interested in where Appium is heading in the future? Check out the &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/ROADMAP.md&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project History, Credits &amp;amp; Inspiration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://appium.io/history&quot;&gt;History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/contributing-to-appium/credits.md&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Forums&lt;/h3&gt; 
&lt;p&gt;Announcements and debates often take place on the &lt;a href=&quot;https://discuss.appium.io&quot;&gt;Discussion Group&lt;/a&gt;, be sure to sign up!&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;We put together a &lt;a href=&quot;https://raw.githubusercontent.com/appium/appium/master/docs/en/writing-running-appium/other/troubleshooting.md&quot;&gt;troubleshooting guide&lt;/a&gt;. Please have a look here first if you run into any problems. It contains instructions for checking a lot of common errors and how to get in touch with the community if you&#39;re stumped.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/learn-d3&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/blob/master/API.md&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If you use npm, &lt;code&gt;npm install d3&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3/releases/latest&quot;&gt;latest release&lt;/a&gt;. The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, &lt;a href=&quot;https://cdnjs.com/libraries/d3&quot;&gt;CDNJS&lt;/a&gt;, or &lt;a href=&quot;https://unpkg.com/d3/&quot;&gt;unpkg&lt;/a&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://d3js.org/d3.v6.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the minified version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://d3js.org/d3.v6.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the standalone D3 microlibraries. For example, &lt;a href=&quot;https://github.com/d3/d3-selection&quot;&gt;d3-selection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://d3js.org/d3-selection.v2.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;D3 is written using &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES2015 modules&lt;/a&gt;. Create a &lt;a href=&quot;https://bl.ocks.org/mbostock/bb09af4c39c79cffcde4&quot;&gt;custom bundle using Rollup&lt;/a&gt;, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {scaleLinear} from &quot;d3-scale&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or import everything into a namespace (here, &lt;code&gt;d3&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import * as d3 from &quot;d3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = require(&quot;d3&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also require individual modules and combine them into a &lt;code&gt;d3&lt;/code&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const d3 = Object.assign({}, require(&quot;d3-format&quot;), require(&quot;d3-geo&quot;), require(&quot;d3-geo-projection&quot;));
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>OAI/OpenAPI-Specification</title>
      <link>https://github.com/OAI/OpenAPI-Specification</link>
      <description>&lt;p&gt;The OpenAPI Specification Repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The OpenAPI Specification&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/OAI/OpenAPI-Specification/workflows/validate-markdown/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16343502?v=3&amp;amp;s=200&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification is a community-driven open specification within the &lt;a href=&quot;https://www.openapis.org/&quot;&gt;OpenAPI Initiative&lt;/a&gt;, a Linux Foundation Collaborative Project.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for HTTP APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.&lt;/p&gt; 
&lt;p&gt;Use cases for machine-readable API definition documents include, but are not limited to: interactive documentation; code generation for documentation, clients, and servers; and automation of test cases. OpenAPI documents describe an APIs services and are represented in either YAML or JSON formats. These documents may either be produced and served statically or be generated dynamically from an application.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification does not require rewriting existing APIs. It does not require binding any software to a service – the service being described may not even be owned by the creator of its description. It does, however, require the capabilities of the service be described in the structure of the OpenAPI Specification. Not all services can be described by OpenAPI – this specification is not intended to cover every possible style of HTTP APIs, but does include support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST APIs&lt;/a&gt;. The OpenAPI Specification does not mandate a specific development process such as design-first or code-first. It does facilitate either technique by establishing clear interactions with a HTTP API.&lt;/p&gt; 
&lt;p&gt;This GitHub project is the starting point for OpenAPI. Here you will find the information you need about the OpenAPI Specification, simple examples of what it looks like, and some general information regarding the project.&lt;/p&gt; 
&lt;h2&gt;Current Version - 3.1.0&lt;/h2&gt; 
&lt;p&gt;The current version of the OpenAPI specification is &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/3.1.0.md&quot;&gt;OpenAPI Specification 3.1.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Previous Versions&lt;/h3&gt; 
&lt;p&gt;This repository also contains all &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions&quot;&gt;previous versions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Each folder in this repository, such as &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples&quot;&gt;examples&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas&quot;&gt;schemas&lt;/a&gt;, should contain folders pertaining to the current and previous versions of the specification.&lt;/p&gt; 
&lt;h2&gt;See It in Action&lt;/h2&gt; 
&lt;p&gt;If you just want to see it work, check out the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples&quot;&gt;list of current examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools and Libraries&lt;/h2&gt; 
&lt;p&gt;Looking to see how you can create your own OpenAPI definition, present it, or otherwise use it? Check out the growing &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/IMPLEMENTATIONS.md&quot;&gt;list of implementations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Participation&lt;/h2&gt; 
&lt;p&gt;The current process for development of the OpenAPI Specification is described in &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/DEVELOPMENT.md&quot;&gt;Development Guidelines&lt;/a&gt;. Development of the next version of the OpenAPI Specification is guided by the &lt;a href=&quot;https://www.openapis.org/participate/how-to-contribute/governance#TDC&quot;&gt;Technical Steering Committee (TSC)&lt;/a&gt;. This group of committers bring their API expertise, incorporate feedback from the community, and expand the group of committers as appropriate. All development activity on the future specification will be performed as features and merged into this branch. Upon release of the future specification, this branch will be merged to master.&lt;/p&gt; 
&lt;p&gt;The TSC holds weekly web conferences to review open pull requests and discuss open issues related to the evolving OpenAPI Specification. Participation in weekly calls and scheduled working sessions is open to the community. You can view the &lt;a href=&quot;https://openapi.groups.io/g/tsc/calendar&quot;&gt;TSC calendar online&lt;/a&gt;, and import it to your calendar using the &lt;a href=&quot;https://openapi.groups.io/g/tsc/ics/1105671/1995679554/feed.ics&quot;&gt;iCal link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Initiative encourages participation from individuals and companies alike. If you want to participate in the evolution of the OpenAPI Specification, consider taking the following actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/3.1.0.md&quot;&gt;current specification&lt;/a&gt;. The human-readable markdown file &lt;em&gt;is the source of truth&lt;/em&gt; for the specification.&lt;/li&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/DEVELOPMENT.md&quot;&gt;development&lt;/a&gt; process so you understand how the spec is evolving.&lt;/li&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/issues&quot;&gt;issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/pulls&quot;&gt;pull requests&lt;/a&gt; to see if someone has already documented your idea or feedback on the specification. You can follow an existing conversation by subscribing to the existing issue or PR.&lt;/li&gt; 
 &lt;li&gt;Create an issue to describe a new concern. If possible, propose a solution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not all feedback can be accommodated and there may be solid arguments for or against a change being appropriate for the specification.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/LICENSE&quot;&gt;License (Apache-2.0)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://ga-beacon.appspot.com/UA-831873-42/readme.md?pixel&quot; alt=&quot;Analytics&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nasa/openmct</title>
      <link>https://github.com/nasa/openmct</link>
      <description>&lt;p&gt;A web based mission control framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open MCT &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache%202.0-blue.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#39;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.&lt;/p&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://nasa.github.io/openmct/&quot;&gt;Official Site&lt;/a&gt; and &lt;a href=&quot;https://nasa.github.io/openmct/getting-started/&quot;&gt;Getting Started Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Open MCT in Action&lt;/h2&gt; 
&lt;p&gt;Try Open MCT now with our &lt;a href=&quot;https://openmct-demo.herokuapp.com/&quot;&gt;live demo&lt;/a&gt;. &lt;img src=&quot;https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg&quot; alt=&quot;Demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Building and Running Open MCT Locally&lt;/h2&gt; 
&lt;p&gt;Building and running Open MCT in your local dev environment is very easy. Be sure you have &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; installed, then follow the directions below. Need additional information? Check out the &lt;a href=&quot;https://nasa.github.io/openmct/getting-started/&quot;&gt;Getting Started&lt;/a&gt; page on our website. (These instructions assume you are installing as a non-root user; developers have &lt;a href=&quot;https://github.com/nasa/openmct/issues/1151&quot;&gt;reported issues&lt;/a&gt; running these steps with root privileges.)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the source code&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/nasa/openmct.git&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Install development dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Run a local development server&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Open MCT is now running, and can be accessed by pointing a web browser at &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Open MCT v1.0.0&lt;/h2&gt; 
&lt;p&gt;This represents a major overhaul of Open MCT with significant changes under the hood. We aim to maintain backward compatibility but if you do find compatibility issues, please let us know by filing an issue in this repository. If you are having major issues with v1.0.0 please check-out the v0.14.0 tag until we can resolve them for you.&lt;/p&gt; 
&lt;p&gt;If you are migrating an application built with Open MCT as a dependency to v1.0.0 from an earlier version, please refer to &lt;a href=&quot;https://nasa.github.io/openmct/documentation/migration-guide&quot;&gt;our migration guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href=&quot;https://nasa.github.io/openmct/documentation/&quot;&gt;Open MCT website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;The clearest examples for developing Open MCT plugins are in the &lt;a href=&quot;https://github.com/nasa/openmct-tutorial&quot;&gt;tutorials&lt;/a&gt; provided in our documentation.&lt;/p&gt; 
&lt;p&gt;We want Open MCT to be as easy to use, install, run, and develop for as possible, and your feedback will help us get there! Feedback can be provided via &lt;a href=&quot;https://github.com/nasa/openmct/issues&quot;&gt;GitHub issues&lt;/a&gt;, or by emailing us at &lt;a href=&quot;mailto:arc-dl-openmct@mail.nasa.gov&quot;&gt;arc-dl-openmct@mail.nasa.gov&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building Applications With Open MCT&lt;/h2&gt; 
&lt;p&gt;Open MCT is built using &lt;a href=&quot;http://npmjs.com/&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/&quot;&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See our documentation for a guide on &lt;a href=&quot;https://github.com/nasa/openmct/blob/master/API.md#starting-an-open-mct-application&quot;&gt;building Applications with Open MCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group of software components (including source code and resources such as images and HTML templates) that is intended to be added or removed as a single unit.&lt;/p&gt; 
&lt;p&gt;As well as providing an extension mechanism, most of the core Open MCT codebase is also written as plugins.&lt;/p&gt; 
&lt;p&gt;For information on writing plugins, please see &lt;a href=&quot;https://github.com/nasa/openmct/blob/master/API.md#plugins&quot;&gt;our API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written for &lt;a href=&quot;https://jasmine.github.io/api/3.1/global&quot;&gt;Jasmine 3&lt;/a&gt; and run by &lt;a href=&quot;http://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;. To run:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The test suite is configured to load any scripts ending with &lt;code&gt;Spec.js&lt;/code&gt; found in the &lt;code&gt;src&lt;/code&gt; hierarchy. Full configuration details are found in &lt;code&gt;karma.conf.js&lt;/code&gt;. By convention, unit test scripts should be located alongside the units that they test; for example, &lt;code&gt;src/foo/Bar.js&lt;/code&gt; would be tested by &lt;code&gt;src/foo/BarSpec.js&lt;/code&gt;. (For legacy reasons, some existing tests may be located in separate &lt;code&gt;test&lt;/code&gt; folders near the units they test, but the naming convention is otherwise the same.)&lt;/p&gt; 
&lt;h3&gt;Test Reporting&lt;/h3&gt; 
&lt;p&gt;When &lt;code&gt;npm test&lt;/code&gt; is run, test results will be written as HTML to &lt;code&gt;dist/reports/tests/&lt;/code&gt;. Code coverage information is written to &lt;code&gt;dist/reports/coverage&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Glossary&lt;/h1&gt; 
&lt;p&gt;Certain terms are used throughout Open MCT with consistent meanings or conventions. Any deviations from the below are issues and should be addressed (either by updating this glossary or changing code to reflect correct usage.) Other developer documentation, particularly in-line documentation, may presume an understanding of these terms.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;plugin&lt;/em&gt;: A plugin is a removable, reusable grouping of software elements. The application is composed of plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;composition&lt;/em&gt;: In the context of a domain object, this refers to the set of other domain objects that compose or are contained by that object. A domain object&#39;s composition is the set of domain objects that should appear immediately beneath it in a tree hierarchy. A domain object&#39;s composition is described in its model as an array of id&#39;s; its composition capability provides a means to retrieve the actual domain object instances associated with these identifiers asynchronously.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;description&lt;/em&gt;: When used as an object property, this refers to the human-readable description of a thing; usually a single sentence or short paragraph. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;domain object&lt;/em&gt;: A meaningful object to the user; a distinct thing in the work support by Open MCT. Anything that appears in the left-hand tree is a domain object.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;identifier&lt;/em&gt;: A tuple consisting of a namespace and a key, which together uniquely identifies a domain object.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;model&lt;/em&gt;: The persistent state associated with a domain object. A domain object&#39;s model is a JavaScript object which can be converted to JSON without losing information (that is, it contains no methods.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;name&lt;/em&gt;: When used as an object property, this refers to the human-readable name for a thing. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;navigation&lt;/em&gt;: Refers to the current state of the application with respect to the user&#39;s expressed interest in a specific domain object; e.g. when a user clicks on a domain object in the tree, they are &lt;em&gt;navigating&lt;/em&gt; to it, and it is thereafter considered the &lt;em&gt;navigated&lt;/em&gt; object (until the user makes another such choice.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;namespace&lt;/em&gt;: A name used to identify a persistence store. A running open MCT application could potentially use multiple persistence stores, with the&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Binaryify/NeteaseCloudMusicApi</title>
      <link>https://github.com/Binaryify/NeteaseCloudMusicApi</link>
      <description>&lt;p&gt;网易云音乐 Node.js API service&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;网易云音乐 API&lt;/h1&gt; 
&lt;p&gt;网易云音乐 Node.js API service&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;灵感来自&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/disoul/electron-cloud-music&quot;&gt;disoul/electron-cloud-music&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/darknessomi/musicbox&quot;&gt;darknessomi/musicbox&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sqaiyan/netmusic-node&quot;&gt;sqaiyan/netmusic-node&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/greats3an/pyncm&quot;&gt;greats3an/pyncm&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;环境要求&lt;/h2&gt; 
&lt;p&gt;需要 NodeJS 8.12+ 环境&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;
$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git 

$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;或者&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git

$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;运行&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;服务器启动默认端口为 3000,若不想使用 3000 端口,可使用以下命令: Mac/Linux&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ PORT=4000 node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;windows 下使用 git-bash 或者 cmder 等终端执行以下命令:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ set PORT=4000 &amp;amp;&amp;amp; node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;可以在Node.js调用&lt;/h2&gt; 
&lt;p&gt;v3.31.0后支持Node.js调用,导入的方法为&lt;code&gt;module&lt;/code&gt;内的文件名,返回内容包含&lt;code&gt;status&lt;/code&gt;和&lt;code&gt;body&lt;/code&gt;,&lt;code&gt;status&lt;/code&gt;为状态码,&lt;code&gt;body&lt;/code&gt;为请求返回内容,参考&lt;code&gt;module_example&lt;/code&gt; 文件夹下的 &lt;code&gt;test.js&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { login_cellphone, user_cloud } = require(&#39;NeteaseCloudMusicApi&#39;)
async function main() {
  try {
    const result = await login_cellphone({
      phone: &#39;手机号&#39;,
      password: &#39;密码&#39;
    })
    console.log(result)
    const result2 = await user_cloud({
      cookie: result.body.cookie // 凭证
    })
    console.log(result2.body)
      
  } catch (error) {
    console.log(error)
  }
}
main()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;支持 TypeScript&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// test.ts
import { banner } from &#39;NeteaseCloudMusicApi&#39;
banner({ type:0 }).then(res=&amp;gt;{
  console.log(res)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用文档&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://binaryify.github.io/NeteaseCloudMusicApi&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://neteasecloudmusicapi.vercel.app&quot;&gt;文档地址2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/docs.png&quot; alt=&quot;文档&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;功能特性&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;登录&lt;/li&gt; 
 &lt;li&gt;刷新登录&lt;/li&gt; 
 &lt;li&gt;发送验证码&lt;/li&gt; 
 &lt;li&gt;校验验证码&lt;/li&gt; 
 &lt;li&gt;注册(修改密码)&lt;/li&gt; 
 &lt;li&gt;获取用户信息 , 歌单，收藏，mv, dj 数量&lt;/li&gt; 
 &lt;li&gt;获取用户歌单&lt;/li&gt; 
 &lt;li&gt;获取用户电台&lt;/li&gt; 
 &lt;li&gt;获取用户关注列表&lt;/li&gt; 
 &lt;li&gt;获取用户粉丝列表&lt;/li&gt; 
 &lt;li&gt;获取用户动态&lt;/li&gt; 
 &lt;li&gt;获取用户播放记录&lt;/li&gt; 
 &lt;li&gt;获取精品歌单&lt;/li&gt; 
 &lt;li&gt;获取歌单详情&lt;/li&gt; 
 &lt;li&gt;搜索&lt;/li&gt; 
 &lt;li&gt;搜索建议&lt;/li&gt; 
 &lt;li&gt;获取歌词&lt;/li&gt; 
 &lt;li&gt;歌曲评论&lt;/li&gt; 
 &lt;li&gt;收藏单曲到歌单&lt;/li&gt; 
 &lt;li&gt;专辑评论&lt;/li&gt; 
 &lt;li&gt;歌单评论&lt;/li&gt; 
 &lt;li&gt;mv 评论&lt;/li&gt; 
 &lt;li&gt;电台节目评论&lt;/li&gt; 
 &lt;li&gt;banner&lt;/li&gt; 
 &lt;li&gt;获取歌曲详情&lt;/li&gt; 
 &lt;li&gt;获取专辑内容&lt;/li&gt; 
 &lt;li&gt;获取歌手单曲&lt;/li&gt; 
 &lt;li&gt;获取歌手 mv&lt;/li&gt; 
 &lt;li&gt;获取歌手专辑&lt;/li&gt; 
 &lt;li&gt;获取歌手描述&lt;/li&gt; 
 &lt;li&gt;获取相似歌手&lt;/li&gt; 
 &lt;li&gt;获取相似歌单&lt;/li&gt; 
 &lt;li&gt;相似 mv&lt;/li&gt; 
 &lt;li&gt;获取相似音乐&lt;/li&gt; 
 &lt;li&gt;获取最近 5 个听了这首歌的用户&lt;/li&gt; 
 &lt;li&gt;获取每日推荐歌单&lt;/li&gt; 
 &lt;li&gt;获取每日推荐歌曲&lt;/li&gt; 
 &lt;li&gt;私人 FM&lt;/li&gt; 
 &lt;li&gt;签到&lt;/li&gt; 
 &lt;li&gt;喜欢音乐&lt;/li&gt; 
 &lt;li&gt;垃圾桶&lt;/li&gt; 
 &lt;li&gt;歌单 ( 网友精选碟 )&lt;/li&gt; 
 &lt;li&gt;新碟上架&lt;/li&gt; 
 &lt;li&gt;热门歌手&lt;/li&gt; 
 &lt;li&gt;最新 mv&lt;/li&gt; 
 &lt;li&gt;推荐 mv&lt;/li&gt; 
 &lt;li&gt;推荐歌单&lt;/li&gt; 
 &lt;li&gt;推荐新音乐&lt;/li&gt; 
 &lt;li&gt;推荐电台&lt;/li&gt; 
 &lt;li&gt;推荐节目&lt;/li&gt; 
 &lt;li&gt;独家放送&lt;/li&gt; 
 &lt;li&gt;mv 排行&lt;/li&gt; 
 &lt;li&gt;获取 mv 数据&lt;/li&gt; 
 &lt;li&gt;播放 mv/视频&lt;/li&gt; 
 &lt;li&gt;排行榜&lt;/li&gt; 
 &lt;li&gt;歌手榜&lt;/li&gt; 
 &lt;li&gt;云盘&lt;/li&gt; 
 &lt;li&gt;电台 - 推荐&lt;/li&gt; 
 &lt;li&gt;电台 - 分类&lt;/li&gt; 
 &lt;li&gt;电台 - 分类推荐&lt;/li&gt; 
 &lt;li&gt;电台 - 订阅&lt;/li&gt; 
 &lt;li&gt;电台 - 详情&lt;/li&gt; 
 &lt;li&gt;电台 - 节目&lt;/li&gt; 
 &lt;li&gt;给评论点赞&lt;/li&gt; 
 &lt;li&gt;获取动态&lt;/li&gt; 
 &lt;li&gt;热搜列表(简略)&lt;/li&gt; 
 &lt;li&gt;发送私信&lt;/li&gt; 
 &lt;li&gt;发送私信歌单&lt;/li&gt; 
 &lt;li&gt;新建歌单&lt;/li&gt; 
 &lt;li&gt;收藏/取消收藏歌单&lt;/li&gt; 
 &lt;li&gt;歌单分类&lt;/li&gt; 
 &lt;li&gt;收藏的歌手列表&lt;/li&gt; 
 &lt;li&gt;订阅的电台列表&lt;/li&gt; 
 &lt;li&gt;相关歌单推荐&lt;/li&gt; 
 &lt;li&gt;付费精选接口&lt;/li&gt; 
 &lt;li&gt;音乐是否可用检查接口&lt;/li&gt; 
 &lt;li&gt;登录状态&lt;/li&gt; 
 &lt;li&gt;获取视频播放地址&lt;/li&gt; 
 &lt;li&gt;发送/删除评论&lt;/li&gt; 
 &lt;li&gt;热门评论&lt;/li&gt; 
 &lt;li&gt;视频评论&lt;/li&gt; 
 &lt;li&gt;退出登录&lt;/li&gt; 
 &lt;li&gt;所有榜单&lt;/li&gt; 
 &lt;li&gt;所有榜单内容摘要&lt;/li&gt; 
 &lt;li&gt;收藏视频&lt;/li&gt; 
 &lt;li&gt;收藏 MV&lt;/li&gt; 
 &lt;li&gt;视频详情&lt;/li&gt; 
 &lt;li&gt;相关视频&lt;/li&gt; 
 &lt;li&gt;关注用户&lt;/li&gt; 
 &lt;li&gt;新歌速递&lt;/li&gt; 
 &lt;li&gt;喜欢音乐列表(无序)&lt;/li&gt; 
 &lt;li&gt;收藏的 MV 列表&lt;/li&gt; 
 &lt;li&gt;获取最新专辑&lt;/li&gt; 
 &lt;li&gt;听歌打卡&lt;/li&gt; 
 &lt;li&gt;获取视频标签/分类下的视频&lt;/li&gt; 
 &lt;li&gt;已收藏专辑列表&lt;/li&gt; 
 &lt;li&gt;获取动态评论&lt;/li&gt; 
 &lt;li&gt;歌单收藏者列表&lt;/li&gt; 
 &lt;li&gt;云盘歌曲删除&lt;/li&gt; 
 &lt;li&gt;热门话题&lt;/li&gt; 
 &lt;li&gt;电台 - 推荐类型&lt;/li&gt; 
 &lt;li&gt;电台 - 非热门类型&lt;/li&gt; 
 &lt;li&gt;电台 - 今日优选&lt;/li&gt; 
 &lt;li&gt;心动模式/智能播放&lt;/li&gt; 
 &lt;li&gt;转发动态&lt;/li&gt; 
 &lt;li&gt;删除动态&lt;/li&gt; 
 &lt;li&gt;分享歌曲、歌单、mv、电台、电台节目到动态&lt;/li&gt; 
 &lt;li&gt;通知-私信&lt;/li&gt; 
 &lt;li&gt;通知-评论&lt;/li&gt; 
 &lt;li&gt;通知-@我&lt;/li&gt; 
 &lt;li&gt;通知-通知&lt;/li&gt; 
 &lt;li&gt;设置&lt;/li&gt; 
 &lt;li&gt;云盘数据详情&lt;/li&gt; 
 &lt;li&gt;私信内容&lt;/li&gt; 
 &lt;li&gt;我的数字专辑&lt;/li&gt; 
 &lt;li&gt;batch批量请求接口&lt;/li&gt; 
 &lt;li&gt;获取视频标签列表&lt;/li&gt; 
 &lt;li&gt;全部mv&lt;/li&gt; 
 &lt;li&gt;网易出品mv&lt;/li&gt; 
 &lt;li&gt;收藏/取消收藏专辑&lt;/li&gt; 
 &lt;li&gt;专辑动态信息&lt;/li&gt; 
 &lt;li&gt;热搜列表(详细)&lt;/li&gt; 
 &lt;li&gt;更换绑定手机&lt;/li&gt; 
 &lt;li&gt;检测手机号码是否已注册&lt;/li&gt; 
 &lt;li&gt;初始化昵称&lt;/li&gt; 
 &lt;li&gt;更新歌单描述&lt;/li&gt; 
 &lt;li&gt;更新歌单名&lt;/li&gt; 
 &lt;li&gt;更新歌单标签&lt;/li&gt; 
 &lt;li&gt;默认搜索关键词&lt;/li&gt; 
 &lt;li&gt;删除歌单&lt;/li&gt; 
 &lt;li&gt;电台banner&lt;/li&gt; 
 &lt;li&gt;用户电台&lt;/li&gt; 
 &lt;li&gt;热门电台&lt;/li&gt; 
 &lt;li&gt;电台 - 节目详情&lt;/li&gt; 
 &lt;li&gt;电台 - 节目榜&lt;/li&gt; 
 &lt;li&gt;电台 - 新晋电台榜/热门电台榜&lt;/li&gt; 
 &lt;li&gt;类别热门电台&lt;/li&gt; 
 &lt;li&gt;云村热评&lt;/li&gt; 
 &lt;li&gt;电台24小时节目榜&lt;/li&gt; 
 &lt;li&gt;电台24小时主播榜&lt;/li&gt; 
 &lt;li&gt;电台最热主播榜&lt;/li&gt; 
 &lt;li&gt;电台主播新人榜&lt;/li&gt; 
 &lt;li&gt;电台付费精品榜&lt;/li&gt; 
 &lt;li&gt;歌手热门50首歌曲&lt;/li&gt; 
 &lt;li&gt;购买数字专辑&lt;/li&gt; 
 &lt;li&gt;获取 mv 点赞转发评论数数据&lt;/li&gt; 
 &lt;li&gt;获取视频点赞转发评论数数据&lt;/li&gt; 
 &lt;li&gt;调整歌单顺序&lt;/li&gt; 
 &lt;li&gt;调整歌曲顺序&lt;/li&gt; 
 &lt;li&gt;独家放送列表&lt;/li&gt; 
 &lt;li&gt;获取推荐视频&lt;/li&gt; 
 &lt;li&gt;获取视频分类列表&lt;/li&gt; 
 &lt;li&gt;获取全部视频列表接口&lt;/li&gt; 
 &lt;li&gt;获取历史日推可用日期列表&lt;/li&gt; 
 &lt;li&gt;获取历史日推详细数据&lt;/li&gt; 
 &lt;li&gt;国家编码列表&lt;/li&gt; 
 &lt;li&gt;首页-发现&lt;/li&gt; 
 &lt;li&gt;首页-发现-圆形图标入口列表&lt;/li&gt; 
 &lt;li&gt;数字专辑-全部新碟&lt;/li&gt; 
 &lt;li&gt;数字专辑-热门新碟&lt;/li&gt; 
 &lt;li&gt;数字专辑&amp;amp;数字单曲-榜单&lt;/li&gt; 
 &lt;li&gt;数字专辑-语种风格馆&lt;/li&gt; 
 &lt;li&gt;数字专辑详情&lt;/li&gt; 
 &lt;li&gt;更新头像&lt;/li&gt; 
 &lt;li&gt;歌单封面上传&lt;/li&gt; 
 &lt;li&gt;楼层评论&lt;/li&gt; 
 &lt;li&gt;歌手全部歌曲&lt;/li&gt; 
 &lt;li&gt;精品歌单标签列表&lt;/li&gt; 
 &lt;li&gt;用户等级信息&lt;/li&gt; 
 &lt;li&gt;电台个性推荐&lt;/li&gt; 
 &lt;li&gt;用户绑定信息&lt;/li&gt; 
 &lt;li&gt;用户绑定手机&lt;/li&gt; 
 &lt;li&gt;新版评论&lt;/li&gt; 
 &lt;li&gt;点赞过的视频&lt;/li&gt; 
 &lt;li&gt;收藏视频到视频歌单&lt;/li&gt; 
 &lt;li&gt;删除视频歌单里的视频&lt;/li&gt; 
 &lt;li&gt;最近播放的视频&lt;/li&gt; 
 &lt;li&gt;音乐日历&lt;/li&gt; 
 &lt;li&gt;电台订阅者列表&lt;/li&gt; 
 &lt;li&gt;云贝签到信息&lt;/li&gt; 
 &lt;li&gt;云贝签到&lt;/li&gt; 
 &lt;li&gt;云贝所有任务&lt;/li&gt; 
 &lt;li&gt;云贝todo任务&lt;/li&gt; 
 &lt;li&gt;云贝今日签到信息&lt;/li&gt; 
 &lt;li&gt;云贝完成任务&lt;/li&gt; 
 &lt;li&gt;云贝收入&lt;/li&gt; 
 &lt;li&gt;云贝支出&lt;/li&gt; 
 &lt;li&gt;云贝账户信息&lt;/li&gt; 
 &lt;li&gt;账号信息&lt;/li&gt; 
 &lt;li&gt;最近联系人&lt;/li&gt; 
 &lt;li&gt;私信音乐&lt;/li&gt; 
 &lt;li&gt;抱一抱评论&lt;/li&gt; 
 &lt;li&gt;评论抱一抱列表&lt;/li&gt; 
 &lt;li&gt;收藏的专栏&lt;/li&gt; 
 &lt;li&gt;关注歌手新歌&lt;/li&gt; 
 &lt;li&gt;关注歌手新MV&lt;/li&gt; 
 &lt;li&gt;歌手详情&lt;/li&gt; 
 &lt;li&gt;云盘上传&lt;/li&gt; 
 &lt;li&gt;二维码登录&lt;/li&gt; 
 &lt;li&gt;话题详情&lt;/li&gt; 
 &lt;li&gt;话题详情热门动态&lt;/li&gt; 
 &lt;li&gt;歌单详情动态&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/CHANGELOG.MD&quot;&gt;changelog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;单元测试&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot1.png&quot; alt=&quot;单元测试&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot2.png&quot; alt=&quot;单元测试&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;贡献者&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://opencollective.com/NeteaseCloudMusicApi/contributors.svg?width=890&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/LICENSE&quot;&gt;The MIT License (MIT)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced-Frontend/Daily-Interview-Question</title>
      <link>https://github.com/Advanced-Frontend/Daily-Interview-Question</link>
      <description>&lt;p&gt;我是木易杨，公众号「高级前端进阶」作者，每天搞定一道前端大厂面试题，祝大家天天进步，一年后会看到不一样的自己。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Daily-Interview-Question&lt;/h1&gt; 
&lt;p&gt;加入「前端面试互助群」学习小组，搜索公众号「高级前端进阶」，关注即可加入！&lt;/p&gt; 
&lt;p&gt;工作日每天一道大厂前端面试题，一年后再回头，会感谢曾经努力的自己！&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://muyiy.cn/question/&quot;&gt;线上版本阅读更流畅，点击阅读&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sisterAn/JavaScript-Algorithms&quot;&gt;推荐一个不错的前端算法系列，点击查看&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;推荐扫码使用微信小程序，除了本项目之外，还囊括了算法题、选择题等多种类型题目和详细解析&lt;/p&gt; 
&lt;p&gt;记住我们的 Slogan：上下班路上刷一点，半年突击进大厂&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;今日面试题&lt;/h2&gt; 
&lt;p&gt;第 162 题：实现对象的 Map 函数类似 Array.prototype.map&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/431&quot;&gt;第 162 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;最近汇总&lt;/h2&gt; 
&lt;p&gt;第 161 题：用最精炼的代码实现数组非零非负最小值 index&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// 例如：[10,21,0,-7,35,7,9,23,18] 输出 5, 7 最小
function getIndex(arr){
      let index=null;
      ...
      return index;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/421&quot;&gt;第 161 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 160 题：输出以下代码运行结果，为什么？如果希望每隔 1s 输出一个结果，应该如何改造？注意不可改动 square 方法&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const list = [1, 2, 3]
const square = num =&amp;gt; {
  return new Promise((resolve, reject) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(num * num)
    }, 1000)
  })
}

function test() {
  list.forEach(async x=&amp;gt; {
    const res = await square(x)
    console.log(res)
  })
}
test()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/389&quot;&gt;第 160 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 159 题：实现 &lt;code&gt;Promise.retry&lt;/code&gt;，成功后 &lt;code&gt;resolve&lt;/code&gt; 结果，失败后重试，尝试超过一定次数才真正的 &lt;code&gt;reject&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/387&quot;&gt;第 159 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 158 题：如何模拟实现 Array.prototype.splice&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/384&quot;&gt;第 158 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 157 题：浏览器缓存 ETag 里的值是怎么生成的&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/383&quot;&gt;第 157 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 156 题：求最终 left、right 的宽度&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div class=&quot;left&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;right&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;style&amp;gt;
  * {
    padding: 0;
    margin: 0;
  }
  .container {
    width: 600px;
    height: 300px;
    display: flex;
  }
  .left {
    flex: 1 2 300px;
    background: red;
  }
  .right {
    flex: 2 1 200px;
    background: blue;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注：此题和 155 题 left、right 样式有些不同&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/382&quot;&gt;第 156 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 155 题：求最终 left、right 的宽度&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div class=&quot;left&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;right&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;style&amp;gt;
  * {
    padding: 0;
    margin: 0;
  }
  .container {
    width: 600px;
    height: 300px;
    display: flex;
  }
  .left {
    flex: 1 2 500px;
    background: red;
  }
  .right {
    flex: 2 1 400px;
    background: blue;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/381&quot;&gt;第 155 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 154 题：弹性盒子中 flex: 0 1 auto 表示什么意思&lt;/p&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/380&quot;&gt;第 154 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;第 153 题：实现一个批量请求函数 multiRequest(urls, maxNum)&lt;/p&gt; 
&lt;p&gt; 要求如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;要求最大并发数 maxNum&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;每当有一个请求返回，就留下一个空位，可以增加新的请求&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;所有请求完成后，结果按照 urls 里面的顺序依次打出&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/378&quot;&gt;第 153 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-12-31&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 152 题：实现一个 normalize 函数，能将输入的特定的字符串转化为特定的结构化数据&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/331&quot;&gt;第 152 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-11-25&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 151 题：用最简洁代码实现 indexOf 方法&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/321&quot;&gt;第 151 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-11-21&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 150 题：二分查找如何定位左边界和右边界&lt;/p&gt; 
 &lt;p&gt;不使用JS数组API，查找有序数列最先出现的位置和最后出现的位置&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/320&quot;&gt;第 150 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-11-12&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 149 题：babel 怎么把字符串解析成 AST，是怎么进行词法/语法分析的？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/315&quot;&gt;第 149 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-11-01&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 148 题： webpack 中 loader 和 plugin 的区别是什么（平安）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/308&quot;&gt;第 148 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-31&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 147 题：v-if、v-show、v-html 的原理是什么，它是如何封装的？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/307&quot;&gt;第 147 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-29&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 146 题：Vue 中的 computed 和 watch 的区别在哪里（虾皮）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/304&quot;&gt;第 146 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-24&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 145 题：前端项目如何找出性能瓶颈（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/300&quot;&gt;第 145 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-22&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 144 题：手写二进制转 Base64（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/299&quot;&gt;第 144 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-21&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 143 题：将 &#39;10000000000&#39; 形式的字符串，以每 3 位进行分隔展示 &#39;10.000.000.000&#39;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/296&quot;&gt;第 143 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-17&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 142 题：（算法题）求多个数组之间的交集（阿里）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/293&quot;&gt;第 142 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-15&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 141 题：Vue 中的 computed 是如何实现的（腾讯、平安）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/291&quot;&gt;第 141 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-10-14&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 140 题：为什么 HTTP1.1 不能实现多路复用（腾讯）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/290&quot;&gt;第 140 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-09-17&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 139 题：谈一谈 nextTick 的原理&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/281&quot;&gt;第 139 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-09-11&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 138 题：反转链表，每 k 个节点反转一次，不足 k 就保持原有顺序（哔哩哔哩）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/278&quot;&gt;第 138 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;2019-09-04&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;第 137 题：如何在 H5 和小程序项目中计算白屏时间和首屏时间，说说你的思路&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;解析：&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/272&quot;&gt;第 137 题&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;所有面试题汇总&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/blob/master/datum/summary.md&quot;&gt;壹题所有题目及答案汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;半月刊&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yygmind/blog/issues/43&quot;&gt;前端 100 问：能搞懂 80% 的请把简历给我&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c6977e46fb9a049fd1063dc&quot;&gt;【半月刊 1】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c7bd72ef265da2de80f7f17&quot;&gt;【半月刊 2】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c9ac3f66fb9a070e056718f&quot;&gt;【半月刊 3】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5cb3376bf265da039c0543da&quot;&gt;【半月刊 4】前端高频面试题及答案汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;联系我&lt;/h2&gt; 
&lt;p&gt;进阶系列文章汇总如下，觉得不错点个 star，欢迎 &lt;strong&gt;加群&lt;/strong&gt; 互相学习。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yygmind/blog&quot;&gt;https://github.com/yygmind/blog&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;我是木易杨，公众号「高级前端进阶」作者，跟着我&lt;strong&gt;每周重点攻克一个前端面试重难点&lt;/strong&gt;。接下来让我带你走进高级前端的世界，在进阶的路上，共勉！&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://resource.muyiy.cn/image/20200123162151.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>upgundecha/howtheysre</title>
      <link>https://github.com/upgundecha/howtheysre</link>
      <description>&lt;p&gt;A curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;How they SRE&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt; &lt;a href=&quot;https://github.com/upgundecha/howtheysre/actions/workflows/workflow.yml&quot;&gt;&lt;img src=&quot;https://github.com/upgundecha/howtheysre/actions/workflows/workflow.yml/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/upgundecha/howtheysre/main/banner.png&quot; alt=&quot;Alt&quot; title=&quot;banner&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;How They SRE&lt;/strong&gt; is a curated knowledge repository of best practices, tools, techniques, and culture of SRE adopted by the leading technology or tech-savvy organizations.&lt;/p&gt; 
&lt;p&gt;Many organizations regularly come forward and share their best practices, tools, techniques and offer an insight into engineering culture on various public platforms like engineering blogs, conferences &amp;amp; meetups. The content is curated from these avenues and shared in this repository.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note to readers: This list refers to some of the articles, posts, videos, tools, and techniques published before 2015. Please use such material with caution as there may be recent advances in technology and practices which offer better alternatives and perspectives.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Site Reliability Engineering&lt;/li&gt; 
 &lt;li&gt;Hiring and Building SRE teams&lt;/li&gt; 
 &lt;li&gt;SRE Culture&lt;/li&gt; 
 &lt;li&gt;DevOps&lt;/li&gt; 
 &lt;li&gt;Monitoring &amp;amp; Observability&lt;/li&gt; 
 &lt;li&gt;Alerting&lt;/li&gt; 
 &lt;li&gt;Incident Response &amp;amp; Post-Mortem&lt;/li&gt; 
 &lt;li&gt;On-Call&lt;/li&gt; 
 &lt;li&gt;Testing in Production&lt;/li&gt; 
 &lt;li&gt;Chaos Engineering&lt;/li&gt; 
 &lt;li&gt;Automation&lt;/li&gt; 
 &lt;li&gt;Performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organizations&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/detecting-vulnerabilities-with-vulnture-f5f23387f6ec&quot;&gt;Detecting Vulnerabilities With Vulnture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/alerting-framework-at-airbnb-35ba48df894f&quot;&gt;Alerting Framework at Airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/when-the-cloud-gets-dark-how-amazons-outage-affected-airbnb-66eaf8c0f162&quot;&gt;When The Cloud Gets Dark — How Amazon’s Outage Affected Airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/blog/may-30-ssl-incident/&quot;&gt;May 30 SSL incident&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/blog/a-journey-into-sre/&quot;&gt;A Journey Into SRE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.asana.com/2021/01/asana-engineering-ships-web-application-releases/&quot;&gt;How Asana ships stable web application&amp;nbsp;releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.asana.com/2019/09/downtime-what-were-doing-to-prevent-future-downtime/&quot;&gt;Analysis of recent downtime &amp;amp; what we’re doing to prevent future&amp;nbsp;incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.asana.com/2017/07/developer-environment-making-it-reliable-by-making-it-fast-to-reset/&quot;&gt;Developer environment: Achieving reliability by making it fast to&amp;nbsp;reset&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/asos-techblog/cyber-security-asos-com-7d1d1f346e57&quot;&gt;Cyber Security @ ASOS.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/asos-techblog/security-operations-24-x-7-2e90c8e5e7e&quot;&gt;Security Operations 24x7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/asos-techblog/the-skills-we-look-for-in-cyber-security-incident-response-12b327927e38&quot;&gt;The skills we look for in Cyber Security Incident Response&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/engineering/best-practices-for-change-management-in-the-age-of-devops&quot;&gt;Best practices for change management in the age of DevOps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/engineering/automated-testing-5-lessons-from-atlassians-kubernetes-team-on-testing-infrastructure-as-code&quot;&gt;Automated testing: 5 lessons from Atlassian’s Kubernetes team on testing infrastructure as code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/engineering/how-to-export-kubernetes-events-for-observability-and-alerting&quot;&gt;How to export Kubernetes events for observability and alerting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/incident-management/postmortem/templates&quot;&gt;Incident Postmortem Template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/back-market-engineering/how-back-market-sres-prepared-for-black-friday-5f017f343408&quot;&gt;How Back Market SREs prepared for Black Friday&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/chen-yu&quot;&gt;Anomaly Detection on Golden Signals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/chen-yun&quot;&gt;NetRadar: Monitoring the Datacenter Network&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://m.signalvnoise.com/inside-a-code-red-network-edition/&quot;&gt;Inside a CODE RED: Network Edition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://m.signalvnoise.com/three-basecamp-outages-one-week-what-happened/&quot;&gt;Three Basecamp outages. One week. What happened?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://m.signalvnoise.com/basecamp-2-and-basecamp-3-search-outage-report/&quot;&gt;Basecamp 2 and Basecamp 3 search outage report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://m.signalvnoise.com/reducing-incident-escalations-at-basecamp/&quot;&gt;Reducing Incident Escalations at Basecamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/shapeup/webbook&quot;&gt;Shape Up&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/chen&quot;&gt;Capacity Planning and Performance Enhancement with Page Reference Sampling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/pawlikowski&quot;&gt;Why SREs can&#39;t afford to NOT do Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/yakimov&quot;&gt;Tracing Real-Time Distributed Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/sorensen&quot;&gt;The Bloomberg Story: Building SRE Teams in an &quot;Immeasurable&quot; Organisation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/chen&quot;&gt;Visibility into Loggers (and Other Low Level Services)—Seeing the Trees from the Forest&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/booking-com-infrastructure/how-reliability-and-product-teams-collaborate-at-booking-com-f6c317cc0aeb&quot;&gt;How Reliability and Product Teams Collaborate at Booking.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/booking-com-infrastructure/incidents-fixes-and-the-day-after-c5d9aeae28c3&quot;&gt;Incidents, fixes, and the day after&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/booking-com-infrastructure/troubleshooting-a-journey-into-the-unknown-e31b524fa86&quot;&gt;Troubleshooting: A journey into the unknown&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/fouquet&quot;&gt;SLOs for Data-Intensive Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/iacoboaia&quot;&gt;Benefits of Taking the Less Traveled Road with Containers Infrastructure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/automate-aws-infrastructure-with-boto-3-aws-health-checks-e51338ba075&quot;&gt;Automate AWS Infrastructure with Boto 3: AWS Health Check&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/active-active-shared-nothing-database-architecture-304957ffb89&quot;&gt;Active-Active Shared-Nothing Database Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/the-3-rs-of-sres-resiliency-recovery-reliability-5f2f5360a91b&quot;&gt;The 3 R’s of SREs: Resiliency, Recovery &amp;amp; Reliability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/5-steps-to-getting-your-app-chaos-ready-capital-one-a5b7b3cb8e09&quot;&gt;5 Steps to Getting Your App Chaos Ready&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/4-real-world-scenarios-that-read-like-chaos-engineering-experiments-8dbf40c5f247&quot;&gt;4 Real-World Scenarios That Read Like Chaos Engineering Experiments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/embrace-the-chaos-engineering-203fd6fc6ff7&quot;&gt;Embrace the Chaos … Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/3-lessons-learned-from-implementing-chaos-engineering-at-enterprise-28eb3ffecc57&quot;&gt;3 Lessons Learned From Implementing Chaos Engineering at Enterprise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/seamless-blue-green-deployment-using-aws-codedeploy-4c36c0bbeef4&quot;&gt;A Deep Dive Into Seamless Blue/Green Deployment Using AWS CodeDeploy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/secure-docker-containers-require-secure-applications-75eb358abef9&quot;&gt;Secure Docker Containers Require Secure Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/4-steps-for-pairing-cloud-and-devops-to-improve-resiliency-c72fe2e52b05&quot;&gt;4 Steps for Pairing the Cloud and DevOps to Improve Resiliency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/container-ready-applications-with-twelve-factor-app-and-microservices-architecture-16af683a767f&quot;&gt;Container Ready Applications with Twelve-Factor App and Microservices Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/deploying-with-confidence-strategies-for-canary-deployments-on-aws-7cab3798823e&quot;&gt;Deploying with Confidence — Minimize Risk, Maximize Resiliency With Canary Deployments on AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/architecting-for-resiliency-9ec663db5c94&quot;&gt;Architecting for Resiliency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/continuous-chaos-introducing-chaos-engineering-into-devops-practices-75757e1cca6d&quot;&gt;Continuous Chaos — Introducing Chaos Engineering into DevOps Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/capital-one-tech/the-mon-ifesto-part-1-metrics-808f6c944765&quot;&gt;The Mon-ifesto Part 1: Metrics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Major incidents &amp;amp; analysis reports&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.capitalone.com/facts2019/&quot;&gt;Information on the Capital One Cyber Incident&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://web.mit.edu/smadnick/www/wp/2020-16.pdf&quot;&gt;A Case Study of the Capital One Data Breach&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_DnYSQEUTfo&quot;&gt;Banking on Continuous Delivery - Capital One&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U_Uh5RMCwPI&quot;&gt;Continuous Chaos in DevOps - Capital One&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6Q0mtVnnthQ&quot;&gt;DevOps at Capital One: Focusing on Pipeline and Measurement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/walls&quot;&gt;Automating the Management of the Operational Health of Cloud Accounts at Scale&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/dbs-tech-blog/site-reliability-engineering-at-dbs-bank-32c02228ccf4&quot;&gt;Site Reliability Engineering at DBS Bank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/dbs-tech-blog/automating-configuration-management-at-scale-5c7927f83df3&quot;&gt;Automating Configuration Management at Scale&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=URwkaRbOLxI&amp;amp;feature=emb_title&quot;&gt;SREcon Conversations Asia/Pacific with Koon Seng Lim, DBS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deepsource.io/blog/redis-diskless-replication/&quot;&gt;Redis diskless replication: What, how, why and the caveats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deepsource.io/blog/setup-vault-kubernetes/&quot;&gt;How to setup Vault with Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deepsource.io/blog/zero-downtime-deployment/&quot;&gt;Breaking down zero downtime deployments in Kubernetes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dropbox.tech/infrastructure/monitoring-server-applications-with-vortex&quot;&gt;Monitoring server applications with Vortex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dropbox.tech/infrastructure/athena-our-automated-build-health-management-system&quot;&gt;Athena: Our automated build health management system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/nigmatullin&quot;&gt;Service Discovery Challenges at Scale&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/resiliency-and-disaster-recovery-with-kafka/&quot;&gt;Resiliency and Disaster Recovery with Kafka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/sre-case-study-triage-a-non-heap-jvm-out-of-memory-issue/&quot;&gt;SRE Case Study: Triaging a Non-Heap JVM Out of Memory Issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/sre-case-study-mysterious-traffic-imbalance/&quot;&gt;SRE Case Study: Mysterious Traffic Imbalance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/zero-downtime-instant-deployment-and-rollback/&quot;&gt;Zero Downtime, Instant Deployment and Rollback&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/raina&quot;&gt;Madaari: Ordering for the Monkeys&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeascraft.com/2016/11/17/debriefing-facilitation-guide/&quot;&gt;Etsy’s Debriefing Facilitation Guide for Blameless Postmortems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeascraft.com/2014/06/19/opsweekly-measuring-on-call-experience-with-alert-classification/&quot;&gt;Opsweekly: Measuring on-call experience with alert classification&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.etsy.com/news/2012/demystifying-site-outages/&quot;&gt;Demystifying Site Outages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeascraft.com/2012/05/22/blameless-postmortems/&quot;&gt;Blameless PostMortems and a Just Culture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeascraft.com/2011/02/15/measure-anything-measure-everything/&quot;&gt;Measure Anything, Measure Everything&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LdOe18KhtT4&quot;&gt;Velocity 09: John Allspaw and Paul Hammond, &quot;10+ Deploys Pe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/govande&quot;&gt;Migrating a Monolith to the Cloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/expedia-group-tech/the-cost-of-100-reliability-ecb2901f23a4&quot;&gt;The Cost of 100% Reliability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/expedia-group-tech/creating-monitoring-dashboards-1f3fbe0ae1ac&quot;&gt;Creating Monitoring Dashboards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/expedia-group-tech/using-bash-for-devops-7046eed1aa63&quot;&gt;Using Bash for DevOps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/looney&quot;&gt;A Customer Service Approach to SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/bagnoli&quot;&gt;How (Not) to Scale a Project: A Post-Mortem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/wong-shuhong&quot;&gt;Releasing the World&#39;s Largest Python Site Every 7 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/davoli&quot;&gt;Using ML to Automate Dynamic Error Categorization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/wohlner&quot;&gt;SRE &amp;amp; Product Management: How to Level up Your Team (and Career!) by Thinking like a Product Manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/gallego&quot;&gt;Resilience Engineering Mythbusting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2021-02-03-deployment-reliability-at-github/&quot;&gt;Deployment reliability at GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2021-01-25-improving-how-we-deploy-github/&quot;&gt;Improving how we deploy GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2021-01-06-building-on-call-culture-at-github/&quot;&gt;Building On-Call Culture at GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-12-16-reducing-flaky-builds-by-18x/&quot;&gt;Reducing flaky builds by 18x&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-12-03-the-evolving-role-of-operations-in-devops/&quot;&gt;The evolving role of operations in DevOps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-10-29-getting-started-with-devops-automation/&quot;&gt;Getting started with DevOps automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2018-06-20-mysql-high-availability-at-github/&quot;&gt;MySQL High Availability at GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Major incidents &amp;amp; analysis reports&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2021-02-02-github-availability-report-january-2021/&quot;&gt;GitHub Availability Report: January 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2021-01-06-github-availability-report-december-2020/&quot;&gt;GitHub Availability Report: December 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-12-02-availability-report-november-2020/&quot;&gt;GitHub Availability Report: November 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-09-02-github-availability-report-august-2020/&quot;&gt;GitHub Availability Report: August 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-08-05-github-availability-report-july-2020/&quot;&gt;GitHub Availability Report: July 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-07-08-introducing-the-github-availability-report/&quot;&gt;Introducing the GitHub Availability Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2020-03-26-february-service-disruptions-post-incident-analysis/&quot;&gt;February service disruptions post-incident analysis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2018-10-30-oct21-post-incident-analysis/&quot;&gt;October 21 post-incident analysis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2018-03-01-ddos-incident-report/&quot;&gt;February 28th DDoS Incident Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.blog/2016-10-28-incident-report-inadvertent-private-repository-disclosure/&quot;&gt;Incident Report: Inadvertent Private Repository Disclosure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/tobey&quot;&gt;One on One SRE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2021/01/14/this-sre-attempted-to-roll-out-an-haproxy-change/&quot;&gt;This SRE attempted to roll out an HAProxy config change. You won&#39;t believe what happened next...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2019/12/16/sre-shadow/&quot;&gt;My week shadowing a GitLab Site Reliability Engineer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2020/04/28/elasticsearch-update/&quot;&gt;Update: Elasticsearch lessons learnt for Advanced Global Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2020/11/09/lessons-in-iteration-from-new-infrastructure-team/&quot;&gt;Lessons in iteration from a new team in infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2020/10/27/how-we-optimized-our-infrastructure-spend-at-gitlab/&quot;&gt;How we optimized infrastructure spend at GitLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2020/06/24/scaling-our-use-of-sidekiq/&quot;&gt;How we scaled async workload processing at GitLab.com using Sidekiq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2020/05/13/how-we-release-software-patches/&quot;&gt;Inside GitLab: How we release software patches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2019/11/15/tracking-down-missing-tcp-keepalives/&quot;&gt;What tracking down missing TCP Keepalives taught me about Docker, Golang, and GitLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/blog/2019/02/13/delayed-replication-for-disaster-recovery-with-postgresql/&quot;&gt;How we used delayed replication for disaster recovery with PostgreSQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/gocardless-tech/deploying-software-at-gocardless-open-sourcing-our-getting-started-tutorial-ab857aa91c9e&quot;&gt;Deploying Software at GoCardless: Open-Sourcing our “Getting Started” Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/gocardless-tech/how-we-compress-pub-sub-messages-and-more-saving-a-load-of-money-694b64c3458a&quot;&gt;How we compress Pub/Sub messages and more, saving a load of money&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/fear-free-postgresql-migrations-for-rails/&quot;&gt;Fear-free PostgreSQL migrations for Rails&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/observability-at-gocardless-a-tale-of-api-performance-improvement/&quot;&gt;Observability at GoCardless: a tale of API performance improvement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/debugging-the-postgres-query-planner/&quot;&gt;Debugging the PostgreSQL query planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/zero-downtime-postgres-migrations-the-hard-parts/&quot;&gt;Zero-downtime Postgres migrations - the hard parts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/in-search-of-performance-how-we-shaved-200ms-off-every-post-request/&quot;&gt;In search of performance - how we shaved 200ms off every POST request&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Major incidents &amp;amp; analysis reports&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/incident-review-service-outage-on-25-october-2020/&quot;&gt;Incident review: Service outage on 25 October 2020, Vault TLS expiry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/blog/incident-review-api-and-dashboard-outage-on-10th-october/&quot;&gt;Incident review: API and Dashboard outage on 10 October 2017&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.gojekengineering.com/why-we-swear-by-the-rca-f535fd5abbcb&quot;&gt;Why We Swear by the RCA&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sre.google/resources/#practicesandprocesses&quot;&gt;SRE Practices &amp;amp; Processes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/g-suite/keeping-google-meet-ahead-of-usage-demand-during-covid-19&quot;&gt;Three months, 30x demand: How we scaled Google Meet during COVID-19&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sre.google/resources/practices-and-processes/distributed-pubsub/&quot;&gt;SRE Classroom: Distributed PubSub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/uTEL8Ff1Zvk&quot;&gt;What&#39;s the Difference Between DevOps and SRE? with Seth Vargo and Liz Fong-Jones of Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/y2ILKr8kCJU&quot;&gt;Risk and Error Budgets’ with Seth Vargo and Liz Fong-Jones of Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oDcjAcFTFC0&amp;amp;t=0m56s&quot;&gt;Pragmatic Automation’ with Max Luebbe of GCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLIivdWyY5sqJrKl7D2u-gmis8h9K66qoj&quot;&gt;Must Watch! - Google SRE YouTube Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/stanke&quot;&gt;Squish Level Objectives: How SRE can Help Align Technical Work to User Benefit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/ludtke&quot;&gt;Implementing Distributed Consensus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/aknin&quot;&gt;The SRE I Aspire to Be&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/perry&quot;&gt;SRE Classroom, Or, How to Design a Reliable Distributed System in 3 Hours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/czapinski&quot;&gt;Zero Touch Prod: Towards Safer and More Secure Production Environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/underwood&quot;&gt;All of Our ML Ideas Are Bad (and We Should Feel Bad)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/desai&quot;&gt;The Map Is Not the Territory: How SLOs Lead Us Astray, and What We Can Do about It&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/petoff&quot;&gt;Deploying SRE Training Best Practices to Production: How We SRE&#39;ed Our SRE Education Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/gleason&quot;&gt;Bigtable: A Journey from Binary to Service and the Lessons Learned along the Way&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/krabbe&quot;&gt;Practical Instrumentation for Observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/sato&quot;&gt;What Is ML Ops: Solutions and Best Practices for DevOps of Production ML Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/zhang&quot;&gt;Unified Reporting of Service Reliability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/plenz&quot;&gt;How to Trade off Server Utilization and Tail Latency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/nolan-loadbalancing&quot;&gt;Keeping the Balance: Internet-Scale Loadbalancing Demystified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/virji&quot;&gt;From Black Box to a Known Quantity: How to Build Predictable, Reliable ML-based Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/lutz&quot;&gt;Mindfulness in SRE: Monitoring and Alerting for One&#39;s Self&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/luebbe&quot;&gt;Pragmatic Automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/rath&quot;&gt;Sublinear Scaling in Practice: The 1k SRE Project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/qiu&quot;&gt;Strategies to Edit Production Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/bondi&quot;&gt;The Curse of SRE Autonomy and How to Manage It&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/franco&quot;&gt;Scaling SRE Organizations: The Journey from 1 to Many Teams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/thomas&quot;&gt;SRE Classroom - How to Design a Distributed System in 3 Hours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/stockman&quot;&gt;Using PRDs and User Journeys to Design User-Friendly Tools&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/our-journey-to-continuous-delivery-at-grab&quot;&gt;Our Journey to Continuous Delivery at Grab (Part 1)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/designing-resilient-systems-part-1&quot;&gt;Designing Resilient Systems: Circuit Breakers or Retries? (Part 1)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/designing-resilient-systems-part-2&quot;&gt;Designing Resilient Systems: Circuit Breakers or Retries? (Part 2)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/beyond-retries-part-3&quot;&gt;Designing Resilient Systems Beyond Retries (Part 3): Architecture Patterns and Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/chaos-engineering&quot;&gt;Orchestrating Chaos using Grab&#39;s Experimentation Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/quotas-service&quot;&gt;How We Designed the Quotas Microservice to Prevent Resource Abuse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.grab.com/how-we-scaled-our-cache-and-got-a-good-nights-sleep&quot;&gt;How We Scaled Our Cache and Got a Good Night&#39;s Sleep&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grammarly.com/blog/engineering/security-infrastructure-aws/&quot;&gt;Security Operations in an AWS Environment&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.heroku.com/incident-response-at-heroku-2020&quot;&gt;Incident Response at Heroku&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.indeedblog.com/blog/2019/10/being-just-reliable-enough/&quot;&gt;Being Just Reliable Enough&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.indeedblog.com/blog/2017/03/automating-release-process/&quot;&gt;Automating Indeed’s Release Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon17americas/program/presentation/appan&quot;&gt;Sloth, a Tool for Inducing Network Failures’ with Preetha Appan of Indeed.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/elman&quot;&gt;Are We Getting Better Yet? Progress Toward Safer Operations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.khanacademy.org/how-khan-academy-successfully-handled-2-5x-traffic-in-a-week/&quot;&gt;How Khan Academy Successfully Handled 2.5x Traffic in a Week&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.khanacademy.org/evolving-our-content-infrastructure/&quot;&gt;Evolving our content infrastructure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/insights-product-sre-team-linkedin-zaina-afoulki/?trackingId=mxKJgZ3kp8l2WI9D4UZv7Q%3D%3D&quot;&gt;Insights into a Product SRE team at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/engineering-culture/hiring-sres-linkedin&quot;&gt;Hiring SREs at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2021/open-source-update--school-of-sre&quot;&gt;Open source update: School of SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2020/fixing-linux-filesystem-performance-regressions&quot;&gt;Fixing Linux filesystem performance regressions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2020/production-testing-with-dark-canaries&quot;&gt;Production testing with dark canaries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2019/06/smart-alerts-in-thirdeye--linkedins-real-time-monitoring-platfor&quot;&gt;Smart alerts in ThirdEye, LinkedIn’s real-time monitoring platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2019/05/iris-mobile--an-open-source--mobile-interface-for-incident-manag&quot;&gt;Iris mobile: An open source, mobile interface for incident management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/05/linkedout--a-request-level-failure-injection-framework&quot;&gt;LinkedOut: A Request-Level Failure Injection Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2019/eliminating-toil-with-fully-automated-load-testing&quot;&gt;Eliminating toil with fully automated load testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/03/the-makeup-of-successful-geographically-distributed-sre-teams--p&quot;&gt;The Makeup of Successful Geographically-Distributed SRE Teams: Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/03/the-makeup-of-successful-geographically-distributed-sre-teams--p0&quot;&gt;The Makeup of Successful Geographically-Distributed SRE Teams: Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/01/project-star-streamlining-our-on-call-process&quot;&gt;Project STAR*: Streamlining Our On-Call Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/12/open-sourcing-fossor-and-ascii-etch&quot;&gt;Automating Your Oncall: Open Sourcing Fossor and Ascii Etch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/11/resilience-engineering-at-linkedin-with-project-waterbear&quot;&gt;Resilience Engineering at LinkedIn with Project Waterbear&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/07/hiring-sres-at-linkedin&quot;&gt;Hiring SREs at LinkedIn, 2017&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/06/open-sourcing-iris-and-oncall&quot;&gt;Open Sourcing Iris and Oncall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/05/building-the-sre-culture-at-linkedin&quot;&gt;Building the SRE Culture at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2017/01/failure-is-not-an-option&quot;&gt;Failure is Not an Option&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2016/12/mttd-and-mttr-are-key&quot;&gt;MTTD and MTTR Are Key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2016/12/what-gets-measured-gets-fixed&quot;&gt;What Gets Measured Gets Fixed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZemNg9GYvOA&quot;&gt;Growing the Site Reliability Team at LinkedIn: Hiring is Hard -- Greg Leffler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/doherty&quot;&gt;9 Years of Failure: How Racing Crappy Cars Made Me a Better SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/sherwin&quot;&gt;Weathering the Storm: How Early Warnings Save the Farm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/andersen&quot;&gt;Unconference: Unsolved Problems in SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/palino-leading&quot;&gt;Leading without Managing: Becoming an SRE Technical Leader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/palino-monitoring&quot;&gt;Why Does (My) Monitoring Suck?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/sulakhe&quot;&gt;Traffic Forecasting and Stress Testing Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/andersen-mindfulness&quot;&gt;Collective Mindfulness for Better Decisions in SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/dhakal&quot;&gt;TCP—Architecture, Enhancements, and Tuning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/lamba&quot;&gt;Over 600 Million Members and Hundreds of Micro Services: How We Scaled Our Monitoring System to Keep up&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/suley&quot;&gt;Understanding Business Metrics Can Make You a Better SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/kehoe&quot;&gt;Code-Yellow: Helping Operations Top-Heavy Teams the Smart Way&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/andersen&quot;&gt;Differences in SRE Implementations across Companies&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.mercari.com/en/blog/entry/20201214-devsecops-what-is-it-and-why-is-it-gaining-momentum-in-the-industry/&quot;&gt;DevSecOps: What Is It and Why Is It Gaining Momentum in the Industry?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.mercari.com/en/blog/entry/2020-01-28-143339/&quot;&gt;How do we share troubleshooting skills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.mercari.com/en/blog/entry/2019-12-09-122134/&quot;&gt;Datadog Dashboard at Scale w / Terraform&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=1iMo3SkdQqQ&quot;&gt;SLI &amp;amp; Reliability Deep-Dive’ with David N. Blank-Edelman of Microsoft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U3ubcoNzx9k&quot;&gt;Ironies of Automation: A Comedy in Three Parts’ with Tanner Lund of Microsoft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/johnson&quot;&gt;Sustainable Software Engineering &amp;amp; SREs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/barteneva&quot;&gt;Study on Human Factors and Team Culture to Improve Pager Fatigue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/davis&quot;&gt;Prioritizing Trust While Creating Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/stenning&quot;&gt;Building Resilience: How to Learn More from Incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/lund-postmortem&quot;&gt;A Tale of Two Postmortems: A Human Factors View&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/srinivasamurthy&quot;&gt;Availability—Thinking beyond 9s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/lund-comedy&quot;&gt;Ironies of Automation: A Comedy in Three Parts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/davis&quot;&gt;The Ops in Serverless&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/miro-engineering/prometheus-high-availability-and-fault-tolerance-strategy-long-term-storage-with-victoriametrics-82f6f3f0409e&quot;&gt;Prometheus High Availability and Fault Tolerance strategy, long term storage with VictoriaMetrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/miro-engineering/managing-hundreds-of-servers-for-load-testing-autoscaling-custom-monitoring-devops-culture-390fd1c7e699&quot;&gt;Managing hundreds of servers for load testing: Autoscaling, custom monitoring, DevOps culture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/miro-engineering/reliable-load-testing-with-regards-to-unexpected-nuances-6f38c82196a5&quot;&gt;Reliable load testing with regards to unexpected nuances&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com/blog/2020/10/19/autoscaling-monzo&quot;&gt;Autoscaling Monzo: How we optimise our platform to be just the right size&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com/blog/how-weve-evolved-on-call-at-monzo&quot;&gt;How we’ve evolved on-call at Monzo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com/blog/2019/07/08/how-we-respond-to-incidents&quot;&gt;How we respond to incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com/blog/2018/07/27/how-we-monitor-monzo&quot;&gt;How we monitor Monzo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/patel&quot;&gt;Eventually Consistent Service Discovery&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/building-netflixs-distributed-tracing-infrastructure-bb856c319304&quot;&gt;Building Netflix’s Distributed Tracing Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/lessons-from-building-observability-tools-at-netflix-7cfafed6ab17&quot;&gt;Lessons from Building Observability Tools at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/edgar-solving-mysteries-faster-with-observability-e1a76302c71f&quot;&gt;Edgar: Solving Mysteries Faster with Observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/telltale-netflix-application-monitoring-simplified-5c08bfa780ba&quot;&gt;Telltale: Netflix Application Monitoring Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/keeping-customers-streaming-the-centralized-site-reliability-practice-at-netflix-205cc37aa9fb&quot;&gt;Keeping Customers Streaming — The Centralized Site Reliability Practice at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072&quot;&gt;Introducing Dispatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/applying-netflix-devops-patterns-to-windows-2a57f2dbbf79&quot;&gt;Applying Netflix DevOps Patterns to Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/chap-chaos-automation-platform-53e6d528371f&quot;&gt;ChAP: Chaos Automation Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/starting-the-avalanche-640e69b14a06&quot;&gt;Starting the Avalanche&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/netflix-chaos-monkey-upgraded-1d679429be5d&quot;&gt;Netflix Chaos Monkey Upgraded&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/chaos-engineering-upgraded-878d341f15fa&quot;&gt;Chaos Engineering Upgraded&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/automated-failure-testing-86c1b8bc841f&quot;&gt;Automated Failure Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/from-chaos-to-control-testing-the-resiliency-of-netflixs-content-discovery-platform-ce5566aef0a4&quot;&gt;From Chaos to Control — Testing the resiliency of Netflix’s Content Discovery Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/introducing-atlas-netflixs-primary-telemetry-platform-bd31f4d8ed9a&quot;&gt;Introducing Atlas: Netflix’s Primary Telemetry Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/fit-failure-injection-testing-35d8e2a9bb2&quot;&gt;FIT: Failure Injection Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/announcing-security-monkey-aws-security-configuration-monitoring-and-analysis-1f2bfb001708&quot;&gt;Announcing Security Monkey — AWS Security Configuration Monitoring and Analysis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/lessons-netflix-learned-from-the-aws-outage-deefe5fd0c04&quot;&gt;Lessons Netflix Learned from the AWS Outage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Major incidents &amp;amp; analysis reports&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/post-mortem-of-october-22-2012-aws-degradation-efcee3ab40d5&quot;&gt;Post-mortem of October 22, 2012 AWS degradation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0QS1TWLooo0&quot;&gt;AWS re:Invent 2019: A day in the life of a Netflix engineer (NFX202)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/reed&quot;&gt;When /bin/sh Attacks: Revisiting &quot;Automate All the Things&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/kitchens&quot;&gt;How Did Things Go Right? Learning More from Incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=DlWYNoLmma8&quot;&gt;Monitoring and Tracing @Netflix Streaming Data Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=4RG2DUK03_0&quot;&gt;Real user performance monitoring at Netflix scale ‐ Martin Spier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rgfww8tLM0A&quot;&gt;AWS re:Invent 2017 - Nora Jones Describes Why We Need More Chaos - Chaos Engineering, That Is&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LaKGx0dAUlo&quot;&gt;AWS re:Invent 2017: Performing Chaos at Netflix Scale (DEV334)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=WDDkLOT8SCk&quot;&gt;Netflix: Multi-Regional Resiliency and Amazon Route 53&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RWyZkNzvC-c&quot;&gt;Designing Services for Resilience: Netflix Lessons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=uQ0flQOtQEA&quot;&gt;South Bay SRE Meetup - Netflix Cloud Performance Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=T_D1G42G0dE&quot;&gt;AWS re:Invent 2017: A Day in the Life of a Netflix Engineer III (ARC209)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8tsIqfvizpU&quot;&gt;How Netflix Uses Kinesis Streams to Monitor Applications and Analyze Billions of Traffic Flows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CZ3wIuvmHeM&quot;&gt;Mastering Chaos - A Netflix Guide to Microservices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=leqUbSY55hY&quot;&gt;AWS re:Invent 2016: From Resilience to Ubiquity - #NetflixEverywhere​ Global Architecture (ARC204)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=koGaH4ffXaU&quot;&gt;SREcon 2016 - Netflix: 190 Countries and 5 CORE SREs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lZI51YzIgVE&quot;&gt;From Sys Admin to Netflix SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RzlluokGi1w&quot;&gt;Application Resilience Engineering and Operations at Netflix with Hystrix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ioXV28GtXeo&quot;&gt;Injecting Failure at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3D0zS3kPNUU&quot;&gt;LISA13 - How Netflix Embraces Failure to Improve Resilience and Maximize Availability&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XAIj567wBsU&amp;amp;feature=emb_title&quot;&gt;SREcon Conversations Asia/Pacific with Karthikeyan Selvaraj and Rajesh Ramachandran, PayPal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/sunder-vr&quot;&gt;SRE Then vs SRE Now: A Balancing Act between Reflexes and Intuitive Instincts at PayPal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/narayanan&quot;&gt;Detecting Service Degradation and Failures at Scale through Distributed Log Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/sankaravadivel&quot;&gt;Operating Elasticsearch with Ease at Scale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/janakiraman&quot;&gt;Ensuring Site Reliability through Security Controls&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/pinterest-engineering/simplifying-web-deploys-19244fe13737&quot;&gt;Simplifying web deploys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/pinterest-engineering/upgrading-pinterest-operational-metrics-8718d058079a&quot;&gt;Upgrading Pinterest operational metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/pinterest-engineering/distributed-tracing-at-pinterest-with-new-open-source-tools-a4f8a5562f6b&quot;&gt;Distributed tracing at Pinterest with new open source tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/pinterest-engineering/auto-scaling-pinterest-df1d2beb4d64&quot;&gt;Auto scaling Pinterest&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/mukherji&quot;&gt;Building Actionable Code Ownership&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/abbas&quot;&gt;Evolution of Observability Tools at Pinterest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/menezes&quot;&gt;Automating OS/Platform Upgrades for Service Owners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/better-practices/chaos-d3ef238ec328&quot;&gt;Learn how your Kubernetes clusters respond to failure using Gremlin and Grafana&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.scribd.com/blog/2020/sidekiq-incident-learnings.html&quot;&gt;Learning from incidents: getting Sidekiq ready to serve a billion jobs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.scribd.com/blog/2020/pagerduty-at-scribd.html&quot;&gt;A testimonial for using PagerDuty at Scribd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.scribd.com/blog/2019/managing-pagerduty-rotations.html&quot;&gt;Assigning pager duty to developers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/resiliency-planning-for-high-traffic-events&quot;&gt;Resiliency Planning for High-Traffic Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/capacity-planning-shopify&quot;&gt;Capacity Planning at Scale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/using-dns-traffic-management-add-resiliency-shopify-services&quot;&gt;Using DNS Traffic Management to Add Resiliency to Shopify’s Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/four-steps-creating-effective-game-day-tests&quot;&gt;Four Steps to Creating Effective Game Day Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/implementing-chatops-into-our-incident-management-procedure&quot;&gt;Implementing ChatOps into our Incident Management Procedure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.engineering/17488320-statsd-at-shopify&quot;&gt;StatsD at Shopify&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/gedge&quot;&gt;Network Monitor: A Tale of ACKnowledging an Observability Gap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/arthorne&quot;&gt;Expect the Unexpected: Preparing SRE Teams for Responding to Novel Failures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/eskildsen&quot;&gt;Advanced Napkin Math: Estimating System Performance from First Principles&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbg.technology/2020/12/09/its-just-a-monitoring-change/&quot;&gt;It’s Just a Monitoring Change&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbg.technology/2020/04/02/whats-the-worst-that-can-happen/&quot;&gt;“What&#39;s the worst that could happen?”: A worked example of how we deal with live incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbg.technology/2020/02/07/rising-from-the-ashes/&quot;&gt;Rising from the Ashes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbg.technology/2018/05/04/firedrills-in-core/&quot;&gt;Crash! Bang! Wallop! Practice makes perfect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbg.technology/2017/10/23/performance-left-right-and-center/&quot;&gt;Performance Left Right and Center&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.engineering/slacks-outage-on-january-4th-2021/&quot;&gt;Slack’s Outage on January 4th 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.engineering/a-terrible-horrible-no-good-very-bad-day-at-slack/&quot;&gt;A Terrible, Horrible, No-Good, Very Bad Day at Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.engineering/deploys-at-slack/&quot;&gt;Deploys at Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.engineering/disasterpiece-theater-slacks-process-for-approachable-chaos-engineering/&quot;&gt;Disasterpiece Theater: Slack’s process for approachable Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/pemberton&quot;&gt;Slack at the Edge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/nolan-taxonomy&quot;&gt;What Breaks Our Systems: A Taxonomy of Black Swans&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/beginners-guid-to-devops-how-to-make-it-into-the-industry-c1652d59807&quot;&gt;Beginners Guide to DevOps: How to Make It into the Industry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/github-actions-beyond-ci-cd-cb3ddc6abaa&quot;&gt;GitHub Actions: Beyond CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/why-isnt-all-test-automation-run-on-the-pipeline-b2c57afbdf5a&quot;&gt;Why isn’t all test automation run on the pipeline?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/the-many-shapes-of-site-reliability-engineering-468359866517&quot;&gt;The Many Shapes of Site Reliability Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/how-to-build-a-secure-by-default-kubernetes-cluster-with-a-basic-ci-cd-pipeline-on-aws-ebfe0da1c7c9&quot;&gt;How to build a secure by default Kubernetes cluster with a basic CI/CD pipeline on AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/secret-management-architectures-finding-the-balance-between-security-and-complexity-d857ceaa2300&quot;&gt;Secret Management Architectures: Finding the balance between security and complexity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/detecting-malicious-requests-with-keras-tensorflow-5d5db06b4f28&quot;&gt;Detecting Malicious Requests with Keras &amp;amp; Tensorflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/the-lego-monolith-a-monolith-microservice-proof-of-concept-a402ca1654e4&quot;&gt;The Lego Monolith — A Monolith Microservice Proof of Concept&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/managing-secrets-using-hashicorp-vault-ed6b9e0375ac&quot;&gt;Managing Secrets Using Hashicorp Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/packaging-spring-boot-applications-for-deployment-on-kubernetes-5fb64bc65406&quot;&gt;Packaging Spring Boot Applications for Deployment on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/slalom-build/immutable-infrastructure-and-continuous-delivery-in-the-cloud-56ee4b31b8d5&quot;&gt;Immutable Infrastructure and Continuous Delivery in the Cloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.soundcloud.com/blog/alerting-on-slos&quot;&gt;Alerting on SLOs like Pros&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.soundcloud.com/blog/hands-off-deployment-with-canary&quot;&gt;Hands-Off Deployment with Canary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.soundcloud.com/blog/prometheus-has-come-of-age-a-reflection-on-the-development-of-an-open-source-project&quot;&gt;Prometheus has come of age – a reflection on the development of an open-source project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.soundcloud.com/blog/prometheus-monitoring-at-soundcloud&quot;&gt;Prometheus: Monitoring at SoundCloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.atspotify.com/2020/02/26/techbytes-what-the-industry-misses-about-incidents-and-what-you-can-do/&quot;&gt;Techbytes: What The Industry Misses About Incidents and What You Can Do&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.atspotify.com/2019/04/04/whacking-a-million-moles-automated-incident-response-infrastructure-in-gcp/&quot;&gt;Automated Incident Response Infrastructure in GCP&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/root&quot;&gt;Tracing, Fast and Slow: Digging into and Improving Your Web Service&#39;s Performance&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.squarespace.com/blog/2017/under-the-hood-ensuring-site-reliability&quot;&gt;Under the Hood: Ensuring Site Reliability&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/na&quot;&gt;Pushing through Friction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/hidalgo&quot;&gt;How to SRE When Everything&#39;s Already on Fire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/lawson&quot;&gt;Case Study: Implementing SLOs for a New Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/turner&quot;&gt;Creating a Code Review Culture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.blog/2021/01/25/a-deeper-dive-into-our-may-2019-security-incident/&quot;&gt;A deeper dive into our May 2019 security incident&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.blog/2020/10/23/adrian-cockcroft-aws-failover-chaos-engineering-fault-tolerance-distaster-recovery/&quot;&gt;Guest Post - Failing over without falling over&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/limoncelli&quot;&gt;Low Context DevOps: Improving SRE Team Culture through Defaults, Documentation, and Discipline&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com/blog/canonical-log-lines&quot;&gt;Fast and flexible observability with canonical log lines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com/blog/engineering/page/3&quot;&gt;Introducing Veneur: high performance and global aggregation for Datadog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/larson&quot;&gt;How Stripe Invests in Technical Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/lopopolo&quot;&gt;The AWS Billing Machine and Optimizing Cloud Costs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2019/05/09/chaos-engineering-at-Target.html&quot;&gt;Ɔhaos Ǝnginǝǝring @ Target - Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2019/02/05/chaos-engineering-at-Target.html&quot;&gt;Ɔhaos Ǝnginǝǝring @ Target - Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2019/02/25/introducing-goalert.html&quot;&gt;GoAlert - Your Future Open Source, On-Call Notification Product&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2019/01/14/cascading-failure-of-distributed-systems.html&quot;&gt;On Infrastructure at Scale: A Cascading Failure of Distributed Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2017/04/05/distributed-troubleshooting.html&quot;&gt;Distributed Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.target.com/2014/12/29/outage-resolution-through-automation.html&quot;&gt;Outage Resolution Through Automation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/teads-engineering/scaling-your-on-duty-team-bc467c480747&quot;&gt;Scaling your on-duty team&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.trivago.com/2020/12/04/how-to-get-fooled-by-metrics/&quot;&gt;How To Get Fooled By Metrics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eng.uber.com/kafka/&quot;&gt;Disaster Recovery for Multi-Region Kafka at Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eng.uber.com/eng-failover-handling/&quot;&gt;Engineering Failover Handling in Uber’s Mobile Networking Infrastructure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eng.uber.com/optimizing-observability/&quot;&gt;Optimizing Observability with Jaeger, M3, and XYS at Uber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/lee&quot;&gt;A Tale of Two Rotations: Building a Humane &amp;amp; Effective On-Call&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/gud&quot;&gt;Testing in Production at Scale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=qJnS-EfIIIE&quot;&gt;A History of SRE at Uber’ with Rick Boone of Uber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@bruce_25864/the-sre-incident-response-game-db242fff391c&quot;&gt;The SRE Incident Response game&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/c2-52EP8_7c&quot;&gt;Level Up Your Incident Response With Gameplay&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/mouzeli&quot;&gt;Testing Encyclopedias in Production&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/mouzeli&quot;&gt;What Happens When You Type en.wikipedia.org?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Blog Posts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.tech/blog/infra-monitoring-at-zerodha/&quot;&gt;Infrastructure monitoring with Prometheus at Zerodha&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;SRECon Mix Playlist&lt;/h2&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/charagondla&quot;&gt;Adobe - The Good, the Bad and the Ugly: The 3 Learnings of an SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/yitzhaki&quot;&gt;Amdocs - SREs at Telecom and Media Industry: Bridging between Legacy and Cloud Native Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/argent&quot;&gt;Amazon - Confessions of a Systems Engineer: Learning from My 20+ Years of Failure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/kraus&quot;&gt;Alaska Airlines - Capacity Prediction in External Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/mcdonald&quot;&gt;BuzzFeed - Optimizing for Learning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/narvas&quot;&gt;BT - Challenges of Starting an SRE Team from Scratch in an Enterprise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/ali&quot;&gt;Cloudflare - Support Operations Engineering: Scaling Developer Products to the Millions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/lykke&quot;&gt;Hudson River Trading - Fixing On-Call When Nobody Thinks It&#39;s (Too) Broken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/thorne&quot;&gt;IBM - Why Automating Everything Adds to Your Toil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/thomas&quot;&gt;Genesys - The Smallest Possible SRE Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/murphy&quot;&gt;G-Research - My Life as a Solo SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/rabenstein&quot;&gt;Grafana Labs - SRE in the Third Age&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/struve&quot;&gt;Kenna Security - Building a Scalable Monitoring System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/spoonhower&quot;&gt;Lightstep - Building Service Ownership Using Documentation, Telemetry, and a Chance to Make Things Better&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/gagne&quot;&gt;MessageBird - Autopsy of a MySQL Automation Disaster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/neal&quot;&gt;Netlify - Perks and Pitfalls of Building a Remote First Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/schlesinger&quot;&gt;ReactiveOps - Zero to SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/collins&quot;&gt;Salesforce - Incident Response in Unfamiliar Sociotechnical Systems: One Incident Commander&#39;s Challenges Supporting Inter-organizational Anomaly Response in the Age of COVID-19&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/huxtable&quot;&gt;Sprax - From Nothing to SRE: Practical Guidance on Implementing SRE in Smaller Organisations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/wan&quot;&gt;The New York Times - SRE by Influence, Not Authority: How the New York Times Prepares for Large-Scale Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/rutkin&quot;&gt;Twitter - Hiring Great SREs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/wieczorek&quot;&gt;United States Digital Service - Lessons Learned in Black Box Monitoring 25,000 Endpoints and Proving the SRE Team&#39;s Value&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/urbanec&quot;&gt;Unity Technologies - Being Reasonable about SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/ocallaghan&quot;&gt;Udemy - How to Do SRE When You Have No SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/yakomin&quot;&gt;Vanguard - Cloudy with a Chance of Chaos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19americas/presentation/shoup&quot;&gt;WeWork - Learning from Learnings: Anatomy of Three Incidents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon19emea/presentation/shu&quot;&gt;Yelp - What I Wish I Knew before Going On-Call&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/srecon20americas/presentation/moyer&quot;&gt;Zendesk - Latency and Availability Error Budgets Done Right at Scale&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/building-secure-and/9781492083115/&quot;&gt;Building Secure &amp;amp; Reliable Systems&lt;/a&gt; | &lt;a href=&quot;https://static.googleusercontent.com/media/sre.google/en//static/pdf/building_secure_and_reliable_systems.pdf&quot;&gt;Read free online version hosted by Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/site-reliability-engineering/9781491929117/&quot;&gt;Site Reliability Engineering&lt;/a&gt; | &lt;a href=&quot;https://sre.google/sre-book/table-of-contents/&quot;&gt;Read free online version hosted by Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/the-site-reliability/9781492029496/&quot;&gt;The Site Reliability Workbook from Google&lt;/a&gt; | &lt;a href=&quot;https://sre.google/workbook/table-of-contents/&quot;&gt;Read free online version hosted by Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/training-site-reliability/9781492076018/&quot;&gt;Training Site Reliability Engineers&lt;/a&gt; | &lt;a href=&quot;https://static.googleusercontent.com/media/sre.google/en//static/pdf/training-sre.pdf&quot;&gt;Read free online version hosted by Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/97-things-every/9781492081487/&quot;&gt;97 Things Every SRE Should Know&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/slo-adoption-and/9781492075370/&quot;&gt;SLO Adoption and Usage in Site Reliability Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/practical-site-reliability/9781788839563/&quot;&gt;Practical Site Reliability Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/implementing-service-level/9781492076803/&quot;&gt;Implementing Service Level Objectives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/chaos-engineering/9781492043850/&quot;&gt;Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/seeking-sre/9781491978856/&quot;&gt;Seeking SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/security-chaos-engineering/9781492080350/&quot;&gt;Security Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/chaos-engineering-observability/9781492051046/&quot;&gt;Chaos Engineering Observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/database-reliability-engineering/9781491925935/&quot;&gt;Database Reliability Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/what-is-sre/9781492054429/&quot;&gt;What Is SRE?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/database-reliability-engineering/9781492030942/&quot;&gt;Database Reliability Engineering: What, Why, and How?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/observability-engineering/9781492076438/&quot;&gt;Observability Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/chaos-engineering&quot;&gt;&lt;em&gt;New!&lt;/em&gt; Chaos Engineering: Site reliability through controlled disruption&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/srecon#past&quot;&gt;SRECon Past Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chaosconf.io/&quot;&gt;ChaosConf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other Goodies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dastergon/awesome-sre&quot;&gt;Awesome SRE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SquadcastHub/awesome-sre-tools&quot;&gt;Awesome Site Reliability Engineering Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dastergon/awesome-chaos-engineering&quot;&gt;Awesome Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crazy-canux/awesome-monitoring&quot;&gt;Awesome-Monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://project-awesome.org/n1trux/awesome-sysadmin&quot;&gt;Awesome Sysadmin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sre.google/&quot;&gt;Google SRE Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/site-reliability-engineering/&quot;&gt;Microsoft SRE Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://linkedin.github.io/school-of-sre/&quot;&gt;School of SRE from LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sreweekly.com/&quot;&gt;SRE Weekly Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chaosengineering.news/&quot;&gt;Chaos Engineering Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://devopsweekly.com&quot;&gt;DevOps Weekly Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dastergon/postmortem-templates&quot;&gt;Postmortem Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Inspired by &lt;a href=&quot;https://github.com/abhivaikar/howtheytest&quot;&gt;Howtheytest&lt;/a&gt; from &lt;a href=&quot;https://github.com/abhivaikar&quot;&gt;Abhijeet Vaikar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The list of organizations is referred from my other repo &lt;a href=&quot;https://github.com/upgundecha/awesome-engineering&quot;&gt;awesome-engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Banner image &lt;a href=&quot;https://www.freepik.com/vectors/cartoon&quot;&gt;Cartoon vector created by vectorjuice - www.freepik.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other How They... repos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abhivaikar/howtheytest&quot;&gt;Howtheytest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bregman-arie/howtheydevops&quot;&gt;Howtheydevops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/upgundecha/howtheyaws&quot;&gt;Howtheyaws&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Contributions welcome! Read the &lt;a href=&quot;https://raw.githubusercontent.com/upgundecha/howtheysre/main/contributing.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0&quot;&gt;&lt;img src=&quot;https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg&quot; alt=&quot;CC0&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To the extent possible under law, Unmesh Gundecha has waived all copyright and related or neighboring rights to this work.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;If you decide to use this anywhere please give a credit to &lt;a href=&quot;https://www.twitter.com/upgundecha&quot;&gt;@upgundecha&lt;/a&gt; on twitter, also If you like my work, check out other projects on my Github.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread operator over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread operator &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/blob/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/blob/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/blob/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/blob/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/blob/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>metersphere/metersphere</title>
      <link>https://github.com/metersphere/metersphere</link>
      <description>&lt;p&gt;MeterSphere 是一站式开源持续测试平台，涵盖测试跟踪、接口测试、性能测试、团队协作等功能，全面兼容 JMeter、Postman 等开源、主流标准。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MeterSphere 一站式开源持续测试平台&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.codacy.com/gh/metersphere/metersphere?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=metersphere/metersphere&amp;amp;utm_campaign=Badge_Grade_Dashboard&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/Grade/176186d132df448b955f8bdd5e6ef9c0&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/metersphere/metersphere/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/metersphere/metersphere&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/metersphere/metersphere/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/metersphere/metersphere/total&quot; alt=&quot;GitHub All Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://testerhome.com/github_statistics&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TTF-TesterHome-2955C5.svg&quot; alt=&quot;TesterHome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/metersphere/metersphere/master/README-EN.md&quot;&gt;English&lt;/a&gt; | 中文&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 《持续测试白皮书 v1.0》成功发布 | | ------------------------------------------------------------------------------------------------------------ | | “软件质量报道”公众号和MeterSphere开源项目组历时四个月，结合自己的经验和业界各方面的专家反馈，完成《持续测试白皮书 v1.0》的编写工作。期待本白皮书可以帮助业界更多企业和专业用户在日常工作中更好地将“持续测试”理念付诸实践。下载链接： &lt;a href=&quot;https://jinshuju.net/f/KqFUhq&quot;&gt;https://jinshuju.net/f/KqFUhq&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;MeterSphere 是一站式开源持续测试平台，涵盖测试跟踪、接口测试、性能测试、团队协作等功能，兼容JMeter 等开源标准，有效助力开发和测试团队充分利用云弹性进行高度可扩展的自动化测试，加速高质量软件的交付。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试跟踪: 远超 TestLink 的使用体验，覆盖从编写用例到生成测试报告的完整流程；&lt;/li&gt; 
 &lt;li&gt;接口测试: 集 Postman 的易用与 JMeter 的灵活于一体，接口管理、多协议支持、场景自动化，你想要的全都有；&lt;/li&gt; 
 &lt;li&gt;性能测试: 兼容 JMeter，支持 Kubernetes 和云环境，轻松支持高并发、分布式的性能测试；&lt;/li&gt; 
 &lt;li&gt;团队协作: 用户管理、租户管理、权限管理、资源管理，无论团队规模如何，总有适合的落地方式。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://metersphere.oss-cn-hangzhou.aliyuncs.com/img/ct-devops.png&quot; alt=&quot;产品定位&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如需进一步了解 MeterSphere 开源项目，推荐阅读 &lt;a href=&quot;https://mp.weixin.qq.com/s/DpCt3BNgBTlV3sJ5qtPmZw&quot;&gt;MeterSphere 的初心和使命&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;在线体验&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境地址：&lt;a href=&quot;https://demo.metersphere.com/&quot;&gt;https://demo.metersphere.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;用户名：demo&lt;/li&gt; 
 &lt;li&gt;密码：P@ssw0rd123..&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| :warning: 注意 | | :--------------------------- | | 该环境仅作体验目的使用，我们会定时清理、重置数据！ | | 请勿修改体验环境用户的密码！ | | 请勿在环境中添加业务生产环境地址、用户名密码等敏感信息！ |&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p&gt;仅需两步快速安装 MeterSphere：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;准备一台不小于 8 G内存的 64位 Linux 主机；&lt;/li&gt; 
 &lt;li&gt;以 root 用户执行如下命令一键安装 MeterSphere。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -sSL https://github.com/metersphere/metersphere/releases/latest/download/quick_start.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;文档和演示视频：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://metersphere.io/docs/&quot;&gt;完整文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://video.fit2cloud.com/%E3%80%90%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91%E3%80%91202006%20MeterSphere%20v1.0%20%E5%8A%9F%E8%83%BD%E6%BC%94%E7%A4%BA.mp4&quot;&gt;演示视频&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;MeterSphere 企业版&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://jinshuju.net/f/CzzAOe&quot;&gt;申请企业版使用&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注: 企业版支持离线安装，申请通过后会提供高速下载链接&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;相关工具&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metersphere/jenkins-plugin&quot;&gt;Jenkins 插件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metersphere/chrome-extensions&quot;&gt;浏览器插件&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;版本说明&lt;/h2&gt; 
&lt;p&gt;MeterSphere 版本号命名规则为：v大版本.功能版本.Bug修复版本。比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;v1.0.1 是 v1.0.0 之后的Bug修复版本；
v1.1.0 是 v1.0.0 之后的功能版本。
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;像其它优秀开源项目一样，MeterSphere 将每月发布一个功能版本。&lt;/p&gt; 
&lt;h2&gt;产品优势&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;开源：基于开源、兼容开源；按月发布新版本、日均下载安装超过100次、被大量客户验证；&lt;/li&gt; 
 &lt;li&gt;一站式：一个产品全面涵盖测试跟踪、接口测试、性能测试等功能并形成联动：其中用例管理是底座需求、接口自动化测试是高频需求、性能测试是专家服务为主工具为辅；一个产品全满足从测试计划、测试执行到测试报告分析的全生命周期需求；&lt;/li&gt; 
 &lt;li&gt;持续测试：能将测试融入持续交付和 DevOps 体系；无缝对接 Bug 管理工具和持续集成工具等；支持团队协作和资产沉淀。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;详细的版本规划请参考 &lt;a href=&quot;https://github.com/metersphere/metersphere/blob/master/ROADMAP.md&quot;&gt;版本路线图&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;技术栈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;后端: &lt;a href=&quot;https://www.tutorialspoint.com/spring_boot/spring_boot_introduction.htm&quot;&gt;Spring Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;前端: &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;中间件: &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;, &lt;a href=&quot;https://kafka.apache.org/&quot;&gt;Kafka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;基础设施: &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;测试引擎: &lt;a href=&quot;https://jmeter.apache.org/&quot;&gt;JMeter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;致谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.blazemeter.com/&quot;&gt;BlazeMeter&lt;/a&gt;：感谢 BlazeMeter 提供的设计思路&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jmeter.apache.org/&quot;&gt;JMeter&lt;/a&gt;：MeterSphere 使用了 JMeter 作为测试引擎&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://element.eleme.cn/#/&quot;&gt;Element&lt;/a&gt;：感谢 Element 提供的优秀组件库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;加入 MeterSphere 团队&lt;/h2&gt; 
&lt;p&gt;我们正在招聘 MeterSphere 技术布道师，一起打造开源明星项目，请发简历到 metersphere@fit2cloud.com&lt;/p&gt; 
&lt;p&gt;点击查看 &lt;a href=&quot;https://www.zhipin.com/job_detail/b151c4b3d594688733Ny3dy1GFI%7E.html&quot;&gt;岗位详情&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;微信群&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://metersphere.oss-cn-hangzhou.aliyuncs.com/img/wechat-group.png&quot; alt=&quot;wechat-group&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License &amp;amp; Copyright&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2014-2020 飞致云 FIT2CLOUD, All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under The GNU General Public License version 2 (GPLv2) (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;https://www.gnu.org/licenses/gpl-2.0.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dcloudio/uni-app</title>
      <link>https://github.com/dcloudio/uni-app</link>
      <description>&lt;p&gt;uni-app 是使用 Vue 语法开发小程序、H5、App的统一框架&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uni-app&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt; 是一个使用 &lt;code&gt;Vue.js&lt;/code&gt; 开发小程序、H5、App的统一前端框架。官网地址：&lt;a href=&quot;https://uniapp.dcloud.io&quot;&gt;https://uniapp.dcloud.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;开发者使用 &lt;code&gt;Vue&lt;/code&gt; 语法编写代码，&lt;code&gt;uni-app&lt;/code&gt; 框架将其编译到 小程序（微信/支付宝/百度/字节跳动/QQ/钉钉）、App（iOS/Android）、H5等多个平台，保证其正确运行并达到优秀体验。&lt;/p&gt; 
&lt;h1&gt;uni-app的特点&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;开发者和案例更多：HBuilder装机量500万台，开发者社区月活百万，70多个QQ微信群承载10万人。案例众多，uni统计月活10亿（&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;详见&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;性能更高（见&lt;a href=&quot;https://juejin.im/post/5ca1736af265da30ae314248&quot;&gt;评测&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;更丰富的周边生态，&lt;a href=&quot;https://ext.dcloud.net.cn/&quot;&gt;插件市场&lt;/a&gt;数千款插件&lt;/li&gt; 
 &lt;li&gt;提供比小程序原生开发更好的开发体验、更高的工程化效率&lt;/li&gt; 
 &lt;li&gt;跨端抹平度更完善，且各端特色发挥更灵活，可真正实现一套代码多端覆盖，无需各端多头维护升级&lt;/li&gt; 
 &lt;li&gt;权威认可：阿里小程序官方工具内置uni-app（&lt;a href=&quot;https://docs.alipay.com/mini/ide/0.70-stable&quot;&gt;详见&lt;/a&gt;）、腾讯课堂官方自制uni-app培训视频（&lt;a href=&quot;https://ask.dcloud.net.cn/article/35640&quot;&gt;详见&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;扫码体验&lt;/h2&gt; 
&lt;p&gt;开发一次，编译到10个平台。依次扫描10个二维码，亲自体验最全面的跨平台效果！&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;em&gt;注： 某些平台不能提交简单demo，补充了一些其他功能。&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;支持通过&lt;code&gt;vue-cli&lt;/code&gt;命令行、&lt;code&gt;HBuilderX&lt;/code&gt;可视化界面两种方式快速创建项目：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uniapp.dcloud.io/quickstart?id=_2-%E9%80%9A%E8%BF%87vue-cli%E5%91%BD%E4%BB%A4%E8%A1%8C&quot;&gt;vue-cli命令行方式&lt;/a&gt;：不限IDE，适合对node熟悉的开发者，扩展阅读：&lt;a href=&quot;https://ask.dcloud.net.cn/article/36286&quot;&gt;在vscode中开发uni-app&lt;/a&gt;、&lt;a href=&quot;https://ask.dcloud.net.cn/article/36307&quot;&gt;在 WebStorm 中开发 uni-app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uniapp.dcloud.io/quickstart?id=_1-%E9%80%9A%E8%BF%87-hbuilderx-%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2&quot;&gt;HBuilderX可视化界面&lt;/a&gt;：专用IDE，内置相关环境，开箱即用，开发效率更高。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目案例&lt;/h2&gt; 
&lt;p&gt;案例展示：&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;uniapp.dcloud.io/case&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;欢迎提交你的应用，&lt;a href=&quot;https://github.com/dcloudio/uni-app/issues/6&quot;&gt;uni-app案例征集&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;需求墙&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;计划支持的功能点，会在需求墙上进行展示，征集开发者的投票意见，&lt;a href=&quot;https://dev.dcloud.net.cn/wish/&quot;&gt;前往投票&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;一直保持高频的更新迭代，详见&lt;a href=&quot;https://raw.githubusercontent.com/dcloudio/uni-app/master/docs/release.md&quot;&gt;uni-app 更新日志&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;论坛&lt;/h2&gt; 
&lt;p&gt;由于&lt;code&gt;DCloud&lt;/code&gt;有70多个QQ、微信群，官方已无法维护更多交流群。请开发者到官方论坛交流：&lt;a href=&quot;https://ask.dcloud.net.cn/explore/&quot;&gt;https://ask.dcloud.net.cn/explore/&lt;/a&gt; 。论坛提供了比issues更专业的工具服务。&lt;/p&gt; 
&lt;h2&gt;插件市场&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;有丰富的插件生态，众多开发者提交了数千款组件、sdk、项目模板，详见：&lt;a href=&quot;https://ext.dcloud.net.cn/&quot;&gt;https://ext.dcloud.net.cn/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;除了众多三方ui库，官方还提供了uni-ui，在性能和跨端兼容方面有更强的优势。详见：&lt;a href=&quot;https://ext.dcloud.net.cn/plugin?id=55&quot;&gt;https://ext.dcloud.net.cn/plugin?id=55&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;现有项目如何迁移到uni-app体系&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;微信小程序转换uni-app指南及转换器：&lt;a href=&quot;https://ask.dcloud.net.cn/article/35786&quot;&gt;https://ask.dcloud.net.cn/article/35786&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;vue h5项目转换uni-app指南：&lt;a href=&quot;https://ask.dcloud.net.cn/article/36174&quot;&gt;https://ask.dcloud.net.cn/article/36174&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mpvue 项目（组件）迁移指南、示例及资源汇总： &lt;a href=&quot;https://ask.dcloud.net.cn/article/34945&quot;&gt;https://ask.dcloud.net.cn/article/34945&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;wepy转uni-app转换器：&lt;a href=&quot;https://github.com/zhangdaren/wepy-to-uniapp&quot;&gt;https://github.com/zhangdaren/wepy-to-uniapp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见疑问&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;问：不同端有不同的需求、不同的特色，登陆支付也不一样，如何统一？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：差异部分使用条件编译。uni-app提供了灵活强大的&lt;a href=&quot;https://uniapp.dcloud.io/platform&quot;&gt;条件编译&lt;/a&gt;。可以完美处理复用部分和差异部分。真正一套工程源码。当业务升级时，不再需要多端维护。如果多端维护，经常会因为某些端的流量不大，就一直拖延无法让那些用户享受到最新服务。另外登陆支付在客户端部分，已经被uni-app统一成一样的api了。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：多端是不是一种妥协，是否会造成性能下降？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：good question。多端且不影响性能，确实很难，但uni-app做到了。在h5端，它的性能、包体积与直接使用vue.js开发一致； 在小程序端，它的性能比大多数开发框架更好，uni-app底层自动处理的setdata差量同步机制，比开发者手动写setdata更好，就像使用vue.js更新界面比手动写js修改dom更高效一样； 在App，uni-app支持webview渲染和原生渲染双引擎，启用原生渲染时，css写法受限，但性能是很接近原生开发的效果的，在当前的手机环境下，千万日活以下的应用在App使用uni-app也不会遇到任何压力。当然也可以在已经做好的原生App中将部分页面改为uni-app实现; 此外，我们会把很多跨端处理放在编译期完成的，这样会减少对运行期的效率影响。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：不做多端，是不是不需要uni-app？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：不是。大量开发者用uni-app只做一个端，详见&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;案例&lt;/a&gt;。对于开发者而言，一个优秀工具在手，做什么都不愁。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：uni-app以后会不会变更开源协议，转向收费？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：官方承诺永远不会变更开源协议。无论HBuilderX、uni-app、App，面向中国人永久免费。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;更多资料&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;评测：&lt;a href=&quot;https://juejin.im/post/5e8e8d5a6fb9a03c6d3d9f42&quot;&gt;跨端开发框架深度横评之2020版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;评测：&lt;a href=&quot;https://mp.weixin.qq.com/s/jIDEHfuMnED6HTfNgjsW4w&quot;&gt;深入测试一周，主流多端框架大比武&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ask.dcloud.net.cn/article/36083&quot;&gt;uni-app在App端和flutter、react native的比较&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fabricjs/fabric.js</title>
      <link>https://github.com/fabricjs/fabric.js</link>
      <description>&lt;p&gt;Javascript Canvas Library, SVG-to-Canvas (&amp; canvas-to-SVG) Parser&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Fabric.js&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;http://travis-ci.org/#!/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://secure.travis-ci.org/fabricjs/fabric.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://d3s6mut3hikguw.cloudfront.net/github/kangax/fabric.js/badges/gpa.svg&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/kangax/fabric.js?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/fabricjs/fabric.js/badge.png?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/fabricjs/fabric.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready-to-Code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/bo/fabric&quot;&gt;&lt;img src=&quot;https://badge.fury.io/bo/fabric.svg&quot; alt=&quot;Bower version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://badge.fury.io/js/fabric&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/fabric.svg&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/fabric&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/fabric.svg&quot; alt=&quot;Downloads per month&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cdnjs.com/libraries/fabric.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/cdnjs/v/fabric.js.svg&quot; alt=&quot;CDNJS version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://david-dm.org/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://david-dm.org/kangax/fabric.js.svg?theme=shields.io&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/kangax/fabric.js#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/kangax/fabric.js/dev-status.svg?theme=shields.io&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bountysource.com/trackers/23217-fabric-js?utm_source=23217&amp;amp;utm_medium=shield&amp;amp;utm_campaign=TRACKER_BADGE&quot;&gt;&lt;img src=&quot;https://api.bountysource.com/badge/tracker?tracker_id=23217&quot; alt=&quot;Bountysource&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://flattr.com/submit/auto?user_id=kangax&amp;amp;url=http://github.com/kangax/fabric.js&amp;amp;title=Fabric.js&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software&quot;&gt;&lt;img src=&quot;http://api.flattr.com/button/flattr-badge-large.png&quot; alt=&quot;Flattr this git repo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fabric.js&lt;/strong&gt; is a framework that makes it easy to work with HTML5 canvas element. It is an &lt;strong&gt;interactive object model&lt;/strong&gt; on top of canvas element. It is also an &lt;strong&gt;SVG-to-canvas parser&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Using Fabric.js, you can create and populate objects on canvas; objects like simple geometrical shapes — rectangles, circles, ellipses, polygons, or more complex shapes consisting of hundreds or thousands of simple paths. You can then scale, move, and rotate these objects with the mouse; modify their properties — color, transparency, z-index, etc. You can also manipulate these objects altogether — grouping them with a simple mouse selection.&lt;/p&gt; 
&lt;h3&gt;Non-Technical Introduction to Fabric&lt;/h3&gt; 
&lt;p&gt;Fabric.js allows you to easily create simple shapes like rectangles, circles, triangles and other polygons or more complex shapes made up of many paths, onto the HTML &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element on a webpage using JavaScript. Fabric.js will then allow you to manipulate the size, position and rotation of these objects with a mouse. It’s also possible to change some of the attributes of these objects such as their color, transparency, depth position on the webpage or selecting groups of these objects using the Fabric.js library. Fabric.js will also allow you to convert an SVG image into JavaScript data that can be used for putting it onto the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Love-Fabric%3F-Help-us-by...&quot;&gt;Contributions&lt;/a&gt; are very much welcome!&lt;/p&gt; 
&lt;h3&gt;Goals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unit tested (1150+ tests at the moment, 79%+ coverage)&lt;/li&gt; 
 &lt;li&gt;Modular (~60 small &lt;a href=&quot;http://fabricjs.com/docs/&quot;&gt;&quot;classes&quot;, modules, mixins&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Cross-browser&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Focus-on-speed&quot;&gt;Fast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Encapsulated in one object&lt;/li&gt; 
 &lt;li&gt;No browser sniffing for critical functionality&lt;/li&gt; 
 &lt;li&gt;Runs under ES5 strict mode&lt;/li&gt; 
 &lt;li&gt;Runs on a server under &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; (active stable releases and latest of current) (see &lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Fabric-limitations-in-node.js&quot;&gt;Node.js limitations&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Follows &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported browsers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox 4+&lt;/li&gt; 
 &lt;li&gt;Safari 5+&lt;/li&gt; 
 &lt;li&gt;Opera 9.64+&lt;/li&gt; 
 &lt;li&gt;Chrome (all versions)&lt;/li&gt; 
 &lt;li&gt;Edge (chromium based, all versions)&lt;/li&gt; 
 &lt;li&gt;IE11 and Edge legacy, supported but deprecated.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can &lt;a href=&quot;http://fabricjs.com/test/unit/&quot;&gt;run automated unit tests&lt;/a&gt; right in the browser.&lt;/p&gt; 
&lt;h3&gt;History&lt;/h3&gt; 
&lt;p&gt;Fabric.js started as a foundation for design editor on &lt;a href=&quot;http://printio.ru&quot;&gt;printio.ru&lt;/a&gt; — interactive online store with ability to create your own designs. The idea was to create &lt;a href=&quot;http://printio.ru/ringer_man_tees/new&quot;&gt;Javascript-based editor&lt;/a&gt;, which would make it easy to manipulate vector shapes and images on T-Shirts. Since performance was one of the most critical requirements, we chose canvas over SVG. While SVG is excellent with static shapes, it&#39;s not as performant as canvas when it comes to dynamic manipulation of objects (movement, scaling, rotation, etc.). Fabric.js was heavily inspired by &lt;a href=&quot;http://www.ernestdelgado.com/public-tests/canvasphoto/demo/canvas.html&quot;&gt;Ernest Delgado&#39;s canvas experiment&lt;/a&gt;. In fact, code from Ernest&#39;s experiment was the foundation of an entire framework. Later, Fabric.js grew into a collection of distinct object types and got an SVG-to-canvas parser.&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;$ bower install fabric
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Note: If you are using Fabric.js in a Node.js script, you will depend from &lt;a href=&quot;https://github.com/Automattic/node-canvas&quot;&gt;node-canvas&lt;/a&gt;.&lt;code&gt;node-canvas&lt;/code&gt; is an html canvas replacement that works on top of native libraries. Please follow the instructions located &lt;a href=&quot;https://github.com/Automattic/node-canvas#compiling&quot;&gt;here&lt;/a&gt; in order to get it up and running.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install fabric --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this, you can import fabric like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const fabric = require(&quot;fabric&quot;).fabric;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can use this instead if your build pipeline supports ES6 imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import { fabric } from &quot;fabric&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: es6 imports won&#39;t work in browser or with bundlers which expect es6 module like vite. Use commonjs syntax instead.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/fabricjs/fabric.js/master/#examples-of-use&quot;&gt;the example section&lt;/a&gt; for usage examples.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/joyent/node/wiki/Installation&quot;&gt;Install Node.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build distribution file &lt;strong&gt;[~77K minified, ~20K gzipped]&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.1 Or build a custom distribution file, by passing (comma separated) module names to be included.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=text,serialization,parser
   // or
   $ node build.js modules=text
   // or
   $ node build.js modules=parser,text
   // etc.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;By default (when none of the modules are specified) only basic functionality is included. See the list of modules below for more information on each one of them. Note that default distribution has support for &lt;strong&gt;static canvases&lt;/strong&gt; only.&lt;/p&gt; &lt;p&gt;To get minimal distribution with interactivity, make sure to include corresponding module:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=interaction
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.2 You can also include all modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.3 You can exclude a few modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL exclude=gestures,image_filters
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a minified distribution file&lt;/p&gt; &lt;pre&gt;&lt;code&gt; # Using YUICompressor (default option)
 $ node build.js modules=... minifier=yui

 # or Google Closure Compiler
 $ node build.js modules=... minifier=closure
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable AMD support via require.js (requires uglify)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js requirejs modules=...
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create source map file for better productive debugging (requires uglify or google closure compiler).
   &lt;!-- raw HTML omitted --&gt;More information about &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&quot;&gt;source maps&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js sourcemap modules=...
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use google closure compiler you have to add &lt;code&gt;sourceMappingURL&lt;/code&gt; manually at the end of the minified file all.min.js (see issue https://code.google.com/p/closure-compiler/issues/detail?id=941).&lt;/p&gt; &lt;pre&gt;&lt;code&gt; //# sourceMappingURL=fabric.min.js.map
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure code guidelines are met (prerequisite: &lt;code&gt;npm -g install eslint&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ npm run lint &amp;amp;&amp;amp; npm run lint_tests
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/joyent/node/wiki/Installation&quot;&gt;Install Node.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm#super-easy-install&quot;&gt;Install NPM, if necessary&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install NPM packages&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run test suite&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Make sure testem is installed&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    $ npm install -g testem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run tests Chrome and Node (by default):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    $ testem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See testem docs for more info: https://github.com/testem/testem&lt;/p&gt; 
&lt;h3&gt;Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/demos/&quot;&gt;Demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/kitchensink&quot;&gt;Kitchensink demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/benchmarks/&quot;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;http://trends.builtwith.com/javascript/FabricJS&quot;&gt;Who&#39;s using Fabric?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation is always available at &lt;a href=&quot;http://fabricjs.com/docs/&quot;&gt;http://fabricjs.com/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href=&quot;http://fabricjs.com/articles&quot;&gt;official 4-part intro series&lt;/a&gt;, &lt;a href=&quot;http://www.slideshare.net/kangax/fabricjs-building-acanvaslibrarybk&quot;&gt;presentation from BK.js&lt;/a&gt; and &lt;a href=&quot;http://www.slideshare.net/kangax/fabric-falsy-values-8067834&quot;&gt;presentation from Falsy Values&lt;/a&gt; for an overview of fabric.js, how it works, and its features.&lt;/p&gt; 
&lt;h3&gt;Optional modules&lt;/h3&gt; 
&lt;p&gt;These are the optional modules that could be specified for inclusion, when building custom version of fabric:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; — Adds support for static text (&lt;code&gt;fabric.Text&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;itext&lt;/strong&gt; — Adds support for interactive text (&lt;code&gt;fabric.IText&lt;/code&gt;, &lt;code&gt;fabric.Textbox&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;serialization&lt;/strong&gt; — Adds support for &lt;code&gt;loadFromJSON&lt;/code&gt;, &lt;code&gt;loadFromDatalessJSON&lt;/code&gt;, and &lt;code&gt;clone&lt;/code&gt; methods on &lt;code&gt;fabric.Canvas&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;interaction&lt;/strong&gt; — Adds support for interactive features of fabric — selecting/transforming objects/groups via mouse/touch devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;parser&lt;/strong&gt; — Adds support for &lt;code&gt;fabric.parseSVGDocument&lt;/code&gt;, &lt;code&gt;fabric.loadSVGFromURL&lt;/code&gt;, and &lt;code&gt;fabric.loadSVGFromString&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;image_filters&lt;/strong&gt; — Adds support for image filters, such as grayscale of white removal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;easing&lt;/strong&gt; — Adds support for animation easing functions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;node&lt;/strong&gt; — Adds support for running fabric under node.js, with help of &lt;a href=&quot;https://github.com/tmpvar/jsdom&quot;&gt;jsdom&lt;/a&gt; and &lt;a href=&quot;https://github.com/learnboost/node-canvas&quot;&gt;node-canvas&lt;/a&gt; libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedrawing&lt;/strong&gt; — Adds support for free drawing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;gestures&lt;/strong&gt; — Adds support for multitouch gestures with help of &lt;a href=&quot;https://github.com/mudcube/Event.js&quot;&gt;Event.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;object_straightening&lt;/strong&gt; — Adds support for rotating an object to one of 0, 90, 180, 270, etc. depending on which is angle is closer.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;animation&lt;/strong&gt; — Adds support for animation (&lt;code&gt;fabric.util.animate&lt;/code&gt;, &lt;code&gt;fabric.util.requestAnimFrame&lt;/code&gt;, &lt;code&gt;fabric.Object#animate&lt;/code&gt;, &lt;code&gt;fabric.Canvas#fxCenterObjectH/#fxCenterObjectV/#fxRemove&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additional flags for build script are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;requirejs&lt;/strong&gt; — Makes fabric requirejs AMD-compatible in &lt;code&gt;dist/fabric.js&lt;/code&gt;. &lt;em&gt;Note:&lt;/em&gt; an unminified, requirejs-compatible version is always created in &lt;code&gt;dist/fabric.require.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;no-strict&lt;/strong&gt; — Strips &quot;use strict&quot; directives from source&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;no-svg-export&lt;/strong&gt; — Removes svg exporting functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;sourcemap&lt;/strong&gt; - Generates a sourceMap file and adds the &lt;code&gt;sourceMappingURL&lt;/code&gt; (only if uglifyjs is used) to &lt;code&gt;dist/fabric.min.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node build.js modules=ALL exclude=json no-strict no-svg-export
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Examples of use&lt;/h3&gt; 
&lt;h4&gt;Adding red rectangle to canvas&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;canvas id=&quot;canvas&quot; width=&quot;300&quot; height=&quot;300&quot;&amp;gt;&amp;lt;/canvas&amp;gt;

    &amp;lt;script src=&quot;lib/fabric.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
        var canvas = new fabric.Canvas(&#39;canvas&#39;);

        var rect = new fabric.Rect({
            top : 100,
            left : 100,
            width : 60,
            height : 70,
            fill : &#39;red&#39;
        });

        canvas.add(rect);
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helping Fabric&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bountysource.com/trackers/23217-fabric-js&quot;&gt;Fabric on Bountysource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.codetriage.com/kangax/fabric.js&quot;&gt;Fabric on CodeTriage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Staying in touch&lt;/h3&gt; 
&lt;p&gt;Follow &lt;a href=&quot;http://twitter.com/fabricjs&quot;&gt;@fabric.js&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/kangax&quot;&gt;@kangax&lt;/a&gt; or &lt;a href=&quot;http://twitter.com/AndreaBogazzi&quot;&gt;@AndreaBogazzi&lt;/a&gt; on twitter.&lt;/p&gt; 
&lt;p&gt;Questions, suggestions — &lt;a href=&quot;http://groups.google.com/group/fabricjs&quot;&gt;fabric.js on Google Groups&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;http://stackoverflow.com/questions/tagged/fabricjs&quot;&gt;Fabric questions on Stackoverflow&lt;/a&gt;, Fabric snippets on &lt;a href=&quot;http://jsfiddle.net/user/fabricjs/fiddles/&quot;&gt;jsfiddle&lt;/a&gt; or &lt;a href=&quot;http://codepen.io/tag/fabricjs&quot;&gt;codepen.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Fabric on &lt;a href=&quot;http://libknot.ohmztech.com/&quot;&gt;LibKnot&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Get help in Fabric&#39;s IRC channel — irc://irc.freenode.net/#fabric.js&lt;/p&gt; 
&lt;h3&gt;Credits&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/AndreaBogazzi&quot;&gt;Andrea Bogazzi&lt;/a&gt; for help with bugs, new features, documentation, GitHub issues&lt;/li&gt; 
 &lt;li&gt;Ernest Delgado for the original idea of &lt;a href=&quot;http://www.ernestdelgado.com/archive/canvas/&quot;&gt;manipulating images on canvas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://twitter.com/hakunin&quot;&gt;Maxim &quot;hakunin&quot; Chernyak&lt;/a&gt; for ideas, and help with various parts of the library throughout its life&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nisnya.com&quot;&gt;Sergey Nisnevich&lt;/a&gt; for help with geometry logic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/kienzle_s&quot;&gt;Stefan Kienzle&lt;/a&gt; for help with bugs, features, documentation, GitHub issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.shutterstock.com/jobs&quot;&gt;Shutterstock&lt;/a&gt; for the time and resources invested in using and improving fabric.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/graphs/contributors&quot;&gt;And all the other GitHub contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MIT License&lt;/h3&gt; 
&lt;p&gt;Copyright (c) 2008-2015 Printio (Juriy Zaytsev, Maxim Chernyak)&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step by step guide to learn JavaScript programming language in 30 days. This challenge may take up to 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------------------------------: | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; January, 2020
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/undici</title>
      <link>https://github.com/nodejs/undici</link>
      <description>&lt;p&gt;An HTTP/1.1 client, written from scratch for Node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;undici&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mcollina/undici/workflows/Node%20CI/badge.svg&quot; alt=&quot;Node CI&quot;&gt; &lt;a href=&quot;http://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat&quot; alt=&quot;js-standard-style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/undici&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/undici.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/nodejs/undici&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/nodejs/undici/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A HTTP/1.1 client, written from scratch for Node.js.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Undici means eleven in Italian. 1.1 -&amp;gt; 11 -&amp;gt; Eleven -&amp;gt; Undici. It is also a Stranger Things reference.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm i undici
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Machine: AMD EPYC 7502P
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Node 15&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http - keepalive x 12,028 ops/sec ±2.60% (265 runs sampled)
undici - pipeline x 31,321 ops/sec ±0.77% (276 runs sampled)
undici - request x 36,612 ops/sec ±0.71% (277 runs sampled)
undici - stream x 41,291 ops/sec ±0.90% (268 runs sampled)
undici - dispatch x 47,319 ops/sec ±1.17% (263 runs sampled)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The benchmark is a simple &lt;code&gt;hello world&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/benchmarks/index.js&quot;&gt;example&lt;/a&gt; using a single unix socket with pipelining.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { request } from &#39;undici&#39;

const {
  statusCode,
  headers,
  trailers,
  body
} = await request(&#39;http://localhost:3000/foo&#39;)

console.log(&#39;response received&#39;, statusCode)
console.log(&#39;headers&#39;, headers)

for await (const data of body) {
  console.log(&#39;data&#39;, data)
}

console.log(&#39;trailers&#39;, trailers)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;new undici.Client(url, opts)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;A basic HTTP/1.1 client, mapped on top of a single TCP/TLS connection. Pipelining is disabled by default.&lt;/p&gt; 
&lt;p&gt;Requests are not guaranteeed to be dispatched in order of invocation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; can be a string or a &lt;a href=&quot;https://nodejs.org/api/url.html#url_class_url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; object. It should only include the protocol, hostname, and port.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;socketPath: String|Null&lt;/code&gt;, an IPC endpoint, either Unix domain socket or Windows named pipe. Default: &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keepAliveTimeout: Number&lt;/code&gt;, the timeout after which a socket without active requests will time out. Monitors time between activity on a connected socket. This value may be overridden by &lt;em&gt;keep-alive&lt;/em&gt; hints from the server. Default: &lt;code&gt;4e3&lt;/code&gt; milliseconds (4s).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keepAliveMaxTimeout: Number&lt;/code&gt;, the maximum allowed &lt;code&gt;keepAliveTimeout&lt;/code&gt; when overridden by &lt;em&gt;keep-alive&lt;/em&gt; hints from the server. Default: &lt;code&gt;600e3&lt;/code&gt; milliseconds (10min).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keepAliveTimeoutThreshold: Number&lt;/code&gt;, a number subtracted from server &lt;em&gt;keep-alive&lt;/em&gt; hints when overriding &lt;code&gt;keepAliveTimeout&lt;/code&gt; to account for timing inaccuracies caused by e.g. transport latency. Default: &lt;code&gt;1e3&lt;/code&gt; milliseconds (1s).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;headersTimeout: Number&lt;/code&gt;, the timeout after which a request will time out, in milliseconds. Monitors time between receiving complete headers. Use &lt;code&gt;0&lt;/code&gt; to disable it entirely. Default: &lt;code&gt;30e3&lt;/code&gt; milliseconds (30s).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;bodyTimeout: Number&lt;/code&gt;, the timeout after which a request will time out, in milliseconds. Monitors time between receiving body data. Use &lt;code&gt;0&lt;/code&gt; to disable it entirely. Default: &lt;code&gt;30e3&lt;/code&gt; milliseconds (30s).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;pipelining: Number&lt;/code&gt;, the amount of concurrent requests to be sent over the single TCP/TLS connection according to &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.3.2&quot;&gt;RFC7230&lt;/a&gt;. Carefully consider your workload and environment before enabling concurrent requests as pipelining may reduce performance if used incorrectly. Pipelining is sensitive to network stack settings as well as head of line blocking caused by e.g. long running requests. Set to &lt;code&gt;0&lt;/code&gt; to disable keep-alive connections. Default: &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;tls: Object|Null&lt;/code&gt;, an options object which in the case of &lt;code&gt;https&lt;/code&gt; will be passed to &lt;a href=&quot;https://nodejs.org/api/tls.html#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect&lt;/code&gt;&lt;/a&gt;. Default: &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;maxHeaderSize: Number&lt;/code&gt;, the maximum length of request headers in bytes. Default: &lt;code&gt;16384&lt;/code&gt; (16KiB).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.request(opts[, callback(err, data)]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Performs a HTTP request.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;path: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;method: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;body: String|Buffer|Uint8Array|stream.Readable|Null&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object|Array|Null&lt;/code&gt;, an object with header-value pairs or an array with header-value pairs bi-indexed (&lt;code&gt;[&#39;header1&#39;, &#39;value1&#39;, &#39;header2&#39;, &#39;value2&#39;]&lt;/code&gt;). Default: &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;signal: AbortSignal|EventEmitter|Null&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;idempotent: Boolean&lt;/code&gt;, whether the requests can be safely retried or not. If &lt;code&gt;false&lt;/code&gt; the request won&#39;t be sent until all preceding requests in the pipeline has completed. Default: &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;method&lt;/code&gt; is &lt;code&gt;HEAD&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Headers are represented by an object like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &#39;content-length&#39;: &#39;123&#39;,
  &#39;content-type&#39;: &#39;text/plain&#39;,
  connection: &#39;keep-alive&#39;,
  host: &#39;mysite.com&#39;,
  accept: &#39;*/*&#39;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or an array like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[
  &#39;content-length&#39;, &#39;123&#39;,
  &#39;content-type&#39;, &#39;text/plain&#39;,
  &#39;connection&#39;, &#39;keep-alive&#39;,
  &#39;host&#39;, &#39;mysite.com&#39;,
  &#39;accept&#39;, &#39;*/*&#39;
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keys are lowercased. Values are not modified. If you don&#39;t specify a &lt;code&gt;host&lt;/code&gt; header, it will be derived from the &lt;code&gt;url&lt;/code&gt; of the client instance.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;callback&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trailers: Object&lt;/code&gt;, an object where all keys have been lowercased. This object start out as empty and will be mutated to contain trailers after &lt;code&gt;body&lt;/code&gt; has emitted &lt;code&gt;&#39;end&#39;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;body: stream.Readable&lt;/code&gt; response payload. A user &lt;strong&gt;must&lt;/strong&gt; either fully consume or destroy the body unless there is an error, or no further requests will be processed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;undici&#39;)
const client = new Client(`http://localhost:3000`)

client.request({
  path: &#39;/&#39;,
  method: &#39;GET&#39;
}, function (err, data) {
  if (err) {
    // handle this in some way!
    return
  }

  const {
    statusCode,
    headers,
    trailers,
    body
  } = data

  console.log(&#39;response received&#39;, statusCode)
  console.log(&#39;headers&#39;, headers)

  body.setEncoding(&#39;utf8&#39;)
  body.on(&#39;data&#39;, console.log)
  body.on(&#39;end&#39;, () =&amp;gt; {
    console.log(&#39;trailers&#39;, trailers)
  })

  client.close()
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Non-idempotent requests will not be pipelined in order to avoid indirect failures.&lt;/p&gt; 
&lt;p&gt;Idempotent requests will be automatically retried if they fail due to indirect failure from the request at the head of the pipeline. This does not apply to idempotent requests with a stream request body.&lt;/p&gt; 
&lt;h5&gt;Aborting a request&lt;/h5&gt; 
&lt;p&gt;A request can be aborted using either an &lt;code&gt;AbortController&lt;/code&gt; or an &lt;code&gt;EventEmitter&lt;/code&gt;. To use &lt;code&gt;AbortController&lt;/code&gt; in Node.js versions earlier than 15, you will need to install a shim - &lt;code&gt;npm i abort-controller&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;undici&#39;)

const client = new Client(&#39;http://localhost:3000&#39;)
const abortController = new AbortController()

client.request({
  path: &#39;/&#39;,
  method: &#39;GET&#39;,
  signal: abortController.signal
}, function (err, data) {
  console.log(err) // RequestAbortedError
  client.close()
})

abortController.abort()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, any &lt;code&gt;EventEmitter&lt;/code&gt; that emits an &lt;code&gt;&#39;abort&#39;&lt;/code&gt; event may be used as an abort controller:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const EventEmitter = require(&#39;events&#39;)
const { Client } = require(&#39;undici&#39;)

const client = new Client(&#39;http://localhost:3000&#39;)
const ee = new EventEmitter()

client.request({
  path: &#39;/&#39;,
  method: &#39;GET&#39;,
  signal: ee
}, function (err, data) {
  console.log(err) // RequestAbortedError
  client.close()
})

ee.emit(&#39;abort&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Destroying the request or response body will have the same effect.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.stream(opts, factory(data)[, callback(err)]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A faster version of &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#request&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unlike &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#request&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; this method expects &lt;code&gt;factory&lt;/code&gt; to return a &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; which the response will be written to. This improves performance by avoiding creating an intermediate &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; when the user expects to directly pipe the response body to a &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;... same as &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#request&quot;&gt;&lt;code&gt;client.request(opts[, callback])&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;factory&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;callback&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trailers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;undici&#39;)
const client = new Client(`http://localhost:3000`)
const fs = require(&#39;fs&#39;)

client.stream({
  path: &#39;/&#39;,
  method: &#39;GET&#39;,
  opaque: filename
}, ({ statusCode, headers, opaque: filename }) =&amp;gt; {
  console.log(&#39;response received&#39;, statusCode)
  console.log(&#39;headers&#39;, headers)
  return fs.createWriteStream(filename)
}, (err) =&amp;gt; {
  if (err) {
    console.error(&#39;failure&#39;, err)
  } else {
    console.log(&#39;success&#39;)
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;opaque&lt;/code&gt; makes it possible to avoid creating a closure for the &lt;code&gt;factory&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function (req, res) {
   return client.stream({ ...opts, opaque: res }, proxy)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead of:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function (req, res) {
   return client.stream(opts, (data) =&amp;gt; {
     // Creates closure to capture `res`.
     proxy({ ...data, opaque: res })
   }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.pipeline(opts, handler(data)): Duplex&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;For easy use with &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;... same as &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#request&quot;&gt;&lt;code&gt;client.request(opts, callback)&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;objectMode: Boolean&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;handler&lt;/code&gt; will return an object stream. Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;handler&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;body: stream.Readable&lt;/code&gt; response payload. A user &lt;strong&gt;must&lt;/strong&gt; either fully consume or destroy the body unless there is an error, or no further requests will be processed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;handler&lt;/code&gt; should return a &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; from which the result will be read. Usually it should just return the &lt;code&gt;body&lt;/code&gt; argument unless some kind of transformation needs to be performed based on e.g. &lt;code&gt;headers&lt;/code&gt; or &lt;code&gt;statusCode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;handler&lt;/code&gt; should validate the response and save any required state. If there is an error it should be thrown.&lt;/p&gt; 
&lt;p&gt;Returns a &lt;code&gt;Duplex&lt;/code&gt; which writes to the request and reads from the response.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;undici&#39;)
const client = new Client(`http://localhost:3000`)
const fs = require(&#39;fs&#39;)
const stream = require(&#39;stream&#39;)

stream.pipeline(
  fs.createReadStream(&#39;source.raw&#39;),
  client.pipeline({
    path: &#39;/&#39;,
    method: &#39;PUT&#39;,
  }, ({ statusCode, headers, body }) =&amp;gt; {
    if (statusCode !== 201) {
      throw new Error(&#39;invalid response&#39;)
    }

    if (isZipped(headers)) {
      return pipeline(body, unzip(), () =&amp;gt; {})
    }

    return body
  }),
  fs.createWriteStream(&#39;response.raw&#39;),
  (err) =&amp;gt; {
    if (err) {
      console.error(&#39;failed&#39;)
    } else {
      console.log(&#39;succeeded&#39;)
    }
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.upgrade(opts[, callback(err, data)]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Upgrade to a different protocol.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;path: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;method: String&lt;/code&gt; Default: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object|Null&lt;/code&gt;, an object with header-value pairs. Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;signal: AbortSignal|EventEmitter|Null&lt;/code&gt;. Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;protocol: String&lt;/code&gt;, a string of comma separated protocols, in descending preference order. Default: &lt;code&gt;Websocket&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;callback&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;socket: Duplex&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.connect(opts[, callback(err, data)]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Starts two-way communications with the requested resource.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;path: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object|Null&lt;/code&gt;, an object with header-value pairs. Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;signal: AbortSignal|EventEmitter|Null&lt;/code&gt;. Default: &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; parameter in &lt;code&gt;callback&lt;/code&gt; is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object&lt;/code&gt;, an object where all keys have been lowercased.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;socket: Duplex&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opaque: Any&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.dispatch(opts, handler): Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the low level API which all the preceding APIs are implemented on top of.&lt;/p&gt; 
&lt;p&gt;This API is expected to evolve through semver-major versions and is less stable than the preceding higher level APIs. It is primarily intended for library developers who implement higher level APIs on top of this.&lt;/p&gt; 
&lt;p&gt;Multiple handler methods may be invoked in the same tick.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;path: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;method: String&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;body: String|Buffer|Uint8Array|stream.Readable|Null&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;headers: Object|Null&lt;/code&gt;, an object with header-value pairs. Default: &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;idempotent: Boolean&lt;/code&gt;, whether the requests can be safely retried or not. If &lt;code&gt;false&lt;/code&gt; the request won&#39;t be sent until all preceding requests in the pipeline has completed. Default: &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;method&lt;/code&gt; is &lt;code&gt;HEAD&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;handler&lt;/code&gt; parameter is defined as follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onConnect(abort)&lt;/code&gt;, invoked before request is dispatched on socket. May be invoked multiple times when a request is retried when the request at the head of the pipeline fails. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;abort(): Void&lt;/code&gt;, abort request.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onUpgrade(statusCode, headers, socket): Void&lt;/code&gt;, invoked when request is upgraded either due to a &lt;code&gt;Upgrade&lt;/code&gt; header or &lt;code&gt;CONNECT&lt;/code&gt; method. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;headers: Array|Null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;socket: Duplex&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onHeaders(statusCode, headers, resume): Boolean&lt;/code&gt;, invoked when statusCode and headers have been received. May be invoked multiple times due to 1xx informational headers. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;statusCode: Number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;headers: Array|Null&lt;/code&gt;, an array of key-value pairs. Keys are not automatically lowercased.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;resume(): Void&lt;/code&gt;, resume &lt;code&gt;onData&lt;/code&gt; after returning &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onData(chunk): Boolean&lt;/code&gt;, invoked when response payload data is received. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;chunk: Buffer&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onComplete(trailers): Void&lt;/code&gt;, invoked when response payload and trailers have been received and the request has completed. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;trailers: Array|Null&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onError(err): Void&lt;/code&gt;, invoked when an error has occurred. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;err: Error&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The caller is responsible for handling the &lt;code&gt;body&lt;/code&gt; argument, in terms of &lt;code&gt;&#39;error&#39;&lt;/code&gt; events and &lt;code&gt;destroy()&lt;/code&gt;:ing up until the &lt;code&gt;onConnect&lt;/code&gt; handler has been invoked.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.close([callback]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Closes the client and gracefully waits for enqueued requests to complete before invoking the callback.&lt;/p&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.destroy([err][, callback]): Promise|Void&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Destroy the client abruptly with the given &lt;code&gt;err&lt;/code&gt;. All the pending and running requests will be asynchronously aborted and error. Waits until socket is closed before invoking the callback. Since this operation is asynchronously dispatched there might still be some progress on dispatched requests.&lt;/p&gt; 
&lt;p&gt;Returns a promise if no callback is provided.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.url: URL&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Returns url passed to &lt;code&gt;undici.Pool(url, opts)&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.pipelining: Number&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Property to get and set the pipelining factor.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.pending: Number&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Number of queued requests.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.running: Number&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Number of inflight requests.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.size: Number&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Number of pending and running requests.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.connected: Number&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Thruthy if the client has an active connection. The client will lazily create a connection when it receives a request and will destroy it if there is no activity for the duration of the &lt;code&gt;timeout&lt;/code&gt; value.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.busy: Boolean&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;True if pipeline is saturated or blocked. Indicates whether dispatching further requests is meaningful.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.closed: Boolean&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;True after &lt;code&gt;client.close()&lt;/code&gt; has been called.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;client.destroyed: Boolean&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;True after &lt;code&gt;client.destroyed()&lt;/code&gt; has been called or &lt;code&gt;client.close()&lt;/code&gt; has been called and the client shutdown has completed.&lt;/p&gt; 
&lt;h4&gt;Events&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;&#39;drain&#39;&lt;/code&gt;, emitted when pipeline is no longer fully saturated.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;&#39;connect&#39;&lt;/code&gt;, emitted when a socket has been created and connected. The first argument is the &lt;code&gt;Client&lt;/code&gt; instance. The client will connect once &lt;code&gt;client.size &amp;gt; 0&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;&#39;disconnect&#39;&lt;/code&gt;, emitted when socket has disconnected. The first argument of the event is the error which caused the socket to disconnect. The second argument is the &lt;code&gt;Client&lt;/code&gt; instance. The client will reconnect if or once &lt;code&gt;client.size &amp;gt; 0&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;new undici.Pool(url, opts)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;A pool of &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt; connected to the same upstream target. Implements the same api as &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Requests are not guaranteeed to be dispatched in order of invocation.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;... same as &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;connections&lt;/code&gt;, the number of clients to create. Default &lt;code&gt;10&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;new undici.Agent(opts)&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;opts &lt;code&gt;undici.Pool.options&lt;/code&gt; - options passed through to Pool constructor&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns: &lt;code&gt;Agent&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Returns a new Agent instance for use with pool based requests or the following top-level methods &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;, and &lt;code&gt;stream&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;agent.get(origin): Pool&lt;/code&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;origin &lt;code&gt;string&lt;/code&gt; - A pool origin to be retrieved from the Agent.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This method retrieves Pool instances from the Agent. If the pool does not exist it is automatically added. You do not need to manually close these pools as they are automatically removed using a WeakCache based on WeakRef and FinalizationRegistry.&lt;/p&gt; 
&lt;p&gt;The following methods &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;, and &lt;code&gt;stream&lt;/code&gt; utilize this feature.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;agent.close(): Promise&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Returns a &lt;code&gt;Promise.all&lt;/code&gt; operation closing all of the pool instances in the Agent instance. This calls &lt;code&gt;pool.close&lt;/code&gt; under the hood.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;agent.destroy(): Promise&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Returns a &lt;code&gt;Promise.all&lt;/code&gt; operation destroying all of the pool instances in the Agent instance. This calls &lt;code&gt;pool.destroy&lt;/code&gt; under the hood.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.setGlobalAgent(agent)&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;agent &lt;code&gt;Agent&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sets the global agent used by &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;, and &lt;code&gt;stream&lt;/code&gt; methods.&lt;/p&gt; 
&lt;p&gt;The default global agent creates &lt;code&gt;undici.Pool&lt;/code&gt;s with no max number of connections.&lt;/p&gt; 
&lt;p&gt;The agent must only &lt;strong&gt;implement&lt;/strong&gt; the &lt;code&gt;Agent&lt;/code&gt; API; not necessary extend from it.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.request(url[, opts]): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;url &lt;code&gt;string | URL | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;opts &lt;code&gt;{ agent: Agent } &amp;amp; client.request.opts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; may contain path. &lt;code&gt;opts&lt;/code&gt; may not contain path. &lt;code&gt;opts.method&lt;/code&gt; is &lt;code&gt;GET&lt;/code&gt; by default.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;pool.request(opts)&lt;/code&gt; on the pool returned from either the globalAgent (see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#undicisetglobalagentagent&quot;&gt;setGlobalAgent&lt;/a&gt;) or the agent passed to the &lt;code&gt;opts&lt;/code&gt; argument.&lt;/p&gt; 
&lt;p&gt;Returns a promise with the result of the &lt;code&gt;request&lt;/code&gt; method.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.stream(url, opts, factory): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;url &lt;code&gt;string | URL | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;opts &lt;code&gt;{ agent: Agent } &amp;amp; client.stream.opts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;factory &lt;code&gt;client.stream.factory&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; may contain path. &lt;code&gt;opts&lt;/code&gt; may not contain path.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#clientstreamopts-factorydata-callbackerr-promisevoid&quot;&gt;client.stream&lt;/a&gt; for details on the &lt;code&gt;opts&lt;/code&gt; and &lt;code&gt;factory&lt;/code&gt; arguments.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;pool.stream(opts, factory)&lt;/code&gt; on the pool returned from either the globalAgent (see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#undicisetglobalagentagent&quot;&gt;setGlobalAgent&lt;/a&gt;) or the agent passed to the &lt;code&gt;opts&lt;/code&gt; argument.&lt;/p&gt; 
&lt;p&gt;Result is returned in the factory function. See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#clientstreamopts-factorydata-callbackerr-promisevoid&quot;&gt;client.stream&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.pipeline(url, opts, handler): Duplex&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;url &lt;code&gt;string | URL | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;opts &lt;code&gt;{ agent: Agent } &amp;amp; client.pipeline.opts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;handler &lt;code&gt;client.pipeline.handler&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; may contain path. &lt;code&gt;opts&lt;/code&gt; may not contain path.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#clientpipelineopts-handlerdata-duplex&quot;&gt;client.pipeline&lt;/a&gt; for details on the &lt;code&gt;opts&lt;/code&gt; and &lt;code&gt;handler&lt;/code&gt; arguments.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;pool.pipeline(opts, factory)&lt;/code&gt; on the pool returned from either the globalAgent (see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#undicisetglobalagentagent&quot;&gt;setGlobalAgent&lt;/a&gt;) or the agent passed to the &lt;code&gt;opts&lt;/code&gt; argument.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/master/#clientpipelineopts-handlerdata-duplex&quot;&gt;client.pipeline&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;client.upgrade(opts[, callback(err, data)]): Promise|Void&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;url &lt;code&gt;string | URL | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;opts &lt;code&gt;{ agent: Agent } &amp;amp; client.upgrade.opts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; may contain path. &lt;code&gt;opts&lt;/code&gt; may not contain path.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;client.connect(opts[, callback(err, data)]): Promise|Void&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;url &lt;code&gt;string | URL | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;opts &lt;code&gt;{ agent: Agent } &amp;amp; client.connect.opts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; may contain path. &lt;code&gt;opts&lt;/code&gt; may not contain path.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.errors&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Undici exposes a variety of error objects that you can use to enhance your error handling. You can find all the error objects inside the &lt;code&gt;errors&lt;/code&gt; key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { errors } = require(&#39;undici&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Error | Error Codes | Description | | -----------------------------|-----------------------------------|------------------------------------------------| | &lt;code&gt;InvalidArgumentError&lt;/code&gt; | &lt;code&gt;UND_ERR_INVALID_ARG&lt;/code&gt; | passed an invalid argument. | | &lt;code&gt;InvalidReturnValueError&lt;/code&gt; | &lt;code&gt;UND_ERR_INVALID_RETURN_VALUE&lt;/code&gt; | returned an invalid value. | | &lt;code&gt;RequestAbortedError&lt;/code&gt; | &lt;code&gt;UND_ERR_ABORTED&lt;/code&gt; | the request has been aborted by the user | | &lt;code&gt;ClientDestroyedError&lt;/code&gt; | &lt;code&gt;UND_ERR_DESTROYED&lt;/code&gt; | trying to use a destroyed client. | | &lt;code&gt;ClientClosedError&lt;/code&gt; | &lt;code&gt;UND_ERR_CLOSED&lt;/code&gt; | trying to use a closed client. | | &lt;code&gt;SocketError&lt;/code&gt; | &lt;code&gt;UND_ERR_SOCKET&lt;/code&gt; | there is an error with the socket. | | &lt;code&gt;NotSupportedError&lt;/code&gt; | &lt;code&gt;UND_ERR_NOT_SUPPORTED&lt;/code&gt; | encountered unsupported functionality. | | &lt;code&gt;ContentLengthMismatchError&lt;/code&gt; | &lt;code&gt;UND_ERR_CONTENT_LENGTH_MISMATCH&lt;/code&gt;| body does not match content-length header | | &lt;code&gt;InformationalError&lt;/code&gt; | &lt;code&gt;UND_ERR_INFO&lt;/code&gt; | expected error with reason | | &lt;code&gt;TrailerMismatchError&lt;/code&gt; | &lt;code&gt;UND_ERR_TRAILER_MISMATCH&lt;/code&gt; | trailers did not match specification |&lt;/p&gt; 
&lt;h2&gt;Specification Compliance&lt;/h2&gt; 
&lt;p&gt;This section documents parts of the HTTP/1.1 specification which Undici does not support or does not fully implement.&lt;/p&gt; 
&lt;h4&gt;Expect&lt;/h4&gt; 
&lt;p&gt;Undici does not support the &lt;code&gt;Expect&lt;/code&gt; request header field. The request body is always immediately sent and the &lt;code&gt;100 Continue&lt;/code&gt; response will be ignored.&lt;/p&gt; 
&lt;p&gt;Refs: https://tools.ietf.org/html/rfc7231#section-5.1.1&lt;/p&gt; 
&lt;h3&gt;Pipelining&lt;/h3&gt; 
&lt;p&gt;Uncidi will only use pipelining if configured with a &lt;code&gt;pipelining&lt;/code&gt; factor greater than &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Undici always assumes that connections are persistent and will immediately pipeline requests, without checking whether the connection is persistent. Hence, automatic fallback to HTTP/1.0 or HTTP/1.1 without pipelining is not supported.&lt;/p&gt; 
&lt;p&gt;Undici will immediately pipeline when retrying requests afters a failed connection. However, Undici will not retry the first remaining requests in the prior pipeline and instead error the corresponding callback/promise/stream.&lt;/p&gt; 
&lt;p&gt;Refs: https://tools.ietf.org/html/rfc2616#section-8.1.2.2
 &lt;!-- raw HTML omitted --&gt; Refs: https://tools.ietf.org/html/rfc7230#section-6.3.2&lt;/p&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;&lt;strong&gt;Robert Nagy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/%7Eronag&quot;&gt;https://www.npmjs.com/~ronag&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
 &lt;li&gt;First-class integration with the &lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt; for systems with no gas fees!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/audit&quot;&gt;Audited&lt;/a&gt; by leading security firms (&lt;em&gt;last full audit on v2.0.0&lt;/em&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to security@openzeppelin.org.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don&#39;t do &quot;whiteboard&quot; interviews. &quot;Whiteboards&quot; is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.affinity.co/company/careers&quot;&gt;Affinity&lt;/a&gt; | San Francisco, CA | Implementation of a children&#39;s game, then take-home project OR real-world design questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you&#39;re applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; São Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and &quot;meet the team&quot;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate&#39;s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute&#39;s Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We&#39;ll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we&#39;ve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.capitalone.co.uk&quot;&gt;CapitalOne&lt;/a&gt; | Nottingham, UK; London, UK | Paired programming excercise, group task excercise, discussion about projects, current and present.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the avility to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston&#39;s Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia&#39;s Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they&#39;ve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone&#39;s professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate&#39;s achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You&#39;ll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working &quot;sprint&quot; in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash :runner::dash:&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it&#39;s real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, &quot;Resume&quot; interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we&#39;ve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate&#39;s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you&#39;re looking for in your next role, followed by a take-home practical test relevant to the work you&#39;ll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate&#39;s experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, &quot;meet the team&quot; meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interset.com/careers&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a &quot;guest lecture&quot; for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we&#39;ve had to solve in production. Our entire interview process and what we&#39;re looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft&#39;s Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate&#39;s completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate&#39;s previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate&#39;s experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you&#39;ll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nanobox.io&quot;&gt;Nanobox&lt;/a&gt; | Lehi, UT; Remote | A phone/video/person-to–person interview with a look at past projects (github, bitbucket, source code, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee&#39;s platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.netflix.com/jobs/867042&quot;&gt;Netflix&lt;/a&gt; | Los Gatos, CA | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and our director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA | Paid takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there&#39;s a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O&#39;Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming...&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site &quot;meet the team&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and &quot;soft skills&quot; interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/careers&quot;&gt;Pluralsight&lt;/a&gt; | Salt Lake City, UT; San Francisco, CA; Boston, MA; Orlando, FL | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pointman.bamboohr.com/jobs/&quot;&gt;Pointman&lt;/a&gt; | Buffalo, NY | Takehome exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate&#39;s profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta&#39; Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we&#39;ve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simple.com&quot;&gt;Simple&lt;/a&gt; | Portland, OR | Discussion about software development and architecture skills and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen --&amp;gt; Take-home coding assignment --&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams --&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn&#39;t include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal &quot;Meet the Team&quot; meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they’re looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let&#39;s pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It’s followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product&#39;s domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that&#39;s representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards&quot;&gt;&lt;img src=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; · &lt;a href=&quot;https://github.com/facebook/react/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render &quot;Hello Taylor&quot; into a container on the page.&lt;/p&gt; 
&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
