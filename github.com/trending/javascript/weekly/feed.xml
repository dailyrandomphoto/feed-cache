<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 23 Oct 2021 02:21:14 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;The fastest way to build Svelte apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;SvelteKit is still in beta. Expect bugs! Read more &lt;a href=&quot;https://svelte.dev/blog/sveltekit-beta&quot;&gt;here&lt;/a&gt;, and track progress towards 1.0 &lt;a href=&quot;https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://kit.svelte.dev/docs&quot;&gt;the documentation&lt;/a&gt; for information about getting started and developing with SvelteKit.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Changelog&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit&quot;&gt;@sveltejs/kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte&quot;&gt;create-svelte&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node&quot;&gt;@sveltejs/adapter-node&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static&quot;&gt;@sveltejs/adapter-static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers&quot;&gt;@sveltejs/adapter-cloudflare-workers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify&quot;&gt;@sveltejs/adapter-netlify&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel&quot;&gt;@sveltejs/adapter-vercel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The SvelteKit community also makes additional &lt;a href=&quot;https://sveltesociety.dev/components#adapters&quot;&gt;SvelteKit adapters available for use&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bug reporting&lt;/h2&gt; 
&lt;p&gt;Please make sure the issue you&#39;re reporting involves SvelteKit. Many issues related to how a project builds originate from &lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt;, which SvelteKit uses to build a project. It&#39;s important to note that new Vite projects don&#39;t use SSR by default and so if you create a new Vite project from scratch many issues won&#39;t reproduce eventhough they&#39;re caused by Vite. You should thus start with a project that utilizes SSR such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GrygrFlzr/vite-ssr-d3&quot;&gt;https://github.com/GrygrFlzr/vite-ssr-d3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&quot;&gt;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If an issue is caused by Vite, please report in the &lt;a href=&quot;https://github.com/vitejs/vite/issues&quot;&gt;Vite issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;This is a monorepo meaning the repo holds multiple packages. It requires the use of &lt;a href=&quot;https://pnpm.js.org/en/&quot;&gt;pnpm&lt;/a&gt;. You can &lt;a href=&quot;https://pnpm.io/installation&quot;&gt;install pnpm&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;pnpm&lt;/code&gt; commands run in the project&#39;s root directory will run on all sub-projects. You can checkout the code and build all sub-projects with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:sveltejs/kit.git
cd kit
pnpm install
pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be able to run &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/examples/hn.svelte.dev&quot;&gt;the example&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd examples/hn.svelte.dev
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; inside the &lt;code&gt;packages/kit&lt;/code&gt; directory to continually rebuild &lt;code&gt;@sveltejs/kit&lt;/code&gt; as you make changes to SvelteKit. Restarting the example/test apps will cause the newly built version to be used.&lt;/p&gt; 
&lt;p&gt;To use the git hooks in the repo, which will save you waiting for CI to tell you that you forgot to lint, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config core.hookspath .githooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Coding style&lt;/h3&gt; 
&lt;p&gt;There are a few guidelines we follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Internal variables are written with &lt;code&gt;snake_case&lt;/code&gt; while external APIs are written with &lt;code&gt;camelCase&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Provide a single object as the argument to public APIs. This object can have multiple properties&lt;/li&gt; 
 &lt;li&gt;Avoid creating new test projects under &lt;code&gt;packages/kit/test/apps&lt;/code&gt; but reuse an existing one when possible&lt;/li&gt; 
 &lt;li&gt;Ensure &lt;code&gt;pnpm lint&lt;/code&gt; and &lt;code&gt;pnpm check&lt;/code&gt; pass. You can run &lt;code&gt;pnpm format&lt;/code&gt; to format the code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Generating changelogs&lt;/h3&gt; 
&lt;p&gt;For changes to be reflected in package changelogs, run &lt;code&gt;pnpx changeset&lt;/code&gt; and follow the prompts. All changesets should be &lt;code&gt;patch&lt;/code&gt; until SvelteKit 1.0&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm test&lt;/code&gt; to run the tests from all subpackages. Browser tests live in subdirectories of &lt;code&gt;packages/kit/test&lt;/code&gt; such as &lt;code&gt;packages/kit/test/apps/basics&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the tests for only a single package by first moving to that directory. E.g. &lt;code&gt;cd packages/kit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You must rebuild each time before running the tests if you&#39;ve made code changes.&lt;/p&gt; 
&lt;p&gt;To run a single integration test, provide the &lt;code&gt;FILTER&lt;/code&gt; env var with the test name. E.g. &lt;code&gt;FILTER=&quot;includes paths&quot; pnpm test:integration&lt;/code&gt;. You can also open up the file and change &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test.only&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the test server with &lt;code&gt;cd packages/kit/test/apps/basics; pnpm run dev&lt;/code&gt; to hit it with your browser.&lt;/p&gt; 
&lt;p&gt;You may need to install some dependencies first e.g. with &lt;code&gt;npx playwright install-deps&lt;/code&gt; (which only works on Ubuntu).&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;All documentation for SvelteKit is in the &lt;code&gt;documentation&lt;/code&gt; directory, any improvements should be made as a Pull Request to this repository. The documentation is served via and API, the site itself is located in the &lt;a href=&quot;https://github.com/sveltejs/sites&quot;&gt;&lt;code&gt;sites&lt;/code&gt; repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you wish to preview documentation changes locally, please follow the instructions here: &lt;a href=&quot;https://github.com/sveltejs/sites/raw/master/sites/kit.svelte.dev/README.md#previewing-local-docs-changes&quot;&gt;Previewing local docs changes&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Releases&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/changesets/action#with-publishing&quot;&gt;Changesets GitHub action&lt;/a&gt; will create and update a PR that applies changesets and publishes new versions of changed packages to npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It uses &lt;code&gt;pnpm publish&lt;/code&gt; rather than &lt;code&gt;pnpx changeset publish&lt;/code&gt; so that we can use the &lt;code&gt;--filter&lt;/code&gt; and (while in beta) &lt;code&gt;--tag&lt;/code&gt; flags — though perhaps they work with &lt;code&gt;pnpx changeset publish&lt;/code&gt;?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;New packages will need to be published manually the first time if they are scoped to the &lt;code&gt;@sveltejs&lt;/code&gt; organisation, by running this from the package directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm publish --access=public
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Code structure&lt;/h2&gt; 
&lt;p&gt;Entry points to be aware of are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/create-svelte&quot;&gt;&lt;code&gt;packages/create-svelte&lt;/code&gt;&lt;/a&gt; - code that&#39;s run when you create a new project with &lt;code&gt;npm init svelte@next&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/packaging&quot;&gt;&lt;code&gt;packages/kit/src/packaging&lt;/code&gt;&lt;/a&gt; - for the &lt;code&gt;svelte-kit package&lt;/code&gt; command&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/raw/master/packages/kit/src/core/dev/index.js&quot;&gt;&lt;code&gt;packages/kit/src/core/dev/index.js&lt;/code&gt;&lt;/a&gt; - for the dev-mode server&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/raw/master/packages/kit/src/core/build/index.js&quot;&gt;&lt;code&gt;packages/kit/src/core/build/index.js&lt;/code&gt;&lt;/a&gt; - for the production server&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages&quot;&gt;&lt;code&gt;packages/adapter-[platform]&lt;/code&gt;&lt;/a&gt; - for the various SvelteKit-provided adapters&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most code that&#39;s called at build-time or from the CLI entry point lives in &lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/core&quot;&gt;packages/kit/src/core&lt;/a&gt;. Code that runs for rendering and routing lives in &lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/runtime&quot;&gt;packages/kit/src/runtime&lt;/a&gt;. Most changes to SvelteKit itself would involve code in these two directories.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDHelloWorld/jd_scripts</title>
      <link>https://github.com/JDHelloWorld/jd_scripts</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jd_scripts&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;无内置shareCodes&lt;/li&gt; 
  &lt;li&gt;使用助力池&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Warning&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;带助力功能的脚本要使用本仓库的，其他仓库的没有对接助力池&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;IOS三件套在仓库内有订阅配置文件&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;新脚本使用&lt;a href=&quot;https://www.tslang.cn/&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;whoami&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;let name: string = &quot;JDHelloWorld.TS&quot;;
console.log(name);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ccwav/QLScript2</title>
      <link>https://github.com/ccwav/QLScript2</link>
      <description>&lt;p&gt;新QLScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QLScript_New&lt;/h1&gt; 
&lt;p&gt;青龙拉库命令:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;不包含sendNotify:

ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;NoUsed&quot; &quot;ql|utils&quot;

包含sendNotify:

ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;NoUsed&quot; &quot;ql|sendNotify|utils&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;频道:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://t.me/ccwav
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;1. 注意事项:&lt;/h1&gt; 
&lt;p&gt;（1）如果发现账户名称不能被正确处理，请手动删除ql\scripts\CKName_cache.json 文件.&lt;/p&gt; 
&lt;p&gt;（2）另外某些账号如果服务器返回空有可能不会被正确处理，请知悉.&lt;/p&gt; 
&lt;p&gt;（3）ql.js 是jd_CheckCK.js和sendNotify.js的依赖, 只要你使用了这两个脚本就一定保证放在同个文件夹里面.&lt;/p&gt; 
&lt;p&gt;（4）使用Ninjia要注意Extra.sh中把 cp sendNotify.js /ql/scripts/sendNotify.js 这一句删除，不然每次重启容器sendNotify.js都会被覆盖.&lt;/p&gt; 
&lt;p&gt;（5）如果用不同的通知类型分组，比如TG作为组1，企业微信作为组2，且之前已经设置过企业微信通知的参数QYWX_AM，请先将QYWX_AM置空（export QYWX_AM=&quot;&quot;），再设置组2的企业微信参数QYWX_AM2（export QYWX_AM2=&quot;abcdef&quot;）。否则原有的QYWX_AM参数仍在生效中，导致企业微信仍然接受到组1的通知.(来自Windstill的惨痛经历)&lt;/p&gt; 
&lt;h1&gt;2. 关于群组&lt;/h1&gt; 
&lt;p&gt;原通知配置变量加上数字，组成新的通知群组.通知脚本目前支援5组变量.&lt;/p&gt; 
&lt;p&gt;例子:企业微信配置了QYWX_AM和QYWX_AM2,兑换通知时推送到的QYWX_AM2配置的企业微信.即群组2.&lt;/p&gt; 
&lt;p&gt;(PS:例子使用了企业微信的变量QYWX_AM,实际是所有推送变量后加数字都会有效.)&lt;/p&gt; 
&lt;h1&gt;3. jd_bean_change.js&lt;/h1&gt; 
&lt;p&gt;京东资产变动 + 白嫖榜 + 京东月资产变动,注意事项:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;如果你遇到TG Bark报错，那是因为报文过长，请使用分段通知功能.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;变量列表:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(1) EANCHANGE_PERSENT  分段通知	
    例子 :  export BEANCHANGE_PERSENT=&quot;10&quot;  	
    总共有22个账号,结果会分成3条推送通知，1~10为第一条推送，11~20为第二条推送，剩余的为第三条推送

(2) BEANCHANGE_USERGP2 BEANCHANGE_USERGP3 BEANCHANGE_USERGP4  根据Pt_Pin的值进行分组通知
    注意：分组通知会强制禁用BEANCHANGE_PERSENT变量!	
    分组通知的通知标题为 脚本名+&quot;#&quot;+分组数值
    主要用于搭配通知脚本的分组通知使用.

(3) BEANCHANGE_ENABLEMONTH
    每月1号17点后如果执行资产查询，开启京东月资产变动的统计和推送.	
    拆分通知和分组通知的变量都可以兼容.	
    标题按照分组分别为 京东月资产变动 京东月资产变动#2 京东月资产变动#3 京东月资产变动#4	
    开启 :  export BEANCHANGE_ENABLEMONTH=&quot;true&quot;  	
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;4. jd_CheckCK.js&lt;/h1&gt; 
&lt;p&gt;京东CK检测,不正常的自动禁用，正常的如果是禁用状态则自动启用.配合通知脚本CK触发使用.也可以直接task. 兼容jd_bean_change的BEANCHANGE_USERGP2 BEANCHANGE_USERGP3 BEANCHANGE_USERGP4变量. 变量列表:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;显示正常CK:  export CHECKCK_SHOWSUCCESSCK=&quot;true&quot;
永远通知CK状态:  export CHECKCK_CKALWAYSNOTIFY=&quot;true&quot;
停用自动启用CK:  export CHECKCK_CKAUTOENABLE=&quot;false&quot;	
服务器空数据等错误不触发通知:  export CHECKCK_CKNOWARNERROR=&quot;true&quot;

BEANCHANGE_USERGP2 BEANCHANGE_USERGP3 BEANCHANGE_USERGP4  根据Pt_Pin的值进行分组通知        
分组通知的通知标题为 脚本名+&quot;#&quot;+分组数值
主要用于搭配通知脚本的分组通知使用.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;5. sendNotify.js&lt;/h1&gt; 
&lt;p&gt;发送通知脚本Pro.&lt;/p&gt; 
&lt;p&gt;变量列表:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(1) NOTIFY_SKIP_LIST
如果通知标题在此变量里面存在(&amp;amp;隔开),则用屏蔽不发送通知.(PS: Ningjia 作者写的功能，继承过来.)	
例子 :  export NOTIFY_SKIP_LIST=&quot;京东CK检测&amp;amp;京东资产变动&quot;

(2) NOTIFY_GROUP2_LIST NOTIFY_GROUP3_LIST NOTIFY_GROUP4_LIST NOTIFY_GROUP5_LIST NOTIFY_GROUP6_LIST
如果通知标题在此变量里面存在(&amp;amp;隔开),则用第2/3/4/5/6套推送变量进行配置.

(3) NOTIFY_SHOWNAMETYPE
export NOTIFY_SHOWNAMETYPE=&quot;1&quot;    不做任何变动
export NOTIFY_SHOWNAMETYPE=&quot;2&quot;    效果是 :  账号名称：别名(备注)	
export NOTIFY_SHOWNAMETYPE=&quot;3&quot;    效果是 :  账号名称：pin(备注)
export NOTIFY_SHOWNAMETYPE=&quot;4&quot;    效果是 :  账号名称：备注

(4) NOTIFY_SKIP_NAMETYPELIST
单独指定某些脚本不做NOTIFY_SHOWNAMETYPE变量处理
  例子 :  export NOTIFY_SKIP_NAMETYPELIST=&quot;东东农场&amp;amp;东东工厂&quot;

(5) 特殊标题控制，可以自行加载到第二点的变量中控制
东东农场领取 东东萌宠领取 京喜工厂领取 汪汪乐园养joy领取 脚本任务更新

(6) NOTIFY_NOREMIND
对 东东农场领取 东东萌宠领取 京喜工厂领取 汪汪乐园养joy领取 脚本任务更新的通知进行屏蔽,可自行删减.	
export NOTIFY_NOREMIND=&quot;京喜工厂领取&amp;amp;汪汪乐园养joy领取&quot;

(7) NOTIFY_NOCKFALSE
屏蔽任务脚本的ck失效通知
export NOTIFY_NOCKFALSE=&quot;true&quot;

(8) NOTIFY_AUTHOR
指定通知底部显示 本通知 By 后面显示的字符,默认是ccwav Mod

(9) NOTIFY_NOLOGINSUCCESS
屏蔽青龙登陆成功通知，登陆失败不屏蔽(新版貌似可以直接设定了)
export NOTIFY_NOLOGINSUCCESS=&quot;true&quot; 

(10) NOTIFY_CUSTOMNOTIFY
强大的自定义通知，格式为 脚本名称&amp;amp;推送组别&amp;amp;推送类型 (推送组别总共5组)
推送类型: Server酱&amp;amp;pushplus&amp;amp;pushplushxtrip&amp;amp;Bark&amp;amp;TG机器人&amp;amp;钉钉&amp;amp;企业微信机器人&amp;amp;企业微信应用消息&amp;amp;iGotNotify&amp;amp;gobotNotify&amp;amp;WxPusher
export NOTIFY_CUSTOMNOTIFY=[&quot;京东资产变动&amp;amp;组1&amp;amp;Server酱&amp;amp;Bark&amp;amp;企业微信应用消息&quot;,&quot;京东白嫖榜&amp;amp;组2&amp;amp;钉钉&amp;amp;pushplus&quot;] 

(11) NOTIFY_CKTASK
当接收到发送CK失效通知和Ninja 运行通知时候执行子线程任务,支持js py ts 
例子: export NOTIFY_CKTASK=&quot;jd_CheckCK.js&quot;

(12) PUSH_PLUS_TOKEN_hxtrip 和 PUSH_PLUS_USER_hxtrip
增加pushplus.hxtrip.com的推送加接口，貌似更稳定,注意这个和PUSHPLUS不是同一家.

(13) 用 WxPusher 进行一对一推送
填写变量 WP_APP_TOKEN_ONE,可在管理台查看: https://wxpusher.zjiecode.com/admin/main/app/appToken
手动建立CK_WxPusherUid.json,可以参考CKName_cache.json,只是nickName改成Uid，
每个用户的uid可在管理台查看: https://wxpusher.zjiecode.com/admin/main/wxuser/list
CK_WxPusherUid.json 内容:
[
  {
	&quot;pt_pin&quot;: &quot;ccwav&quot;,
	&quot;Uid&quot;: &quot;UID_AAAAAAAA&quot;
  },
  {
	&quot;pt_pin&quot;: &quot;ccwav2&quot;,
	&quot;Uid&quot;: &quot;BBBBBBBBBB&quot;
  }
]

(14) NOTIFY_SKIP_TEXT
如果此变量(&amp;amp;隔开)的关键字在通知内容里面存在,则屏蔽不发送通知.
例子 :  export NOTIFY_SKIP_TEXT=&quot;忘了种植&amp;amp;异常&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;6. jd_speed_sign_Part1~jd_speed_sign_Part3&lt;/h1&gt; 
&lt;p&gt;简单粗暴的极速版的分任务版，将总ck数除以3后平均分配成三个任务同时执行.&lt;/p&gt; 
&lt;p&gt;如果使用请务必禁用其他库的jd_speed_sign脚本.感谢jd_speed_sign原作者。&lt;/p&gt; 
&lt;p&gt;例子 : 有24个ck，则Part1 执行1&lt;del&gt;8,Part2 执行9&lt;/del&gt;16，Part3 执行17以后剩下的所有ck.&lt;/p&gt; 
&lt;h1&gt;7. jd_priceProtect_Mod.js&lt;/h1&gt; 
&lt;p&gt;京东价格保护通知版,仅仅是保价成功加上了通知，改了执行时间,没有什么技术含量...&lt;/p&gt; 
&lt;h1&gt;8. jd_big_winner_Mod.js&lt;/h1&gt; 
&lt;p&gt;省钱大赢家之翻翻乐分组版本,兼容资产通知查询的分组变量BEANCHANGE_USERGP2 ~ BEANCHANGE_USERGP4&lt;/p&gt; 
&lt;p&gt;标题为省钱大赢家之翻翻乐 省钱大赢家之翻翻乐#2 省钱大赢家之翻翻乐#3 省钱大赢家之翻翻乐#4&lt;/p&gt; 
&lt;h1&gt;9. jd_joy_reward_Mod.js&lt;/h1&gt; 
&lt;p&gt;宠汪汪积分兑换有就换版&lt;/p&gt; 
&lt;p&gt;变量列表:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export JOY_GET20WHEN16=&quot;true&quot;  
控制16点才触发20京豆兑换.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;分组应用总结实例:&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;##CK失效时执行脚本
export NOTIFY_CKTASK=&quot;ccwav_QLScript2_jd_CheckCK.js&quot;

##开启月结资产推送
export BEANCHANGE_ENABLEMONTH=&quot;true&quot;

##分组2推送    
export QYWX_AM2=&quot;&quot;
export PUSH_PLUS_TOKEN2=&quot;ABCDEFGHIJKLMN&quot;
export PUSH_PLUS_USER2=&quot;Group2&quot;;
export BEANCHANGE_USERGP2=&quot;账号1pin&amp;amp;账号5pin&amp;amp;账号8pin&quot;
export NOTIFY_GROUP2_LIST=&quot;京东资产变动#2&amp;amp;京东白嫖榜#2&amp;amp;京东月资产变动#2&amp;amp;省钱大赢家之翻翻乐#2&amp;amp;京东CK检测#2&quot;

##分组3推送
export QYWX_AM3=&quot;&quot;
export PUSH_PLUS_TOKEN3=&quot;ABCDEFGHIJKLMN&quot;
export PUSH_PLUS_USER3=&quot;Group3&quot;;
export BEANCHANGE_USERGP2=&quot;账号2pin&amp;amp;账号3pin&amp;amp;账号4pin&quot;
export NOTIFY_GROUP3_LIST=&quot;京东资产变动#3&amp;amp;京东白嫖榜#3&amp;amp;京东月资产变动#3&amp;amp;省钱大赢家之翻翻乐#3&amp;amp;京东CK检测#3&quot;

##分组4推送
export QYWX_AM4=&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaxxxxxxx&quot;
export BEANCHANGE_USERGP4=&quot;账号10pin&amp;amp;账号11pin&amp;amp;账号12pin&quot;
export NOTIFY_GROUP4_LIST=&quot;京东资产变动#4&amp;amp;京东白嫖榜#4&amp;amp;京东月资产变动#4&amp;amp;省钱大赢家之翻翻乐#4&amp;amp;Ninja 运行通知&amp;amp;京东CK检测#4&quot;

##分组5推送
export QYWX_AM5=&quot;&quot;
export PUSH_PLUS_TOKEN5=&quot;ABCDEFGHIJKLMN&quot;
export PUSH_PLUS_USER5=&quot;Group5&quot;;
export NOTIFY_GROUP5_LIST=&quot;京东资产变动&amp;amp;京东白嫖榜&amp;amp;京东月资产变动&amp;amp;省钱大赢家之翻翻乐&amp;amp;京东CK检测&quot;

 
##分组6推送
export QYWX_AM6=&quot;bbbbbbbbbbbbbbbbbbsccccccccccccccccc&quot;
export NOTIFY_GROUP6_LIST=&quot;东东农场领取&amp;amp;东东萌宠领取&amp;amp;汪汪乐园养joy领取&amp;amp;脚本任务更新&quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&quot;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&quot;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random&quot;&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items&#39; weights&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Access&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Search&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Insertion&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Deletion&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Best&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Average&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Worst&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Memory&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Stable&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ❤️️ &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 0&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ℹ️ A few more &lt;a href=&quot;https://trekhleb.dev/projects/&quot;&gt;projects&lt;/a&gt; and &lt;a href=&quot;https://trekhleb.dev/blog/&quot;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&quot;https://trekhleb.dev&quot;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Aaron-lv/sync</title>
      <link>https://github.com/Aaron-lv/sync</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;仓库脚本已内置本人远程助力地址和助力码，请不要使用！！！请不要使用！！！请不要使用！！！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/zt-rnuegz5e-FQpc6YboDVW~5idlp7GfDw&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/vy29n6aj/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glixzzy/blooket-hack</title>
      <link>https://github.com/glixzzy/blooket-hack</link>
      <description>&lt;p&gt;Multiple hacks that breaks the game&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Discord server: &lt;a href=&quot;https://discord.gg/E7cmjUG9Gs&quot;&gt;https://discord.gg/E7cmjUG9Gs&lt;/a&gt;&lt;/strong&gt; discord server is not related to this repo&lt;/p&gt; 
&lt;h1&gt;Blooket-Hack&lt;/h1&gt; 
&lt;p&gt;All of the cheats are based on a game mode.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If anything isn&#39;t working please make a issue after checking with the FAQ: &lt;a href=&quot;https://github.com/glixzzy/blooket-hack/issues&quot;&gt;https://github.com/glixzzy/blooket-hack/issues&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;scroll down for video tutorial&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;How to run&lt;/h1&gt; 
&lt;p&gt;note: &lt;strong&gt;TURN YOUR AD BLOCKER OFF OR IT WON&#39;T WORK!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Open console and paste this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;fetch(&quot;https://raw.githubusercontent.com/glixzzy/blooket-hack/main/main.js&quot;)
.then((res) =&amp;gt; res.text()
.then((t) =&amp;gt; eval(t)))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Video Tutorial&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/73669084/137641316-ad4f1cbb-0f3d-46e2-83a7-74b7e8b9dd3c.mp4&quot;&gt;https://user-images.githubusercontent.com/73669084/137641316-ad4f1cbb-0f3d-46e2-83a7-74b7e8b9dd3c.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Bookmarklet tutorial:&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://streamable.com/t4u7i7&quot;&gt;https://streamable.com/t4u7i7&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make a bookmark (the star on the right side of the url bar if you are using chrome)&lt;/li&gt; 
 &lt;li&gt;Click on more at the bottom left corner&lt;/li&gt; 
 &lt;li&gt;Delete everything in the url box&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;javascript:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Paste in the code&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Frequently Asked Questions&lt;/h1&gt; 
&lt;p&gt;Note: Before you make an issue or ask someone on the support server, please go through the FAQ to check if it is in here. Thank you.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: The all permanent blooks isn&#39;t working!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, it was a joke and does not permanently work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is there any way to bypass the 500 token per day limit or change the time before reset timer?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Nope! This is simply not possible, because it is server-side.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I make custom blook skins and use them in game?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes and no. This is possible even without these hacks, if you gain enough xp through grinding or using the addTokens hack, you will be able to make your own custom blooks under the Stats tab on Blooket. But if you are trying to upload your own fully custom blooks, this is not currently possible, as all blooks are server-side.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Ahhh! My account was banned! Was I just banned for hacking blooket?&lt;/strong&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/92130749/136484808-0dada02e-ae99-49cd-b036-d2a13c8c9684.png&quot; alt=&quot;Screen Shot 2021-10-07 at 6 39 06 PM&quot;&gt;&lt;/p&gt; 
&lt;p&gt;A: Probably not, this is a bug that is going around that doesn&#39;t let you in your account for a short period of time. The best thing to do is just wait it out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitSquared/edex-ui</title>
      <link>https://github.com/GitSquared/edex-ui</link>
      <description>&lt;p&gt;A cross-platform, customizable science fiction terminal emulator with advanced monitoring &amp; touchscreen support.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;br&gt; &lt;img alt=&quot;Logo&quot; src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/logo.png&quot;&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;amp;logoWidth=18&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/latest&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Windows/?color=blue&amp;amp;icon=windows&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/macOS/?color=grey&amp;amp;icon=apple&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Linux64/?color=orange&amp;amp;icon=terminal&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;amp;icon=terminal&amp;amp;label&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/AUR/Package/cyan&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&quot;&gt;&lt;strong&gt;&lt;i&gt;(Project archived oct. 18th 2021)&lt;/i&gt;&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p&gt;eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.&lt;/p&gt; 
&lt;hr&gt; 
&lt;a href=&quot;https://youtu.be/BGeY1rK19zA&quot;&gt; &lt;img align=&quot;right&quot; width=&quot;400&quot; alt=&quot;Demo on YouTube&quot; src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/youtube-demo-teaser.gif&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Heavily inspired from the &lt;a href=&quot;https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671&quot;&gt;TRON Legacy movie effects&lt;/a&gt; (especially the &lt;a href=&quot;https://gmunk.com/TRON-Board-Room&quot;&gt;Board Room sequence&lt;/a&gt;), the eDEX-UI project was originally meant to be &lt;em&gt;&quot;&lt;a href=&quot;https://github.com/seenaburns/dex-ui&quot;&gt;DEX-UI&lt;/a&gt; with less « art » and more « distributable software »&quot;&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;It might or might not be a joke taken too seriously.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;em&gt;Jump to: &lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#features&quot;&gt;Features&lt;/a&gt; — &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#screenshots&quot;&gt;Screenshots&lt;/a&gt; — &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#qa&quot;&gt;Questions &amp;amp; Answers&lt;/a&gt; — &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; — &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#featured-in&quot;&gt;Featured In&lt;/a&gt; — &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#useful-commands-for-the-nerds&quot;&gt;Contributor Instructions&lt;/a&gt; — &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Click the banner below and sign up to &lt;strong&gt;Bytes&lt;/strong&gt;, the only newsletter cool enough to be recommended by eDEX-UI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ui.dev/bytes/?r=gabriel&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/sponsor-uidev-bytes.jpg&quot; alt=&quot;Bytes by UI.dev&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully featured terminal emulator with tabs, colors, mouse events, and support for &lt;code&gt;curses&lt;/code&gt; and &lt;code&gt;curses&lt;/code&gt;-like applications.&lt;/li&gt; 
 &lt;li&gt;Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.&lt;/li&gt; 
 &lt;li&gt;Full support for touch-enabled displays, including an on-screen keyboard.&lt;/li&gt; 
 &lt;li&gt;Directory viewer that follows the CWD (current working directory) of the terminal.&lt;/li&gt; 
 &lt;li&gt;Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki&quot;&gt;wiki&lt;/a&gt; for more info.&lt;/li&gt; 
 &lt;li&gt;Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_default.png&quot; alt=&quot;Default screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt; on eDEX-UI 2.2 with the default &quot;tron&quot; theme &amp;amp; QWERTY keyboard&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_blade.png&quot; alt=&quot;Blade screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Checking out available themes in &lt;a href=&quot;https://github.com/GitSquared/edex-ui/wiki/userData&quot;&gt;eDEX&#39;s config dir&lt;/a&gt; with &lt;a href=&quot;https://github.com/ranger/ranger&quot;&gt;&lt;code&gt;ranger&lt;/code&gt;&lt;/a&gt; on eDEX-UI 2.2 with the &quot;blade&quot; theme&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_disrupted.png&quot; alt=&quot;Disrupted screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/abishekvashok/cmatrix&quot;&gt;cmatrix&lt;/a&gt; on eDEX-UI 2.2 with the experimental &quot;tron-disrupted&quot; theme, and the user-contributed DVORAK keyboard&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/media/screenshot_horizon.png&quot; alt=&quot;Horizon screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Editing eDEX-UI source code with &lt;code&gt;nvim&lt;/code&gt; on eDEX-UI 2.2 with the custom &lt;a href=&quot;https://github.com/GitSquared/horizon-edex-theme&quot;&gt;&lt;code&gt;horizon-full&lt;/code&gt;&lt;/a&gt; theme&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; 
&lt;h4&gt;How do I get it?&lt;/h4&gt; 
&lt;p&gt;Click on the little badges under the eDEX logo at the top of this page, or go to the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases&quot;&gt;Releases&lt;/a&gt; tab, or download it through &lt;a href=&quot;https://repology.org/project/edex-ui/versions&quot;&gt;one of the available repositories&lt;/a&gt; (Homebrew, AUR...).&lt;/p&gt; 
&lt;p&gt;Public release binaries are unsigned (&lt;a href=&quot;https://gaby.dev/posts/code-signing&quot;&gt;why&lt;/a&gt;). On Linux, you will need to &lt;code&gt;chmod +x&lt;/code&gt; the AppImage file in order to run it.&lt;/p&gt; 
&lt;h4&gt;I have a problem!&lt;/h4&gt; 
&lt;p&gt;Search through the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues&quot;&gt;Issues&lt;/a&gt; to see if yours has already been reported. If you&#39;re confident it hasn&#39;t been reported yet, feel free to open up a new one. If you see your issue and it&#39;s been closed, it probably means that the fix for it will ship in the next version, and you&#39;ll have to wait a bit.&lt;/p&gt; 
&lt;h4&gt;Can you disable the keyboard/the filesystem display?&lt;/h4&gt; 
&lt;p&gt;You can&#39;t disable them (yet) but you can hide them. See the &lt;code&gt;tron-notype&lt;/code&gt; theme.&lt;/p&gt; 
&lt;h4&gt;Why is the file browser saying that &quot;Tracking Failed&quot;? (Windows only)&lt;/h4&gt; 
&lt;p&gt;On Linux and macOS, eDEX tracks where you&#39;re going in your terminal tab to display the content of the current folder on-screen. Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &quot;detached&quot; mode. You can still use it to browse files &amp;amp; directories and click on files to input their path in the terminal.&lt;/p&gt; 
&lt;h4&gt;Can this run on a Raspberry Pi / ARM device?&lt;/h4&gt; 
&lt;p&gt;We provide prebuilt arm64 builds. For other platforms, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345&quot;&gt;this issue comment&lt;/a&gt;, and the thread on issue &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/818&quot;&gt;#818&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Is this repo actively maintained?&lt;/h4&gt; 
&lt;p&gt;No, after a 3 years run, this project has been archived. See the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&quot;&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;How did you make this?&lt;/h4&gt; 
&lt;p&gt;Glad you&#39;re interested! See &lt;a href=&quot;https://github.com/GitSquared/edex-ui/issues/272&quot;&gt;#272&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;This is so cool.&lt;/h4&gt; 
&lt;p&gt;Thanks! If you feel like it, you can &lt;a href=&quot;https://gaby.dev/twitter&quot;&gt;follow me on Twitter&lt;/a&gt; to hear about new stuff I&#39;m making.&lt;/p&gt; 
&lt;img width=&quot;220&quot; src=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot;&gt; 
&lt;h2&gt;Featured in...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html&quot;&gt;Linux Uprising Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/&quot;&gt;My post on r/unixporn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html&quot;&gt;Korben article (in french)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18509828&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mikemaccana/status/1065615451940667396&quot;&gt;This tweet that made me smile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boingboing.net/2018/11/23/simulacrum-sf.html&quot;&gt;BoingBoing article&lt;/a&gt; - Apparently i&#39;m a &quot;French hacker&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/ideas/four-short-links-23-november-2018&quot;&gt;OReilly 4 short links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hackaday.com/2018/11/23/look-like-a-movie-hacker/&quot;&gt;Hackaday&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/&quot;&gt;Developpez.com (another french link)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.github.com/2018-12-21-release-radar-november-2018/&quot;&gt;GitHub Blog&#39;s Release Radar November 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opensource.com/article/19/1/productivity-tool-edex-ui&quot;&gt;opensource.com Productive Tools for 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/radar/four-short-links-7-july-2020/&quot;&gt;O&#39;Reilly 4 short links (again)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/&quot;&gt;LinuxLinks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gbzqCAjm--g&quot;&gt;Linux For Everyone (Youtube)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://risingstars.js.org/2020/en#edex-ui&quot;&gt;BestOfJS Rising Stars 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/TSjMIeLG0Sk&quot;&gt;The Geek Freaks (Youtube/German)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osawards.com/javascript/#nominees&quot;&gt;JSNation Open Source Awards 2021&lt;/a&gt; (Nominee - Fun Side Project of the Year)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Useful commands for the nerds&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#39;d like to get stable software instead, refer to &lt;a href=&quot;https://raw.githubusercontent.com/GitSquared/edex-ui/master/#how-do-i-get-it&quot;&gt;these&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;h4&gt;Starting from source:&lt;/h4&gt; 
&lt;p&gt;on *nix systems (You&#39;ll need the Xcode command line tools on macOS):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-linux&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;on Windows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;start cmd or powershell &lt;strong&gt;as administrator&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-windows&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Building&lt;/h4&gt; 
&lt;p&gt;Note: Due to native modules, you can only build targets for the host OS you are using.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (NOT &lt;code&gt;install-linux&lt;/code&gt; or &lt;code&gt;install-windows&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run build-linux&lt;/code&gt; or &lt;code&gt;build-windows&lt;/code&gt; or &lt;code&gt;build-darwin&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The script will minify the source code, recompile native dependencies and create distributable assets in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h4&gt;Getting the bleeding edge&lt;/h4&gt; 
&lt;p&gt;If you&#39;re interested in running the latest in-development version but don&#39;t want to compile source code yourself, you can can get pre-built nightly binaries on &lt;a href=&quot;https://github.com/GitSquared/edex-ui/actions&quot;&gt;GitHub Actions&lt;/a&gt;: click the latest commits, and download the artifacts bundle for your OS.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;eDEX-UI&#39;s source code was primarily written by me, &lt;a href=&quot;https://github.com/GitSquared&quot;&gt;Squared&lt;/a&gt;. If you want to get in touch with me or find other projects I&#39;m involved in, check out &lt;a href=&quot;https://gaby.dev&quot;&gt;my website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/PixelyIon&quot;&gt;PixelyIon&lt;/a&gt; helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://soundcloud.com/iamicewolf&quot;&gt;IceWolf&lt;/a&gt; composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Of course, eDEX would never have existed if I hadn&#39;t stumbled upon the amazing work of &lt;a href=&quot;https://github.com/seenaburns&quot;&gt;Seena&lt;/a&gt; on &lt;a href=&quot;https://reddit.com/r/unixporn&quot;&gt;r/unixporn&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project uses a bunch of open-source libraries, frameworks and tools, see &lt;a href=&quot;https://github.com/GitSquared/edex-ui/network/dependencies&quot;&gt;the full dependency graph&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I want to namely thank the developers behind &lt;a href=&quot;https://github.com/xtermjs/xterm.js&quot;&gt;xterm.js&lt;/a&gt;, &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation&quot;&gt;systeminformation&lt;/a&gt; and &lt;a href=&quot;https://github.com/joewalnes/smoothie&quot;&gt;SmoothieCharts&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/arscan&quot;&gt;Rob &quot;Arscan&quot; Scanlon&lt;/a&gt; for making the fantastic &lt;a href=&quot;https://github.com/arscan/encom-globe&quot;&gt;ENCOM Globe&lt;/a&gt;, also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/GitSquared/edex-ui/raw/master/LICENSE&quot;&gt;GPLv3.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ascoders/weekly</title>
      <link>https://github.com/ascoders/weekly</link>
      <description>&lt;p&gt;前端精读周刊。帮你理解最前沿、实用的技术。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前端精读&lt;/h1&gt; 
&lt;a href=&quot;https://travis-ci.org/ascoders/weekly&quot;&gt; &lt;img src=&quot;https://travis-ci.org/ascoders/weekly.svg?branch=v2&quot; alt=&quot;CircleCI Status&quot;&gt; &lt;/a&gt; 
&lt;p&gt;前端界的好文精读，每周更新！&lt;/p&gt; 
&lt;p&gt;最新精读：&lt;a href=&quot;./前沿技术/213.%E7%B2%BE%E8%AF%BB%E3%80%8APrisma%20%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;213.精读《Prisma 的使用》&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;素材来源：&lt;a href=&quot;https://github.com/ascoders/weekly/issues/2&quot;&gt;周刊参考池&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;现已涵盖：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;结合大厂工作经验解读的 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF&quot;&gt;前沿技术&lt;/a&gt;，&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB&quot;&gt;源码解读&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;逐渐加入一些后端技术解读。&lt;/li&gt; 
 &lt;li&gt;一些 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%95%86%E4%B8%9A%E6%80%9D%E8%80%83&quot;&gt;商业思考&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;已完成 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86&quot;&gt;编译原理&lt;/a&gt;、&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;设计模式&lt;/a&gt; 两大基础模块。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前沿技术&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/1.%E7%B2%BE%E8%AF%BB%E3%80%8Ajs%20%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8F%91%E5%B1%95%E3%80%8B.md&quot;&gt;1.精读《js 模块化发展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/2.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%A8%A1%E6%80%81%E6%A1%86%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;2.精读《模态框的最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/3.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E5%90%8E%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B9%8B%E4%BA%89%E3%80%8B.md&quot;&gt;3.精读《前后端渲染之争》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/4.%E7%B2%BE%E8%AF%BB%E3%80%8AAsyncAwait%20%E4%BC%98%E8%B6%8A%E4%B9%8B%E5%A4%84%E3%80%8B.md&quot;&gt;4.精读《AsyncAwait 优越之处》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/5.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B0%91%E5%B7%A5%E5%8F%94%E5%8D%95%E9%A1%B5%E6%95%B0%E6%8D%AE%E6%B5%81%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;5.精读《民工叔单页数据流方案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/6.%E7%B2%BE%E8%AF%BB%E3%80%8AJavaScript%20%E9%94%99%E8%AF%AF%E5%A0%86%E6%A0%88%E5%A4%84%E7%90%86%E3%80%8B.md&quot;&gt;6.精读《JavaScript 错误堆栈处理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/7.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AF%B7%E5%81%9C%E6%AD%A2%20css-in-js%20%E7%9A%84%E8%A1%8C%E4%B8%BA%E3%80%8B.md&quot;&gt;7.精读《请停止 css-in-js 的行为》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/8.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A5%E5%9D%91%20React%20%E5%89%8D%E6%B2%A1%E6%9C%89%E4%BA%BA%E4%BC%9A%E5%91%8A%E8%AF%89%E4%BD%A0%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;8.精读《入坑 React 前没有人会告诉你的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/9.%E7%B2%BE%E8%AF%BB%E3%80%8AImmutable%20%E7%BB%93%E6%9E%84%E5%85%B1%E4%BA%AB%E3%80%8B.md&quot;&gt;9.精读《Immutable 结构共享》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/10.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20Components%20%E7%9A%84%E5%9B%B0%E5%A2%83%E3%80%8B.md&quot;&gt;10.精读《Web Components 的困境》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/11.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;11.精读《前端调试技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/12.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;12.精读《React 高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/13.%E7%B2%BE%E8%AF%BB%E3%80%8AThis%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%9B%B0%E6%83%91%E3%80%8B.md&quot;&gt;13.精读《This 带来的困惑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/14.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E4%B9%8B%20DCI%E3%80%8B.md&quot;&gt;14.精读《架构设计之 DCI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/15.%E7%B2%BE%E8%AF%BB%E3%80%8ATC39%20%E4%B8%8E%20ECMAScript%20%E6%8F%90%E6%A1%88%E3%80%8B.md&quot;&gt;15.精读《TC39 与 ECMAScript 提案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/16.%E7%B2%BE%E8%AF%BB%E3%80%8ACSS%20Animations%20vs%20Web%20Animations%20API%E3%80%8B.md&quot;&gt;16.精读《CSS Animations vs Web Animations API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/17.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%AE%89%E5%85%A8%E5%9C%B0%E4%BD%BF%E7%94%A8%20React%20context%E3%80%8B.md&quot;&gt;17.精读《如何安全地使用 React context》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/18.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E5%AE%8C%E7%BE%8E%E7%9A%84%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;18.精读《设计完美的日期选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/19.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E3%80%8B%E5%8F%8A%E9%9D%A2%E8%AF%95%E5%AE%98%E6%8A%80%E5%B7%A7.md&quot;&gt;19.精读《最佳前端面试题》及面试官技巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/20.%E7%B2%BE%E8%AF%BB%E3%80%8ANestjs%E3%80%8B%E6%96%87%E6%A1%A3.md&quot;&gt;20.精读《Nestjs》文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/21.%E7%B2%BE%E8%AF%BB%E3%80%8AWeb%20fonts%3A%20when%20you%20need%20them%2C%20when%20you%20don%E2%80%99t%E3%80%8B.md&quot;&gt;21.精读《Web fonts: when you need them, when you don’t》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/22.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%E7%89%B9%E6%80%A7%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9A%84%20JS%20%E6%80%A7%E8%83%BD%E5%8F%98%E5%8C%96%E3%80%8B.md&quot;&gt;22.精读《V8 引擎特性带来的的 JS 性能变化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/23.%E7%B2%BE%E8%AF%BB%E3%80%8AAPI%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E3%80%8B.md&quot;&gt;23.精读《API 设计原则》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/24.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20JavaScript%20%E6%A6%82%E8%A7%88%E3%80%8B.md&quot;&gt;24.精读《现代 JavaScript 概览》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/25.%E7%B2%BE%E8%AF%BB%E3%80%8Anull%20%3E%3D%200%3F%E3%80%8B.md&quot;&gt;25.精读《null &amp;gt;= 0?》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/26.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8A%A0%E5%AF%86%E5%AA%92%E4%BD%93%E6%89%A9%E5%B1%95%E3%80%8B.md&quot;&gt;26.精读《加密媒体扩展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/27.%E7%B2%BE%E8%AF%BB%E3%80%8Acss-in-js%20%E6%9D%80%E9%B8%A1%E7%94%A8%E7%89%9B%E5%88%80%E3%80%8B.md&quot;&gt;27.精读《css-in-js 杀鸡用牛刀》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/28.%E7%B2%BE%E8%AF%BB%E3%80%8A2017%20%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%A4%87%E5%BF%98%E5%BD%95%E3%80%8B.md&quot;&gt;28.精读《2017 前端性能优化备忘录》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/29.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E3%80%8B.md&quot;&gt;29.精读《JS 中的内存管理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/30.%E7%B2%BE%E8%AF%BB%E3%80%8AJavascript%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%BC%82%E6%AD%A5%E3%80%8B.md&quot;&gt;30.精读《Javascript 事件循环与异步》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/31.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E4%B8%8D%E5%86%8D%E4%BD%BF%E7%94%A8%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;31.精读《我不再使用高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/32.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router4.0%20%E8%BF%9B%E9%98%B6%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;32.精读《React Router4.0 进阶概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/33.%E7%B2%BE%E8%AF%BB%E3%80%8A30%20%E8%A1%8C%20js%20%E4%BB%A3%E7%A0%81%E5%88%9B%E5%BB%BA%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E3%80%8B.md&quot;&gt;33.精读《30 行 js 代码创建神经网络》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/34.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%E3%80%8B.md&quot;&gt;34.精读《React 代码整洁之道》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/35.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E3%80%8B.md&quot;&gt;35.精读《dob - 框架实现》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/36.%E7%B2%BE%E8%AF%BB%E3%80%8AWhen%20You%20%E2%80%9CGit%E2%80%9D%20in%20Trouble-%20a%20Version%20Control%20Story%E3%80%8B.md&quot;&gt;36.精读《When You “Git” in Trouble- a Version Control Story》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/37.%E7%B2%BE%E8%AF%BB%E3%80%8Ahow%20we%20position%20and%20what%20we%20compare%E3%80%8B.md&quot;&gt;37.精读《how we position and what we compare》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/38.%E7%B2%BE%E8%AF%BB%E3%80%8Adob%20-%20%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;38.精读《dob - 框架使用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/39.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%85%A8%E9%93%BE%E8%B7%AF%E4%BD%93%E9%AA%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8C%96%E7%9F%BF%E3%80%8B.md&quot;&gt;39.精读《全链路体验浏览器挖矿》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/40.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%9D%E6%8E%A2%20Reason%20%E4%B8%8E%20GraphQL%E3%80%8B.md&quot;&gt;40.精读《初探 Reason 与 GraphQL》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/41.%E7%B2%BE%E8%AF%BB%E3%80%8AAnt%20Design%203.0%20%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B.md&quot;&gt;41.精读《Ant Design 3.0 背后的故事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/42.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%B5%81%E5%93%B2%E5%AD%A6%E3%80%8B.md&quot;&gt;42.精读《前端数据流哲学》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/43.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A2%9E%E5%BC%BA%E7%8E%B0%E5%AE%9E%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B.md&quot;&gt;43.精读《增强现实与可视化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/44.%E7%B2%BE%E8%AF%BB%E3%80%8ARekit%20Studio%E3%80%8B.md&quot;&gt;44.精读《Rekit Studio》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/45.%E7%B2%BE%E8%AF%BB%E3%80%8AReact&#39;s%20new%20Context%20API%E3%80%8B.md&quot;&gt;45.精读《React&#39;s new Context API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/46.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-rxjs%E3%80%8B.md&quot;&gt;46.精读《react-rxjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/47.%E7%B2%BE%E8%AF%BB%E3%80%8Awebpack4.0%20%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;47.精读《webpack4.0 升级指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/49.%E7%B2%BE%E8%AF%BB%E3%80%8ACompilers%20are%20the%20New%20Frameworks%E3%80%8B.md&quot;&gt;49.精读《Compilers are the New Frameworks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/50.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%9E%84%E5%BB%BA%20ARKit%20%E5%BA%94%E7%94%A8%E3%80%8B.md&quot;&gt;50.精读《快速上手构建 ARKit 应用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/51.%E7%B2%BE%E8%AF%BB%E3%80%8AElements%20of%20Web%20Dev%E3%80%8B.md&quot;&gt;51.精读《Elements of Web Dev》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/52.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BE%E8%A7%A3%20ES%20%E6%A8%A1%E5%9D%97%E3%80%8B.md&quot;&gt;52.精读《图解 ES 模块》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/53.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8F%92%E4%BB%B6%E5%8C%96%E6%80%9D%E7%BB%B4%E3%80%8B.md&quot;&gt;53.精读《插件化思维》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/54.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%20serverRender%E3%80%8B.md&quot;&gt;54.精读《在浏览器运行 serverRender》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/55.%E7%B2%BE%E8%AF%BB%E3%80%8Aasync%20await%20%E6%98%AF%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%E3%80%8B.md&quot;&gt;55.精读《async await 是把双刃剑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/56.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%20Redux%E3%80%8B.md&quot;&gt;56.精读《重新思考 Redux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/57.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%8E%B0%E4%BB%A3%20js%20%E6%A1%86%E6%9E%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E3%80%8B.md&quot;&gt;57.精读《现代 js 框架存在的根本原因》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/58.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript2.0%20-%202.9%E3%80%8B.md&quot;&gt;58.精读《Typescript2.0 - 2.9》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/59.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%20Nodejs%20%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%8B.md&quot;&gt;59.精读《如何利用 Nodejs 监听文件夹》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/60.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%9C%A8%20nodejs%20%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E3%80%8B.md&quot;&gt;60.精读《如何在 nodejs 使用环境变量》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/61.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E5%85%AB%E7%A7%8D%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;61.精读《React 八种条件渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/62.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20%E5%BC%95%E6%93%8E%E5%9F%BA%E7%A1%80%E4%B9%8B%20Shapes%20and%20Inline%20Caches%E3%80%8B.md&quot;&gt;62.精读《JS 引擎基础之 Shapes and Inline Caches》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/63.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E7%9A%84%E5%A4%9A%E6%80%81%E6%80%A7%E3%80%8B.md&quot;&gt;63.精读《React 的多态性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/68.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%A1%A1%E9%87%8F%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E3%80%8B.md&quot;&gt;68.精读《衡量用户体验》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/69.%E7%B2%BE%E8%AF%BB%E3%80%8ASQL%20vs%20Flux%E3%80%8B.md&quot;&gt;69.精读《SQL vs Flux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/72.%E7%B2%BE%E8%AF%BB%E3%80%8AREST%2C%20GraphQL%2C%20Webhooks%2C%20%26%20gRPC%20%E5%A6%82%E4%BD%95%E9%80%89%E5%9E%8B%E3%80%8B.md&quot;&gt;72.精读《REST, GraphQL, Webhooks, &amp;amp; gRPC 如何选型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/74.%E7%B2%BE%E8%AF%BB%E3%80%8A12%20%E4%B8%AA%E8%AF%84%E4%BC%B0%20JS%20%E5%BA%93%E4%BD%A0%E9%9C%80%E8%A6%81%E5%85%B3%E5%BF%83%E7%9A%84%E4%BA%8B%E3%80%8B.md&quot;&gt;74.精读《12 个评估 JS 库你需要关心的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/76.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%88%E8%B0%88%20Web%20Workers%E3%80%8B.md&quot;&gt;76.精读《谈谈 Web Workers》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/77.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Reduce%20%E5%AE%9E%E7%8E%B0%20Promise%20%E4%B8%B2%E8%A1%8C%E6%89%A7%E8%A1%8C%E3%80%8B.md&quot;&gt;77.精读《用 Reduce 实现 Promise 串行执行》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/79.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%E3%80%8B.md&quot;&gt;79.精读《React Hooks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/80.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%80%8E%E4%B9%88%E7%94%A8%20React%20Hooks%20%E9%80%A0%E8%BD%AE%E5%AD%90%E3%80%8B.md&quot;&gt;80.精读《怎么用 React Hooks 造轮子》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/81.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20CSS%20%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8%E3%80%8B.md&quot;&gt;81.精读《使用 CSS 属性选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/83.%E7%B2%BE%E8%AF%BB%E3%80%8AReact16%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;83.精读《React16 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/84.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%203.2%20%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B.md&quot;&gt;84.精读《Typescript 3.2 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/86.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%9B%BD%E9%99%85%E5%8C%96%E5%B8%83%E5%B1%80%20-%20Logical%20Properties%E3%80%8B.md&quot;&gt;86.精读《国际化布局 - Logical Properties》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/87.%E7%B2%BE%E8%AF%BB%E3%80%8AsetState%20%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;87.精读《setState 做了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/88.%E7%B2%BE%E8%AF%BB%E3%80%8ACaches%20API%E3%80%8B.md&quot;&gt;88.精读《Caches API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/89.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E4%B8%8E%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;89.精读《如何编译前端项目与组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/91.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E5%88%99%20ES2018%E3%80%8B.md&quot;&gt;91.精读《正则 ES2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/94.%E7%B2%BE%E8%AF%BB%E3%80%8AServerless%20%E7%BB%99%E5%89%8D%E7%AB%AF%E5%B8%A6%E6%9D%A5%E4%BA%86%E4%BB%80%E4%B9%88%E3%80%8B.md&quot;&gt;94.精读《Serverless 给前端带来了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/95.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20VS%20Class%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;95.精读《Function VS Class 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/96.%E7%B2%BE%E8%AF%BB%E3%80%8AuseEffect%20%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E3%80%8B.md&quot;&gt;96.精读《useEffect 完全指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/97.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BC%96%E5%86%99%E6%9C%89%E5%BC%B9%E6%80%A7%E7%9A%84%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;97.精读《编写有弹性的组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/99.%E7%B2%BE%E8%AF%BB%E3%80%8AScheduling%20in%20React%E3%80%8B.md&quot;&gt;99.精读《Scheduling in React》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/100.%E7%B2%BE%E8%AF%BB%E3%80%8AV8%20%E5%BC%95%E6%93%8E%20Lazy%20Parsing%E3%80%8B.md&quot;&gt;100.精读《V8 引擎 Lazy Parsing》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/101.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%20vs%20%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98%20vs%20%E6%8C%81%E7%BB%AD%E9%83%A8%E7%BD%B2%E3%80%8B.md&quot;&gt;101.精读《持续集成 vs 持续交付 vs 持续部署》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/102.%E7%B2%BE%E8%AF%BB%E3%80%8AMonorepo%20%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%8B.md&quot;&gt;102.精读《Monorepo 的优势》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/104.%E7%B2%BE%E8%AF%BB%E3%80%8AFunction%20Component%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;104.精读《Function Component 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/105.%E7%B2%BE%E8%AF%BB%E3%80%8AWhat&#39;s%20new%20in%20javascript%E3%80%8B.md&quot;&gt;105.精读《What&#39;s new in javascript》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/107.%E7%B2%BE%E8%AF%BB%E3%80%8AOptional%20chaining%E3%80%8B.md&quot;&gt;107.精读《Optional chaining》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/109.%E7%B2%BE%E8%AF%BB%E3%80%8AVue3.0%20Function%20API%E3%80%8B.md&quot;&gt;109.精读《Vue3.0 Function API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/111.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B%E3%80%8B.md&quot;&gt;111.精读《前端未来展望》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/112.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E3%80%8B.md&quot;&gt;112.精读《源码学习》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/113.%E7%B2%BE%E8%AF%BB%E3%80%8ANodejs%20V12%E3%80%8B.md&quot;&gt;113.精读《Nodejs V12》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/117.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E6%8E%A2%E7%B4%A2%E5%BC%8F%E6%A8%A1%E5%9E%8B%E3%80%8B.md&quot;&gt;117.精读《Tableau 探索式模型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/118.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%BF%E7%94%A8%20css%20%E5%8F%98%E9%87%8F%E7%94%9F%E6%88%90%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98%E3%80%8B.md&quot;&gt;118.精读《使用 css 变量生成颜色主题》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/119.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%B7%B1%E6%B0%B4%E5%8C%BA%E3%80%8B.md&quot;&gt;119.精读《前端深水区》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/120.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B.md&quot;&gt;120.精读《React Hooks 最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/121.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E4%B8%8E%20BI%E3%80%8B.md&quot;&gt;121.精读《前端与 BI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/123.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20Babel%20%E5%88%9B%E9%80%A0%E8%87%AA%E5%AE%9A%E4%B9%89%20JS%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;123.精读《用 Babel 创造自定义 JS 语法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/124.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20css%20grid%20%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%E5%B8%83%E5%B1%80%E3%80%8B.md&quot;&gt;124.精读《用 css grid 重新思考布局》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/125.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%20-%20%E5%87%BD%E6%95%B0%E5%BC%8F%E4%B9%8B%E7%BE%8E%E3%80%8B.md&quot;&gt;125.精读《深度学习 - 函数式之美》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/126.%E7%B2%BE%E8%AF%BB%E3%80%8ANuxtjs%E3%80%8B.md&quot;&gt;126.精读《Nuxtjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/127.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day1%E3%80%8B.md&quot;&gt;127.精读《React Conf 2019 - Day1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/129.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Conf%202019%20-%20Day2%E3%80%8B.md&quot;&gt;129.精读《React Conf 2019 - Day2》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/132.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%AD%A3%E4%BA%A4%E7%9A%84%20React%20%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;132.精读《正交的 React 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/133.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%BB%E6%89%BE%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%B9%B3%E8%A1%A1%E7%82%B9%E3%80%8B.md&quot;&gt;133.精读《寻找框架设计的平衡点》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/134.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%88%91%E5%9C%A8%E9%98%BF%E9%87%8C%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%E5%A4%A7%E5%89%8D%E7%AB%AF%E3%80%8B.md&quot;&gt;134.精读《我在阿里数据中台大前端》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/138.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%B2%BE%E9%80%9A%20console.log%E3%80%8B.md&quot;&gt;138.精读《精通 console.log》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/139.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20JSON%20Parser%E3%80%8B.md&quot;&gt;139.精读《手写 JSON Parser》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/140.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%BB%93%E5%90%88%20React%20%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9F%20Drag%20Drop%20API%E3%80%8B.md&quot;&gt;140.精读《结合 React 使用原生 Drag Drop API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/141.%E7%B2%BE%E8%AF%BB%E3%80%8AuseRef%20%E4%B8%8E%20createRef%20%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;141.精读《useRef 与 createRef 的区别》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/142.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E5%81%9A%E5%A5%BD%20CodeReview%E3%80%8B.md&quot;&gt;142.精读《如何做好 CodeReview》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/143.%E7%B2%BE%E8%AF%BB%E3%80%8ASuspense%20%E6%94%B9%E5%8F%98%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E3%80%8B.md&quot;&gt;143.精读《Suspense 改变开发方式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/144.%E7%B2%BE%E8%AF%BB%E3%80%8AWebpack5%20%E6%96%B0%E7%89%B9%E6%80%A7%20-%20%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6%E3%80%8B.md&quot;&gt;144.精读《Webpack5 新特性 - 模块联邦》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/145.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Router%20v6%E3%80%8B.md&quot;&gt;145.精读《React Router v6》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/146.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E3%80%8B.md&quot;&gt;146.精读《React Hooks 数据流》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/147.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40types%20react%20%E5%80%BC%E5%BE%97%E6%B3%A8%E6%84%8F%E7%9A%84%20TS%20%E6%8A%80%E5%B7%A7%E3%80%8B.md&quot;&gt;147. 精读《@types react 值得注意的 TS 技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/148.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Error%20Boundaries%E3%80%8B.md&quot;&gt;148. 精读《React Error Boundaries》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/149.%20%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95%E3%80%8B.md&quot;&gt;149. 精读《React 性能调试》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/150.%20%E7%B2%BE%E8%AF%BB%E3%80%8ADeno%201.0%20%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E3%80%8B.md&quot;&gt;150. 精读《Deno 1.0 你需要了解的》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/152.%20%E7%B2%BE%E8%AF%BB%E3%80%8Arecoil%E3%80%8B.md&quot;&gt;152. 精读《recoil》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/153.%20%E7%B2%BE%E8%AF%BB%E3%80%8Asnowpack%E3%80%8B.md&quot;&gt;153. 精读《snowpack》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/154.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%94%A8%20React%20%E5%81%9A%E6%8C%89%E9%9C%80%E6%B8%B2%E6%9F%93%E3%80%8B.md&quot;&gt;154. 精读《用 React 做按需渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/157.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%A6%82%E4%BD%95%E6%AF%94%E8%BE%83%20Object%20%E5%AF%B9%E8%B1%A1%E3%80%8B.md&quot;&gt;157. 精读《如何比较 Object 对象》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/158.%20%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204%E3%80%8B.md&quot;&gt;158. 精读《Typescript 4》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/159.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%AF%B9%E4%BD%8E%E4%BB%A3%E7%A0%81%E6%90%AD%E5%BB%BA%E7%9A%84%E7%90%86%E8%A7%A3%E3%80%8B.md&quot;&gt;159. 精读《对低代码搭建的理解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/160.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%87%BD%E6%95%B0%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;160. 精读《函数缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/161.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E6%90%AD%E5%BB%BA%E6%80%9D%E8%80%83%20-%20%E5%AF%8C%E6%96%87%E6%9C%AC%E6%90%AD%E5%BB%BA%E3%80%8B.md&quot;&gt;161.精读《可视化搭建思考 - 富文本搭建》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/162.%E7%B2%BE%E8%AF%BB%E3%80%8ATasks%2C%20microtasks%2C%20queues%20and%20schedules%E3%80%8B.md&quot;&gt;162.精读《Tasks, microtasks, queues and schedules》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/163.%E7%B2%BE%E8%AF%BB%E3%80%8ASpring%20%E6%A6%82%E5%BF%B5%E3%80%8B.md&quot;&gt;163.精读《Spring 概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/164.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E8%AE%BE%E8%AE%A1%E5%99%A8%E3%80%8B.md&quot;&gt;164.精读《数据搭建引擎 bi-designer API-设计器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/165.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E7%BB%84%E4%BB%B6%E3%80%8B.md&quot;&gt;165.精读《数据搭建引擎 bi-designer API-组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/166.%E7%B2%BE%E8%AF%BB%E3%80%8ABI%20%E6%90%AD%E5%BB%BA%20-%20%E7%AD%9B%E9%80%89%E6%9D%A1%E4%BB%B6%E3%80%8B.md&quot;&gt;166.精读《BI 搭建 - 筛选条件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/190.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E3%80%8B.md&quot;&gt;190.精读《DOM diff 原理详解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/191.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BD%E8%A1%A8%E6%A0%BC%E3%80%8B.md&quot;&gt;191.精读《高性能表格》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/192.%E7%B2%BE%E8%AF%BB%E3%80%8ADOM%20diff%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%8B.md&quot;&gt;192.精读《DOM diff 最长上升子序列》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/193.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20Server%20Component%E3%80%8B.md&quot;&gt;193.精读《React Server Component》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/194.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B.md&quot;&gt;194.精读《算法基础数据结构》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/195.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%96%B0%E4%B8%80%E4%BB%A3%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E3%80%8B.md&quot;&gt;195.精读《新一代前端构建工具对比》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/196.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%20-%202021%20%E5%B9%B4%E3%80%8B.md&quot;&gt;196.精读《前端职业规划 - 2021 年》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/197.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%8E%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E7%BC%96%E6%8E%92%E3%80%8B.md&quot;&gt;197.精读《低代码逻辑编排》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/202.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%2018%E3%80%8B.md&quot;&gt;202.精读《React 18》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/204.%E7%B2%BE%E8%AF%BB%E3%80%8A%E9%BB%98%E8%AE%A4%E3%80%81%E5%91%BD%E5%90%8D%E5%AF%BC%E5%87%BA%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8B.md&quot;&gt;204.精读《默认、命名导出的区别》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/205.%E7%B2%BE%E8%AF%BB%E3%80%8AJS%20with%20%E8%AF%AD%E6%B3%95%E3%80%8B.md&quot;&gt;205.精读《JS with 语法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/206.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%80%E7%A7%8D%20Hooks%20%E6%95%B0%E6%8D%AE%E6%B5%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E3%80%8B.md&quot;&gt;206.精读《一种 Hooks 数据流管理方案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/207.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%20infer%20%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%8B.md&quot;&gt;207.精读《Typescript infer 关键字》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/208.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript%204.4%E3%80%8B.md&quot;&gt;208.精读《Typescript 4.4》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/209.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%8D%95%E8%8E%B7%E6%89%80%E6%9C%89%E5%BC%82%E6%AD%A5%20error%E3%80%8B.md&quot;&gt;209.精读《捕获所有异步 error》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/210.%E7%B2%BE%E8%AF%BB%E3%80%8Aclass%20static%20block%E3%80%8B.md&quot;&gt;210.精读《class static block》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/211.%E7%B2%BE%E8%AF%BB%E3%80%8AMicrosoft%20Power%20Fx%E3%80%8B.md&quot;&gt;211.精读《Microsoft Power Fx》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/212.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E6%80%9D%E8%80%83%E3%80%8B.md&quot;&gt;212.精读《可维护性思考》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/213.%E7%B2%BE%E8%AF%BB%E3%80%8APrisma%20%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%8B.md&quot;&gt;213.精读《Prisma 的使用》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;设计模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/167.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Abstract%20Factory%20%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E3%80%8B.md&quot;&gt;167.精读《设计模式 - Abstract Factory 抽象工厂》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/168.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Builder%20%E7%94%9F%E6%88%90%E5%99%A8%E3%80%8B.md&quot;&gt;168.精读《设计模式 - Builder 生成器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/169.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Factory%20Method%20%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%8B.md&quot;&gt;169.精读《设计模式 - Factory Method 工厂方法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/170.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Prototype%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;170.精读《设计模式 - Prototype 原型模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/171.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Singleton%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;171.精读《设计模式 - Singleton 单例模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/172.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Adapter%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;172.精读《设计模式 - Adapter 适配器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/173.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Bridge%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;173.精读《设计模式 - Bridge 桥接模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/174.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Composite%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;174.精读《设计模式 - Composite 组合模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/175.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Decorator%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;175.精读《设计模式 - Decorator 装饰器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/176.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Facade%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;176.精读《设计模式 - Facade 外观模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/177.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Flyweight%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;177.精读《设计模式 - Flyweight 享元模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/178.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Proxy%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;178.精读《设计模式 - Proxy 代理模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/179.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Chain%20of%20Responsibility%20%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;179.精读《设计模式 - Chain of Responsibility 职责链模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/180.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Command%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;180.精读《设计模式 - Command 命令模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/181.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Interpreter%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;181.精读《设计模式 - Interpreter 解释器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/182.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Iterator%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;182.精读《设计模式 - Iterator 迭代器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/183.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Mediator%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;183.精读《设计模式 - Mediator 中介者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/184.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Memoto%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;184.精读《设计模式 - Memoto 备忘录模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/185.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Observer%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;185.精读《设计模式 - Observer 观察者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/186.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20State%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;186.精读《设计模式 - State 状态模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/187.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Strategy%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;187.精读《设计模式 - Strategy 策略模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/188.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Template%20Method%20%E6%A8%A1%E7%89%88%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;188.精读《设计模式 - Template Method 模版模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/189.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20Visitor%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%8B.md&quot;&gt;189.精读《设计模式 - Visitor 访问者模式》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;编译原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/64.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;64.精读《手写 SQL 编译器 - 词法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/65.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%96%87%E6%B3%95%E4%BB%8B%E7%BB%8D%E3%80%8B.md&quot;&gt;65.精读《手写 SQL 编译器 - 文法介绍》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/66.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E3%80%8B.md&quot;&gt;66.精读《手写 SQL 编译器 - 语法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/67.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;67.精读《手写 SQL 编译器 - 回溯》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/70.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E8%AF%AD%E6%B3%95%E6%A0%91%E3%80%8B.md&quot;&gt;70.精读《手写 SQL 编译器 - 语法树》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/71.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;71.精读《手写 SQL 编译器 - 错误提示》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/78.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E7%BC%93%E5%AD%98%E3%80%8B.md&quot;&gt;78.精读《手写 SQL 编译器 - 性能优化之缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/85.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%89%8B%E5%86%99%20SQL%20%E7%BC%96%E8%AF%91%E5%99%A8%20-%20%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA%E3%80%8B.md&quot;&gt;85.精读《手写 SQL 编译器 - 智能提示》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;源码解读&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/48.%E7%B2%BE%E8%AF%BB%E3%80%8AImmer.js%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;48.精读《Immer.js》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/73.%E7%B2%BE%E8%AF%BB%E3%80%8Asqorn%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;73.精读《sqorn 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/75.%E7%B2%BE%E8%AF%BB%E3%80%8AEpitath%20%E6%BA%90%E7%A0%81%20-%20renderProps%20%E6%96%B0%E7%94%A8%E6%B3%95%E3%80%8B.md&quot;&gt;75.精读《Epitath 源码 - renderProps 新用法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/82.%E7%B2%BE%E8%AF%BB%E3%80%8AHtm%20-%20Hyperscript%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;82.精读《Htm - Hyperscript 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/92.%E7%B2%BE%E8%AF%BB%E3%80%8AReact%20PowerPlug%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;92.精读《React PowerPlug 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/93.%E7%B2%BE%E8%AF%BB%E3%80%8Asyntax-parser%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;93.精读《syntax-parser 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/98.%E7%B2%BE%E8%AF%BB%E3%80%8Areact-easy-state%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;98.精读《react-easy-state 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/110.%E7%B2%BE%E8%AF%BB%E3%80%8AInject%20Instance%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;110.精读《Inject Instance 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/122.%E7%B2%BE%E8%AF%BB%E3%80%8Arobot%20%E6%BA%90%E7%A0%81%20-%20%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E3%80%8B.md&quot;&gt;122.精读《robot 源码 - 有限状态机》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/128.%E7%B2%BE%E8%AF%BB%E3%80%8AHooks%20%E5%8F%96%E6%95%B0%20-%20swr%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;128.精读《Hooks 取数 - swr 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/130.%E7%B2%BE%E8%AF%BB%E3%80%8Aunstated%20%E4%B8%8E%20unstated-next%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;130.精读《unstated 与 unstated-next 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/151.%20%E7%B2%BE%E8%AF%BB%E3%80%8A%40umijs%20use-request%E3%80%8B%E6%BA%90%E7%A0%81.md&quot;&gt;151. 精读《@umijs use-request》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/155.%20%E7%B2%BE%E8%AF%BB%E3%80%8Ause-what-changed%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;155. 精读《use-what-changed 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/156.%20%E7%B2%BE%E8%AF%BB%E3%80%8Areact-intersection-observer%20%E6%BA%90%E7%A0%81%E3%80%8B.md&quot;&gt;156. 精读《react-intersection-observer 源码》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;商业思考&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/90.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%202019%E3%80%8B.md&quot;&gt;90.精读《极客公园 2019》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/103.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%93%E5%AE%B6%E4%B8%8D%E5%86%8D%E5%85%B3%E5%BF%83%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E3%80%8B.md&quot;&gt;103.精读《为什么专家不再关心技术细节》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/106.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E4%B9%8B%E4%B8%8A%C2%B7%E6%99%BA%E6%85%A7%E4%B9%8B%E5%85%89%20-%202018%E3%80%8B.md&quot;&gt;106.精读《数据之上·智慧之光 - 2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/108.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%99%BA%E8%83%BD%E5%95%86%E4%B8%9A%E3%80%8B.md&quot;&gt;108.精读《智能商业》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/114.%E7%B2%BE%E8%AF%BB%E3%80%8A%E8%B0%81%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B8%AD%E5%BF%83%E3%80%8B.md&quot;&gt;114.精读《谁在世界中心》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/115.%E7%B2%BE%E8%AF%BB%E3%80%8ATableau%20%E5%85%A5%E9%97%A8%E3%80%8B.md&quot;&gt;115.精读《Tableau 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/116.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%B7%E6%96%B0%E3%80%8B.md&quot;&gt;116.精读《刷新》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/131.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BB%8E%200%20%E5%88%B0%201%E3%80%8B.md&quot;&gt;131.精读《从 0 到 1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/135.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8A%E3%80%8B.md&quot;&gt;135.精读《极客公园 IFX - 上》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/136.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%9E%81%E5%AE%A2%E5%85%AC%E5%9B%AD%20IFX%20-%20%E4%B8%8B%E3%80%8B.md&quot;&gt;136.精读《极客公园 IFX - 下》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/137.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%BD%93%E6%88%91%E5%9C%A8%E5%88%86%E4%BA%AB%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F%E3%80%8B.md&quot;&gt;137.精读《当我在分享的时候，我在做什么？》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;算法&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/198.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8B.md&quot;&gt;198.精读《算法 - 动态规划》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/199.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E3%80%8B.md&quot;&gt;199.精读《算法 - 滑动窗口》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/200.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E5%9B%9E%E6%BA%AF%E3%80%8B.md&quot;&gt;200.精读《算法 - 回溯》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/201.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%8B.md&quot;&gt;201.精读《算法 - 二叉树》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./算法/203.%E7%B2%BE%E8%AF%BB%E3%80%8A%E7%AE%97%E6%B3%95%20-%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%8B.md&quot;&gt;203.精读《算法 - 二叉搜索树》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关注前端精读微信公众号&lt;/h2&gt; 
&lt;img width=&quot;200&quot; src=&quot;https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg&quot;&gt;</description>
    </item>
    
    <item>
      <title>atralice/Curso.Prep.Henry</title>
      <link>https://github.com/atralice/Curso.Prep.Henry</link>
      <description>&lt;p&gt;Curso de Preparación para Ingresar a Henry.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/logo.png&quot; height=&quot;70px&quot;&gt; 
&lt;h2&gt;Introducción&lt;/h2&gt; 
&lt;h1&gt;Modulo 0 - Prep&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/00-PrimerosPasos&quot;&gt;00 - Primeros Pasos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/01-Git&quot;&gt;01 - Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/02-JS-I&quot;&gt;02 - I - Introducción a Javascript: Variables, tipos de datos y funciones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/03-JS-II&quot;&gt;03 - II- Flujos de control, operadores de comparación, bucles for&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/04-JS-III&quot;&gt;04 - III - continuación de bucles for y Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/05-JS-IV&quot;&gt;05 - IV - Objetos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/06-JS-V&quot;&gt;06 - V - Clases y prototype&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/07-JS-VI&quot;&gt;07 - VI - Callbacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/08-HTML&quot;&gt;08 - HTML&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/09-CSS-Positioning&quot;&gt;09 - CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Henry Challenge =&amp;gt; &lt;a href=&quot;https://airtable.com/shrjhdL2GfsusMZ05&quot;&gt;Inscribite acá para rendir&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Conceptos:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atralice/Curso.Prep.Henry/master/JS-conceptos/Statements-Expressions/&quot;&gt;Expressions vs Statements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Homeworks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Para ejecutar los tests de cada homework tenes que pararte en la carpeta donde clonaste tu repo (es decir la carpeta donde está este &lt;code&gt;README.md&lt;/code&gt;) y ejecutar el siguiente comando:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Esto instalará todas las dependencias necesarias (lo tenés que hacer una sóla vez), una vez terminado y cada vez que quieras ver cuantos tests pasaste ejecutá:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test {nombre del homework}.test.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Por ejemplo, para ejecutar los tests del homework 02, ejecutar: &lt;code&gt;npm test JSII.test.js&lt;/code&gt; el del homework 01: &lt;code&gt;npm test JSI.test.js&lt;/code&gt; y así.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;No todos los homeworks tiene tests, está detallado en la descripción de cada uno.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;La Carrera&lt;/h1&gt; 
&lt;p&gt;Si querés saber más sobre la carrera, mirá este video:&lt;/p&gt; &amp;lt;iframe src=&quot;https://player.vimeo.com/video/426051769&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;</description>
    </item>
    
    <item>
      <title>john-smilga/node-express-course</title>
      <link>https://github.com/john-smilga/node-express-course</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Node and Express Tutorial&lt;/h2&gt; 
&lt;h4&gt;Contents&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Node Tutorial&lt;/li&gt; 
 &lt;li&gt;Express Tutorial&lt;/li&gt; 
 &lt;li&gt;Task Manager (MongoDB, Mongoose)&lt;/li&gt; 
 &lt;li&gt;Store API&lt;/li&gt; 
 &lt;li&gt;JWT Basics&lt;/li&gt; 
 &lt;li&gt;Jobs API&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Course Exclusive&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/course/nodejs-tutorial-and-projects-course/?referralCode=E94792BEAE9ADD204BC7&quot;&gt;Node Tutorial and Projects Course&lt;/a&gt;&lt;/p&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;File Upload (local and cloudinary)&lt;/li&gt; 
 &lt;li&gt;Send Email (nodemailer,ethereal and sendgrid )&lt;/li&gt; 
 &lt;li&gt;Stripe Payment&lt;/li&gt; 
 &lt;li&gt;E-Commerce API&lt;/li&gt; 
 &lt;li&gt;Auth Workflow (verify email, reset password)&lt;/li&gt; 
 &lt;li&gt;Sessions&lt;/li&gt; 
 &lt;li&gt;Yelp Clone&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🧙&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to &lt;a href=&quot;mailto:security@openzeppelin.org&quot;&gt;security@openzeppelin.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KieSun/all-of-frontend</title>
      <link>https://github.com/KieSun/all-of-frontend</link>
      <description>&lt;p&gt;你想知道的前端内容都在这&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;contributors&quot; src=&quot;https://img.shields.io/github/contributors/KieSun/fucking-frontend.svg?sanitize=true&quot;&gt; &lt;img alt=&quot;Commit&quot; src=&quot;https://img.shields.io/github/commit-activity/w/KieSun/fucking-frontend&quot;&gt; &lt;img alt=&quot;Stars&quot; src=&quot;https://img.shields.io/github/stars/KieSun/fucking-frontend&quot;&gt; &lt;img alt=&quot;Forks&quot; src=&quot;https://img.shields.io/github/forks/KieSun/fucking-frontend&quot;&gt; &lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/KieSun/fucking-frontend&quot;&gt; &lt;img src=&quot;https://visitor-badge.laobi.icu/badge?page_id=KieSun.fucking-frontend&quot; alt=&quot;visitor badge&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/img/logo.png&quot; width=&quot;300&quot;&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;strong&gt;重要资料已经整合在公众号「前端真好玩」，另外还附赠了前端 10 万字的面试攻略，已经帮助上千人拿到 offer。扫码发送关键字「资料」，你会发现相见恨晚！&lt;/strong&gt;
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/img/qrcode.jpeg&quot; width=&quot;150&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;🔥 这是什么？&lt;/h2&gt; 
&lt;p&gt;笔者在学会 JS 以及框架的应用后，有一段时间不知道该如何深入下去，活能干，就是不知道该学啥。相信这个问题也会有很多读者朋友遇到。&lt;/p&gt; 
&lt;p&gt;当然笔者目前已经突破了这个瓶颈，也成为了知名公司基础架构组的成员。因此想通过自己成长的经历及积累的资料整理出一系列的学习路线及资料推荐，帮助各位读者朋友解决这个问题。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;笔者会列出所有前端必学及热门领域的学习路径及推荐资料，比如浏览器、性能优化、框架、工程化、算法等等，工程浩大，大家可以持续关注该项目！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;此资料适用于小白入门、初中级进阶、高级查漏补缺。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;内容每天都在更新，大家可以持续关注。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;💻 如何使用&lt;/h2&gt; 
&lt;p&gt;如果你是初中级工程师来说，笔者也推荐先行学习「前端核心学习路径」，主要是巩固基础，之后再挑选感兴趣的主题。&lt;/p&gt; 
&lt;p&gt;如果你是高级工程师，笔者推荐跳过「前端核心学习路径」，直接挑选感兴趣的主题学习即可。&lt;/p&gt; 
&lt;p&gt;以下所有知识点笔者都会帮助读者朋友们将知识连贯起来，从而建立自己的知识体系而不是单独记忆松散的知识点。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推荐大家 Star 并 Fork 本项目（点击仓库顶部右上角按钮），然后 &lt;code&gt;git clone&lt;/code&gt; 到本地后从上至下逐步完成学习计划。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comming soon!&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;构建器相关内容&lt;/li&gt; 
 &lt;li&gt;前端核心学习路径思维导图&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;另外各位读者有任何想了解的主题都可以告诉我。&lt;/p&gt; 
&lt;h2&gt;如何获取本仓库资料&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;笔者已经将仓库内容里的重要资料整理好了，还附赠了前端 10 万字的面试攻略，已经帮助上千人拿到 offer。大家可以关注公众号发送「资料」获取。&lt;/strong&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/img/qrcode.jpeg&quot; width=&quot;150&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;如何贡献&lt;/h2&gt; 
&lt;p&gt;推荐你认为优秀或者仓库缺失的内容至正确的位置即可，另外需要附带你的推荐理由。&lt;/p&gt; 
&lt;h2&gt;📖 目录&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#-%E8%BF%99%E6%98%AF%E4%BB%80%E4%B9%88&quot;&gt;🔥 这是什么？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8&quot;&gt;💻 如何使用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E6%9C%AC%E4%BB%93%E5%BA%93%E8%B5%84%E6%96%99&quot;&gt;如何获取本仓库资料&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%A6%82%E4%BD%95%E8%B4%A1%E7%8C%AE&quot;&gt;如何贡献&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#-%E7%9B%AE%E5%BD%95&quot;&gt;📖 目录&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%87%AA%E5%AD%A6&quot;&gt;如何高效自学&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90&quot;&gt;书籍推荐&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%88%9D%E7%BA%A7&quot;&gt;初级&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%BF%9B%E9%98%B6&quot;&gt;进阶&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E9%AB%98%E7%BA%A7&quot;&gt;高级&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84&quot;&gt;前端核心学习路径&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#js-%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9&quot;&gt;JS 核心知识点&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B&quot;&gt;数据类型&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD&quot;&gt;类型判断&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2&quot;&gt;类型转换&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#this&quot;&gt;this&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E9%97%AD%E5%8C%85&quot;&gt;闭包&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%BD%9C%E7%94%A8%E5%9F%9F&quot;&gt;作用域&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87&quot;&gt;变量提升&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#new&quot;&gt;new&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#callapplybind&quot;&gt;call、apply、bind&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%8E%9F%E5%9E%8B&quot;&gt;原型&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#class&quot;&gt;Class&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%BB%A7%E6%89%BF&quot;&gt;继承&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%A8%A1%E5%9D%97%E5%8C%96&quot;&gt;模块化&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#promise&quot;&gt;Promise&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8&quot;&gt;迭代器与生成器&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#async-await&quot;&gt;async await&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF&quot;&gt;事件循环&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96&quot;&gt;节流与防抖&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%9F%AF%E9%87%8C%E5%8C%96&quot;&gt;柯里化&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6&quot;&gt;垃圾回收&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;设计模式&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%85%B6%E4%BB%96%E9%9B%B6%E6%95%A3%E4%BD%86%E9%87%8D%E8%A6%81%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9&quot;&gt;其他零散但重要的知识点&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#html&quot;&gt;HTML&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%AF%AD%E4%B9%89%E5%8C%96&quot;&gt;语义化&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#css&quot;&gt;CSS&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B&quot;&gt;盒子模型&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E9%80%89%E6%8B%A9%E5%99%A8&quot;&gt;选择器&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#flex&quot;&gt;Flex&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#grid&quot;&gt;grid&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%85%B6%E4%BB%96&quot;&gt;其他&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%A1%86%E6%9E%B6&quot;&gt;框架&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%99%9A%E6%8B%9F-dom&quot;&gt;虚拟 DOM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%B7%AF%E7%94%B1&quot;&gt;路由&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react&quot;&gt;React&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84&quot;&gt;React 推荐学习路径&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;React 推荐学习资料&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E7%BB%84%E4%BB%B6&quot;&gt;如何编写一个组件&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6&quot;&gt;受控组件和非受控组件&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6hoc&quot;&gt;高阶组件（HOC）&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%90%88%E6%88%90%E4%BA%8B%E4%BB%B6&quot;&gt;合成事件&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E8%B7%AF%E7%94%B1&quot;&gt;React 路由&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86&quot;&gt;React 状态管理&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82&quot;&gt;React 接口请求&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-ssr&quot;&gt;React SSR&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E5%8D%95%E6%B5%8B&quot;&gt;React 单测&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-css-%E6%96%B9%E6%A1%88&quot;&gt;React CSS 方案&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E5%8E%9F%E7%90%86&quot;&gt;React 原理&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#blog-%E6%8E%A8%E8%8D%90&quot;&gt;Blog 推荐&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#vue&quot;&gt;Vue&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#vue-%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84&quot;&gt;Vue 推荐学习路径&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#vue-%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;Vue 推荐学习资料&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#vue-%E5%8E%9F%E7%90%86&quot;&gt;Vue 原理&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%B5%8F%E8%A7%88%E5%99%A8&quot;&gt;浏览器&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%9E%B6%E6%9E%84&quot;&gt;架构&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B&quot;&gt;整体流程&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%B8%B2%E6%9F%93%E7%9B%B8%E5%85%B3&quot;&gt;渲染相关&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#js-%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6&quot;&gt;JS 执行机制&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%BC%93%E5%AD%98&quot;&gt;缓存&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#devtools&quot;&gt;Devtools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8&quot;&gt;浏览器安全&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&quot;&gt;性能优化&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D&quot;&gt;推荐书籍&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%8E%A8%E8%8D%90%E7%BD%91%E7%AB%99&quot;&gt;推荐网站&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%95%B4%E4%BD%93%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE&quot;&gt;整体优化建议&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87&quot;&gt;性能指标&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7&quot;&gt;性能监控&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#electron&quot;&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%BB%84%E4%BB%B6%E5%BA%93&quot;&gt;组件库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E5%BE%AE%E5%89%8D%E7%AB%AF&quot;&gt;微前端&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;推荐学习资料&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E8%B7%A8%E7%AB%AF%E6%A1%86%E6%9E%B6&quot;&gt;跨端框架&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%9B%91%E6%8E%A7&quot;&gt;监控&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%97%A5%E5%B8%B8%E5%85%85%E7%94%B5&quot;&gt;日常充电&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#css-%E6%97%A5%E5%B8%B8%E5%85%85%E7%94%B5&quot;&gt;CSS 日常充电&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#github-%E4%BC%98%E7%A7%80%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;Github 优秀学习资料&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#js-%E4%BC%98%E7%A7%80%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;JS 优秀学习资料&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#react-%E4%BC%98%E7%A7%80%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99&quot;&gt;React 优秀学习资料&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%BB%A3%E7%A0%81%E6%A0%B7%E5%BC%8F%E5%8F%8A%E5%AE%89%E5%85%A8&quot;&gt;代码样式及安全&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7&quot;&gt;生产力工具&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E6%B5%81%E7%A8%8B%E5%9B%BE&quot;&gt;流程图&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%BD%9C%E8%80%85%E4%BF%A1%E6%81%AF&quot;&gt;作者信息&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;如何高效自学&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/img/learn.webp&quot; alt=&quot;Z0qdJz&quot;&gt;&lt;/p&gt; 
&lt;p&gt;自学是每个工程师都需要掌握的一项技能。这个学习方法笔者百试百灵，学习任何技术都会用上这个思路。另外我们还能通过这个思路拓宽自己的技术栈，将各个知识联系起来建立自己的知识体系，并且通过这种学习方式学到的知识也不容易遗忘。&lt;/p&gt; 
&lt;h2&gt;书籍推荐&lt;/h2&gt; 
&lt;p&gt;以下书籍主要还是推荐了 JS 方面的，其它比如说框架、TS 等等技术会在各自章节为大家介绍。&lt;/p&gt; 
&lt;h3&gt;初级&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/35175321/&quot;&gt;JavaScript 高级程序设计（第 4 版）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;进阶&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/30143702/&quot;&gt;JavaScript 忍者秘籍（第 2 版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/26351021/&quot;&gt;你不知道的 JS 三卷&lt;/a&gt;，该书英文版是开源的，并且作者已经在写第二版，有能力阅读英文的读者推荐直接看 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS&quot;&gt;原著&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;高级&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/35469273/&quot;&gt;JavaScript 悟道&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/35085910/&quot;&gt;JavaScript 语言精髓与编程实践（第 3 版）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;上述书籍大家可以关注【&lt;a href=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/#%E4%BD%9C%E8%80%85%E4%BF%A1%E6%81%AF&quot;&gt;公众号&lt;/a&gt;】发送「资料」获取，另外还附赠了前端 10 万字的面试攻略，已经帮助上千人拿到 offer。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;前端核心学习路径&lt;/h2&gt; 
&lt;p&gt;前端知识点很多这是公认的事情，但是我们确实没必要把所有知识都去学习，那样只会贪多嚼不烂。我们能把核心知识点、热门技术以及工作中需要用到的知识学好就已经能打败大部分前端工程师了，剩下的大家可以自行根据兴趣选择学习内容。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;但是在学习其他内容之前，笔者强烈推荐各位务必一定一定先把基础打扎实了，基础不好真的不可能把自己技术往上拔高的。&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;为了保证大家学到的知识是正确的，下文中的文档资料笔者都使用了英文版本。因为在审核资料的过程中笔者发现不少中文文档都存在翻译错误或者过时的情况。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;如果你还是一位初学者，推荐先自行完整阅读一至二本书后再按照该计划学习，因为以下计划并没有囊括 JS 的所有知识，而是列出了所有核心知识点。&lt;/p&gt; 
&lt;p&gt;关于书籍笔者推荐以下两本：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/35175321/&quot;&gt;JavaScript 高级程序设计（第 4 版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/30143702/&quot;&gt;JavaScript 忍者秘籍（第 2 版）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JS 核心知识点&lt;/h3&gt; 
&lt;h4&gt;数据类型&lt;/h4&gt; 
&lt;p&gt;JS 数据类型分为两大类及八种数据类型，注意别漏了新增的 &lt;code&gt;bigint&lt;/code&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript 数据类型和数据结构&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;类型判断&lt;/h4&gt; 
&lt;p&gt;类型判断有好几种方式，分别为：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;isXXX&lt;/code&gt;，比如 &lt;code&gt;isArray&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;p&gt;文档&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof&quot;&gt;typeof&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;instanceof&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString#using_tostring_to_detect_object_class&quot;&gt;Object.prototype.toString&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;p&gt;推荐文章，Issue 也挺重要&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/28&quot;&gt;JavaScript 专题之类型判断(上)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/30&quot;&gt;JavaScript 专题之类型判断(下)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;类型转换&lt;/h4&gt; 
&lt;p&gt;类型转换算是 JS 中情况繁杂且容易出错，但是开发中还经常会遇到的知识点。强行全部记忆容易遗忘，推荐记忆及练习开发中的常见情况。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://tc39.es/ecma262/#sec-abstract-operations&quot;&gt;ES 标准&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;标准并不好读，如果读者英文水平欠佳，可以只阅读该小节内的表格内容。&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality&quot;&gt;双等判断&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/weiqinl/You-Dont-Know-JS-CN/raw/master/types%20%26%20grammar/ch4.md&quot;&gt;You Don&#39;t Know JS 书中关于类型转换的一章节&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zh.javascript.info/type-conversions&quot;&gt;几种基本类型简单的类型转换&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/159&quot;&gt;JavaScript 深入之头疼的类型转换(上)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/164&quot;&gt;JavaScript 深入之头疼的类型转换(下)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;this&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;this&lt;/code&gt; 算是不少初学者容易搞混的一个知识点，但是它很重要，务必掌握。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/raw/1st-ed/this%20%26%20object%20prototypes/ch1.md&quot;&gt;You Don&#39;t Know JS 书中关于 this 的第一章节&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/raw/1st-ed/this%20%26%20object%20prototypes/ch2.md&quot;&gt;You Don&#39;t Know JS 书中关于 this 的第二章节&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://segmentfault.com/a/1190000011194676&quot;&gt;深入理解 js this 绑定 ( 无需死记硬背，尾部有总结和面试题解析 )&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;闭包&lt;/h4&gt; 
&lt;p&gt;闭包特别常用，但是其实挺多工程师对于闭包的理解是错误的。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;闭包&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/raw/2nd-ed/scope-closures/ch7.md&quot;&gt;You Don&#39;t Know JS 第二版中对于闭包的解释&lt;/a&gt;，该版本暂无中文翻译，读者可用 &lt;a href=&quot;https://www.deepl.com/translator&quot;&gt;DeepL&lt;/a&gt; 进行翻译。&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6957913856488243237&quot;&gt;JavaScript 的静态作用域链与“动态”闭包链&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.zhihu.com/question/34210214&quot;&gt;知乎中关于闭包的讨论&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;作用域&lt;/h4&gt; 
&lt;p&gt;作用域是指程序中定义变量的区域，该位置决定了变量的生命周期，也就是变量和函数的可访问范围。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;作用域&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Block/Scripting&quot;&gt;块作用域&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/3&quot;&gt;JavaScript 深入之词法作用域和动态作用域&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/6&quot;&gt;JavaScript 深入之作用域链&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://javascript.info/closure&quot;&gt;Variable scope, closure&lt;/a&gt;，另有 &lt;a href=&quot;https://zh.javascript.info/closure&quot;&gt;中文翻译版&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures&quot;&gt;You Don&#39;t Know JS Yet: Scope &amp;amp; Closures&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/&quot;&gt;The battle between function scope and block scope&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;变量提升&lt;/h4&gt; 
&lt;p&gt;变量提升（Hoisting）可以将变量和函数在编译阶段放入内存，从而在执行阶段时在声明前使用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;JS 变量提升&lt;/a&gt;，变量提升的概念&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://towind.fun/2021/05/10/js-hoisting/&quot;&gt;JavsScript 变量提升和函数提升&lt;/a&gt;，深度解析变量提升和函数提升，举例说明各种情况下的变量提升&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://fangyinghang.com/let-in-js/&quot;&gt;我用了两个月的时间才理解 let&lt;/a&gt;，深度理解解析 let 和 val 的区别，和 let 的暂时死区&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html&quot;&gt;JavaScript Scoping and Hoisting&lt;/a&gt;，JavaScript 中的作用域和函数声明和变量声明的提升&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;new&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;new&lt;/code&gt; 操作符可以帮助我们构建出一个实例，并且绑定上 &lt;code&gt;this&lt;/code&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/23987456&quot;&gt;JS 的 new 到底是干什么的？&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/13&quot;&gt;JavaScript 深入之 new 的模拟实现&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;call、apply、bind&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call&lt;/a&gt;，call 的概念&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply&lt;/a&gt;，apply 的概念&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind&lt;/a&gt;，bind 的概念&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://segmentfault.com/a/1190000018270750&quot;&gt;JS 中的 call、apply、bind 方法详解&lt;/a&gt;，对这三个方法的使用、面试题及具体实现做了详解&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/11&quot;&gt;call 和 apply 的模拟实现&lt;/a&gt;，模拟实现 call 和 apply，帮助更好理解&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/12&quot;&gt;bind 的模拟实现&lt;/a&gt;，模拟实现 bind，帮助更好理解&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;原型&lt;/h4&gt; 
&lt;p&gt;通过原型这种机制，JavaScript 中的对象从其他对象继承功能特性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;原型&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/raw/1st-ed/this%20%26%20object%20prototypes/ch5.md&quot;&gt;You Don&#39;t Know JS: this &amp;amp; Object Prototypes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://mp.weixin.qq.com/s/1UDILezroK5wrcK-Z5bHOg&quot;&gt;深入理解 JavaScript 原型&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844903575974313992&quot;&gt;深度解析原型中的各个难点&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://betterprogramming.pub/prototypes-in-javascript-5bba2990e04b&quot;&gt;Prototypes in JavaScript&lt;/a&gt; 需自备梯子&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Class&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;class&lt;/code&gt; 只是原型链的语法糖，与其它语言中的类不是同一样东西。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Class&quot;&gt;Class&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript&quot;&gt;理解 JavaScript 的类&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/105&quot;&gt;Babel 是如何编译 Class 上&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/106&quot;&gt;Babel 是如何编译 Class 下&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6924108426125508616&quot;&gt;给 ES6 class 说句公道话&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/158956514&quot;&gt;应该在 JavaScript 中使用 Class 吗？&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;继承&lt;/h4&gt; 
&lt;p&gt;继承是面向对象语言（Object-Oriented Language）三大特征之一，在 JS 中也占有非常重要的地位。而想要实现继承有多种方式，它们都有各自的优缺点。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance&quot;&gt;继承&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/16&quot;&gt;JavaScript 深入之继承的多种方式和优缺点&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://medium.com/@happymishra66/inheritance-in-javascript-21d2b82ffa6f&quot;&gt;JavaScript 中的继承&lt;/a&gt;，需自备梯子&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://javascript.info/class-inheritance&quot;&gt;JS 类继承&lt;/a&gt;，另有 &lt;a href=&quot;https://zh.javascript.info/class-inheritance&quot;&gt;中文翻译版&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;模块化&lt;/h4&gt; 
&lt;p&gt;这块知识必会，最好了解下模块化的前世今生以及对 ES6 的原生模块化有个深入的理解。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://segmentfault.com/a/1190000023711059&quot;&gt;【深度全面】前端 JavaScript 模块化规范进化论&lt;/a&gt;，记录了 JS 模块化的进化之路&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://v8.dev/features/modules&quot;&gt;JavaScript modules&lt;/a&gt;，由浅入深解释 JS 模块化&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive&lt;/a&gt;，一篇对 JS 模块化深入解释的文章，另有 &lt;a href=&quot;https://juejin.cn/post/6844903591979778061&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Promise&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://promisesaplus.com/&quot;&gt;Promises/A+ 规范&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theflyingmantis.medium.com/callbacks-vs-promises-and-basics-of-js-80d3d1515e81&quot;&gt;Callbacks Vs Promises and basics of JS&lt;/a&gt;，需自备梯子&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844904094079926286&quot;&gt;最简实现 Promise，支持异步链式调用（20 行）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://mp.weixin.qq.com/s/qdJ0Xd8zTgtetFdlJL3P1g&quot;&gt;100 行代码实现 Promises/A+ 规范&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Github&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/sindresorhus/promise-fun&quot;&gt;promise-fun&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;迭代器与生成器&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;迭代器与生成器&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844903616357072910&quot;&gt;[译] 什么是 JavaScript 生成器？如何使用生成器？&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5&quot;&gt;Understanding Generators in ES6 JavaScript with Examples&lt;/a&gt;，需自备梯子&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://codeburst.io/a-simple-guide-to-es6-iterators-in-javascript-with-examples-189d052c3d8e&quot;&gt;A Simple Guide to ES6 Iterators in JavaScript with Examples&lt;/a&gt;，需自备梯子&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;async await&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot;&gt;await&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844904102053281806&quot;&gt;手写 async await 的最简实现（20 行）&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/102&quot;&gt;Babel 将 Generator 编译成了什么样子 &lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;事件循环&lt;/h4&gt; 
&lt;p&gt;大家都知道 JS 是一门单线程的非阻塞的脚本语言。这也就意味着，代码在执行的任何时候只有一个主线程来处理所有的任务。所以弄懂事件循环机制对我们学习 JS 至关重要。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop&quot;&gt;事件循环&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844903512845860872&quot;&gt;这一次，彻底弄懂 JavaScript 执行机制&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6844903764202094606&quot;&gt;一次弄懂 Event Loop&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&quot;&gt;JavaScript 的工作原理&lt;/a&gt;，需自备梯子，另有 &lt;a href=&quot;https://github.com/Troland/how-javascript-works/raw/master/event-loop.md&quot;&gt;中文翻译版&lt;/a&gt;。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 事件循环可视化 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D&quot;&gt;Loupe&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;节流与防抖&lt;/h4&gt; 
&lt;p&gt;节流指连续触发事件的情况下，在某个时间段内，函数只会执行一次。 防抖指在事件被触发一定时间后再执行回调函数，如果在一定时间内该事件又被重复触发，则重启计时。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/38313717&quot;&gt;函数防抖与函数节流&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://segmentfault.com/a/1190000018428170&quot;&gt;浅谈 JS 防抖和节流&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.freecodecamp.org/news/javascript-debounce-example&quot;&gt;Debounce – How to Delay a Function in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.telerik.com/blogs/debouncing-and-throttling-in-javascript&quot;&gt;Debouncing and Throttling in JavaScript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;柯里化&lt;/h4&gt; 
&lt;p&gt;柯里化就是将接收多个参数的函数转换成接收一个参数的函数。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zh.javascript.info/currying-partials&quot;&gt;柯里化（Currying）&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/mqyqingfeng/Blog/issues/42&quot;&gt;JavaScript 专题之函数柯里化&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://blog.bitsrc.io/understanding-currying-in-javascript-ceb2188c339&quot;&gt;Understanding Currying in JavaScript&lt;/a&gt;，需自备梯子，另有 &lt;a href=&quot;https://www.cnblogs.com/GeniusLyzh/p/9937829.html&quot;&gt;中文翻译版&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;垃圾回收&lt;/h4&gt; 
&lt;p&gt;JavaScrip 在变量被创建时分配内存，并在对象不再使用时自动释放内存，这个过程被称为垃圾回收。另外我们主要学习 V8 引擎下的垃圾回收机制。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management&quot;&gt;内存管理 &amp;amp; 垃圾回收&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/yacan8/blog/issues/33&quot;&gt;深入理解 Chrome V8 垃圾回收机制&lt;/a&gt;，该文章的参考文献也可阅读下&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/lrlna/sketchin/raw/master/guides/garbage-collection-in-v8.md&quot;&gt;GC in v8&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-memory-management-how-to-handle-4-common-memory-leaks-3f28b94cfbec&quot;&gt;JavaScript 工作原理：内存管理 + 处理常见的 4 种内存泄漏&lt;/a&gt;，另有&lt;a href=&quot;https://juejin.cn/post/6844903519078580238&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;设计模式&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_design_pattern&quot;&gt;wikipedia&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA)&quot;&gt;中文版维基百科&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐书籍 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 《Head First Design Pattern》 也有中文版的&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 《Design Patterns: Elements of Reusable Object-Oriented Software》 设计模式：可复用面向对象软件的基础&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他零散但重要的知识点&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/225490777&quot;&gt;0.1 + 0.2 !== 0.3&lt;/a&gt;，JS 浮点数会造成的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTML&lt;/h3&gt; 
&lt;h4&gt;语义化&lt;/h4&gt; 
&lt;p&gt;html 语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析。在没有引入样式 CCS 样式的时候也能以一种可以分辨出来大致表示内容的文档格式显示，并且是容易阅读的。 搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。 使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Semantics#semantics_in_html&quot;&gt;HTML 中的语义&lt;/a&gt;，什么是 HTML 语义化，HTML 语义化有什么好处&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://rainylog.com/post/ife-note-1/&quot;&gt;IFE-NOTE：页面结构语义化&lt;/a&gt;，HTML5 语义化中的页面结构语义化的一些经验和理解&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;http://nicolasgallagher.com/about-html-semantics-front-end-architecture/&quot;&gt;关于 HTML 语义和前端架构&lt;/a&gt;，HTML 语义化在开发中配合 CSS 结构化类名的使用构建可重用和可组合的组件&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CSS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6854573212337078285&quot;&gt;一文梳理 CSS 必会知识点&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;盒子模型&lt;/h4&gt; 
&lt;p&gt;在 CSS 中，所有的元素都被一个个的“盒子（box）”包围着，我们广泛地使用两种“盒子” —— 块级盒子 (block box) 和 内联盒子 (inline box)，理解这些“盒子”的基本原理，是我们使用 CSS 实现准确布局、处理元素排列的关键。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model&quot;&gt;CSS 盒子模型&lt;/a&gt;，官方文档深入了解 CSS 盒子模型&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6880111680153059341&quot;&gt;CSS 盒模型之内边距、边框、外边距 十九问&lt;/a&gt;，通过举例说明盒子模型各种常见形态和问题&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.w3.org/TR/css-box-3/&quot;&gt;CSS Box Model&lt;/a&gt;，盒子模型的一些规范介绍&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.cnblogs.com/qianguyihao/p/7256371.html&quot;&gt;CSS 盒模型详解（图文教程）&lt;/a&gt;，通过图片和例子说明盒子模型的各个部分和在页面上的表现形式&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;选择器&lt;/h4&gt; 
&lt;p&gt;CSS 中，选择器用来指定网页上我们想要样式化的 HTML 元素。CSS 选择器提供了很多种方法，所以在选择要样式化的元素时，我们可以做到很精细的地步。&lt;/p&gt; 
&lt;p&gt;CSS 选择器是 CSS 规则的第一部分。它是元素和其他部分组合起来告诉浏览器哪个 HTML 元素应当是被选为应用规则中的 CSS 属性值的方式。选择器所选择的元素，叫做“选择器的对象”。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors&quot;&gt;CSS 选择器&lt;/a&gt;，官方文档详细地讲授选择器的不同使用方式，并了解它们的工作原理。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://code.tutsplus.com/zh-hans/tutorials/the-30-css-selectors-you-must-memorize--net-16048&quot;&gt;30 个你必须熟记的 CSS 选择器&lt;/a&gt;，开发中常用的 CSS 选择器，熟练掌握以后可以很大程度提高 CSS 的编码体验&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://cloud.tencent.com/developer/article/1545341&quot;&gt;深入解析 CSS 样式优先级&lt;/a&gt;，详细介绍了 CSS 样式的权重优先级，避免写重复样式和样式被覆盖不生效的问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Flex&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox&quot;&gt;flexbox&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot;&gt;A Complete Guide to Flexbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6938292463605907492&quot;&gt;Flexbox 布局中不为人知的细节&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[] 实战 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://flexboxfroggy.com/&quot;&gt;FLEXBOX FROGGY&lt;/a&gt; 一个趣味性小游戏学习 Flex 的网站&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;grid&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout&quot;&gt;grid&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://css-tricks.com/snippets/css/complete-guide-grid/&quot;&gt;A Complete Guide to Grid&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://juejin.cn/post/6854573220306255880&quot;&gt;最强大的 CSS 布局 —— Grid 布局&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 推荐文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;http://jartto.wang/2017/09/29/expand-on-performance-composite/&quot;&gt;详谈层合成（composite)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://jinlong.github.io/2015/05/24/css-retina-hairlines/&quot;&gt;移动设备如何实现真正 1px 的线？&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;框架&lt;/h2&gt; 
&lt;p&gt;框架一般选其一深入学习即可。&lt;/p&gt; 
&lt;h3&gt;虚拟 DOM&lt;/h3&gt; 
&lt;p&gt;Virtual DOM 也就是虚拟节点。通过 JS 的 Object 对象模拟 DOM 中的真实节点对象，再通过特定的 render 方法将其渲染成真实的 DOM 节点。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/faq-internals.html&quot;&gt;React 官网介绍&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.com/@gethylgeorge/how-virtual-dom-and-diffing-works-in-react-6fc805f9f84e&quot;&gt; Virtual Dom 和 Diff 算法在 React 中是如何工作的？&lt;/a&gt;，需自备梯子&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/pfan123/Articles/issues/62&quot;&gt; React 核心知识点 -- Virtual Dom 与 Diff &lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;路由&lt;/h3&gt; 
&lt;p&gt;路由在 SPA 架构中都有被用到，实际原理就是运用 &lt;code&gt;hash&lt;/code&gt; 及 &lt;code&gt;history&lt;/code&gt; 相关的 API 实现。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event&quot;&gt;hashchange&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History&quot;&gt;history&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/37730038&quot;&gt;前端路由简介以及 vue-router 实现原理&lt;/a&gt;，对前端路由及 Vue-Route 库原理做了解释，&lt;strong&gt;几个框架的路由库原理都一致&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;React&lt;/h2&gt; 
&lt;p&gt;学习框架务必从&lt;a href=&quot;https://reactjs.org/&quot;&gt;文档&lt;/a&gt;出发，起码熟读一遍及自己写过一些初步的 Demo 之后再考虑学习别的资料。&lt;/p&gt; 
&lt;h3&gt;React 推荐学习路径&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/KieSun/all-of-frontend/main/img/reactStudy.png&quot; alt=&quot;LR1Dyo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;大家可以跟着以上学习路径学习，其中除了概念相关的内容是必须学习之外，生态相关的内容大家可以在使用时再学习。&lt;/p&gt; 
&lt;h3&gt;React 推荐学习资料&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/the-road-to-learn-react-chinese/&quot;&gt;React 学习之道&lt;/a&gt;，可以 0 元购买&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;&gt;React 生命周期&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;如何编写一个组件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/components-and-props.html&quot;&gt;React 官方文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://jishuin.proginn.com/p/763bfbd4cad4&quot;&gt;[译]React 函数组件和类组件的差异&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.com/@chihsuan/%E5%AF%AB-react-components-%E8%A9%B2%E6%B3%A8%E6%84%8F%E7%9A%846%E5%80%8B%E5%9C%B0%E6%96%B9%E8%88%87%E6%8A%80%E5%B7%A7-faa2bb87a18e&quot;&gt;寫 React Components 該注意的 6 個地方與技巧&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/ry4icky5crb1pokvi0ql&quot;&gt;编写高效且可读组件的 5 个最佳实践&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.thisdot.co/blog/designing-react-components-best-practices&quot;&gt;designing-react-components-best-practices&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/08/compound-components-react/&quot;&gt;React 复合组件&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;受控组件和非受控组件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;受控组件：在 HTML 中，表单元素（如 input、 textarea 和 select ）通常自己维护 state，并根据用户输入进行更新。而在 React 中，可变状态（mutable state）通常保存在组件的 state 属性中，并且只能通过使用 setState() 或者 props 来更新&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;非受控组件：是一个存储其自己的内部状态，并且您使用查询 DOM ref，当你需要它来找到它的当前值，这有点像传统的 HTML&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;文档&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/uncontrolled-components.html&quot;&gt;React 官方文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;推荐文章&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6858276396968951822&quot;&gt;受控和非受控组件真的那么难理解吗&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.baobangdong.cn/controlled-components-and-uncontrolled-components/&quot;&gt;[译]受控组件 &amp;amp; 非受控组件&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;高阶组件（HOC）&lt;/h3&gt; 
&lt;p&gt;高阶组件（HOC）是 React 中用于复用组件逻辑的一种高级技巧。HOC 自身不是 React API 的一部分，它是一种基于 React 的组合特性而形成的设计模式。&lt;/p&gt; 
&lt;p&gt;具体而言，高阶组件是参数为组件，返回值为新组件的函数。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/higher-order-components.html&quot;&gt;React 官方文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/MrErHu/blog/issues/4&quot;&gt;React 高阶组件(HOC)入门指南&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/recompose&quot;&gt;hoc 库 recompose&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27434557&quot;&gt;精读 React 高阶组件&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hooks&lt;/h3&gt; 
&lt;p&gt;Hook 是 React 16.8 的新增特性。它可以让你在不编写类组件的情况下使用 React 的特性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://zh-hans.reactjs.org/docs/hooks-intro.html&quot;&gt;React Hooks 官方文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844904032113278990&quot;&gt;彻底理解 React hook useCallback 和 useMemo 的区别&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/0sykIHDM_Ih3W3md-DwFkw&quot;&gt;React hooks 最佳实践&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;合成事件&lt;/h3&gt; 
&lt;p&gt;合成事件（SyntheticEvent）是 React 模拟原生 DOM 事件所有能力的一个事件对象，即浏览器原生事件的跨浏览器包装器。React 根据 &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Events/&quot;&gt;W3C 规范&lt;/a&gt; 定义了合成事件。需要注意的是 v16 和 17 版本中的合成事件有差异。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/events.html&quot;&gt;React 官方文档&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;推荐文章 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000038251163&quot;&gt;探索 React 合成事件&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/380941094&quot;&gt;大佬，怎么办？升级 React17，Toast 组件不能用了&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://betterprogramming.pub/whats-the-difference-between-synthetic-react-events-and-javascript-events-ba7dbc742294&quot;&gt;What’s the Difference Between Synthetic React Events and JavaScript Events?&lt;/a&gt;，需自备梯子&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://blog.saeloun.com/2021/04/06/react-17-removes-event-pooling-in-modern-system.html&quot;&gt;React 17 removes event pooling in the modern browsers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 路由&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/remix-run/react-router&quot;&gt;react-router&lt;/a&gt;，React 声明式路由&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reach/router&quot;&gt;reach router&lt;/a&gt;，下一代的 React 路由&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 状态管理&lt;/h3&gt; 
&lt;p&gt;React 状态管理可谓百花齐放百家争鸣，远远不止笔者列的这些库。但是实际上很多项目完全是不需要用到状态管理的，反而是增加编码复杂度，其实利用 React Context 或者 &lt;a href=&quot;https://github.com/tannerlinsley/react-query&quot;&gt;react-query&lt;/a&gt; 这类接口请求库就能很好地满足需求了。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt;，JS 应用的状态容器，提供可预测的状态管理&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx&quot;&gt;mobx&lt;/a&gt;，简单，可扩展的状态管理库&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebookexperimental/Recoil&quot;&gt;recoil&lt;/a&gt;，React 状态管理库&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statelyai/xstate&quot;&gt;xstate&lt;/a&gt;，有限状态机&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmndrs/zustand&quot;&gt;zustand&lt;/a&gt;，简单、快速和可扩展的骨状态管理解决方案&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 接口请求&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios&quot;&gt;axios&lt;/a&gt;，传统接口请求库&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tannerlinsley/react-query&quot;&gt;react-query&lt;/a&gt;，用于获取、缓存和更新 React 中异步数据的 Hooks 接口请求库&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vercel/swr&quot;&gt;swr&lt;/a&gt;，用于数据请求的 React Hooks 库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React SSR&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nestjs/nest&quot;&gt;nest.js&lt;/a&gt;，一个渐进式的 Node.js 框架，用于构建高效、可靠和可扩展的服务端应用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 单测&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;jest&lt;/a&gt;，优雅、简洁的 JavaScript 测试框架，单测必选项&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library&quot;&gt;react-testing-library&lt;/a&gt;，简单且完整的 React DOM 测试工具&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React CSS 方案&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;styled-components&lt;/a&gt;，CSS in JS 方案&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss&quot;&gt;tailwindcss&lt;/a&gt;，Atom CSS 方案&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neroneroffy/react-source-code-debug&quot;&gt;react-source-code-debug&lt;/a&gt;，学习如何调试源码&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/7kms/react-illustration-series&quot;&gt;react-illustration-series&lt;/a&gt;，图解 react 源码，用大量配图的方式，致力于将 react 原理表述清楚&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BetaSu/just-react&quot;&gt;just-react&lt;/a&gt;，「React 技术揭秘」，一本自顶向下的 React 源码分析书&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PiNengShaoNian/tiny-react&quot;&gt;tiny-react&lt;/a&gt;，基于 React17 精简而来的最小版实现&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Blog 推荐&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://overreacted.io/&quot;&gt;Dan Abramov&lt;/a&gt;，React 核心开发者的 Blog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vue&lt;/h2&gt; 
&lt;p&gt;学习框架务必从&lt;a href=&quot;https://vuejs.org/&quot;&gt;文档&lt;/a&gt;出发，起码熟读一遍及自己写过一些初步的 Demo 之后再考虑学习别的资料。&lt;/p&gt; 
&lt;p&gt;对于 Vue 来说，官方文档内容相当齐全，并且全家桶也都是官方出的，因此无需头疼技术栈选型。&lt;/p&gt; 
&lt;h3&gt;Vue 推荐学习路径&lt;/h3&gt; 
&lt;p&gt;目前 3.0 生态并不完善，在公司内部基本需要先熟悉 2.0 的写法，因此推荐新手先学习 2.0 的内容。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/23134551&quot;&gt;新手向：Vue 2.0 的建议学习顺序&lt;/a&gt;，尤雨溪自己写的学习路径，时至今日也不过时&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vue 推荐学习资料&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;awesome-vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://github.com/learn-vuejs/vue-patterns&quot;&gt;vue-patterns&lt;/a&gt;，有用的 Vue 模式、技巧、提示以及有帮助的精选链接&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vue 原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ustbhuangyi/vue-analysis&quot;&gt;vue-analysis&lt;/a&gt;，黄老师出品&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HcySunYang/vue-design&quot;&gt;vue-design&lt;/a&gt;，官方人员出品，域名已过期，需要大家自行在仓库内浏览内容。虽然麻烦了点，但是质量绝对过关&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;浏览器&lt;/h2&gt; 
&lt;p&gt;一般说到浏览器，常指的都是 Chrome。浏览器作为前端不可或缺的载体，我们势必需要好好学习及掌握其相关的知识。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;另外浏览器中涉及到的知识面很多，与 JS 执行机制、网络、性能优化、安全等领域都有关联，因此大家在学习这部分的内容时需要多与之前学习的知识联系起来。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;架构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/09/inside-browser-part1&quot;&gt;Inside look at modern web browser&lt;/a&gt;，这是一个 Google 出的系列专栏，共有四篇文章，内容上到浏览器的整体架构，下至页面的渲染规则都说了一遍，另有 &lt;a href=&quot;https://cloud.tencent.com/developer/article/1806716&quot;&gt;中文翻译&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;整体流程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/&quot;&gt;浏览器的工作原理：新式网络浏览器幕后揭秘&lt;/a&gt;，这虽然是一篇 11 年的文章，但是内容在如今也不过时，文章广为流传&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skyline75489/what-happens-when-zh_CN&quot;&gt;当···时发生了什么？&lt;/a&gt;，经典面试题，文中对于这个流程里的相关内容力求尽可能具体，不遗漏任何细节&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fex.baidu.com/blog/2014/05/what-happen/&quot;&gt;从输入 URL 到页面加载完成的过程中都发生了什么事情？&lt;/a&gt;，这篇文章涉及了大量网络及硬件知识&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;渲染相关&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coolshell.cn/articles/9666.html&quot;&gt;浏览器的渲染原理简介&lt;/a&gt;，左耳朵耗子出品，如果上文「浏览器的工作原理：新式网络浏览器幕后揭秘」觉得太长不看或者看完觉得没看懂什么，那么可以来阅读下本文，起码能从中学会一些能用在工作上的东西&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903569087266823&quot;&gt;浏览器的回流与重绘 (Reflow &amp;amp; Repaint)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JS 执行机制&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000012925872&quot;&gt;从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理&lt;/a&gt;，超长文，这篇文章能让你对进程线程，浏览器多进程、浏览器内核多线程、JS 单线程、JS 运行机制有个不错的理解&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;缓存&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching&quot;&gt;文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903593275817998&quot;&gt;彻底理解浏览器的缓存机制&lt;/a&gt;，浏览器缓存机制与性能优化息息相关&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55623075&quot;&gt;图解 Http 缓存控制之 max-age=0、no-cache、no-store 区别&lt;/a&gt;，很有趣的图解文章&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Devtools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/docs/devtools/&quot;&gt;Chrome DevTools&lt;/a&gt;，Google 出的 DevTools 的使用说明书，对于每个功能的使用都有详细的介绍，看啥文章都不如看这个&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dendoink/FrontendWingman/tree/master/Chrome_Devtools_Tricks&quot;&gt;Chrome_Devtools_Tricks&lt;/a&gt;，介绍了 Chrome DevTools 的使用技巧，从不同的情景来说明应该如何搭配使用 Chrome DevTools 中的小技巧，适合英文不怎么好的读者阅读&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;浏览器安全&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security&quot;&gt;文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000023396707&quot;&gt;一文读懂 Web 安全&lt;/a&gt;，简单介绍了一些前端需要注意的安全知识&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge&quot;&gt;the-book-of-secret-knowledge&lt;/a&gt;，如果你对安全领域有兴趣，可以阅读下这个仓库的内容&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;性能优化&lt;/h2&gt; 
&lt;p&gt;性能优化是一个系统性工程，涉及到的方面很多，不仅仅只是大家常说的静态文件和代码优化那么简单。&lt;/p&gt; 
&lt;p&gt;大家学习这部分内容的时候可以先从推荐的文章中了解具体有哪些性能优化手段及具体方法，然后根据这些内容去实验。&lt;/p&gt; 
&lt;h3&gt;推荐书籍&lt;/h3&gt; 
&lt;p&gt;其实性能优化相关的书籍市面上出的不多，优秀的也都是好几年前的老书了，看不看也无所谓了。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/25856314/&quot;&gt;Web 性能权威指南&lt;/a&gt;，豆瓣 8.9 分，老书&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/4719162/&quot;&gt;高性能网站建设进阶指南&lt;/a&gt;，豆瓣 8.9 分，老书&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;推荐网站&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.dev/&quot;&gt;web.dev&lt;/a&gt;，Google 自家的 blog，你能在这上面学到很多性能优化及如何做好用户体验的知识，其实很多市面上的文章内容都有这个网站的影子&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;整体优化建议&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6892994632968306702&quot;&gt;前端性能优化 24 条建议（2020）&lt;/a&gt;，类似现代版雅虎军规&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alienzhou/fe-performance-journey&quot;&gt;前端性能优化之旅&lt;/a&gt;，系统性介绍性能优化的手段，参考资料也值得学习&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&quot;&gt;Front-End Performance Checklist 2021&lt;/a&gt;，一本很火的免费 PDF，包含了很多性能优化相关的 Checklist&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6935584878071119885&quot;&gt;React 性能优化 | 包括原理、技巧、Demo、工具使用&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能指标&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.dev/learn-web-vitals/&quot;&gt;文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6850037270729359367&quot;&gt;还在看那些老掉牙的性能优化文章么？这些最新性能指标了解下&lt;/a&gt;，文章会介绍谷歌提倡的七个用户体验指标（也可以认为是性能指标）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/SlS0J9eSb20PCLW062sQVg&quot;&gt;做性能优化时，我们关注哪些指标？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能监控&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6919295789630455815&quot;&gt;前端搞工程化：从零打造性能检测库「源码 + 视频」&lt;/a&gt;，光会性能优化的手段还是不够的，如何体现优化的价值也是至关重要的&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;TypeScript 是为开发大型应用而设计的，并且 TypeScript 可转译成 JavaScript。由于 TypeScript 是 JavaScript 的严格超集，任何现有的 JavaScript 程序都是合法的 TypeScript 程序。&lt;/p&gt; 
&lt;p&gt;文档&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/&quot;&gt;TypeScript 官方文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐文章&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ts.xcatliu.com/&quot;&gt;TypeScript 入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6989796543880495135&quot;&gt;TypeScript 的另一面：类型编程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;TypeScript Deep Dive&lt;/a&gt; 另有&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐开源项目&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chibicode/TypeScript-for-Beginner-Programmers&quot;&gt;TypeScript-for-Beginner-Programmers&lt;/a&gt; 需自备梯子&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/type-challenges/type-challenges&quot;&gt;type-challenges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-exercises/typescript-exercises&quot;&gt;TypeScript exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Electron&lt;/h2&gt; 
&lt;p&gt;Electron 是一个可以使用 Web 技术如 JavaScript、HTML 和 CSS 来创建跨平台原生桌面应用的框架。借助 Electron，我们可以使用纯 JavaScript 来调用丰富的原生 APIs。&lt;/p&gt; 
&lt;p&gt;文档&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/&quot;&gt;Electron 官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weishuai.gitbooks.io/electron-/content/&quot;&gt;Electron 中文教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐文章&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844904029231775758&quot;&gt;分享这半年的 Electron 应用开发和优化经验&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903862302670862&quot;&gt;用 JS 开发跨平台桌面应用，从原理到实践&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/developers-writing/building-a-desktop-application-with-electron-204203eeb658&quot;&gt;Building a desktop application with Electron&lt;/a&gt; 需翻墙访问&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐开源项目&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome-electron&quot;&gt;Electron 资源&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tal-tech/electron-playground&quot;&gt;Electron Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xiaozhu188/electron-vue-cloud-music&quot;&gt;electron-vue-cloud-music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;组件库&lt;/h2&gt; 
&lt;p&gt;组件库顾名思义指的就是将多个公共模块或者可复用的组件提取整合生成的一个仓库&lt;/p&gt; 
&lt;p&gt;知名度较广的组件库：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ant-design/ant-design.git&quot;&gt;antd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ElemeFE/element.git&quot;&gt;elementUI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;相关文档：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt;lerna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/raw/master/CONTRIBUTING.md#commit&quot;&gt;angular commit 规范&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties&quot;&gt;css variables&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐文章：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/i4q9ybdmxzmu8eex8qvh&quot;&gt;从 0 到 1，搭建一个体系完善的前端 React 组件库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/182553920&quot;&gt;如何规范你的 Git commit？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/71385053&quot;&gt;基于 lerna 和 yarn workspace 的 monorepo 工作流&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/257159028&quot;&gt;FusionNext 可配置能力从 Sass 体系升级为支持 Css Variable&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;微前端&lt;/h2&gt; 
&lt;p&gt;是一种类似于微服务的架构，它将微服务的理念应用于浏览器端，即将单页面前端应用由单一的单体应用转变为多个小型前端应用聚合为一的应用。&lt;/p&gt; 
&lt;p&gt;优势：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;代码库更小，更内聚、可维护性更高&lt;/li&gt; 
 &lt;li&gt;松耦合、自治的团队可扩展性更好&lt;/li&gt; 
 &lt;li&gt;渐进地升级、更新甚至重写部分前端功能成为了可能&lt;/li&gt; 
 &lt;li&gt;独立开发部署，缩小变更范围，进而降低相关风险&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;框架：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://single-spa.js.org/&quot;&gt;single-spa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/umijs/qiankun&quot;&gt;蚂蚁-乾坤&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ice-lab/icestark&quot;&gt;淘系-icestark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modern-js-dev/garfish&quot;&gt;字节-Garfish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/micro-zoe/micro-app&quot;&gt;京东-micro-app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bit.dev&quot;&gt;Bit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efoxTeam/emp&quot;&gt;EMP - Micro Frontends solution&lt;/a&gt; 基于 webpack 5 &amp;amp; module federation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐文章：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/7004661323124441102&quot;&gt;从零到一实现企业级微前端框架，保姆级教学&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/L9wbfNG5fTXF5bx7dcgj4Q&quot;&gt;字节跳动是如何落地微前端的&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://livebook.manning.com/book/micro-frontends-in-action/chapter-1/v-4/&quot;&gt;What Are Micro Frontends?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.meituan.com/2019/12/26/meituan-bifrost.html&quot;&gt;Bifrost 微前端框架及其在美团闪购中的实践&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903943873675271&quot;&gt;每日优鲜供应链前端团队微前端改造&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.meituan.com/2020/02/27/meituan-waimai-micro-frontends-practice.html&quot;&gt;微前端在美团外卖的实践&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/how-we-build-micro-front-ends-d3eeeac0acfc&quot;&gt;How We Build Micro Frontends&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/revolutionizing-micro-frontends-with-webpack-5-module-federation-and-bit-99ff81ceb0&quot;&gt;Revolutionizing Micro Frontends with Webpack 5, Module Federation and Bit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/a1029563229/blogs/raw/master/Source-Code/qiankun/1.md&quot;&gt;万字长文+图文并茂+全面解析微前端框架 qiankun 源码&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;推荐学习资料&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/billyjov/microfrontend-resources&quot;&gt;&lt;/a&gt;，🔥 关于微前端的各类资料推荐&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;跨端框架&lt;/h2&gt; 
&lt;p&gt;跨端的最主要的含义就是一套代码多端运行，减少重复劳动&lt;/p&gt; 
&lt;p&gt;目前看来，国内比较流行的是小程序, H5, App 三端跨的框架， &lt;a href=&quot;https://github.com/dcloudio/uni-app&quot;&gt;uniapp&lt;/a&gt; 及 &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;taro&lt;/a&gt; 是其中做的比较出彩的两个框架。当然在 taro3.0 之前（以下主要是说小程序），taro 跟 uniapp 都是使用编译时做更多的事情，编译成小程序能够运行的代码。&lt;/p&gt; 
&lt;p&gt;而在 taro3.0 之后变成了与 &lt;a href=&quot;https://github.com/remaxjs/remax&quot;&gt;remax&lt;/a&gt; 相同的思想，在运行时做更多的事情，保证了原框架代码能够完全使用，而不需要为了转换成其他小程序时做兼容。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/remaxjs/awesome-remax&quot;&gt;awesome-remax&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.meituan.com/2021/06/10/react-native-hybrid-practice-dsl-in-meituan.html&quot;&gt;美团自研 react 跨端&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844904036743774216&quot;&gt;京东 taro&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;监控&lt;/h2&gt; 
&lt;p&gt;当业务进入稳定，最需要做的肯定是对于业务线上的各种性能、异常及常规业务进行监控，避免在上线之后成为瞎子。&lt;/p&gt; 
&lt;p&gt;目前市场比较出名的监控系统：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sentry.io/welcome/&quot;&gt;sentry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aliyun.com/product/nodejs&quot;&gt;ali node&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bugly.qq.com/v2/&quot;&gt;bugly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixpanel.com/&quot;&gt;mixpanel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tingyun.com/&quot;&gt;听云&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐开源库：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rrweb-io/rrweb&quot;&gt;rrweb&lt;/a&gt;，提供像素级的录制与回放，帮助正确定位问题是如何发生的&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clouDr-f2e/monitor&quot;&gt;monitor&lt;/a&gt;，👀 一款轻量级的收集页面的用户点击行为、路由跳转、接口报错、代码报错、并上报服务端的 SDK&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mitojs/mitojs&quot;&gt;mitojs&lt;/a&gt; 上面 &lt;code&gt;monitor&lt;/code&gt; 作者新维护的库。全新插拔式的监控 SDK，代码架构更清晰，配置项更丰富，高度可定制化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;推荐文章：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.meituan.com/2019/08/15/mtflexbox-automation-buried-point-exploration.html&quot;&gt;美团可视化埋点方案&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.alloyteam.com/2020/01/14184/#prettyPhoto&quot;&gt;如何进行 web 性能监控？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/dxa8am44oz*lukk5ufhy&quot;&gt;蚂蚁金服如何把前端性能监控做到极致?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/29953354&quot;&gt;如何做前端异常监控？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6862559324632252430#heading-17&quot;&gt;前端监控平台系列：JS SDK（已开源）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/7017974567943536671?utm_source=gold_browser_extension&quot;&gt;前端监控 SDK 的一些技术要点原理分析&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;日常充电&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sdmg15/Best-websites-a-programmer-should-visit&quot;&gt;Best-websites-a-programmer-should-visit&lt;/a&gt;，优秀的工程师都应该阅读的网站&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CSS 日常充电&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/l-hammer/You-need-to-know-css&quot;&gt;You-need-to-know-css&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://csscoco.com/inspiration/#/&quot;&gt;CSS Inspiration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://qishaoxuan.github.io/css_tricks/&quot;&gt;CSS Tricks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tobiasahlin.com/spinkit/&quot;&gt;spinkit&lt;/a&gt; 需自备梯子&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animista.net/&quot;&gt;animista&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Github 优秀学习资料&lt;/h2&gt; 
&lt;h3&gt;JS 优秀学习资料&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leonardomso/33-js-concepts&quot;&gt;33-js-concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/secguide/raw/main/JavaScript%E5%AE%89%E5%85%A8%E6%8C%87%E5%8D%97.md#1.1&quot;&gt;JavaScript 安全指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/denysdovhan/wtfjs&quot;&gt;What the f*ck JavaScript?&lt;/a&gt;，有趣的 JavaScript 示例列表，附有解释&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;clean-code-javascript&lt;/a&gt;，适应于 JavaScript 的优雅代码建议&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React 优秀学习资料&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mithi/react-philosophies&quot;&gt;react-philosophies&lt;/a&gt;，React 哲学，内容为写 React 代码时思考的事情&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;代码样式及安全&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/secguide&quot;&gt;secguide&lt;/a&gt;，面向开发人员梳理的代码安全指南&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;生产力工具&lt;/h2&gt; 
&lt;h3&gt;流程图&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://whimsical.com/&quot;&gt;whimsical&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;作者信息&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;微信扫码关注公众号，订阅更多精彩内容&lt;/th&gt; 
   &lt;th&gt;加笔者微信进群与大厂大佬讨论技术&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://yck-1254263422.cos.ap-shanghai.myqcloud.com/20191220223702.jpeg&quot; width=&quot;500px;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://yck-1254263422.cos.ap-shanghai.myqcloud.com/20191220224224.png&quot; width=&quot;260px;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>HashLips/hashlips_nft_minting_dapp</title>
      <link>https://github.com/HashLips/hashlips_nft_minting_dapp</link>
      <description>&lt;p&gt;HashLips minting dapp is a quick and easy way to connect your smart contract and start minting NFTs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips 👄&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_nft_minting_dapp/raw/main/logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;📺 YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.com/invite/qh6MWhMJDN&quot;&gt;👄 Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;💬 Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;🐦 Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;ℹ️ Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;HashLips NFT minting dapp 🔥&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_nft_minting_dapp/raw/main/banner.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;This repo provides a nice and easy way for linking an existing NFT smart contract to this minting dapp. There are two ways of using this repo, you can go the simple route or the more complex one.&lt;/p&gt; 
&lt;p&gt;The simple route is so simple, all you need to do is download the build folder on the release page and change the configuration to fit your needs. (Follow the video for a walk through).&lt;/p&gt; 
&lt;p&gt;The more complex route allows you to add additional functionality if you are comfortable with coding in react.js. (Follow the below instructions for a walk through).&lt;/p&gt; 
&lt;h2&gt;Installation 🛠️&lt;/h2&gt; 
&lt;p&gt;If you are cloning the project then run this first, otherwise you can download the source code on the release page and skip this step.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/HashLips/hashlips_nft_minting_dapp.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure you have node.js installed so you can use npm, then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage ℹ️&lt;/h2&gt; 
&lt;p&gt;In order to make use of this dapp, all you need to do is change the configurations to point to your smart contract as well as update the images and theme file.&lt;/p&gt; 
&lt;p&gt;For the most part all the changes will be in the &lt;code&gt;public&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;To link up your existing smart contract, go to the &lt;code&gt;public/config/config.json&lt;/code&gt; file and update the following fields to fit your smart contract, network and marketplace details. The cost field should be in wei.&lt;/p&gt; 
&lt;p&gt;Note: this dapp is designed to work with the intended NFT smart contract, that only takes one parameter in the mint function &quot;mintAmount&quot;. But you can change that in the App.js file if you need to use a smart contract that takes 2 params.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;CONTRACT_ADDRESS&quot;: &quot;0x827acb09a2dc20e39c9aad7f7190d9bc53534192&quot;,
  &quot;SCAN_LINK&quot;: &quot;https://polygonscan.com/token/0x827acb09a2dc20e39c9aad7f7190d9bc53534192&quot;,
  &quot;NETWORK&quot;: {
    &quot;NAME&quot;: &quot;Polygon&quot;,
    &quot;SYMBOL&quot;: &quot;Matic&quot;,
    &quot;ID&quot;: 137
  },
  &quot;NFT_NAME&quot;: &quot;Nerdy Coder Clones&quot;,
  &quot;SYMBOL&quot;: &quot;NCC&quot;,
  &quot;MAX_SUPPLY&quot;: 1000,
  &quot;WEI_COST&quot;: 75000000000000000,
  &quot;DISPLAY_COST&quot;: 0.075,
  &quot;GAS_LIMIT&quot;: 285000,
  &quot;MARKETPLACE&quot;: &quot;Opeansea&quot;,
  &quot;MARKETPLACE_LINK&quot;: &quot;https://opensea.io/collection/nerdy-coder-clones&quot;,
  &quot;SHOW_BACKGROUND&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure you copy the contract ABI from remix and paste it in the &lt;code&gt;public/config/abi.json&lt;/code&gt; file. (follow the youtube video if you struggle with this part).&lt;/p&gt; 
&lt;p&gt;Now you will need to create and change 2 images and a gif in the &lt;code&gt;public/config/images&lt;/code&gt; folder, &lt;code&gt;bg.png&lt;/code&gt;, &lt;code&gt;example.gif&lt;/code&gt; and &lt;code&gt;logo.png&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Next change the theme colors to your liking in the &lt;code&gt;public/config/theme.css&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;:root {
  --primary: #ebc908;
  --primary-text: #1a1a1a;
  --secondary: #ff1dec;
  --secondary-text: #ffffff;
  --accent: #ffffff;
  --accent-text: #000000;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you will need to create and change the &lt;code&gt;public/favicon.ico&lt;/code&gt;, &lt;code&gt;public/logo192.png&lt;/code&gt;, and &lt;code&gt;public/logo512.png&lt;/code&gt; to your brand images.&lt;/p&gt; 
&lt;p&gt;Remember to update the title and description the &lt;code&gt;public/index.html&lt;/code&gt; file&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;title&amp;gt;Nerdy Coder Clones&amp;lt;/title&amp;gt;
&amp;lt;meta name=&quot;description&quot; content=&quot;Mint your Nerdy Coder Clone NFT&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also remember to update the short_name and name fields in the &lt;code&gt;public/manifest.json&lt;/code&gt; file&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;short_name&quot;: &quot;NCC&quot;,
  &quot;name&quot;: &quot;Coder Clone NFT&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After all the changes you can run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or create the build if you are ready to deploy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can host the contents of the build folder on a server.&lt;/p&gt; 
&lt;p&gt;That&#39;s it! you&#39;re done.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rawgraphs/rawgraphs-app</title>
      <link>https://github.com/rawgraphs/rawgraphs-app</link>
      <description>&lt;p&gt;A web interface to create custom vector-based visualizations on top of RAWGraphs core&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RAWGraphs&lt;/strong&gt; is an open web tool to create custom vector-based visualizations on top of the amazing &lt;a href=&quot;https://github.com/mbostock/d3&quot;&gt;d3.js&lt;/a&gt; library. It has been developed by &lt;a href=&quot;http://www.densitydesign.org/&quot;&gt;DensityDesign Research Lab&lt;/a&gt; (&lt;a href=&quot;http://www.polimi.it/&quot;&gt;Politecnico di Milano&lt;/a&gt;), &lt;a href=&quot;http://calib.ro/&quot;&gt;Calibro&lt;/a&gt; and &lt;a href=&quot;https://inmagik.com/&quot;&gt;INMAGIK&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Primarily conceived as a tool for designers and vis geeks, RAWGraphs aims at providing a missing link between spreadsheet applications (e.g., LibreOffice Calc, Microsoft Excel, Apple Numbers, Google Docs) and vector graphics editors (e.g., Inkscape, Adobe Illustrator).&lt;/p&gt; 
&lt;p&gt;RAWGraphs works with &lt;a href=&quot;https://en.wikipedia.org/wiki/Table_(information)&quot;&gt;tabular data&lt;/a&gt; (e.g., spreadsheets and comma-separated values) as well as with copied-and-pasted texts from other applications. Based on the &lt;a href=&quot;http://en.wikipedia.org/wiki/Svg&quot;&gt;SVG&lt;/a&gt; format, visualizations can be easily edited with vector graphics applications for further refinements or directly embedded into web pages.&lt;/p&gt; 
&lt;p&gt;Knowing the need to work with sensitive information, the data injected into RAWGraphs is processed only by the web browser: &lt;strong&gt;no server-side operations or storages are performed&lt;/strong&gt;. No one will see, touch or copy your data!&lt;/p&gt; 
&lt;p&gt;RAWGraphs is also highly customizable and extensible, accepting new custom layouts defined by users. For more information about adding or editing layouts, see the &lt;a href=&quot;https://github.com/rawgraphs/raw/wiki/Developer-Guide&quot;&gt;Developer Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;App page: &lt;a href=&quot;http://app.rawgraphs.io&quot;&gt;app.rawgraphs.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Project official page: &lt;a href=&quot;http://rawgraphs.io&quot;&gt;rawgraphs.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google group: &lt;a href=&quot;https://groups.google.com/forum/#!forum/densitydesign-raw&quot;&gt;groups.google.com/forum/#!forum/densitydesign-raw&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The easiest way to use RAWGraphs is by accessing the most updated version on the &lt;strong&gt;&lt;a href=&quot;http://app.rawgraphs.io&quot;&gt;official app page&lt;/a&gt;&lt;/strong&gt;. However, RAWGraphs can also run locally on your machine: see the installation instructions below for know-how.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;If you want to run your instance of RAWGraphs locally on your machine, be sure you have the following requirements installed. The following guide is for intermediate users (you will have to open your console and type some commands, it&#39;s better if you know what you are doing).&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;If you want to run your instance of RAWGraphs locally on your machine, be sure you have the following requirements installed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;Git&lt;/a&gt; (it could be used through the interface of &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/getting-started/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Instructions (macOS)&lt;/h3&gt; 
&lt;p&gt;In the terminal, navigate to the folder where you want to install the app and clone the &lt;code&gt;RAWGraphs-app&lt;/code&gt; GitHub repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/rawgraphs/rawgraphs-app.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browse the folder containing the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd rawgraphs-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the needed dependencies through Yarn:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can run the project locally in development mode with the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also build your own version and upload it on your server by running the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute to RAWGraphs&#39;s development? You are more than welcome! Start by forking the repository (the &quot;Fork&quot; button at the top-right corner of this page) and follow the instructions above to clone it and install dependencies. Then you can use Github&#39;s issues and pull requests to discuss and share your work. You will need to sign a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt; before submitting. We adopted CLA to be sure that the project will remain open source. For more information, write us: &lt;a href=&quot;mailto:hello@rawgraphs.io&quot;&gt;hello@rawgraphs.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Publications / Citing RAWGraphs&lt;/h2&gt; 
&lt;p&gt;If you have found RAWGraphs helpful in your research, or if you want to reference it in your work, please consider citing the paper we presented at &lt;a href=&quot;http://sites.unica.it/chitaly2017/&quot;&gt;CHItaly 2017&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;you can read the full article in Green Open Access at the following link:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://dl.acm.org/images/oa.gif&quot; alt=&quot;oa icon&quot;&gt; &lt;a href=&quot;http://rawgraphs.io/about/#cite&quot;&gt;RAWGraphs: A Visualisation Platform to Create Open Outputs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cite RAWGraphs:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Mauri, M., Elli, T., Caviglia, G., Uboldi, G., &amp;amp; Azzi, M. (2017). RAWGraphs: A Visualisation Platform to Create Open Outputs. In &lt;em&gt;Proceedings of the 12th Biannual Conference on Italian SIGCHI Chapter&lt;/em&gt; (p. 28:1–28:5). New York, NY, USA: ACM. &lt;a href=&quot;https://doi.org/10.1145/3125571.3125585&quot;&gt;https://doi.org/10.1145/3125571.3125585&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Bibtex:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@inproceedings{Mauri:2017:RVP:3125571.3125585,
 author = {Mauri, Michele and Elli, Tommaso and Caviglia, Giorgio and Uboldi, Giorgio and Azzi, Matteo},
 title = {RAWGraphs: A Visualisation Platform to Create Open Outputs},
 booktitle = {Proceedings of the 12th Biannual Conference on Italian SIGCHI Chapter},
 series = {CHItaly &#39;17},
 year = {2017},
 isbn = {978-1-4503-5237-6},
 location = {Cagliari, Italy},
 pages = {28:1--28:5},
 articleno = {28},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/3125571.3125585},
 doi = {10.1145/3125571.3125585},
 acmid = {3125585},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Visualization tools, data visualization, open output, visual interface},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;RAWGraphs is provided under the &lt;a href=&quot;https://github.com/rawgraphs/rawgraphs-app/raw/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (c), 2013-2021 DensityDesign Lab, Calibro, INMAGIK &amp;lt;hello@rawgraphs.io&amp;gt;

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>iamadamdev/bypass-paywalls-chrome</title>
      <link>https://github.com/iamadamdev/bypass-paywalls-chrome</link>
      <description>&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/raw/master/src/icons/bypass.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Bypass Paywalls&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download this repo as a &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&quot;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Enable Developer Mode.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/releases/latest/download/bypass-paywalls-firefox.xpi&quot;&gt;Download and install the latest version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ✕ to keep the extension enabled.&lt;/li&gt; 
 &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; 
 &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; 
 &lt;li&gt;The Firefox version supports automatic updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bypass the following sites&#39; paywalls with this extension:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.adweek.com&quot;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ad.nl&quot;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.americanbanker.com&quot;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ambito.com&quot;&gt;Ámbito&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.baltimoresun.com&quot;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.barrons.com&quot;&gt;Barron&#39;s&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloombergquint.com&quot;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloomberg.com&quot;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bndestem.nl&quot;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bostonglobe.com&quot;&gt;Boston Globe&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bd.nl&quot;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.brisbanetimes.com.au&quot;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.businessinsider.com&quot;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.caixinglobal.com&quot;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.centralwesterndaily.com.au&quot;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://cen.acs.org&quot;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagotribune.com&quot;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.corriere.it&quot;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagobusiness.com&quot;&gt;Crain&#39;s Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailypress.com&quot;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.gelderlander.nl&quot;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.groene.nl&quot;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.destentor.nl&quot;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://speld.nl&quot;&gt;De Speld&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tijd.be&quot;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.volkskrant.nl&quot;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.demorgen.be&quot;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.denverpost.com&quot;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.df.cl&quot;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.editorialedomani.it&quot;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dynamed.com&quot;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ed.nl&quot;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elmercurio.com&quot;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elpais.com&quot;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elperiodico.com&quot;&gt;El Periodico&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elu24.ee&quot;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.britannica.com&quot;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.estadao.com.br&quot;&gt;Estadão&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.examiner.com.au&quot;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.expansion.com&quot;&gt;Expansión&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fnlondon.com&quot;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.financialpost.com&quot;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ft.com&quot;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.firstthings.com&quot;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.foreignpolicy.com&quot;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fortune.com&quot;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.genomeweb.com&quot;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.glassdoor.com&quot;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.globes.co.il&quot;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.grubstreet.com&quot;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.co.il&quot;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.com&quot;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.handelsblatt.com&quot;&gt;Handelsblatt&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://harpers.org&quot;&gt;Harper&#39;s Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.courant.com&quot;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.hbr.org&quot;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.heraldsun.com.au&quot;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://fd.nl&quot;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.historyextra.com&quot;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.humo.be&quot;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ilmanifesto.it&quot;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inc.com&quot;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.interest.co.nz&quot;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.investorschronicle.co.uk&quot;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&quot;https://www.lecho.be&quot;&gt;L&#39;Écho&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://labusinessjournal.com&quot;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lanacion.com.ar&quot;&gt;La Nación&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.repubblica.it&quot;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lastampa.it&quot;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latercera.com&quot;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lavoixdunord.fr&quot;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ledevoir.com&quot;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.leparisien.fr&quot;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lesechos.fr&quot;&gt;Les Échos&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.loebclassics.com&quot;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lrb.co.uk&quot;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latimes.com&quot;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sloanreview.mit.edu&quot;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.technologyreview.com&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medium.com&quot;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medscape.com&quot;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://mexiconewsdaily.com&quot;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mv-voice.com&quot;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalgeographic.com&quot;&gt;National Geographic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nydailynews.com&quot;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nrc.nl&quot;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ntnews.com.au&quot;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalpost.com&quot;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzz.ch&quot;&gt;Neue Zürcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nymag.com&quot;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzherald.co.nz&quot;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://asia.nikkei.com&quot;&gt;Nikkei Asian Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ocregister.com&quot;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.orlandosentinel.com&quot;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.pzc.nl&quot;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.paloaltoonline.com&quot;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.parool.nl&quot;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.postimees.ee&quot;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://qz.com&quot;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.quora.com&quot;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://quotidiani.gelocal.it&quot;&gt;Quotidiani Gelocal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://republic.ru&quot;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.reuters.com&quot;&gt;Reuters&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sandiegouniontribune.com&quot;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sfchronicle.com&quot;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.scientificamerican.com&quot;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://seekingalpha.com&quot;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://slate.com&quot;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sofrep.com&quot;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.statista.com&quot;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.startribune.com&quot;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.stuff.co.nz&quot;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sun-sentinel.com&quot;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.techinasia.com&quot;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraaf.nl&quot;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.adelaidenow.com.au&quot;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theadvocate.com.au&quot;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theage.com.au&quot;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-american-interest.com&quot;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theatlantic.com&quot;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.afr.com&quot;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theaustralian.com.au&quot;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bizjournals.com&quot;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.canberratimes.com.au&quot;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecourier.com.au&quot;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.couriermail.com.au&quot;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecut.com&quot;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailytelegraph.com.au&quot;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thediplomat.com&quot;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.economist.com&quot;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theglobeandmail.com&quot;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theherald.com.au&quot;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thehindu.com&quot;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.irishtimes.com&quot;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.japantimes.co.jp&quot;&gt;The Japan Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.kansascity.com&quot;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mercurynews.com&quot;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themercury.com.au&quot;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mcall.com&quot;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenation.com&quot;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenational.scot&quot;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newstatesman.com&quot;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nytimes.com&quot;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newyorker.com&quot;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.news-gazette.com&quot;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inquirer.com&quot;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thesaturdaypaper.com.au&quot;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.seattletimes.com&quot;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.com.au&quot;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.co.uk&quot;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.smh.com.au&quot;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraph.co.uk&quot;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thestar.com&quot;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wsj.com&quot;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.washingtonpost.com&quot;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thewrap.com&quot;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themarker.com&quot;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-tls.co.uk&quot;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.towardsdatascience.com&quot;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.trouw.nl&quot;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tubantia.nl&quot;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vanityfair.com&quot;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vn.nl&quot;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vulture.com&quot;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://journalnow.com&quot;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wired.com&quot;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.worldpoliticsreview.com&quot;&gt;World Politics Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.zeit.de&quot;&gt;Zeit Online&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; 
&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; 
&lt;p&gt;Install the Cookie Remover extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; 
&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;New site requests&lt;/h3&gt; 
&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the uBlock Origin extension if it hasn&#39;t been installed already. See if you are still getting a paywall.&lt;/li&gt; 
 &lt;li&gt;Check if using Cookie Remover (&lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; 
 &lt;li&gt;First search &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&quot;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; 
 &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; 
 &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; 
 &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; 
 &lt;li&gt;If it loads without a paywall you can &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word &quot;Confirmed&quot;. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&quot;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If a site doesn&#39;t work, try turning off uBlock and refreshing.&lt;/li&gt; 
 &lt;li&gt;Try clearing &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;cookies&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make sure you&#39;re running the latest version of Bypass Paywalls.&lt;/li&gt; 
 &lt;li&gt;If a site is having problems try unchecking &quot;*General Paywall Bypass*&quot; in Options.&lt;/li&gt; 
 &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; 
&lt;p&gt;PRs are welcome.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; 
 &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://github.com/standard/semistandard&quot;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don&#39;t need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Show your support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow me on Twitter &lt;a href=&quot;https://twitter.com/iamadamdev&quot;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; 
 &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This software is provided for educational purposes only and is provided &quot;AS IS&quot;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/leonardomso/33&quot;&gt;&lt;img src=&quot;https://i.imgur.com/dsHmk6H.jpg&quot; alt=&quot;33 Concepts Every JS Developer Should Know&quot; width=&quot;200&amp;quot;&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; 33 Concepts Every JavaScript Developer Should Know &lt;br&gt;&lt;br&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/leonardomso&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/leonardomso.svg?style=for-the-badge&quot; alt=&quot;Follow me&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by &lt;a href=&quot;https://twitter.com/stephenthecurt&quot;&gt;Stephen Curtis&lt;/a&gt; and you can read it &lt;a href=&quot;https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href=&quot;https://blog.github.com/2018-12-13-new-open-source-projects/&quot;&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eldrinf/33-js-concepts-albanian.git&quot;&gt;Shqip (Albanian)&lt;/a&gt; — Eldrin Ereqi&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amrsekilly/33-js-concepts&quot;&gt;اَلْعَرَبِيَّةُ‎ (Arabic)&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephentian/33-js-concepts&quot;&gt;汉语 (Chinese)&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tiagoboeing/33-js-concepts&quot;&gt;Português do Brasil (Brazilian Portuguese) &lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yjs03057/33-js-concepts.git&quot;&gt;한국어 (Korean)&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adonismendozaperez/33-js-conceptos&quot;&gt;Español (Spanish)&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilker0/33-js-concepts&quot;&gt;Türkçe (Turkish)&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gumennii/33-js-concepts&quot;&gt;русский язык (Russian)&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyentranchung/33-js-concepts&quot;&gt;Tiếng Việt (Vietnamese)&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lip3k/33-js-concepts&quot;&gt;Polski (Polish)&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majidalavizadeh/33-js-concepts&quot;&gt;فارسی (Persian)&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rijdz/33-js-concepts&quot;&gt;Bahasa Indonesia (Indonesian)&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robinmetral/33-concepts-js&quot;&gt;Français (French)&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vikaschauhan/33-js-concepts&quot;&gt;हिन्दी (Hindi)&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimitrisZx/33-js-concepts&quot;&gt;Ελληνικά (Greek)&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oimo23/33-js-concepts&quot;&gt;日本語 (Japanese)&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/burhannn/33-js-concepts&quot;&gt;Deutsch (German)&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation&quot;&gt;украї́нська мо́ва (Ukrainian)&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ududsha/33-js-concepts&quot;&gt;සිංහල (Sinhala)&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Donearm/33-js-concepts&quot;&gt;Italiano (Italian)&lt;/a&gt; — Gianluca Fiore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack&quot;&gt;Call Stack&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types&quot;&gt;Primitive Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types&quot;&gt;Value Types and Reference Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing&quot;&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof&quot;&gt;== vs === vs typeof&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope&quot;&gt;Function Scope, Block Scope and Lexical Scope&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement&quot;&gt;Expression vs Statement&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces&quot;&gt;IIFE, Modules and Namespaces&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop&quot;&gt;Message Queue and Event Loop&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe&quot;&gt;setTimeout, setInterval and requestAnimationFrame&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines&quot;&gt;JavaScript Engines&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers&quot;&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees&quot;&gt;DOM and Layout Trees&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes&quot;&gt;Factories and Classes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind&quot;&gt;this, call, apply and bind&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances&quot;&gt;new, Constructor, instanceof and Instances&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain&quot;&gt;Prototype Inheritance and Prototype Chain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign&quot;&gt;Object.create and Object.assign&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter&quot;&gt;map, reduce, filter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-state-mutation-and-event-propagation&quot;&gt;Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures&quot;&gt;Closures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions&quot;&gt;High Order Functions&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion&quot;&gt;Recursion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators&quot;&gt;Collections and Generators&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises&quot;&gt;Promises&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait&quot;&gt;async/await&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures&quot;&gt;Data Structures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation&quot;&gt;Expensive Operation and Big O Notation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms&quot;&gt;Algorithms&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse&quot;&gt;Inheritance, Polymorphism and Code Reuse&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns&quot;&gt;Design Patterns&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe&quot;&gt;Partial Applications, Currying, Compose and Pipe&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code&quot;&gt;Clean Code&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Call_stack&quot;&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec&quot;&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4&quot;&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://web.archive.org/web/20180701233338/https://www.valentinog.com/blog/js-execution-context-call-stack/&quot;&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0&quot;&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0&quot;&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf&quot;&gt;How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o&quot;&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w6QGEiQceOM&quot;&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=W8AeMrVtFLY&quot;&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w7QWQlkLY_s&quot;&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Q2sFmqvpBe0&quot;&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD&quot;&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Nt-qa_LlUH0&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ygA5U7Wgsg8&quot;&gt;La PILA DE EJECUCIÓN (Call Stack) de JavaScript — La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&quot;&gt;How JavaScript Code is executed? ❤️&amp;amp; Call Stack — Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2012/04/number-encoding.html&quot;&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://indepth.dev/posts/1139/here-is-what-you-need-to-know-about-javascripts-number-type&quot;&gt;What You Need to Know About JavaScript Number Type — Max Wizard K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/&quot;&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/&quot;&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flow.org/en/docs/types/primitives/&quot;&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d4nyll/not-everything-in-javascript-is-an-object&quot;&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12&quot;&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c&quot;&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9ooYYRLdg_g&quot;&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HsbWQsSCE5Y&quot;&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-_mDyqm2oU&quot;&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qw3j0A3DIzQ&quot;&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=MqHDDtVYJRI&quot;&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=B4Bbmei_thw&quot;&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cC65D2q5f8I&quot;&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0&quot;&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c&quot;&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851&quot;&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18&quot;&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293&quot;&gt;Grasp “By Value” and “By Reference” in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0&quot;&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/&quot;&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value&quot;&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f&quot;&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=E-dAnFdq8k8&quot;&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fD0t_DKREbE&quot;&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AvkyOrWkuQc&quot;&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23&quot;&gt;What you need to know about Javascript&#39;s Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839&quot;&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-coercion-explained-545c895213d3&quot;&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript&quot;&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t&quot;&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=b04Q_vyqEG8&quot;&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=z4-8wMSPJyI&quot;&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=C5fr0LZLMAs&quot;&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ei4nb49GKo&quot;&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed&quot;&gt;You Don&#39;t Know JS, 1st Edition: Types &amp;amp; Grammar — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a&quot;&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bytearcher.com/articles/equality-comparison-operator-javascript/&quot;&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/javascript/tutorial/double-equals-and-coercion-in-javascript&quot;&gt;== vs === JavaScript: Double Equals and Coercion — AJ Meyghani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.impressivewebs.com/why-use-triple-equals-javascipt/&quot;&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript&quot;&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object&quot;&gt;Why javascript&#39;s typeof always return &quot;object&quot;? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://tobyho.com/2011/01/28/checking-types-in-javascript/&quot;&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://webbjocke.com/javascript-check-data-types/&quot;&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html&quot;&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ol_su88I3kw&quot;&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qPYhTPt_SbQ&quot;&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures&quot;&gt;You Don&#39;t Know JS Yet, 2nd Edition: Scope &amp;amp; Closures — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99&quot;&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/&quot;&gt;The battle between Function Scope and Block Scope — Marius Herring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html&quot;&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe&quot;&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://edgecoders.com/function-scopes-and-block-scopes-in-javascript-25bbd7f293d7&quot;&gt;Function Scopes and Block Scopes in JavaScript — Samer Buna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://ryanmorr.com/understanding-scope-and-context-in-javascript/&quot;&gt;Understanding Scope and Context in JavaScript — Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/javascript-scope-closures/&quot;&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/&quot;&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://speakingjs.com/es5/ch16.html&quot;&gt;Speaking JavaScript - Variables: Scopes, Environments, and Closures — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-scope-in-javascript&quot;&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0&quot;&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai&quot;&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and “this” ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions#function_scope&quot;&gt;Functions / Function scope ― MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SBwoFkRjZvE&quot;&gt;What Makes Javascript Weird ... and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dhp57T3p760&quot;&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aK_nuUAdr8E&quot;&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhNA0r10MmA&quot;&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FyWdrCZZavQ&quot;&gt;Variable Scope — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2&quot;&gt;All you need to know about Javascript&#39;s Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/function-expressions-vs-declarations/&quot;&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38&quot;&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052&quot;&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/&quot;&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=WVyCrI1cHi8&quot;&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3jDpNGJkupA&quot;&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6&quot;&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hashnode.com/post/do-es6-modules-make-the-case-of-iifes-obsolete-civ96wet80scqgc538un20es0&quot;&gt;Do ES6 Modules make the case of IIFEs obsolete?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/&quot;&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive — Lin Clark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/understanding-es6-modules/&quot;&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/&quot;&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-modules-in-depth&quot;&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b&quot;&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc&quot;&gt;JavaScript Modules: A Beginner’s Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot;&gt;Using JavaScript modules on the web — Addy Osmani &amp;amp; Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5&quot;&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://sassy-butter-197.notion.site/Javascript-bundlers-016932b17b0744e983c2cc0db31e6f02&quot;&gt;Javascript Module Bundlers — Vanshu Hassija&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3cbiZV4H22c&quot;&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=I5EntfMeIIQ&quot;&gt;Understanding JavaScript IIFE — Sheo Narayan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=_3oSWwapPKQ&quot;&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aQr2bV1BPyE&quot;&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fIP4pjAqCtQ&quot;&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5P04OK6KlXA&quot;&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Xd7zgPFwVX8&amp;amp;&quot;&gt;JavaScript IIFE (Immediately Invoked Function Expressions) — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4&quot;&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot;&gt;The JavaScript Event Loop: Explained — Erin Sweson-Healey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40&quot;&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zeolearn.com/magazine/understanding-the-javascript-event-loop&quot;&gt;Understanding the JavaScript Event Loop — Ashish Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-event-loop/&quot;&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&quot;&gt;How JavaScript works: Event loop — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8&quot;&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif&quot;&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XzXIMZMN9k4&quot;&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6MXRNXXgP_0&quot;&gt;I&#39;m stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cCOL7MC4Pl0&quot;&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Eqq2Rb7LzYE&quot;&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/settimeout-setinterval&quot;&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9&quot;&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://develoger.com/settimeout-vs-setinterval-cff85142555b&quot;&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/using-requestanimationframe/&quot;&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascriptkit.com/javatutors/requestanimationframe.shtml&quot;&gt;Understanding JavaScript&#39;s requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/&quot;&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6bPKyl8WYWI&quot;&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=TbCgGWe8LN8&quot;&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0VVJSvlUgtg&quot;&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mVKfrWCOB60&quot;&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.softwaremag.com/javascript-engines/&quot;&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964&quot;&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&quot;&gt;Understanding V8’s Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.mediacurrent.com/blog/brief-history-googles-v8-javascript-engine/&quot;&gt;A Brief History of Google’s V8 Javascript Engine — Clair Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553&quot;&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/shapes-ics&quot;&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://v8.dev/blog/elements-kinds&quot;&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5nmpokoRaZI&quot;&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2WJL19wDH68&quot;&gt;JS Engine EXPOSED 🔥 Google&#39;s V8 Architecture 🚀 | Namaste JavaScript Ep. 16 - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4&quot;&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5&quot;&gt;Using JavaScript’s Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.w3resource.com/javascript/operators/bitwise-operator.php&quot;&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3&quot;&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04&quot;&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript&quot;&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mesu75PTDC8&quot;&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/14_dom.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/introduction-to-the-dom&quot;&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d&quot;&gt;What’s the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html&quot;&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/dom/&quot;&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://zellwk.com/blog/dom-traversals/&quot;&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/dom-nodes&quot;&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e&quot;&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot;&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bitsofco.de/what-exactly-is-the-dom/&quot;&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FIORjGvT0kk&quot;&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ik6X4DJKCc&quot;&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript&quot;&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677&quot;&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.javascriptjanuary.com/blog/es6-classes&quot;&gt;ES6 Classes — Nathaniel Foster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes&quot;&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd&quot;&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://atendesigngroup.com/blog/factory-functions-javascript&quot;&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9&quot;&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15&quot;&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a&quot;&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jordankasper.com/understanding-super-in-javascript&quot;&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm&quot;&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jpegXpQpb3o&quot;&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ImwrezYhw4w&quot;&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=R7-IwpH80UE&quot;&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b&quot;&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/niladrisekhardutta/how-to-call-apply-and-bind-in-javascript-8i1jca6jp&quot;&gt;How-to: call() , apply() and bind() in JavaScript — Niladri Sekhar Dutta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/&quot;&gt;JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/this-keyword-call-apply-bind-javascript/&quot;&gt;WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb&quot;&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b&quot;&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce&quot;&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/&quot;&gt;Mastering &#39;this&#39; in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo&quot;&gt;JavaScript’s apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb&quot;&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja&quot;&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8&quot;&gt;Understanding the “this” Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8&quot;&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1&quot;&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam&quot;&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf&quot;&gt;3 Techniques for Maintaining Your Sanity Using &quot;This&quot; in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa&quot;&gt;Mastering the JavaScript &quot;this&quot; Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n&quot;&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp&quot;&gt;A quick intro to &#39;this&#39; in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/cat__logic/explaining-javascript-this-to-my-cat-1kig&quot;&gt;Explaining JavaScript &#39;this&#39; to my cat — Andrey K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g&quot;&gt;A conversation with the &#39;this&#39; keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jscurious.com/what-are-call-apply-and-bind-in-javascript/&quot;&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d&quot;&gt;Understanding &#39;this&#39; binding in JavaScript — Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=c0mLRpw-9rI&quot;&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AYVYxezrMWA&quot;&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uy0NOXLBraE&quot;&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AOSYY1_np_4&quot;&gt;Understanding Functions and &#39;this&#39; In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhbhD1HR5vk&quot;&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uBdH0iB1VDM&quot;&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e&quot;&gt;JavaScript For Beginners: the ‘new’ operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c&quot;&gt;Let’s demystify JavaScript’s ‘new’ keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/constructor-new&quot;&gt;Constructor, operator &quot;new&quot; — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/understanding-javascript-constructors/&quot;&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions&quot;&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2017/08/type-right.html&quot;&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appendto.com/2016/10/what-is-the-instanceof-operator-in-javascript/&quot;&gt;What Is the Instanceof Operator in JavaScript — appendTo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac&quot;&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b&quot;&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-prototype-cb29d82b8809&quot;&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/sandeepranjan2007/prototype-in-javascipt-knbve0lqo&quot;&gt;Prototype in Javascript — Sandeep Ranjan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/prototypes-in-javascript-5bba2990e04b&quot;&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872&quot;&gt;Prototype in JavaScript: it’s quirky, but here’s how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2&quot;&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d&quot;&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl&quot;&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/prototype-inheritance&quot;&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript&quot;&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e&quot;&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4&quot;&gt;JavaScript’s Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/derhuerst/a585c4916b1c361cc6f0&quot;&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&quot;&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/danny/intro-to-prototypal-inheritance---js-9di&quot;&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm&quot;&gt;Let’s Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b&quot;&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg&quot;&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4&quot;&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie&quot;&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=sOrtAjyk4lQ&quot;&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7oNWNlMrkpc&quot;&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uIlj6_z_wL8&quot;&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qMO-LTOrJaE&quot;&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=G6l5CHl67HQ&quot;&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=phwzuiJJPpQ&quot;&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4jb4AYEyhRc&quot;&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2rkEbcptR64&quot;&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oCwCcNvaXAQ&quot;&gt;JavaScript Using Prototypes — O&#39;Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XskMWBXNbp0&quot;&gt;A Beginner&#39;s Guide to Javascript&#39;s Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hS_WqkyUah8&quot;&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed&quot;&gt;You Don&#39;t Know JS, 1st Edition: this &amp;amp; Object Prototypes — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2&quot;&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html&quot;&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html&quot;&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.geeksforgeeks.org/object-create-javascript/&quot;&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358&quot;&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/&quot;&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/dealing-with-objects/&quot;&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/copying-objects-in-javascript&quot;&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-object-assign-bc9696dcbb6e&quot;&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/how-to-clone-javascript-object/&quot;&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/vzing/object-create-when-and-why-to-use-20m9&quot;&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aw7NfYhR5rc&quot;&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9Ky4X6inpi4&quot;&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d&quot;&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4&quot;&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter&quot;&gt;JavaScript’s Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209&quot;&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4&quot;&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf&quot;&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464&quot;&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f&quot;&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/functional-javascript-map-filter-reduce/&quot;&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/&quot;&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc&quot;&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26&quot;&gt;When (and why) you should use ES6 arrow functions — and when you shouldn’t — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946&quot;&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83&quot;&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@panderson.dev/javascript-reduce-79aab078da23&quot;&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gofore.com/en/why-you-should-replace-foreach/&quot;&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d&quot;&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/&quot;&gt;JavaScript’s Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160&quot;&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/map-filter-reduce-ebbed4be4201&quot;&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6&quot;&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26&quot;&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/&quot;&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f&quot;&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/pickleat/map-filter-and-reduce-2efb&quot;&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan&quot;&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47&quot;&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209&quot;&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24&quot;&gt;How to Use JavaScript’s .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://towardsdatascience.com/javascript-performance-test-for-vs-for-each-vs-map-reduce-filter-find-32c1113f19d7&quot;&gt;Javascript performance test - for vs for each vs (map, reduce, filter, find) — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2&quot;&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj&quot;&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=UXiYii0Y7Nw&quot;&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vytzLlY_wmU&quot;&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qTeeVd8hOFY&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=gIm9xLYudL0&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zYBeEPxNSbw&quot;&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4qWlqD0yYTU&quot;&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6sQDTgOqh-I&quot;&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s&quot;&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s&quot;&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl98eZpkp-c&quot;&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s&quot;&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=IXp06KekEjM&quot;&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=P4RAFdZDn3M&quot;&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://youtu.be/Ah7-PPjQ5Ls&quot;&gt;Different array methods in 1 minute | Midudev (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c&quot;&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot;&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c&quot;&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/functional-programming-pure-functions/&quot;&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appdividend.com/2017/04/10/pure-functions-in-javascript/&quot;&gt;Pure Functions In Javascript — Krunal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alistapart.com/article/making-your-javascript-pure&quot;&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa&quot;&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310&quot;&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/zurvin/hablemos-de-inmutabilidad-3dc65d290783&quot;&gt;Hablemos de Inmutabilidad — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/&quot;&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/preventing-sideeffects-javascript&quot;&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/wielding-pure-functions-in-javascript-and-function-composition&quot;&gt;Wielding Pure Functions in JavaScript and Function Composition — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/javascript-pure-functions/&quot;&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1&quot;&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3&quot;&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08&quot;&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events&quot;&gt;Event Propagation — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/bubbling-and-capturing&quot;&gt;Event Propagation — Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dZ41D6LDSBg&quot;&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Jh_Uzqzz_wM&quot;&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=frT3H-eBmPc&quot;&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AHbRVJzpB54&quot;&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=JYc7gr9Ehl0&quot;&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/closure&quot;&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8&quot;&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/understand-javascript-closures-with-ease/&quot;&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-javascript-closures-da6aab330302&quot;&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understand-closures-in-javascript-d07852fa51e7&quot;&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4&quot;&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach&quot;&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b&quot;&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b&quot;&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example&quot;&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-closures-and-scope-3784c75b9290&quot;&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7&quot;&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://reallifejs.com/the-meat/getting-closure/&quot;&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9&quot;&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda&quot;&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e&quot;&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/closures-using-memoization-3597&quot;&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232&quot;&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/stereobooster/demystify-closures-5g42&quot;&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj&quot;&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d&quot;&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://whatthefuck.is/closure&quot;&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/brandonleboeuf/closure-in-javascript-49n7&quot;&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XTAzsODSCsM&quot;&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=71AtaJpJHw0&quot;&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=CQqwU2Ixu-U&quot;&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-xqJo5VRP4A&quot;&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yiEeiMN2Khs&quot;&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1JsJx1x35c0&quot;&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-rLrGAXK8WE&quot;&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qikxEIxsXco&quot;&gt;Closures in JS - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://youtu.be/xa8lhVwQBw4&quot;&gt;CLOSURES en JavaScript: Qué son y cómo funcionan - Carlos Azaustre&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/05_higher_order.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/higher-order-functions-javascript/&quot;&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528&quot;&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a&quot;&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.lullabot.com/articles/higher-order-functions-in-javascript&quot;&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/tag/higher-order-functions/&quot;&gt;Higher-order Functions — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://derickbailey.com/2015/10/21/fun-with-higher-order-functions-in-javascript/&quot;&gt;Fun With Higher Order Functions In JavaScript — Derick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/pedroapfilho/high-order-functions&quot;&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad&quot;&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb&quot;&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=rRgD1yVwIvE&quot;&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dTlpYnmBW9I&quot;&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GYRMNp1SKXA&quot;&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H4awPsyugS0&quot;&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7E8ctomPQJw&quot;&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=28MXziDZkE4&quot;&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HkWxvB1RJq0&quot;&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f&quot;&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03&quot;&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea&quot;&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/recursion-functional-javascript/&quot;&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-recursion-31371e2bf808&quot;&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/simov/anonymous-recursion-in-javascript&quot;&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/&quot;&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.thecodingdelight.com/understanding-recursion-javascript/&quot;&gt;Understanding Recursion in JavaScript with Confidence — Jay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b&quot;&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datadriveninvestor/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3&quot;&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m&quot;&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VtG0WAUvq2w&quot;&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=k7-N8R0-KY4&quot;&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vLhHyGTkjCs&quot;&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=kGXVsd8pBLw&quot;&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uyjsR9eNTIw&quot;&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mv9NEXX1VHc&quot;&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9NO5dXSlbv8&quot;&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FmiQr4nfoPQ&quot;&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=lMBVwYrmFZQ&amp;amp;ab_channel=ColtSteele&quot;&gt;Recursion crash course - Colt Steele&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&quot;&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-collections/&quot;&gt;ES6 In Depth: Collections — Jason Orendorff&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/&quot;&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth&quot;&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/sets-introduction/&quot;&gt;Introduction to Sets in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/maps-introduction/&quot;&gt;Introduction to Maps in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/map-set-weakmap-weakset&quot;&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk&quot;&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a&quot;&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373&quot;&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/es6-working-with-sets-in-javascript/&quot;&gt;ES6: Working with Sets in JavaScript — Dead Code Rising&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b&quot;&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6&quot;&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e&quot;&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-maps-in-depth&quot;&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e&quot;&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5&quot;&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/es6-generators&quot;&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224&quot;&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ycohYSx5h9w&quot;&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=m4abICrldQI&quot;&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO07THdLWQo&quot;&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/javascript-promises-for-dummies&quot;&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1&quot;&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261&quot;&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/overview-javascript-promises/&quot;&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de&quot;&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51&quot;&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138&quot;&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_promises.html&quot;&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/&quot;&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918&quot;&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a&quot;&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/the-es6-promises-87a979ab27e4&quot;&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3&quot;&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8&quot;&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c&quot;&gt;A Coding Writer’s Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/itnext/reverse-engineering-understand-promises-1jfc&quot;&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zellwk/converting-callbacks-to-promises-nhn&quot;&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa&quot;&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/promises-javascript-concepts-293c&quot;&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/iggredible/javascript-promise-101-3idl&quot;&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sunnysingh/simplify-javascript-promises-4djb&quot;&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-low-down-on-promises-af4a96bbb95f&quot;&gt;The Lowdown on Promises — Aphinya Dechalert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/peterklingelhofer/promises-in-javascript-3h5k&quot;&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/somedood/best-practices-for-es6-promises-36da&quot;&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/zurvin/lo-que-debemos-saber-de-escript-2020-5fc61da5e4cd&quot;&gt;Lo que debemos saber de EScript 2020 — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/promise-basics&quot;&gt;Promise Basics - javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vQ3MoXnKfuQ&quot;&gt;Let&#39;s Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XJEHuBZQ5dU&quot;&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2d7s3spWAzo&quot;&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=f8IgdnYIwOU&quot;&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO4NXhWo_NM&quot;&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RvYYCGs45L4&quot;&gt;JavaScript Promise in 100 Seconds&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/11_async.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_async.html&quot;&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c&quot;&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/async-functions/&quot;&gt;Exploring Async/Await Functions in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/asynchronous-javascript-using-async-await&quot;&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-async-await/&quot;&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.toptal.com/javascript/asynchronous-javascript-async-await-tutorial&quot;&gt;Asynchronous JavaScript: From Callback Hell to Async and Await — Demir Selmanovic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a&quot;&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c&quot;&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;Understanding JavaScript’s async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://techbrij.com/javascript-async-await-parallel-sequence&quot;&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.pusher.com/promises-async-await/&quot;&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/flow-control-callbacks-promises-async-await/&quot;&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dzone.com/articles/javascript-promises-and-why-asyncawait-wins-the-ba&quot;&gt;JavaScript: Promises and Why Async/Await Wins the Battle — Nick Parsons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda&quot;&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6&quot;&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9&quot;&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b&quot;&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/joeyhub/async-await-a-slight-design-flaw-2h2j&quot;&gt;Async/await: A slight design flaw. — Joey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789&quot;&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22&quot;&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await&quot;&gt;Making asynchronous programming easier with async and await — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/javascript-async-await-tutorial-learn-callbacks-promises-async-await-by-making-icecream/&quot;&gt;JavaScript Async/Await Tutorial – Learn Callbacks, Promises, and Async/Await in JS by Making Ice Cream&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9YkUCxvaLEk&quot;&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SrNQS8J67zc&quot;&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6&quot;&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=krAYA4rvbdA&quot;&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=_9vgd9XKlDQ&quot;&gt;Tips for using async/await in JavaScript — James Q Quick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c&quot;&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays&quot;&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot;&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d&quot;&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9&quot;&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/barretlee/algorithms&quot;&gt;All algorithms writing with JavaScript in the book &#39;Algorithms Fourth Edition&#39;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/nzakas/computer-science-in-javascript&quot;&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/jamiebuilds/itsy-bitsy-data-structures&quot;&gt;All the things you didn&#39;t know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/miku86/series/3259&quot;&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5&quot;&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61&quot;&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60&quot;&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn&quot;&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa&quot;&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ&quot;&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Ymh_AurrMbA&quot;&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=41GSinwoMYA&amp;amp;ab_channel=Academind&quot;&gt;JavaScript Data Structures: Getting Started — Academind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b&quot;&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b&quot;&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051&quot;&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html&quot;&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jenniferbland.com/time-complexity-analysis-in-javascript/&quot;&gt;Time Complexity Analysis in JavaScript — Jennifer Bland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c&quot;&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o&quot;&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HgA5VOFan5E&quot;&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=KatlvCFHPRo&quot;&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ALl86xJiTD8&quot;&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/Crizstian/data-structure-and-algorithms-with-ES6&quot;&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms&quot;&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.thatjsdude.com/interview/js1.html&quot;&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038&quot;&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158&quot;&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/felipernb/algorithms.js&quot;&gt;Atwood&#39;s Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/idosela/algorithms-in-javascript&quot;&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance&quot;&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/class-inheritance&quot;&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f&quot;&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/simple-inheritance-javascript/&quot;&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-inheritance-25fe61ab9f85&quot;&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/&quot;&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/yld-engineering-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2&quot;&gt;Program Like Proteus — A beginner’s guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/&quot;&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yXlFR81tDBM&quot;&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RBLIm5LMrmc&quot;&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zdovG9cuEBA&quot;&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://addyosmani.com/resources/essentialjsdesignpatterns/book/&quot;&gt;Learning JavaScript Design Patterns — Addy Osmani &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know&quot;&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15&quot;&gt;JavaScript Design Patterns – Beginner&#39;s Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81&quot;&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://seesparkbox.com/foundry/javascript_design_patterns&quot;&gt;Javascript Design Patterns: What They Are &amp;amp; How To Use Them — Patrick Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd&quot;&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/fbeline/Design-Patterns-JS&quot;&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8&quot;&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e&quot;&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39&quot;&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca&quot;&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd&quot;&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p&quot;&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd&quot;&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/design-patterns-null-object-5ee839e37892&quot;&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/strategy-pattern-5oh&quot;&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/adapter-pattern-5bjk&quot;&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732&quot;&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bytebodger/in-defense-of-defensive-programming-k45&quot;&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.udacity.com/course/javascript-design-patterns--ud989&quot;&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hO7mzO83N1Q&quot;&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md&quot;&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/michelre/use-function-composition-in-javascript-gkmxos5mj&quot;&gt;Use function composition in JavaScript — Rémi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.benestudio.co/currying-in-javascript-es6-540d2ad09400&quot;&gt;Currying in JavaScript ES6 — Adam Bene&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b&quot;&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10&quot;&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f&quot;&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://busypeoples.github.io/post/functional-composing-javascript/&quot;&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/&quot;&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/&quot;&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://vanslaars.io/post/create-pipe-function/&quot;&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/featured/practical-functional-javascript-ramda/&quot;&gt;Practical Functional JavaScript with Ramda — Andrew D&#39;Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574&quot;&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8&quot;&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://benalman.com/news/2012/09/partial-application-in-javascript/&quot;&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/partial-application-of-functions-dbe7d9b80760&quot;&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8&quot;&gt;Currying vs Partial Application — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://raganwald.com/2015/04/01/partial-application.html&quot;&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://joecortopassi.com/articles/functional-composition-in-javascript/&quot;&gt;Functional Composition in Javascript — Joe Cortopassi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536&quot;&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a&quot;&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7&quot;&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49&quot;&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a&quot;&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84&quot;&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa&quot;&gt;Concepts of Functional Programming in Javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064&quot;&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71&quot;&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj&quot;&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl2ejJOqHUU&quot;&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jigHxo9YR30&quot;&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mth5WpEc4Qs&quot;&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uam37AlzPYw&quot;&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VGB9HbL1GHk&quot;&gt;Let&#39;s code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=DzLkRsUN2vE&quot;&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jkebgHEcvac&quot;&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s&quot;&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/clean-coding-for-beginners/&quot;&gt;Clean Code Explained – A Practical Introduction to Clean Coding for Beginners — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.atyantik.com/clean-code-practices-javascript/&quot;&gt;Clean Code Practice: How to write clean code — Tirth Bodawala&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/&quot;&gt;JavaScript Clean Coding Best Practices — András Tóth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b&quot;&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/keeping-your-code-clean-d30bcffd1a10&quot;&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/modern-javascript-best-practices/&quot;&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/cross-js/cross-js&quot;&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ganderzz/on-writing-clean-code-57cm&quot;&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k&quot;&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm&quot;&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4&quot;&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/swlh/the-must-know-clean-code-principles-1371a14a2e75&quot;&gt;The Must-Know Clean Code Principles - Kesk on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/&quot;&gt;The Clean Code Book - Robert C Martin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mus_vwhTCq0&quot;&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=b9c5GmmS7ks&amp;amp;list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh&amp;amp;index=1&quot;&gt;Clean Code playlist - Beau teaches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/express.js&quot;&gt;Express.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jely2002/youtube-dl-gui</title>
      <link>https://github.com/jely2002/youtube-dl-gui</link>
      <description>&lt;p&gt;A cross-platform GUI for youtube-dl made in Electron and node.js&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/v2.0.0/renderer/img/icon.png&quot; alt=&quot;logo&quot; align=&quot;left&quot; height=&quot;100&quot;&gt; 
&lt;h1&gt;Open Video Downloader (youtube-dl-gui) &lt;br&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/jely2002/youtube-dl-gui?label=latest-release&quot; alt=&quot;version badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/jely2002/youtube-dl-gui&quot; alt=&quot;GitHub&quot;&gt; &lt;img src=&quot;https://img.shields.io/codecov/c/github/jely2002/youtube-dl-gui&quot; alt=&quot;coverage badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/jely2002/youtube-dl-gui/total&quot; alt=&quot;downloads&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/workflow/status/jely2002/youtube-dl-gui/CI?label=CI&quot; alt=&quot;CI badge&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://jely2002.github.io/youtube-dl-gui&quot;&gt;https://jely2002.github.io/youtube-dl-gui&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A cross-platform GUI for youtube-dl made in Electron and node.js&lt;/p&gt; 
&lt;h3&gt;Features:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download from all kind of platforms: YouTube, vimeo, twitter &amp;amp; many more&lt;/li&gt; 
 &lt;li&gt;Download multiple videos/playlists/channels in one go&lt;/li&gt; 
 &lt;li&gt;Select the resolution and format you want to download in&lt;/li&gt; 
 &lt;li&gt;Download private videos (currently only tested on YouTube)&lt;/li&gt; 
 &lt;li&gt;Multithreaded, up to 32 videos can be downloaded synchronously&lt;/li&gt; 
 &lt;li&gt;Shows how much size the download will use up on your system&lt;/li&gt; 
 &lt;li&gt;The app automatically keeps ytdl up-to-date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Be sure to check out &lt;a href=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/master/#Demo-gif&quot;&gt;a demo gif of the application&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/releases/latest&quot;&gt;applicable installer or executable&lt;/a&gt; for your system.&lt;/li&gt; 
 &lt;li&gt;If you are on windows, make sure that the &lt;a href=&quot;https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe&quot;&gt;Microsoft Visual C++ 2010 Redistributable Package (x86)&lt;/a&gt; is installed.&lt;/li&gt; 
 &lt;li&gt;Paste a link into the box up top.&lt;/li&gt; 
 &lt;li&gt;Wait for the app to gather all required metadata.&lt;/li&gt; 
 &lt;li&gt;Press download, and the video(s) will get downloaded to your downloads folder.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Want to know more about the features this app offers? Head over to the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Something is not working!&lt;/h2&gt; 
&lt;p&gt;Please see if the answer is in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/FAQ&quot;&gt;frequently answered questions&lt;/a&gt; or in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Still haven&#39;t found your answer? &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/issues&quot;&gt;Open up an issue&lt;/a&gt;, and describe the problem you&#39;re facing.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;First, clone the repository using &lt;code&gt;git clone https://github.com/jely2002/youtube-dl-gui.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then navigate to the directory and install the npm modules by executing: &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The last step is to build using electron-builder &lt;a href=&quot;https://www.electron.build/cli&quot;&gt;(documentation)&lt;/a&gt;. For example, the command to build a windows installer is: &lt;code&gt;npx electron-builder --win&lt;/code&gt;. The output files can be found in the &#39;dist&#39; folder.&lt;/p&gt; 
&lt;p&gt;Please be aware that this app is only tested on windows, linux and macOS. If you decide to build for another platform/archtype it may or may not work. Builds other than those available in the releases come with absolutely no support.&lt;/p&gt; 
&lt;h2&gt;Planned features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Select individual audio and video codecs (advanced mode)&lt;/li&gt; 
 &lt;li&gt;List all audio qualities&lt;/li&gt; 
 &lt;li&gt;Support for downloading livestreams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Feel free to &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/issues&quot;&gt;request a new feature&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo gif&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/master/ytdlgui_demo.gif&quot; alt=&quot;demo&quot; width=&quot;500&quot;&gt; 
&lt;h2&gt;Liability &amp;amp; License notice&lt;/h2&gt; 
&lt;p&gt;Youtube-dl-gui and its maintainers cannot be held liable for misuse of this application, as stated in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/raw/master/LICENSE&quot;&gt;AGPL-3.0 license (section 16)&lt;/a&gt;.&lt;br&gt; The maintainers of youtube-dl-gui do not in any way condone the use of this application in practices that violate local laws such as but not limited to the DMCA. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>quasarframework/quasar</title>
      <link>https://github.com/quasarframework/quasar</link>
      <description>&lt;p&gt;Quasar Framework - Build high-performance VueJS user interfaces in record time&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.quasar.dev/logo-v2/header.png&quot; alt=&quot;Quasar Framework logo&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Quasar Framework&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Build high-performance VueJS user interfaces in record time: responsive Single Page Apps, SSR Apps, PWAs, Browser extensions, Hybrid Mobile Apps and Electron Apps. If you want, all using the same codebase!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/v/quasar?label=quasar&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app?label=@quasar/app&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/cli?label=@quasar/cli&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/extras.svg?label=@quasar/extras&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/icongenie.svg?label=@quasar/icongenie&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://chat.quasar.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Join the chat at https://chat.quasar.dev&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.quasar.dev&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/community-forum-brightgreen.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://good-labs.github.io/greater-good-affirmation&quot;&gt;&lt;img src=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg?sanitize=true&quot; alt=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please submit a PR to &lt;a href=&quot;https://github.com/quasarframework/quasar-awesome&quot;&gt;https://github.com/quasarframework/quasar-awesome&lt;/a&gt; with your website/app/Quasar tutorial/video etc. Thank you!&lt;/p&gt; 
&lt;h2&gt;Supporting Quasar&lt;/h2&gt; 
&lt;p&gt;Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome &lt;a href=&quot;https://github.com/rstoenescu/quasar-framework/raw/dev/backers.md&quot;&gt;backers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please read our manifest on &lt;a href=&quot;https://quasar.dev/why-donate&quot;&gt;Why donations are important&lt;/a&gt;&lt;/strong&gt;. If you&#39;d like to become a donator, check out &lt;a href=&quot;https://donate.quasar.dev&quot;&gt;Quasar Framework&#39;s Donator campaign&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Proudly sponsored by:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://truelogic.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;300px&quot; src=&quot;https://cdn.quasar.dev/sponsors/truelogic.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://campuscloudservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/campus-cloud-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.jugglestreet.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/juggle-street.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://comcomservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/com-com-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.kalisio.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/kalisio.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://platformpurple.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/platform-purple.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.bgasoft.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/bgasoft.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.letsbutterfly.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;170px&quot; src=&quot;https://cdn.quasar.dev/sponsors/letsbutterfly.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.projectfinance.io/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/project-finance.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://dreamonkey.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/dreamonkey.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/ib-langenthal.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://debricked.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;35px&quot; src=&quot;https://cdn.quasar.dev/sponsors/debricked.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;52px&quot; src=&quot;https://cdn.quasar.dev/sponsors/qintil.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Head on to the Quasar Framework official website: &lt;a href=&quot;https://quasar.dev&quot;&gt;https://quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stay in Touch&lt;/h2&gt; 
&lt;p&gt;For latest releases and announcements, follow on Twitter: &lt;a href=&quot;https://twitter.com/quasarframework&quot;&gt;@quasarframework&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Chat Support&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community Discord server: &lt;a href=&quot;https://chat.quasar.dev&quot;&gt;https://chat.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Forum&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community forum: &lt;a href=&quot;https://forum.quasar.dev&quot;&gt;https://forum.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/quasarframework/quasar/dev/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Quasar-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/quasarframework/quasar-awesome&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already &lt;a href=&quot;https://github.com/quasarframework/quasar/graphs/contributors&quot;&gt;contributed to Quasar&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Semver&lt;/h2&gt; 
&lt;p&gt;Quasar is following &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2015-present Razvan Stoenescu&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>carbon-app/carbon</title>
      <link>https://github.com/carbon-app/carbon</link>
      <description>&lt;p&gt;🖤 Create and share beautiful images of your source code&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100%&quot; src=&quot;https://user-images.githubusercontent.com/10369094/31211729-591d059c-a950-11e7-86af-fa5ea3d7dbac.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://reporanger.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/maintained%20with-Ranger-1f93f3.svg?sanitize=true&quot; alt=&quot;maintained with Ranger&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#contributors&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/all_contributors-78-orange.svg?sanitize=true&quot; alt=&quot;All Contributors&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/carbon-app/carbon.svg?sanitize=true&quot; alt=&quot;MIT License&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fcarbon-app%2Fcarbon?ref=badge_shield&quot;&gt; &lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcarbon-app%2Fcarbon.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h5&gt;Translations&lt;/h5&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.es.md&quot;&gt;Español&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.hi.md&quot;&gt;हिंदी&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.de.md&quot;&gt;Deutsch&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.cn.zh.md&quot;&gt;简体中文&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.br.pt.md&quot;&gt;Português&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.ml.md&quot;&gt;മലയാളം&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.tr.md&quot;&gt;Türkçe&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.kr.md&quot;&gt;한국어&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.ta.md&quot;&gt;தமிழ்&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.fr.md&quot;&gt;Français&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.ja.md&quot;&gt;日本語&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.se.md&quot;&gt;Svenska&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.pl.md&quot;&gt;Polski&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.nl.md&quot;&gt;Nederlands&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.tw.zh.md&quot;&gt;正體中文&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.in.md&quot;&gt;Indonesia&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.ua.md&quot;&gt;Українська&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.it.md&quot;&gt;Italiano&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/docs/README.he.md&quot; dir=&quot;rtl&quot;&gt;עברית&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/new/main/docs?filename=docs/README.%3Cnew%20language%3E.md&quot;&gt;Add +&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;You know &lt;a href=&quot;https://twitter.com/dan_abramov/status/890191815567175680&quot;&gt;all&lt;/a&gt; &lt;a href=&quot;https://twitter.com/reactjs/status/890511993261654017&quot;&gt;of those&lt;/a&gt; &lt;a href=&quot;https://twitter.com/notquiteleo/status/873483329345028096&quot;&gt;code screenshots&lt;/a&gt; you see on Twitter? Though the code&#39;s usually impressive, we saw room for improvement in the aesthetic department. Carbon makes it easy to create and share beautiful images of your source code. So what are you waiting for? Go impress all of your followers with your newfound design prowess.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100%&quot; alt=&quot;Carbon example&quot; src=&quot;https://user-images.githubusercontent.com/8397708/63456416-b27d1a80-c403-11e9-9572-105b089be885.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt;. Customize things like your image&#39;s syntax theme, font style, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Share quickly&lt;/strong&gt;. Save your image or a link with one click&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Save snippets&lt;/strong&gt;. Create an account to save snippets for later. Shared snippets are automatically unfurled on Twitter and Slack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h4&gt;Import&lt;/h4&gt; 
&lt;p&gt;There are a few different ways to import code into Carbon:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Drop a file onto the editor&lt;/li&gt; 
 &lt;li&gt;Append a GitHub gist ID to the URL (e.g. &lt;a href=&quot;https://carbon.now.sh/3208813b324d82a9ebd197e4b1c3bae8&quot;&gt;&lt;code&gt;carbon.now.sh/&amp;lt;gist_id_goes_here&amp;gt;&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Or just start typing!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Customization&lt;/h4&gt; 
&lt;p&gt;Once you&#39;ve got all of your code into Carbon, you can customize your image by changing the syntax theme, background color, window theme, padding, shadows, fonts, and more.&lt;/p&gt; 
&lt;h4&gt;Exporting &amp;amp; Sharing&lt;/h4&gt; 
&lt;p&gt;After you&#39;ve customized your image you can share your snippet in a number of ways&lt;/p&gt; 
&lt;h5&gt;Create a saved snippet&lt;/h5&gt; 
&lt;p&gt;Sharing a saved snippet will automatically unfurl the image on platforms like Twitter and Slack. This lets users see your creation, while also giving them access to the source code via the link. Better yet, if you need to make an update, simply follow the link yourself to edit the snippet directly.&lt;/p&gt; 
&lt;p&gt;To create a saved snippet:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Login using the &quot;Sign in/Sign up&quot; button&lt;/li&gt; 
 &lt;li&gt;Edit as you normally would — your snippet will get saved automatically&lt;/li&gt; 
 &lt;li&gt;Copy the URL from your browser window and share away!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h5&gt;Embed a snippet&lt;/h5&gt; 
&lt;p&gt;This is the recommended method for sharing Carbon on your own website or blog. Readers can even copy the code with the click of a button.&lt;/p&gt; 
&lt;p&gt;You can embed any Carbon snippet in your website directly using the &lt;code&gt;carbon.now.sh/embed&lt;/code&gt; URL. The &quot;Copy Menu&quot; lets you quickly copy the correct iFrame snippet, or the encoded URL for embedding on platforms like Medium.&lt;/p&gt; 
&lt;p&gt;Finally, you can also embed saved snippets or GitHub gists using &lt;code&gt;carbon.now.sh/embed/:id&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;Use the Tweet button&lt;/h5&gt; 
&lt;p&gt;The Tweet button will not only share the image on Twitter, but it will also correctly encode the &lt;code&gt;alt&lt;/code&gt; text to ensure your images are accessible. However, if you want to tweet image yourself, please check out &lt;a href=&quot;https://help.twitter.com/en/using-twitter/picture-descriptions&quot;&gt;how to make your Twitter images accessible&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;Download the image directly&lt;/h5&gt; 
&lt;p&gt;Carbon supports downloading your image as a PNG and SVG. You can also click &lt;code&gt;Export → Open&lt;/code&gt; to open your image directly in the browser. Finally, you can copy the Carbon image directly to your clipboard by going to &lt;code&gt;Copy → Image&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Installing Carbon for Desktop (Offline)&lt;/h4&gt; 
&lt;p&gt;If you are using Google Chrome, or another browser that supports Progressive Web Apps, you can install Carbon for use offline by:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://carbon.now.sh&quot;&gt;carbon.now.sh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click your browser&#39;s settings menu&lt;/li&gt; 
 &lt;li&gt;Click &quot;Install Carbon...&quot;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Check out these projects our awesome community has created:&lt;/p&gt; 
&lt;h5&gt;Editor Plugins&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plugins.jetbrains.com/plugin/10469-carbon-now-sh&quot;&gt;IntelliJ IDEA &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up the selection in your current IntelliJ IDEA file in Carbon through a context menu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/carbon-now-sh&quot;&gt;Atom &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up your current Atom file in Carbon with &lt;code&gt;shift-cmd-A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ericadamski.carbon-now-sh&quot;&gt;VS Code &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up your current VS Code file in Carbon with command &lt;code&gt;carbon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/molnarmark/carbonSublime&quot;&gt;Sublime Text 3 &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up the selection in your current Sublime Text 3 file with a custom bound key&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kristijanhusak/vim-carbon-now-sh&quot;&gt;Vim &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up the selection in your current Vim/Neovim using function &lt;code&gt;CarbonNowSh()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/veelenga/carbon-now-sh.el&quot;&gt;Emacs &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up the selection in your current Emacs using interactive function &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StevenMagdy/CarboNow4Xcode&quot;&gt;Xcode &lt;code&gt;carbon-now-sh&lt;/code&gt;&lt;/a&gt; - Open up your current selection in &lt;code&gt;carbon.now.sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/nef-plugin&quot;&gt;Xcode &lt;code&gt;nef&lt;/code&gt;&lt;/a&gt; - This Xcode extension enables you to export a code selection as a Carbon snippet in a single action&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Tools&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mixn/carbon-now-cli&quot;&gt;CLI &lt;code&gt;carbon-now-cli&lt;/code&gt;&lt;/a&gt; - Open a file in Carbon or download it directly using &lt;code&gt;carbon-now&lt;/code&gt;, featuring an interactive mode, selective highlighting and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeexpander.com&quot;&gt;CodeExpander&lt;/a&gt; - A smart GitHub gist client with the TextExpander features&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/nef#-exporting-carbon-code-snippets&quot;&gt;&lt;code&gt;nef&lt;/code&gt;&lt;/a&gt; - Export multiple Carbon code snippets from &lt;code&gt;Xcode Playground&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://t.me/carbonshbot&quot;&gt;&lt;code&gt;@carbonshbot&lt;/code&gt;&lt;/a&gt; - A Telegram chatbot wich takes in a code snippet or gist URL and generates an Carbon image&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yonicd.github.io/carbonate/&quot;&gt;R &lt;code&gt;carbonate&lt;/code&gt;&lt;/a&gt; - Iteratively manipulate image aesthetics in &lt;code&gt;R&lt;/code&gt; and either open in Carbon or download directly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/faisalsayed10/carbon-slack&quot;&gt;Carbon for Slack&lt;/a&gt; - Use Carbon directly in Slack. Just invoke the &lt;code&gt;/carbon&lt;/code&gt; command.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Citations&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/book/id1435714196&quot;&gt;&quot;CS 101 - An Introduction to Computational Thinking&quot;&lt;/a&gt; - a computer science textbook by Sarbo Roy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Carbon is a project by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mike Fix (&lt;a href=&quot;https://twitter.com/fixitup2&quot;&gt;@mfix22&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Brian Dennis (&lt;a href=&quot;https://github.com/briandennis&quot;&gt;@briandennis&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Jake Dexheimer (&lt;a href=&quot;https://github.com/jakedex&quot;&gt;@jakedex&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;License&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fcarbon-app%2Fcarbon?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcarbon-app%2Fcarbon.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contribute &amp;amp; Support&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! Please see our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Sponsors &amp;amp; Backers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://fossa.com&quot; style=&quot;margin-right: 2rem;&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;160px&quot; src=&quot;https://assets-global.website-files.com/5f4d9ea2592c16056cb0f7a5/5f4d9ea2592c16d9a2b0f7da_logo-FOSSA-night-blue.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/carbon-app/backers/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/0/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/1/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/2/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/3/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/4/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/5/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/6/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/carbon-app/backers/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/carbon-app/backers/7/avatar&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Thanks To&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/&quot;&gt; ▲ Vercel &lt;/a&gt; for sponsoring Carbon&#39;s hosting.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/import/git?s=https%3A%2F%2Fgithub.com%2Fcarbon-app%2Fcarbon&amp;amp;project-name=carbon&amp;amp;repo-name=carbon&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy with Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;All Contributors&lt;/h3&gt; 
&lt;p&gt;Thanks goes out to all these wonderful people (&lt;a href=&quot;https://github.com/kentcdodds/all-contributors#emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/briandennis&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10078572?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;briandennis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=briandennis&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=briandennis&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#infra-briandennis&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/pulls?q=is%3Apr+reviewed-by%3Abriandennis&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mfix22&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8397708?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mfix22&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#question-mfix22&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=mfix22&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-mfix22&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jakedex&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10369094?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jakedex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#question-jakedex&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=jakedex&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#design-jakedex&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#video-jakedex&quot; title=&quot;Videos&quot;&gt;📹&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrewda&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10191084?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andrewda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#question-andrewda&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=andrewda&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3Aandrewda&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/pulls?q=is%3Apr+reviewed-by%3Aandrewda&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yeskunall&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/14703164?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yeskunall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=yeskunall&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=yeskunall&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#tool-yeskunall&quot; title=&quot;Tools&quot;&gt;🔧&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3Ayeskunall&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/stoshfabricius&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2652676?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;stoshfabricius&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=stoshfabricius&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jkling38&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11639896?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jkling38&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=jkling38&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/otobrglez&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/225946?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;otobrglez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=otobrglez&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/darahak&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11488612?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;darahak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=darahak&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dom96&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/246651?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dom96&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=dom96&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/elrumordelaluz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/784056?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;elrumordelaluz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=elrumordelaluz&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cjb&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/21217?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cjb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=cjb&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Krzysztof-Cieslak&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5427083?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krzysztof-Cieslak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=Krzysztof-Cieslak&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/fernahh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2369851?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fernahh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=fernahh&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/g3r4n&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10941033?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;g3r4n&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=g3r4n&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://drarok.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/55830?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mat Gadd&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3ADrarok&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=Drarok&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bradlab.co.uk&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11805775?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brad Davies&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3Avarbrad&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=varbrad&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.rafaelcamaram.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/9087886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Câmara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=rafaelcamaram&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glebbahmutov.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2212006?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gleb Bahmutov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=bahmutov&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#tool-bahmutov&quot; title=&quot;Tools&quot;&gt;🔧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ivan-munguia.netlify.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10677789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iván Munguía&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=warborn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dillonmulroy.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2755722?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dillon Mulroy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=dmmulroy&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/NARKOZ&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/253398?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nihad Abbasov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=NARKOZ&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://torzuolih.github.io&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7328625?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hugo Torzuoli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=TorzuoliH&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/imbrn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1906977?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bruno C. Couto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=imbrn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/molnarmark&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13263073?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark Molnar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=molnarmark&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.behance.net/tetra2000&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1459450?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Takahiko Inayama&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=TETRA2000&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/martinfrancois&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/14319020?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;François Martin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=martinfrancois&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://raphamorim.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3630346?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Raphael Amorim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=raphamorim&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://camronflanders.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/27292?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Camron Flanders&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=camflan&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ericadamski.github.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6516758?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Adamski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=ericadamski&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://winnercrespo.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4671080?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Winner Crespo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=wistcc&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#design-wistcc&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/mixn&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/672237?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Milos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=mixn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#tool-mixn&quot; title=&quot;Tools&quot;&gt;🔧&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=mixn&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-mixn&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://mittalyashu.now.sh/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/29014463?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yashu Mittal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=mittalyashu&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/bberrycarmen&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/22792183?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rachel M. Carmena&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=rachelcarmena&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/miguel-salazar-823b07a1/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19369949?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miguel Salazar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=ucdstudent95618&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-ucdstudent95618&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/vyom-jain-233a28139&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19145803?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vyom Jain&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=vvyomjjain&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-vvyomjjain&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/racaljk/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5010047?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;racaljk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-racaljk&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lastblocklabs.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3892149?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=raboid&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://izabelacborges.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19255077?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Izabela Borges&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-izabelacborges&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ghuser.io/shinilms&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/18573510?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shinil M S&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-shinilms&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/berkeatac&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10579633?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Berke Atac&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-berkeatac&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://wooooooak.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/18481078?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LEE YONGJUN&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-wooooooak&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://matthewnielsen.ca&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/35040439?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew Nielsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=MatthewNielsen27&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.boy.sh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/225410?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Boy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#platform-boyvanamstel&quot; title=&quot;Packaging/porting to new platform&quot;&gt;📦&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vetrivelcsamy.xyz&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/26738977?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vetrivel Chinnasamy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-vetrivelcsamy&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://farzadyz.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8332043?s=460&amp;amp;v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Farzad YZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=farskid&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-farskid&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yannickl&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/798235?s=460&amp;amp;v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yannick Loriot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-yannickl&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Joel-hanson&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/17215044?s=460&amp;amp;v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joel Hanson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=Joel-hanson&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://muzzammil.xyz/?ref=github&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12321712?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Muhammad Muzzammil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=muhammadmuzzammil1998&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/souppower&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/19849611?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;souppower&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#infra-souppower&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://uraway.hatenablog.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/15242484?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masato Urai (@uraway_)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-uraway&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://techinpark.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/45546296?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fernando&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-techinpark&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/megsachdev&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22325351?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Megha Sachdev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=megsachdev&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=megsachdev&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://techgeekhub.ml&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6022231?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anudeep Reddy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#infra-anudeepreddy&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://munieru.jp&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20086673?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Munieru&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-munierujp&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.etoxin.net&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/393002?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Lusted&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=etoxin&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JoseNoriegaa&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28733681?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jose Noriega&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-JoseNoriegaa&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://discord.club&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/33966852?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Merlin Fuchs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-Merlintor&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glossier.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/23482161?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ramy Majouji&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=majouji&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/872395/nemesv&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/251330?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Viktor Nemes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=nemesv&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ericwbailey.design/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/634191?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Bailey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=ericwbailey&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://rsg-sweden.iscbsc.org&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6730853?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nazeefa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-Nazeeefa&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://medium.com/@pratikbutani/carbon-create-and-share-beautiful-images-of-your-source-code-d31dedfe64bd&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3306366?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pratik Butani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#blog-pratikbutani&quot; title=&quot;Blogposts&quot;&gt;📝&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/baktiaditya&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2070906?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bakti Aditya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=baktiaditya&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aquaductape&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/29286430?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Caleb Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=aquaductape&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://about.rmunhoz.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3948961?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rogério Munhoz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=rjmunhoz&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/technoknol&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6429418?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Technoknol&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=technoknol&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tmakowski&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/38053499?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tymoteusz Makowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=tmakowski&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://nisar.dev&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/46004116?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nisar Hassan Naqvi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3Anisarhassan12&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.wapgee.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/42450390?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ilyas Karim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/issues?q=author%3Ailyaskarim&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://nickfix.me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/6845581?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Fix&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-njfix6&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://noti.st/melsumner&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4587451?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Melanie Sumner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-MelSumner&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aluc.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15520015?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;aluc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=b6pzeusbc54tvhw5jgpyw8pwz2x6gs&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mearns&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5140254?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;B. Mearns&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-mearns&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jiepeng.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10325111?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peng Jie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=neighborhood999&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binyam.in&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/39805353?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Binyamin Aron Green&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=b3u&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.to/mbiesiad&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18367606?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-mbiesiad&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/qw-in&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19194187?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Quinn Blenkinsop&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=qw-in&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/seagalputra&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15377132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dwiferdio Seagal Putra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=seagalputra&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ashwoodall&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/14588617?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ashley Woodall Clark&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=ashwoodall&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tim.wienk.name/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/150598?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Wienk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-timwienk&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JeremyShih&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/7455516?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeremy Shih&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-JeremyShih&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://georgemccarron.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/9155723?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George McCarron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=george1410&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/artmxra7&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23070604?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erwin Rahayu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-artmxra7&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=artmxra7&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mlucap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36577976?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luca&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=mlucap&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adghayes&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37960853?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Hayes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=adghayes&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/heybereket&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/68391329?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bereket Semagn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-app/carbon/commits?author=heybereket&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LorenzoLancia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44911690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lorenzo Lancia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-LorenzoLancia&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Guy-Adler&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44903310?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guy Adler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-Guy-Adler&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danBamikiya&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58262528?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Bamikiya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#ideas-danBamikiya&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kewang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/795839?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kewang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#translation-kewang&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://rizda.win/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13027142?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rizda Dwi Prasetya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-app/carbon/main/#content-rizdaprasetya&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>microsoft/playwright</title>
      <link>https://github.com/microsoft/playwright</link>
      <description>&lt;p&gt;Node.js library to automate Chromium, Firefox and WebKit with a single API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎭 Playwright&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/playwright&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/playwright.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/playwright-slack&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/join-slack-infomational&quot; alt=&quot;Join Slack&quot;&gt;&lt;/a&gt; 
 &lt;!-- GEN:chromium-version-badge --&gt;&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chromium-97.0.4666.0-blue.svg?logo=google-chrome&quot; alt=&quot;Chromium version&quot;&gt;&lt;/a&gt;
 &lt;!-- GEN:stop --&gt; 
 &lt;!-- GEN:firefox-version-badge --&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/firefox-93.0-blue.svg?logo=mozilla-firefox&quot; alt=&quot;Firefox version&quot;&gt;&lt;/a&gt;
 &lt;!-- GEN:stop --&gt; 
 &lt;!-- GEN:webkit-version-badge --&gt;&lt;a href=&quot;https://webkit.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/webkit-15.4-blue.svg?logo=safari&quot; alt=&quot;WebKit version&quot;&gt;&lt;/a&gt;
 &lt;!-- GEN:stop --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://playwright.dev&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://playwright.dev/docs/api/class-playwright/&quot;&gt;API reference&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Playwright is a Node.js library to automate &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;, &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://webkit.org/&quot;&gt;WebKit&lt;/a&gt; with a single API. Playwright is built to enable cross-browser web automation that is &lt;strong&gt;ever-green&lt;/strong&gt;, &lt;strong&gt;capable&lt;/strong&gt;, &lt;strong&gt;reliable&lt;/strong&gt; and &lt;strong&gt;fast&lt;/strong&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;macOS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Chromium 
    &lt;!-- GEN:chromium-version --&gt;97.0.4666.0
    &lt;!-- GEN:stop --&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;WebKit 
    &lt;!-- GEN:webkit-version --&gt;15.4
    &lt;!-- GEN:stop --&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Firefox 
    &lt;!-- GEN:firefox-version --&gt;93.0
    &lt;!-- GEN:stop --&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Headless execution is supported for all the browsers on all platforms. Check out &lt;a href=&quot;https://playwright.dev/docs/intro/#system-requirements&quot;&gt;system requirements&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm i -D playwright
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This installs Playwright and browser binaries for Chromium, Firefox and WebKit. Once installed, you can &lt;code&gt;require&lt;/code&gt; Playwright in a Node.js script and automate web browser interactions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/intro&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/installation&quot;&gt;Installation configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/api/class-playwright&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Capabilities&lt;/h2&gt; 
&lt;p&gt;Playwright is built to automate the broad and growing set of web browser capabilities used by Single Page Apps and Progressive Web Apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scenarios that span multiple page, domains and iframes&lt;/li&gt; 
 &lt;li&gt;Auto-wait for elements to be ready before executing actions (like click, fill)&lt;/li&gt; 
 &lt;li&gt;Intercept network activity for stubbing and mocking network requests&lt;/li&gt; 
 &lt;li&gt;Emulate mobile devices, geolocation, permissions&lt;/li&gt; 
 &lt;li&gt;Support for web components via shadow-piercing selectors&lt;/li&gt; 
 &lt;li&gt;Native input events for mouse and keyboard&lt;/li&gt; 
 &lt;li&gt;Upload and download files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h4&gt;Page screenshot&lt;/h4&gt; 
&lt;p&gt;This code snippet navigates to whatsmyuseragent.org in Chromium, Firefox and WebKit, and saves 3 screenshots.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const playwright = require(&#39;playwright&#39;);

(async () =&amp;gt; {
  for (const browserType of [playwright.chromium, playwright.firefox, playwright.webkit]) {
    const browser = await browserType.launch();
    const context = await browser.newContext();
    const page = await context.newPage();
    await page.goto(&#39;http://whatsmyuseragent.org/&#39;);
    await page.screenshot({ path: `example-${browserType.name()}.png` });
    await browser.close();
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Mobile and geolocation&lt;/h4&gt; 
&lt;p&gt;This snippet emulates Mobile Safari on a device at a given geolocation, navigates to maps.google.com, performs action and takes a screenshot.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { webkit, devices } = require(&#39;playwright&#39;);
const iPhone11 = devices[&#39;iPhone 11 Pro&#39;];

(async () =&amp;gt; {
  const browser = await webkit.launch();
  const context = await browser.newContext({
    ...iPhone11,
    locale: &#39;en-US&#39;,
    geolocation: { longitude: 12.492507, latitude: 41.889938 },
    permissions: [&#39;geolocation&#39;]
  });
  const page = await context.newPage();
  await page.goto(&#39;https://maps.google.com&#39;);
  await page.click(&#39;text=&quot;Your location&quot;&#39;);
  await page.waitForRequest(/.*preview\/pwa/);
  await page.screenshot({ path: &#39;colosseum-iphone.png&#39; });
  await browser.close();
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Evaluate in browser context&lt;/h4&gt; 
&lt;p&gt;This code snippet navigates to example.com in Firefox, and executes a script in the page context.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { firefox } = require(&#39;playwright&#39;);

(async () =&amp;gt; {
  const browser = await firefox.launch();
  const context = await browser.newContext();
  const page = await context.newPage();
  await page.goto(&#39;https://www.example.com/&#39;);
  const dimensions = await page.evaluate(() =&amp;gt; {
    return {
      width: document.documentElement.clientWidth,
      height: document.documentElement.clientHeight,
      deviceScaleFactor: window.devicePixelRatio
    }
  });
  console.log(dimensions);

  await browser.close();
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Intercept network requests&lt;/h4&gt; 
&lt;p&gt;This code snippet sets up request routing for a WebKit page to log all network requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { webkit } = require(&#39;playwright&#39;);

(async () =&amp;gt; {
  const browser = await webkit.launch();
  const context = await browser.newContext();
  const page = await context.newPage();

  // Log and continue all network requests
  await page.route(&#39;**&#39;, route =&amp;gt; {
    console.log(route.request().url());
    route.continue();
  });

  await page.goto(&#39;http://todomvc.com&#39;);
  await browser.close();
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/intro/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/api/class-playwright/&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/showcase/&quot;&gt;Community showcase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/playwright/master/CONTRIBUTING.md&quot;&gt;Contribution guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/playwright/releases&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mattermost/mattermost-webapp</title>
      <link>https://github.com/mattermost/mattermost-webapp</link>
      <description>&lt;p&gt;Webapp of Mattermost server: https://github.com/mattermost/mattermost-server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mattermost Web App&lt;/h1&gt; 
&lt;h1&gt;&lt;a href=&quot;https://mattermost.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png&quot; alt=&quot;Mattermost&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://mattermost.com&quot;&gt;Mattermost&lt;/a&gt; is an open source platform for secure collaboration across the entire software development lifecycle. This repo is the primary source for core development on the Mattermost platform; it&#39;s written in Golang and React, and runs as a single Linux binary with MySQL or PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.&lt;/p&gt; 
&lt;img width=&quot;1006&quot; alt=&quot;mattermost-hero&quot; src=&quot;https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png&quot;&gt; 
&lt;p&gt;This repo hosts the webapp client code. If you&#39;d like to report an issue with Mattermost, please create an issue on &lt;a href=&quot;https://github.com/mattermost/mattermost-server&quot;&gt;mattermost-server&lt;/a&gt;, which hosts the server code. You can also look at the &lt;a href=&quot;https://docs.mattermost.com/guides/get-help.html&quot;&gt;Get Help With Mattermost&lt;/a&gt; guide to find the resources available to our community.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/&quot;&gt;Product documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.mattermost.com/&quot;&gt;Developer documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/download&quot;&gt;Download compiled version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Try out Mattermost&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e&quot;&gt;Join the Mattermost Contributor&#39;s server&lt;/a&gt; to join community discussions about contributions, development and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://customers.mattermost.com/cloud/signup&quot;&gt;Get started with Mattermost Cloud&lt;/a&gt; to try out Mattermost&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/mattermost/mattermost-heroku&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy a Preview&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: Heroku preview does not include email or persistent storage.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Install Mattermost&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/getting-started/light-install.html&quot;&gt;Quick Install Guide&lt;/a&gt; - Deploy in minutes via Mattermost Omnibus on Ubuntu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/setting-up-local-machine-using-docker.html&quot;&gt;Run Mattermost via Docker&lt;/a&gt; - Launch a Mattermost server instantly to test functionality and build integrations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.mattermost.com/contribute/server/developer-setup&quot;&gt;Developer Machine Setup&lt;/a&gt; - Follow this guide if you want to write code for Mattermost&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other Install Guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html&quot;&gt;Ubuntu 20.04 LTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/install-kubernetes.html&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm&quot;&gt;Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/install-debian.html&quot;&gt;Debian Buster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/install-rhel-8.html&quot;&gt;RHEL 8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/guides/deployment.html&quot;&gt;More server install guides&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbook.mattermost.com/contributors/contributors/ways-to-contribute&quot;&gt;Contribute to Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattermost/mattermost-server/issues?page=1&amp;amp;q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&amp;amp;utf8=%E2%9C%93&quot;&gt;Find &quot;Help Wanted&quot; projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/guides/community-chat.html&quot;&gt;Join Developer Discussion on a Mattermost Server for contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/guides/get-help.html&quot;&gt;Get Help With Mattermost&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://api.mattermost.com/&quot;&gt;API Options - webhooks, slash commands, drivers and web service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbook.mattermost.com/contributors/contributors/localization&quot;&gt;Localization Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get the Latest News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; - Follow &lt;a href=&quot;https://twitter.com/Mattermost&quot;&gt;Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt; - Subscribe to our &lt;a href=&quot;https://mattermost.com/community-newsletter/&quot;&gt;newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any other questions, mail us at &lt;a href=&quot;mailto:info@mattermost.com&quot;&gt;info@mattermost.com&lt;/a&gt;. We&#39;d love to meet you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/javascript-testing-best-practices</title>
      <link>https://github.com/goldbergyoni/javascript-testing-best-practices</link>
      <description>&lt;p&gt;📗🌐 🚢 Comprehensive and exhaustive JavaScript &amp; Node.js testing best practices (August 2021)&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/jtbp-header-blue.png&quot; width=&quot;1920px&quot;&gt; 
&lt;br&gt; 
&lt;h1&gt;👇 Why this guide can take your testing skills to the next level&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;📗 46+ best practices: Super-comprehensive and exhaustive&lt;/h2&gt; 
&lt;p&gt;This is a guide for JavaScript &amp;amp; Node.js reliability from A-Z. It summarizes and curates for you dozens of the best blog posts, books and tools the market has to offer&lt;/p&gt; 
&lt;h2&gt;🚢 Advanced: Goes 10,000 miles beyond the basics&lt;/h2&gt; 
&lt;p&gt;Hop into a journey that travels way beyond the basics into advanced topics like testing in production, mutation testing, property-based testing and many other strategic &amp;amp; professional tools. Should you read every word in this guide your testing skills are likely to go way above the average&lt;/p&gt; 
&lt;h2&gt;🌐 Full-stack: front, backend, CI, anything&lt;/h2&gt; 
&lt;p&gt;Start by understanding the ubiquitous testing practices that are the foundation for any application tier. Then, delve into your area of choice: frontend/UI, backend, CI or maybe all of them?&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Written By Yoni Goldberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript &amp;amp; Node.js consultant&lt;/li&gt; 
 &lt;li&gt;📗 &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt; - My comprehensive online course with more than &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;10 hours of video&lt;/a&gt;, 14 test types and more than 40 best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👨‍🏫 &lt;a href=&quot;https://www.nodeconfremote.com/#workshops&quot;&gt;Nodeconf 2021&lt;/a&gt; is just around the corner, and will &lt;strong&gt;host a 5 hours testing workshop with Yoni Goldberg&lt;/strong&gt;. &lt;a href=&quot;https://www.nodeconfremote.com/#workshops&quot;&gt;Register here&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Translations - read in your own language&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🇨🇳&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-zh-CN.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/yvesyao&quot;&gt;Yves yao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇰🇷&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme.kr.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/ragubyun&quot;&gt;Rain Byun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇵🇱&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pl.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇪🇸&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-es.md&quot;&gt;Spanish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/sanguino&quot;&gt;Miguel G. Sanguino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇧🇷&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pt-br.md&quot;&gt;Portuguese-BR&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/iagocavalcante&quot;&gt;Iago Angelim Costa Cavalcante&lt;/a&gt; , &lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;Douglas Mariano Valero&lt;/a&gt; and &lt;a href=&quot;https://github.com/koooge&quot;&gt;koooge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Want to translate to your own language? please open an issue 💜&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Table of Contents&lt;/code&gt;&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-0%EF%B8%8F%E2%83%A3-the-golden-rule&quot;&gt;&lt;code&gt;Section 0: The Golden Rule&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A single advice that inspires all the others (1 special bullet)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-1-the-test-anatomy-1&quot;&gt;&lt;code&gt;Section 1: The Test Anatomy&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;The foundation - structuring clean tests (12 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-2%EF%B8%8F%E2%83%A3-backend-testing&quot;&gt;&lt;code&gt;Section 2: Backend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing backend and Microservices tests efficiently (8 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-3%EF%B8%8F%E2%83%A3-frontend-testing&quot;&gt;&lt;code&gt;Section 3: Frontend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing tests for web UI including component and E2E tests (11 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-4%EF%B8%8F%E2%83%A3-measuring-test-effectiveness&quot;&gt;&lt;code&gt;Section 4: Measuring Tests Effectiveness&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Watching the watchman - measuring test quality (4 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-5%EF%B8%8F%E2%83%A3-ci-and-other-quality-measures&quot;&gt;&lt;code&gt;Section 5: Continuous Integration&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Guidelines for CI in the JS world (9 bullets)&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 0️⃣: The Golden Rule&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪️ 0 The Golden Rule: Design for lean testing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Testing code is not like production-code - design it to be dead-simple, short, abstraction-free, flat, delightful to work with, lean. One should look at a test and get the intent instantly.&lt;/p&gt; 
&lt;p&gt;Our minds are full with the main production code, we don&#39;t have &#39;headspace&#39; for additional complexity. Should we try to squeeze yet another challenging code into our poor brain it will slow the team down which works against the reason we do testing. Practically this is where many teams just abandon testing.&lt;/p&gt; 
&lt;p&gt;The tests are an opportunity for something else - a friendly and smiley assistant, one that it&#39;s delightful to work with and delivers great value for such a small investment. Science tells us that we have two brain systems: system 1 is used for effortless activities like driving a car on an empty road and system 2 which is meant for complex and conscious operations like solving a math equation. Design your test for system 1, when looking at test code it should &lt;em&gt;feel&lt;/em&gt; as easy as modifying an HTML document and not like solving 2X(17 × 24).&lt;/p&gt; 
&lt;p&gt;This can be achieved by selectively cherry-picking techniques, tools and test targets that are cost-effective and provide great ROI. Test only as much as needed, strive to keep it nimble, sometimes it&#39;s even worth dropping some tests and trade reliability for agility and simplicity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/headspace.png&quot; alt=&quot;alt text&quot; title=&quot;We have no head room for additional complexity&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Most of the advice below are derivatives of this principle.&lt;/p&gt; 
&lt;h3&gt;Ready to start?&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 1: The Test Anatomy&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 1.1 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; A test report should tell whether the current application revision satisfies the requirements for the people who are not necessarily familiar with the code: the tester, the DevOps engineer who is deploying and the future you two years from now. This can be achieved best if the tests speak at the requirements level and include 3 parts:&lt;/p&gt; 
&lt;p&gt;(1) What is being tested? For example, the ProductsService.addNewProduct method&lt;/p&gt; 
&lt;p&gt;(2) Under what circumstances and scenario? For example, no price is passed to the method&lt;/p&gt; 
&lt;p&gt;(3) What is the expected result? For example, the new product is not approved&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;👇 Note:&lt;/strong&gt; Each bullet has code examples and sometime also an image illustration. Click to expand &lt;br&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Mocha to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//1. unit under test
describe(&#39;Products Service&#39;, function() {
  describe(&#39;Add new product&#39;, function() {
    //2. scenario and 3. expectation
    it(&#39;When no price is specified, then the product status is pending approval&#39;, ()=&amp;gt; {
      const newProduct = new ProductService().add(...);
      expect(newProduct.status).to.equal(&#39;pendingApproval&#39;);
    });
  });
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-1-3-parts.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;© &lt;b&gt;Credits &amp;amp; read-more&lt;/b&gt;&lt;/summary&gt; 1. 
 &lt;a href=&quot;https://osherove.com/blog/2005/4/3/naming-standards-for-unit-tests.html&quot;&gt;Roy Osherove - Naming standards for unit tests&lt;/a&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.2 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Structure your tests with 3 well-separated sections Arrange, Act &amp;amp; Assert (AAA). Following this structure guarantees that the reader spends no brain-CPU on understanding the test plan:&lt;/p&gt; 
&lt;p&gt;1st A - Arrange: All the setup code to bring the system to the scenario the test aims to simulate. This might include instantiating the unit under test constructor, adding DB records, mocking/stubbing on objects and any other preparation code&lt;/p&gt; 
&lt;p&gt;2nd A - Act: Execute the unit under test. Usually 1 line of code&lt;/p&gt; 
&lt;p&gt;3rd A - Assert: Ensure that the received value satisfies the expectation. Usually 1 line of code&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Not only do you spend hours understanding the main code, but what should have been the simplest part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: A test structured with the AAA pattern&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Customer classifier&quot;, () =&amp;gt; {
  test(&quot;When customer spent more than 500$, should be classified as premium&quot;, () =&amp;gt; {
    //Arrange
    const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
    const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });

    //Act
    const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);

    //Assert
    expect(receivedClassification).toMatch(&quot;premium&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: No separation, one bulk, harder to interpret&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Should be classified as premium&quot;, () =&amp;gt; {
  const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
  const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });
  const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);
  expect(receivedClassification).toMatch(&quot;premium&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.3 Describe expectations in a product language: use BDD-style assertions&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Coding your tests in a declarative-style allows the reader to get the grab instantly without spending even a single brain-CPU cycle. When you write imperative code that is packed with conditional logic, the reader is forced to exert more brain-CPU cycles. In that case, code the expectation in a human-like language, declarative BDD style using &lt;code&gt;expect&lt;/code&gt; or &lt;code&gt;should&lt;/code&gt; and not using custom code. If Chai &amp;amp; Jest doesn&#39;t include the desired assertion and it’s highly repeatable, consider &lt;a href=&quot;https://jestjs.io/docs/en/expect#expectextendmatchers&quot;&gt;extending Jest matcher (Jest)&lt;/a&gt; or writing a &lt;a href=&quot;https://www.chaijs.com/guide/plugins/&quot;&gt;custom Chai plugin&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The team will write less tests and decorate the annoying ones with .skip()&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: The reader must skim through not so short, and imperative code just to get the test story&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins &quot;admin1&quot;, &quot;admin2&quot; and &quot;user1&quot;
  const allAdmins = getUsers({ adminOnly: true });

  let admin1Found,
    adming2Found = false;

  allAdmins.forEach(aSingleUser =&amp;gt; {
    if (aSingleUser === &quot;user1&quot;) {
      assert.notEqual(aSingleUser, &quot;user1&quot;, &quot;A user was found and not admin&quot;);
    }
    if (aSingleUser === &quot;admin1&quot;) {
      admin1Found = true;
    }
    if (aSingleUser === &quot;admin2&quot;) {
      admin2Found = true;
    }
  });

  if (!admin1Found || !admin2Found) {
    throw new Error(&quot;Not all admins were returned&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Skimming through the following declarative test is a breeze&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins
  const allAdmins = getUsers({ adminOnly: true });

  expect(allAdmins)
    .to.include.ordered.members([&quot;admin1&quot;, &quot;admin2&quot;])
    .but.not.include.ordered.members([&quot;user1&quot;]);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.4 Stick to black-box testing: Test only public methods&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Testing the internals brings huge overhead for almost nothing. If your code/API delivers the right results, should you really invest your next 3 hours in testing HOW it worked internally and then maintain these fragile tests? Whenever a public behavior is checked, the private implementation is also implicitly tested and your tests will break only if there is a certain problem (e.g. wrong output). This approach is also referred to as &lt;code&gt;behavioral testing&lt;/code&gt;. On the other side, should you test the internals (white box approach) — your focus shifts from planning the component outcome to nitty-gritty details and your test might break because of minor code refactors although the results are fine - this dramatically increases the maintenance burden &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Your tests behave like the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf&quot;&gt;boy who cried wolf&lt;/a&gt;: shouting false-positive cries (e.g., A test fails because a private variable name was changed). Unsurprisingly, people will soon start to ignore the CI notifications until someday, a real bug gets ignored…&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: A test case is testing the internals for no good reason&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ProductService {
  //this method is only used internally
  //Change this name will make the tests fail
  calculateVATAdd(priceWithoutVAT) {
    return { finalPrice: priceWithoutVAT * 1.2 };
    //Change the result format or key name above will make the tests fail
  }
  //public method
  getPrice(productId) {
    const desiredProduct = DB.getProduct(productId);
    finalPrice = this.calculateVATAdd(desiredProduct.price).finalPrice;
    return finalPrice;
  }
}

it(&quot;White-box test: When the internal methods get 0 vat, it return 0 response&quot;, async () =&amp;gt; {
  //There&#39;s no requirement to allow users to calculate the VAT, only show the final price. Nevertheless we falsely insist here to test the class internals
  expect(new ProductService().calculateVATAdd(0).finalPrice).to.equal(0);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ ️1.5 Choose the right test doubles: Avoid mocks in favor of stubs and spies&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Test doubles are a necessary evil because they are coupled to the application internals, yet some provide immense value (&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; data-href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;Read here a reminder about test doubles: mocks vs stubs vs spies&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Before using test doubles, ask a very simple question: Do I use it to test functionality that appears, or could appear, in the requirements document? If no, it’s a white-box testing smell.&lt;/p&gt; 
&lt;p&gt;For example, if you want to test that your app behaves reasonably when the payment service is down, you might stub the payment service and trigger some ‘No Response’ return to ensure that the unit under test returns the right value. This checks our application behavior/response/outcome under certain scenarios. You might also use a spy to assert that an email was sent when that service is down — this is again a behavioral check which is likely to appear in a requirements doc (“Send an email if payment couldn’t be saved”). On the flip side, if you mock the Payment service and ensure that it was called with the right JavaScript types — then your test is focused on internal things that have nothing to do with the application functionality and are likely to change frequently &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Any refactoring of code mandates searching for all the mocks in the code and updating accordingly. Tests become a burden rather than a helpful friend&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-pattern example: Mocks focus on the internals&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Sinon-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Sinon&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure data access DAL was called once, with the right product and right config&quot;, async () =&amp;gt; {
  //Assume we already added a product
  const dataAccessMock = sinon.mock(DAL);
  //hmmm BAD: testing the internals is actually our main goal here, not just a side-effect
  dataAccessMock
    .expects(&quot;deleteProduct&quot;)
    .once()
    .withArgs(DBConfig, theProductWeJustAdded, true, false);
  new ProductService().deletePrice(theProductWeJustAdded);
  dataAccessMock.verify();
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt;Doing It Right Example: spies are focused on testing the requirements but as a side-effect are unavoidably touching to the internals&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure an email is sent&quot;, async () =&amp;gt; {
  //Assume we already added here a product
  const spy = sinon.spy(Emailer.prototype, &quot;sendEmail&quot;);
  new ProductService().deletePrice(theProductWeJustAdded);
  //hmmm OK: we deal with internals? Yes, but as a side effect of testing the requirements (sending an email)
  expect(spy.calledOnce).to.be.true;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;📗 Want to learn all these practices with live video?&lt;/h2&gt; 
&lt;h3&gt;Visit my online course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.6 Don’t “foo”, use realistic input data&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Often production bugs are revealed under some very specific and surprising input — the more realistic the test input is, the greater the chances are to catch bugs early. Use dedicated libraries like &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt; to generate pseudo-real data that resembles the variety and form of production data. For example, such libraries can generate realistic phone numbers, usernames, credit card, company names, and even ‘lorem ipsum’ text. You may also create some tests (on top of unit tests, not as a replacement) that randomize fakers data to stretch your unit under test or even import real data from your production environment. Want to take it to the next level? See the next bullet (property-based testing). &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; All your development testing will falsely show green when you use synthetic inputs like “Foo”, but then production might turn red when a hacker passes-in a nasty string like “@3e2ddsf . ##’ 1 fdsfds . fds432 AAAA”&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: A test suite that passes due to non-realistic data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addProduct = (name, price) =&amp;gt; {
  const productNameRegexNoSpace = /^\S*$/; //no white-space allowed

  if (!productNameRegexNoSpace.test(name)) return false; //this path never reached due to dull input

  //some logic here
  return true;
};

test(&quot;Wrong: When adding new product with valid properties, get successful confirmation&quot;, async () =&amp;gt; {
  //The string &quot;Foo&quot; which is used in all tests never triggers a false result
  const addProductResult = addProduct(&quot;Foo&quot;, 5);
  expect(addProductResult).toBe(true);
  //Positive-false: the operation succeeded because we never tried with long
  //product name including spaces
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt;Doing It Right Example: Randomizing realistic input&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;Better: When adding new valid product, get successful confirmation&quot;, async () =&amp;gt; {
  const addProductResult = addProduct(faker.commerce.productName(), faker.random.number());
  //Generated random input: {&#39;Sleek Cotton Computer&#39;,  85481}
  expect(addProductResult).to.be.true;
  //Test failed, the random input triggered some path we never planned for.
  //We discovered a bug early!
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.7 Test many input combinations using Property-based testing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Typically we choose a few input samples for each test. Even when the input format resembles real-world data (see bullet &lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices#-%EF%B8%8F16-dont-foo-use-realistic-input-data&quot;&gt;‘Don’t foo’&lt;/a&gt;), we cover only a few input combinations (method(‘’, true, 1), method(“string” , false , 0)), However, in production, an API that is called with 5 parameters can be invoked with thousands of different permutations, one of them might render our process down (&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzzing&quot;&gt;see Fuzz Testing&lt;/a&gt;). What if you could write a single test that sends 1000 permutations of different inputs automatically and catches for which input our code fails to return the right response? Property-based testing is a technique that does exactly that: by sending all the possible input combinations to your unit under test it increases the serendipity of finding a bug. For example, given a method — addNewProduct(id, name, isDiscount) — the supporting libraries will call this method with many combinations of (number, string, boolean) like (1, “iPhone”, false), (2, “Galaxy”, true). You can run property-based testing using your favorite test runner (Mocha, Jest, etc) using libraries like &lt;a href=&quot;https://github.com/jsverify/jsverify&quot;&gt;js-verify&lt;/a&gt; or &lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot;&gt;testcheck&lt;/a&gt; (much better documentation). Update: Nicolas Dubien suggests in the comments below to &lt;a href=&quot;https://github.com/dubzzz/fast-check#readme&quot;&gt;checkout fast-check&lt;/a&gt; which seems to offer some additional features and also to be actively maintained &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Unconsciously, you choose the test inputs that cover only code paths that work well. Unfortunately, this decreases the efficiency of testing as a vehicle to expose bugs&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Testing many input permutations with “fast-check”&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fc from &quot;fast-check&quot;;

describe(&quot;Product service&quot;, () =&amp;gt; {
  describe(&quot;Adding new&quot;, () =&amp;gt; {
    //this will run 100 times with different random properties
    it(&quot;Add new product with random yet valid properties, always successful&quot;, () =&amp;gt;
      fc.assert(
        fc.property(fc.integer(), fc.string(), (id, name) =&amp;gt; {
          expect(addNewProduct(id, name).status).toEqual(&quot;approved&quot;);
        })
      ));
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.8 If needed, use only short &amp;amp; inline snapshots&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; When there is a need for &lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing&quot;&gt;snapshot testing&lt;/a&gt;, use only short and focused snapshots (i.e. 3-7 lines) that are included as part of the test (&lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing#inline-snapshots&quot;&gt;Inline Snapshot&lt;/a&gt;) and not within external files. Keeping this guideline will ensure your tests remain self-explanatory and less fragile.&lt;/p&gt; 
&lt;p&gt;On the other hand, ‘classic snapshots’ tutorials and tools encourage to store big files (e.g. component rendering markup, API JSON result) over some external medium and ensure each time when the test run to compare the received result with the saved version. This, for example, can implicitly couple our test to 1000 lines with 3000 data values that the test writer never read and reasoned about. Why is this wrong? By doing so, there are 1000 reasons for your test to fail - it’s enough for a single line to change for the snapshot to get invalid and this is likely to happen a lot. How frequently? for every space, comment or minor CSS/HTML change. Not only this, the test name wouldn’t give a clue about the failure as it just checks that 1000 lines didn’t change, also it encourages to the test writer to accept as the desired true a long document he couldn’t inspect and verify. All of these are symptoms of obscure and eager test that is not focused and aims to achieve too much&lt;/p&gt; 
&lt;p&gt;It’s worth noting that there are few cases where long &amp;amp; external snapshots are acceptable - when asserting on schema and not data (extracting out values and focusing on fields) or when the received document rarely changes &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A UI test fails. The code seems right, the screen renders perfect pixels, what happened? your snapshot testing just found a difference from the origin document to current received one - a single space character was added to the markdown...&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: Coupling our test to unseen 2000 lines of code&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;TestJavaScript.com is renderd correctly&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert
  expect(receivedPage).toMatchSnapshot();
  //We now implicitly maintain a 2000 lines long document
  //every additional line break or comment - will break this test
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Expectations are visible and focused&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When visiting TestJavaScript.com home page, a menu is displayed&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert

  const menu = receivedPage.content.menu;
  expect(menu).toMatchInlineSnapshot(`
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; About &amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; Contact &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.9 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (&lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture&quot;&gt;also known as ‘test fixture’&lt;/a&gt;) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });

  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);

  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 1.10 Don’t catch errors, expect them&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; When trying to assert that some input triggers an error, it might look right to use try-catch-finally and asserts that the catch clause was entered. The result is an awkward and verbose test case (example below) that hides the simple test intent and the result expectations&lt;/p&gt; 
&lt;p&gt;A more elegant alternative is the using the one-line dedicated Chai assertion: expect(method).to.throw (or in Jest: expect(method).toThrow()). It’s absolutely mandatory to also ensure the exception contains a property that tells the error type, otherwise given just a generic error the application won’t be able to do much rather than show a disappointing message to the user &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; It will be challenging to infer from the test reports (e.g. CI reports) what went wrong&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-pattern Example: A long test case that tries to assert the existence of error with try-catch&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  let errorWeExceptFor = null;
  try {
    const result = await addNewProduct({});
  } catch (error) {
    expect(error.code).to.equal(&quot;InvalidInput&quot;);
    errorWeExceptFor = error;
  }
  expect(errorWeExceptFor).not.to.be.null;
  //if this assertion fails, the tests results/reports will only show
  //that some value is null, there won&#39;t be a word about a missing Exception
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: A human-readable expectation that could be understood easily, maybe even by QA or technical PM&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  await expect(addNewProduct({}))
    .to.eventually.throw(AppError)
    .with.property(&quot;code&quot;, &quot;InvalidInput&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.11 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha — grep ‘sanity’ &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Tagging tests as ‘#cold-test’ allows the test runner to execute only fast tests (Cold===quick tests that are doing no IO and can be executed frequently even as the developer is typing)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//this test is fast (no DB) and we&#39;re tagging it correspondigly
//now the user/CI can run it frequently
describe(&quot;Order service&quot;, function() {
  describe(&quot;Add new order #cold-test #sanity&quot;, function() {
    test(&quot;Scenario - no currency was supplied. Expectation - Use the default currency #sanity&quot;, function() {
      //code logic here
    });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.12 Categorize tests under at least 2 levels&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Apply some structure to your test suite so an occasional visitor could easily understand the requirements (tests are the best documentation) and the various scenarios that are being tested. A common method for this is by placing at least 2 &#39;describe&#39; blocks above your tests: the 1st is for the name of the unit under test and the 2nd for additional level of categorization like the scenario or custom categories (see code examples and print screen below). Doing so will also greatly improve the test reports: The reader will easily infer the tests categories, delve into the desired section and correlate failing tests. In addition, it will get much easier for a developer to navigate through the code of a suite with many tests. There are multiple alternative structures for test suite that you may consider like &lt;a href=&quot;https://github.com/searls/jasmine-given&quot;&gt;given-when-then&lt;/a&gt; and &lt;a href=&quot;https://github.com/ericelliott/riteway&quot;&gt;RITE&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When looking at a report with flat and long list of tests, the reader have to skim-read through long texts to conclude the major scenarios and correlate the commonality of failing tests. Consider the following case: When 7/100 tests fail, looking at a flat list will demand reading the failing tests text to see how they relate to each other. However, in a hierarchical report all of them could be under the same flow or category and the reader will quickly infer what or at least where is the root failure cause&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Structuring suite with the name of unit under test and scenarios will lead to the convenient report that is shown below&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Unit under test
describe(&quot;Transfer service&quot;, () =&amp;gt; {
  //Scenario
  describe(&quot;When no credit&quot;, () =&amp;gt; {
    //Expectation
    test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

    //Expectation
    test(&quot;Then it should send email to admin&quot;, () =&amp;gt; {});
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/hierarchical-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-pattern Example: A flat list of tests will make it harder for the reader to identify the user stories and correlate failing tests&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

test(&quot;Then it should send email&quot;, () =&amp;gt; {});

test(&quot;Then there should not be a new transfer record&quot;, () =&amp;gt; {});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/flat-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.13 Other generic good testing hygiene&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;p&gt;Learn and practice &lt;a href=&quot;https://www.sm-cloud.com/book-review-test-driven-development-by-example-a-tldr/&quot;&gt;TDD principles&lt;/a&gt; — they are extremely valuable for many but don’t get intimidated if they don’t fit your style, you’re not the only one. Consider writing the tests before the code in a &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html&quot;&gt;red-green-refactor style&lt;/a&gt;, ensure each test checks exactly one thing, when you find a bug — before fixing write a test that will detect this bug in the future, let each test fail at least once before turning green, start a module by writing a quick and simplistic code that satisfies the test - then refactor gradually and take it to a production grade level, avoid any dependency on the environment (paths, OS, etc) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss pearls of wisdom that were collected for decades&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 2️⃣: Backend Testing&lt;/h1&gt; 
&lt;h2&gt;⚪ ️2.1 Enrich your testing portfolio: Look beyond unit tests and the pyramid&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; The &lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;testing pyramid&lt;/a&gt;, though 10&amp;gt; years old, is a great and relevant model that suggests three testing types and influences most developers’ testing strategy. At the same time, more than a handful of shiny new testing techniques emerged and are hiding in the shadows of the testing pyramid. Given all the dramatic changes that we’ve seen in the recent 10 years (Microservices, cloud, serverless), is it even possible that one quite-old model will suit &lt;em&gt;all&lt;/em&gt; types of applications? shouldn’t the testing world consider welcoming new testing techniques?&lt;/p&gt; 
&lt;p&gt;Don’t get me wrong, in 2019 the testing pyramid, TDD and unit tests are still a powerful technique and are probably the best match for many applications. Only like any other model, despite its usefulness, &lt;a href=&quot;https://en.wikipedia.org/wiki/All_models_are_wrong&quot;&gt;it must be wrong sometimes&lt;/a&gt;. For example, consider an IoT application that ingests many events into a message-bus like Kafka/RabbitMQ, which then flow into some data-warehouse and are eventually queried by some analytics UI. Should we really spend 50% of our testing budget on writing unit tests for an application that is integration-centric and has almost no logic? As the diversity of application types increase (bots, crypto, Alexa-skills) greater are the chances to find scenarios where the testing pyramid is not the best match.&lt;/p&gt; 
&lt;p&gt;It’s time to enrich your testing portfolio and become familiar with more testing types (the next bullets suggest few ideas), mind models like the testing pyramid but also match testing types to real-world problems that you’re facing (‘Hey, our API is broken, let’s write consumer-driven contract testing!’), diversify your tests like an investor that build a portfolio based on risk analysis — assess where problems might arise and match some prevention measures to mitigate those potential risks&lt;/p&gt; 
&lt;p&gt;A word of caution: the TDD argument in the software world takes a typical false-dichotomy face, some preach to use it everywhere, others think it’s the devil. Everyone who speaks in absolutes is wrong :]&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You’re going to miss some tools with amazing ROI, some like Fuzz, lint, and mutation can provide value in 10 minutes&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the same way’&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-rich-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the sane way’&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;☺️Example: &lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtube&quot; data-href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot;&gt;YouTube: “Beyond Unit Tests: 5 Shiny Node.JS Test Types (2018)” (Yoni Goldberg)&lt;/a&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-Yoni-Goldberg-Testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.2 Component testing might be your best affair&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Each unit test covers a tiny portion of the application and it’s expensive to cover the whole, whereas end-to-end testing easily covers a lot of ground but is flaky and slower, why not apply a balanced approach and write tests that are bigger than unit tests but smaller than end-to-end testing? Component testing is the unsung song of the testing world — they provide the best from both worlds: reasonable performance and a possibility to apply TDD patterns + realistic and great coverage.&lt;/p&gt; 
&lt;p&gt;Component tests focus on the Microservice ‘unit’, they work against the API, don’t mock anything which belongs to the Microservice itself (e.g. real DB, or at least the in-memory version of that DB) but stub anything that is external like calls to other Microservices. By doing so, we test what we deploy, approach the app from outwards to inwards and gain great confidence in a reasonable amount of time. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Supertest allows approaching Express API in-process (fast and cover many layers)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-13-component-test-yoni-goldberg.png&quot; alt=&quot;alt text&quot; title=&quot; [Supertest](https://www.npmjs.com/package/supertest) allows approaching Express API in-process (fast and cover many layers)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.3 Ensure new releases don’t break the API using contract tests&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; So your Microservice has multiple clients, and you run multiple versions of the service for compatibility reasons (keeping everyone happy). Then you change some field and ‘boom!’, some important client who relies on this field is angry. This is the Catch-22 of the integration world: It’s very challenging for the server side to consider all the multiple client expectations — On the other hand, the clients can’t perform any testing because the server controls the release dates. &lt;a href=&quot;https://docs.pact.io/&quot;&gt;Consumer-driven contracts and the framework PACT&lt;/a&gt; were born to formalize this process with a very disruptive approach — not the server defines the test plan of itself rather the client defines the tests of the… server! PACT can record the client expectation and put in a shared location, “broker”, so the server can pull the expectations and run on every build using PACT library to detect broken contracts — a client expectation that is not met. By doing so, all the server-client API mismatches are caught early during build/CI and might save you a great deal of frustration &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The alternatives are exhausting manual testing or deployment fear&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20PACT-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with PACT&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-14-testing-best-practices-contract-flow.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 2.4 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Many avoid Middleware testing because they represent a small portion of the system and require a live Express server. Both reasons are wrong — Middlewares are small but affect all or most of the requests and can be tested easily as pure functions that get {req,res} JS objects. To test a middleware function one should just invoke it and spy (&lt;a href=&quot;https://www.npmjs.com/package/sinon&quot;&gt;using Sinon for example&lt;/a&gt;) on the interaction with the {req,res} objects to ensure the function performed the right action. The library &lt;a href=&quot;https://www.npmjs.com/package/node-mocks-http&quot;&gt;node-mock-http&lt;/a&gt; takes it even further and factors the {req,res} objects along with spying on their behavior. For example, it can assert whether the http status that was set on the res object matches the expectation (See example below) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt;Doing It Right Example: Testing middleware in isolation without issuing network calls and waking-up the entire Express machine&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//the middleware we want to test
const unitUnderTest = require(&quot;./middleware&quot;);
const httpMocks = require(&quot;node-mocks-http&quot;);
//Jest syntax, equivelant to describe() &amp;amp; it() in Mocha
test(&quot;A request without authentication header, should return http status 403&quot;, () =&amp;gt; {
  const request = httpMocks.createRequest({
    method: &quot;GET&quot;,
    url: &quot;/user/42&quot;,
    headers: {
      authentication: &quot;&quot;
    }
  });
  const response = httpMocks.createResponse();
  unitUnderTest(request, response);
  expect(response.statusCode).toBe(403);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.5 Measure and refactor using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keep your code maintainable. You can add static analysis tools to your CI build to abort when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; (4,900+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (2,000+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Credit: &lt;a href=&quot;https://github.com/TheHollidayInn&quot; data-href=&quot;https://github.com/TheHollidayInn&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: CodeClimate, a commercial tool that can identify complex methods:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Code%20Climate-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with CodeClimate&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-16-yoni-goldberg-quality.png&quot; alt=&quot;alt text&quot; title=&quot;CodeClimate, a commercial tool that can identify complex methods:&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 2.6 Check your readiness for Node-related chaos&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Weirdly, most software testings are about logic &amp;amp; data only, but some of the worst things that happen (and are really hard to mitigate) are infrastructural issues. For example, did you ever test what happens when your process memory is overloaded, or when the server/process dies, or does your monitoring system realizes when the API becomes 50% slower?. To test and mitigate these type of bad things — &lt;a href=&quot;https://principlesofchaos.org/&quot;&gt;Chaos engineering&lt;/a&gt; was born by Netflix. It aims to provide awareness, frameworks and tools for testing our app resiliency for chaotic issues. For example, one of its famous tools, &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;the chaos monkey&lt;/a&gt;, randomly kills servers to ensure that our service can still serve users and not relying on a single server (there is also a Kubernetes version, &lt;a href=&quot;https://github.com/asobti/kube-monkey&quot;&gt;kube-monkey&lt;/a&gt;, that kills pods). All these tools work on the hosting/platform level, but what if you wish to test and generate pure Node chaos like check how your Node process copes with uncaught errors, unhandled promise rejection, v8 memory overloaded with the max allowed of 1.7GB or whether your UX remains satisfactory when the event loop gets blocked often? to address this I’ve written, &lt;a href=&quot;https://github.com/i0natan/node-chaos-monkey&quot;&gt;node-chaos&lt;/a&gt; (alpha) which provides all sort of Node-related chaotic acts &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; No escape here, Murphy’s law will hit your production without mercy&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: : Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png&quot; alt=&quot;alt text&quot; title=&quot;Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️2.7 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (also known as ‘test fixture’) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });
  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 3️⃣: Frontend Testing&lt;/h1&gt; 
&lt;h2&gt;⚪ ️ 3.1 Separate UI from functionality&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; When focusing on testing component logic, UI details become a noise that should be extracted, so your tests can focus on pure data. Practically, extract the desired data from the markup in an abstract way that is not too coupled to the graphic implementation, assert only on pure data (vs HTML/CSS graphic details) and disable animations that slow down. You might get tempted to avoid rendering and test only the back part of the UI (e.g. services, actions, store) but this will result in fictional tests that don&#39;t resemble the reality and won&#39;t reveal cases where the right data doesn&#39;t even arrive in the UI&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The pure calculated data of your test might be ready in 10ms, but then the whole test will last 500ms (100 tests = 1 min) due to some fancy and irrelevant animation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Separating out the UI details&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When users-list is flagged to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Extract the data from the UI first
  const allRenderedUsers = getAllByTestId(&quot;user&quot;).map(uiElement =&amp;gt; uiElement.textContent);
  const allRealVIPUsers = allUsers.filter(user =&amp;gt; user.vip).map(user =&amp;gt; user.name);
  expect(allRenderedUsers).toEqual(allRealVIPUsers); //compare data with data, no UI here
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: Assertion mix UI details and data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When flagging to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Mix UI &amp;amp; data in assertion
  expect(getAllByTestId(&quot;user&quot;)).toEqual(&#39;[&amp;lt;li data-test-id=&quot;user&quot;&amp;gt;John Doe&amp;lt;/li&amp;gt;]&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 3.2 Query HTML elements based on attributes that are unlikely to change&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Query HTML elements based on attributes that are likely to survive graphic changes unlike CSS selectors and like form labels. If the designated element doesn&#39;t have such attributes, create a dedicated test attribute like &#39;test-id-submit-button&#39;. Going this route not only ensures that your functional/logic tests never break because of look &amp;amp; feel changes but also it becomes clear to the entire team that this element and attribute are utilized by tests and shouldn&#39;t get removed&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You want to test the login functionality that spans many components, logic and services, everything is set up perfectly - stubs, spies, Ajax calls are isolated. All seems perfect. Then the test fails because the designer changed the div CSS class from &#39;thick-border&#39; to &#39;thin-border&#39;&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Querying an element using a dedicated attribute for testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;// the markup code (part of React component)
&amp;lt;h3&amp;gt;
  &amp;lt;Badge pill className=&quot;fixed_badge&quot; variant=&quot;dark&quot;&amp;gt;
    &amp;lt;span data-test-id=&quot;errorsLabel&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
    &amp;lt;!-- note the attribute data-test-id --&amp;gt;
  &amp;lt;/Badge&amp;gt;
&amp;lt;/h3&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this example is using react-testing-library
test(&quot;Whenever no data is passed to metric, show 0 as default&quot;, () =&amp;gt; {
  // Arrange
  const metricValue = undefined;

  // Act
  const { getByTestId } = render(&amp;lt;dashboardMetric value={undefined} /&amp;gt;);

  expect(getByTestId(&quot;errorsLabel&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: Relying on CSS attributes&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- the markup code (part of React component) --&amp;gt;
&amp;lt;span id=&quot;metric&quot; className=&quot;d-flex-column&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
&amp;lt;!-- what if the designer changes the classs? --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this exammple is using enzyme
test(&quot;Whenever no data is passed, error metric shows zero&quot;, () =&amp;gt; {
  // ...

  expect(wrapper.find(&quot;[className=&#39;d-flex-column&#39;]&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.3 Whenever possible, test with a realistic and fully rendered component&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Whenever reasonably sized, test your component from outside like your users do, fully render the UI, act on it and assert that the rendered UI behaves as expected. Avoid all sort of mocking, partial and shallow rendering - this approach might result in untrapped bugs due to lack of details and harden the maintenance as the tests mess with the internals (see bullet &lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices#-%EF%B8%8F-14-stick-to-black-box-testing-test-only-public-methods&quot;&gt;&#39;Favour blackbox testing&#39;&lt;/a&gt;). If one of the child components is significantly slowing down (e.g. animation) or complicating the setup - consider explicitly replacing it with a fake&lt;/p&gt; 
&lt;p&gt;With all that said, a word of caution is in order: this technique works for small/medium components that pack a reasonable size of child components. Fully rendering a component with too many children will make it hard to reason about test failures (root cause analysis) and might get too slow. In such cases, write only a few tests against that fat parent component and more tests against its children&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When poking into a component&#39;s internal by invoking its private methods, and checking the inner state - you would have to refactor all tests when refactoring the components implementation. Do you really have a capacity for this level of maintenance?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Working realistically with a fully rendered component&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Enzyme-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Enzyme&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calendar extends React.Component {
  static defaultProps = { showFilters: false };

  render() {
    return (
      &amp;lt;div&amp;gt;
        A filters panel with a button to hide/show filters
        &amp;lt;FiltersPanel showFilter={showFilters} title=&quot;Choose Filters&quot; /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

//Examples use React &amp;amp; Enzyme
test(&quot;Realistic approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = mount(&amp;lt;Calendar showFilters={false} /&amp;gt;);

  // Act
  wrapper.find(&quot;button&quot;).simulate(&quot;click&quot;);

  // Assert
  expect(wrapper.text().includes(&quot;Choose Filter&quot;));
  // This is how the user will approach this element: by text
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: Mocking the reality with shallow rendering&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Shallow/mocked approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = shallow(&amp;lt;Calendar showFilters={false} title=&quot;Choose Filter&quot; /&amp;gt;);

  // Act
  wrapper
    .find(&quot;filtersPanel&quot;)
    .instance()
    .showFilters();
  // Tap into the internals, bypass the UI and invoke a method. White-box approach

  // Assert
  expect(wrapper.find(&quot;Filter&quot;).props()).toEqual({ title: &quot;Choose Filter&quot; });
  // what if we change the prop name or don&#39;t pass anything relevant?
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.4 Don&#39;t sleep, use frameworks built-in support for async events. Also try to speed things up&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; In many cases, the unit under test completion time is just unknown (e.g. animation suspends element appearance) - in that case, avoid sleeping (e.g. setTimeOut) and prefer more deterministic methods that most platforms provide. Some libraries allows awaiting on operations (e.g. &lt;a href=&quot;https://docs.cypress.io/guides/references/best-practices.html#Unnecessary-Waiting&quot;&gt;Cypress cy.request(&#39;url&#39;)&lt;/a&gt;), other provide API for waiting like &lt;a href=&quot;https://testing-library.com/docs/guide-disappearance&quot;&gt;@testing-library/dom method wait(expect(element))&lt;/a&gt;. Sometimes a more elegant way is to stub the slow resource, like API for example, and then once the response moment becomes deterministic the component can be explicitly re-rendered. When depending upon some external component that sleeps, it might turn useful to &lt;a href=&quot;https://jestjs.io/docs/en/timer-mocks&quot;&gt;hurry-up the clock&lt;/a&gt;. Sleeping is a pattern to avoid because it forces your test to be slow or risky (when waiting for a too short period). Whenever sleeping and polling is inevitable and there&#39;s no support from the testing framework, some npm libraries like &lt;a href=&quot;https://www.npmjs.com/package/wait-for-expect&quot;&gt;wait-for-expect&lt;/a&gt; can help with a semi-deterministic solution &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When sleeping for a long time, tests will be an order of magnitude slower. When trying to sleep for small numbers, test will fail when the unit under test didn&#39;t respond in a timely fashion. So it boils down to a trade-off between flakiness and bad performance&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: E2E API that resolves only when the async operations is done (Cypress)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Cypress
cy.get(&quot;#show-products&quot;).click(); // navigate
cy.wait(&quot;@products&quot;); // wait for route to appear
// this line will get executed only when the route is ready
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Testing library that waits for DOM elements&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// @testing-library/dom
test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // wait for appearance
  await wait(() =&amp;gt; {
    expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
  });

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: custom sleep code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // custom wait logic (caution: simplistic, no timeout)
  const interval = setInterval(() =&amp;gt; {
    const found = getByText(&quot;the lion king&quot;);
    if (found) {
      clearInterval(interval);
      expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
    }
  }, 100);

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.5 Watch how the content is served over the network&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Google%20LightHouse-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Lighthouse&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Do:&lt;/strong&gt; Apply some active monitor that ensures the page load under real network is optimized - this includes any UX concern like slow page load or un-minified bundle. The inspection tools market is no short: basic tools like &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;pingdom&lt;/a&gt;, AWS CloudWatch, &lt;a href=&quot;https://cloud.google.com/monitoring/uptime-checks/&quot;&gt;gcp StackDriver&lt;/a&gt; can be easily configured to watch whether the server is alive and response under a reasonable SLA. This only scratches the surface of what might get wrong, hence it&#39;s preferable to opt for tools that specialize in frontend (e.g. &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;lighthouse&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;pagespeed&lt;/a&gt;) and perform richer analysis. The focus should be on symptoms, metrics that directly affect the UX, like page load time, &lt;a href=&quot;https://scotch.io/courses/10-web-performance-audit-tips-for-your-next-billion-users-in-2018/fmp-first-meaningful-paint&quot;&gt;meaningful paint&lt;/a&gt;, &lt;a href=&quot;https://calibreapp.com/blog/time-to-interactive/&quot;&gt;time until the page gets interactive (TTI)&lt;/a&gt;. On top of that, one may also watch for technical causes like ensuring the content is compressed, time to the first byte, optimize images, ensuring reasonable DOM size, SSL and many others. It&#39;s advisable to have these rich monitors both during development, as part of the CI and most important - 24x7 over the production&#39;s servers/CDN&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; It must be disappointing to realize that after such great care for crafting a UI, 100% functional tests passing and sophisticated bundling - the UX is horrible and slow due to CDN misconfiguration&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Lighthouse page load inspection report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/lighthouse2.png&quot; alt=&quot;&quot; title=&quot;Lighthouse page load inspection report&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.6 Stub flaky and slow resources like backend APIs&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; When coding your mainstream tests (not E2E tests), avoid involving any resource that is beyond your responsibility and control like backend API and use stubs instead (i.e. test double). Practically, instead of real network calls to APIs, use some test double library (like &lt;a href=&quot;https://sinonjs.org/&quot;&gt;Sinon&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/testdouble&quot;&gt;Test doubles&lt;/a&gt;, etc) for stubbing the API response. The main benefit is preventing flakiness - testing or staging APIs by definition are not highly stable and from time to time will fail your tests although YOUR component behaves just fine (production env was not meant for testing and it usually throttles requests). Doing this will allow simulating various API behavior that should drive your component behavior as when no data was found or the case when API throws an error. Last but not least, network calls will greatly slow down the tests&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The average test runs no longer than few ms, a typical API call last 100ms&amp;gt;, this makes each test ~20x slower&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Stubbing or intercepting API calls&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// unit under test
export default function ProductsList() {
  const [products, setProducts] = useState(false);

  const fetchProducts = async () =&amp;gt; {
    const products = await axios.get(&quot;api/products&quot;);
    setProducts(products);
  };

  useEffect(() =&amp;gt; {
    fetchProducts();
  }, []);

  return products ? &amp;lt;div&amp;gt;{products}&amp;lt;/div&amp;gt; : &amp;lt;div data-test-id=&quot;no-products-message&quot;&amp;gt;No products&amp;lt;/div&amp;gt;;
}

// test
test(&quot;When no products exist, show the appropriate message&quot;, () =&amp;gt; {
  // Arrange
  nock(&quot;api&quot;)
    .get(`/products`)
    .reply(404);

  // Act
  const { getByTestId } = render(&amp;lt;ProductsList /&amp;gt;);

  // Assert
  expect(getByTestId(&quot;no-products-message&quot;)).toBeTruthy();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.7 Have very few end-to-end tests that spans the whole system&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Although E2E (end-to-end) usually means UI-only testing with a real browser (See &lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices#-%EF%B8%8F-36-stub-flaky-and-slow-resources-like-backend-apis&quot;&gt;bullet 3.6&lt;/a&gt;), for other they mean tests that stretch the entire system including the real backend. The latter type of tests is highly valuable as they cover integration bugs between frontend and backend that might happen due to a wrong understanding of the exchange schema. They are also an efficient method to discover backend-to-backend integration issues (e.g. Microservice A sends the wrong message to Microservice B) and even to detect deployment failures - there are no backend frameworks for E2E testing that are as friendly and mature as UI frameworks like &lt;a href=&quot;https://www.cypress.io/&quot;&gt;Cypress&lt;/a&gt; and &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. The downside of such tests is the high cost of configuring an environment with so many components, and mostly their brittleness - given 50 microservices, even if one fails then the entire E2E just failed. For that reason, we should use this technique sparingly and probably have 1-10 of those and no more. That said, even a small number of E2E tests are likely to catch the type of issues they are targeted for - deployment &amp;amp; integration faults. It&#39;s advisable to run those over a production-like staging environment&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; UI might invest much in testing its functionality only to realizes very late that the backend returned payload (the data schema the UI has to work with) is very different than expected&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.8 Speed-up E2E tests by reusing login credentials&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; In E2E tests that involve a real backend and rely on a valid user token for API calls, it doesn&#39;t payoff to isolate the test to a level where a user is created and logged-in in every request. Instead, login only once before the tests execution start (i.e. before-all hook), save the token in some local storage and reuse it across requests. This seem to violate one of the core testing principle - keep the test autonomous without resources coupling. While this is a valid worry, in E2E tests performance is a key concern and creating 1-3 API requests before starting each individual tests might lead to horrible execution time. Reusing credentials doesn&#39;t mean the tests have to act on the same user records - if relying on user records (e.g. test user payments history) than make sure to generate those records as part of the test and avoid sharing their existence with other tests. Also remember that the backend can be faked - if your tests are focused on the frontend it might be better to isolate it and stub the backend API (see &lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices#-%EF%B8%8F-36-stub-flaky-and-slow-resources-like-backend-apis&quot;&gt;bullet 3.6&lt;/a&gt;).&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Given 200 test cases and assuming login=100ms = 20 seconds only for logging-in again and again&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Logging-in before-all and not before-each&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let authenticationToken;

// happens before ALL tests run
before(() =&amp;gt; {
  cy.request(&#39;POST&#39;, &#39;http://localhost:3000/login&#39;, {
    username: Cypress.env(&#39;username&#39;),
    password: Cypress.env(&#39;password&#39;),
  })
  .its(&#39;body&#39;)
  .then((responseFromLogin) =&amp;gt; {
    authenticationToken = responseFromLogin.token;
  })
})

// happens before EACH test
beforeEach(setUser =&amp;gt; () {
  cy.visit(&#39;/home&#39;, {
    onBeforeLoad (win) {
      win.localStorage.setItem(&#39;token&#39;, JSON.stringify(authenticationToken))
    },
  })
})

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.9 Have one E2E smoke test that just travels across the site map&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; For production monitoring and development-time sanity check, run a single E2E test that visits all/most of the site pages and ensures no one breaks. This type of test brings a great return on investment as it&#39;s very easy to write and maintain, but it can detect any kind of failure including functional, network and deployment issues. Other styles of smoke and sanity checking are not as reliable and exhaustive - some ops teams just ping the home page (production) or developers who run many integration tests which don&#39;t discover packaging and browser issues. Goes without saying that the smoke test doesn&#39;t replace functional tests rather just aim to serve as a quick smoke detector&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Everything might seem perfect, all tests pass, production health-check is also positive but the Payment component had some packaging issue and only the /Payment route is not rendering&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Smoke travelling across all pages&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When doing smoke testing over all page, should load them all successfully&quot;, () =&amp;gt; {
  // exemplified using Cypress but can be implemented easily
  // using any E2E suite
  cy.visit(&quot;https://mysite.com/home&quot;);
  cy.contains(&quot;Home&quot;);
  cy.contains(&quot;https://mysite.com/Login&quot;);
  cy.contains(&quot;Login&quot;);
  cy.contains(&quot;https://mysite.com/About&quot;);
  cy.contains(&quot;About&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.10 Expose the tests as a live collaborative document&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Besides increasing app reliability, tests bring another attractive opportunity to the table - serve as live app documentation. Since tests inherently speak at a less-technical and product/UX language, using the right tools they can serve as a communication artifact that greatly aligns all the peers - developers and their customers. For example, some frameworks allow expressing the flow and expectations (i.e. tests plan) using a human-readable language so any stakeholder, including product managers, can read, approve and collaborate on the tests which just became the live requirements document. This technique is also being referred to as &#39;acceptance test&#39; as it allows the customer to define his acceptance criteria in plain language. This is &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD (behavior-driven testing)&lt;/a&gt; at its purest form. One of the popular frameworks that enable this is &lt;a href=&quot;https://github.com/cucumber/cucumber-js&quot;&gt;Cucumber which has a JavaScript flavor&lt;/a&gt;, see example below. Another similar yet different opportunity, &lt;a href=&quot;https://storybook.js.org/&quot;&gt;StoryBook&lt;/a&gt;, allows exposing UI components as a graphic catalog where one can walk through the various states of each component (e.g. render a grid w/o filters, render that grid with multiple rows or with none, etc), see how it looks like, and how to trigger that state - this can appeal also to product folks but mostly serves as live doc for developers who consume those components.&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; After investing top resources on testing, it&#39;s just a pity not to leverage this investment and win great value&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Describing tests in human-language using cucumber-js&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cucumber-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples using Cucumber&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this is how one can describe tests using cucumber: plain language that allows anyone to understand and collaborate

Feature: Twitter new tweet

  I want to tweet something in Twitter

  @focus
  Scenario: Tweeting from the home page
    Given I open Twitter home
    Given I click on &quot;New tweet&quot; button
    Given I type &quot;Hello followers!&quot; in the textbox
    Given I click on &quot;Submit&quot; button
    Then I see message &quot;Tweet saved&quot;

&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Visualizing our components, their various states and inputs using Storybook&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20StoryBook-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using StoryBook&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/story-book.jpg&quot; alt=&quot;alt text&quot; title=&quot;Storybook&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 3.11 Detect visual issues with automated tools&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Setup automated tools to capture UI screenshots when changes are presented and detect visual issues like content overlapping or breaking. This ensures that not only the right data is prepared but also the user can conveniently see it. This technique is not widely adopted, our testing mindset leans toward functional tests but it&#39;s the visuals what the user experience and with so many device types it&#39;s very easy to overlook some nasty UI bug. Some free tools can provide the basics - generate and save screenshots for the inspection of human eyes. While this approach might be sufficient for small apps, it&#39;s flawed as any other manual testing that demands human labor anytime something changes. On the other hand, it&#39;s quite challenging to detect UI issues automatically due to the lack of clear definition - this is where the field of &#39;Visual Regression&#39; chime in and solve this puzzle by comparing old UI with the latest changes and detect differences. Some OSS/free tools can provide some of this functionality (e.g. &lt;a href=&quot;https://github.com/BBC-News/wraith&quot;&gt;wraith&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/%5Bhttps://github.com/HuddleEng/PhantomCSS%5D(https://github.com/HuddleEng/PhantomCSS)&quot;&gt;PhantomCSS&lt;/a&gt; but might charge significant setup time. The commercial line of tools (e.g. &lt;a href=&quot;https://applitools.com/&quot;&gt;Applitools&lt;/a&gt;, &lt;a href=&quot;https://percy.io/&quot;&gt;Percy.io&lt;/a&gt;) takes is a step further by smoothing the installation and packing advanced features like management UI, alerting, smart capturing by eliminating &#39;visual noise&#39; (e.g. ads, animations) and even root cause analysis of the DOM/CSS changes that led to the issue&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; How good is a content page that display great content (100% tests passed), loads instantly but half of the content area is hidden?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: A typical visual regression - right content that is served badly&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/amazon-visual-regression.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Amazon page breaks&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Configuring wraith to capture and compare UI snapshots&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Wraith-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Wraith&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;​# Add as many domains as necessary. Key will act as a label​

domains:
  english: &quot;http://www.mysite.com&quot;​

​# Type screen widths below, here are a couple of examples​

screen_widths:

  - 600​
  - 768​
  - 1024​
  - 1280​

​# Type page URL paths below, here are a couple of examples​
paths:
  about:
    path: /about
    selector: &#39;.about&#39;​
  subscribe:
      selector: &#39;.subscribe&#39;​
    path: /subscribe
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Using Applitools to get snapshot comparison and other advanced features&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20AppliTools-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Applitools&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as todoPage from &quot;../page-objects/todo-page&quot;;

describe(&quot;visual validation&quot;, () =&amp;gt; {
  before(() =&amp;gt; todoPage.navigate());
  beforeEach(() =&amp;gt; cy.eyesOpen({ appName: &quot;TAU TodoMVC&quot; }));
  afterEach(() =&amp;gt; cy.eyesClose());

  it(&quot;should look good&quot;, () =&amp;gt; {
    cy.eyesCheckWindow(&quot;empty todo list&quot;);
    todoPage.addTodo(&quot;Clean room&quot;);
    todoPage.addTodo(&quot;Learn javascript&quot;);
    cy.eyesCheckWindow(&quot;two todos&quot;);
    todoPage.toggleTodo(0);
    cy.eyesCheckWindow(&quot;mark as completed&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 4️⃣: Measuring Test Effectiveness&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.1 Get enough coverage for being confident, ~80% seems to be the lucky number&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; The purpose of testing is to get enough confidence for moving fast, obviously the more code is tested the more confident the team can be. Coverage is a measure of how many code lines (and branches, statements, etc) are being reached by the tests. So how much is enough? 10–30% is obviously too low to get any sense about the build correctness, on the other side 100% is very expensive and might shift your focus from the critical paths to the exotic corners of the code. The long answer is that it depends on many factors like the type of application — if you’re building the next generation of Airbus A380 than 100% is a must, for a cartoon pictures website 50% might be too much. Although most of the testing enthusiasts claim that the right coverage threshold is contextual, most of them also mention the number 80% as a thumb of a rule (&lt;a href=&quot;https://martinfowler.com/bliki/TestCoverage.html&quot;&gt;Fowler: “in the upper 80s or 90s”&lt;/a&gt;) that presumably should satisfy most of the applications.&lt;/p&gt; 
&lt;p&gt;Implementation tips: You may want to configure your continuous integration (CI) to have a coverage threshold (&lt;a href=&quot;https://jestjs.io/docs/en/configuration.html#collectcoverage-boolean&quot;&gt;Jest link&lt;/a&gt;) and stop a build that doesn’t stand to this standard (it’s also possible to configure threshold per component, see code example below). On top of this, consider detecting build coverage decrease (when a newly committed code has less coverage) — this will push developers raising or at least preserving the amount of tested code. All that said, coverage is only one measure, a quantitative based one, that is not enough to tell the robustness of your testing. And it can also be fooled as illustrated in the next bullets&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Confidence and numbers go hand in hand, without really knowing that you tested most of the system — there will also be some fear and fear will slow you down&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Example: A typical coverage report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-yoni-goldberg-code-coverage.png&quot; alt=&quot;alt text&quot; title=&quot;A typical coverage report&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Setting up coverage per component (using Jest)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Jest&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-code-coverage2.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Setting up coverage per component (using Jest)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.2 Inspect coverage reports to detect untested areas and other oddities&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Some issues sneak just under the radar and are really hard to find using traditional tools. These are not really bugs but more of surprising application behavior that might have a severe impact. For example, often some code areas are never or rarely being invoked — you thought that the ‘PricingCalculator’ class is always setting the product price but it turns out it is actually never invoked although we have 10000 products in DB and many sales… Code coverage reports help you realize whether the application behaves the way you believe it does. Other than that, it can also highlight which types of code is not tested — being informed that 80% of the code is tested doesn’t tell whether the critical parts are covered. Generating reports is easy — just run your app in production or during testing with coverage tracking and then see colorful reports that highlight how frequent each code area is invoked. If you take your time to glimpse into this data — you might find some gotchas &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; If you don’t know which parts of your code are left un-tested, you don’t know where the issues might come from&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: What’s wrong with this coverage report?&lt;/h3&gt; 
 &lt;p&gt;Based on a real-world scenario where we tracked our application usage in QA and find out interesting login patterns (Hint: the amount of login failures is non-proportional, something is clearly wrong. Finally it turned out that some frontend bug keeps hitting the backend login API)&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png&quot; alt=&quot;alt text&quot; title=&quot;What’s wrong with this coverage report?&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.3 Measure logical coverage using mutation testing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; The Traditional Coverage metric often lies: It may show you 100% code coverage, but none of your functions, even not one, return the right response. How come? it simply measures over which lines of code the test visited, but it doesn’t check if the tests actually tested anything — asserted for the right response. Like someone who’s traveling for business and showing his passport stamps — this doesn’t prove any work done, only that he visited few airports and hotels.&lt;/p&gt; 
&lt;p&gt;Mutation-based testing is here to help by measuring the amount of code that was actually TESTED not just VISITED. &lt;a href=&quot;https://stryker-mutator.io/&quot;&gt;Stryker&lt;/a&gt; is a JavaScript library for mutation testing and the implementation is really neat:&lt;/p&gt; 
&lt;p&gt;(1) it intentionally changes the code and “plants bugs”. For example the code newOrder.price===0 becomes newOrder.price!=0. This “bugs” are called mutations&lt;/p&gt; 
&lt;p&gt;(2) it runs the tests, if all succeed then we have a problem — the tests didn’t serve their purpose of discovering bugs, the mutations are so-called survived. If the tests failed, then great, the mutations were killed.&lt;/p&gt; 
&lt;p&gt;Knowing that all or most of the mutations were killed gives much higher confidence than traditional coverage and the setup time is similar &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll be fooled to believe that 85% coverage means your test will detect bugs in 85% of your code&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: 100% coverage, 0% testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Stryker-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Stryker&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addNewOrder(newOrder) {
  logger.log(`Adding new order ${newOrder}`);
  DB.save(newOrder);
  Mailer.sendMail(newOrder.assignee, `A new order was places ${newOrder}`);

  return { approved: true };
}

it(&quot;Test addNewOrder, don&#39;t use such test names&quot;, () =&amp;gt; {
  addNewOrder({ assignee: &quot;John@mailer.com&quot;, price: 120 });
}); //Triggers 100% code coverage, but it doesn&#39;t check anything
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-20-yoni-goldberg-mutation-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️4.4 Preventing test code issues with Test linters&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; A set of ESLint plugins were built specifically for inspecting the tests code patterns and discover issues. For example, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; will warn when a test is written at the global level (not a son of a describe() statement) or when tests are &lt;a href=&quot;https://mochajs.org/#inclusive-tests&quot;&gt;skipped&lt;/a&gt; which might lead to a false belief that all tests are passing. Similarly, &lt;a href=&quot;https://github.com/jest-community/eslint-plugin-jest&quot;&gt;eslint-plugin-jest&lt;/a&gt; can, for example, warn when a test has no assertions at all (not checking anything)&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Seeing 90% code coverage and 100% green tests will make your face wear a big smile only until you realize that many tests aren’t asserting for anything and many test suites were just skipped. Hopefully, you didn’t deploy anything based on this false observation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: A test case full of errors, luckily all are caught by Linters&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Too short description&quot;, () =&amp;gt; {
  const userToken = userService.getDefaultToken() // *error:no-setup-in-describe, use hooks (sparingly) instead
  it(&quot;Some description&quot;, () =&amp;gt; {});//* error: valid-test-description. Must include the word &quot;Should&quot; + at least 5 words
});

it.skip(&quot;Test name&quot;, () =&amp;gt; {// *error:no-skipped-tests, error:error:no-global-tests. Put tests only under describe or suite
  expect(&quot;somevalue&quot;); // error:no-assert
});

it(&quot;Test name&quot;, () =&amp;gt; {*//error:no-identical-title. Assign unique titles to tests
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 5️⃣: CI and Other Quality Measures&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.1 Enrich your linters and abort builds that have linting issues&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Linters are a free lunch, with 5 min setup you get for free an auto-pilot guarding your code and catching significant issue as you type. Gone are the days where linting was about cosmetics (no semi-colons!). Nowadays, Linters can catch severe issues like errors that are not thrown correctly and losing information. On top of your basic set of rules (like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-standard&quot;&gt;ESLint standard&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;Airbnb style&lt;/a&gt;), consider including some specializing Linters like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-chai-expect&quot;&gt;eslint-plugin-chai-expect&lt;/a&gt; that can discover tests without assertions, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-promise?activeTab=readme&quot;&gt;eslint-plugin-promise&lt;/a&gt; can discover promises with no resolve (your code will never continue), &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security?activeTab=readme&quot;&gt;eslint-plugin-security&lt;/a&gt; which can discover eager regex expressions that might get used for DOS attacks, and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-you-dont-need-lodash-underscore&quot;&gt;eslint-plugin-you-dont-need-lodash-underscore&lt;/a&gt; is capable of alarming when the code uses utility library methods that are part of the V8 core methods like Lodash._map(…) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a rainy day where your production keeps crashing but the logs don’t display the error stack trace. What happened? Your code mistakenly threw a non-error object and the stack trace was lost, a good reason for banging your head against a brick wall. A 5 min linter setup could detect this TYPO and save your day&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👎&lt;/span&gt; Anti-Pattern Example: The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-21-yoni-goldberg-eslint.jpeg&quot; alt=&quot;alt text&quot; title=&quot;The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.2 Shorten the feedback loop with local developer-CI&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Using a CI with shiny quality inspections like testing, linting, vulnerabilities check, etc? Help developers run this pipeline also locally to solicit instant feedback and shorten the &lt;a href=&quot;https://www.gocd.org/2016/03/15/are-you-ready-for-continuous-delivery-part-2-feedback-loops/&quot;&gt;feedback loop&lt;/a&gt;. Why? an efficient testing process constitutes many and iterative loops: (1) try-outs -&amp;gt; (2) feedback -&amp;gt; (3) refactor. The faster the feedback is, the more improvement iterations a developer can perform per-module and perfect the results. On the flip, when the feedback is late to come fewer improvement iterations could be packed into a single day, the team might already move forward to another topic/task/module and might not be up for refining that module.&lt;/p&gt; 
&lt;p&gt;Practically, some CI vendors (Example: &lt;a href=&quot;https://circleci.com/docs/2.0/local-cli/&quot;&gt;CircleCI local CLI&lt;/a&gt;) allow running the pipeline locally. Some commercial tools like &lt;a href=&quot;https://wallabyjs.com/&quot;&gt;wallaby provide highly-valuable &amp;amp; testing insights&lt;/a&gt; as a developer prototype (no affiliation). Alternatively, you may just add npm script to package.json that runs all the quality commands (e.g. test, lint, vulnerabilities) — use tools like &lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot;&gt;concurrently&lt;/a&gt; for parallelization and non-zero exit code if one of the tools failed. Now the developer should just invoke one command — e.g. ‘npm run quality’ — to get instant feedback. Consider also aborting a commit if the quality check failed using a githook (&lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky can help&lt;/a&gt;) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When the quality results arrive the day after the code, testing doesn’t become a fluent part of development rather an after the fact formal artifact&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: npm scripts that perform code quality inspection, all are run in parallel on demand or when a developer is trying to push new code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;scripts&quot;: {
    &quot;inspect:sanity-testing&quot;: &quot;mocha **/**--test.js --grep \&quot;sanity\&quot;&quot;,
    &quot;inspect:lint&quot;: &quot;eslint .&quot;,
    &quot;inspect:vulnerabilities&quot;: &quot;npm audit&quot;,
    &quot;inspect:license&quot;: &quot;license-checker --failOn GPLv2&quot;,
    &quot;inspect:complexity&quot;: &quot;plato .&quot;,

    &quot;inspect:all&quot;: &quot;concurrently -c \&quot;bgBlue.bold,bgMagenta.bold,yellow\&quot; \&quot;npm:inspect:quick-testing\&quot; \&quot;npm:inspect:lint\&quot; \&quot;npm:inspect:vulnerabilities\&quot; \&quot;npm:inspect:license\&quot;&quot;
  },
  &quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;precommit&quot;: &quot;npm run inspect:all&quot;,
      &quot;prepush&quot;: &quot;npm run inspect:all&quot;
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.3 Perform e2e testing over a true production-mirror&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; End to end (e2e) testing are the main challenge of every CI pipeline — creating an identical ephemeral production mirror on the fly with all the related cloud services can be tedious and expensive. Finding the best compromise is your game: &lt;a href=&quot;https://serverless.com/&quot;&gt;Docker-compose&lt;/a&gt; allows crafting isolated dockerized environment with identical containers using a single plain text file but the backing technology (e.g. networking, deployment model) is different from real-world productions. You may combine it with &lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;‘AWS Local’&lt;/a&gt; to work with a stub of the real AWS services. If you went &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless&lt;/a&gt; multiple frameworks like serverless and &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/serverless_app.html&quot;&gt;AWS SAM&lt;/a&gt; allows the local invocation of FaaS code.&lt;/p&gt; 
&lt;p&gt;The huge Kubernetes ecosystem is yet to formalize a standard convenient tool for local and CI-mirroring though many new tools are launched frequently. One approach is running a ‘minimized-Kubernetes’ using tools like &lt;a href=&quot;https://kubernetes.io/docs/setup/minikube/&quot;&gt;Minikube&lt;/a&gt; and &lt;a href=&quot;https://microk8s.io/&quot;&gt;MicroK8s&lt;/a&gt; which resemble the real thing only come with less overhead. Another approach is testing over a remote ‘real-Kubernetes’, some CI providers (e.g. &lt;a href=&quot;https://codefresh.io/&quot;&gt;Codefresh&lt;/a&gt;) has native integration with Kubernetes environment and make it easy to run the CI pipeline over the real thing, others allow custom scripting against a remote Kubernetes. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Using different technologies for production and testing demands maintaining two deployment models and keeps the developers and the ops team separated&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Example: a CI pipeline that generates Kubernetes cluster on the fly &lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; data-href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot;&gt;Credit: Dynamic-environments Kubernetes&lt;/a&gt;)&lt;/h3&gt; 
 &lt;pre name=&quot;38d9&quot; id=&quot;38d9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;deploy:&lt;br&gt;stage: deploy&lt;br&gt;image: registry.gitlab.com/gitlab-examples/kubernetes-deploy&lt;br&gt;script:&lt;br&gt;- ./configureCluster.sh $KUBE_CA_PEM_FILE $KUBE_URL $KUBE_TOKEN&lt;br&gt;- kubectl create ns $NAMESPACE&lt;br&gt;- kubectl create secret -n $NAMESPACE docker-registry gitlab-registry --docker-server=&quot;$CI_REGISTRY&quot; --docker-username=&quot;$CI_REGISTRY_USER&quot; --docker-password=&quot;$CI_REGISTRY_PASSWORD&quot; --docker-email=&quot;$GITLAB_USER_EMAIL&quot;&lt;br&gt;- mkdir .generated&lt;br&gt;- echo &quot;$CI_BUILD_REF_NAME-$CI_BUILD_REF&quot;&lt;br&gt;- sed -e &quot;s/TAG/$CI_BUILD_REF_NAME-$CI_BUILD_REF/g&quot; templates/deals.yaml | tee &quot;.generated/deals.yaml&quot;&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f .generated/deals.yaml&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f templates/my-sock-shop.yaml&lt;br&gt;environment:&lt;br&gt;name: test-for-ci&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.4 Parallelize test execution&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; When done right, testing is your 24/7 friend providing almost instant feedback. In practice, executing 500 CPU-bounded unit test on a single thread can take too long. Luckily, modern test runners and CI platforms (like &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt;, &lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;AVA&lt;/a&gt; and &lt;a href=&quot;https://github.com/yandex/mocha-parallel-tests&quot;&gt;Mocha extensions&lt;/a&gt;) can parallelize the test into multiple processes and achieve significant improvement in feedback time. Some CI vendors do also parallelize tests across containers (!) which shortens the feedback loop even further. Whether locally over multiple processes, or over some cloud CLI using multiple machines — parallelizing demand keeping the tests autonomous as each might run on different processes&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Getting test results 1 hour long after pushing new code, as you already code the next features, is a great recipe for making testing less relevant&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example: Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (&lt;a href=&quot;https://medium.com/dailyjs/javascript-test-runners-benchmark-3a78d4117b4&quot;&gt;Credit: JavaScript Test-Runners Benchmark&lt;/a&gt;)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-24-yonigoldberg-jest-parallel.png&quot; alt=&quot;alt text&quot; title=&quot;Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (Credit: JavaScript Test-Runners Benchmark)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.5 Stay away from legal issues using license and plagiarism check&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Licensing and plagiarism issues are probably not your main concern right now, but why not tick this box as well in 10 minutes? A bunch of npm packages like &lt;a href=&quot;https://www.npmjs.com/package/license-checker&quot;&gt;license check&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/plagiarism-checker&quot;&gt;plagiarism check&lt;/a&gt; (commercial with free plan) can be easily baked into your CI pipeline and inspect for sorrows like dependencies with restrictive licenses or code that was copy-pasted from Stack Overflow and apparently violates some copyrights&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Unintentionally, developers might use packages with inappropriate licenses or copy paste commercial code and run into legal issues&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Doing It Right Example:&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//install license-checker in your CI environment or also locally
npm install -g license-checker

//ask it to scan all licenses and fail with exit code other than 0 if it found unauthorized license. The CI system should catch this failure and stop the build
license-checker --summary --failOn BSD

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-25-nodejs-licsense.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community tools such as &lt;a href=&quot;https://docs.npmjs.com/getting-started/running-a-security-audit&quot;&gt;npm audit&lt;/a&gt;, or commercial tools like &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; (offer also a free community version). Both can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Example: NPM Audit result&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-26-npm-audit-snyk.png&quot; alt=&quot;alt text&quot; title=&quot;NPM Audit result&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.7 Automate dependency updates&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Yarn and npm latest introduction of package-lock.json introduced a serious challenge (the road to hell is paved with good intentions) — by default now, packages are no longer getting updates. Even a team running many fresh deployments with ‘npm install’ &amp;amp; ‘npm update’ won’t get any new updates. This leads to subpar dependent packages versions at best or to vulnerable code at worst. Teams now rely on developers goodwill and memory to manually update the package.json or use tools &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;like ncu&lt;/a&gt; manually. A more reliable way could be to automate the process of getting the most reliable dependency versions, though there are no silver bullet solutions yet there are two possible automation roads:&lt;/p&gt; 
&lt;p&gt;(1) CI can fail builds that have obsolete dependencies — using tools like &lt;a href=&quot;https://docs.npmjs.com/cli/outdated&quot;&gt;‘npm outdated’&lt;/a&gt; or ‘npm-check-updates (ncu)’ . Doing so will enforce developers to update dependencies.&lt;/p&gt; 
&lt;p&gt;(2) Use commercial tools that scan the code and automatically send pull requests with updated dependencies. One interesting question remaining is what should be the dependency update policy — updating on every patch generates too many overhead, updating right when a major is released might point to an unstable version (many packages found vulnerable on the very first days after being released, &lt;a href=&quot;https://nodesource.com/blog/a-high-level-post-mortem-of-the-eslint-scope-security-incident/&quot;&gt;see the&lt;/a&gt; eslint-scope incident).&lt;/p&gt; 
&lt;p&gt;An efficient update policy may allow some ‘vesting period’ — let the code lag behind the @latest for some time and versions before considering the local copy as obsolete (e.g. local version is 1.3.1 and repository version is 1.3.8) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Example: &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;ncu&lt;/a&gt; can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-27-yoni-goldberg-npm.png&quot; alt=&quot;alt text&quot; title=&quot;ncu can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.8 Other, non-Node related, CI tips&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;ol class=&quot;postList&quot;&gt;
 &lt;li name=&quot;e3e4&quot; id=&quot;e3e4&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Use a declarative syntax. This is the only option for most vendors but older versions of Jenkins allows using code or UI&lt;/li&gt;
 &lt;li name=&quot;1fdc&quot; id=&quot;1fdc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Opt for a vendor that has native Docker support&lt;/li&gt;
 &lt;li name=&quot;edcd&quot; id=&quot;edcd&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Fail early, run your fastest tests first. Create a ‘Smoke testing’ step/milestone that groups multiple fast inspections (e.g. linting, unit tests) and provide snappy feedback to the code committer&lt;/li&gt;
 &lt;li name=&quot;0375&quot; id=&quot;0375&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Make it easy to skim-through all build artifacts including test reports, coverage reports, mutation reports, logs, etc&lt;/li&gt;
 &lt;li name=&quot;df82&quot; id=&quot;df82&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Create multiple pipelines/jobs for each event, reuse steps between them. For example, configure a job for feature branch commits and a different one for master PR. Let each reuse logic using shared steps (most vendors provide some mechanism for code reuse)&lt;/li&gt;
 &lt;li name=&quot;19b0&quot; id=&quot;19b0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Never embed secrets in a job declaration, grab them from a secret store or from the job’s configuration&lt;/li&gt;
 &lt;li name=&quot;b70d&quot; id=&quot;b70d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Explicitly bump version in a release build or at least ensure the developer did so&lt;/li&gt;
 &lt;li name=&quot;957c&quot; id=&quot;957c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Build only once and perform all the inspections over the single build artifact (e.g. Docker image)&lt;/li&gt;
 &lt;li name=&quot;339b&quot; id=&quot;339b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Test in an ephemeral environment that doesn’t drift state between builds. Caching node_modules might be the only exception&lt;/li&gt;
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss years of wisdom&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.9 Build matrix: Run the same CI steps using multiple Node versions&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; &lt;strong&gt;Do:&lt;/strong&gt; Quality checking is about serendipity, the more ground you cover the luckier you get in detecting issues early. When developing reusable packages or running a multi-customer production with various configuration and Node versions, the CI must run the pipeline of tests over all the permutations of configurations. For example, assuming we use MySQL for some customers and Postgres for others — some CI vendors support a feature called ‘Matrix’ which allow running the suit of testing against all permutations of MySQL, Postgres and multiple Node version like 8, 9 and 10. This is done using configuration only without any additional effort (assuming you have testing or any other quality checks). Other CIs who doesn’t support Matrix might have extensions or tweaks to allow that &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; So after doing all that hard work of writing testing are we going to let bugs sneak in only because of configuration issues?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;&lt;span&gt;👏&lt;/span&gt; Example: Using Travis (CI vendor) build definition to run the same test over multiple Node versions&lt;/h3&gt; 
 &lt;pre name=&quot;f909&quot; id=&quot;f909&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;language: node_js&lt;br&gt;node_js:&lt;br&gt;  - &quot;7&quot;&lt;br&gt;  - &quot;6&quot;&lt;br&gt;  - &quot;5&quot;&lt;br&gt;  - &quot;4&quot;&lt;br&gt;install:&lt;br&gt;  - npm install&lt;br&gt;script:&lt;br&gt;  - npm run test&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Team&lt;/h1&gt; 
&lt;h2&gt;Yoni Goldberg&lt;/h2&gt; 
&lt;br&gt; 
&lt;img width=&quot;480px&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/yoni-goldberg.jpg&quot;&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Writer&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; I&#39;m an independent consultant who works with Fortune 500 companies and garage startups on polishing their JS &amp;amp; Node.js applications. More than any other topic I&#39;m fascinated by and aims to master the art of testing. I&#39;m also the author of &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices&quot;&gt;Node.js Best Practices&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;📗 Online Course:&lt;/strong&gt; Liked this guide and wish to take your testing skills to the extreme? Consider visiting my comprehensive course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Follow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;🐦 Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/contact-2/&quot;&gt;📞 Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/newsletter//&quot;&gt;✉️ Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Tech reviewer and advisor&lt;/p&gt; 
&lt;p&gt;Took care to revise, improve, lint and polish all the texts&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Concept, design and great advice&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; A savvy frontend developer, CSS expert and emojis freak&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Helps keep this project running, and reviews security related practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; Loves working on Node.js projects and web application security.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://geospatialscott.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1326248?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-stdavis&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AdrienRedon&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5978436?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrien REDON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AdrienRedon&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/NoriSte&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/173663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Magni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-NoriSte&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.joer.im&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47742486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jhonnymoreira.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2177742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jhonny Moreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jhonnymoreira&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Germanika&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8846678?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Germann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Germanika&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ruxandrafediuc.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11021586?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ruxandra Fediuc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-ruxandrafed&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jacklee814&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9951291?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jacklee814&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.petercarrero.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/231727?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Carrero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aloyr&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/huhgawz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/369338?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Huhgawz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-huhgawz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/haakonmb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7099302?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Haakon Borch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-haakonmb&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jaimemendoza.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5395811?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaime Mendoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jaimemendozadev&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/camerondunford&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/840612?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Dunford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-camerondunford&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shadowspawn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15719847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-shadowspawn&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aurelijusrozenas&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3273544?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aurelijus Rožėnas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aurelijusrozenas&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aaronshivers.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/42848750?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aaronshivers&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tomdoes.tech/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8683577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Nagle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-tomanagle&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yvesyao&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7723729?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yves yao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yvesyao&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Userbit&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/34487074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Userbit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Userbit&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glaucialemos.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1631477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Glaucia Lemos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#maintenance-glaucia86&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/koooge&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7419215?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;koooge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-koooge&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/michalbiesiada&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18367606?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-mbiesiad&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://roywalker.me&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/611846?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;roywalker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-roywalker&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dangen-effy.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23185799?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dangen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-dangen-effy&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.to/mbiesiad&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/60202305?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;biesiadamich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-biesiadamich&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tarojsx.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/127009?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yanlin Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-cncolder&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanguino&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2077168?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanguino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-sanguino&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MorganGeek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3721240?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-MorganGeek&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luk4s.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8350985?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Bischof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=lukasbischof&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-lukasbischof&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://juanmaruiz.surge.sh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1837650?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JuanMa Ruiz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-JuanMaRuiz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luisangelorjr.com.br&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22268900?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luís Ângelo Rodrigues Jr.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-luisangelorjr&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jfernandezpe.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12046620?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;José Fernández&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jfernandezpe&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/AlejandroGutierrezB&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56408597?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Gutierrez Barcenilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AlejandroGutierrezB&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jasonandmonte&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30088000?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jasonandmonte&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/otavionetoca&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11263232?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Otavio Araujo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=otavionetoca&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-otavionetoca&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://contributor.pw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5027939?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Ivanov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-contributorpw&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/YeeJone&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20400822?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yiqiao Xu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-YeeJone&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>home-sweet-gnome/dash-to-panel</title>
      <link>https://github.com/home-sweet-gnome/dash-to-panel</link>
      <description>&lt;p&gt;An icon taskbar for the Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/svg/D2P_logo.svg?sanitize=true&quot; width=&quot;620&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/svg/GitHub_logo.svg?sanitize=true&quot; width=&quot;120&quot; style=&quot;margin-left: 4px&quot;&gt; &lt;a href=&quot;https://extensions.gnome.org/extension/1160/dash-to-panel/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/svg/Gnome_logo.svg?sanitize=true&quot; width=&quot;120px&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/dtp-main-p2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;Dash to Panel is an icon taskbar for Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.&lt;/p&gt; 
&lt;p&gt;Beyond that, just about every aspect of the panel is fully customizable. From positioning and scaling panel elements to running indicators to multi-monitor display, to window previews and even intellihide, Dash to Panel has everything you need to make your workspace feel like home.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Customizable appearance&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/gif/customizable.gif&quot; alt=&quot;screenshot&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Hide &amp;amp; show panel elements and set their positions, sizes &amp;amp; colors&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th colspan=&quot;2&quot;&gt;Customizable running indicators&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Metro&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ciliora/Dashes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/metro.png&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/ciliora-dashes.png&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Ciliora&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Squares/Segmented&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/ciliora.png&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/squares-segments.png&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Dashes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Dots/Solid&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/dashes.png&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/dots-solid.png&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;Set position, style, weight &amp;amp; color of running indicators to easily and quickly identify focused and unfocused applications&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Live Previews on Hover&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/gif/previews.gif&quot; alt=&quot;screenshot&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Hover over the launcher icon for an open application to get a live window preview&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Launch by Number&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/indicators-num.png.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Optionally launch your favorite applications via keyboard&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Panel Intellihide&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/gif/Intellihide.gif&quot; alt=&quot;Intellihide&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Hide and reveal the panel according to your set preferences&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Additional Features&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Feature Implemented&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Add &quot;Show Desktop&quot; button to panel&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Isolate running apps by workspaces and/or monitors&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Custom click behaviors (launch new window, cycle open windows, minimize, etc)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Integrate native Gnome appMenu into right-click secondary menu&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Multi-monitor support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Dynamic transparency&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Ungroup application windows&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Export and import settings&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/done.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;To install the most recent official release: &lt;a href=&quot;https://extensions.gnome.org/extension/1160/dash-to-panel/&quot;&gt;Visit Dash-to-Panel at GNOME Extensions&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To install a development version from source, please see the &lt;a href=&quot;https://github.com/jderose9/dash-to-panel/wiki/Installation&quot;&gt;Installation wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;How do I customize the panel? &lt;a href=&quot;https://github.com/home-sweet-gnome/dash-to-panel/wiki/Enable-and-Customize#customize-it&quot;&gt;See the Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;How do I embed my bottom left notification drawer into the panel like a system tray? &lt;a href=&quot;https://extensions.gnome.org/extension/2311/topicons-plus&quot;&gt;Top Icons Plus&lt;/a&gt; or &lt;a href=&quot;https://extensions.gnome.org/extension/615/appindicator-support&quot;&gt;(K)StatusNotifierItem/AppIndicator Support&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;How do I add a traditional start menu? &lt;a href=&quot;https://extensions.gnome.org/extension/3628/arcmenu/&quot;&gt;Arc Menu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;How do I disable the hot corner? &lt;a href=&quot;https://extensions.gnome.org/extension/118/no-topleft-hot-corner&quot;&gt;No Topleft Hot Corner&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;How do I move the notifications to somewhere other than the top center? &lt;a href=&quot;https://extensions.gnome.org/extension/708/panel-osd&quot;&gt;Panel OSD&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;How do I display Minimize &amp;amp; Maximize buttons? In the Tweak Tool application, turn on &lt;code&gt;Windows &amp;gt; Titlebar Buttons &amp;gt; Minimize &amp;amp; Maximize&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How do I reset the extension to its default settings? &lt;code&gt;dconf reset -f /org/gnome/shell/extensions/dash-to-panel/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;While this extension works well with most popular Gnome Shell themes, the following themes are known to have explicitly added custom styles for this extension:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zagortenay333/ciliora-tertia-shell&quot;&gt;Ciliora Tertia&lt;/a&gt; / &lt;a href=&quot;https://github.com/zagortenay333/ciliora-secunda-shell&quot;&gt;Ciliora Secunda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lassekongo83/plano-theme&quot;&gt;Plano&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;This extension has been tested with Gnome 3.18+.&lt;/p&gt; 
&lt;p&gt;This extension manipulates the Gnome Main Panel, aka Top Bar. So, most other extensions which operate on the top bar should be compatible.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Volunteers needed!&lt;/h3&gt; 
&lt;p&gt;This extension could be even better with your help! Any items in the issue tracker labelled &lt;code&gt;help wanted&lt;/code&gt; or &lt;code&gt;good first issue&lt;/code&gt; are up for grabs. For more info, see the &lt;a href=&quot;https://github.com/jderose9/dash-to-panel/wiki/Contributing&quot;&gt;Contributing wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Credits&lt;/h3&gt; 
&lt;p&gt;This extension is developed and maintained by &lt;a href=&quot;https://github.com/jderose9&quot;&gt;@jderose9&lt;/a&gt; and &lt;a href=&quot;https://github.com/charlesg99&quot;&gt;@charlesg99&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Significant portions of code in this extension were derived from &lt;a href=&quot;https://micheleg.github.io/dash-to-dock/index.html&quot;&gt;Dash-to-Dock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additional credits: This extension leverages the work for &lt;a href=&quot;https://github.com/ZorinOS/zorin-taskbar&quot;&gt;ZorinOS Taskbar&lt;/a&gt; (used in &lt;a href=&quot;https://zorinos.com/&quot;&gt;ZorinOS&lt;/a&gt;) to show window previews and allow the dash from &lt;a href=&quot;https://micheleg.github.io/dash-to-dock/index.html&quot;&gt;Dash-to-Dock&lt;/a&gt; to be embedded in the Gnome main panel. Code to set anchor position taken from &lt;a href=&quot;https://github.com/Thoma5/gnome-shell-extension-bottompanel&quot;&gt;Thoma5/gnome-shell-extension-bottompanel&lt;/a&gt;. Pattern for moving panel contents based on &lt;a href=&quot;http://frippery.org/extensions/&quot;&gt;Frippery Move Clock&lt;/a&gt; by R M Yorston. Ideas for recursing child actors and assigning inline styles are based on code from the extension &lt;a href=&quot;https://bitbucket.org/mathematicalcoffee/status-area-horizontal-spacing-gnome-shell-extension&quot;&gt;StatusAreaHorizontalSpacing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h4&gt;Thanks to the following people for contributing via pull requests:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;@franglais125 for launching apps by number (w/ overlay), bug fixes, and issue support&lt;/li&gt; 
 &lt;li&gt;@LinxGem33 and @sbarrett322 for artwork, logos, screenshots and design effort&lt;/li&gt; 
 &lt;li&gt;@dziku1337 for peek mode in window previews&lt;/li&gt; 
 &lt;li&gt;@robrobinbin for configuring appMenu on/off in the panel&lt;/li&gt; 
 &lt;li&gt;@MartinPL for toggling favorites on/off in panel&lt;/li&gt; 
 &lt;li&gt;@jackwickham for thumbnail middle and right click actions&lt;/li&gt; 
 &lt;li&gt;@abakkk for centering the taskbar icons in the panel, and animated taskbar hovering&lt;/li&gt; 
 &lt;li&gt;@quasoft for changing of font weight of ungrouped application titles&lt;/li&gt; 
 &lt;li&gt;@jordanribera for using icon&#39;s dominant color as running indicator color&lt;/li&gt; 
 &lt;li&gt;@tper0700 for dynamically building context menu based on system capabilities&lt;/li&gt; 
 &lt;li&gt;@levacic for configurable minimized application title font color&lt;/li&gt; 
 &lt;li&gt;@l3nn4rt for toggling workspace switch popup&lt;/li&gt; 
 &lt;li&gt;@hlechner for adjustable show desktop line color and window preview icon size&lt;/li&gt; 
 &lt;li&gt;@ArtyomZorin for animated urgent icons&lt;/li&gt; 
 &lt;li&gt;@jvpessoa10 for additional click window cycle options&lt;/li&gt; 
 &lt;li&gt;@marksvc for assigning percent of display for panel length&lt;/li&gt; 
 &lt;li&gt;@philippun1 for GNOME 40 support &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bug Fixes:&lt;/h4&gt; 
&lt;p&gt;@imrvelj, @Teslator, @bil-elmoussaoui, @brandon-schumann, @sw9, @rockon999 , @lexruee, @3v1n0, @freeroot, @moqmar, @ArtyomZorin, @lkc0987, @saibotk, @vanillajonathan, @Zkdc, @leebickmtu, @l3nn4rt, @Melix19, @Aikatsui, @melix99, @kyrillzorin, @oneshadab, , @CorvetteCole&lt;/p&gt; 
&lt;h4&gt;Documentation Improvements:&lt;/h4&gt; 
&lt;p&gt;@BoQsc, @zakkak, @dandv&lt;/p&gt; 
&lt;h4&gt;Translations:&lt;/h4&gt; 
&lt;p&gt;@frnogueira / @victorwpbastos (pt_BR), @zeten30 (cs), @franglais125 / @calotam / @oeramirez (es), @LaurentTreguier / @SolarLiner (fr), @elsieholmes (uk), @hosiet (zh_CN), @jonnius / @linuxr01 (de), @urbalazs / @pappfer (hu), @crayxt (kk), @pkomur / @MartinPL / @alex4401 (pl), @AlexGluck / @GoodNike / @rjapolov / @vantu5z (ru), @sicklylife-jp / @ryonakano (ja), @oltulu / @TeknoMobil / @daenney (tr), @sbadux / @kowalski7cc / @l3nn4rt (it), @OriginCode / @pan93412 (zh_TW), @ojn (sv), @frandieguez (gl)&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;License &amp;amp; Terms &lt;img src=&quot;https://raw.githubusercontent.com/home-sweet-gnome/dash-to-panel/master/media/design/png/copyleft-16.png&quot; alt=&quot;&quot;&gt;&lt;/h3&gt; 
&lt;p&gt;Dash to Panel is available under the terms of the GPL-v2 or later license See &lt;a href=&quot;https://github.com/jderose9/dash-to-panel/raw/master/COPYING&quot;&gt;&lt;code&gt;COPYING&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/Language-JavaScript-yellow.svg?sanitize=true&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Licence-GPL--2.0-blue.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
