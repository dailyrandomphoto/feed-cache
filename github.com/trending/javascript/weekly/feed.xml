<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 03 Feb 2021 01:57:37 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>dushixiang/next-terminal</title>
      <link>https://github.com/dushixiang/next-terminal</link>
      <description>&lt;p&gt;Next Terminal是使用Golang和React开发的一款HTML5的远程桌面网关，具有小巧、易安装、易使用、资源占用小的特点，支持RDP、SSH、VNC和Telnet协议的连接和管理。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next Terminal&lt;/h1&gt; 
&lt;p&gt;你的下一个终端。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/dushixiang/next-terminal/workflows/Docker%20image/badge.svg?branch=master&quot; alt=&quot;Docker image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;快速了解&lt;/h2&gt; 
&lt;p&gt;Next Terminal是使用Golang和React开发的一款HTML5的远程桌面网关，具有小巧、易安装、易使用、资源占用小的特点，支持RDP、SSH、VNC和Telnet协议的连接和管理。&lt;/p&gt; 
&lt;p&gt;Next Terminal基于 &lt;a href=&quot;https://guacamole.apache.org/&quot;&gt;Apache Guacamole&lt;/a&gt; 开发，使用到了guacd服务。&lt;/p&gt; 
&lt;p&gt;目前支持的功能有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;授权凭证管理&lt;/li&gt; 
 &lt;li&gt;资产管理（支持RDP、SSH、VNC、TELNET协议）&lt;/li&gt; 
 &lt;li&gt;指令管理&lt;/li&gt; 
 &lt;li&gt;批量执行命令&lt;/li&gt; 
 &lt;li&gt;在线会话管理（监控、强制断开）&lt;/li&gt; 
 &lt;li&gt;离线会话管理（查看录屏）&lt;/li&gt; 
 &lt;li&gt;双因素认证 感谢 &lt;a href=&quot;https://github.com/naiba&quot;&gt;naiba&lt;/a&gt; 贡献&lt;/li&gt; 
 &lt;li&gt;资产标签&lt;/li&gt; 
 &lt;li&gt;资产授权&lt;/li&gt; 
 &lt;li&gt;用户分组&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;在线体验&lt;/h2&gt; 
&lt;p&gt;https://next-terminal.typesafe.cn/&lt;/p&gt; 
&lt;p&gt;test/test&lt;/p&gt; 
&lt;h2&gt;快速安装&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/docs/install-docker.md&quot;&gt;使用docker安装&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/docs/install-naive.md&quot;&gt;原生安装&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/docs/faq.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;默认账号密码为 admin/admin&lt;/p&gt; 
&lt;h2&gt;相关截图&lt;/h2&gt; 
&lt;p&gt;资源占用截图&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/docker_stats.png&quot; alt=&quot;资源占用截图&quot;&gt;&lt;/p&gt; 
&lt;p&gt;资产管理&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/assets.png&quot; alt=&quot;资产&quot;&gt;&lt;/p&gt; 
&lt;p&gt;rdp&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/rdp.png&quot; alt=&quot;rdp&quot;&gt;&lt;/p&gt; 
&lt;p&gt;vnc&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/vnc.png&quot; alt=&quot;vnc&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ssh&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/ssh.png&quot; alt=&quot;ssh&quot;&gt;&lt;/p&gt; 
&lt;p&gt;批量执行命令&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dushixiang/next-terminal/master/screenshot/command.png&quot; alt=&quot;批量执行命令&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;联系方式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;邮箱 helloworld1024@foxmail.com&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;QQ群 938145268&lt;/p&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Telegram&lt;/p&gt; &lt;p&gt;https://t.me/next_terminal&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>chartjs/Chart.js</title>
      <link>https://github.com/chartjs/Chart.js</link>
      <description>&lt;p&gt;Simple HTML5 Charts using the &lt;canvas&gt; tag&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Currently, there are two versions of the library (2.9.4 and 3.x.x). Version 2 is the latest stable version while 3 is the next (currently beta) version. As such bear the following in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current docs points to version 2.9.4&lt;/li&gt; 
 &lt;li&gt;Npm/CDN/etc point to version 2.9.4 (unless you explicitly set newer version, e.g. npm next)&lt;/li&gt; 
 &lt;li&gt;Source currently points to 3.x.x version. 2.9.4 source is available &lt;a href=&quot;https://github.com/chartjs/Chart.js/tree/2.9&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docs for version 3.x.x are available &lt;a href=&quot;https://www.chartjs.org/docs/master/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/general/&quot;&gt;General&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/configuration/&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/charts/&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/axes/&quot;&gt;Axes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/developers/&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;Popular Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/samples/&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Instructions on building and testing Chart.js can be found in &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing/#building-and-testing&quot;&gt;the documentation&lt;/a&gt;. Before submitting an issue or a pull request, please take a moment to look over the &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing/&quot;&gt;contributing guidelines&lt;/a&gt; first. For support, please post questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/chartjs&quot;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;chartjs&lt;/code&gt; tag.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Chart.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GitHub Docs 
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href=&quot;https://docs.github.com&quot;&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub&#39;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;In this article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#readmes&quot;&gt;READMEs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Start contributing right now:&lt;/h3&gt; 
&lt;p&gt;We accept a lot of &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md/#types-of-contributions-memo&quot;&gt;different contributions&lt;/a&gt;, including some that don&#39;t require you to write a single line of code.&lt;/p&gt; 
&lt;h4&gt;Click &lt;strong&gt;make a contribution&lt;/strong&gt; from docs&lt;/h4&gt; 
&lt;p&gt;As you&#39;re using GitHub Docs, you may find something in an article that you&#39;d like to add to, update, or change. Click on &lt;strong&gt;make a contribution&lt;/strong&gt; to navigate directly to that article in the codebase, so that you can begin making your contribution.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Open an issue&lt;/h4&gt; 
&lt;p&gt;If you&#39;ve found a problem, you can open an issue using a &lt;a href=&quot;https://github.com/github/docs/issues/new/choose&quot;&gt;template&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Solve an issue&lt;/h4&gt; 
&lt;p&gt;If you have a solution to one of the open issues, you will need to fork the repository and submit a pull request using the &lt;a href=&quot;https://github.com/github/docs/blob/main/CONTRIBUTING.md#pull-request-template&quot;&gt;template&lt;/a&gt; that is visible automatically in the pull request body. For more details about this process, please check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Join us in discussions&lt;/h4&gt; 
&lt;p&gt;We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you&#39;d like help troubleshooting a PR, have a great new idea, or want to share something amazing you&#39;ve learned in our docs, join us in &lt;a href=&quot;https://github.com/github/docs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;And that&#39;s it!&lt;/h4&gt; 
&lt;p&gt;That&#39;s how you can get started easily as a member of the GitHub Documentation community. :sparkles:&lt;/p&gt; 
&lt;p&gt;If you want to know more, or you&#39;re making a more complex contribution, check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few more things to know when you&#39;re getting started with this repo:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you&#39;re having trouble with your GitHub account, contact &lt;a href=&quot;https://support.github.com/contact&quot;&gt;Support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We do not accept pull requests for translated content - see &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you&#39;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/README.md&quot;&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md&quot;&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/rest/README.md&quot;&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/contributing/README.md&quot;&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/README.md&quot;&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md&quot;&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/variables/README.md&quot;&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/liquid-tags/README.md&quot;&gt;includes/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/README.md&quot;&gt;includes/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/javascripts/README.md&quot;&gt;javascripts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/layouts/README.md&quot;&gt;layouts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/lib/liquid-tags/README.md&quot;&gt;lib/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/middleware/README.md&quot;&gt;middleware/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/script/README.md&quot;&gt;script/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/stylesheets/README.md&quot;&gt;stylesheets/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE&quot;&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step by step guide to learn JavaScript programming language in 30 days. This challenge may take up to 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------------------------------: | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; January, 2020
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matt8707/hass-config</title>
      <link>https://github.com/matt8707/hass-config</link>
      <description>&lt;p&gt;A different take on designing a Lovelace UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant Configuration&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant Core&lt;/a&gt; in &lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; on a &lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Synology DiskStation DS918+&lt;/a&gt;. My use case is a &lt;a href=&quot;https://www.durable.eu/information-and-presentation/tablet-holder/wall-mounted-tablet-holder/tablet-holder-wall.html&quot;&gt;wall mounted&lt;/a&gt; tablet [&lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;Samsung 10.1&quot;&lt;/a&gt;] displaying Home Assistant in &lt;a href=&quot;https://www.ozerov.de/fully-kiosk-browser/&quot;&gt;Fully Kiosk Browser&lt;/a&gt; and on desktop using &lt;a href=&quot;https://applicationize.me/&quot;&gt;applicationize&lt;/a&gt; (chrome). My configuration is exposed to HomeKit with Apple Tv acting as a hub for remote connection. I also support &lt;a href=&quot;https://www.nabucasa.com/&quot;&gt;Nabu Casa&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you like anything here, Be sure to :star2: my repo!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/screenshot.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A different take on designing a &lt;a href=&quot;https://www.home-assistant.io/lovelace/&quot;&gt;Lovelace UI&lt;/a&gt; using a &lt;a href=&quot;https://www.home-assistant.io/lovelace/picture-elements/&quot;&gt;Picture Elements Card&lt;/a&gt; in &lt;a href=&quot;https://www.home-assistant.io/lovelace/dashboards-and-views#panel&quot;&gt;panel mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Achieving a less cluttered interface by displaying &lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#popup&quot;&gt;more information&lt;/a&gt; on a &lt;a href=&quot;https://www.home-assistant.io/lovelace/picture-elements/#hold_action&quot;&gt;long press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading wheel for slow responding entities such as booting a computer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#media_player&quot;&gt;Adding sounds&lt;/a&gt; to the UI using automations listening for events&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/css/css3_animations.asp&quot;&gt;CSS Animations&lt;/a&gt; based on state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/animations.gif&quot; alt=&quot;animations&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;The sidebar&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.home-assistant.io/lovelace/markdown/&quot;&gt;Markdown Card&lt;/a&gt; inside a &lt;a href=&quot;https://www.home-assistant.io/lovelace/picture-elements/&quot;&gt;Picture Elements Card&lt;/a&gt; to create dynamic &lt;a href=&quot;https://www.home-assistant.io/docs/configuration/templating/&quot;&gt;templates&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Time and date with greeting based on time of day&lt;/li&gt; 
 &lt;li&gt;Lights and switches that are on, using natural language&lt;/li&gt; 
 &lt;li&gt;Temperature with emoji based on weather conditions&lt;/li&gt; 
 &lt;li&gt;Important calendar information&lt;/li&gt; 
 &lt;li&gt;Other conditional alerts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sidebar footer&lt;/h3&gt; 
&lt;p&gt;The three icons at the bottom in order&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Card to control &lt;a href=&quot;https://www.mi-store.se/en/smart-homes/robot-vacuum-cleaners/xiaomi-robot-vacuum-2-roborock&quot;&gt;robot vacuum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitor &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt;, &lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;tablet&lt;/a&gt; and &lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Network Attached Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lists available HACS updates and release notes for Home Assistant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info.png&quot; alt=&quot;info&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Media&lt;/h3&gt; 
&lt;p&gt;Conditionally displaying media player controls based on last active device such as &lt;a href=&quot;https://www.home-assistant.io/integrations/apple_tv/&quot;&gt;Apple TV&lt;/a&gt;, &lt;a href=&quot;https://www.home-assistant.io/integrations/ps4/&quot;&gt;Playstation 4&lt;/a&gt;, &lt;a href=&quot;https://www.home-assistant.io/integrations/cast/&quot;&gt;Google Nest Mini&lt;/a&gt;. If nothing is active for 15 minutes then a poster of last downloaded movie/episode is shown (&lt;a href=&quot;https://github.com/Radarr/Radarr&quot;&gt;Radarr&lt;/a&gt;/&lt;a href=&quot;https://github.com/Sonarr/Sonarr&quot;&gt;Sonarr&lt;/a&gt;). Swipe to reveal other than last active media players.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/media.gif&quot; alt=&quot;media&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Lights and sensors&lt;/h3&gt; 
&lt;p&gt;All &lt;a href=&quot;https://www2.meethue.com&quot;&gt;Philips Hue&lt;/a&gt; lights with &lt;a href=&quot;https://www2.meethue.com/en-gb/p/hue-motion-sensor/8718696743171&quot;&gt;sensors&lt;/a&gt; in hallway, bathroom and walk-in closet.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Injecting current lamp color to only parts of an icon&lt;/li&gt; 
 &lt;li&gt;Vertical dimmer for touch&lt;/li&gt; 
 &lt;li&gt;Brightness in a dynamic circle&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/light.gif&quot; alt=&quot;light&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Switches&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.switch-bot.com/bot&quot;&gt;SwitchBot&lt;/a&gt; to cold boot computer with a raspberry as a &lt;a href=&quot;https://github.com/OpenWonderLabs/python-host&quot;&gt;hub&lt;/a&gt;. Numerous shell commands to monitor and control macOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; to control studio monitors (speakers) with automations to apply &lt;a href=&quot;https://www.sonarworks.com/reference&quot;&gt;EQ calibration&lt;/a&gt; and volume control through AppleScript&lt;/li&gt; 
 &lt;li&gt;Control a pedestal fan, using &lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; and hue motion sensor temperature data to automate on summer nights&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ibroadlink.com/products/ir+rf&quot;&gt;Broadlink&lt;/a&gt; to control fan and air purifier with IR and &lt;a href=&quot;https://www.gosund.com/download/smart_plug/127.html&quot;&gt;Gosund Smart Wi-Fi Plug&lt;/a&gt; for power/state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info_light.png&quot; alt=&quot;info_light&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Custom icons&lt;/h3&gt; 
&lt;p&gt;I made some custom icons located in &lt;code&gt;www/custom_icons.js&lt;/code&gt;. If you want to make your own I recommend reading the &lt;a href=&quot;https://material.io/design/iconography/system-icons.html#design-principles&quot;&gt;material design principles&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/custom_icons.png&quot; alt=&quot;custom_icons&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/vacuum.png&quot; alt=&quot;vacuum&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/misc.png&quot; alt=&quot;misc&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/tracker.png&quot; alt=&quot;tracker&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Home Assistant Community Topic&lt;/strong&gt;&lt;br&gt; &lt;a href=&quot;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&quot;&gt;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alura-challenges/aluraquiz-base</title>
      <link>https://github.com/alura-challenges/aluraquiz-base</link>
      <description>&lt;p&gt;Projeto construido durante a Imersão React edição NextJS da Alura!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AluraQuiz Base&lt;/h1&gt; 
&lt;p&gt;Seja bem vindo ao projeto base do AluraQuiz!!! Passos fundamentais:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Marque esse projeto com uma estrela&lt;/li&gt; 
 &lt;li&gt;Siga as instruções das aulas e conteúdo extra da Imersão React Next.js&lt;/li&gt; 
 &lt;li&gt;Faça o deploy na Vercel e compartilhe&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alura-challenges/aluraquiz-base/main/_docs/aluraquiz-base.png&quot; alt=&quot;Capa do Projeto&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Como colocar o meu projeto na vitrine da imersão?&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://aluraquiz-base.alura-challenges.vercel.app/contribuidores&quot;&gt;Vitrine da Imersão&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alura-challenges/aluraquiz-base/main/CONTRIBUTING.md&quot;&gt;Siga os passos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Onde está o Layout base?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.figma.com/file/cg1MIzSRRss8ggpypQbmdD/AluraQuiz?node-id=0%3A1&quot;&gt;Link&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Como pegar cores tema diferentes para minha app?&lt;/h2&gt; 
&lt;p&gt;Você pode dar uma olhada nesse link e separar uma palheta que combine com sua imagem de background :) :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://material-ui.com/customization/color/#playground&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contribuidores&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/alura-challenges/aluraquiz-base/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/licence-MIT-blue.svg?style=flat-square&quot; alt=&quot;licence mit&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alura-challenges/aluraquiz-base/main/#contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-13-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>scutan90/DeepLearning-500-questions</title>
      <link>https://github.com/scutan90/DeepLearning-500-questions</link>
      <description>&lt;p&gt;深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 全书分为18个章节，50余万字。由于水平有限，书中不妥之处恳请广大读者批评指正。 未完待续............ 如有意合作，联系scutjy2015@163.com 版权所有，违权必究 Tan 2018.06&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;京东预售链接：https://item.jd.com/12785031.html&lt;/h1&gt; 
&lt;h2&gt;深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著&lt;/h2&gt; 
&lt;h1&gt;内容简介&lt;/h1&gt; 
&lt;p&gt;本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。&lt;/p&gt; 
&lt;p&gt;本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。&lt;/p&gt; 
&lt;h1&gt;作者简介&lt;/h1&gt; 
&lt;p&gt;谈继勇 主编&lt;/p&gt; 
&lt;p&gt;南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。&lt;/p&gt; 
&lt;p&gt;郭子钊 副主编&lt;/p&gt; 
&lt;p&gt;四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。&lt;/p&gt; 
&lt;p&gt;李剑 副主编&lt;/p&gt; 
&lt;p&gt;同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。&lt;/p&gt; 
&lt;p&gt;佃松宜 副主编&lt;/p&gt; 
&lt;p&gt;日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。&lt;/p&gt; 
&lt;p&gt;王晋东 特邀编委&lt;/p&gt; 
&lt;p&gt;中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。&lt;/p&gt; 
&lt;p&gt;王超锋&lt;/p&gt; 
&lt;p&gt;上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;郭晓锋&lt;/p&gt; 
&lt;p&gt;中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。&lt;/p&gt; 
&lt;p&gt;黄伟&lt;/p&gt; 
&lt;p&gt;华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;陈方杰（Amusi）&lt;/p&gt; 
&lt;p&gt;上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。&lt;/p&gt; 
&lt;p&gt;李元伟&lt;/p&gt; 
&lt;p&gt;国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。&lt;/p&gt; 
&lt;p&gt;陈琳&lt;/p&gt; 
&lt;p&gt;北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。&lt;/p&gt; 
&lt;h1&gt;目录&lt;/h1&gt; 
&lt;p&gt;第1章 数学基础 1&lt;/p&gt; 
&lt;p&gt;1.1 向量和矩阵 1&lt;/p&gt; 
&lt;p&gt;1.1.1 标量、向量、矩阵和张量 1&lt;/p&gt; 
&lt;p&gt;1.1.2 张量与矩阵的区别 2&lt;/p&gt; 
&lt;p&gt;1.1.3 矩阵和向量相乘的结果 2&lt;/p&gt; 
&lt;p&gt;1.1.4 向量和矩阵的范数归纳 2&lt;/p&gt; 
&lt;p&gt;1.1.5 判断一个矩阵是否为正定矩阵 4&lt;/p&gt; 
&lt;p&gt;1.2 导数和偏导数 5&lt;/p&gt; 
&lt;p&gt;1.2.1 导数偏导计算 5&lt;/p&gt; 
&lt;p&gt;1.2.2 导数和偏导数的区别 6&lt;/p&gt; 
&lt;p&gt;1.3 特征值和特征向量 6&lt;/p&gt; 
&lt;p&gt;1.3.1 特征值分解 6&lt;/p&gt; 
&lt;p&gt;1.3.2 奇异值和特征值的关系 6&lt;/p&gt; 
&lt;p&gt;1.4 概率分布与随机变量 7&lt;/p&gt; 
&lt;p&gt;1.4.1 机器学习为什么要使用概率 7&lt;/p&gt; 
&lt;p&gt;1.4.2 变量与随机变量的区别 7&lt;/p&gt; 
&lt;p&gt;1.4.3 随机变量与概率分布的联系 8&lt;/p&gt; 
&lt;p&gt;1.4.4 离散型随机变量和概率质量函数 8&lt;/p&gt; 
&lt;p&gt;1.4.5 连续型随机变量和概率密度函数 8&lt;/p&gt; 
&lt;p&gt;1.4.6 举例理解条件概率 9&lt;/p&gt; 
&lt;p&gt;1.4.7 联合概率与边缘概率的区别和联系 9&lt;/p&gt; 
&lt;p&gt;1.4.8 条件概率的链式法则 10&lt;/p&gt; 
&lt;p&gt;1.4.9 独立性和条件独立性 10&lt;/p&gt; 
&lt;p&gt;1.5 常见概率分布 11&lt;/p&gt; 
&lt;p&gt;1.5.1 伯努利分布 11&lt;/p&gt; 
&lt;p&gt;1.5.2 高斯分布 11&lt;/p&gt; 
&lt;p&gt;1.5.3 何时采用正态分布 12&lt;/p&gt; 
&lt;p&gt;1.5.4 指数分布 12&lt;/p&gt; 
&lt;p&gt;1.5.5 Laplace分布 13&lt;/p&gt; 
&lt;p&gt;1.5.6 Dirac分布和经验分布 13&lt;/p&gt; 
&lt;p&gt;1.6 期望、方差、协方差、相关系数 13&lt;/p&gt; 
&lt;p&gt;1.6.1 期望 13&lt;/p&gt; 
&lt;p&gt;1.6.2 方差 14&lt;/p&gt; 
&lt;p&gt;1.6.3 协方差 14&lt;/p&gt; 
&lt;p&gt;1.6.4 相关系数 15&lt;/p&gt; 
&lt;p&gt;第2章 机器学习基础 16&lt;/p&gt; 
&lt;p&gt;2.1 基本概念 16&lt;/p&gt; 
&lt;p&gt;2.1.1 大话机器学习本质 16&lt;/p&gt; 
&lt;p&gt;2.1.2 什么是神经网络 16&lt;/p&gt; 
&lt;p&gt;2.1.3 各种常见算法图示 17&lt;/p&gt; 
&lt;p&gt;2.1.4 计算图的导数计算 17&lt;/p&gt; 
&lt;p&gt;2.1.5 理解局部最优与全局最优 18&lt;/p&gt; 
&lt;p&gt;2.1.6 大数据与深度学习之间的关系 19&lt;/p&gt; 
&lt;p&gt;2.2 机器学习的学习方式 20&lt;/p&gt; 
&lt;p&gt;2.2.1 监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.2 非监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.3 半监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.4 弱监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.5 监督学习模型的搭建步骤 21&lt;/p&gt; 
&lt;p&gt;2.3 分类算法 22&lt;/p&gt; 
&lt;p&gt;2.3.1 常用分类算法的优缺点 22&lt;/p&gt; 
&lt;p&gt;2.3.2 分类算法的评估方法 23&lt;/p&gt; 
&lt;p&gt;2.3.3 正确率能否很好地评估分类算法 25&lt;/p&gt; 
&lt;p&gt;2.3.4 什么样的分类器是最好的 26&lt;/p&gt; 
&lt;p&gt;2.4 逻辑回归 26&lt;/p&gt; 
&lt;p&gt;2.4.1 回归的种类 26&lt;/p&gt; 
&lt;p&gt;2.4.2 逻辑回归适用性 27&lt;/p&gt; 
&lt;p&gt;2.4.3 逻辑回归与朴素贝叶斯的区别 27&lt;/p&gt; 
&lt;p&gt;2.4.4 线性回归与逻辑回归的区别 27&lt;/p&gt; 
&lt;p&gt;2.5 代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.1 为什么需要代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.2 代价函数作用原理 28&lt;/p&gt; 
&lt;p&gt;2.5.3 常见代价函数 30&lt;/p&gt; 
&lt;p&gt;2.5.4 为什么代价函数要非负 31&lt;/p&gt; 
&lt;p&gt;2.5.5 为什么用交叉熵代替二次代价函数 31&lt;/p&gt; 
&lt;p&gt;2.6 损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.1 什么是损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.2 常见的损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.3 逻辑回归为什么使用对数损失函数 34&lt;/p&gt; 
&lt;p&gt;2.6.4 对数损失函数如何度量损失 34&lt;/p&gt; 
&lt;p&gt;2.7 梯度下降法 35&lt;/p&gt; 
&lt;p&gt;2.7.1 梯度下降法的作用 36&lt;/p&gt; 
&lt;p&gt;2.7.2 梯度下降法的直观理解 36&lt;/p&gt; 
&lt;p&gt;2.7.3 梯度下降法算法描述 37&lt;/p&gt; 
&lt;p&gt;2.7.4 梯度下降法的缺点 38&lt;/p&gt; 
&lt;p&gt;2.7.5 如何对梯度下降法进行调优 38&lt;/p&gt; 
&lt;p&gt;2.7.6 随机梯度下降和批量梯度下降的区别 38&lt;/p&gt; 
&lt;p&gt;2.7.7 各种梯度下降法性能比较 40&lt;/p&gt; 
&lt;p&gt;2.8 线性判别分析 40&lt;/p&gt; 
&lt;p&gt;2.8.1 LDA思想总结 40&lt;/p&gt; 
&lt;p&gt;2.8.2 图解LDA核心思想 41&lt;/p&gt; 
&lt;p&gt;2.8.3 二类LDA算法原理 41&lt;/p&gt; 
&lt;p&gt;2.8.4 LDA算法流程总结 42&lt;/p&gt; 
&lt;p&gt;2.8.5 LDA和PCA的异同 43&lt;/p&gt; 
&lt;p&gt;2.8.6 LDA的优缺点 43&lt;/p&gt; 
&lt;p&gt;2.9 主成分分析 43&lt;/p&gt; 
&lt;p&gt;2.9.1 图解PCA核心思想 43&lt;/p&gt; 
&lt;p&gt;2.9.2 PCA算法推理 44&lt;/p&gt; 
&lt;p&gt;2.9.3 PCA算法流程总结 45&lt;/p&gt; 
&lt;p&gt;2.9.4 PCA思想总结 46&lt;/p&gt; 
&lt;p&gt;2.9.5 PCA算法的优缺点 46&lt;/p&gt; 
&lt;p&gt;2.9.6 降维的必要性及目的 46&lt;/p&gt; 
&lt;p&gt;2.9.7 KPCA与PCA的区别 47&lt;/p&gt; 
&lt;p&gt;2.10 模型评估 47&lt;/p&gt; 
&lt;p&gt;2.10.1 模型评估常用方法 48&lt;/p&gt; 
&lt;p&gt;2.10.2 误差、偏差和方差的区别和联系 48&lt;/p&gt; 
&lt;p&gt;2.10.3 为什么使用标准差 49&lt;/p&gt; 
&lt;p&gt;2.10.4 经验误差与泛化误差 50&lt;/p&gt; 
&lt;p&gt;2.10.5 图解欠拟合与过拟合 50&lt;/p&gt; 
&lt;p&gt;2.10.6 如何解决欠拟合与过拟合 52&lt;/p&gt; 
&lt;p&gt;2.10.7 交叉验证的主要作用 52&lt;/p&gt; 
&lt;p&gt;2.10.8 理解K折交叉验证 53&lt;/p&gt; 
&lt;p&gt;2.10.9 理解混淆矩阵 53&lt;/p&gt; 
&lt;p&gt;2.10.10 理解查准率与查全率 53&lt;/p&gt; 
&lt;p&gt;2.10.11 理解ROC与AUC 54&lt;/p&gt; 
&lt;p&gt;2.10.12 如何绘制ROC曲线 55&lt;/p&gt; 
&lt;p&gt;2.10.13 如何计算TPR和FPR 56&lt;/p&gt; 
&lt;p&gt;2.10.14 如何计算AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.15 直观理解AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.16 ROC评估分类器 60&lt;/p&gt; 
&lt;p&gt;2.10.17 代价敏感错误率与代价曲线 60&lt;/p&gt; 
&lt;p&gt;2.10.18 比较检验方法 61&lt;/p&gt; 
&lt;p&gt;2.11 决策树 61&lt;/p&gt; 
&lt;p&gt;2.11.1 决策树的基本原理 62&lt;/p&gt; 
&lt;p&gt;2.11.2 决策树的生成过程 62&lt;/p&gt; 
&lt;p&gt;2.11.3 决策树学习基本算法步骤 62&lt;/p&gt; 
&lt;p&gt;2.11.4 决策树算法的优缺点 63&lt;/p&gt; 
&lt;p&gt;2.11.5 决策树和熵的联系 63&lt;/p&gt; 
&lt;p&gt;2.11.6 熵的概念及定义 63&lt;/p&gt; 
&lt;p&gt;2.11.7 理解信息增益 64&lt;/p&gt; 
&lt;p&gt;2.11.8 决策树中熵、条件熵和信息增益的联系 64&lt;/p&gt; 
&lt;p&gt;2.11.9 决策树算法中剪枝的作用及策略 65&lt;/p&gt; 
&lt;p&gt;2.12 支持向量机（SVM） 65&lt;/p&gt; 
&lt;p&gt;2.12.1 什么是SVM 65&lt;/p&gt; 
&lt;p&gt;2.12.2 SVM能解决的问题 66&lt;/p&gt; 
&lt;p&gt;2.12.3 核函数特点及其作用 67&lt;/p&gt; 
&lt;p&gt;2.12.4 SVM为什么引入对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.5 如何理解SVM中的对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.6 常见的核函数 69&lt;/p&gt; 
&lt;p&gt;2.12.7 SVM的主要特点 69&lt;/p&gt; 
&lt;p&gt;2.12.8 SVM的主要缺点 70&lt;/p&gt; 
&lt;p&gt;2.12.9 逻辑回归与SVM的异同 70&lt;/p&gt; 
&lt;p&gt;2.13 贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.1 贝叶斯分类器的基本原理 72&lt;/p&gt; 
&lt;p&gt;2.13.2 朴素贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.3 举例理解朴素贝叶斯分类器 73&lt;/p&gt; 
&lt;p&gt;2.13.4 半朴素贝叶斯分类器 75&lt;/p&gt; 
&lt;p&gt;2.13.5 极大似然估计和贝叶斯估计的联系与区别 75&lt;/p&gt; 
&lt;p&gt;2.13.6 极大似然估计原理 76&lt;/p&gt; 
&lt;p&gt;2.13.7 图解极大似然估计 76&lt;/p&gt; 
&lt;p&gt;2.14 EM算法 77&lt;/p&gt; 
&lt;p&gt;2.14.1 EM算法的基本思想 77&lt;/p&gt; 
&lt;p&gt;2.14.2 EM算法推导 77&lt;/p&gt; 
&lt;p&gt;2.14.3 图解EM算法 78&lt;/p&gt; 
&lt;p&gt;2.14.4 EM算法流程 79&lt;/p&gt; 
&lt;p&gt;2.15 降维和聚类 79&lt;/p&gt; 
&lt;p&gt;2.15.1 图解为什么会产生维数灾难 79&lt;/p&gt; 
&lt;p&gt;2.15.2 怎样避免维数灾难 83&lt;/p&gt; 
&lt;p&gt;2.15.3 聚类和降维 83&lt;/p&gt; 
&lt;p&gt;2.15.4 聚类算法优劣的衡量标准 84&lt;/p&gt; 
&lt;p&gt;2.15.5 聚类和分类 85&lt;/p&gt; 
&lt;p&gt;2.15.6 聚类算法的性能比较 85&lt;/p&gt; 
&lt;p&gt;2.15.7 4种常用聚类方法比较 85&lt;/p&gt; 
&lt;p&gt;第3章 深度学习基础 89&lt;/p&gt; 
&lt;p&gt;3.1 基本概念 89&lt;/p&gt; 
&lt;p&gt;3.1.1 神经网络的类型 89&lt;/p&gt; 
&lt;p&gt;3.1.2 神经网络的常用模型结构 92&lt;/p&gt; 
&lt;p&gt;3.1.3 深度学习和机器学习的区别与联系 93&lt;/p&gt; 
&lt;p&gt;3.1.4 为什么使用深层表示 93&lt;/p&gt; 
&lt;p&gt;3.1.5 深度学习架构分类 94&lt;/p&gt; 
&lt;p&gt;3.1.6 如何选择深度学习开发平台 94&lt;/p&gt; 
&lt;p&gt;3.2 神经网络计算 95&lt;/p&gt; 
&lt;p&gt;3.2.1 前向传播和反向传播 95&lt;/p&gt; 
&lt;p&gt;3.2.2 如何计算神经网络的输出 96&lt;/p&gt; 
&lt;p&gt;3.2.3 如何计算卷积神经网络输出值 97&lt;/p&gt; 
&lt;p&gt;3.2.4 如何计算池化层输出值 100&lt;/p&gt; 
&lt;p&gt;3.2.5 反向传播实例 101&lt;/p&gt; 
&lt;p&gt;3.2.6 神经网络更“深”的意义 104&lt;/p&gt; 
&lt;p&gt;3.3 激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.1 为什么需要激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.2 为什么激活函数需要非线性函数 105&lt;/p&gt; 
&lt;p&gt;3.3.3 常见的激活函数及其图像 105&lt;/p&gt; 
&lt;p&gt;3.3.4 常见激活函数的导数计算 107&lt;/p&gt; 
&lt;p&gt;3.3.5 激活函数有哪些性质 108&lt;/p&gt; 
&lt;p&gt;3.3.6 如何选择激活函数 108&lt;/p&gt; 
&lt;p&gt;3.3.7 为什么tanh收敛速度比sigmoid快 109&lt;/p&gt; 
&lt;p&gt;3.3.8 Relu激活函数的优点 109&lt;/p&gt; 
&lt;p&gt;3.3.9 理解Relu激活函数的稀疏激活性 109&lt;/p&gt; 
&lt;p&gt;3.3.10 什么时候可以用线性激活函数 109&lt;/p&gt; 
&lt;p&gt;3.3.11 softmax函数的定义及作用 110&lt;/p&gt; 
&lt;p&gt;3.3.12 softmax函数如何应用于多分类 110&lt;/p&gt; 
&lt;p&gt;3.4 BATCH SIZE 112&lt;/p&gt; 
&lt;p&gt;3.4.1 为什么需要Batch Size 112&lt;/p&gt; 
&lt;p&gt;3.4.2 如何选择Batch Size值 112&lt;/p&gt; 
&lt;p&gt;3.4.3 调节Batch Size对训练效果的影响 113&lt;/p&gt; 
&lt;p&gt;3.4.4 在合理范围内增大Batch Size的好处 113&lt;/p&gt; 
&lt;p&gt;3.4.5 盲目增大Batch Size的坏处 114&lt;/p&gt; 
&lt;p&gt;3.5 归一化 114&lt;/p&gt; 
&lt;p&gt;3.5.1 理解归一化含义 114&lt;/p&gt; 
&lt;p&gt;3.5.2 归一化和标准化的联系与区别 114&lt;/p&gt; 
&lt;p&gt;3.5.3 为什么要归一化或标准化 115&lt;/p&gt; 
&lt;p&gt;3.5.4 图解为什么要归一化 115&lt;/p&gt; 
&lt;p&gt;3.5.5 为什么归一化能提高求最优解速度 115&lt;/p&gt; 
&lt;p&gt;3.5.6 归一化有哪些类型 116&lt;/p&gt; 
&lt;p&gt;3.5.7 局部响应归一化作用 116&lt;/p&gt; 
&lt;p&gt;3.5.8 局部响应归一化原理 117&lt;/p&gt; 
&lt;p&gt;3.5.9 什么是批归一化 118&lt;/p&gt; 
&lt;p&gt;3.5.10 批归一化的优点 118&lt;/p&gt; 
&lt;p&gt;3.5.11 批归一化算法流程 118&lt;/p&gt; 
&lt;p&gt;3.5.12 批归一化和组归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.13 权重归一化和批归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.14 批归一化适用范围 120&lt;/p&gt; 
&lt;p&gt;3.5.15 BN、LN、IN和GN的对比 120&lt;/p&gt; 
&lt;p&gt;3.6 参数初始化 121&lt;/p&gt; 
&lt;p&gt;3.6.1 参数初始化应满足的条件 121&lt;/p&gt; 
&lt;p&gt;3.6.2 常用的几种初始化方式 121&lt;/p&gt; 
&lt;p&gt;3.6.3 全0初始化带来的问题 121&lt;/p&gt; 
&lt;p&gt;3.6.4 全都初始化为同样的值 122&lt;/p&gt; 
&lt;p&gt;3.6.5 初始化为小的随机数 123&lt;/p&gt; 
&lt;p&gt;3.6.6 用 校准方差 123&lt;/p&gt; 
&lt;p&gt;3.7 预训练与微调 123&lt;/p&gt; 
&lt;p&gt;3.7.1 什么是预训练和微调 123&lt;/p&gt; 
&lt;p&gt;3.7.2 预训练和微调的作用 124&lt;/p&gt; 
&lt;p&gt;3.7.3 预训练模型的复用 124&lt;/p&gt; 
&lt;p&gt;3.7.4 预训练和迁移学习 125&lt;/p&gt; 
&lt;p&gt;3.7.5 微调时网络参数是否更新 125&lt;/p&gt; 
&lt;p&gt;3.7.6 微调模型的三种状态 125&lt;/p&gt; 
&lt;p&gt;3.7.7 为什么深层神经网络难以训练 125&lt;/p&gt; 
&lt;p&gt;3.8 超参数 127&lt;/p&gt; 
&lt;p&gt;3.8.1 超参数有哪些 127&lt;/p&gt; 
&lt;p&gt;3.8.2 参数和模型的关系 127&lt;/p&gt; 
&lt;p&gt;3.8.3 参数和超参数的区别 127&lt;/p&gt; 
&lt;p&gt;3.8.4 如何寻找超参数的最优值 128&lt;/p&gt; 
&lt;p&gt;3.8.5 超参数搜索的一般过程 128&lt;/p&gt; 
&lt;p&gt;3.9 学习率 129&lt;/p&gt; 
&lt;p&gt;3.9.1 学习率的作用 129&lt;/p&gt; 
&lt;p&gt;3.9.2 学习率衰减的常用参数 129&lt;/p&gt; 
&lt;p&gt;3.9.3 常用的学习率衰减方法 129&lt;/p&gt; 
&lt;p&gt;3.10 正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.1 为什么要正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.2 常见正则化方法 133&lt;/p&gt; 
&lt;p&gt;3.10.3 图解L1和L2正则化 134&lt;/p&gt; 
&lt;p&gt;3.10.4 Dropout具体工作流程 135&lt;/p&gt; 
&lt;p&gt;3.10.5 为什么Dropout可以解决过拟合问题 137&lt;/p&gt; 
&lt;p&gt;3.10.6 Dropout的缺点&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Orz-3/QuantumultX</title>
      <link>https://github.com/Orz-3/QuantumultX</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;QuantumultX小白配置&lt;/h2&gt; 
&lt;h3&gt;配置说明：&lt;/h3&gt; 
&lt;p&gt;本配置由神机规则修改而来，修改了默认策略组，增加了正则筛选策略组，并集成了Nobyda的去广告脚本和重写，附带按task脚本作者分类的task订阅，可按需求订阅
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;补充说明：&lt;/h3&gt; 
&lt;p&gt;喜欢简洁的可以使用Orz-3lite.conf，去掉了正则筛选和部分策略组，如果你是自建节点，请务必选择这个
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;使用方法：&lt;/h3&gt; 
&lt;p&gt;1.点击库中的Orz-3.conf文件，点击raw获取真实地址，复制地址备用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;2.Quan X主界面，点击右下角风车，然后弹出界面下拉至 配置文件-下载，点击下载，将上一步复制的地址粘贴到弹出窗口，然后点确定
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;3.Quan X主界面，点击右下角风车，然后弹出界面下拉至 Mitm ，点击生成证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;4.然后回到Quan X，继续点击配置证书，根据提示安装证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;5.安装成功后启用证书，并到系统的 设置-通用-关于本机 点击信任证书
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;6.打开重写和Mitm
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;7.添加节点/订阅，并左滑添加订阅标签（重要，不添加标签是无法筛选的）
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;8.开始使用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;注意事项：&lt;/h3&gt; 
&lt;p&gt;1.默认16个策略组，其中8个为正则筛选，分别将 香港，台湾，新加坡，美国，日本和韩国地区节点筛选出来，同时把IPLC或IEPL这种高倍率的游戏，或禁止下载的节点单独放进了IPLC策略组中，其余地区节点则放进了特殊地区策略组中
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;2.其余8个策略组均是套用上面的筛选策略组，因此请先确定8个地区策略中选中的节点可用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;3.分流中，已将动画疯默认为台湾地区
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;4.集成了Nobyda库中的去广告类js
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;5.Task请在Task文件夹内按需求添加订阅，使用需额外在重写中启用JS-GetCookie，并按脚本中说明获取cookie方可用
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;6.如果你购买Quantumult X还不足30天，无法一键更新，在启用Get-Cookie时，请搜索并单独缓存你需要的获取cookie脚本
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;7.默认已解锁Tiktok日区
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h6&gt;配置中内容收集整理自以下大佬 （Task脚本作者移动到Task文件夹下的readme中）&lt;/h6&gt; 
&lt;h4&gt;特别感谢：&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ConnersHua&quot;&gt;@ConnersHua&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/KOP-XIAO&quot;&gt;@KOP-XIAO&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JasonLee-Go&quot;&gt;@JasonLee-Go&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;JS脚本作者：&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/yichahucha&quot;&gt;@yichahucha&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/onewayticket255&quot;&gt;@onewayticket255&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Choler&quot;&gt;@Choler&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/srk24&quot;&gt;@srk24&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/blackmatrix7&quot;&gt;@blackmatrix7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bradtraversy/vanillawebprojects</title>
      <link>https://github.com/bradtraversy/vanillawebprojects</link>
      <description>&lt;p&gt;Mini projects built with HTML5, CSS &amp; JavaScript. No frameworks or libraries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;20+ Web Projects With Vanilla JavaScript&lt;/h1&gt; 
&lt;p&gt;This is the main repository for all of the projects in the course.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/web-projects-with-vanilla-javascript/?referralCode=F9B7C7FED834F91ADE75&quot;&gt;Course Link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vanillawebprojects.com&quot;&gt;Course Info Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| # | Project | Live Demo | | :-: | :----------------------------: | :-------: | | 01 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/form-validator&quot;&gt;Form Validator&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/form-validator/&quot;&gt;Live Demo&lt;/a&gt; | | 02 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/movie-seat-booking&quot;&gt;Movie Seat Booking&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/movie-seat-booking/&quot;&gt;Live Demo&lt;/a&gt; | | 03 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/custom-video-player&quot;&gt;Custom Video Player&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/custom-video-player/&quot;&gt;Live Demo&lt;/a&gt; | | 04 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/exchange-rate&quot;&gt;Exchange Rate Calculator&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/exchange-rate/&quot;&gt;Live Demo&lt;/a&gt; | | 05 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/dom-array-methods&quot;&gt;DOM Array Methods Project&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/dom-array-methods/&quot;&gt;Live Demo&lt;/a&gt; | | 06 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/modal-menu-slider&quot;&gt;Menu Slider &amp;amp; Modal&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/modal-menu-slider/&quot;&gt;Live Demo&lt;/a&gt; | | 07 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/hangman&quot;&gt;Hangman Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/hangman/&quot;&gt;Live Demo&lt;/a&gt; | | 08 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/meal-finder&quot;&gt;Mealfinder App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/meal-finder/&quot;&gt;Live Demo&lt;/a&gt; | | 09 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/expense-tracker&quot;&gt;Expense Tracker&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/expense-tracker/&quot;&gt;Live Demo&lt;/a&gt; | | 10 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/music-player&quot;&gt;Music Player&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/music-player/&quot;&gt;Live Demo&lt;/a&gt; | | 11 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/infinite_scroll_blog&quot;&gt;Infinite Scrolling&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/infinite_scroll_blog/&quot;&gt;Live Demo&lt;/a&gt; | | 12 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/typing-game&quot;&gt;Typing Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/typing-game/&quot;&gt;Live Demo&lt;/a&gt; | | 13 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speech-text-reader&quot;&gt;Speech Text Reader&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/speech-text-reader/&quot;&gt;Live Demo&lt;/a&gt; | | 14 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/memory-cards&quot;&gt;Memory Cards&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/memory-cards/&quot;&gt;Live Demo&lt;/a&gt; | | 15 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/lyrics-search&quot;&gt;LyricsSearch App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/lyrics-search/&quot;&gt;Live Demo&lt;/a&gt; | | 16 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/relaxer-app&quot;&gt;Relaxer App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects//relaxer-app/&quot;&gt;Live Demo&lt;/a&gt; | | 17 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/breakout-game&quot;&gt;Breakout Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/breakout-game/&quot;&gt;Live Demo&lt;/a&gt; | | 18 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/new-year-countdown&quot;&gt;New Year Countdown&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/new-year-countdown/&quot;&gt;Live Demo&lt;/a&gt; | | 19 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/sortable-list&quot;&gt;Sortable List&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/sortable-list/&quot;&gt;Live Demo&lt;/a&gt; | | 20 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speak-number-guess&quot;&gt;Speak Number Guessing Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/speak-number-guess/&quot;&gt;Live Demo&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;NOTE ON PULL REQUESTS: All of these projects are part of the course. While I do appreciate people trying to make some things prettier or adding new features, we are only accepting pull requests and looking at issues for bug fixes so that the code stays inline with the course&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; · &lt;a href=&quot;https://github.com/facebook/react/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render &quot;Hello Taylor&quot; into a container on the page.&lt;/p&gt; 
&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jamiebuilds/the-super-tiny-compiler</title>
      <link>https://github.com/jamiebuilds/the-super-tiny-compiler</link>
      <description>&lt;p&gt;⛄ Possibly the smallest compiler ever&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/952783/21579290/5755288a-cf75-11e6-90e0-029529a44a38.png&quot; alt=&quot;The Super Tiny Compiler&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Welcome to The Super Tiny Compiler!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This is an ultra-simplified example of all the major pieces of a modern compiler written in easy to read JavaScript.&lt;/p&gt; 
&lt;p&gt;Reading through the guided code will help you learn about how &lt;em&gt;most&lt;/em&gt; compilers work from end to end.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&quot;&gt;Want to jump into the code? Click here&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://the-super-tiny-compiler.glitch.me/&quot;&gt;You can also check it out on Glitch&lt;/a&gt;&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;Why should I care?&lt;/h3&gt; 
&lt;p&gt;That&#39;s fair, most people don&#39;t really have to think about compilers in their day jobs. However, compilers are all around you, tons of the tools you use are based on concepts borrowed from compilers.&lt;/p&gt; 
&lt;h3&gt;But compilers are scary!&lt;/h3&gt; 
&lt;p&gt;Yes, they are. But that&#39;s our fault (the people who write compilers), we&#39;ve taken something that is reasonably straightforward and made it so scary that most think of it as this totally unapproachable thing that only the nerdiest of the nerds are able to understand.&lt;/p&gt; 
&lt;h3&gt;Okay so where do I begin?&lt;/h3&gt; 
&lt;p&gt;Awesome! Head on over to the &lt;a href=&quot;https://raw.githubusercontent.com/jamiebuilds/the-super-tiny-compiler/master/the-super-tiny-compiler.js&quot;&gt;the-super-tiny-compiler.js&lt;/a&gt; file.&lt;/p&gt; 
&lt;h3&gt;I&#39;m back, that didn&#39;t make sense&lt;/h3&gt; 
&lt;p&gt;Ouch, I&#39;m really sorry. Let me know how it can be improved.&lt;/p&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;p&gt;Run with &lt;code&gt;node test.js&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;&lt;img src=&quot;https://licensebuttons.net/l/by/4.0/80x15.png&quot; alt=&quot;cc-by-4.0&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Node.js is an open-source, cross-platform, JavaScript runtime environment. It executes JavaScript code outside of a browser. For more information on using Node.js, see the &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js Website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;open governance model&lt;/a&gt;. The &lt;a href=&quot;https://openjsf.org/&quot;&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is bound by a &lt;a href=&quot;https://github.com/nodejs/admin/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-types&quot;&gt;Release Types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#download&quot;&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-and-lts-releases&quot;&gt;Current and LTS Releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#nightly-releases&quot;&gt;Nightly Releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#api-documentation&quot;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying Binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#building-nodejs&quot;&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#contributing-to-nodejs&quot;&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#current-project-team-members&quot;&gt;Current Project Team Members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#tsc-technical-steering-committee&quot;&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;Release Keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/.github/SUPPORT.md&quot;&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href=&quot;https://github.com/nodejs/node/tree/v10.x&quot;&gt;v10.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long-term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;. A member of the Release Team &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href=&quot;https://github.com/nodejs/Release#readme&quot;&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS Releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/release/&quot;&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/download/release/latest/&quot;&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href=&quot;https://nodejs.org/download/release/latest-carbon/&quot;&gt;latest-carbon&lt;/a&gt; directory contains the latest Carbon (Node.js 8) release.&lt;/p&gt; 
&lt;h4&gt;Nightly Releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/download/nightly/&quot;&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory name and filename contains a date (in UTC) and the commit SHA at the HEAD of the release.&lt;/p&gt; 
&lt;h4&gt;API Documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href=&quot;https://nodejs.org/download/docs/&quot;&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying Binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt&lt;/code&gt; file with SHA checksums for the files.&lt;/p&gt; 
&lt;p&gt;To download &lt;code&gt;SHASUMS256.txt&lt;/code&gt; using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check that a downloaded file matches the checksum, run it through &lt;code&gt;sha256sum&lt;/code&gt; with a command such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Current and LTS, the GPG detached signature of &lt;code&gt;SHASUMS256.txt&lt;/code&gt; is in &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt;. You can use it with &lt;code&gt;gpg&lt;/code&gt; to verify the integrity of &lt;code&gt;SHASUM256.txt&lt;/code&gt;. You will first need to import &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#release-keys&quot;&gt;the GPG keys of individuals authorized to create releases&lt;/a&gt;. To import the keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the bottom of this README for a full script to import active release keys.&lt;/p&gt; 
&lt;p&gt;Next, download the &lt;code&gt;SHASUMS256.txt.sig&lt;/code&gt; for the release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use &lt;code&gt;gpg --verify SHASUMS256.txt.sig SHASUMS256.txt&lt;/code&gt; to verify the file&#39;s signature.&lt;/p&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/CONTRIBUTING.md&quot;&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/WORKING_GROUPS.md&quot;&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/Strategic-Initiatives.md&quot;&gt;Strategic Initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/technical-values.md&quot;&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current Project Team Members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/GOVERNANCE.md&quot;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;apapirovski@mac.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;chalkerx@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;codebytere@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;daniel.bevenius@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;franziska.hinkelmann@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;gabriel.schulhof@intel.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;gpunathi@in.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;joyeec9h3@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;matteo.collina@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;midawson@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;oss@mmarchini.me&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;tniessen@tnie.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;rtrott@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;TSC Emeriti&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;anna@addaleax.net&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;info@bnoordhuis.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock123@rocketmail.com&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;fedor.indutny@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;josh.gavant@outlook.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;mscdex@mscdex.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nebrius&quot;&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;bryan@nebri.us&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;ofrobots@google.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;orangemocha@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;bertbelder@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;r@va.gg&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;vieuxtech@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;ohtsu@ohtsu.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;thechargingvolcano@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;timothygu99@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;trev.norris@gmail.com&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/addaleax&quot;&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;anna@addaleax.net&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aduh95&quot;&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;duhamelantoine1995@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ak239&quot;&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;ak239spb@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreasMadsen&quot;&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;amwebdk@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antsmartian&quot;&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;anto.aravinth.cse@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apapirovski&quot;&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;apapirovski@mac.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AshCripps&quot;&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;acripps@redhat.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bcoe&quot;&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;bencoe@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bengl&quot;&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;bryan@bryanenglish.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benjamingr&quot;&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;benjamingr@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BethGriggs&quot;&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeck&quot;&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;bradley.meck@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmeurer&quot;&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;benedikt.meurer@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boneskull&quot;&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;boneskull@boneskull.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeAR&quot;&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bzoz&quot;&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;bartosz@janeasystems.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cclauss&quot;&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;cclauss@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChALkeR&quot;&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;chalkerx@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjihrig&quot;&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebytere&quot;&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;codebytere@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danbev&quot;&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;daniel.bevenius@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielleadams&quot;&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;adamzdanielle@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davisjam&quot;&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;davisjam@vt.edu&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devnexen&quot;&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;devnexen@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devsnek&quot;&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;me@gus.host&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dnlup&quot;&gt;dnlup&lt;/a&gt; &lt;strong&gt;Daniele Belardi&lt;/strong&gt; &amp;lt;dwon.dnl@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edsadr&quot;&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;edsadr@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eugeneo&quot;&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;eostroukhov@google.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evanlucas&quot;&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhinkel&quot;&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;franziska.hinkelmann@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fishrock123&quot;&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock123@rocketmail.com&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flarna&quot;&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;deb2001-github@yahoo.de&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielschulhof&quot;&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;gabriel.schulhof@intel.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gdams&quot;&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;george.adams@uk.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geek&quot;&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;wpreul@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gengjiawen&quot;&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;technicalcute@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/geoffreybooth&quot;&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;webmaster@geoffreybooth.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gireeshpunathil&quot;&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;gpunathi@in.ibm.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/guybedford&quot;&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;guybedford@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HarshithaKP&quot;&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;harshitha014@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hashseed&quot;&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;yangguo@chromium.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/himself65&quot;&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu Yang&lt;/strong&gt; &amp;lt;himself65@outlook.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hiroppy&quot;&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;hello@hiroppy.me&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iansu&quot;&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;ian@iansutherland.ca&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indutny&quot;&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;fedor.indutny@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JacksonTian&quot;&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;shyvo1987@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasnell&quot;&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jdalton&quot;&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;john.david.dalton@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkrems&quot;&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Krems&lt;/strong&gt; &amp;lt;jan.krems@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joaocgreis&quot;&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;reis@janeasystems.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joyeecheung&quot;&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;joyeec9h3@gmail.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/juanarbol&quot;&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;soyjuanarbol@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JungMinu&quot;&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;nodecorelab@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lance&quot;&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;lball@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/legendecas&quot;&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;legendecas@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Leko&quot;&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;leko.noor@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lpinca&quot;&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;luigipinca@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lundibundi&quot;&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;shishugi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lxxyx&quot;&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;lxxyxzj@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mafintosh&quot;&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;mathiasbuus@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;matteo.collina@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhdawson&quot;&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;midawson@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/miladfarca&quot;&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;mfarazma@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mildsunrise&quot;&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;me@alba.sh&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/misterdjules&quot;&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;jgilli@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmarchini&quot;&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;oss@mmarchini.me&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mscdex&quot;&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;mscdex@mscdex.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MylesBorins&quot;&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ofrobots&quot;&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;ofrobots@google.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oyyd&quot;&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;oyydoibh@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/panva&quot;&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;panva.ip@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;Pooja.D.P@ibm.com&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psmarshall&quot;&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;petermarshall@chromium.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/puzpuzpuz&quot;&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;apechkurov@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Qard&quot;&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;admin@stephenbelanger.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RaisinTen&quot;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;raisinten@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/refack&quot;&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;refack@gmail.com&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rexagod&quot;&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;rexagod@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richardlau&quot;&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;rlau@redhat.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rickyes&quot;&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;0x19951125@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;ronagy@icloud.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rubys&quot;&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;rubys@intertwingly.net&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruyadorno&quot;&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;ruyadorno@github.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg&quot;&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;rod@vagg.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryzokuken&quot;&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;ryzokuken@disroot.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saghul&quot;&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;saghul@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/santigimeno&quot;&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;santiago.gimeno@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seishun&quot;&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;vvnicholas@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shisama&quot;&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;shisama07@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/silverwind&quot;&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;me@silverwind.io&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/srl295&quot;&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;srloomis@us.ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/starkwang&quot;&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;starkwang@126.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sxa&quot;&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;sxa@redhat.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/targos&quot;&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimothyGu&quot;&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng &quot;Timothy&quot; Gu&lt;/strong&gt; &amp;lt;timothygu99@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tniessen&quot;&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;tniessen@tnie.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trivikr&quot;&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;trivikr.dev@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Trott&quot;&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;rtrott@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vdeturckheim&quot;&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;vlad2t@hotmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watilde&quot;&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;daijiro.wachi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/watson&quot;&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;w@tson.dk&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/XadillaX&quot;&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;i@2333.moe&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yashLadha&quot;&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;yash@yashladha.in&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yhwang&quot;&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;yh.wang@ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yorkie&quot;&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;yorkiefixer@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yosuke-furukawa&quot;&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;yosuke.furukawa@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZYSzys&quot;&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;zyszys98@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrasq&quot;&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;andras@kinvey.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AnnaMag&quot;&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;anna.m.kedzierska@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aqrln&quot;&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;eaglexrlnk@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bnoordhuis&quot;&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;info@bnoordhuis.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brendanashworth&quot;&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;brendan.ashworth@me.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calvinmetcalf&quot;&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;calvin.metcalf@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrisdickinson&quot;&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudiorodriguez&quot;&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;cjrodr@yahoo.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DavidCai1993&quot;&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;davidcai1993@yahoo.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DerekNonGeneric&quot;&gt;DerekNonGeneric&lt;/a&gt; - &lt;strong&gt;Derek Lewis&lt;/strong&gt; &amp;lt;DerekNonGeneric@inf.is&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/digitalinfinity&quot;&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;digitalinfinity@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eljefedelrodeodeljefe&quot;&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;robert.lindstaedt@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/estliberitas&quot;&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;estliberitas@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/firedfox&quot;&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;wangyang0123@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gibfahn&quot;&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glentiki&quot;&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;glenkeane.94@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iarna&quot;&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;me@re-becca.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imran-iq&quot;&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;imran@imraniqbal.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imyller&quot;&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;ilkka.myller@nodefield.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaacs&quot;&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/italoacasas&quot;&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;me@italoacasas.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin&quot;&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;jasongin@microsoft.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbergstroem&quot;&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;bugs@bergstroem.nu&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jhamhader&quot;&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;yuval@brik.org.il&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshgav&quot;&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;josh.gavant@outlook.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/julianduque&quot;&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;julianduquej@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kfarnung&quot;&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;kfarnung@microsoft.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kunalspathak&quot;&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;kunal.pathak@microsoft.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucamaraschi&quot;&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;luca.maraschi@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lxe&quot;&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;lxe@lxe.co&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maclover7&quot;&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;me@jonathanmoss.me&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewloring&quot;&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;mattloring@google.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/micnic&quot;&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;micnic90@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mikeal&quot;&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;mikeal.rogers@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/monsanto&quot;&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;chris@monsan.to&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MoonBall&quot;&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;gangc.cxy@foxmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/not-an-aardvark&quot;&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;teddy.katz@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Olegas&quot;&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;oleg@elifantiev.ru&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orangemocha&quot;&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;orangemocha@nodejs.org&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/othiym23&quot;&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;ogd@aoaioxxysz.net&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/petkaantonov&quot;&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;petka_antonov@hotmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phillipj&quot;&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;johphi@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piscisaureus&quot;&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;bertbelder@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmq20&quot;&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;pmq2001@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/princejwesley&quot;&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;princejohnwesley@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rlidwka&quot;&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;alex@kocharin.ru&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rmg&quot;&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;r.m.graham@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertkowalski&quot;&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;rok@kowalski.gd&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/romankl&quot;&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;romaaan.git@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronkorving&quot;&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;ron@ronkorving.nl&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RReverser&quot;&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;me@rreverser.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sam-github&quot;&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;vieuxtech@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sebdeckers&quot;&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;sebdeckers83@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shigeki&quot;&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;ohtsu@ohtsu.org&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stefanmb&quot;&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;stefan@budeanu.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tellnes&quot;&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;christian@tellnes.no&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thefourtheye&quot;&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;thechargingvolcano@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thlorenz&quot;&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;thlorenz@gmx.de&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trevnorris&quot;&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;trev.norris@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tunniclm&quot;&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;m.j.tunnicliffe@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vkurchatkin&quot;&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;vladimir.kurchatkin@gmail.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vsemozhetbyt&quot;&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;vsemozhetbyt@gmail.com&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/whitlockjc&quot;&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;jwhitlock@apache.org&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Collaborators follow the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/doc/guides/collaborator-guide.md&quot;&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PoojaDurgad&quot;&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja Durgad&lt;/strong&gt; &amp;lt;Pooja.D.P@ibm.com&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RaisinTen&quot;&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;raisinten@gmail.com&amp;gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Release Keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;bgriggs@redhat.com&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;cjihrig@gmail.com&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;adamzdanielle@gmail.com&amp;gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;jasnell@keybase.io&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;targos@protonmail.com&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;myles.borins@gmail.com&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;rlau@redhat.com&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;rod@vagg.org&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;ruben@bridgewater.de&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;ruyadorno@hotmail.com&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;shelley.vohr@gmail.com&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import the full set of trusted release keys (including subkeys possibly used to sign releases):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys 74F12602B6F1C4E913FAA37AD3A89613643B6201
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762
gpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the section above on &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/node/master/#verifying-binaries&quot;&gt;Verifying Binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;p&gt;Other keys used to sign some previous releases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;christopher.s.dickinson@gmail.com&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;adamzdanielle@gmail.com&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;evanlucas@me.com&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;gibfahn@gmail.com&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;i@izs.me&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;me@italoacasas.com&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;fishrock@keybase.io&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;jgilli@fastmail.fm&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;tjfontaine@gmail.com&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href=&quot;https://github.com/nodejs/node/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-React</title>
      <link>https://github.com/Asabeneh/30-Days-Of-React</link>
      <description>&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. It requires HTML, CSS, and JavaScript knowledge. You should be comfortable with JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS. This challenge may take up to 100 day…&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; October, 2020
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------: | | 00 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;JavaScript Refresher&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;Getting Started React&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&quot;&gt;Setting Up&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&quot;&gt;Components&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&quot;&gt;Props&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&quot;&gt;List, Map and Keys&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&quot;&gt;Class Components&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&quot;&gt;States&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&quot;&gt;Conditional Rendering&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&quot;&gt;React Project Folder Structure&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&quot;&gt;Events&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&quot;&gt;Forms&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&quot;&gt;Controlled and Uncontrolled Component&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&quot;&gt;Component Life Cycles&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&quot;&gt;Third Party Packages&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&quot;&gt;Higher Order Components&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&quot;&gt;React Router&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&quot;&gt;Fetch versus Axios&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&quot;&gt;Projects&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&quot;&gt;Projects&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&quot;&gt;Hooks&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&quot;&gt;Forms Using Hook&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&quot;&gt;Fetching Data Using Hooks&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&quot;&gt;Project using Hooks&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&quot;&gt;Custom Hooks&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&quot;&gt;Context&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&quot;&gt;Ref&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&quot;&gt;project&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&quot;&gt;Explore&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&quot;&gt;Conclusions&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&quot;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&quot;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&quot;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&quot;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&quot;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&quot;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&quot;&gt;Browser&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/thirtydaysofreact&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; 
&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&quot;https://github.com/Asabeneh/30-Days-Of-JavaScript&quot;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&quot;https://t.me/thirtydaysofreact/992&quot;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
 &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use Repo&lt;/h2&gt; 
&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; 
&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; 
&lt;h3&gt;Clone your Fork&lt;/h3&gt; 
&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# note that an `ssh` link is used here, but an `https` link will work the same
git clone git@github.com:username/30-Days-Of-React.git
cd 30-Days-Of-React
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a New Branch&lt;/h3&gt; 
&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add solutions/day-01/level1.js
git commit -m &quot;chore: exercise level1 complete&quot;
git push origin exercise-solutions # branch `exercise-solutions` was created earlier
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; 
&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git merge upstream/master exercise-solutions
git push origin exercise-solutions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gothinkster/realworld</title>
      <link>https://github.com/gothinkster/realworld</link>
      <description>&lt;p&gt;&quot;The mother of all demo apps&quot; — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more 🏅&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/realworld.png&quot; alt=&quot;RealWorld Example Applications&quot;&gt;&lt;/h1&gt; 
&lt;h3&gt;Stay on the bleeding edge — &lt;a href=&quot;https://gitter.im/realworld-dev/main&quot;&gt;join our Gitter room!&lt;/a&gt; 🎉&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/gothinkster/realworld&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/gothinkster/realworld.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/realworld-dev/main&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/realworld-dev/main.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/gothinkster&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/gothinkster.svg?style=social&amp;amp;label=Follow&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;See how &lt;em&gt;the exact same&lt;/em&gt; Medium.com clone (called &lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;) is built using any of our supported &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#frontends&quot;&gt;frontends&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#backends&quot;&gt;backends&lt;/a&gt;. Yes, you can mix and match them, because &lt;strong&gt;they all adhere to the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec/&quot;&gt;API spec&lt;/a&gt;&lt;/strong&gt; 😮😎&lt;/h3&gt; 
&lt;p&gt;While most &quot;todo&quot; demos provide an excellent cursory glance at a framework&#39;s capabilities, they typically don&#39;t convey the knowledge &amp;amp; perspective required to actually build &lt;em&gt;real&lt;/em&gt; applications with it.&lt;/p&gt; 
&lt;p&gt;RealWorld solves this by allowing you to choose any frontend (React, Angular 2, &amp;amp; more) and any backend (Node, Django, &amp;amp; more) and see how they power a real world, beautifully designed fullstack app called &quot;&lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read the &lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;full blog post announcing RealWorld on Medium.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;Frontends&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app&quot;&gt;&lt;strong&gt;React / Redux&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/react-redux-realworld-example-app/master/project-logo.png&quot; alt=&quot;React / Redux&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/react-redux-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/react-redux-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/angular-realworld-example-app&quot;&gt;&lt;strong&gt;Angular&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/angular2-realworld-example-app/master/logo.png&quot; alt=&quot;Angular&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/angular-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/angular-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/vue-realworld-example-app&quot;&gt;&lt;strong&gt;Vue&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/vue-realworld-example-app/blob/master/static/rwv-logo.png&quot; alt=&quot;Vue&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/vue-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/vue-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/rtfeldman/elm-spa-example&quot;&gt;&lt;strong&gt;Elm&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png&quot; alt=&quot;Elm&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/rtfeldman/elm-spa-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/rtfeldman/elm-spa-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/react-mobx-realworld-example-app&quot;&gt;&lt;strong&gt;React / MobX&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/react-mobx-realworld-example-app/master/project-logo.png&quot; alt=&quot;React / MobX&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/react-mobx-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/react-mobx-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/sveltejs/realworld&quot;&gt;&lt;strong&gt;Svelte / Sapper&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/sveltejs/realworld/blob/master/logo.png&quot; alt=&quot;Svelte / Sapper&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/sveltejs/realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/sveltejs/realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/thomashoneyman/purescript-halogen-realworld&quot;&gt;&lt;strong&gt;PureScript + Halogen&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/thomashoneyman/purescript-halogen-realworld/main/assets/logo.png&quot; alt=&quot;PureScript + Halogen&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/thomashoneyman/purescript-halogen-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/thomashoneyman/purescript-halogen-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jacekschae/conduit&quot;&gt;&lt;strong&gt;ClojureScript + re-frame&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25448267/85369fdc-2a7d-11e7-9613-ab5ce5e1800f.png&quot; alt=&quot;ClojureScript + re-frame&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jacekschae/conduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jacekschae/conduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/stefanoslig/angular-ngrx-nx-realworld-example-app&quot;&gt;&lt;strong&gt;Angular + ngrx + nx&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/stefanoslig/angular-ngrx-nx-realworld-example-app/master/logo.png&quot; alt=&quot;Angular + ngrx + nx&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/stefanoslig/angular-ngrx-nx-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/stefanoslig/angular-ngrx-nx-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/angularjs-realworld-example-app&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/angularjs-realworld-example-app/master/project-logo.png&quot; alt=&quot;AngularJS&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/angularjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/angularjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jetli/rust-yew-realworld-example-app&quot;&gt;&lt;strong&gt;Rust + Yew + WebAssembly&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/jetli/rust-yew-realworld-example-app/master/logo.png&quot; alt=&quot;Rust + Yew + WebAssembly&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jetli/rust-yew-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jetli/rust-yew-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/reck1ess/next-realworld-example-app&quot;&gt;&lt;strong&gt;Next.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/reck1ess/next-realworld-example-app/master/project-logo.png&quot; alt=&quot;Next.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/reck1ess/next-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/reck1ess/next-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/aurelia-realworld-example-app&quot;&gt;&lt;strong&gt;Aurelia&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/aurelia-realworld-example-app/master/logo.png&quot; alt=&quot;Aurelia&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/aurelia-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/aurelia-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/ember-realworld&quot;&gt;&lt;strong&gt;Ember.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/ember-realworld/master/logo.png&quot; alt=&quot;Ember.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/ember-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/ember-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/web-components-realworld-example-app&quot;&gt;&lt;strong&gt;Vanilla JS Web Components&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/26126314/021150f8-3a3a-11e7-87bd-7bfc7616f6f8.png&quot; alt=&quot;Vanilla JS Web Components&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/web-components-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/web-components-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/apprun-realworld-example-app&quot;&gt;&lt;strong&gt;AppRun&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/apprun-realworld-example-app/blob/master/logo.png&quot; alt=&quot;AppRun&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/apprun-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/apprun-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/seed-rs/seed-rs-realworld&quot;&gt;&lt;strong&gt;Seed&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/seed-rs/seed-rs-realworld/master/logo.png&quot; alt=&quot;Seed&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/seed-rs/seed-rs-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/seed-rs/seed-rs-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jonasbuntinx/purescript-react-realworld&quot;&gt;&lt;strong&gt;PureScript + React&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/jonasbuntinx/purescript-react-realworld/master/assets/logo.png&quot; alt=&quot;PureScript + React&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jonasbuntinx/purescript-react-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jonasbuntinx/purescript-react-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/clojurescript-keechma-realworld-example-app&quot;&gt;&lt;strong&gt;ClojureScript + Keechma&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/clojurescript-keechma-realworld-example-app/master/logo.png&quot; alt=&quot;ClojureScript + Keechma&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/clojurescript-keechma-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/clojurescript-keechma-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/hcavalieri/stencil-realworld-app&quot;&gt;&lt;strong&gt;Stencil.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/hcavalieri/stencil-realworld-app/blob/master/logo.png&quot; alt=&quot;Stencil.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/hcavalieri/stencil-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/hcavalieri/stencil-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/mutoe/vue3-realworld-example-app&quot;&gt;&lt;strong&gt;Vue3 + Vite&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mutoe/vue3-realworld-example-app/master/logo.png&quot; alt=&quot;Vue3 + Vite&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/mutoe/vue3-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/mutoe/vue3-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/kwasniew/hyperapp-realworld-example-app&quot;&gt;&lt;strong&gt;Hyperapp 1&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kwasniew/hyperapp-realworld-example-app/master/logo.png&quot; alt=&quot;Hyperapp 1&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/kwasniew/hyperapp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/kwasniew/hyperapp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/ryansolid/solid-realworld&quot;&gt;&lt;strong&gt;Solid.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ryansolid/solid-realworld/master/logo.png&quot; alt=&quot;Solid.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/ryansolid/solid-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/ryansolid/solid-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/dojo-realworld-example-app&quot;&gt;&lt;strong&gt;Dojo&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/dojo-realworld-example-app/master/logo.png&quot; alt=&quot;Dojo&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/dojo-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/dojo-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/devJang/nuxt-realworld&quot;&gt;&lt;strong&gt;Nuxt.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/devJang/nuxt-realworld/master/logo.png&quot; alt=&quot;Nuxt.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/devJang/nuxt-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/devJang/nuxt-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/ecomfe/san-realworld-app&quot;&gt;&lt;strong&gt;San&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ecomfe/san-realworld-app/master/logo.png&quot; alt=&quot;San&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/ecomfe/san-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/ecomfe/san-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/iq3addLi/riot_v4_realworld_example_app&quot;&gt;&lt;strong&gt;Riot.js v4&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/iq3addLi/riot_v4_realworld_example_app/master/logo.png&quot; alt=&quot;Riot.js v4&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/iq3addLi/riot_v4_realworld_example_app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/iq3addLi/riot_v4_realworld_example_app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/cartonalexandre/imba-realworld-example-app&quot;&gt;&lt;strong&gt;Imba&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/cartonalexandre/imba-realworld-example-app/master/logo.png&quot; alt=&quot;Imba&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/cartonalexandre/imba-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/cartonalexandre/imba-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/neomjs/neomjs-realworld-example-app&quot;&gt;&lt;strong&gt;neo.mjs&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;neo.mjs&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neomjs/neomjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neomjs/neomjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/crizmas-mvc-realworld-example-app&quot;&gt;&lt;strong&gt;Crizmas MVC&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/crizmas-mvc-realworld-example-app/master/crizmas.png&quot; alt=&quot;Crizmas MVC&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/crizmas-mvc-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/crizmas-mvc-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/JoeyMckenzie/BlazorConduit&quot;&gt;&lt;strong&gt;Blazor WebAssembly&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/JoeyMckenzie/BlazorConduit/master/realworld-logo.png&quot; alt=&quot;Blazor WebAssembly&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/JoeyMckenzie/BlazorConduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/JoeyMckenzie/BlazorConduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/rlander/conduit&quot;&gt;&lt;strong&gt;Hoplon + shadow-cljs&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/rlander/conduit/master/logo.png&quot; alt=&quot;Hoplon + shadow-cljs&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/rlander/conduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/rlander/conduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/mutoe/preact-realworld-example-app&quot;&gt;&lt;strong&gt;Preact&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mutoe/preact-realworld-example-app/master/logo.png&quot; alt=&quot;Preact&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/mutoe/preact-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/mutoe/preact-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/apapacy/realworld-riotjs-effector-universal-hot&quot;&gt;&lt;strong&gt;Riot.js + Universal + Effector&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;Riot.js + Universal + Effector&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/apapacy/realworld-riotjs-effector-universal-hot.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/apapacy/realworld-riotjs-effector-universal-hot.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/iq3addLi/riot_realworld_example_app&quot;&gt;&lt;strong&gt;Riot.js v3&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/iq3addLi/riot_realworld_example_app/master/logo.png&quot; alt=&quot;Riot.js v3&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/iq3addLi/riot_realworld_example_app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/iq3addLi/riot_realworld_example_app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/markjackmilian/bridge.spaf-realworld-app&quot;&gt;&lt;strong&gt;Bridge.Spaf&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/markjackmilian/bridge.spaf-realworld-app/master/logo.png&quot; alt=&quot;Bridge.Spaf&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/markjackmilian/bridge.spaf-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/markjackmilian/bridge.spaf-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/6&quot;&gt;Implement GraphQL + Apollo/Relay for the Node + React codebases&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/61&quot;&gt;🖥 🔧 ClojureScript&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/69&quot;&gt;🖥 🔧 Mithril&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/143&quot;&gt;Angular 4+ / MobX&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/147&quot;&gt;AngularJS 1.2 &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/152&quot;&gt;Vanilla Backbone.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/162&quot;&gt;Ractive&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/171&quot;&gt;Quasar framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/191&quot;&gt;Blazor&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/196&quot;&gt;ReasonReact (ReasonML)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/198&quot;&gt;$mol&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/204&quot;&gt;Surplus wip&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/215&quot;&gt;Slim.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/274&quot;&gt;Typescript + Web Components&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Backends&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/gothinkster/node-express-realworld-example-app&quot;&gt;&lt;strong&gt;Node / Express&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/node-express-realworld-example-app/master/project-logo.png&quot; alt=&quot;Node / Express&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/node-express-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/node-express-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/golang-gin-realworld-example-app&quot;&gt;&lt;strong&gt;Go + Gin&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/golang-gin-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Go + Gin&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/golang-gin-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/golang-gin-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/lujakob/nestjs-realworld-example-app&quot;&gt;&lt;strong&gt;NestJS + TypeORM/Prisma&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/lujakob/nestjs-realworld-example-app/blob/master/project-logo.png&quot; alt=&quot;NestJS + TypeORM/Prisma&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/lujakob/nestjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/lujakob/nestjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/aspnetcore-realworld-example-app&quot;&gt;&lt;strong&gt;ASP.NET Core&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/aspnetcore-realworld-example-app/master/logo.png&quot; alt=&quot;ASP.NET Core&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/aspnetcore-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/aspnetcore-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/django-realworld-example-app&quot;&gt;&lt;strong&gt;Django&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/django-realworld-example-app/master/project-logo.png&quot; alt=&quot;Django&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/django-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/django-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/laravel-realworld-example-app&quot;&gt;&lt;strong&gt;Laravel&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/laravel-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Laravel&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/laravel-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/laravel-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/elixir-phoenix-realworld-example-app&quot;&gt;&lt;strong&gt;Elixir + Phoenix&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/elixir-phoenix-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Elixir + Phoenix&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/elixir-phoenix-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/elixir-phoenix-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/spring-boot-realworld-example-app&quot;&gt;&lt;strong&gt;Spring&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/spring-boot-realworld-example-app/raw/master/example-logo.png&quot; alt=&quot;Spring&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/spring-boot-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/spring-boot-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/flask-realworld-example-app&quot;&gt;&lt;strong&gt;Flask&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/flask-realworld-example-app/master/image.png&quot; alt=&quot;Flask&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/flask-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/flask-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/TatriX/realworld-rust-rocket&quot;&gt;&lt;strong&gt;Rust / Rocket&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/TatriX/realworld-rust-rocket/master/logo.png&quot; alt=&quot;Rust / Rocket&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/TatriX/realworld-rust-rocket.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/TatriX/realworld-rust-rocket.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/rails-realworld-example-app&quot;&gt;&lt;strong&gt;Rails&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/rails-realworld-example-app/master/project-logo.png&quot; alt=&quot;Rails&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/rails-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/rails-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/slim-php-realworld-example-app&quot;&gt;&lt;strong&gt;Slim&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/slim-php-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Slim&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/slim-php-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/slim-php-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/kotlin-spring-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin / Spring&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/kotlin-spring-realworld-example-app/master/kotlin-spring.png&quot; alt=&quot;Kotlin / Spring&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/kotlin-spring-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/kotlin-spring-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/xesina/golang-echo-realworld-example-app&quot;&gt;&lt;strong&gt;Go / Echo&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/xesina/golang-echo-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Go / Echo&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/xesina/golang-echo-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/xesina/golang-echo-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/err0r500/go-realworld-clean&quot;&gt;&lt;strong&gt;Go Clean Architecture&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;Go Clean Architecture&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/err0r500/go-realworld-clean.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/err0r500/go-realworld-clean.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/koa-knex-realworld-example&quot;&gt;&lt;strong&gt;Koa / Knex&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/koa-knex-realworld-example/raw/master/logo.png&quot; alt=&quot;Koa / Knex&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/koa-knex-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/koa-knex-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/furkan3ayraktar/clojure-polylith-realworld-example-app&quot;&gt;&lt;strong&gt;Clojure / Polylith&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/furkan3ayraktar/clojure-polylith-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Clojure / Polylith&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/furkan3ayraktar/clojure-polylith-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/furkan3ayraktar/clojure-polylith-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/anishkny/realworld-dynamodb-lambda&quot;&gt;&lt;strong&gt;Serverless AWS Lambda DynamoDB&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/anishkny/realworld-dynamodb-lambda/blob/master/lambda-node-logo.png&quot; alt=&quot;Serverless AWS Lambda DynamoDB&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/anishkny/realworld-dynamodb-lambda.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/anishkny/realworld-dynamodb-lambda.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/tzemanovic/haskell-yesod-realworld-example-app&quot;&gt;&lt;strong&gt;Haskell / Yesod&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/tzemanovic/haskell-yesod-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Haskell / Yesod&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/tzemanovic/haskell-yesod-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/tzemanovic/haskell-yesod-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/scala-play-realworld-example-app&quot;&gt;&lt;strong&gt;Scala &amp;amp; Play Framework&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/scala-play-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Scala &amp;amp; Play Framework&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/scala-play-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/scala-play-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/gcp-datastore-cloud-functions-realworld-example-app&quot;&gt;&lt;strong&gt;GCP Cloud Functions + Datastore&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/gcp-datastore-cloud-functions-realworld-example-app/raw/master/logo.png&quot; alt=&quot;GCP Cloud Functions + Datastore&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/gcp-datastore-cloud-functions-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/gcp-datastore-cloud-functions-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/dnikolovv/dev-adventures-realworld&quot;&gt;&lt;strong&gt;Functional ASP.NET Core&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/dnikolovv/dev-adventures-realworld/raw/master/logo.png&quot; alt=&quot;Functional ASP.NET Core&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/dnikolovv/dev-adventures-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/dnikolovv/dev-adventures-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/cakephp-realworld-example-app&quot;&gt;&lt;strong&gt;CakePHP&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/cakephp-realworld-example-app/raw/master/logo.png&quot; alt=&quot;CakePHP&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/cakephp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/cakephp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/Rudge/kotlin-javalin-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin + Javalin + Exposed&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Rudge/kotlin-javalin-realworld-example-app/master/logo.png&quot; alt=&quot;Kotlin + Javalin + Exposed&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/Rudge/kotlin-javalin-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/Rudge/kotlin-javalin-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/moleculer-node-realworld-example-app&quot;&gt;&lt;strong&gt;Moleculer&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/moleculer-node-realworld-example-app/blob/master/rw-logo.png&quot; alt=&quot;Moleculer&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/moleculer-node-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/moleculer-node-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/fsharp-realworld-example-app&quot;&gt;&lt;strong&gt;F#&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/fsharp-realworld-example-app/blob/master/logo.png&quot; alt=&quot;F#&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/fsharp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/fsharp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/hapijs-realworld-example-app&quot;&gt;&lt;strong&gt;Hapi.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/hapijs-realworld-example-app/blob/master/.github/project-logo.png&quot; alt=&quot;Hapi.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/hapijs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/hapijs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/diegocamara/realworld-api-quarkus&quot;&gt;&lt;strong&gt;Java Quarkus&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/diegocamara/realworld-api-quarkus/master/quarkus-logo.png&quot; alt=&quot;Java Quarkus&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/diegocamara/realworld-api-quarkus.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/diegocamara/realworld-api-quarkus.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alisabzevari/kotlin-http4k-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin + http4k&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alisabzevari/kotlin-http4k-realworld-example-app/master/logo.png&quot; alt=&quot;Kotlin + http4k&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alisabzevari/kotlin-http4k-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alisabzevari/kotlin-http4k-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/dragneelfps/realworld-kotlin-ktor&quot;&gt;&lt;strong&gt;Kotlin + Ktor&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/dragneelfps/realworld-kotlin-ktor/master/logo.png&quot; alt=&quot;Kotlin + Ktor&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/dragneelfps/realworld-kotlin-ktor.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/dragneelfps/realworld-kotlin-ktor.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/devinivy/hapipal-realworld-example-app&quot;&gt;&lt;strong&gt;Node / hapi pal&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/devinivy/hapipal-realworld-example-app/blob/master/.github/logo.png&quot; alt=&quot;Node / hapi pal&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/devinivy/hapipal-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/devinivy/hapipal-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/tanem/express-bookshelf-realworld-example-app&quot;&gt;&lt;strong&gt;Express w/ Bookshelf.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/realworld-starter-kit/blob/master/logo.png&quot; alt=&quot;Express w/ Bookshelf.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/tanem/express-bookshelf-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/tanem/express-bookshelf-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/vladfaust/crystalworld&quot;&gt;&lt;strong&gt;Crystal (Onyx)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/vladfaust/crystalworld/master/media/logo.png&quot; alt=&quot;Crystal (Onyx)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/vladfaust/crystalworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/vladfaust/crystalworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/chrisxue815/realworld-aws-lambda-dynamodb-go&quot;&gt;&lt;strong&gt;AWS Lambda Go + DynamoDB&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;AWS Lambda Go + DynamoDB&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/chrisxue815/realworld-aws-lambda-dynamodb-go.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/chrisxue815/realworld-aws-lambda-dynamodb-go.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/randyscotsmithey/feathers-realworld-example-app&quot;&gt;&lt;strong&gt;Feathers&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/randyscotsmithey/feathers-realworld-example-app/master/logo.png&quot; alt=&quot;Feathers&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/randyscotsmithey/feathers-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/randyscotsmithey/feathers-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/schoolhouse-io/colmena-realworld-example-app&quot;&gt;&lt;strong&gt;Ruby &amp;amp; Colmena&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/schoolhouse-io/colmena-realworld-example-app/raw/master/media/logo.png&quot; alt=&quot;Ruby &amp;amp; Colmena&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/schoolhouse-io/colmena-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/schoolhouse-io/colmena-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/1984weed/akka-http-realworld-example&quot;&gt;&lt;strong&gt;Akka HTTP&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1984weed/akka-http-realworld-example/9824fc701d1476eae2b389d2410881af1577b147/logo.png&quot; alt=&quot;Akka HTTP&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/1984weed/akka-http-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/1984weed/akka-http-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/niteoweb/pyramid-realworld-example-app&quot;&gt;&lt;strong&gt;Pyramid&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/niteoweb/pyramid-realworld-example-app/master/logo.png&quot; alt=&quot;Pyramid&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/niteoweb/pyramid-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/niteoweb/pyramid-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/QEWD-realworld-example-app&quot;&gt;&lt;strong&gt;QEWD.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25587724/182f95fc-2e5a-11e7-83db-1541c1bee128.png&quot; alt=&quot;QEWD.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/QEWD-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/QEWD-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/diegocamara/vertx-springboot-realworld-example-app&quot;&gt;&lt;strong&gt;Eclipse Vert.x&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/diegocamara/vertx-springboot-realworld-example-app/master/vertx-logo.png&quot; alt=&quot;Eclipse Vert.x&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/diegocamara/vertx-springboot-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/diegocamara/vertx-springboot-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/vaibhavmule/masonite-realworld-example-app&quot;&gt;&lt;strong&gt;Masonite&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/vaibhavmule/masonite-realworld-example-app/master/logo.png&quot; alt=&quot;Masonite&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/vaibhavmule/masonite-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/vaibhavmule/masonite-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example&quot;&gt;&lt;strong&gt;Neo4j + Nest.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example/raw/master/project-logo.png&quot; alt=&quot;Neo4j + Nest.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neo4j-examples/nestjs-neo4j-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neo4j-examples/nestjs-neo4j-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/spincast/spincast-realworld&quot;&gt;&lt;strong&gt;Spincast&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/spincast/spincast-realworld/master/logo.png&quot; alt=&quot;Spincast&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/spincast/spincast-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/spincast/spincast-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alex-k1/scala-http4s-realworld-example-app&quot;&gt;&lt;strong&gt;Scala + http4s&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alex-k1/scala-http4s-realworld-example-app/master/logo.png&quot; alt=&quot;Scala + http4s&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alex-k1/scala-http4s-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alex-k1/scala-http4s-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/blrB/hanami-realworld-example-app&quot;&gt;&lt;strong&gt;Hanami&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/blrB/hanami-realworld-example-app/master/logo.png&quot; alt=&quot;Hanami&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/blrB/hanami-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/blrB/hanami-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/daimor/realworld-intersystems-iris&quot;&gt;&lt;strong&gt;InterSystems IRIS&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/daimor/realworld-intersystems-iris/master/logo.png&quot; alt=&quot;InterSystems IRIS&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/daimor/realworld-intersystems-iris.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/daimor/realworld-intersystems-iris.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/eflem00/koa-boilerplate&quot;&gt;&lt;strong&gt;Koa + TypeScript + TypeORM&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/eflem00/koa-boilerplate/master/logo.png&quot; alt=&quot;Koa + TypeScript + TypeORM&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/eflem00/koa-boilerplate.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/eflem00/koa-boilerplate.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alexey-lapin/realworld-backend-micronaut&quot;&gt;&lt;strong&gt;Java Micronaut&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alexey-lapin/realworld-backend-micronaut/master/example-logo.png&quot; alt=&quot;Java Micronaut&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alexey-lapin/realworld-backend-micronaut.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alexey-lapin/realworld-backend-micronaut.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/neo4j-examples/nodejs-neo4j-realworld-example&quot;&gt;&lt;strong&gt;Neo4j + Express.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example/raw/master/project-logo.png&quot; alt=&quot;Neo4j + Express.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neo4j-examples/nodejs-neo4j-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neo4j-examples/nodejs-neo4j-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/6&quot;&gt;Implement GraphQL + Apollo/Relay for the Node + React codebases&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/45&quot;&gt;🗄🔧 Go + net/http&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/46&quot;&gt;🗄🔧 Node + GraphQL&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/57&quot;&gt;🗄🔧 Clojure&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/59&quot;&gt;🗄🔧 Falcon and GAE&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/60&quot;&gt;🗄🔧 Nim&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/66&quot;&gt;🗄🔧 Symfony&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/73&quot;&gt;🗄🔧 Haskell / Servant&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/88&quot;&gt;🗄🔧 Phalcon&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/95&quot;&gt;🗄🔧 Dropwizard&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/99&quot;&gt;🗄🔧 Go + Gorilla mux&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/105&quot;&gt;🗄🔧 Loopback 3.0&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/112&quot;&gt;🗄 🔧 Crystal + Kemal&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/119&quot;&gt;🗄 🔧 Erlang + Cowboy&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/123&quot;&gt;🗄 🔧 Nancy&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/126&quot;&gt;🗄🔧 Sanic&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/140&quot;&gt;Haskell / Scotty&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/141&quot;&gt;Typescript + node + express&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/142&quot;&gt;typescript + node.js(koa)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/148&quot;&gt;Vanilla PHP&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/163&quot;&gt;Vert.x (Java)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/166&quot;&gt;Lumen + MongoDB &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/168&quot;&gt;Go + net/http Package &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/175&quot;&gt;Swift Vapor&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/200&quot;&gt;Egg.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/201&quot;&gt;Serverless python (AWS Lambda)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/206&quot;&gt;Serverless Typescript + Mongodb (implementation done)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/209&quot;&gt;Azure Functions + CosmosDb&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/219&quot;&gt;Serverless+Typescript with AWS as the provider (Lambda, SSM, DynamoDB)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/228&quot;&gt;Vertx + Reactive + MongoDB&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/234&quot;&gt;Fullstack Golang (tgram)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/247&quot;&gt;Zend Framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/272&quot;&gt;Rust / Rocket / Diesel / Mysql - Backend Application&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/285&quot;&gt;Golang + Revel&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/337&quot;&gt;Turbolinks&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/352&quot;&gt;Actix&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/353&quot;&gt;Lucky&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/354&quot;&gt;Symfony 4 with API Platform&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/364&quot;&gt;Scala + Finch&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/428&quot;&gt;Holochain&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Mobile&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/nea/nativescript-realworld-example-app&quot;&gt;&lt;strong&gt;NativeScript (Angular)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/nea/nativescript-realworld-example-app/blob/master/logo.png&quot; alt=&quot;NativeScript (Angular)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/nea/nativescript-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/nea/nativescript-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/flexsurfer/conduitrn&quot;&gt;&lt;strong&gt;React Native (ClojureScript and re-frame)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/flexsurfer/conduitrn/blob/master/logo.png&quot; alt=&quot;React Native (ClojureScript and re-frame)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/flexsurfer/conduitrn.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/flexsurfer/conduitrn.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/spacer-1669x257.gif&quot; alt=&quot;empty&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/10&quot;&gt;📱🔧 React Native&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/39&quot;&gt;📱🔧 Jasonette&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/43&quot;&gt;📱🔧 Swift&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/70&quot;&gt;📱🔧 C# on Xamarin&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/84&quot;&gt;📱 🔧 Kotlin/Android&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/91&quot;&gt;📱🔧 Onymos&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/171&quot;&gt;Quasar framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/181&quot;&gt;Swift Perfect&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/312&quot;&gt;Flutter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Fullstack&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Since these implementations are responsible for the entire stack, they obviously cannot be mixed and matched but they still adhere to the same functionality &amp;amp; UX specs.&lt;/em&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/layrjs/react-layr-realworld-example-app&quot;&gt;&lt;strong&gt;Layr / React&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/layrjs/react-layr-realworld-example-app/master/assets/logo.png&quot; alt=&quot;Layr / React&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/layrjs/react-layr-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/layrjs/react-layr-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/drashland/deno-drash-realworld-example-app&quot;&gt;&lt;strong&gt;Drash + Postgres + Vue&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/drashland/deno-drash-realworld-example-app/master/logo.png&quot; alt=&quot;Drash + Postgres + Vue&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/drashland/deno-drash-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/drashland/deno-drash-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/spacer-1669x257.gif&quot; alt=&quot;empty&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/199&quot;&gt;Fullstack Firebase&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/497&quot;&gt;Meteor fullstack&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Create a new stack&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/upcoming_stacks.png&quot; alt=&quot;Create a new stack&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Know any of these frameworks (or one that isn&#39;t listed)?
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;&lt;strong&gt;Create a new framework implementation &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Or you can &lt;a href=&quot;https://github.com/gothinkster/realworld/issues?q=is%3Aopen+is%3Aissue+label%3Awip&quot;&gt;view upcoming stacks (WIPs)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note: All stacks that are a WIP are experimental and incomplete.&lt;/p&gt; 
&lt;p&gt;Don&#39;t expect everything to work perfectly out of the box!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;How do I get up &amp;amp; running?&lt;/h1&gt; 
&lt;p&gt;Simply follow the instructions in the README of whatever frontend and/or backend repo&#39;s you want to get up and running.&lt;/p&gt; 
&lt;h3&gt;Can you teach me how to build each stack from scratch?&lt;/h3&gt; 
&lt;p&gt;Yup! We&#39;ve built step-by-step tutorials for all of our stacks that teach you how to go from &lt;code&gt;git init&lt;/code&gt; all the way to the production ready application. &lt;a href=&quot;https://thinkster.io/tutorials/fullstack&quot;&gt;&lt;strong&gt;Start learning now &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Community created resources&lt;/h1&gt; 
&lt;p&gt;Forks, tutorials, workshops, and other resources based on the RealWorld project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kentcdodds/testing-workshop&quot;&gt;&lt;strong&gt;React+Redux / Node testing workshop&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/kentcdodds&quot;&gt;&lt;strong&gt;Kent C. Dodds&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example repo showing the React+Redux and Node stacks working together w/ TDD&lt;/li&gt; 
   &lt;li&gt;Live recording of his workshop is &lt;a href=&quot;https://www.youtube.com/watch?v=DdqiXcYDv-8&quot;&gt;&lt;strong&gt;available on YouTube&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anishkny/realworld-e2e-test&quot;&gt;&lt;strong&gt;RealWorld React/NodeJS E2E Tests&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/anishkny&quot;&gt;&lt;strong&gt;Anish Karandikar&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A repo showing how to wire &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app&quot;&gt;React&lt;/a&gt; frontend with &lt;a href=&quot;https://github.com/gothinkster/node-express-realworld-example-app&quot;&gt;NodeJS&lt;/a&gt; backend for a RealWorld fullstack&lt;/li&gt; 
   &lt;li&gt;Includes E2E integration tests that use &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Chrome Puppeteer&lt;/a&gt; and &lt;a href=&quot;https://mochajs.org&quot;&gt;Mocha&lt;/a&gt; and work with CI systems like &lt;a href=&quot;https://travis-ci.org/anishkny/realworld-e2e-test&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/gh/anishkny/realworld-e2e-test&quot;&gt;CircleCI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Also demonstrates usage of &lt;a href=&quot;https://greenkeeper.io&quot;&gt;Greenkeeper&lt;/a&gt; for automatic dependency updates and &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt; for vulnerability monitoring&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Performance comparisons: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2019&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-2018-update-e5760fb4a962&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2018&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-e1cb62fd526c&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Learn more&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;&quot;Introducing RealWorld 🙌&quot;&lt;/a&gt; by Eric Simons&lt;/li&gt; 
 &lt;li&gt;Every tutorial is built against the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/api/&quot;&gt;API spec&lt;/a&gt; to ensure modularity of every frontend &amp;amp; backend&lt;/li&gt; 
 &lt;li&gt;Every frontend utilizes the same hand crafted &lt;a href=&quot;https://github.com/gothinkster/conduit-bootstrap-template&quot;&gt;Bootstrap 4 theme&lt;/a&gt; for identical UI/UX&lt;/li&gt; 
 &lt;li&gt;There is a hosted version of the backend API available for public usage, no API keys required&lt;/li&gt; 
 &lt;li&gt;Interested in creating a new RealWorld stack? View our &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;starter guide &amp;amp; spec&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Who made this?&lt;/h1&gt; 
&lt;p&gt;RealWorld would not be possible without the &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#special-thanks-to&quot;&gt;open source community&lt;/a&gt; continuously helping push the project forward. In addition, we have a core project team composed of:&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/anishkny&quot;&gt;Anish Karandikar&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;MathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech &amp;amp; humanities ❤️&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/Cameron-C-Chapman&quot;&gt;Cameron Chapman&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Cameron Chapman is a Software Engineer at FanThreeSixty. He&#39;s an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/ericsimons40&quot;&gt;Eric Simons&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Eric is a Software Engineer, UI Designer, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/iamalbertpai&quot;&gt;Albert Pai&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Albert is a Software Engineer, DevOps ninja, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/gothinkster&quot;&gt;Thinkster&lt;/a&gt; - Funding/Support&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;Thinkster&lt;/a&gt; creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn&#39;t exist without their funding, so please consider investing in &lt;a href=&quot;https://thinkster.io/pro&quot;&gt;a Pro subscription&lt;/a&gt; to help support us!&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/brwr_&quot;&gt;James Brewer&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;James is a Software Engineer at Square and a contributor to the Django project. He created &amp;amp; maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/SandeeshS&quot;&gt;Sandeesh S.&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Full stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.&lt;/p&gt; 
&lt;h2&gt;Special thanks to...&lt;/h2&gt; 
&lt;p&gt;RealWorld wouldn&#39;t be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dan Abramov&lt;/strong&gt; (creator of Redux) for helping &lt;a href=&quot;https://twitter.com/dan_abramov/status/692009757775896577&quot;&gt;spark the initial idea&lt;/a&gt;, &lt;a href=&quot;https://github.com/reactjs/redux/issues/1353&quot;&gt;getting the Redux community involved&lt;/a&gt;, as well as graciously taking the time to provide feedback on the Redux codebase&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max Lynch&lt;/strong&gt; (creator of Ionic) for taking the time to provide guidance in the early days of this project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Addy Osmani&lt;/strong&gt; (creator of TodoMVC) for helping &lt;a href=&quot;https://twitter.com/addyosmani/status/762828483433144320&quot;&gt;spark the initial idea&lt;/a&gt; and his amazing work with TodoMVC&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TodoMVC&lt;/strong&gt; (&lt;a href=&quot;https://github.com/tastejs/todomvc#team&quot;&gt;team &amp;amp; contributors&lt;/a&gt;) for their exemplary &amp;amp; successful work; their project &amp;amp; org has been an invaluable analogy for us as we&#39;ve built out RealWorld&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James Brewer&lt;/strong&gt; (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;All of the codebases are &lt;strong&gt;MIT licensed&lt;/strong&gt; unless otherwise specified.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/end.png&quot; alt=&quot;Brought to you by Thinkster&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tj/commander.js</title>
      <link>https://github.com/tj/commander.js</link>
      <description>&lt;p&gt;node.js command-line interfaces made easy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Commander.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/tj/commander.js/actions?query=workflow%3A%22build%22&quot;&gt;&lt;img src=&quot;https://github.com/tj/commander.js/workflows/build/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/commander&quot;&gt;&lt;img src=&quot;http://img.shields.io/npm/v/commander.svg?style=flat&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/commander?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/commander.svg?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagephobia.now.sh/result?p=commander&quot;&gt;&lt;img src=&quot;https://packagephobia.now.sh/badge?p=commander&quot; alt=&quot;Install Size&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The complete solution for &lt;a href=&quot;http://nodejs.org&quot;&gt;node.js&lt;/a&gt; command-line interfaces.&lt;/p&gt; 
&lt;p&gt;Read this in other languages: English | &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/Readme_zh-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#commanderjs&quot;&gt;Commander.js&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#declaring-program-variable&quot;&gt;Declaring &lt;em&gt;program&lt;/em&gt; variable&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#options&quot;&gt;Options&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#common-option-types-boolean-and-value&quot;&gt;Common option types, boolean and value&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#default-option-value&quot;&gt;Default option value&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#other-option-types-negatable-boolean-and-booleanvalue&quot;&gt;Other option types, negatable boolean and boolean|value&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#required-option&quot;&gt;Required option&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#variadic-option&quot;&gt;Variadic option&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#version-option&quot;&gt;Version option&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#more-configuration&quot;&gt;More configuration&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#custom-option-processing&quot;&gt;Custom option processing&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#commands&quot;&gt;Commands&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#specify-the-argument-syntax&quot;&gt;Specify the argument syntax&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#action-handler&quot;&gt;Action handler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#stand-alone-executable-subcommands&quot;&gt;Stand-alone executable (sub)commands&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#automated-help&quot;&gt;Automated help&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#custom-help&quot;&gt;Custom help&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#display-help-from-code&quot;&gt;Display help from code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#usage-and-name&quot;&gt;.usage and .name&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#helpoptionflags-description&quot;&gt;.helpOption(flags, description)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#addhelpcommand&quot;&gt;.addHelpCommand()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#more-configuration-1&quot;&gt;More configuration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#custom-event-listeners&quot;&gt;Custom event listeners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#bits-and-pieces&quot;&gt;Bits and pieces&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#parse-and-parseasync&quot;&gt;.parse() and .parseAsync()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#parsing-configuration&quot;&gt;Parsing Configuration&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#legacy-options-as-properties&quot;&gt;Legacy options as properties&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#createcommand&quot;&gt;createCommand()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#import-into-ecmascript-module&quot;&gt;Import into ECMAScript Module&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#node-options-such-as---harmony&quot;&gt;Node options such as &lt;code&gt;--harmony&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#debugging-stand-alone-executable-subcommands&quot;&gt;Debugging stand-alone executable subcommands&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#override-exit-and-output-handling&quot;&gt;Override exit and output handling&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#additional-documentation&quot;&gt;Additional documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#support&quot;&gt;Support&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/#commander-for-enterprise&quot;&gt;Commander for enterprise&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For information about terms used in this document see: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/docs/terminology.md&quot;&gt;terminology&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install commander
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Declaring &lt;em&gt;program&lt;/em&gt; variable&lt;/h2&gt; 
&lt;p&gt;Commander exports a global object which is convenient for quick programs. This is used in the examples in this README for brevity.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { program } = require(&#39;commander&#39;);
program.version(&#39;0.0.1&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For larger programs which may use commander in multiple ways, including unit testing, it is better to create a local Command object to use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Command } = require(&#39;commander&#39;);
const program = new Command();
program.version(&#39;0.0.1&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;p&gt;Options are defined with the &lt;code&gt;.option()&lt;/code&gt; method, also serving as documentation for the options. Each option can have a short flag (single character) and a long name, separated by a comma or space or vertical bar (&#39;|&#39;).&lt;/p&gt; 
&lt;p&gt;The parsed options can be accessed by calling &lt;code&gt;.opts()&lt;/code&gt; on a &lt;code&gt;Command&lt;/code&gt; object, and are passed to the action handler. Multi-word options such as &quot;--template-engine&quot; are camel-cased, becoming &lt;code&gt;program.opts().templateEngine&lt;/code&gt; etc.&lt;/p&gt; 
&lt;p&gt;Multiple short flags may optionally be combined in a single argument following the dash: boolean flags, followed by a single option taking a value (possibly followed by the value). For example &lt;code&gt;-a -b -p 80&lt;/code&gt; may be written as &lt;code&gt;-ab -p80&lt;/code&gt; or even &lt;code&gt;-abp80&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;--&lt;/code&gt; to indicate the end of the options, and any remaining arguments will be used without being interpreted.&lt;/p&gt; 
&lt;p&gt;By default options on the command line are not positional, and can be specified before or after other arguments.&lt;/p&gt; 
&lt;h3&gt;Common option types, boolean and value&lt;/h3&gt; 
&lt;p&gt;The two most used option types are a boolean option, and an option which takes its value from the following argument (declared with angle brackets like &lt;code&gt;--expect &amp;lt;value&amp;gt;&lt;/code&gt;). Both are &lt;code&gt;undefined&lt;/code&gt; unless specified on command line.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-common.js&quot;&gt;options-common.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;-d, --debug&#39;, &#39;output extra debugging&#39;)
  .option(&#39;-s, --small&#39;, &#39;small pizza size&#39;)
  .option(&#39;-p, --pizza-type &amp;lt;type&amp;gt;&#39;, &#39;flavour of pizza&#39;);

program.parse(process.argv);

const options = program.opts();
if (options.debug) console.log(options);
console.log(&#39;pizza details:&#39;);
if (options.small) console.log(&#39;- small pizza size&#39;);
if (options.pizzaType) console.log(`- ${options.pizzaType}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pizza-options -d
{ debug: true, small: undefined, pizzaType: undefined }
pizza details:
$ pizza-options -p
error: option &#39;-p, --pizza-type &amp;lt;type&amp;gt;&#39; argument missing
$ pizza-options -ds -p vegetarian
{ debug: true, small: true, pizzaType: &#39;vegetarian&#39; }
pizza details:
- small pizza size
- vegetarian
$ pizza-options --pizza-type=cheese
pizza details:
- cheese
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;program.parse(arguments)&lt;/code&gt; processes the arguments, leaving any args not consumed by the program options in the &lt;code&gt;program.args&lt;/code&gt; array. The parameter is optional and defaults to &lt;code&gt;process.argv&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Default option value&lt;/h3&gt; 
&lt;p&gt;You can specify a default value for an option which takes a value.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-defaults.js&quot;&gt;options-defaults.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;-c, --cheese &amp;lt;type&amp;gt;&#39;, &#39;add the specified type of cheese&#39;, &#39;blue&#39;);

program.parse();

console.log(`cheese: ${program.opts().cheese}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pizza-options
cheese: blue
$ pizza-options --cheese stilton
cheese: stilton
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other option types, negatable boolean and boolean|value&lt;/h3&gt; 
&lt;p&gt;You can define a boolean option long name with a leading &lt;code&gt;no-&lt;/code&gt; to set the option value to false when used. Defined alone this also makes the option true by default.&lt;/p&gt; 
&lt;p&gt;If you define &lt;code&gt;--foo&lt;/code&gt; first, adding &lt;code&gt;--no-foo&lt;/code&gt; does not change the default value from what it would otherwise be. You can specify a default boolean value for a boolean option and it can be overridden on command line.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-negatable.js&quot;&gt;options-negatable.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;--no-sauce&#39;, &#39;Remove sauce&#39;)
  .option(&#39;--cheese &amp;lt;flavour&amp;gt;&#39;, &#39;cheese flavour&#39;, &#39;mozzarella&#39;)
  .option(&#39;--no-cheese&#39;, &#39;plain with no cheese&#39;)
  .parse();

const options = program.opts();
const sauceStr = options.sauce ? &#39;sauce&#39; : &#39;no sauce&#39;;
const cheeseStr = (options.cheese === false) ? &#39;no cheese&#39; : `${options.cheese} cheese`;
console.log(`You ordered a pizza with ${sauceStr} and ${cheeseStr}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pizza-options
You ordered a pizza with sauce and mozzarella cheese
$ pizza-options --sauce
error: unknown option &#39;--sauce&#39;
$ pizza-options --cheese=blue
You ordered a pizza with sauce and blue cheese
$ pizza-options --no-sauce --no-cheese
You ordered a pizza with no sauce and no cheese
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can specify an option which may be used as a boolean option but may optionally take an option-argument (declared with square brackets like &lt;code&gt;--optional [value]&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-boolean-or-value.js&quot;&gt;options-boolean-or-value.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;-c, --cheese [type]&#39;, &#39;Add cheese with optional type&#39;);

program.parse(process.argv);

const options = program.opts();
if (options.cheese === undefined) console.log(&#39;no cheese&#39;);
else if (options.cheese === true) console.log(&#39;add cheese&#39;);
else console.log(`add cheese type ${options.cheese}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pizza-options
no cheese
$ pizza-options --cheese
add cheese
$ pizza-options --cheese mozzarella
add cheese type mozzarella
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For information about possible ambiguous cases, see &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/docs/options-taking-varying-arguments.md&quot;&gt;options taking varying arguments&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Required option&lt;/h3&gt; 
&lt;p&gt;You may specify a required (mandatory) option using &lt;code&gt;.requiredOption&lt;/code&gt;. The option must have a value after parsing, usually specified on the command line, or perhaps from a default value (say from environment). The method is otherwise the same as &lt;code&gt;.option&lt;/code&gt; in format, taking flags and description, and optional default value or custom processing.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-required.js&quot;&gt;options-required.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .requiredOption(&#39;-c, --cheese &amp;lt;type&amp;gt;&#39;, &#39;pizza must have cheese&#39;);

program.parse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pizza
error: required option &#39;-c, --cheese &amp;lt;type&amp;gt;&#39; not specified
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Variadic option&lt;/h3&gt; 
&lt;p&gt;You may make an option variadic by appending &lt;code&gt;...&lt;/code&gt; to the value placeholder when declaring the option. On the command line you can then specify multiple option-arguments, and the parsed option value will be an array. The extra arguments are read until the first argument starting with a dash. The special argument &lt;code&gt;--&lt;/code&gt; stops option processing entirely. If a value is specified in the same argument as the option then no further values are read.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-variadic.js&quot;&gt;options-variadic.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;-n, --number &amp;lt;numbers...&amp;gt;&#39;, &#39;specify numbers&#39;)
  .option(&#39;-l, --letter [letters...]&#39;, &#39;specify letters&#39;);

program.parse();

console.log(&#39;Options: &#39;, program.opts());
console.log(&#39;Remaining arguments: &#39;, program.args);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ collect -n 1 2 3 --letter a b c
Options:  { number: [ &#39;1&#39;, &#39;2&#39;, &#39;3&#39; ], letter: [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ] }
Remaining arguments:  []
$ collect --letter=A -n80 operand
Options:  { number: [ &#39;80&#39; ], letter: [ &#39;A&#39; ] }
Remaining arguments:  [ &#39;operand&#39; ]
$ collect --letter -n 1 -n 2 3 -- operand
Options:  { number: [ &#39;1&#39;, &#39;2&#39;, &#39;3&#39; ], letter: true }
Remaining arguments:  [ &#39;operand&#39; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For information about possible ambiguous cases, see &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/docs/options-taking-varying-arguments.md&quot;&gt;options taking varying arguments&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Version option&lt;/h3&gt; 
&lt;p&gt;The optional &lt;code&gt;version&lt;/code&gt; method adds handling for displaying the command version. The default option flags are &lt;code&gt;-V&lt;/code&gt; and &lt;code&gt;--version&lt;/code&gt;, and when present the command prints the version number and exits.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.version(&#39;0.0.1&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ./examples/pizza -V
0.0.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may change the flags and description by passing additional parameters to the &lt;code&gt;version&lt;/code&gt; method, using the same syntax for flags as the &lt;code&gt;option&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.version(&#39;0.0.1&#39;, &#39;-v, --vers&#39;, &#39;output the current version&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;More configuration&lt;/h3&gt; 
&lt;p&gt;You can add most options using the &lt;code&gt;.option()&lt;/code&gt; method, but there are some additional features available by constructing an &lt;code&gt;Option&lt;/code&gt; explicitly for less common cases.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-extra.js&quot;&gt;options-extra.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .addOption(new Option(&#39;-s, --secret&#39;).hideHelp())
  .addOption(new Option(&#39;-t, --timeout &amp;lt;delay&amp;gt;&#39;, &#39;timeout in seconds&#39;).default(60, &#39;one minute&#39;))
  .addOption(new Option(&#39;-d, --drink &amp;lt;size&amp;gt;&#39;, &#39;drink size&#39;).choices([&#39;small&#39;, &#39;medium&#39;, &#39;large&#39;]));
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ extra --help
Usage: help [options]

Options:
  -t, --timeout &amp;lt;delay&amp;gt;  timeout in seconds (default: one minute)
  -d, --drink &amp;lt;size&amp;gt;     drink cup size (choices: &quot;small&quot;, &quot;medium&quot;, &quot;large&quot;)
  -h, --help             display help for command

$ extra --drink huge
error: option &#39;-d, --drink &amp;lt;size&amp;gt;&#39; argument &#39;huge&#39; is invalid. Allowed choices are small, medium, large.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom option processing&lt;/h3&gt; 
&lt;p&gt;You may specify a function to do custom processing of option-arguments. The callback function receives two parameters, the user specified option-argument and the previous value for the option. It returns the new value for the option.&lt;/p&gt; 
&lt;p&gt;This allows you to coerce the option-argument to the desired type, or accumulate values, or do entirely custom processing.&lt;/p&gt; 
&lt;p&gt;You can optionally specify the default/starting value for the option after the function parameter.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/options-custom-processing.js&quot;&gt;options-custom-processing.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function myParseInt(value, dummyPrevious) {
  // parseInt takes a string and a radix
  const parsedValue = parseInt(value, 10);
  if (isNaN(parsedValue)) {
    throw new commander.InvalidOptionArgumentError(&#39;Not a number.&#39;);
  }
  return parsedValue;
}

function increaseVerbosity(dummyValue, previous) {
  return previous + 1;
}

function collect(value, previous) {
  return previous.concat([value]);
}

function commaSeparatedList(value, dummyPrevious) {
  return value.split(&#39;,&#39;);
}

program
  .option(&#39;-f, --float &amp;lt;number&amp;gt;&#39;, &#39;float argument&#39;, parseFloat)
  .option(&#39;-i, --integer &amp;lt;number&amp;gt;&#39;, &#39;integer argument&#39;, myParseInt)
  .option(&#39;-v, --verbose&#39;, &#39;verbosity that can be increased&#39;, increaseVerbosity, 0)
  .option(&#39;-c, --collect &amp;lt;value&amp;gt;&#39;, &#39;repeatable value&#39;, collect, [])
  .option(&#39;-l, --list &amp;lt;items&amp;gt;&#39;, &#39;comma separated list&#39;, commaSeparatedList)
;

program.parse();

const options = program.opts();
if (options.float !== undefined) console.log(`float: ${options.float}`);
if (options.integer !== undefined) console.log(`integer: ${options.integer}`);
if (options.verbose &amp;gt; 0) console.log(`verbosity: ${options.verbose}`);
if (options.collect.length &amp;gt; 0) console.log(options.collect);
if (options.list !== undefined) console.log(options.list);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ custom -f 1e2
float: 100
$ custom --integer 2
integer: 2
$ custom -v -v -v
verbose: 3
$ custom -c a -c b -c c
[ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ]
$ custom --list x,y,z
[ &#39;x&#39;, &#39;y&#39;, &#39;z&#39; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;You can specify (sub)commands using &lt;code&gt;.command()&lt;/code&gt; or &lt;code&gt;.addCommand()&lt;/code&gt;. There are two ways these can be implemented: using an action handler attached to the command, or as a stand-alone executable file (described in more detail later). The subcommands may be nested (&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/nestedCommands.js&quot;&gt;example&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;In the first parameter to &lt;code&gt;.command()&lt;/code&gt; you specify the command name and any command-arguments. The arguments may be &lt;code&gt;&amp;lt;required&amp;gt;&lt;/code&gt; or &lt;code&gt;[optional]&lt;/code&gt;, and the last argument may also be &lt;code&gt;variadic...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;.addCommand()&lt;/code&gt; to add an already configured subcommand to the program.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Command implemented using action handler (description is supplied separately to `.command`)
// Returns new command for configuring.
program
  .command(&#39;clone &amp;lt;source&amp;gt; [destination]&#39;)
  .description(&#39;clone a repository into a newly created directory&#39;)
  .action((source, destination) =&amp;gt; {
    console.log(&#39;clone command called&#39;);
  });

// Command implemented using stand-alone executable file (description is second parameter to `.command`)
// Returns `this` for adding more commands.
program
  .command(&#39;start &amp;lt;service&amp;gt;&#39;, &#39;start named service&#39;)
  .command(&#39;stop [service]&#39;, &#39;stop named service, or all if no name supplied&#39;);

// Command prepared separately.
// Returns `this` for adding more commands.
program
  .addCommand(build.makeBuildCommand());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configuration options can be passed with the call to &lt;code&gt;.command()&lt;/code&gt; and &lt;code&gt;.addCommand()&lt;/code&gt;. Specifying &lt;code&gt;hidden: true&lt;/code&gt; will remove the command from the generated help output. Specifying &lt;code&gt;isDefault: true&lt;/code&gt; will run the subcommand if no other subcommand is specified (&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/defaultCommand.js&quot;&gt;example&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Specify the argument syntax&lt;/h3&gt; 
&lt;p&gt;You use &lt;code&gt;.arguments&lt;/code&gt; to specify the expected command-arguments for the top-level command, and for subcommands they are usually included in the &lt;code&gt;.command&lt;/code&gt; call. Angled brackets (e.g. &lt;code&gt;&amp;lt;required&amp;gt;&lt;/code&gt;) indicate required command-arguments. Square brackets (e.g. &lt;code&gt;[optional]&lt;/code&gt;) indicate optional command-arguments. You can optionally describe the arguments in the help by supplying a hash as second parameter to &lt;code&gt;.description()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/arguments.js&quot;&gt;arguments.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .version(&#39;0.1.0&#39;)
  .arguments(&#39;&amp;lt;username&amp;gt; [password]&#39;)
  .description(&#39;test command&#39;, {
    username: &#39;user to login&#39;,
    password: &#39;password for user, if required&#39;
  })
  .action((username, password) =&amp;gt; {
    console.log(&#39;username:&#39;, username);
    console.log(&#39;environment:&#39;, password || &#39;no password given&#39;);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The last argument of a command can be variadic, and only the last argument. To make an argument variadic you append &lt;code&gt;...&lt;/code&gt; to the argument name. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .version(&#39;0.1.0&#39;)
  .command(&#39;rmdir &amp;lt;dirs...&amp;gt;&#39;)
  .action(function (dirs) {
    dirs.forEach((dir) =&amp;gt; {
      console.log(&#39;rmdir %s&#39;, dir);
    });
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The variadic argument is passed to the action handler as an array.&lt;/p&gt; 
&lt;h3&gt;Action handler&lt;/h3&gt; 
&lt;p&gt;The action handler gets passed a parameter for each command-argument you declared, and two additional parameters which are the parsed options and the command object itself.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/thank.js&quot;&gt;thank.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .arguments(&#39;&amp;lt;name&amp;gt;&#39;)
  .option(&#39;-t, --title &amp;lt;honorific&amp;gt;&#39;, &#39;title to use before name&#39;)
  .option(&#39;-d, --debug&#39;, &#39;display some debugging&#39;)
  .action((name, options, command) =&amp;gt; {
    if (options.debug) {
      console.error(&#39;Called %s with options %o&#39;, command.name(), options);
    }
    const title = options.title ? `${options.title} ` : &#39;&#39;;
    console.log(`Thank-you ${title}${name}`);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may supply an &lt;code&gt;async&lt;/code&gt; action handler, in which case you call &lt;code&gt;.parseAsync&lt;/code&gt; rather than &lt;code&gt;.parse&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;async function run() { /* code goes here */ }

async function main() {
  program
    .command(&#39;run&#39;)
    .action(run);
  await program.parseAsync(process.argv);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A command&#39;s options and arguments on the command line are validated when the command is used. Any unknown options or missing arguments will be reported as an error. You can suppress the unknown option checks with &lt;code&gt;.allowUnknownOption()&lt;/code&gt;. By default it is not an error to pass more arguments than declared, but you can make this an error with &lt;code&gt;.allowExcessArguments(false)&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Stand-alone executable (sub)commands&lt;/h3&gt; 
&lt;p&gt;When &lt;code&gt;.command()&lt;/code&gt; is invoked with a description argument, this tells Commander that you&#39;re going to use stand-alone executables for subcommands. Commander will search the executables in the directory of the entry script (like &lt;code&gt;./examples/pm&lt;/code&gt;) with the name &lt;code&gt;program-subcommand&lt;/code&gt;, like &lt;code&gt;pm-install&lt;/code&gt;, &lt;code&gt;pm-search&lt;/code&gt;. You can specify a custom name with the &lt;code&gt;executableFile&lt;/code&gt; configuration option.&lt;/p&gt; 
&lt;p&gt;You handle the options for an executable (sub)command in the executable, and don&#39;t declare them at the top-level.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/pm&quot;&gt;pm&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .version(&#39;0.1.0&#39;)
  .command(&#39;install [name]&#39;, &#39;install one or more packages&#39;)
  .command(&#39;search [query]&#39;, &#39;search with optional query&#39;)
  .command(&#39;update&#39;, &#39;update installed packages&#39;, { executableFile: &#39;myUpdateSubCommand&#39; })
  .command(&#39;list&#39;, &#39;list packages installed&#39;, { isDefault: true });

program.parse(process.argv);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the program is designed to be installed globally, make sure the executables have proper modes, like &lt;code&gt;755&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Automated help&lt;/h2&gt; 
&lt;p&gt;The help information is auto-generated based on the information commander already knows about your program. The default help option is &lt;code&gt;-h,--help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/pizza&quot;&gt;pizza&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ node ./examples/pizza --help
Usage: pizza [options]

An application for pizza ordering

Options:
  -p, --peppers        Add peppers
  -c, --cheese &amp;lt;type&amp;gt;  Add the specified type of cheese (default: &quot;marble&quot;)
  -C, --no-cheese      You do not want any cheese
  -h, --help           display help for command
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A &lt;code&gt;help&lt;/code&gt; command is added by default if your command has subcommands. It can be used alone, or with a subcommand name to show further help for the subcommand. These are effectively the same if the &lt;code&gt;shell&lt;/code&gt; program has implicit help:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;shell help
shell --help

shell help spawn
shell spawn --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom help&lt;/h3&gt; 
&lt;p&gt;You can add extra text to be displayed along with the built-in help.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/custom-help&quot;&gt;custom-help&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .option(&#39;-f, --foo&#39;, &#39;enable some foo&#39;);

program.addHelpText(&#39;after&#39;, `

Example call:
  $ custom-help --help`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yields the following help output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Text&quot;&gt;Usage: custom-help [options]

Options:
  -f, --foo   enable some foo
  -h, --help  display help for command

Example call:
  $ custom-help --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The positions in order displayed are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;beforeAll&lt;/code&gt;: add to the program for a global banner or header&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;before&lt;/code&gt;: display extra information before built-in help&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;after&lt;/code&gt;: display extra information after built-in help&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;afterAll&lt;/code&gt;: add to the program for a global footer (epilog)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The positions &quot;beforeAll&quot; and &quot;afterAll&quot; apply to the command and all its subcommands.&lt;/p&gt; 
&lt;p&gt;The second parameter can be a string, or a function returning a string. The function is passed a context object for your convenience. The properties are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;error: a boolean for whether the help is being displayed due to a usage error&lt;/li&gt; 
 &lt;li&gt;command: the Command which is displaying the help&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Display help from code&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;.help()&lt;/code&gt;: display help information and exit immediately. You can optionally pass &lt;code&gt;{ error: true }&lt;/code&gt; to display on stderr and exit with an error status.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.outputHelp()&lt;/code&gt;: output help information without exiting. You can optionally pass &lt;code&gt;{ error: true }&lt;/code&gt; to display on stderr.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.helpInformation()&lt;/code&gt;: get the built-in command help information as a string for processing or displaying yourself.&lt;/p&gt; 
&lt;h3&gt;.usage and .name&lt;/h3&gt; 
&lt;p&gt;These allow you to customise the usage description in the first line of the help. The name is otherwise deduced from the (full) program arguments. Given:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .name(&quot;my-command&quot;)
  .usage(&quot;[global options] command&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The help will start with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Text&quot;&gt;Usage: my-command [global options] command
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.helpOption(flags, description)&lt;/h3&gt; 
&lt;p&gt;By default every command has a help option. Override the default help flags and description. Pass false to disable the built-in help option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .helpOption(&#39;-e, --HELP&#39;, &#39;read more information&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.addHelpCommand()&lt;/h3&gt; 
&lt;p&gt;A help command is added by default if your command has subcommands. You can explicitly turn on or off the implicit help command with &lt;code&gt;.addHelpCommand()&lt;/code&gt; and &lt;code&gt;.addHelpCommand(false)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can both turn on and customise the help command by supplying the name and description:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.addHelpCommand(&#39;assist [command]&#39;, &#39;show assistance&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;More configuration&lt;/h3&gt; 
&lt;p&gt;The built-in help is formatted using the Help class. You can configure the Help behaviour by modifying data properties and methods using &lt;code&gt;.configureHelp()&lt;/code&gt;, or by subclassing using &lt;code&gt;.createHelp()&lt;/code&gt; if you prefer.&lt;/p&gt; 
&lt;p&gt;The data properties are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;helpWidth&lt;/code&gt;: specify the wrap width, useful for unit tests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sortSubcommands&lt;/code&gt;: sort the subcommands alphabetically&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sortOptions&lt;/code&gt;: sort the options alphabetically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are methods getting the visible lists of arguments, options, and subcommands. There are methods for formatting the items in the lists, with each item having a &lt;em&gt;term&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt;. Take a look at &lt;code&gt;.formatHelp()&lt;/code&gt; to see how they are used.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/configure-help.js&quot;&gt;configure-help.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;program.configureHelp({
  sortSubcommands: true,
  subcommandTerm: (cmd) =&amp;gt; cmd.name() // Just show the name, instead of short usage.
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom event listeners&lt;/h2&gt; 
&lt;p&gt;You can execute custom actions by listening to command and option events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.on(&#39;option:verbose&#39;, function () {
  process.env.VERBOSE = this.verbose;
});

program.on(&#39;command:*&#39;, function (operands) {
  console.error(`error: unknown command &#39;${operands[0]}&#39;`);
  const availableCommands = program.commands.map(cmd =&amp;gt; cmd.name());
  mySuggestBestMatch(operands[0], availableCommands);
  process.exitCode = 1;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bits and pieces&lt;/h2&gt; 
&lt;h3&gt;.parse() and .parseAsync()&lt;/h3&gt; 
&lt;p&gt;The first argument to &lt;code&gt;.parse&lt;/code&gt; is the array of strings to parse. You may omit the parameter to implicitly use &lt;code&gt;process.argv&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If the arguments follow different conventions than node you can pass a &lt;code&gt;from&lt;/code&gt; option in the second parameter:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&#39;node&#39;: default, &lt;code&gt;argv[0]&lt;/code&gt; is the application and &lt;code&gt;argv[1]&lt;/code&gt; is the script being run, with user parameters after that&lt;/li&gt; 
 &lt;li&gt;&#39;electron&#39;: &lt;code&gt;argv[1]&lt;/code&gt; varies depending on whether the electron application is packaged&lt;/li&gt; 
 &lt;li&gt;&#39;user&#39;: all of the arguments from the user&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.parse(process.argv); // Explicit, node conventions
program.parse(); // Implicit, and auto-detect electron
program.parse([&#39;-f&#39;, &#39;filename&#39;], { from: &#39;user&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Parsing Configuration&lt;/h3&gt; 
&lt;p&gt;If the default parsing does not suit your needs, there are some behaviours to support other usage patterns.&lt;/p&gt; 
&lt;p&gt;By default program options are recognised before and after subcommands. To only look for program options before subcommands, use &lt;code&gt;.enablePositionalOptions()&lt;/code&gt;. This lets you use an option for a different purpose in subcommands.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/positional-options.js&quot;&gt;positional-options.js&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;With positional options, the &lt;code&gt;-b&lt;/code&gt; is a program option in the first line and a subcommand option in the second:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;program -b subcommand
program subcommand -b
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default options are recognised before and after command-arguments. To only process options that come before the command-arguments, use &lt;code&gt;.passThroughOptions()&lt;/code&gt;. This lets you pass the arguments and following options through to another program without needing to use &lt;code&gt;--&lt;/code&gt; to end the option processing. To use pass through options in a subcommand, the program needs to enable positional options.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/pass-through-options.js&quot;&gt;pass-through-options.js&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;With pass through options, the &lt;code&gt;--port=80&lt;/code&gt; is a program option in the line and passed through as a command-argument in the second:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;program --port=80 arg
program arg --port=80
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default the option processing shows an error for an unknown option. To have an unknown option treated as an ordinary command-argument and continue looking for options, use &lt;code&gt;.allowUnknownOption()&lt;/code&gt;. This lets you mix known and unknown options.&lt;/p&gt; 
&lt;p&gt;By default the argument processing does not display an error for more command-arguments than expected. To display an error for excess arguments, use&lt;code&gt;.allowExcessArguments(false)&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Legacy options as properties&lt;/h3&gt; 
&lt;p&gt;Before Commander 7, the option values were stored as properties on the command. This was convenient to code but the downside was possible clashes with existing properties of &lt;code&gt;Command&lt;/code&gt;. You can revert to the old behaviour to run unmodified legacy code by using &lt;code&gt;.storeOptionsAsProperties()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program
  .storeOptionsAsProperties()
  .option(&#39;-d, --debug&#39;)
  .action((commandAndOptions) =&amp;gt; {
    if (commandAndOptions.debug) {
      console.error(`Called ${commandAndOptions.name()}`);
    }
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript&lt;/h3&gt; 
&lt;p&gt;The Commander package includes its TypeScript Definition file.&lt;/p&gt; 
&lt;p&gt;If you use &lt;code&gt;ts-node&lt;/code&gt; and stand-alone executable subcommands written as &lt;code&gt;.ts&lt;/code&gt; files, you need to call your program through node to get the subcommands called correctly. e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node -r ts-node/register pm.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;createCommand()&lt;/h3&gt; 
&lt;p&gt;This factory function creates a new command. It is exported and may be used instead of using &lt;code&gt;new&lt;/code&gt;, like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createCommand } = require(&#39;commander&#39;);
const program = createCommand();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;createCommand&lt;/code&gt; is also a method of the Command object, and creates a new command rather than a subcommand. This gets used internally when creating subcommands using &lt;code&gt;.command()&lt;/code&gt;, and you may override it to customise the new subcommand (example file &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/custom-command-class.js&quot;&gt;custom-command-class.js&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Import into ECMAScript Module&lt;/h3&gt; 
&lt;p&gt;Commander is currently a CommonJS package, and the default export can be imported into an ES Module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// index.mjs
import commander from &#39;commander&#39;;
const program = commander.program;
const newCommand = new commander.Command();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Node options such as &lt;code&gt;--harmony&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;You can enable &lt;code&gt;--harmony&lt;/code&gt; option in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;#! /usr/bin/env node --harmony&lt;/code&gt; in the subcommands scripts. (Note Windows does not support this pattern.)&lt;/li&gt; 
 &lt;li&gt;Use the &lt;code&gt;--harmony&lt;/code&gt; option when call the command, like &lt;code&gt;node --harmony examples/pm publish&lt;/code&gt;. The &lt;code&gt;--harmony&lt;/code&gt; option will be preserved when spawning subcommand process.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debugging stand-alone executable subcommands&lt;/h3&gt; 
&lt;p&gt;An executable subcommand is launched as a separate child process.&lt;/p&gt; 
&lt;p&gt;If you are using the node inspector for &lt;a href=&quot;https://nodejs.org/en/docs/guides/debugging-getting-started/&quot;&gt;debugging&lt;/a&gt; executable subcommands using &lt;code&gt;node --inspect&lt;/code&gt; et al, the inspector port is incremented by 1 for the spawned subcommand.&lt;/p&gt; 
&lt;p&gt;If you are using VSCode to debug executable subcommands you need to set the &lt;code&gt;&quot;autoAttachChildProcesses&quot;: true&lt;/code&gt; flag in your launch.json configuration.&lt;/p&gt; 
&lt;h3&gt;Override exit and output handling&lt;/h3&gt; 
&lt;p&gt;By default Commander calls &lt;code&gt;process.exit&lt;/code&gt; when it detects errors, or after displaying the help or version. You can override this behaviour and optionally supply a callback. The default override throws a &lt;code&gt;CommanderError&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The override callback is passed a &lt;code&gt;CommanderError&lt;/code&gt; with properties &lt;code&gt;exitCode&lt;/code&gt; number, &lt;code&gt;code&lt;/code&gt; string, and &lt;code&gt;message&lt;/code&gt;. The default override behaviour is to throw the error, except for async handling of executable subcommand completion which carries on. The normal display of error messages or version or help is not affected by the override which is called after the display.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;program.exitOverride();

try {
  program.parse(process.argv);
} catch (err) {
  // custom processing...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default Commander is configured for a command-line application and writes to stdout and stderr. You can modify this behaviour for custom applications. In addition, you can modify the display of error messages.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/configure-output.js&quot;&gt;configure-output.js&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function errorColor(str) {
  // Add ANSI escape codes to display text in red.
  return `\x1b[31m${str}\x1b[0m`;
}

program
  .configureOutput({
    // Visibly override write routines as example!
    writeOut: (str) =&amp;gt; process.stdout.write(`[OUT] ${str}`),
    writeErr: (str) =&amp;gt; process.stdout.write(`[ERR] ${str}`),
    // Highlight errors in color.
    outputError: (str, write) =&amp;gt; write(errorColor(str))
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional documentation&lt;/h3&gt; 
&lt;p&gt;There is more information available about:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/docs/deprecated.md&quot;&gt;deprecated&lt;/a&gt; features still supported for backwards compatibility&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/docs/options-taking-varying-arguments.md&quot;&gt;options taking varying arguments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;In a single command program, you might not need an action handler.&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/pizza&quot;&gt;pizza&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { program } = require(&#39;commander&#39;);

program
  .description(&#39;An application for pizza ordering&#39;)
  .option(&#39;-p, --peppers&#39;, &#39;Add peppers&#39;)
  .option(&#39;-c, --cheese &amp;lt;type&amp;gt;&#39;, &#39;Add the specified type of cheese&#39;, &#39;marble&#39;)
  .option(&#39;-C, --no-cheese&#39;, &#39;You do not want any cheese&#39;);

program.parse();

const options = program.opts();
console.log(&#39;you ordered a pizza with:&#39;);
if (options.peppers) console.log(&#39;  - peppers&#39;);
const cheese = !options.cheese ? &#39;no&#39; : options.cheese;
console.log(&#39;  - %s cheese&#39;, cheese);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a multi-command program, you will have action handlers for each command (or stand-alone executables for the commands).&lt;/p&gt; 
&lt;p&gt;Example file: &lt;a href=&quot;https://raw.githubusercontent.com/tj/commander.js/master/examples/deploy&quot;&gt;deploy&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Command } = require(&#39;commander&#39;);
const program = new Command();

program
  .version(&#39;0.0.1&#39;)
  .option(&#39;-c, --config &amp;lt;path&amp;gt;&#39;, &#39;set config path&#39;, &#39;./deploy.conf&#39;);

program
  .command(&#39;setup [env]&#39;)
  .description(&#39;run setup commands for all envs&#39;)
  .option(&#39;-s, --setup_mode &amp;lt;mode&amp;gt;&#39;, &#39;Which setup mode to use&#39;, &#39;normal&#39;)
  .action((env, options) =&amp;gt; {
    env = env || &#39;all&#39;;
    console.log(&#39;read config from %s&#39;, program.opts().config);
    console.log(&#39;setup for %s env(s) with %s mode&#39;, env, options.setup_mode);
  });

program
  .command(&#39;exec &amp;lt;script&amp;gt;&#39;)
  .alias(&#39;ex&#39;)
  .description(&#39;execute the given remote cmd&#39;)
  .option(&#39;-e, --exec_mode &amp;lt;mode&amp;gt;&#39;, &#39;Which exec mode to use&#39;, &#39;fast&#39;)
  .action((script, options) =&amp;gt; {
    console.log(&#39;read config from %s&#39;, program.opts().config);
    console.log(&#39;exec &quot;%s&quot; using %s mode and config %s&#39;, script, options.exec_mode, program.opts().config);
  }).addHelpText(&#39;after&#39;, `
Examples:
  $ deploy exec sequential
  $ deploy exec async`
  );
  
program.parse(process.argv);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More samples can be found in the &lt;a href=&quot;https://github.com/tj/commander.js/tree/master/examples&quot;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;The current version of Commander is fully supported on Long Term Support versions of node, and requires at least node v10. (For older versions of node, use an older version of Commander. Commander version 2.x has the widest support.)&lt;/p&gt; 
&lt;p&gt;The main forum for free and community support is the project &lt;a href=&quot;https://github.com/tj/commander.js/issues&quot;&gt;Issues&lt;/a&gt; on GitHub.&lt;/p&gt; 
&lt;h3&gt;Commander for enterprise&lt;/h3&gt; 
&lt;p&gt;Available as part of the Tidelift Subscription&lt;/p&gt; 
&lt;p&gt;The maintainers of Commander and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-commander?utm_source=npm-commander&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&quot;&gt;Learn more.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/chrome-extensions-samples</title>
      <link>https://github.com/GoogleChrome/chrome-extensions-samples</link>
      <description>&lt;p&gt;Chrome Extensions Samples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chrome Extensions samples&lt;/h1&gt; 
&lt;p&gt;Official samples for Chrome Extensions and the Chrome Apps platform. Note that Chrome Apps are deprecated—learn more &lt;a href=&quot;https://blog.chromium.org/2020/08/changes-to-chrome-app-support-timeline.html&quot;&gt;on the Chromium blog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information on extensions, see &lt;a href=&quot;https://developer.chrome.com&quot;&gt;Chrome Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Samples&lt;/h2&gt; 
&lt;p&gt;The directory structure is as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;api/ - extensions focused on a single API package&lt;/li&gt; 
 &lt;li&gt;howto/ - extensions that show how to perform a particular task&lt;/li&gt; 
 &lt;li&gt;tutorials/ - multi-step walkthroughs referenced inline in the docs&lt;/li&gt; 
 &lt;li&gt;extensions/ - full featured extensions spanning multiple API packages&lt;/li&gt; 
 &lt;li&gt;apps/ - deprecated Chrome Apps platform (not listed below)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To experiment with these samples, please clone this repo and use &#39;Load Unpacked Extension&#39;. Read more on &lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sample | Calls --- | --- &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/bookmarks/basic&quot;&gt;My Bookmarks&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A browser action with a popup dump of all bookmarks, including search, add, edit and delete. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.getTree
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/make_page_red&quot;&gt;Page Redder&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Make the current page red | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/print&quot;&gt;Print this page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a print button to the browser. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/set_icon_path&quot;&gt;A browser action which changes its icon when clicked&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Click browser action icon to change color! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/set_page_color&quot;&gt;A browser action with a popup that changes the page color&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Change the current page color | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browsingData/basic&quot;&gt;BrowsingData API: Basics&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A trivial usage example. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browsingData.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/commands&quot;&gt;Sample Extension Commands extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Press Ctrl+Shift+F to open the browser action popup, press Ctrl+Shift+Y to send an event. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contentSettings&quot;&gt;Content settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows the content settings for the current site. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/basic&quot;&gt;Context Menus Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows some of the features of the Context Menus API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/event_page&quot;&gt;Context Menus Sample (with Event Page)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows some of the features of the Context Menus API using an event page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/global_context_search&quot;&gt;Global Google Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Use the context menu to search a different country&#39;s Google | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/cookies&quot;&gt;Cookie API Test Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Testing Cookie API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/debugger/live-headers&quot;&gt;Live HTTP headers&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the live log with the http requests headers | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.attach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.detach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.sendCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/debugger/pause-resume&quot;&gt;JavaScript pause/resume&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Pauses / resumes JavaScript execution | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.attach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.detach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onDetach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.sendCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/default_command_override&quot;&gt;Tab Flipper&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Press Ctrl+Shift+Right or Ctrl+Shift+Left (Command+Shift+Right or Command+Shift+Left on a Mac) to flip through window tabs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/desktopCapture&quot;&gt;Desktop Capture Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Show desktop media picker UI | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;desktopCapture.cancelChooseDesktopMedia
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;desktopCapture.chooseDesktopMedia
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/deviceInfo/basic&quot;&gt;My Devices&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A browser action with a popup dump of all devices signed into the same account as the current profile. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;signedInDevices.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;signedInDevices.onDeviceInfoChange
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/devtools/network/chrome-firephp&quot;&gt;FirePHP for Chrome&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Extends the Developer Tools, adding support for parsing FirePHP messages from server | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.network.getHAR
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.network.onRequestFinished
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/devtools/panels/chrome-query&quot;&gt;Chrome Query&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Extends the Developer Tools, adding a sidebar that displays the jQuery data associated with the selected DOM element. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.panels.ElementsPanel.createSidebarPane
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.panels.ElementsPanel.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/displaySource/tabCast&quot;&gt;tabCast&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Creates a WiFi Display Session from the captured tab media stream using chrome.displaySource API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.getAvailableSinks
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.onSessionTerminated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.onSinksUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.startSession
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.terminateSession
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.capture
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/document_scan&quot;&gt;Document Scanning API Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;documentScan.scan
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_filename_controller&quot;&gt;Download Filename Controller&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Download Filename Controller | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onDeterminingFilename
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_links&quot;&gt;Download Selected Links&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Select links on a page and download them. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_manager&quot;&gt;Download Manager Button&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Browser Action Download Manager User Interface for Google Chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.acceptDanger
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.cancel
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.erase
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.getFileIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onErased
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.open
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.pause
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.removeFile
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.resume
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.setShelfEnabled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.showDefaultFolder
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_open&quot;&gt;Download and Open Button&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Download and Open Context Menu Button | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.open
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/downloads_overwrite&quot;&gt;Downloads Overwrite Existing Files&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;All downloads overwrite existing files instead of adding &#39; (1)&#39;, &#39; (2)&#39;, etc. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onDeterminingFilename
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/eventPage/basic&quot;&gt;Event Page Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates usage and features of the event page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RedirectRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RequestMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onSuspend
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/extension/isAllowedAccess&quot;&gt;&lt;code&gt;extension.isAllowedFileSchemeAccess&lt;/code&gt; and &lt;code&gt;extension.isAllowedIncognitoAccess&lt;/code&gt; Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates the &lt;code&gt;extension.isAllowedFileSchemeAccess&lt;/code&gt; and &lt;code&gt;extesion.isAllowedIncognitoAccess&lt;/code&gt; APIs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedFileSchemeAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fileSystemProvider/archive&quot;&gt;Fake Archive Handler App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate File System Provider API usage for apps. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.mount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onCloseFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onGetMetadataRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onOpenFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadDirectoryRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onUnmountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.unmount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onSuspend
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fileSystemProvider/basic&quot;&gt;File System Provider API Extension Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate features of the API like mounting, listing directories, etc for extensions. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.mount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onCloseFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onGetMetadataRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onMountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onOpenFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadDirectoryRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onUnmountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.unmount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fontSettings&quot;&gt;Advanced Font Settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Customize per-script font settings. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getFontList
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onDefaultFixedFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onDefaultFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onFontChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onMinimumFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/history/historyOverride&quot;&gt;History Override&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Overrides the History Page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.deleteAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.deleteUrl
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/history/showHistory&quot;&gt;Typed URL History&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Reads your history, and shows the top ten pages you go to by typing the URL. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.getVisits
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/cld&quot;&gt;CLD&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the language of a tab | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.detectLanguage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/detectLanguage&quot;&gt;Detect Language&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Detects up to 3 languages and their percentages of the provided string | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.detectLanguage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/getMessage&quot;&gt;AcceptLanguage&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Returns accept languages of the browser | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getAcceptLanguages
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/localizedHostedApp&quot;&gt;Minimal Localized Hosted App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This is the minimal set of data required to upload a localized hosted application to the web store. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/idle/idle_simple&quot;&gt;Idle - Simple Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates the Idle API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;idle.onStateChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;idle.queryState
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/input.ime/basic&quot;&gt;Test IME&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A simple IME that converts all keystrokes to upper case. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.commitText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onActivate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onBlur
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onDeactivated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onFocus
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onKeyEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/messaging/timer&quot;&gt;Message Timer&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Times how long it takes to send a message to a content script and back. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/nativeMessaging/app&quot;&gt;Native Messaging Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Send a message to a native application. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connectNative
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/notifications&quot;&gt;Notification Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows off desktop notifications, which are &quot;toast&quot; windows that pop up on the desktop. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/omnibox/newtab_search&quot;&gt;Omnibox New Tab Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Type &#39;nt&#39; plus a search term into the Omnibox to open search in new tab. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/omnibox/simple-example&quot;&gt;Omnibox Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;To use, type &#39;omnix&#39; plus a search term into the Omnibox. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/override/blank_ntp&quot;&gt;Blank new tab page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override the new tab page with a blank one | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/override/override_igoogle&quot;&gt;iGoogle new tab page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override the new tab page with iGoogle | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/pageaction_by_content&quot;&gt;Page action by content&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows a page action for HTML pages containing a video | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/pageaction_by_url&quot;&gt;Page action by URL&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows a page action for urls which have the letter &#39;g&#39; in them. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/set_icon&quot;&gt;Animated Page Action&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension adds an animated browser action to the toolbar. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.hide
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/permissions/extension-questions&quot;&gt;Top Chrome Extension Questions&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample demonstration of the optional permissions API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.onAdded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/power&quot;&gt;Keep Awake&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override system power-saving settings. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;power.releaseKeepAwake
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;power.requestKeepAwake
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/preferences/allowThirdPartyCookies&quot;&gt;Block/allow third-party cookies API example extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample extension which demonstrates how to access a preference. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/preferences/enableReferrer&quot;&gt;Block/allow referrer API example extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample extension which demonstrates how to access a preference. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/printing&quot;&gt;Print Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sends print job directly to the printers installed on the Chromebook | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.getPrinterInfo
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.getPrinters
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.submitJob
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/printingMetrics&quot;&gt;Print Job History&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Reads your print history and displays the recent print jobs. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printingMetrics.getPrintJobs
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printingMetrics.onPrintJobFinished
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/processes/process_monitor&quot;&gt;Process Monitor&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a browser action that monitors resource usage of all browser processes. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.onUpdatedWithMemory
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.terminate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/processes/show_tabs&quot;&gt;Show Tabs in Process&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a browser action showing which tabs share the current tab&#39;s process. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.getProcessIdForTab
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/storage/stylizr&quot;&gt;Stylizr&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Spruce up your pages with custom CSS. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.local
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.insertCSS
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabCapture&quot;&gt;Tab Capture Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Capture a tab and play in a | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.capture
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.getMediaStreamId
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/inspector&quot;&gt;Tab Inspector&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Utility for working with the extension tabs api | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onAttached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onDetached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getLastFocused
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onFocusChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/pin&quot;&gt;Keyboard Pin&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Creates a keyboard shortcut (Alt + Shift + P) to toggle the pinned state of the currently selected tab | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/screenshot&quot;&gt;Test Screenshot Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate screenshot functionality in the chrome.tabs api. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.captureVisibleTab
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/zoom&quot;&gt;Tabs Zoom API Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension allows the user to explore features of the new tabs zoom api. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getZoom
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getZoomSettings
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onZoomChange
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.setZoom
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.setZoomSettings
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/topsites/basic&quot;&gt;Top Sites&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows the top sites in a browser action | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/topsites/magic8ball&quot;&gt;NTP prototyping extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;extension to prototype new NTP designs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/ttsEngine/console_tts_engine&quot;&gt;Console TTS Engine&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A &quot;silent&quot; TTS engine that prints text to a small window rather than synthesizing speech. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;ttsEngine.onSpeak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;ttsEngine.onStop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/water_alarm_notification&quot;&gt;Drink Water Event Popup&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates usage and features of the event page by reminding user to drink water | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.clearAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onButtonClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webNavigation/basic&quot;&gt;WebNavigation Tech Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstration of the WebNavigation extension API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onBeforeNavigate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCommitted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCompleted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCreatedNavigationTarget
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onErrorOccurred
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onHistoryStateUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/capturevisibleregion&quot;&gt;Webview transparency&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample of the webview.captureVisibleRegion api | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/comm_demo_app&quot;&gt;WebView Extension Communications Demo: App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/comm_demo_ext&quot;&gt;WebView Extension Communications Demo: Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Provides content scripts to an app hosting a WebView. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.id
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnectExternal
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/windows/merge_windows&quot;&gt;Merge Windows&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Merges all of the browser&#39;s windows into the current window | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/apps/background-simple&quot;&gt;Simple Background App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/apps/calculator/app&quot;&gt;Calculator&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A simple calculator. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/app_launcher&quot;&gt;App Launcher&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Get access to your apps in a browser action | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.launchApp
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/buildbot&quot;&gt;Chromium Buildbot Monitor&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the status of the Chromium buildbot in the toolbar. Click to see more detailed status in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/calendar&quot;&gt;Google Calendar Checker (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Quickly see the time until your next meeting from any of your calendars. Click on the button to be taken to your calendar. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.uninstallSelf
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onButtonClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.id
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/catblock&quot;&gt;CatBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;I can&#39;t has cheezburger! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onBeforeRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/catifier&quot;&gt;Catifier&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Moar cats! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.IgnoreRules
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RedirectRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RequestMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/chrome_search&quot;&gt;Chromium Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Add support to the omnibox to search the Chromium source code. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputCancelled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputStarted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.setDefaultSuggestion
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/constant_context&quot;&gt;Constant Context&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Highlights elements with keywords on developer.chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/download_images&quot;&gt;Download Images&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays all webpage images and allows user to download | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/email_this_page&quot;&gt;Email this page (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension adds an email button to the toolbar which allows you to email the page link using your default mail client or Gmail. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/fx&quot;&gt;Chrome Sounds&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Enjoy a more magical and immersive experience when browsing the web using the power of sound. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onAttached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onDetached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onFocusChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/gdocs&quot;&gt;Google Document List Viewer&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates how to use OAuth to connect the Google Documents List Data API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/gmail&quot;&gt;Google Mail Checker&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the number of unread messages in your Google Mail inbox. You can also click the button to open your inbox. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onDOMContentLoaded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onDOMContentLoaded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/imageinfo&quot;&gt;Imageinfo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Get image info for images, including EXIF data | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/irc/app&quot;&gt;Chromium IRC App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/managed_bookmarks&quot;&gt;Managed Bookmarks&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds bookmarks configured by your system administrator to Chrome. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.getChildren
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.removeTree
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/mappy&quot;&gt;Mappy&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Finds addresses in the web page you&#39;re on and pops up a map window. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/maps_app&quot;&gt;Google Maps&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news&quot;&gt;News Reader (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the latest stories from Google News in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news_a11y&quot;&gt;News Reader&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the first 5 items from the &#39;Google News - top news&#39; RSS feed in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news_i18n&quot;&gt;News Reader&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the first 5 items from the &#39;$Google$ News - top news&#39; RSS feed in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/no_cookies&quot;&gt;No Cookies&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Removes &#39;Cookie&#39; and &#39;Set-Cookie&#39; headers. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onBeforeSendHeaders
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onHeadersReceived
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/oauth_contacts&quot;&gt;Sample - OAuth Contacts&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s contacts service and display a list of your contacts. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/optional_permissions&quot;&gt;Optional Permissions New Tab&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates optional permissions in extensions | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/plugin_settings&quot;&gt;Per-plugin content settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Customize your content setting for different plugins. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.plugins
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.getResourceIdentifiers
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/proxy_configuration&quot;&gt;Proxy Extension API Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Set Chrome-specific proxies; a demonstration of Chrome&#39;s Proxy API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;proxy.onProxyError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/speak_selection&quot;&gt;Speak Selection&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Speaks the current selection out loud. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/talking_alarm_clock&quot;&gt;Talking Alarm Clock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A clock with two configurable alarms that will play a sound and speak a phrase of your choice. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/ttsdebug&quot;&gt;TTS Debug&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Tool for developers of Chrome TTS engine extensions to help them test their engines are implementing the API correctly. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/ttsdemo&quot;&gt;TTS Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demo Chrome&#39;s synthesized text-to-speech capabilities. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.isSpeaking
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/howto/sandbox&quot;&gt;Sandboxed Frame&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate use of handlebars inside a sandboxed frame | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/howto/tab_shortcuts&quot;&gt;Tab Shortcuts&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Allows pinning and duplication of tabs via keyboard shortcuts. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.duplicate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/analytics&quot;&gt;Event Tracking with Google Analytics&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A sample extension which uses Google Analytics to track usage. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/broken_background_color&quot;&gt;Broken Background Color&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Fix an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/get_started&quot;&gt;Getting Started Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Build an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/get_started_complete&quot;&gt;Getting Started Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Build an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/getstarted&quot;&gt;Getting started example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension allows the user to change the background color of the current page. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.local
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.sync
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/hello_extensions&quot;&gt;Hello Extensions&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Base Level Extension | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/oauth_starter&quot;&gt;OAuth Tutorial FriendBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s People API and display contacts photos. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;identity.getAuthToken
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/oauth_tutorial_complete&quot;&gt;OAuth Tutorial FriendBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s People API and display contacts photos. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;identity.getAuthToken
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mikecao/umami</title>
      <link>https://github.com/mikecao/umami</link>
      <description>&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;umami&lt;/h1&gt; 
&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href=&quot;https://umami.is/docs/&quot;&gt;https://umami.is/docs/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing from source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js 10.13 or newer&lt;/li&gt; 
 &lt;li&gt;A database (MySQL or Postgresql)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the source code and install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/mikecao/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create database tables&lt;/h3&gt; 
&lt;p&gt;Umami supports &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;Postgresql&lt;/a&gt;. Create a database for your Umami installation and install the tables with the included scripts.&lt;/p&gt; 
&lt;p&gt;For MySQL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mysql -u username -p databasename &amp;lt; sql/schema.mysql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Postgresql:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;psql -h hostname -U username -d databasename -f sql/schema.postgresql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will also create a login account with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Configure umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DATABASE_URL=(connection url)
HASH_SALT=(any random string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection url is in the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;postgresql://username:mypassword@localhost:5432/mydb

mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;HASH_SALT&lt;/code&gt; is used to generate unique values for your installation.&lt;/p&gt; 
&lt;h3&gt;Build the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/&quot;&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href=&quot;https://nextjs.org/docs/api-reference/cli#production&quot;&gt;port&lt;/a&gt; to serve the application directly.&lt;/p&gt; 
&lt;h2&gt;Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://nextjs.org/learn
 &lt;!-- raw HTML omitted --&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/arunoda-zeit&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;) – Knight-Mozilla / Coral Project&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>eslint/eslint</title>
      <link>https://github.com/eslint/eslint</link>
      <description>&lt;p&gt;Find and fix problems in your JavaScript code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/eslint.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/eslint/eslint/actions&quot;&gt;&lt;img src=&quot;https://github.com/eslint/eslint/workflows/CI/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://opencollective.com/eslint&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/eslint&quot; alt=&quot;Open Collective Backers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/eslint&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/eslint&quot; alt=&quot;Open Collective Sponsors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/user?screen_name=geteslint&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/geteslint?label=Follow&amp;amp;style=social&quot; alt=&quot;Follow us on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;ESLint&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://eslint.org&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring&quot;&gt;Configuring&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/docs/rules/&quot;&gt;Rules&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing&quot;&gt;Contributing&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing/reporting-bugs&quot;&gt;Reporting Bugs&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/conduct&quot;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/geteslint&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;Mailing List&lt;/a&gt; | &lt;a href=&quot;https://eslint.org/chat&quot;&gt;Chat Room&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESLint uses &lt;a href=&quot;https://github.com/eslint/espree&quot;&gt;Espree&lt;/a&gt; for JavaScript parsing.&lt;/li&gt; 
 &lt;li&gt;ESLint uses an AST to evaluate patterns in code.&lt;/li&gt; 
 &lt;li&gt;ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#installation-and-usage&quot;&gt;Installation and Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#filing-issues&quot;&gt;Filing Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#faq&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#security-policy&quot;&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#semantic-versioning-policy&quot;&gt;Semantic Versioning Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#stylistic-rule-updates&quot;&gt;Stylistic Rule Updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#team&quot;&gt;Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eslint/eslint/master/#technology-sponsors&quot;&gt;Technology Sponsors&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;Prerequisites: &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; (&lt;code&gt;^10.12.0&lt;/code&gt;, or &lt;code&gt;&amp;gt;=12.0.0&lt;/code&gt;) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)&lt;/p&gt; 
&lt;p&gt;You can install ESLint using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install eslint --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should then set up a configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./node_modules/.bin/eslint --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can run ESLint on any file or directory like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./node_modules/.bin/eslint yourfile.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;After running &lt;code&gt;eslint --init&lt;/code&gt;, you&#39;ll have a &lt;code&gt;.eslintrc&lt;/code&gt; file in your directory. In it, you&#39;ll see some rules configured like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;rules&quot;: {
        &quot;semi&quot;: [&quot;error&quot;, &quot;always&quot;],
        &quot;quotes&quot;: [&quot;error&quot;, &quot;double&quot;]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The names &lt;code&gt;&quot;semi&quot;&lt;/code&gt; and &lt;code&gt;&quot;quotes&quot;&lt;/code&gt; are the names of &lt;a href=&quot;https://eslint.org/docs/rules&quot;&gt;rules&lt;/a&gt; in ESLint. The first value is the error level of the rule and can be one of these values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&quot;off&quot;&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; - turn the rule off&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;warn&quot;&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; - turn the rule on as a warning (doesn&#39;t affect exit code)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;error&quot;&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; - turn the rule on as an error (exit code will be 1)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring&quot;&gt;configuration docs&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;ESLint adheres to the &lt;a href=&quot;https://eslint.org/conduct&quot;&gt;JS Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Filing Issues&lt;/h2&gt; 
&lt;p&gt;Before filing an issue, please be sure to read the guidelines for what you&#39;re reporting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing/reporting-bugs&quot;&gt;Bug Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing/new-rules&quot;&gt;Propose a New Rule&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing/rule-changes&quot;&gt;Proposing a Rule Change&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing/changes&quot;&gt;Request a Change&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h3&gt;I&#39;m using JSCS, should I migrate to ESLint?&lt;/h3&gt; 
&lt;p&gt;Yes. &lt;a href=&quot;https://eslint.org/blog/2016/07/jscs-end-of-life&quot;&gt;JSCS has reached end of life&lt;/a&gt; and is no longer supported.&lt;/p&gt; 
&lt;p&gt;We have prepared a &lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-from-jscs&quot;&gt;migration guide&lt;/a&gt; to help you convert your JSCS settings to an ESLint configuration.&lt;/p&gt; 
&lt;p&gt;We are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.&lt;/p&gt; 
&lt;h3&gt;Does Prettier replace ESLint?&lt;/h3&gt; 
&lt;p&gt;No, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.&lt;/p&gt; 
&lt;h3&gt;Why can&#39;t ESLint find my plugins?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure your plugins (and ESLint) are both in your project&#39;s &lt;code&gt;package.json&lt;/code&gt; as devDependencies (or dependencies, if your project uses ESLint at runtime).&lt;/li&gt; 
 &lt;li&gt;Make sure you have run &lt;code&gt;npm install&lt;/code&gt; and all your dependencies are installed.&lt;/li&gt; 
 &lt;li&gt;Make sure your plugins&#39; peerDependencies have been installed as well. You can use &lt;code&gt;npm view eslint-plugin-myplugin peerDependencies&lt;/code&gt; to see what peer dependencies &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt; has.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Does ESLint support JSX?&lt;/h3&gt; 
&lt;p&gt;Yes, ESLint natively supports parsing JSX syntax (this must be enabled in &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring&quot;&gt;configuration&lt;/a&gt;). Please note that supporting JSX syntax &lt;em&gt;is not&lt;/em&gt; the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn&#39;t recognize. We recommend using &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-react&quot;&gt;eslint-plugin-react&lt;/a&gt; if you are using React and want React semantics.&lt;/p&gt; 
&lt;h3&gt;What ECMAScript versions does ESLint support?&lt;/h3&gt; 
&lt;p&gt;ESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, 2019, and 2020. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring&quot;&gt;configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What about experimental features?&lt;/h3&gt; 
&lt;p&gt;ESLint&#39;s parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.&lt;/p&gt; 
&lt;p&gt;In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use the &lt;a href=&quot;https://github.com/babel/babel-eslint&quot;&gt;babel-eslint&lt;/a&gt; parser and &lt;a href=&quot;https://github.com/babel/eslint-plugin-babel&quot;&gt;eslint-plugin-babel&lt;/a&gt; to use any option available in Babel.&lt;/p&gt; 
&lt;p&gt;Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;TC39 process&lt;/a&gt;), we will accept issues and pull requests related to the new feature, subject to our &lt;a href=&quot;https://eslint.org/docs/developer-guide/contributing&quot;&gt;contributing guidelines&lt;/a&gt;. Until then, please use the appropriate parser and plugin(s) for your experimental feature.&lt;/p&gt; 
&lt;h3&gt;Where to ask for help?&lt;/h3&gt; 
&lt;p&gt;Join our &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;Mailing List&lt;/a&gt; or &lt;a href=&quot;https://eslint.org/chat&quot;&gt;Chatroom&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why doesn&#39;t ESLint lock dependency versions?&lt;/h3&gt; 
&lt;p&gt;Lock files like &lt;code&gt;package-lock.json&lt;/code&gt; are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.&lt;/p&gt; 
&lt;p&gt;Packages like &lt;code&gt;eslint&lt;/code&gt; that get published to the npm registry do not include lock files. &lt;code&gt;npm install eslint&lt;/code&gt; as a user will respect version constraints in ESLint&#39;s &lt;code&gt;package.json&lt;/code&gt;. ESLint and its dependencies will be included in the user&#39;s lock file if one exists, but ESLint&#39;s own lock file would not be used.&lt;/p&gt; 
&lt;p&gt;We intentionally don&#39;t lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.&lt;/p&gt; 
&lt;p&gt;The Twilio blog has a &lt;a href=&quot;https://www.twilio.com/blog/lockfiles-nodejs&quot;&gt;deeper dive&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Releases&lt;/h2&gt; 
&lt;p&gt;We have scheduled releases every two weeks on Friday or Saturday. You can follow a &lt;a href=&quot;https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease&quot;&gt;release issue&lt;/a&gt; for updates about the scheduling of any particular release.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Security Policy&lt;/h2&gt; 
&lt;p&gt;ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full &lt;a href=&quot;https://github.com/eslint/.github/blob/master/SECURITY.md&quot;&gt;security policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Semantic Versioning Policy&lt;/h2&gt; 
&lt;p&gt;ESLint follows &lt;a href=&quot;https://semver.org&quot;&gt;semantic versioning&lt;/a&gt;. However, due to the nature of ESLint as a code quality tool, it&#39;s not always clear when a minor or major version bump occurs. To help clarify this for everyone, we&#39;ve defined the following semantic versioning policy for ESLint:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Patch release (intended to not break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;A bug fix in a rule that results in ESLint reporting fewer linting errors.&lt;/li&gt; 
   &lt;li&gt;A bug fix to the CLI or core (including formatters).&lt;/li&gt; 
   &lt;li&gt;Improvements to documentation.&lt;/li&gt; 
   &lt;li&gt;Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.&lt;/li&gt; 
   &lt;li&gt;Re-releasing after a failed release (i.e., publishing a release that doesn&#39;t work for anyone).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Minor release (might break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;A bug fix in a rule that results in ESLint reporting more linting errors.&lt;/li&gt; 
   &lt;li&gt;A new rule is created.&lt;/li&gt; 
   &lt;li&gt;A new option to an existing rule that does not result in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;An existing rule is deprecated.&lt;/li&gt; 
   &lt;li&gt;A new CLI capability is created.&lt;/li&gt; 
   &lt;li&gt;New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).&lt;/li&gt; 
   &lt;li&gt;A new formatter is created.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and will result in strictly fewer linting errors (e.g., rule removals).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Major release (likely to break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and may result in new linting errors (e.g., rule additions, most rule option updates).&lt;/li&gt; 
   &lt;li&gt;A new option to an existing rule that results in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;An existing formatter is removed.&lt;/li&gt; 
   &lt;li&gt;Part of the public API is removed or changed in an incompatible way. The public API includes: 
    &lt;ul&gt; 
     &lt;li&gt;Rule schemas&lt;/li&gt; 
     &lt;li&gt;Configuration schema&lt;/li&gt; 
     &lt;li&gt;Command-line options&lt;/li&gt; 
     &lt;li&gt;Node.js API&lt;/li&gt; 
     &lt;li&gt;Rule, formatter, parser, plugin APIs&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (&lt;code&gt;~&lt;/code&gt;) in &lt;code&gt;package.json&lt;/code&gt; e.g. &lt;code&gt;&quot;eslint&quot;: &quot;~3.1.0&quot;&lt;/code&gt; to guarantee the results of your builds.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Stylistic Rule Updates&lt;/h2&gt; 
&lt;p&gt;Stylistic rules are frozen according to &lt;a href=&quot;https://eslint.org/blog/2020/05/changes-to-rules-policies&quot;&gt;our policy&lt;/a&gt; on how we evaluate new rules and rule changes. This means:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt;: We will still fix bugs in stylistic rules.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New ECMAScript features&lt;/strong&gt;: We will also make sure stylistic rules are compatible with new ECMAScript features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New options&lt;/strong&gt;: We will &lt;strong&gt;not&lt;/strong&gt; add any new options to stylistic rules unless an option is the only way to fix a bug or support a newly-added ECMAScript feature.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Team&lt;/h2&gt; 
&lt;p&gt;These folks keep the project moving and are resources for help.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Technical Steering Committee (TSC)&lt;/h3&gt; 
&lt;p&gt;The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Reviewers&lt;/h3&gt; 
&lt;p&gt;The people who review and implement new features.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Committers&lt;/h3&gt; 
&lt;p&gt;The people who review and fix bugs and help triage issues.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The following companies, organizations, and individuals support ESLint&#39;s ongoing maintenance and development. &lt;a href=&quot;https://opencollective.com/eslint&quot;&gt;Become a Sponsor&lt;/a&gt; to get your logo on our README and website.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Technology Sponsors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Site search (&lt;a href=&quot;https://eslint.org&quot;&gt;eslint.org&lt;/a&gt;) is sponsored by &lt;a href=&quot;https://www.algolia.com&quot;&gt;Algolia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hosting for (&lt;a href=&quot;https://eslint.org&quot;&gt;eslint.org&lt;/a&gt;) is sponsored by &lt;a href=&quot;https://www.netlify.com&quot;&gt;Netlify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Password management is sponsored by &lt;a href=&quot;https://www.1password.com&quot;&gt;1Password&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/mrdoob/three.js#info=devDependencies&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/mrdoob/three.js&quot; alt=&quot;Dev Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/zdjankqw/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oblador/hush</title>
      <link>https://github.com/oblador/hush</link>
      <description>&lt;p&gt;Noiseless Browsing – Content Blocker for Safari&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;I’d recommend Hush to anyone who uses Safari&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;– John Gruber, &lt;a href=&quot;https://daringfireball.net/linked/2021/01/23/hush&quot;&gt;Daring Fireball&lt;/a&gt; 23 January 2021&lt;/p&gt; 
&lt;p&gt;Hush is private, free and fast – &lt;a href=&quot;https://oblador.github.io/hush/&quot;&gt;read more on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;h3&gt;iOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/app/id1544743900&quot;&gt;&lt;img src=&quot;https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Requires iOS 14 or later.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/app/id1544743900&quot;&gt;&lt;img src=&quot;https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/macappstore-lrg.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Requires macOS 11 or later. &lt;a href=&quot;https://github.com/oblador/hush/releases/latest/download/Hush.dmg&quot;&gt;Direct download&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Private&lt;/h3&gt; 
&lt;p&gt;Unlike some blockers, Hush has absolutely no access to your browser habits or passwords. Nor does it track behavior or collect crash reports - nothing leaves your device.&lt;/p&gt; 
&lt;h3&gt;Free&lt;/h3&gt; 
&lt;p&gt;Everything is free of charge. Forever. No in-app purchases, no nonsense. However, any help towards covering the yearly Apple Developer fee is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;Fast&lt;/h3&gt; 
&lt;p&gt;The app is primarily a host of rules that integrates with Safari in a native, lightweight way, making the blocking efficient and fast.&lt;/p&gt; 
&lt;h3&gt;Simple&lt;/h3&gt; 
&lt;p&gt;It&#39;s as easy as downloading the app and enabling it in Safari settings ⭢ Content Blockers. No configuration or maintenance needed.&lt;/p&gt; 
&lt;h3&gt;Open Source&lt;/h3&gt; 
&lt;p&gt;The source code is published under the permissive MIT license.&lt;/p&gt; 
&lt;h3&gt;Modern&lt;/h3&gt; 
&lt;p&gt;Hush is written in Apple&#39;s latest programming paradigm Swift UI and has native support for M1 processors.&lt;/p&gt; 
&lt;h3&gt;Tiny&lt;/h3&gt; 
&lt;p&gt;The app download clocks in at less than half a megabyte.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;Does Hush accept or deny permission to site cookies?&lt;/h4&gt; 
&lt;p&gt;Neither! Hush will block specific scripts and elements on the website, but can&#39;t and won&#39;t interact with the website itself and thus won&#39;t click on any buttons. According to GDPR laws the user needs to explicitly consent to non-essential cookies and tracking.&lt;/p&gt; 
&lt;h4&gt;Can&#39;t websites still use cookies/tracking without my consent?&lt;/h4&gt; 
&lt;p&gt;Absolutely, being compliant and respecting your choices is up to the website owners. It&#39;s possible to block all cookies, but that also breaks a lot of websites. I personally use incognito mode so I don&#39;t have to trust website owners&#39; good intents and implementations, but that means they constantly &quot;forget&quot; my cookie choices. Ergo Hush.&lt;/p&gt; 
&lt;h4&gt;Does it block ads?&lt;/h4&gt; 
&lt;p&gt;Hush doesn&#39;t block ads on purpose. Nobody wants to read nor display cookie notices. But ads – however annoying – might be crucial for makers and businesses on the internet and I don&#39;t want to steal their lunch.&lt;/p&gt; 
&lt;h4&gt;Why does website X display nags with Hush enabled?&lt;/h4&gt; 
&lt;p&gt;On some sites it&#39;s not possible to block/hide cookie notices or tracking consent screens without also breaking the site. Other sites have obfuscations in place to prevent blocking. Regardless, you may open an issue on GitHub or &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeox139lwja1Yl94dIZLSg8Ga8Wt4PAWSmRwtIe7NPb7WtHMA/viewform&quot;&gt;fill in a form&lt;/a&gt; to report it.&lt;/p&gt; 
&lt;h4&gt;Why does website X break with Hush enabled?&lt;/h4&gt; 
&lt;p&gt;First ensure that it&#39;s actually Hush breaking it by disabling it in settings and reloading the page. If it works after this, please report it by opening an issue.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;To build the app in Xcode, you need to have &lt;a href=&quot;https://deno.land&quot;&gt;deno&lt;/a&gt; installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install deno
xcode-select --install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;p&gt;Run blocklist unit tests with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make test_unit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run UI tests with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make test_ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Blocklist&lt;/h3&gt; 
&lt;p&gt;Compile blocklist only with (part of Xcode build):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make blocklist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Hush: &lt;a href=&quot;http://opensource.org/licenses/mit-license.html&quot;&gt;MIT License&lt;/a&gt;. © Joel Arvidsson 2020-present&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://easylist.to&quot;&gt;Fanboy List&lt;/a&gt;: &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;CC BY 3.0&lt;/a&gt;. © Rick Petnel and contributors 2005&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typescript-cheatsheets/react</title>
      <link>https://github.com/typescript-cheatsheets/react</link>
      <description>&lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/setup&quot;&gt;&lt;strong&gt;Web docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn&quot;&gt;中文翻译&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet-es&quot;&gt;&lt;strong&gt;Español&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-pt&quot;&gt;&lt;strong&gt;Português&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/CONTRIBUTING.md&quot;&gt;Contribute!&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;Ask!&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;:wave: This repo is maintained by &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ferdaber&quot;&gt;@ferdaber&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;@eps1lon&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jsjoeio&quot;&gt;@jsjoeio&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/arvincheenu&quot;&gt;@arvindcheenu&lt;/a&gt;, we&#39;re so happy you want to try out TypeScript with React! If you see anything wrong or missing, please &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;file an issue&lt;/a&gt;! :+1:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/wTGS5z9&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/508357248330760243.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;http://twitter.com/home?status=Awesome%20%40Reactjs%20%2B%20%40TypeScript%20cheatsheet%20by%20%40ferdaber%2C%20%40sebsilbermann%2C%20%40swyx%20%26%20others!%20https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?label=Help%20spread%20the%20word%21&amp;amp;style=social&amp;amp;url=https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;All React + TypeScript Cheatsheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;The Basic Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/README.md#basic-cheatsheet-table-of-contents&quot;&gt;&lt;code&gt;/README.md&lt;/code&gt;&lt;/a&gt;) is focused on helping React devs just start using TS in React &lt;strong&gt;apps&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Focus on opinionated best practices, copy+pastable examples.&lt;/li&gt; 
   &lt;li&gt;Explains some basic TS types usage and setup along the way.&lt;/li&gt; 
   &lt;li&gt;Answers the most Frequently Asked Questions.&lt;/li&gt; 
   &lt;li&gt;Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.&lt;/li&gt; 
   &lt;li&gt;The goal is to get effective with TS without learning &lt;em&gt;too much&lt;/em&gt; TS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Advanced Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro&quot;&gt;&lt;code&gt;/ADVANCED.md&lt;/code&gt;&lt;/a&gt;) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React &lt;strong&gt;libraries&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It also has miscellaneous tips and tricks for pro users.&lt;/li&gt; 
   &lt;li&gt;Advice for contributing to DefinitelyTyped.&lt;/li&gt; 
   &lt;li&gt;The goal is to take &lt;em&gt;full advantage&lt;/em&gt; of TypeScript.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Migrating Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/intro&quot;&gt;&lt;code&gt;/MIGRATING.md&lt;/code&gt;&lt;/a&gt;) helps collate advice for incrementally migrating large codebases from JS or Flow, &lt;strong&gt;from people who have done it&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;We do not try to convince people to switch, only to help people who have already decided.&lt;/li&gt; 
   &lt;li&gt;⚠️This is a new cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The HOC Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/hoc/intro&quot;&gt;&lt;code&gt;/HOC.md&lt;/code&gt;&lt;/a&gt;) specifically teaches people to write HOCs with examples. 
  &lt;ul&gt; 
   &lt;li&gt;Familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/generics.html&quot;&gt;Generics&lt;/a&gt; is necessary.&lt;/li&gt; 
   &lt;li&gt;⚠️This is the newest cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Basic Cheatsheet Table of Contents&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-1-setup-typescript-with-react&quot;&gt;Section 1: Setup TypeScript with React&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usestate&quot;&gt;useState&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usereducer&quot;&gt;useReducer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useeffect&quot;&gt;useEffect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useref&quot;&gt;useRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useimperativehandle&quot;&gt;useImperativeHandle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#you-may-not-need-defaultprops&quot;&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#consuming-props-of-a-component-with-defaultprops&quot;&gt;Consuming Props of a Component with defaultProps&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#problem-statement&quot;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#solution&quot;&gt;Solution&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#misc-discussions-and-knowledge&quot;&gt;Misc Discussions and Knowledge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getderivedstatefromprops&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#extended-example&quot;&gt;Extended Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#option-1-using-react-error-boundary&quot;&gt;Option 1: Using react-error-boundary&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#options-2-writing-your-custom-error-boundary-component&quot;&gt;Options 2: Writing your custom error boundary component&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-types&quot;&gt;Troubleshooting Handbook: Types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-fixing-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-globals-images-and-other-non-ts-files&quot;&gt;Troubleshooting Handbook: Globals, Images and other non-TS files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources-1&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;
    &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing defaultProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#types-or-interfaces&quot;&gt;Types or Interfaces?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getDerivedStateFromProps&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-troubleshooting-handbook-types&quot;&gt;Basic Troubleshooting Handbook: Types&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;
      &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Bugs in official typings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-codebases-to-learn-from&quot;&gt;Recommended React + TypeScript codebases to learn from&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Section 1: Setup TypeScript with React&lt;/h1&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;good understanding of &lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/basic-types.html&quot;&gt;TypeScript Types&lt;/a&gt; (&lt;a href=&quot;http://2ality.com/2018/04/type-notation-typescript.html&quot;&gt;2ality&#39;s guide&lt;/a&gt; is helpful. If you’re an absolute beginner in TypeScript, check out &lt;a href=&quot;https://ts.chibicode.com/todo/&quot;&gt;chibicode’s tutorial&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;https://reactjs.org/docs/static-type-checking.html#typescript&quot;&gt;the TypeScript section in the official React docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=2&amp;amp;esModuleInterop=true&amp;amp;e=181#example/typescript-with-react&quot;&gt;the React section of the new TypeScript playground&lt;/a&gt; (optional: also step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This guide will always assume you are starting with the latest TypeScript version. Notes for older versions will be in expandable &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags.&lt;/p&gt; 
&lt;h2&gt;React + TypeScript Starter Kits&lt;/h2&gt; 
&lt;p&gt;Cloud setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwCwAUKJLHAN5wCuqWAyjMhhYANFx4BRAgSz44AXzhES5Snhi1GjLAA8W8XBAB2qeAGEInQ0KjjtycABsscALxwAFAEpXAPnaM4OANjeABtA0sYUR4Yc0iAXVcxPgEhdwAGT3oGAOTJaXx3L19-BkDAgBMIXE4QLCsAOhhgGCckgAMATQsgh2BcAGssCrgAEjYIqwVmutR27MC5LM0yuEoYTihDD1zAgB4K4AA3H13yvbAfbs5e-qGRiYspuBmsVD2Aekuz-YAjThgMCMcCMpj6gxcbGKLj8MTiVnck3gAGo4ABGTxyU6rcrlMF3OB1H5wT7-QFGbG4z6HE65ZYMOSMIA&quot;&gt;TypeScript Playground with React&lt;/a&gt; just if you are debugging types (and reporting issues), not for running code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ts.react.new&quot;&gt;CodeSandbox&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackblitz.com/edit/react-typescript-base&quot;&gt;Stackblitz&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local dev setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/typescript&quot;&gt;Next.js&lt;/a&gt;: &lt;code&gt;npx create-next-app -e with-typescript&lt;/code&gt; will create in your current folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-typescript&quot;&gt;Create React App&lt;/a&gt;: &lt;code&gt;npx create-react-app name-of-app --template typescript&lt;/code&gt; will create in new folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/build-tool.html#typescript&quot;&gt;Meteor&lt;/a&gt;: &lt;code&gt;meteor create --typescript name-of-my-new-typescript-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infinitered/ignite#use-ignite-andross-infinite-red-andross-boilerplate&quot;&gt;Ignite&lt;/a&gt; for React Native: &lt;code&gt;ignite new myapp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsdx.io/&quot;&gt;TSDX&lt;/a&gt;: &lt;code&gt;npx tsdx create mylib&lt;/code&gt; for Creating React+TS &lt;em&gt;libraries&lt;/em&gt;. (in future: &lt;a href=&quot;https://twitter.com/jaredpalmer/status/1346217789942591488&quot;&gt;TurboRepo&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Less mature tools still worth checking out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1282727239230996480?lang=en&quot;&gt;Vite&lt;/a&gt;: &lt;code&gt;npm init vite-app my-react-project --template react-ts&lt;/code&gt; (note - not yet v1.0, but very fast)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/#create-snowpack-app-(csa)&quot;&gt;Snowpack&lt;/a&gt;: &lt;code&gt;npx create-snowpack-app my-app --template app-template-react-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v2.docusaurus.io/docs/installation&quot;&gt;Docusaurus v2&lt;/a&gt; with &lt;a href=&quot;https://v2.docusaurus.io/docs/typescript-support&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v2.parceljs.org/languages/typescript/&quot;&gt;Parcel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpmorganchase/modular&quot;&gt;JP Morgan&#39;s &lt;code&gt;modular&lt;/code&gt;&lt;/a&gt;: CRA + TS + Yarn Workspaces toolkit. &lt;code&gt;yarn create modular-react-app &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Manual setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/basarat/typescript-react/tree/master/01%20bootstrap&quot;&gt;Basarat&#39;s guide&lt;/a&gt; for &lt;strong&gt;manual setup&lt;/strong&gt; of React + TypeScript + Webpack + Babel&lt;/li&gt; 
 &lt;li&gt;In particular, make sure that you have &lt;code&gt;@types/react&lt;/code&gt; and &lt;code&gt;@types/react-dom&lt;/code&gt; installed (&lt;a href=&quot;https://definitelytyped.org/&quot;&gt;Read more about the DefinitelyTyped project if you are unfamiliar&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;There are also many React + TypeScript boilerplates, please see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/recommended/resources/&quot;&gt;our Other Resources list&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Import React&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;
import * as ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/&quot;&gt;most futureproof way&lt;/a&gt; to import React. If you set &lt;code&gt;--allowSyntheticDefaultImports&lt;/code&gt; (or add &lt;code&gt;&quot;allowSyntheticDefaultImports&quot;: true&lt;/code&gt;) in your &lt;code&gt;tsconfig.json&lt;/code&gt; you can use more familiar imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Why &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; over &lt;code&gt;esModuleInterop&lt;/code&gt;? &lt;a href=&quot;https://twitter.com/drosenwasser/status/1003097042653073408&quot;&gt;Daniel Rosenwasser&lt;/a&gt; has said that it&#39;s better for webpack/parcel. For more discussion check out &lt;a href=&quot;https://github.com/wmonk/create-react-app-typescript/issues/214&quot;&gt;https://github.com/wmonk/create-react-app-typescript/issues/214&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You should also check &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;the new TypeScript docs for official descriptions between each compiler flag&lt;/a&gt;!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Section 2: Getting Started&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Function Components&lt;/h2&gt; 
&lt;p&gt;These can be written as normal functions that take a &lt;code&gt;props&lt;/code&gt; argument and return a JSX element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = { message: string }; /* could also use interface */
const App = ({ message }: AppProps) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You may see this in many React+TypeScript codebases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const App: React.FunctionComponent&amp;lt;{ message: string }&amp;gt; = ({ message }) =&amp;gt; (
  &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, the general consensus today is that &lt;code&gt;React.FunctionComponent&lt;/code&gt; (or the shorthand &lt;code&gt;React.FC&lt;/code&gt;) is &lt;a href=&quot;https://github.com/facebook/create-react-app/pull/8177&quot;&gt;discouraged&lt;/a&gt;. This is a nuanced opinion of course, but if you agree and want to remove &lt;code&gt;React.FC&lt;/code&gt; from your codebase, you can use &lt;a href=&quot;https://github.com/gndelia/codemod-replace-react-fc-typescript&quot;&gt;this jscodeshift codemod&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some differences from the &quot;normal function&quot; version:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;React.FunctionComponent&lt;/code&gt; is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It provides typechecking and autocomplete for static properties like &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note that there are some known issues using &lt;code&gt;defaultProps&lt;/code&gt; with &lt;code&gt;React.FunctionComponent&lt;/code&gt;. See &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;this issue for details&lt;/a&gt;. We maintain a separate &lt;code&gt;defaultProps&lt;/code&gt; section you can also look up.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It provides an implicit definition of &lt;code&gt;children&lt;/code&gt; (see below) - however there are some issues with the implicit &lt;code&gt;children&lt;/code&gt; type (e.g. &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006&quot;&gt;DefinitelyTyped#33006&lt;/a&gt;), and it might be better to be explicit about components that consume &lt;code&gt;children&lt;/code&gt;, anyway.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const Title: React.FunctionComponent&amp;lt;{ title: string }&amp;gt; = ({
  children,
  title,
}) =&amp;gt; &amp;lt;div title={title}&amp;gt;{children}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Using &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; instead&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;As of &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643&quot;&gt;@types/react 16.9.48&lt;/a&gt;, you can also use &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; type if you want to type &lt;code&gt;children&lt;/code&gt; explicitly. This is an interim solution until &lt;code&gt;FunctionComponent&lt;/code&gt; will accept no children by default (planned for &lt;code&gt;@types/react@^18.0.0&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}: Props) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo} {children}
    &amp;lt;/div&amp;gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo}
      {children}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;In the future&lt;/em&gt;, it may&amp;nbsp;automatically mark props as &lt;code&gt;readonly&lt;/code&gt;, though that&#39;s a moot point if the props object is destructured in the parameter list.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of &lt;code&gt;React.FunctionComponent&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;These patterns are not supported:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conditional rendering&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyConditionalComponent = ({ shouldRender = false }) =&amp;gt;
  shouldRender ? &amp;lt;div /&amp;gt; : false; // don&#39;t do this in JS either
const el = &amp;lt;MyConditionalComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because due to limitations in the compiler, function components cannot return anything other than a JSX expression or &lt;code&gt;null&lt;/code&gt;, otherwise it complains with a cryptic error message saying that the other type is not assignable to &lt;code&gt;Element&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; Array(5).fill(&amp;lt;div /&amp;gt;);
const el2 = &amp;lt;MyArrayComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Array.fill&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unfortunately just annotating the function type will not help so if you really need to return other exotic types that React supports, you&#39;d need to perform a type assertion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; (Array(5).fill(&amp;lt;div /&amp;gt;) as any) as JSX.Element;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;Hooks are &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031&quot;&gt;supported in &lt;code&gt;@types/react&lt;/code&gt; from v16.8 up&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;useState&lt;/h2&gt; 
&lt;p&gt;Type inference works very well most of the time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [val, toggle] = React.useState(false);
// `val` is inferred to be a boolean
// `toggle` only takes booleans
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also the &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt; section if you need to use a complex type that you&#39;ve relied on inference for.&lt;/p&gt; 
&lt;p&gt;However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser | null&amp;gt;(null);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;useReducer&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; for reducer actions. Don&#39;t forget to define the return type of reducer, otherwise TypeScript will infer it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = React.useReducer(reducer, initialState);
  return (
    &amp;lt;&amp;gt;
      Count: {state.count}
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&amp;gt;
        -
      &amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&amp;gt;
        +
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;In case you use the &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt; library to write reducer function, It provides a convenient helper of the format &lt;code&gt;Reducer&amp;lt;State, Action&amp;gt;&lt;/code&gt; which takes care of the return type for you.&lt;/p&gt; 
&lt;p&gt;So the above reducer example becomes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Reducer } from &#39;redux&#39;;

export function reducer: Reducer&amp;lt;AppState, Action&amp;gt;() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;useEffect&lt;/h2&gt; 
&lt;p&gt;When using &lt;code&gt;useEffect&lt;/code&gt;, take care not to return anything other than a function or &lt;code&gt;undefined&lt;/code&gt;, otherwise both TypeScript and React will yell at you. This can be subtle when using arrow functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(
    () =&amp;gt;
      setTimeout(() =&amp;gt; {
        /* do stuff */
      }, timerMs),
    [timerMs]
  );
  // bad example! setTimeout implicitly returns a number
  // because the arrow function body isn&#39;t wrapped in curly braces
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(() =&amp;gt; {
    setTimeout(() =&amp;gt; {
      /* do stuff */
    }, timerMs);
  }, [timerMs]);
  // better; use the void keyword to make sure you return undefined
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;useRef&lt;/h2&gt; 
&lt;p&gt;When using &lt;code&gt;useRef&lt;/code&gt;, you have two options when creating a ref container that does not have an initial value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const ref1 = useRef&amp;lt;HTMLElement&amp;gt;(null!);
const ref2 = useRef&amp;lt;HTMLElement&amp;gt;(null);
const ref3 = useRef&amp;lt;HTMLElement | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see the difference in &lt;a href=&quot;https://www.typescriptlang.org/play#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwCwAUI7hAHarwCCYYcAvHAAUASn4A+OAG9GjOHAD0CBLLnKGcxHABiwKBzgQwMYGxS4WUACbBWAczgwIcSxFwBXEFlYxkxtgDoVTQBJVmBjZAAbOAA3KLcsOAB3YEjogCNE1jc0-zgAGQBPG3tHOAAVQrAsAGVcKGAjOHTCuDdUErhWNgBabLSUVFQsWBNWA2qoX2hA9VU4AGFKXyx0AFk3H3TIxOwCOAB5dIArLHwgpHcoSm84MGJJmFbgdG74ZcsDVkjC2Y01f7yFQsdjvLAEACM-EwVBg-naWD2AB4ABLlNb5GpgZCsACiO083jEgn6kQAhMJ6HMQfpKJCFpE2IkBNg8HCEci0RisTj8VhCTBiaSKVSVIoAaoLnBQuFgFFYvFEikBpkujkMps4FgAB7VfCdLmY7F4gleOFwAByEHg7U63VYfXVg2Go1MhhG0ygf3mAHVUtF6jgYLtwUdTvguta4Bstjs9mGznCpVcbvB7u7YM90B8vj9vYgLkDqWxaeCAEzQ1n4eHDTnoo2801EknqykyObii5SmpnNifA5GMZmCzWOwOJwudwC3xjKUyiLROKRBLJf3NLJO9KanV64xj0koVifQ08k38s1Sv0DJZBxIx5DbRGhk6J5Nua5mu4PEZPOAvSNgsgnxsHmXZzIgRZyDSYIEAAzJWsI1k+BCovWp58gKcAAD5qmkQqtqKHbyCexoYRecw7IQugcAs76ptCdIQv4KZmoRcjyMRaGkU28A4aSKiUXAwwgpYtEfrcAh0mWzF0ax7bsZx3Lceetx8eqAlYPAMAABa6KJskSXAdKwTJ4kwGxCjyKy-bfK05SrDA8mWVagHAbZeScOY0CjqUE6uOgqDaRAOSfKqOYgb8KiMaZ9GSeCEIMkyMVyUwRHWYc7nSvAgUQEk6AjMQXpReWyWGdFLHeBZHEuTCQEZT8xVwaV8BxZCzUWZQMDvuMghBHASJVnCWhTLYApiH1chIqgxpGeCfCSIxAC+Yj3o+8YvvgSLyNNOLjeBGhTTNdLzVJy3reGMBbTtrB7RoB3XbNBAneCsHLatcbPhdV3GrdB1WYhw3IKNZq-W2DCLYRO7QPAljgsgORcDwVJAA&quot;&gt;this playground&lt;/a&gt;, thanks to &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/388&quot;&gt;this discussion with @rajivpunjabi&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first option will bypass nullchecks on &lt;code&gt;ref1.current&lt;/code&gt;, and is intended to be passed in to built-in &lt;code&gt;ref&lt;/code&gt; attributes that React will manage (because React handles setting the &lt;code&gt;current&lt;/code&gt; value for you).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;code&gt;null!&lt;/code&gt; is a non-null assertion operator (the &lt;code&gt;!&lt;/code&gt;). It asserts that any expression before it is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so if you have &lt;code&gt;useRef&amp;lt;HTMLElement&amp;gt;(null!)&lt;/code&gt; it means that you&#39;re instantiating the ref with a current value of &lt;code&gt;null&lt;/code&gt; but lying to TypeScript that it&#39;s not &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function MyComponent() {
  const ref1 = useRef&amp;lt;HTMLDivElement&amp;gt;(null!);
  useEffect(() =&amp;gt; {
    doSomethingWith(ref1.current);
    // TypeScript won&#39;t require null-check e.g. ref1 &amp;amp;&amp;amp; ref1.current
  });
  return &amp;lt;div ref={ref1}&amp;gt; etc &amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The second option will infer a &lt;code&gt;RefObject&lt;/code&gt; instead of a &lt;code&gt;MutableRefObject&lt;/code&gt;. This means there will be a type error ifyou try to assign to &lt;code&gt;ref2.current&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The third option will make &lt;code&gt;ref3.current&lt;/code&gt; mutable, and is intended for &quot;instance variables&quot; that you manage yourself.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function TextInputWithFocusButton() {
  // initialise with null, but tell TypeScript we are looking for an HTMLInputElement
  const inputEl = React.useRef&amp;lt;HTMLInputElement&amp;gt;(null);
  const onButtonClick = () =&amp;gt; {
    // strict null checks need us to check if inputEl and current exist.
    // but once current exists, it is of type HTMLInputElement, thus it
    // has the method focus! ✅
    if (inputEl &amp;amp;&amp;amp; inputEl.current) {
      inputEl.current.focus();
    }
  };
  return (
    &amp;lt;&amp;gt;
      {/* in addition, inputEl only can be used with input elements. Yay! */}
      &amp;lt;input ref={inputEl} type=&quot;text&quot; /&amp;gt;
      &amp;lt;button onClick={onButtonClick}&amp;gt;Focus the input&amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wFgAoCzAVwDsNgJa4AVJADxgElaxqYA6sBgALAGIQ01AM4AhfjCYAKAJRwA3hThwA9DrjBaw4CgA2waUjgB3YSLi1qp0wBo4AI35wYSZ6wCeYEgAymhQwGDw1lYoRHCmEBAA1oYA5nCY0HAozAASLACyADI8fDAAoqZIIEi0MFpwaEzS8IZllXAAvIjEMAB0MkjImAA8+cWl-JXVtTAAfEqOzioA3A1NtC1wTPIwirQAwuZoSV1wql1zGg3aenAt4RgOTqaNIkgn0g5ISAAmcDJvBA3h9TsBMAZeFNXjl-lIoEQ6nAOBZ+jddPpPPAmGgrPDEfAUS1pG5hAYvhAITBAlZxiUoRUqjU6m5RIDhOi7iIUF9RFYaqIIP9MlJpABCOCAUHJ0eDzm1oXAAGSKyHtUx9fGzNSacjaPWq6Ea6gI2Z9EUyVRrXV6gC+DRtVu0RBgxuYSnRIzm6O06h0ACpIdlfr9jExSQyOkxTP5GjkPFZBv9bKIDYSmbNpH04ABNFD+CV+nR2636kby+BETCddTlyo27w0zr4HycfC6L0lvUjLH7baHY5Jas7BRMI7AE42uYSUXed6pkY6HtMDulnQruCrCg2oA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;example from &lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;Stefan Baumgartner&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;useImperativeHandle&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;we dont have much here, but this is from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/106&quot;&gt;a discussion in our issues&lt;/a&gt;. Please contribute if you have anything to add!&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ListProps&amp;lt;ItemType&amp;gt; = {
  items: ItemType[];
  innerRef?: React.Ref&amp;lt;{ scrollToItem(item: ItemType): void }&amp;gt;;
};

function List&amp;lt;ItemType&amp;gt;(props: ListProps&amp;lt;ItemType&amp;gt;) {
  useImperativeHandle(props.innerRef, () =&amp;gt; ({
    scrollToItem() {},
  }));
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Hooks&lt;/h2&gt; 
&lt;p&gt;If you are returning an array in your Custom Hook, you will want to avoid type inference as TypeScript will infer a union type (when you actually want different types in each position of the array). Instead, use &lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#const-assertions&quot;&gt;TS 3.4 const assertions&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?target=5&amp;amp;jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuRgZyQBkIKACbBmAcwAUASjgBvCnDhoO3eAG1g3AcNFiANHF4wAyjBQwkAXTgBeRMRgA6HklPmkEzCgA2vKQG4FJRV4b0EhWzgJFAAFHBBNJAAuODjcRIAeFGYATwA+GRs8uSDFIzcLCRgoRiQA0rgiGEYoTlj4xMdMUR9vHIlpW2Lys0qvXzr68kUAX0DpxqRm1rgNLXDdAzDhaxRuYOZVfzgAehO4UUwkKH21ACMICG9UZgMYHLAkCEw4baFrUSqVARb5RB5PF5wAA+cHen1BfykaksFBmQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This way, when you destructure you actually get the right types based on destructure position.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you are &lt;a href=&quot;https://github.com/babel/babel/issues/9800&quot;&gt;having trouble with const assertions&lt;/a&gt;, you can also assert or define the function return types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as [
    boolean,
    (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; Promise&amp;lt;any&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A helper function that automatically types tuples can also be helpful if you write a lot of custom hooks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function tuplify&amp;lt;T extends any[]&amp;gt;(...elements: T) {
  return elements;
}

function useArray() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return [numberValue, functionValue]; // type is (number | (() =&amp;gt; void))[]
}

function useTuple() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return tuplify(numberValue, functionValue); // type is [number, () =&amp;gt; void]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Note that the React team recommends that custom hooks that return more than two values should use proper objects instead of tuples, however.&lt;/p&gt; 
&lt;h2&gt;More Hooks + TypeScript reading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&lt;/li&gt; 
 &lt;li&gt;https://fettblog.eu/typescript-react/hooks/#useref&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are writing a React Hooks library, don&#39;t forget that you should also expose your types for users to use.&lt;/p&gt; 
&lt;h2&gt;Example React Hooks + TypeScript Libraries:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/mweststrate/use-st8&lt;/li&gt; 
 &lt;li&gt;https://github.com/palmerhq/the-platform&lt;/li&gt; 
 &lt;li&gt;https://github.com/sw-yx/hooks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Class Components&lt;/h2&gt; 
&lt;p&gt;Within TypeScript, &lt;code&gt;React.Component&lt;/code&gt; is a generic type (aka &lt;code&gt;React.Component&amp;lt;PropType, StateType&amp;gt;&lt;/code&gt;), so you want to provide it with (optional) prop and state type parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  // using `interface` is also ok
  message: string;
};
type MyState = {
  count: number; // like this
};
class App extends React.Component&amp;lt;MyProps, MyState&amp;gt; {
  state: MyState = {
    // optional second annotation for better type inference
    count: 0,
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgFlqAFHMAZzgF44BvCuHAD0QuAFd2wAHYBzOAANpMJFEzok8uME4oANuwhwIAawFwQSduxQykALjjsYUaTIDcFAL4fyNOo2oAZRgUZW4+MzQIMSkYBykxEAAjFTdhUV1gY3oYAAttLx80XRQrOABBMDA4JAAPZSkAE05kdBgAOgBhXEgpJFiAHiZWCA4AGgDg0KQAPgjyQSdphyYpsJ5+BcF0ozAYYAgpPUckKKa4FCkpCBD9w7hMaDgUmGUoOD96aUwVfrQkMyCKIxOJwAAMZm8ZiITRUAAoAJTzbZwIgwMRQKRwOGA7YDRrAABuM1xKN4eW07TAbHY7QsVhsSE8fAptKWynawNinlJcAGQgJxNxCJ8gh55E8QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Don&#39;t forget that you can export/import/extend these types/interfaces for reuse.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;It isn&#39;t strictly necessary to annotate the &lt;code&gt;state&lt;/code&gt; class property, but it allows better type inference when accessing &lt;code&gt;this.state&lt;/code&gt; and also initializing the state.&lt;/p&gt; 
&lt;p&gt;This is because they work in two different ways, the 2nd generic type parameter will allow &lt;code&gt;this.setState()&lt;/code&gt; to work correctly, because that method comes from the base class, but initializing &lt;code&gt;state&lt;/code&gt; inside the component overrides the base implementation so you have to make sure that you tell the compiler that you&#39;re not actually doing anything different.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You often see sample code include &lt;code&gt;readonly&lt;/code&gt; to mark props and state immutable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  readonly message: string;
};
type MyState = {
  readonly count: number;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is not necessary as &lt;code&gt;React.Component&amp;lt;P,S&amp;gt;&lt;/code&gt; already marks them as immutable. (&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26813&quot;&gt;See PR and discussion!&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Class Methods&lt;/strong&gt;: Do it like normal, but just remember any arguments for your functions also need to be typed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{ message: string }, { count: number }&amp;gt; {
  state = { count: 0 };
  render() {
    return (
      &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
  increment = (amt: number) =&amp;gt; {
    // like this
    this.setState((state) =&amp;gt; ({
      count: state.count + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN5wQSBigDmSAFxw6MKMB5q4AXwA0cRWggBXHjG09rIAEZIoJgHwWKcHTBTccAC8FnBWtvZwAAwmANw+cET8bgAUAJTe5L6+RDDWUDxwKQnZcLJ8wABucBA8YtTAaADWQfLpwV4wABbAdCIGaETKdikAjGnGHiWlFt29ImA4YH3KqhrGsz19ugFIIuF2xtO+sgD0FZVTWdlp8ddH1wNDMsFFKCCRji5uGUFe8tNTqc4A0mkg4HM6NNISI6EgYABlfzcFI7QJ-IoA66lA6RNF7XFwADUcHeMGmxjStwSxjuxiAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Class Properties&lt;/strong&gt;: If you need to declare class properties for later use, just declare it like &lt;code&gt;state&lt;/code&gt;, but without assignment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  pointer: number; // like this
  componentDidMount() {
    this.pointer = 3;
  }
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} and {this.pointer}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN4U4cEEgYoA5kgBccOjCjAeGgNwUAvgD44i8sshHuUXTwCuIAEZIoJuAHo-OGpgAGskOBgAC2A6JTg0SQhpHhgAEWA+AFkIVxSACgBKGzjlKJiRBxTvOABeOABmMzs4cziifm9C4ublIhhXKB44PJLlOFk+YAA3S1GxmzK6CpwwJdV1LXM4FH4F6KXKp1aesdk-SZnRgqblY-MgA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Typing getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be implemented using hooks which can also help set up memoization.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As per &lt;a href=&quot;https://twitter.com/dan_abramov/status/1133878326358171650&quot;&gt;this tweet&lt;/a&gt;, defaultProps will eventually be deprecated. You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://twitter.com/hswolff/status/1133759319571345408&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The consensus is to use object default values.&lt;/p&gt; 
&lt;p&gt;Function Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age?: number };

const Greet = ({ age = 21 }: GreetProps) =&amp;gt; // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Class Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = {
  age?: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  render() {
    const { age = 21 } = this.props;
    /*...*/
  }
}

let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Type inference improved greatly for &lt;code&gt;defaultProps&lt;/code&gt; in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0+&lt;/a&gt;, although &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61&quot;&gt;some edge cases are still problematic&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Function Components&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age: number } &amp;amp; typeof defaultProps;
const defaultProps = {
  age: 21,
};

const Greet = (props: GreetProps) =&amp;gt; {
  // etc
};
Greet.defaultProps = defaultProps;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAOKVYwAKxY6ALxwA3igDmWAFxwAdgFcQAIyxQ4AXzgAyOM1YQCcACZYCyeQBte-VPVwRZqeCbOXrEAXGEi6cCdLgAJgBGABo6dXo6e0d4TixuLzgACjAbGXjuPg9UAEovAD5RXzhKGHkoWTgAHiNgADcCkTScgDpkSTgAeiQFZVVELvVqrrrGiPpMmFaXcytsz2FZtwXbOiA&quot;&gt;See this in TS Playground&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Class components&lt;/strong&gt;, there are &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/103#issuecomment-481061483&quot;&gt;a couple ways to do it&lt;/a&gt;(including using the &lt;code&gt;Pick&lt;/code&gt; utility type) but the recommendation is to &quot;reverse&quot; the props definition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = typeof Greet.defaultProps &amp;amp; {
  age: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = {
    age: 21,
  };
  /*...*/
}

// Type-checks! No type assertions needed!
let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; nuance for library authors&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The above implementations work fine for App creators, but sometimes you want to be able to export &lt;code&gt;GreetProps&lt;/code&gt; so that others can consume it. The problem here is that the way &lt;code&gt;GreetProps&lt;/code&gt; is defined, &lt;code&gt;age&lt;/code&gt; is a required prop when it isn&#39;t because of &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The insight to have here is that &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/66#issuecomment-453878710&quot;&gt;&lt;code&gt;GreetProps&lt;/code&gt; is the &lt;em&gt;internal&lt;/em&gt; contract for your component, not the &lt;em&gt;external&lt;/em&gt;, consumer facing contract&lt;/a&gt;. You could create a separate type specifically for export, or you could make use of the &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; utility:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// internal contract, should not be exported out
type GreetProps = {
  age?: number;
};

class Greet extends Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = { age: 21 };
}

// external contract
export type ApparentGreetProps = JSX.LibraryManagedAttributes&amp;lt;
  typeof Greet,
  GreetProps
&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;``This will work properly, although hovering over&lt;code&gt;ApparentGreetProps&lt;/code&gt;may be a little intimidating. You can reduce this boilerplate with the`ComponentProps` utility detailed below.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Consuming Props of a Component with defaultProps&lt;/h2&gt; 
&lt;p&gt;A component with &lt;code&gt;defaultProps&lt;/code&gt; may seem to have some required props that actually aren&#39;t.&lt;/p&gt; 
&lt;h3&gt;Problem Statement&lt;/h3&gt; 
&lt;p&gt;Here&#39;s what you want to do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface IProps {
  name: string;
}
const defaultProps = {
  age: 25,
};
const GreetComponent = ({ name, age }: IProps &amp;amp; typeof defaultProps) =&amp;gt; (
  &amp;lt;div&amp;gt;{`Hello, my name is ${name}, ${age}`}&amp;lt;/div&amp;gt;
);
GreetComponent.defaultProps = defaultProps;

const TestComponent = (props: React.ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// Property &#39;age&#39; is missing in type &#39;{ name: string; }&#39; but required in type &#39;{ age: number; }&#39;
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Solution&lt;/h3&gt; 
&lt;p&gt;Define a utility that applies &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ComponentProps&amp;lt;T&amp;gt; = T extends
  | React.ComponentType&amp;lt;infer P&amp;gt;
  | React.Component&amp;lt;infer P&amp;gt;
  ? JSX.LibraryManagedAttributes&amp;lt;T, P&amp;gt;
  : never;

const TestComponent = (props: ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// No error
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAMImQB2W3MABWJhUAHgAqAPjgBeOOLhYAHjD4ATdNjwwAdJ3ARe-cSyyjg3AlihwB0gD6Yqu-Tz4xzl67cl04cAH44ACkAZQANHQAZYAAjKGQoJgBZZG5kAHMsNQBBGBgoOIBXVTFxABofPzgALjheADdrejoLVSgCPDYASSEIETgAb2r0kCw61AKLDPoAXzpcQ0m4NSxOooAbQWF0OWH-TPG4ACYAVnK6WfpF7mWAcUosGFdDd1k4AApB+uQxysO4LM6r0dnAAGRwZisCAEFZrZCbbb9VAASlk0g+1VEamADUkgwABgAJLAbDYQSogJg-MZwYDoAAkg1GWFmlSZh1mBNmogA9Di8XQUfQHlgni8jLpVustn0BnJpQjZTsWrzeXANsh2gwbstxFhJhK3nIPmAdnUjfw5WIoVgYXBReKuK9+JI0TJpPs4JQYEUoNw4KIABYARjgvN8VwYargADkIIooMQoAslvBSe8JAbns7JTSsDIyAQIBAyOHJDQgA&quot;&gt;&lt;em&gt;See this in TS Playground&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Misc Discussions and Knowledge&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&lt;/li&gt; 
 &lt;li&gt;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&lt;/li&gt; 
 &lt;li&gt;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is just the current state and may be fixed in future.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;For TypeScript 2.9 and earlier, there&#39;s more than one way to do it, but this is the best advice we&#39;ve yet seen:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = Required&amp;lt;typeof MyComponent.defaultProps&amp;gt; &amp;amp; {
  /* additional props here */
};

export class MyComponent extends React.Component&amp;lt;Props&amp;gt; {
  static defaultProps = {
    foo: &quot;foo&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our former recommendation used the &lt;code&gt;Partial type&lt;/code&gt; feature in TypeScript, which means that the current interface will fulfill a partial version on the wrapped interface. In that way we can extend defaultProps without any changes in the types!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface IMyComponentProps {
  firstProp?: string;
  secondProp: IPerson[];
}

export class MyComponent extends React.Component&amp;lt;IMyComponentProps&amp;gt; {
  public static defaultProps: Partial&amp;lt;IMyComponentProps&amp;gt; = {
    firstProp: &quot;default&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The problem with this approach is it causes complex issues with the type inference working with &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;. Basically it causes the compiler to think that when creating a JSX expression with that component, that all of its props are optional.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt; and &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/61&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Typing Component Props&lt;/h2&gt; 
&lt;p&gt;This is intended as a basic orientation and reference for React developers familiarizing with TypeScript.&lt;/p&gt; 
&lt;h2&gt;Basic Prop Types Examples&lt;/h2&gt; 
&lt;p&gt;A list of TypeScript types you will likely use in a React+TypeScript app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = {
  message: string;
  count: number;
  disabled: boolean;
  /** array of a type! */
  names: string[];
  /** string literals to specify exact string values, with a union type to join them together */
  status: &quot;waiting&quot; | &quot;success&quot;;
  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */
  obj: object;
  obj2: {}; // almost the same as `object`, exactly the same as `Object`
  /** an object with any number of properties (PREFERRED) */
  obj3: {
    id: string;
    title: string;
  };
  /** array of objects! (common) */
  objArr: {
    id: string;
    title: string;
  }[];
  /** a dict object with any number of properties of the same type */
  dict1: {
    [key: string]: MyTypeHere;
  };
  dict2: Record&amp;lt;string, MyTypeHere&amp;gt;; // equivalent to dict1
  /** any function as long as you don&#39;t invoke it (not recommended) */
  onSomething: Function;
  /** function that doesn&#39;t take or return anything (VERY COMMON) */
  onClick: () =&amp;gt; void;
  /** function with named prop (VERY COMMON) */
  onChange: (id: number) =&amp;gt; void;
  /** alternative function type syntax that takes an event (VERY COMMON) */
  onClick(event: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void;
  /** an optional prop (VERY COMMON!) */
  optional?: OptionalType;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we have used the TSDoc &lt;code&gt;/** comment */&lt;/code&gt; style here on each prop. You can and are encouraged to leave descriptive comments on reusable components. For a fuller example and discussion, see our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/misc_concerns/#commenting-components&quot;&gt;Commenting Components&lt;/a&gt; section in the Advanced Cheatsheet.&lt;/p&gt; 
&lt;h2&gt;Useful React Prop Type Examples&lt;/h2&gt; 
&lt;p&gt;Relevant for components that accept other React components as props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare interface AppProps {
  children1: JSX.Element; // bad, doesnt account for arrays
  children2: JSX.Element | JSX.Element[]; // meh, doesn&#39;t accept strings
  children3: React.ReactChildren; // despite the name, not at all an appropriate type; it is a utility
  children4: React.ReactChild[]; // better, accepts array children
  children: React.ReactNode; // best, accepts everything (see edge case below)
  functionChildren: (name: string) =&amp;gt; React.ReactNode; // recommended function as a child render prop type
  style?: React.CSSProperties; // to pass through style props
  onChange?: React.FormEventHandler&amp;lt;HTMLInputElement&amp;gt;; // form events! the generic parameter is the type of event.target
  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring
  props: Props &amp;amp; React.ComponentPropsWithoutRef&amp;lt;&quot;button&quot;&amp;gt;; // to impersonate all the props of a button element and explicitly not forwarding its ref
  props2: Props &amp;amp; React.ComponentPropsWithRef&amp;lt;MyButtonWithForwardRef&amp;gt;; // to impersonate all the props of MyButtonForwardedRef and explicitly forwarding its ref
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This code typechecks but has a runtime error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = {
  children: React.ReactNode;
};

function Comp({ children }: Props) {
  return &amp;lt;div&amp;gt;{children}&amp;lt;/div&amp;gt;;
}
function App() {
  return &amp;lt;Comp&amp;gt;{{}}&amp;lt;/Comp&amp;gt;; // Runtime Error: Objects not valid as React Child!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because &lt;code&gt;ReactNode&lt;/code&gt; includes &lt;code&gt;ReactFragment&lt;/code&gt; which allows a &lt;code&gt;{}&lt;/code&gt; type, which is &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37596#issue-480260937&quot;&gt;too wide&lt;/a&gt;. Fixing this would break a lot of libraries, so for now you just have to be mindful that &lt;code&gt;ReactNode&lt;/code&gt; is not absolutely bulletproof.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/357&quot;&gt;Thanks @pomle for raising this.&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Quote &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;@ferdaber&lt;/a&gt;: A more technical explanation is that a valid React node is not the same thing as what is returned by &lt;code&gt;React.createElement&lt;/code&gt;. Regardless of what a component ends up rendering, &lt;code&gt;React.createElement&lt;/code&gt; always returns an object, which is the &lt;code&gt;JSX.Element&lt;/code&gt; interface, but &lt;code&gt;React.ReactNode&lt;/code&gt; is the set of all possible return values of a component.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;JSX.Element&lt;/code&gt; -&amp;gt; Return value of &lt;code&gt;React.createElement&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;React.ReactNode&lt;/code&gt; -&amp;gt; Return value of a component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/129&quot;&gt;More discussion: Where ReactNode does not overlap with JSX.Element&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Types or Interfaces?&lt;/h2&gt; 
&lt;p&gt;You can use either Types or Interfaces to type Props and State, so naturally the question arises - which do you use?&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Use Interface until You Need Type - &lt;a href=&quot;https://twitter.com/orta/status/1356129195835973632?s=20&quot;&gt;orta&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;More Advice&lt;/h3&gt; 
&lt;p&gt;Here&#39;s a helpful rule of thumb:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;always use &lt;code&gt;interface&lt;/code&gt; for public API&#39;s definition when authoring a library or 3rd party ambient type definitions, as this allows a consumer to extend them via &lt;em&gt;declaration merging&lt;/em&gt; if some definitions are missing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consider using &lt;code&gt;type&lt;/code&gt; for your React Component Props and State, for consistency and because it is more constrained.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read more about the reasoning behind this rule of thumb in &lt;a href=&quot;https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c&quot;&gt;Interface vs Type alias in TypeScript 2.7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The TypeScript Handbook now also includes guidance on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces&quot;&gt;Differences Between Type Aliases and Interfaces&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: At scale, there are performance reasons to prefer interfaces (&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance#preferring-interfaces-over-intersections&quot;&gt;see official Microsoft notes on this&lt;/a&gt;) but &lt;a href=&quot;https://news.ycombinator.com/item?id=25201887&quot;&gt;take this with a grain of salt&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Types are useful for union types (e.g. &lt;code&gt;type MyType = TypeA | TypeB&lt;/code&gt;) whereas Interfaces are better for declaring dictionary shapes and then &lt;code&gt;implementing&lt;/code&gt; or &lt;code&gt;extending&lt;/code&gt; them.&lt;/p&gt; 
&lt;h3&gt;Useful table for Types vs Interfaces&lt;/h3&gt; 
&lt;p&gt;It&#39;s a nuanced topic, don&#39;t get too hung up on it. Here&#39;s a handy table:&lt;/p&gt; 
&lt;p&gt;| Aspect | Type | Interface | | ----------------------------------------------- | :--: | :-------: | | Can describe functions | ✅ | ✅ | | Can describe constructors | ✅ | ✅ | | Can describe tuples | ✅ | ✅ | | Interfaces can extend it | ⚠️ | ✅ | | Classes can extend it | 🚫 | ✅ | | Classes can implement it (&lt;code&gt;implements&lt;/code&gt;) | ⚠️ | ✅ | | Can intersect another one of its kind | ✅ | ⚠️ | | Can create a union with another one of its kind | ✅ | 🚫 | | Can be used to create mapped types | ✅ | 🚫 | | Can be mapped over with mapped types | ✅ | ✅ | | Expands in error messages and logs | ✅ | 🚫 | | Can be augmented | 🚫 | ✅ | | Can be recursive | ⚠️ | ✅ |&lt;/p&gt; 
&lt;p&gt;⚠️ In some cases&lt;/p&gt; 
&lt;p&gt;(source: &lt;a href=&quot;https://twitter.com/karoljmajewski/status/1082413696075382785&quot;&gt;Karol Majewski&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be easily achieved using hooks which can also help set up memoization easily.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Forms and Events&lt;/h2&gt; 
&lt;p&gt;If performance is not an issue (and it usually isn&#39;t!), inlining handlers is easiest as you can just use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing&quot;&gt;type inference and contextual typing&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const el = (
  &amp;lt;button
    onClick={(event) =&amp;gt; {
      /* event will be correctly typed automatically! */
    }}
  /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you need to define your event handler separately, IDE tooling really comes in handy here, as the @type definitions come with a wealth of typing. Type what you are looking for and usually the autocomplete will help you out. Here is what it looks like for an &lt;code&gt;onChange&lt;/code&gt; for a form event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type State = {
  text: string;
};
class App extends React.Component&amp;lt;Props, State&amp;gt; {
  state = {
    text: &quot;&quot;,
  };

  // typing on RIGHT hand side of =
  onChange = (e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void =&amp;gt; {
    this.setState({ text: e.currentTarget.value });
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.text} onChange={this.onChange} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2KA9Drg8IcMDjB1tcblwBccOjCjAeAcwDcmlRQB8W8ovso3HAAvL6KilYwtgBE0R7ulH5wepYAnmBOznAQPIgAkgDiABIAKnAAFij8dsB8SNmYIZo5YpUu9aEAFEi2QhgiAGLQIACiAG4ysqUAsgAyeTxgAK4wI9RIIDJeAJS2YxC1IT5KFjDlwHQidEgwAMowgUidSpacUewiaEtQRDwwJSgoM4biIxihqEt6iptglFCpYXBfnUoJ1tmFwkQYN9cp0LIpZHxgGMvHjwrInMt4DB0khgtFItE4GCIbSlGcLlcHtwRJEVNkeK0qsDgmzzpcWm1gXydCSkuE4LIdITiRYYR4KCogA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Instead of typing the arguments and return values with &lt;code&gt;React.FormEvent&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt;, you may alternatively apply types to the event handler itself (&lt;em&gt;contributed by @TomasHubelbauer&lt;/em&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;  // typing on LEFT hand side of =
  onChange: React.ChangeEventHandler&amp;lt;HTMLInputElement&amp;gt; = (e) =&amp;gt; {
    this.setState({text: e.currentTarget.value})
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;The first method uses an inferred method signature &lt;code&gt;(e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void&lt;/code&gt; and the second method enforces a type of the delegate provided by &lt;code&gt;@types/react&lt;/code&gt;. So &lt;code&gt;React.ChangeEventHandler&amp;lt;&amp;gt;&lt;/code&gt; is simply a &quot;blessed&quot; typing by &lt;code&gt;@types/react&lt;/code&gt;, whereas you can think of the inferred method as more... &lt;em&gt;artisanally hand-rolled&lt;/em&gt;. Either way it&#39;s a good pattern to know. &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/24&quot;&gt;See our Github PR for more&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Typing onSubmit, with Uncontrolled components in a Form&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you don&#39;t quite care about the type of the event, you can just use React.SyntheticEvent. If your target form has custom named inputs that you&#39;d like to access, you can use type widening:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;form
  ref={formRef}
  onSubmit={(e: React.SyntheticEvent) =&amp;gt; {
    e.preventDefault();
    const target = e.target as typeof e.target &amp;amp; {
      email: { value: string };
      password: { value: string };
    };
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    // etc...
  }}
&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Email:
      &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Password:
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Log in&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGctoRlM4BeRYmAOgFc6kLABQBKClVoM4AMSbs4o9gD4FFOHAA8mJmrhFMbAN7aozJJgC+u2gGVeAIxDAYRoUgBcndDxsBPGjAAFkgwwGgAogBuSAEiynCGuupI3GBE0QEAIuYovAA2MKIA3Elw1PTwMChQAOYh8ilVtfUodHAwvmBIEKyN1XXwAGQJpckgKMB5noZwkSh5vB5wDFDANDVwFiXk6rtwYK10AO7QACbTs-OLnitrG1ulDzu75VJI45PyTQPc7xN53DmCyQRTgAHowe1Okg0ME0ABrOgAQlKr3gBzoxzOX36IVShxOUFOgKuIPBkI6XVhMMRKOe6ghcBCaG4rN0Fis5CUug0p2AkW59M0eRQ9iQeUFe3U4Q+U1GmjWYF4lWhbAARH9Jmq4DQUCAkOrNXltWDJbsNGCRWKJTywXyBTz7Wb1BoreLnbsAAoEs7ueUaRXKqFddUYrFE7W6-Whn0R8Eei1um3PC1Ox38hOBlUhtV0BxOGDaoGLdUAGQgGzWJrNqYzFAtJhAgpEQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Of course, if you&#39;re making any sort of significant form, &lt;a href=&quot;https://jaredpalmer.com/formik&quot;&gt;you should use Formik&lt;/a&gt; or &lt;a href=&quot;https://react-hook-form.com/&quot;&gt;React Hook Form&lt;/a&gt;, which are written in TypeScript.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Context&lt;/h2&gt; 
&lt;h2&gt;Basic Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

interface AppContextInterface {
  name: string;
  author: string;
  url: string;
}

const AppCtx = React.createContext&amp;lt;AppContextInterface | null&amp;gt;(null);

// Provider in your app

const sampleAppContext: AppContextInterface = {
  name: &quot;Using React Context in a Typescript App&quot;,
  author: &quot;thehappybug&quot;,
  url: &quot;http://www.example.com&quot;,
};

export const App = () =&amp;gt; (
  &amp;lt;AppCtx.Provider value={sampleAppContext}&amp;gt;...&amp;lt;/AppCtx.Provider&amp;gt;
);

// Consume in your app

export const PostInfo = () =&amp;gt; {
  const appContext = React.useContext(AppCtx);
  return (
    &amp;lt;div&amp;gt;
      Name: {appContext.name}, Author: {appContext.author}, Url:{&quot; &quot;}
      {appContext.url}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://reactjs.org/docs/context.html#classcontexttype&quot;&gt;Class.contextType&lt;/a&gt; or &lt;a href=&quot;https://reactjs.org/docs/context.html#contextconsumer&quot;&gt;Context.Consumer&lt;/a&gt; API, let us know if you have trouble with that.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/97&quot;&gt;Thanks to @AlvSovereign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Extended Example&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; with an empty object as default value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ContextState {
  // set the type of state you want to handle with context e.g.
  name: string | null;
}
//set an empty object as default state
const Context = React.createContext({} as ContextState);
// set up context provider as you normally would in JavaScript [React Context API](https://reactjs.org/docs/context.html#api)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;strong&gt;no &lt;code&gt;defaultValue&lt;/code&gt;, yet no need to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as React from &quot;react&quot;;

const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);

function EnthusasticGreeting() {
  const currentUser = React.useContext(currentUserContext);
  return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;currentUserContext.Provider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/currentUserContext.Provider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice the explicit type arguments which we need because we don&#39;t have a default &lt;code&gt;string&lt;/code&gt; value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);
//                                             ^^^^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;along with the non-null assertion to tell TypeScript that &lt;code&gt;currentUser&lt;/code&gt; is definitely going to be there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
//                              ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is unfortunate because &lt;em&gt;we know&lt;/em&gt; that later in our app, a &lt;code&gt;Provider&lt;/code&gt; is going to fill in the context.&lt;/p&gt; 
&lt;p&gt;There are a few solutions for this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can get around this by asserting non null:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string&amp;gt;(undefined!);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;a href=&quot;https://www.typescriptlang.org/play/index.html?jsx=1#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQduEAdqvLgK5SXMwCqqLFADCLGFgAe8ALyYqMAHS5KycaN6SYAHjZRgzAOYA+ABQdmAEywF9WCwEIAlPQLn8wFnACivABYdUNBhgXABxSixgwxNHOABvOjg4JlZ2Lh5+QSg4WWw8RQCsdXEpE05uLF4BIWLNZ0S4ShguZjgtC2AANyMACS8AGX6AeXjyjOqoBRgIPjAwGrQsGIBfey0Aeg7u+mW6V2Z3TwBBOZj4hqaWtrHKzJqxTQUABWJO4CtszuQAGw4saTIAGVfMgAO7MMhGBpJLQ+GD+QJsELhLCRfQGODrKEw9Y3KpZWpSZ6vd5CIw7IA&quot;&gt;Playground here&lt;/a&gt;) This is a quick and easy fix, but this loses type-safety, and if you forget to supply a value to the Provider, you will get an error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We can write a helper function called &lt;code&gt;createCtx&lt;/code&gt; that guards against accessing a &lt;code&gt;Context&lt;/code&gt; whose value wasn&#39;t provided. By doing this, API instead, &lt;strong&gt;we never have to provide a default and never have to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// Usage:

// We still have to specify a type, but no default!
export const [useCurrentUserName, CurrentUserProvider] = createCtx&amp;lt;string&amp;gt;();

function EnthusasticGreeting() {
  const currentUser = useCurrentUserName();
  return &amp;lt;div&amp;gt;HELLO {currentUser.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;CurrentUserProvider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/CurrentUserProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=1&amp;amp;ssl=1&amp;amp;ssc=1&amp;amp;pln=31&amp;amp;pc=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdA9AgnYnAIJwAWWANmCxQ4MCHFyVkMLCjgBhCADtpAD3jJFAEzgAFYgDdgmoXADuwGNziKxAVzBEl8YwWS2+8fcj62sAGhQtNiRzSwhbeG5kQ0UAcxExXF5cAGs4Amg4Wy0sAmBFLG1vPhFeEVAsADpgxjoCbPxgJXFJaTkYFQAeLiw1LC10AG8AXzgAH2t3PgA+AAoASjhBtnElVHh8FTgAXkwqGEqJHDanXphu8aycvILNOeyXfML5+jh0hpgmxSzULHaVBZLFZvXBrDY7PZ4A62X4KZRnWabF7AuDAAhwRE7ba7B65J6aRaWYimaxYEkAUSgxCgszIML+HTgIBh8AARjJ8qgjDJkLoDNzhKErLyvD4sGRkW83pQYLYoN9cK84MMVjK5d8ANr0-4BTaVPQQQzGKAAXRQ6FBinWNDgjEYcAA5GhVlaYA6mcgUlh0AAVACeggAyhJgGB4PkCCZebKwHwsHQVUx7QBVVDIWJYABcDDtcAA6jJ1sA+CUovoZKI4KhBLg0X7ZDAA-44KyItYxC43B4AIR0XqQWAu9ZwLWwuWUZSpoQAOWQIGbcnH-RgU6gBqNQjNuyOUgZXXWUHysTmyLqHy+cHJym4MLQn1wAHFKFhPnFAcsQWDxEvJ79hDixypZdV1necFiVNV5TgTpNGAfRpgACXJAAZZCAHkllwH8Vz-SpRGTMBBCgOQ0CwBZhm7TpGFg+D6ETepFEaZoOEI99VRfdVoMXIDfyEdcBTgUVfG2MhAyiUxFDIaYUU6K9LFvItH2fV94kYaS3io7iJxwvj+WNaY6KAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can go even further and combine this idea using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// usage

export const [useCtx, SettingProvider] = createCtx&amp;lt;string&amp;gt;(); // specify type, but no need to specify value upfront!
export function App() {
  const key = useCustomHook(&quot;key&quot;); // get a value from a hook, must be in a component
  return (
    &amp;lt;SettingProvider value={key}&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/SettingProvider&amp;gt;
  );
}
export function Component() {
  const key = useCtx(); // can still use without null check!
  return &amp;lt;div&amp;gt;{key}&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGd4BXOpAYWZlwAkIIBrOAF44ACj5IAngC44DKMBoBzAJRCAfHADeFOHGr14AbQYoYSADSykMAMoxTSALpDExGADpmSOw5GaAvso6cEQwjFA0svZmhuISjhT+FAD0yXpEDnq0ZgAe8ADuwDAAFnA0EHCMYNjZcAAmSJgojAA2MABqKC2MSClphSUQjPDFKABuCopwnPUVjDQNmApIdXrFSGgCXS3T69OgveSY8xjAtOmoZqwwOQA8AIJqIqra5Lr6DHo3LsjoHmgZK7ZJB5B5wAA+lQWjWWdSe80WsOUAG5gscaKdzl5rjlnlpgu9aJ80D83J4WKxgXkRBgciiCXBgJhRABCNCqEo4fJlJDcgCiUBwUBEACJsd8QBw4AAjJCM+jABpwFBwAAKOAmDSgcAGpRVYy6PRF9LeuhC1nCkTQqNNSVNoUtcEM4pyllp7nVEE1SCgzhQdCyBmRcFScBAKHEcAAKhIwN4AcAwPAFJgfcrplUWhYyhB4ChIihBSgJHAIMz5mdIjBY0g6IkKH1KnQUIpDhQQZBYIHPs6KTdLDZrDBJp7vb6XADLmwbrc5JMniiQ2k6HG0EyS9W45ZpcMczyVtMKiuNuu4AbunKqjUaDAWe2cp2sCdh+d7mAwHjXoSDHA4i5sRw3C8HwopxMawahq2eZnoaco1HgKrFMBliSp8sryum1DgLQSA3sEDoRKIDK3IOMDDkoo6Kmm549IImhxP4agMrotyUthNC4fAyRMaaLHJKR5GKJRWo8boJp2h20BPhiL6RGxkAcTen7BB88B-sILrPBBaRoPmUTAC0OxeDqRRIbuNCtDsaDrJsd72hahG3HUwBjGo9GSP4tzJM5rk2v4QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;a href=&quot;https://github.com/jamiebuilds/unstated&quot;&gt;&lt;code&gt;unstated&lt;/code&gt;&lt;/a&gt;-like context setters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function createCtx&amp;lt;A&amp;gt;(defaultValue: A) {
  type UpdateType = React.Dispatch&amp;lt;
    React.SetStateAction&amp;lt;typeof defaultValue&amp;gt;
  &amp;gt;;
  const defaultUpdate: UpdateType = () =&amp;gt; defaultValue;
  const ctx = React.createContext({
    state: defaultValue,
    update: defaultUpdate,
  });
  function Provider(props: React.PropsWithChildren&amp;lt;{}&amp;gt;) {
    const [state, update] = React.useState(defaultValue);
    return &amp;lt;ctx.Provider value={{ state, update }} {...props} /&amp;gt;;
  }
  return [ctx, Provider] as const; // alternatively, [typeof ctx, typeof Provider]
}

// usage

const [ctx, TextProvider] = createCtx(&quot;someText&quot;);
export const TextContext = ctx;
export function App() {
  return (
    &amp;lt;TextProvider&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/TextProvider&amp;gt;
  );
}
export function Component() {
  const { state, update } = React.useContext(TextContext);
  return (
    &amp;lt;label&amp;gt;
      {state}
      &amp;lt;input type=&quot;text&quot; onChange={(e) =&amp;gt; update(e.target.value)} /&amp;gt;
    &amp;lt;/label&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuNIlGJAYRjUAPAEEAfAAoAJkkwpGAGxgA1FIsZIAXHFEBKOAG8KcODACeYJHACqYabyQAVS9YC8iYjAB0AEWAAzmC8aAAWwsjoPgDKSDDRMI6ibBzCFlYQmHCy8kqq6pri4gDcJlwcAfA5Csp2Dnw6dY4uVnAekgZu4tlyNfkaSKXkpmgV8BjUbZ5R3tyofPwcfNQwksbDpnCVjjrVeWoDADRlpoz2Oz25ted8ZQC+ekOmTKww7JwACjgAbsCyUJIwDgwAEdJEMN4vhAQQB1YAwUL8ULARTSIjMYSGO7iAzrTblZiVOAAbW2fEOcDO9SQAF0puCfIwAkgEo4ZL19gUkI8TnAiDBGFBOMIJpCfn8kFA4N8uW5DIYtolyZSbtY7ncjN4tUDoQENQB6Er3Mr8wWcYkTClQ37-OkoAIEyrFOD6-VwdR8IW8YDfJCKcwU4npJCZLhCCnB0PWiVQGkUO4UCiuykBFAAcyQifIo0J8At4bgThoMGjtqmc0cgmokgARAFcM5izWeeQaHRxmNC8XFsxlvAPBMhm3oFgWClOKIwGAOkYTXEzXBJLzhEWVqXJeJeaZhItwBwkL2XZuNtv9auS+L-sfTC2E63aCOGGO3hw4LvIMwD6tcWUc0SFWSSAUlSjhwBqHgMt4TICEsxaSOePZ9i2pimkKi7LooKAAEZ+te+JGIBd74XAwjAMwYCMPAwZuDWfY1nAHBIigzAZnK7jdCBfCSEg3iJFAGY+DKAx6AaeGnphOGKHht5AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href=&quot;https://gist.github.com/sw-yx/f18fe6dd4c43fddb3a4971e80114a052&quot;&gt;useReducer-based version&lt;/a&gt; may also be helpful.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;em&gt;Contributed by: &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/13&quot;&gt;@jpavon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ProviderState {
  themeColor: string;
}

interface UpdateStateArg {
  key: keyof ProviderState;
  value: string;
}

interface ProviderStore {
  state: ProviderState;
  update: (arg: UpdateStateArg) =&amp;gt; void;
}

const Context = React.createContext({} as ProviderStore); // type assertion on empty object

class Provider extends React.Component&amp;lt;{}, ProviderState&amp;gt; {
  public readonly state = {
    themeColor: &quot;red&quot;,
  };

  private update = ({ key, value }: UpdateStateArg) =&amp;gt; {
    this.setState({ [key]: value });
  };

  public render() {
    const store: ProviderStore = {
      state: this.state,
      update: this.update,
    };

    return (
      &amp;lt;Context.Provider value={store}&amp;gt;{this.props.children}&amp;lt;/Context.Provider&amp;gt;
    );
  }
}

const Consumer = Context.Consumer;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;forwardRef/createRef&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/README.md#hooks&quot;&gt;Hooks section&lt;/a&gt; for &lt;code&gt;useRef&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;createRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class CssThemeProvider extends React.PureComponent&amp;lt;Props&amp;gt; {
  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); // like this
  render() {
    return &amp;lt;div ref={this.rootRef}&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;forwardRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef&amp;lt;Ref, Props&amp;gt;((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Side note: the `ref` you get from `forwardRef` is mutable so you can assign to it if needed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This was done &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43265/&quot;&gt;on purpose&lt;/a&gt;. You can make it immutable if you have to - assign &lt;code&gt;React.Ref&lt;/code&gt; if you want to ensure nobody reassigns it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef((
  props: Props,
  ref: React.Ref&amp;lt;Ref&amp;gt; // &amp;lt;-- here!
) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you are grabbing the props of a component that forwards refs, use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More info: https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&lt;/p&gt; 
&lt;p&gt;You may also wish to do &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/167&quot;&gt;Conditional Rendering with &lt;code&gt;forwardRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Portals&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;ReactDOM.createPortal&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const modalRoot = document.getElementById(&quot;modal-root&quot;) as HTMLElement;
// assuming in your html file has a div with id &#39;modal-root&#39;;

export class Modal extends React.Component {
  el: HTMLElement = document.createElement(&quot;div&quot;);

  componentDidMount() {
    modalRoot.appendChild(this.el);
  }

  componentWillUnmount() {
    modalRoot.removeChild(this.el);
  }

  render() {
    return ReactDOM.createPortal(this.props.children, this.el);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWRYmAEQHkBZObXAo9GAWgBNcZchTQQAdgGd4ICHxQAbBBAjwAvHAFoAriCRiYAOgDmSGAFF5SXfoBCATwCSfABQAiGXPk8cK1wEo4FAk4AAkAFWYAGQsrPRgAbgoAeiTAiQkdYDEjOCy4OwgtKDgACxgQeTZgS1KgwI1gADc4AHdgGBLcvgIPBW9lGHxE4XIkAA9qeDR5IODmWQU4cZg9PmDkbgMAYVxIMTi4AG8KOCX5AC5QiOjLazUNCG07gzQuFZi7tz4m-2GTuFE4HEcXowD48y0+mcAWO5FOp16igGBhQYDAqy2JWqLg6wAkBiQ8j8w1OAF8KP9AXs4gB1aryACqYhkkJg0KO-wRCyRKgMRBkjSQmOxzlx+MJxP+5JGpyIYj4SCg7Nh8LgRBgRTEtG4TGYLzeSAACtAYApRVj8WAcGB8WgsfI+HKADRwMUEokkuDS0lAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Same as above but using hooks&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React, { useEffect, useRef } from &quot;react&quot;;
import { createPortal } from &quot;react-dom&quot;;

const modalRoot = document.querySelector(&quot;#modal-root&quot;) as HTMLElement;

const Modal: React.FC&amp;lt;{}&amp;gt; = ({ children }) =&amp;gt; {
  const el = useRef(document.createElement(&quot;div&quot;));

  useEffect(() =&amp;gt; {
    // Use this in case CRA throws an error about react-hooks/exhaustive-deps
    const current = el.current;

    // We assume `modalRoot` exists with &#39;!&#39;
    modalRoot!.appendChild(current);
    return () =&amp;gt; void modalRoot!.removeChild(current);
  }, []);

  return createPortal(children, el.current);
};

export default Modal;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOAbzjSJRiQAVoYUAbOAXzmy4CTDAFoAJrjLkKAellwUAZyUBXEMAB2Aczha4ATwiqocABYwQPTMC5JzyxXHHAAbnADuwGGb3iCIBDi3KI4EDD4ANwUFGgQmkrwALJB3ABciMQwAHQAYgDCADy0vAB8cAC8cAAU9GhmtuJEmnwAlJXltBRwcPJwAKIgqlzM9j72aCMqDLiQmkiaEUp6CZyaaPauKFDAKABGdp7evihwRJjdM6twSDxVyOg5qkpIyJjVkmjqCzmMqCz9OwgH7VABELlcoNarWiMnIPQeGGyzyQ-UwmCQGGq1XaFU6lx6fQA6vZlGpgXAAAaBYJcBAQcKUm4AD2AiWWXh8BAAhNIej04tcadx6eFKs4IF9gYtsgBHVRIKAGADKt0xMGgYIAxMKuKEGTAoYplgAJAAqSQAMoCkNKYLD+XBdaKYNzsigwGAFuJ8g0uOJqrdsl8oM0YDCCWckDATC0cR04K4IMB-M6DW6iIFXEhfY1A1xgyYwxH4XwADRwADaAF0S5c+gBJVaofwQTBU26UivjK6cLSKvTLHuU86F0M-SmXIgxqAtP6jdiwbjVeqNZoVoMh4uw3iwuQKZ4obRIGLkTCqdYwYDxOAAQU98a6pcFiSrSjMEA8KVpFZeMGVH5fqkXDVuKiJPC8yqcCw1SYNwLwlj006xjUkaFBCpSRoSChGKoDAoC08EQHAYCqPAPhsishjGKYiTMMAaDmJY1i2CepaOuhbh+BUoK6vq4SgqUhSyBhWF0O+n7ftwcAAGQyah7GOnAhRSVwmGKUpykQmJmmJAYdgVLQT6aSZzhsmAIwGBkoLaDs4igmWOkmRZ6BIA2LAgEo1kbIsioOU5mlmEgwDaBY1kAIwAAyRa4Zj+RpplHOIPgZPgUUxWY+COQlpl7OgADWtnGJo4jWVA2h5dUkVltVtXZOFrTxYlSkAF5NuISDMhkACc3XZc1PS8LwAVwOpA1wA2+B4KcurcrQoJwKCw05UphR7GRGotHpBlGXlaCFTgF6lYtYAegYKAeA0YBLfw8T5FwDH5YZ8Z4nAf4AZJwGwfBSCtGUkwQC8wnrTAm1jYlwmiStwmqeDjp-WJa0bTed0Pftz24uU72Aap1QwFACp-aUEkeHAqnA8jmhw-yfREK+bbUSYiiemhIluODrQULwQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Modal Component Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const [showModal, setShowModal] = React.useState(false);
  return (
    &amp;lt;div&amp;gt;
      // you can also put this in your static html file
      &amp;lt;div id=&quot;modal-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
      {showModal &amp;amp;&amp;amp; (
        &amp;lt;Modal&amp;gt;
          &amp;lt;div
            style={{
              display: &quot;grid&quot;,
              placeItems: &quot;center&quot;,
              height: &quot;100vh&quot;,
              width: &quot;100vh&quot;,
              background: &quot;rgba(0,0,0,0.1)&quot;,
              zIndex: 99,
            }}
          &amp;gt;
            I&#39;m a modal!{&quot; &quot;}
            &amp;lt;button
              style={{ background: &quot;papyawhip&quot; }}
              onClick={() =&amp;gt; setShowModal(false)}
            &amp;gt;
              close
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/Modal&amp;gt;
      )}
      &amp;lt;button onClick={() =&amp;gt; setShowModal(true)}&amp;gt;show Modal&amp;lt;/button&amp;gt;
      // rest of your app
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This example is based on the &lt;a href=&quot;https://reactjs.org/docs/portals.html#event-bubbling-through-portals&quot;&gt;Event Bubbling Through Portal&lt;/a&gt; example of React docs.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Error Boundaries&lt;/h2&gt; 
&lt;h3&gt;Option 1: Using react-error-boundary&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bvaughn/react-error-boundary&quot;&gt;React-error-boundary&lt;/a&gt; - is a lightweight package ready to use for this scenario with TS support built-in. This approach also lets you avoid class components that are not that popular anymore.&lt;/p&gt; 
&lt;h3&gt;Options 2: Writing your custom error boundary component&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to add a new npm package for this, you can also write your own &lt;code&gt;ErrorBoundary&lt;/code&gt; component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { Component, ErrorInfo, ReactNode } from &quot;react&quot;;

interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
}

class ErrorBoundary extends Component&amp;lt;Props, State&amp;gt; {
  public state: State = {
    hasError: false
  };

  public static getDerivedStateFromError(_: Error): State {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error(&quot;Uncaught error:&quot;, error, errorInfo);
  }

  public render() {
    if (this.state.hasError) {
      return &amp;lt;h1&amp;gt;Sorry.. there was an error&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}

export default ErrorBoundary;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Concurrent React/React Suspense&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Not written yet.&lt;/em&gt; watch &lt;a href=&quot;https://github.com/sw-yx/fresh-async-react&quot;&gt;https://github.com/sw-yx/fresh-async-react&lt;/a&gt; for more on React Suspense and Time Slicing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Types&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ Have you read &lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/FAQ?&quot;&gt;the TypeScript FAQ&lt;/a&gt; Your answer might be there!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Facing weird type errors? You aren&#39;t alone. This is the hardest part of using TypeScript with React. Be patient - you are learning a new language after all. However, the more you get good at this, the less time you&#39;ll be working &lt;em&gt;against&lt;/em&gt; the compiler and the more the compiler will be working &lt;em&gt;for&lt;/em&gt; you!&lt;/p&gt; 
&lt;p&gt;Try to avoid typing with &lt;code&gt;any&lt;/code&gt; as much as possible to experience the full benefits of TypeScript. Instead, let&#39;s try to be familiar with some of the common strategies to solve these issues.&lt;/p&gt; 
&lt;h2&gt;Union Types and Type Guarding&lt;/h2&gt; 
&lt;p&gt;Union types are handy for solving some of these typing problems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;
  {},
  {
    count: number | null; // like this
  }
&amp;gt; {
  state = {
    count: null,
  };
  render() {
    return &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;{this.state.count}&amp;lt;/div&amp;gt;;
  }
  increment = (amt: number) =&amp;gt; {
    this.setState((state) =&amp;gt; ({
      count: (state.count || 0) + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2K0EAK48YALjg89IAEZIocAD6m91agG44AejdxqwANZI4MAAWwHSaKhQAfFrkinQwKNxwALzRijr6hiZmTmHOmkT81gAUAJSpaUQwelA8cLJ8wABucBA8Yt5oPklKpclRQSEiwDxoRCAyRQCMJSoRSgN0InEJSCK6BjAqsm4NjRF5MXDhh8OjSOOGyXBFKCDGDpbWZUlRStoBwYt0SDAAyvHcIrLRIva5vQ5pODrTLXYGraHwWz2AAMZQA1HBbjB3ioSiUDooVAcVEA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type Guarding&lt;/strong&gt;: Sometimes Union Types solve a problem in one area but create another downstream. If &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both object types, &lt;code&gt;A | B&lt;/code&gt; isn&#39;t &quot;either A or B&quot;, it is &quot;A or B or both at once&quot;, which causes some confusion if you expected it to be the former. Learn how to write checks, guards, and assertions (also see the Conditional Rendering section below). For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface Admin {
  role: string;
}
interface User {
  email: string;
}

// Method 1: use `in` keyword
function redirect(user: Admin | User) {
  if (&quot;role&quot; in user) {
    // use the `in` operator for typeguards since TS 2.7+
    routeToAdminPage(user.role);
  } else {
    routeToHomePage(user.email);
  }
}

// Method 2: custom type guard, does the same thing in older TS versions or where `in` isnt enough
function isAdmin(user: Admin | User): user is Admin {
  return (user as any).role !== undefined;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoC4AOxiSk3STgEEATEGuAbwrjhwAbJAC44AZxhQaAcwDcFAL5Va9RmmYBVcfR584SECmCCxk6dXlKKFTAFdqGYBGoCIdugBUI7TtQAKKDJIABTiwDLUwJjA9ACUeuT80XBhEVExugC8OQR2OlAIEML4CbxJ-AJIMHZQrvi+NGQVinDWlOT2jjDOrjgeSN4AErhIgcFpkdGxUGX6KZMZM3A5WQSGxoKliZVVNXUEIyBIYEFIzfzK5FcUAPS3cACy1QAWEGxwAIxi+cwABjQ-nAANZIACeAHdoGxbA4nC4qmxgEQMCFflAxI1XAAfODaeI7ODREIAIiESBJRNc6LKcHucF+cBgL3+gLgEDA9BQMGgcEwvJgYM5MjsKCgbHEEhoGjgngAynAAEwAOgA7ABqfT8fpeHwcGjjULo5XkuIKFoGQQ6Qna9y6o5jM5ogrKjYmM36K43cj057M95KsRofI8vCCzlwEVitgAGjgbAgSElzOY4hQxyZL1kVPZgjYunlcAAbvRwi5JbyISyiHAAdQgcBxLQDNR3DIXrDur0ieIsc76Jj9Ti8QU4j8Cj3WEPCUR9q5+1A4ChJShqGC4ibiswAIS5Bz5mLUJAw65AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Method 2 is also known as &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards&quot;&gt;User-Defined Type Guards&lt;/a&gt; and can be really handy for readable code. This is how TS itself refines types with &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you need &lt;code&gt;if...else&lt;/code&gt; chains or the &lt;code&gt;switch&lt;/code&gt; statement instead, it should &quot;just work&quot;, but look up &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; if you need help. (See also: &lt;a href=&quot;https://basarat.gitbook.io/typescript/type-system/discriminated-unions&quot;&gt;Basarat&#39;s writeup&lt;/a&gt;). This is handy in typing reducers for &lt;code&gt;useReducer&lt;/code&gt; or Redux.&lt;/p&gt; 
&lt;h2&gt;Optional Types&lt;/h2&gt; 
&lt;p&gt;If a component has an optional prop, add a question mark and assign during destructure (or use defaultProps).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message?: string; // like this
}&amp;gt; {
  render() {
    const { message = &quot;default&quot; } = this.props;
    return &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a &lt;code&gt;!&lt;/code&gt; character to assert that something is not undefined, but this is not encouraged.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Something to add? &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Enum Types&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We recommend avoiding using enums as far as possible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Enums have a few &lt;a href=&quot;https://fettblog.eu/tidy-typescript-avoid-enums/&quot;&gt;documented issues&lt;/a&gt; (the TS team &lt;a href=&quot;https://twitter.com/orta/status/1348966323271987201?s=20&quot;&gt;agrees&lt;/a&gt;). A simpler alternative to enums is just declaring a union type of string literals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare type Position = &quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you must use enums, remember that enums in TypeScript default to numbers. You will usually want to use them as strings instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export enum ButtonSizes {
  default = &quot;default&quot;,
  small = &quot;small&quot;,
  large = &quot;large&quot;,
}

// usage
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; &amp;lt;Button size={ButtonSizes.default} {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Type Assertion&lt;/h2&gt; 
&lt;p&gt;Sometimes you know better than TypeScript that the type you&#39;re using is narrower than it thinks, or union types need to be asserted to a more specific type to work with other APIs, so assert with the &lt;code&gt;as&lt;/code&gt; keyword. This tells the compiler you know better than it does.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  render() {
    const { message } = this.props;
    return (
      &amp;lt;Component2 message={message as SpecialMessageType}&amp;gt;{message}&amp;lt;/Component2&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgGU61gUAbAWSQGduUBzJABVa9ALwFuMKMAB2-fAG4KFOTCRRM6egAUcYbnADeFOHBA8+ggFxwpM+XAA+cAK6yAJkkxykH5eQAvirkaBCyUnAAwriQskiyMABMtsjoMAB0AGJRADx6EAYAfHASABRG5pYCSIEAlKUlZaZwuR7AAG5FLWa5ABYAjEVGFrw1gbkA9IPd5L2T7V0UdSFobCi8cBzUMeDhCfBIAB7qnoZpGBm7cQe5JnNVYzZ20nL8AYEl92ZEnhplDW+ZjgYQi8Eqoys9ECpTgMD6wG4GTA+m4AWBcCIMFcUFkcGaDwxuWu+0SSUeULEI2qgjgG0YzFYnBpwlEn2pT1qUxJ8TJswxdXRcGCQSAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that you cannot assert your way to anything - basically it is only for refining types. Therefore it is not the same as &quot;casting&quot; a type.&lt;/p&gt; 
&lt;p&gt;You can also assert a property is non-null, when accessing it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;element.parentNode!.removeChild(element) // ! before the period
myFunction(document.getElementById(dialog.id!)! // ! after the property accessing
let userID!: string // definite assignment assertion... be careful!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, try to actually handle the null case instead of asserting :)&lt;/p&gt; 
&lt;h2&gt;Simulating Nominal Types&lt;/h2&gt; 
&lt;p&gt;TS&#39; structural typing is handy, until it is inconvenient. However you can simulate nominal typing with &lt;a href=&quot;https://basarat.gitbook.io/typescript/main-1/nominaltyping&quot;&gt;&lt;code&gt;type branding&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type OrderID = string &amp;amp; { readonly brand: unique symbol };
type UserID = string &amp;amp; { readonly brand: unique symbol };
type ID = OrderID | UserID;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can create these values with the Companion Object Pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function OrderID(id: string) {
  return id as OrderID;
}
function UserID(id: string) {
  return id as UserID;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now TypeScript will disallow you from using the wrong ID in the wrong place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function queryForUser(id: UserID) {
  // ...
}
queryForUser(OrderID(&quot;foobar&quot;)); // Error, Argument of type &#39;OrderID&#39; is not assignable to parameter of type &#39;UserID&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In future you can use the &lt;code&gt;unique&lt;/code&gt; keyword to brand. &lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/33038&quot;&gt;See this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Intersection Types&lt;/h2&gt; 
&lt;p&gt;Adding two types together can be handy, for example when your component is supposed to mirror the props of a native component like a &lt;code&gt;button&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export interface Props {
  label: string;
}
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt; // adding my Props together with the @types/react button provided props
) =&amp;gt; &amp;lt;Button {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use Intersection Types to make reusable subsets of props for similar components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type BaseProps = {
   className?: string,
   style?: React.CSSProperties
   name: string // used in both
}
type DogProps = {
  tailsCount: number
}
type HumanProps = {
  handsCount: number
}
export const Human: React.FC&amp;lt;BaseProps &amp;amp; HumanProps&amp;gt; = // ...
export const Dog: React.FC&amp;lt;BaseProps &amp;amp; DogProps&amp;gt; = // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgCEUBnJABRzGbgF44BvCnGFoANi2YA5FCCQB+AFxxmMKMAB2AcwA0Q4Suqj5S5OhgA6AMIBlaxwh1YwJMz1x1MpEpVqtcAPT+cACurAAmcBpwAEYQMAAWFAC+VLT0ACIQmvZcvAJ6MCjAosyWEMHqMErqwSDRSFDJqXRwABK1KOo53HyC5MLxnWGl5ZXVtfWN5CnkSAAekLBwaBDqKm0d6ibEFgBilgA8TKzdcABkGyCd3QB8eQAUAJS8d-d6B2HAAG4BNxSPFAo80W8BWa3gmU02zM5n2RxY7E43AukNuD2ePFe70+P38f3IjyAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Make sure not to confuse Intersection Types (which are &lt;strong&gt;and&lt;/strong&gt; operations) with Union Types (which are &lt;strong&gt;or&lt;/strong&gt; operations).&lt;/p&gt; 
&lt;h2&gt;Union Types&lt;/h2&gt; 
&lt;p&gt;This section is yet to be written (please contribute!). Meanwhile, see our &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/README.md#union-types-and-type-guarding&quot;&gt;commentary on Union Types usecases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The ADVANCED cheatsheet also has information on Discriminated Union Types, which are helpful when TypeScript doesn&#39;t seem to be narrowing your union type as you expect.&lt;/p&gt; 
&lt;h2&gt;Overloading Function Types&lt;/h2&gt; 
&lt;p&gt;Specifically when it comes to functions, you may need to overload instead of union type. The most common way function types are written uses the shorthand:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type FunctionType1 = (x: string, y: number) =&amp;gt; number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But this doesn&#39;t let you do any overloading. If you have the implementation, you can put them after each other with the function keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function pickCard(x: { suit: string; card: number }[]): number;
function pickCard(x: number): { suit: string; card: number };
function pickCard(x): any {
  // implementation with combined signature
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, if you don&#39;t have an implementation and are just writing a &lt;code&gt;.d.ts&lt;/code&gt; definition file, this won&#39;t help you either. In this case you can forego any shorthand and write them the old-school way. The key thing to remember here is as far as TypeScript is concerned, &lt;code&gt;functions are just callable objects with no key&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type pickCard = {
  (x: { suit: string; card: number }[]): number;
  (x: number): { suit: string; card: number };
  // no need for combined signature in this form
  // you can also type static properties of functions here eg `pickCard.wasCalled`
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when you implement the actual overloaded function, the implementation will need to declare the combined call signature that you&#39;ll be handling, it won&#39;t be inferred for you. You can see readily see examples of overloads in DOM APIs, e.g. &lt;code&gt;createElement&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/functions.html#overloads&quot;&gt;Read more about Overloading in the Handbook.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using Inferred Types&lt;/h2&gt; 
&lt;p&gt;Leaning on TypeScript&#39;s Type Inference is great... until you realize you need a type that was inferred, and have to go back and explicitly declare types/interfaces so you can export them for reuse.&lt;/p&gt; 
&lt;p&gt;Fortunately, with &lt;code&gt;typeof&lt;/code&gt;, you won&#39;t have to do that. Just use it on any value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

const someMethod = (obj: typeof state) =&amp;gt; {
  // grabbing the type of state even though it was inferred
  // some code using obj
  setState(obj); // this works
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Partial Types&lt;/h2&gt; 
&lt;p&gt;Working with slicing state and props is common in React. Again, you don&#39;t really have to go and explicitly redefine your types if you use the &lt;code&gt;Partial&lt;/code&gt; generic type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

// NOTE: stale state merging is not actually encouraged in React.useState
// we are just demonstrating how to use Partial here
const partialStateUpdate = (obj: Partial&amp;lt;typeof state&amp;gt;) =&amp;gt;
  setState({ ...state, ...obj });

// later on...
partialStateUpdate({ foo: 2 }); // this works
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Note that there are some TS users who don&#39;t agree with using &lt;code&gt;Partial&lt;/code&gt; as it behaves today. See &lt;a href=&quot;https://twitter.com/ferdaber/status/1084798596027957248&quot;&gt;subtle pitfalls of the above example here&lt;/a&gt;, and check out this long discussion on &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365&quot;&gt;why @types/react uses Pick instead of Partial&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;The Types I need weren&#39;t exported!&lt;/h2&gt; 
&lt;p&gt;This can be annoying but here are ways to grab the types!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the Prop types of a component: Use &lt;code&gt;React.ComponentProps&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt;, and optionally &lt;code&gt;Omit&lt;/code&gt; any overlapping types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Button } from &quot;library&quot;; // but doesn&#39;t export ButtonProps! oh no!
type ButtonProps = React.ComponentProps&amp;lt;typeof Button&amp;gt;; // no problem! grab your own!
type AlertButtonProps = Omit&amp;lt;ButtonProps, &quot;onClick&quot;&amp;gt;; // modify
const AlertButton: React.FC&amp;lt;AlertButtonProps&amp;gt; = (props) =&amp;gt; (
  &amp;lt;Button onClick={() =&amp;gt; alert(&quot;hello&quot;)} {...props} /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L774&quot;&gt;&lt;code&gt;ComponentPropsWithoutRef&lt;/code&gt;&lt;/a&gt; (instead of ComponentProps) and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt; (if your component specifically forwards refs)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the return type of a function: use &lt;code&gt;ReturnType&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// inside some library - return type { baz: number } is inferred but not exported
function foo(bar: string) {
  return { baz: 1 };
}

//  inside your app, if you need { baz: number }
type FooReturn = ReturnType&amp;lt;typeof foo&amp;gt;; // { baz: number }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact you can grab virtually anything public: &lt;a href=&quot;http://ikoshelev.azurewebsites.net/search/id/11/Pragmatic-uses-of-TypeScript-type-system-My-type-of-type&quot;&gt;see this blogpost from Ivan Koshelev&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function foo() {
  return {
    a: 1,
    b: 2,
    subInstArr: [
      {
        c: 3,
        d: 4,
      },
    ],
  };
}

type InstType = ReturnType&amp;lt;typeof foo&amp;gt;;
type SubInstArr = InstType[&quot;subInstArr&quot;];
type SubIsntType = SubInstArr[0];

let baz: SubIsntType = {
  c: 5,
  d: 6, // type checks ok!
};

//You could just write a one-liner,
//But please make sure it is forward-readable
//(you can understand it from reading once left-to-right with no jumps)
type SubIsntType2 = ReturnType&amp;lt;typeof foo&amp;gt;[&quot;subInstArr&quot;][0];
let baz2: SubIsntType2 = {
  c: 5,
  d: 6, // type checks ok!
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;TS also ships with a &lt;code&gt;Parameters&lt;/code&gt; utility type for extracting the parameters of a function&lt;/li&gt; 
 &lt;li&gt;for anything more &quot;custom&quot;, the &lt;code&gt;infer&lt;/code&gt; keyword is the basic building block for this, but takes a bit of getting used to. Look at the source code for the above utility types, and &lt;a href=&quot;https://twitter.com/mgechev/status/1211030455224422401?s=20&quot;&gt;this example&lt;/a&gt; to get the idea. Basarat &lt;a href=&quot;https://www.youtube.com/watch?v=ijK-1R-LFII&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=3&amp;amp;t=0s&quot;&gt;also has a good video on &lt;code&gt;infer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Types I need don&#39;t exist!&lt;/h2&gt; 
&lt;p&gt;What&#39;s more annoying than modules with unexported types? Modules that are &lt;strong&gt;untyped&lt;/strong&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before you proceed - make sure you have checked that types don&#39;t exist in &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Fret not! There are more than a couple of ways in which you can solve this problem.&lt;/p&gt; 
&lt;h3&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;lazier&lt;/strong&gt; way would be to create a new type declaration file, say &lt;code&gt;typedec.d.ts&lt;/code&gt;– if you don&#39;t already have one. Ensure that the path to file is resolvable by TypeScript by checking the &lt;code&gt;include&lt;/code&gt; array in the &lt;code&gt;tsconfig.json&lt;/code&gt; file at the root of your directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// inside tsconfig.json
{
  // ...
  &quot;include&quot;: [
    &quot;src&quot; // automatically resolves if the path to declaration is src/typedec.d.ts
  ]
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Within this file, add the &lt;code&gt;declare&lt;/code&gt; syntax for your desired module, say &lt;code&gt;my-untyped-module&lt;/code&gt;– to the declaration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// inside typedec.d.ts
declare module &quot;my-untyped-module&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This one-liner alone is enough if you just need it to work without errors. A even hackier, write-once-and-forget way would be to use &lt;code&gt;&quot;*&quot;&lt;/code&gt; instead which would then apply the &lt;code&gt;Any&lt;/code&gt; type for all existing and future untyped modules.&lt;/p&gt; 
&lt;p&gt;This solution works well as a workaround if you have less than a couple untyped modules. Anything more, you now have a ticking type-bomb in your hands. The only way of circumventing this problem would be to define the missing types for those untyped modules as explained in the following sections.&lt;/p&gt; 
&lt;h3&gt;Autogenerate types&lt;/h3&gt; 
&lt;p&gt;You can use TypeScript with &lt;code&gt;--allowJs&lt;/code&gt; and &lt;code&gt;--declaration&lt;/code&gt; to see TypeScript&#39;s &quot;best guess&quot; at the types of the library.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work well enough, use &lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot;&gt;&lt;code&gt;dts-gen&lt;/code&gt;&lt;/a&gt; to use the runtime shape of the object to accurately enumerate all available properties. This tends to be very accurate, BUT the tool does not yet support scraping JSDoc comments to populate additional types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g dts-gen
dts-gen -m &amp;lt;your-module&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other automated JS to TS conversion tools and migration strategies - see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/from_js&quot;&gt;our MIGRATION cheatsheet&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Typing Exported Hooks&lt;/h3&gt; 
&lt;p&gt;Typing Hooks is just like typing pure functions.&lt;/p&gt; 
&lt;p&gt;The following steps work under two assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have already created a type declaration file as stated earlier in the section.&lt;/li&gt; 
 &lt;li&gt;You have access to the source code - specifically the code that directly exports the functions you will be using. In most cases, it would be housed in an &lt;code&gt;index.js&lt;/code&gt; file. Typically you need a minimum of &lt;strong&gt;two&lt;/strong&gt; type declarations (one for &lt;strong&gt;Input Prop&lt;/strong&gt; and the other for &lt;strong&gt;Return Prop&lt;/strong&gt;) to define a hook completely. Suppose the hook you wish to type follows the following structure,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ...
const useUntypedHook = (prop) =&amp;gt; {
  // some processing happens here
  return {
    /* ReturnProps */
  };
};
export default useUntypedHook;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then, your type declaration should most likely follow the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &#39;use-untyped-hook&#39; {
  export interface InputProps { ... }   // type declaration for prop
  export interface ReturnProps { ... } // type declaration for return props
  export default function useUntypedHook(
    prop: InputProps
    // ...
  ): ReturnProps;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;For instance, the &lt;a href=&quot;https://github.com/donavon/use-dark-mode&quot;&gt;useDarkMode hook&lt;/a&gt; exports the functions that follows a similar structure.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// inside src/index.js
const useDarkMode = (
  initialValue = false, // -&amp;gt; input props / config props to be exported
  {
    // -&amp;gt; input props / config props to be exported
    element,
    classNameDark,
    classNameLight,
    onChange,
    storageKey = &quot;darkMode&quot;,
    storageProvider,
    global,
  } = {}
) =&amp;gt; {
  // ...
  return {
    // -&amp;gt; return props to be exported
    value: state,
    enable: useCallback(() =&amp;gt; setState(true), [setState]),
    disable: useCallback(() =&amp;gt; setState(false), [setState]),
    toggle: useCallback(() =&amp;gt; setState((current) =&amp;gt; !current), [setState]),
  };
};
export default useDarkMode;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As the comments suggest, exporting these config props and return props following the aforementioned structure will result in the following type export.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;use-dark-mode&quot; {
  /**
   * A config object allowing you to specify certain aspects of `useDarkMode`
   */
  export interface DarkModeConfig {
    classNameDark?: string; // A className to set &quot;dark mode&quot;. Default = &quot;dark-mode&quot;.
    classNameLight?: string; // A className to set &quot;light mode&quot;. Default = &quot;light-mode&quot;.
    element?: HTMLElement; // The element to apply the className. Default = `document.body`
    onChange?: (val?: boolean) =&amp;gt; void; // Overide the default className handler with a custom callback.
    storageKey?: string; // Specify the `localStorage` key. Default = &quot;darkMode&quot;. Set to `null` to disable persistent storage.
    storageProvider?: WindowLocalStorage; // A storage provider. Default = `localStorage`.
    global?: Window; // The global object. Default = `window`.
  }
  /**
   * An object returned from a call to `useDarkMode`.
   */
  export interface DarkMode {
    readonly value: boolean;
    enable: () =&amp;gt; void;
    disable: () =&amp;gt; void;
    toggle: () =&amp;gt; void;
  }
  /**
   * A custom React Hook to help you implement a &quot;dark mode&quot; component for your application.
   */
  export default function useDarkMode(
    initialState?: boolean,
    config?: DarkModeConfig
  ): DarkMode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Typing Exported Components&lt;/h3&gt; 
&lt;p&gt;In case of typing untyped class components, there&#39;s almost no difference in approach except for the fact that after declaring the types, you export the extend the type using &lt;code&gt;class UntypedClassComponent extends React.Component&amp;lt;UntypedClassComponentProps, any&amp;gt; {}&lt;/code&gt; where &lt;code&gt;UntypedClassComponentProps&lt;/code&gt; holds the type declaration.&lt;/p&gt; 
&lt;p&gt;For instance, &lt;a href=&quot;https://gist.github.com/sw-yx/37a6a3d248c2d4031801f0d568904df8&quot;&gt;sw-yx&#39;s Gist on React Router 6 types&lt;/a&gt; implemented a similar method for typing the then untyped RR6.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;react-router-dom&quot; {
  import * as React from &#39;react&#39;;
  // ...
  type NavigateProps&amp;lt;T&amp;gt; = {
    to: string | number,
    replace?: boolean,
    state?: T
  }
  //...
  export class Navigate&amp;lt;T = any&amp;gt; extends React.Component&amp;lt;NavigateProps&amp;lt;T&amp;gt;&amp;gt;{}
  // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on creating type definitions for class components, you can refer to this &lt;a href=&quot;https://templecoding.com/blog/2016/03/31/creating-typescript-typings-for-existing-react-components&quot;&gt;post&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Operators&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: type query used for refinement&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyof&lt;/code&gt;: get keys of an object&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O[K]&lt;/code&gt;: property lookup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[K in O]&lt;/code&gt;: mapped types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;: addition and subtraction and readonly and optional modifiers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;x ? Y : Z&lt;/code&gt;: Conditional types for generic types, type aliases, function parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Nonnull assertion for nullable types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Generic type parameter default for generic types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;as&lt;/code&gt;: type assertion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is&lt;/code&gt;: type guard for function return types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional Types are a difficult topic to get around so here are some extra resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fully walked through explanation https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&lt;/li&gt; 
 &lt;li&gt;Bailing out and other advanced topics https://github.com/sw-yx/ts-spec/blob/master/conditional-types.md&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s video https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Utilities&lt;/h1&gt; 
&lt;p&gt;These are all built in, &lt;a href=&quot;https://github.com/microsoft/TypeScript/blob/2c458c0d1ccb96442bca9ce43aa987fb0becf8a9/src/lib/es5.d.ts#L1401-L1474&quot;&gt;see source in es5.d.ts&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ConstructorParameters&lt;/code&gt;: a tuple of class constructor&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Exclude&lt;/code&gt;: exclude a type from another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Extract&lt;/code&gt;: select a subtype that is assignable to another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;InstanceType&lt;/code&gt;: the instance type you get from a &lt;code&gt;new&lt;/code&gt;ing a class constructor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NonNullable&lt;/code&gt;: exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from a type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Parameters&lt;/code&gt;: a tuple of a function&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Partial&lt;/code&gt;: Make all properties in an object optional&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Readonly&lt;/code&gt;: Make all properties in an object readonly&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadonlyArray&lt;/code&gt;: Make an immutable array of the given type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pick&lt;/code&gt;: A subtype of an object type with a subset of its keys&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Record&lt;/code&gt;: A map from a key type to a value type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Required&lt;/code&gt;: Make all properties in an object required&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReturnType&lt;/code&gt;: A function&#39;s return type&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: tsconfig.json&lt;/h1&gt; 
&lt;p&gt;You can find &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;all the Compiler options in the TypeScript docs&lt;/a&gt;. &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;The new TS docs also has per-flag annotations of what each does&lt;/a&gt;. This is the setup I roll with for APPS (not libraries - for libraries you may wish to see the settings we use in &lt;code&gt;tsdx&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;incremental&quot;: true,
    &quot;outDir&quot;: &quot;build/lib&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;lib&quot;: [&quot;dom&quot;, &quot;esnext&quot;],
    &quot;sourceMap&quot;: true,
    &quot;importHelpers&quot;: true,
    &quot;declaration&quot;: true,
    &quot;rootDir&quot;: &quot;src&quot;,
    &quot;strict&quot;: true,
    &quot;noUnusedLocals&quot;: true,
    &quot;noUnusedParameters&quot;: true,
    &quot;noImplicitReturns&quot;: true,
    &quot;noFallthroughCasesInSwitch&quot;: true,
    &quot;allowJs&quot;: false,
    &quot;jsx&quot;: &quot;react&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;baseUrl&quot;: &quot;src&quot;,
    &quot;forceConsistentCasingInFileNames&quot;: true,
    &quot;esModuleInterop&quot;: true,
    &quot;suppressImplicitAnyIndexErrors&quot;: true,
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;experimentalDecorators&quot;: true
  },
  &quot;include&quot;: [&quot;src/**/*&quot;],
  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;build&quot;, &quot;scripts&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more &lt;a href=&quot;https://github.com/tsconfig/bases&quot;&gt;recommended TS config here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please open an issue and discuss if there are better recommended choices for React.&lt;/p&gt; 
&lt;p&gt;Selected flags and why we like them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;esModuleInterop&lt;/code&gt;: disables namespace imports (&lt;code&gt;import * as foo from &quot;foo&quot;&lt;/code&gt;) and enables CJS/AMD/UMD style imports (&lt;code&gt;import fs from &quot;fs&quot;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: &lt;code&gt;strictPropertyInitialization&lt;/code&gt; forces you to initialize class properties or explicitly declare that they can be undefined. You can opt out of this with a definite assignment assertion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;typeRoots&quot;: [&quot;./typings&quot;, &quot;./node_modules/@types&quot;]&lt;/code&gt;: By default, TypeScript looks in &lt;code&gt;node_modules/@types&lt;/code&gt; and parent folders for third party type declarations. You may wish to override this default resolution so you can put all your global type declarations in a special &lt;code&gt;typings&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compilation speed grows linearly with size of codebase. For large projects, you will want to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/project-references.html&quot;&gt;Project References&lt;/a&gt;. See our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro/&quot;&gt;ADVANCED&lt;/a&gt; cheatsheet for commentary.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/h1&gt; 
&lt;p&gt;If you run into bugs with your library&#39;s official typings, you can copy them locally and tell TypeScript to use your local version using the &quot;paths&quot; field. In your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;paths&quot;: {
      &quot;mobx-react&quot;: [&quot;../typings/modules/mobx-react&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AdamRackis/status/1024827730452520963&quot;&gt;Thanks to @adamrackis for the tip.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you just need to add an interface, or add missing members to an existing interface, you don&#39;t need to copy the whole typing package. Instead, you can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot; {
  interface PlotlyHTMLElement {
    removeAllListeners(): void;
  }
}

// MyComponent.tsx
import { PlotlyHTMLElement } from &quot;plotly.js&quot;;

const f = (e: PlotlyHTMLElement) =&amp;gt; {
  e.removeAllListeners();
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You dont always have to implement the module, you can simply import the module as &lt;code&gt;any&lt;/code&gt; for a quick start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot;; // each of its imports are `any`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because you don&#39;t have to explicitly import this, this is known as an &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#pitfalls-of-namespaces-and-modules&quot;&gt;ambient module declaration&lt;/a&gt;. You can do AMD&#39;s in a script-mode &lt;code&gt;.ts&lt;/code&gt; file (no imports or exports), or a &lt;code&gt;.d.ts&lt;/code&gt; file anywhere in your project.&lt;/p&gt; 
&lt;p&gt;You can also do ambient variable and ambient type declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// ambient utiltity type
type ToArray&amp;lt;T&amp;gt; = T extends unknown[] ? T : T[];
// ambient variable
declare let process: {
  env: {
    NODE_ENV: &quot;development&quot; | &quot;production&quot;;
  };
};
process = {
  env: {
    NODE_ENV: &quot;production&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see examples of these included in the built in type declarations in the &lt;code&gt;lib&lt;/code&gt; field of &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: https://blog.mariusschulz.com/series/typescript-evolution with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: https://basarat.gitbook.io/typescript/&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/production-typescript/&quot;&gt;Mike North&#39;s Production TypeScript course on Frontend Masters (paid)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jenil.github.io/chota/&quot;&gt;TSX Guide&lt;/a&gt; by &lt;a href=&quot;https://github.com/gojutin/www.tsx.guide&quot;&gt;gojutin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Editor Tooling and Integration&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;VSCode 
  &lt;ul&gt; 
   &lt;li&gt;swyx&#39;s VSCode Extension: https://github.com/sw-yx/swyx-react-typescript-snippets&lt;/li&gt; 
   &lt;li&gt;amVim: https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VIM 
  &lt;ul&gt; 
   &lt;li&gt;https://github.com/Quramy/tsuquyomi&lt;/li&gt; 
   &lt;li&gt;nvim-typescript?&lt;/li&gt; 
   &lt;li&gt;https://github.com/leafgarland/typescript-vim&lt;/li&gt; 
   &lt;li&gt;peitalin/vim-jsx-typescript&lt;/li&gt; 
   &lt;li&gt;NeoVim: https://github.com/neoclide/coc.nvim&lt;/li&gt; 
   &lt;li&gt;other discussion: https://mobile.twitter.com/ryanflorence/status/1085715595994095620&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You are free to use this repo&#39;s TSX logo if you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; alt=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to use alternative logos - &lt;a href=&quot;https://github.com/Protectator/jsx-tsx-logos&quot;&gt;jsx-tsx-logos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot; alt=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Linting&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️Note that &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint is now in maintenance and you should try to use ESLint instead&lt;/a&gt;. If you are interested in TSLint tips, please check this PR from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/14&quot;&gt;@azdanov&lt;/a&gt;. The rest of this section just focuses on ESLint. &lt;a href=&quot;https://github.com/typescript-eslint/tslint-to-eslint-config&quot;&gt;You can convert TSlint to ESlint with this tool&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️This is an evolving topic. &lt;code&gt;typescript-eslint-parser&lt;/code&gt; is no longer maintained and &lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot;&gt;work has recently begun on &lt;code&gt;typescript-eslint&lt;/code&gt; in the ESLint community&lt;/a&gt; to bring ESLint up to full parity and interop with TSLint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the TypeScript + ESLint docs at https://github.com/typescript-eslint/typescript-eslint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;add a &lt;code&gt;lint&lt;/code&gt; script to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint &#39;src/**/*.ts&#39;&quot;
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and a suitable &lt;code&gt;.eslintrc.js&lt;/code&gt; (using &lt;code&gt;.js&lt;/code&gt; over &lt;code&gt;.json&lt;/code&gt; here so we can add comments):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  env: {
    es6: true,
    node: true,
    jest: true,
  },
  extends: &quot;eslint:recommended&quot;,
  parser: &quot;@typescript-eslint/parser&quot;,
  plugins: [&quot;@typescript-eslint&quot;],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: &quot;module&quot;,
  },
  rules: {
    indent: [&quot;error&quot;, 2],
    &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],
    quotes: [&quot;error&quot;, &quot;single&quot;],
    &quot;no-console&quot;: &quot;warn&quot;,
    &quot;no-unused-vars&quot;: &quot;off&quot;,
    &quot;@typescript-eslint/no-unused-vars&quot;: [
      &quot;error&quot;,
      { vars: &quot;all&quot;, args: &quot;after-used&quot;, ignoreRestSiblings: false },
    ],
    &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;warn&quot;, // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    &quot;no-empty&quot;: &quot;warn&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most of this is taken from &lt;a href=&quot;https://github.com/palmerhq/tsdx/pull/70/files&quot;&gt;the &lt;code&gt;tsdx&lt;/code&gt; PR&lt;/a&gt; which is for &lt;strong&gt;libraries&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;More &lt;code&gt;.eslintrc.json&lt;/code&gt; options to consider with more options you may want for &lt;strong&gt;apps&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/react&quot;,
    &quot;plugin:prettier/recommended&quot;,
    &quot;plugin:jest/recommended&quot;,
    &quot;plugin:unicorn/recommended&quot;
  ],
  &quot;plugins&quot;: [&quot;prettier&quot;, &quot;jest&quot;, &quot;unicorn&quot;],
  &quot;parserOptions&quot;: {
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;jest&quot;: true
  },
  &quot;settings&quot;: {
    &quot;import/resolver&quot;: {
      &quot;node&quot;: {
        &quot;extensions&quot;: [&quot;.js&quot;, &quot;.jsx&quot;, &quot;.ts&quot;, &quot;.tsx&quot;]
      }
    }
  },
  &quot;overrides&quot;: [
    {
      &quot;files&quot;: [&quot;**/*.ts&quot;, &quot;**/*.tsx&quot;],
      &quot;parser&quot;: &quot;typescript-eslint-parser&quot;,
      &quot;rules&quot;: {
        &quot;no-undef&quot;: &quot;off&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://blog.matterhorn.dev/posts/learn-typescript-linting-part-1/&quot;&gt;fuller TypeScript + ESLint setup guide here&lt;/a&gt; from Matterhorn, in particular check https://github.com/MatterhornDev/learn-typescript-linting.&lt;/p&gt; 
&lt;p&gt;Another great resource is &lt;a href=&quot;https://dev.to/robertcoopercode/using-eslint-and-prettier-in-a-typescript-project-53jb&quot;&gt;&quot;Using ESLint and Prettier in a TypeScript Project&quot;&lt;/a&gt; by @robertcoopercode.&lt;/p&gt; 
&lt;p&gt;Wes Bos is also working on &lt;a href=&quot;https://github.com/wesbos/eslint-config-wesbos/issues/68&quot;&gt;TypeScript support for his eslint+prettier config.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for information on Prettier, check out the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/blob/main/docs/advanced/misc-concerns.md#prettier&quot;&gt;Prettier&lt;/a&gt; guide.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react&quot;&gt;Stefan Baumgartner&#39;s TypeScript + React Guide&lt;/a&gt;, which serves as a side-by-side guide to the official docs with extra articles on styling, custom hooks and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react&quot;&gt;DefinitelyTyped React source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Recommended React + TypeScript talks&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_PBQ3if6Fmg&quot;&gt;Ultimate React Component Patterns with TypeScript&lt;/a&gt;, by Martin Hochel, GeeCon Prague 2018&lt;/li&gt; 
 &lt;li&gt;Please help contribute this new section!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: https://blog.mariusschulz.com/series/typescript-evolution with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: https://basarat.gitbook.io/typescript/&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Example App&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laststance/create-react-app-typescript-todo-example-2020&quot;&gt;Create React App TypeScript Todo Example 2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6ypD7qv3Z8&quot;&gt;Ben Awad&#39;s 14 hour Fullstack React/GraphQL/TypeScript Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-realworld-app&quot;&gt;Cypress Realworld App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;My question isn&#39;t answered here!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. See &lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;CONTRIBUTORS.md&lt;/a&gt; for the full list. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>processing/p5.js</title>
      <link>https://github.com/processing/p5.js</link>
      <description>&lt;p&gt;p5.js is a client-side JS platform that empowers artists, designers, students, and anyone to learn to code and express themselves creatively on the web. It is based on the core principles of Processing. http://twitter.com/p5xjs —&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/p5&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/p5.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://p5js.org&quot;&gt;p5.js&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Welcome! 👋👋🏿👋🏽👋🏻👋🏾👋🏼&lt;/p&gt; 
&lt;p&gt;p5.js is a JavaScript library for creative coding, with a focus on making coding accessible and inclusive for artists, designers, educators, beginners, and anyone else! p5.js is free and open-source because we believe software, and the tools to learn it, should be accessible to everyone.&lt;/p&gt; 
&lt;p&gt;Using the metaphor of a sketch, p5.js has a full set of drawing functionality using the HTML5 canvas element. You’re not limited to the drawing canvas though. You can think of your whole browser page as your sketch, including HTML5 objects for text, input, video, webcam, and sound.&lt;/p&gt; 
&lt;p&gt;p5.js draws inspiration, wisdom, and guidance from its precursor &lt;a href=&quot;https://processing.org&quot;&gt;Processing&lt;/a&gt;. However, it is a new interpretation, not an emulation or port. We don&#39;t aim to match Processing&#39;s set of functionality exactly, allowing ourselves space to deviate and grow in the context of the web.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://p5js.org&quot;&gt;p5js.org&lt;/a&gt; website contains an extensive overview of the project, community, documentation, and examples. If you already know the basics of JavaScript or Processing, the &lt;a href=&quot;https://github.com/processing/p5.js/wiki/p5.js-overview&quot;&gt;p5.js overview&lt;/a&gt; wiki page is a good place to start.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;We are a community of, and in solidarity with, people from every gender identity and expression, sexual orientation, race, ethnicity, language, neuro-type, size, ability, class, religion, culture, subculture, political opinion, age, skill level, occupation, and background. We acknowledge that not everyone has the time, financial means, or capacity to actively participate, but we recognize and encourage involvement of all kinds. We facilitate and foster access and empowerment. We are all learners.&lt;/p&gt; 
&lt;p&gt;p5.js is a collaborative project created by many individuals, mostly volunteers, and you are invited to help. All types of involvement are welcome. See the &lt;a href=&quot;https://p5js.org/community&quot;&gt;community section&lt;/a&gt; to get started! You can also check out the &lt;a href=&quot;https://p5js.org/contributor-docs/#/&quot;&gt;contributor docs&lt;/a&gt; for more in-depth details about contributing to different areas of the project, including code, bug fixes, documentation, discussion, and more.&lt;/p&gt; 
&lt;p&gt;Learn more about &lt;a href=&quot;https://p5js.org/community/&quot;&gt;our community&lt;/a&gt; and read our community statement and &lt;a href=&quot;https://github.com/processing/p5.js/blob/main/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;. You can directly support our work with p5.js by &lt;a href=&quot;https://processingfoundation.org/support&quot;&gt;donating to the Processing Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Make your first sketch in the &lt;a href=&quot;https://editor.p5js.org/&quot;&gt;p5.js Editor&lt;/a&gt;! Learn more about sketching with p5.js on the &lt;a href=&quot;https://p5js.org/get-started/&quot;&gt;Get Started&lt;/a&gt; and find everything you can do in the &lt;a href=&quot;https://p5js.org/reference/&quot;&gt;Reference&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get the complete p5.js library on your own computer, you can &lt;a href=&quot;https://p5js.org/download&quot;&gt;download it here&lt;/a&gt;. If you are interested in the most recent, less stable version, or even simply in (&lt;strong&gt;new!&lt;/strong&gt;) certain components of p5.js, you can clone this repository and run &lt;code&gt;grunt&lt;/code&gt; from the command line to generate the library from source. See the &lt;a href=&quot;https://p5js.org/contributor-docs/#/&quot;&gt;contributor docs&lt;/a&gt; for more information about our build process.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;If you have found a bug in the p5.js library, you can file it here under the &lt;a href=&quot;https://github.com/processing/p5.js/issues&quot;&gt;“issues” tab&lt;/a&gt;. You can also request new features here. A set of templates for reporting issues and requesting features are provided to assist you (and us!). p5.js is maintained mostly by volunteers, so we thank you for your patience as we try to address your issues as soon as we can. Please post in the correct repository if you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;p5.js general: &lt;a href=&quot;https://github.com/processing/p5.js/issues&quot;&gt;https://github.com/processing/p5.js/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;p5.sound: &lt;a href=&quot;https://github.com/processing/p5.js-sound/issues&quot;&gt;https://github.com/processing/p5.js-sound/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;p5.js website: &lt;a href=&quot;https://github.com/processing/p5.js-website/issues&quot;&gt;https://github.com/processing/p5.js-website/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;p5.js web editor: &lt;a href=&quot;https://github.com/processing/p5.js-web-editor/issues&quot;&gt;https://github.com/processing/p5.js-web-editor/issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learning&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://p5js.org&quot;&gt;p5js.org&lt;/a&gt; for lots more! Here are some quick-links to get started learning p5.js.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://p5js.org/get-started&quot;&gt;Get Started&lt;/a&gt;: Create and run your first sketch!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/processing/p5.js/wiki/p5.js-overview&quot;&gt;p5.js overview&lt;/a&gt;: An overview of the main features and functionality of p5.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://p5js.org/reference&quot;&gt;Reference&lt;/a&gt;: The functionality supported by p5.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://p5js.org/learn&quot;&gt;Learn&lt;/a&gt;: Tutorials and short, prototypical examples exploring the basics of p5.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discourse.processing.org/c/p5js&quot;&gt;Forum&lt;/a&gt;: Ask and answers questions about how to make things with p5.js here&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://p5js.org/libraries&quot;&gt;Libraries&lt;/a&gt;: Extend p5 functionality to interact with HTML, manipulate sound, and more!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thecodingtrain.com/beginners/p5js/&quot;&gt;The Coding Train p5.js Tutorials&lt;/a&gt;: A huge trove of tutorials created by Dan Shiffman and friends&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stewards&lt;/h2&gt; 
&lt;p&gt;Stewards are contributors that are particularly involved, familiar, or responsive to certain areas of the project. Their role is to help provide context and guidance to others working on p5.js. If you have a question about contributing to a particular area, you can tag the listed steward in an issue or pull request. They may also weigh in on feature requests and guide the overall direction of their area, with the input of the community. You can read more about the organization of the project at &lt;a href=&quot;https://github.com/processing/p5.js/blob/main/contributor_docs/organization.md&quot;&gt;contributor_docs/organization.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Anyone interested can volunteer to be a steward! There are no specific requirements for expertise, just an interest in actively learning and participating. If you’re familiar with one or more parts of this project, open an issue to volunteer as a steward!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcturner1995&quot;&gt;@mcturner1995&lt;/a&gt; - project lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lmccart&quot;&gt;@lmccart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outofambit&quot;&gt;@outofambit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/limzykenneth&quot;&gt;@limzykenneth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stalgiag&quot;&gt;@stalgiag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/montoyamoraga&quot;&gt;@montoyamoraga&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| Area | Steward(s) | | :-------------------------------- | :------------------------------------------- | | Accessibility (Web Accessibility) | outofambit | | Color | outofambit | | Core/Environment/Rendering | outofambit
 &lt;!-- raw HTML omitted --&gt;limzykenneth | | Data | | | DOM | outofambit | | Events | outofambit
 &lt;!-- raw HTML omitted --&gt;limzykenneth | | Image | stalgiag | | IO | limzykenneth | | Math | limzykenneth | | Typography | | | Utilities | | | WebGL | stalgiag | | Build Process/Unit Testing | outofambit | | Localization Tools | outofambit | | Friendly Errors | outofambit | | &lt;a href=&quot;https://github.com/processing/p5.js-website&quot;&gt;Website&lt;/a&gt; | limzykenneth |&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;We recognize all types of contributions. This project follows the &lt;a href=&quot;https://github.com/kentcdodds/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Instructions to add yourself or add contribution emojis to your name are &lt;a href=&quot;https://github.com/processing/p5.js/issues/2309&quot;&gt;here&lt;/a&gt;. You can also post an issue or comment with the text: &lt;code&gt;@all-contributors please add @YOUR-USERNAME for THING(S)&lt;/code&gt; and our nice bot will add you.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://github.com/kentcdodds/all-contributors#emoji-key&quot;&gt;emoji key&lt;/a&gt;)!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BrasilAPI/BrasilAPI</title>
      <link>https://github.com/BrasilAPI/BrasilAPI</link>
      <description>&lt;p&gt;Vamos transformar o Brasil em uma API?&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://sonarcloud.io/dashboard?id=BrasilAPI_BrasilAPI&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=BrasilAPI_BrasilAPI&amp;amp;metric=alert_status&quot; alt=&quot;Quality Gate Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=BrasilAPI_BrasilAPI&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=BrasilAPI_BrasilAPI&amp;amp;metric=code_smells&quot; alt=&quot;Code Smells&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=BrasilAPI_BrasilAPI&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=BrasilAPI_BrasilAPI&amp;amp;metric=sqale_rating&quot; alt=&quot;Maintainability Rating&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=BrasilAPI_BrasilAPI&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=BrasilAPI_BrasilAPI&amp;amp;metric=security_rating&quot; alt=&quot;Security Rating&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=BrasilAPI_BrasilAPI&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=BrasilAPI_BrasilAPI&amp;amp;metric=vulnerabilities&quot; alt=&quot;Vulnerabilities&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Motivo&lt;/h2&gt; 
&lt;p&gt;Acesso programático de informações é algo fundamental na comunicação entre sistemas mas, para nossa surpresa, uma informação tão útil e pública quanto um CEP não consegue ser acessada diretamente por um navegador por conta da API dos Correios não possuir CORS habilitado.&lt;/p&gt; 
&lt;p&gt;Dado a isso, este projeto experimental tem como objetivo centralizar e disponibilizar endpoints modernos com baixíssima latência utilizando tecnologias como &lt;a href=&quot;https://vercel.com/smart-cdn/?utm_source=brasilapi&quot;&gt;Vercel Smart CDN&lt;/a&gt; responsável por fazer o cache das informações em atualmente 23 regiões distribuídas ao longo do mundo (incluindo Brasil). Então não importa o quão devagar for a fonte dos dados, nós queremos disponibilizá-la da forma mais rápida e moderna possível.&lt;/p&gt; 
&lt;h2&gt;Como contribuir&lt;/h2&gt; 
&lt;p&gt;Através do &lt;a href=&quot;https://nextjs.org/?utm_source=brasilapi&quot;&gt;Next.js&lt;/a&gt;, um framework utilizado por empresas como Marvel, Twitch, Nike, Hulu, TypeForm, Nubank, Ferrari, TikTok, Square Enix, entre outras, estamos construindo a página de apresentação do projeto e, por ser um framework híbrido, ele possibilita a construção e deploy de APIs com o mínimo de configuração possível em uma infraestrutura autoescalável da &lt;a href=&quot;https://vercel.com/?utm_source=brasilapi&quot;&gt;Vercel&lt;/a&gt;, a mesma que conta com recursos sensacionais como a &lt;a href=&quot;https://vercel.co/smart-cdn/?utm_source=brasilapi&quot;&gt;Vercel Smart CDN&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Caso você esteja lendo esta versão de README, você está pegando o projeto num estágio extremamente inicial, porém empolgante, pois há várias coisas a serem definidas. Então caso queira contribuir, utilize as issues para entender quais pontos ainda não foram resolvidos, conversar conosco e contribuir tanto com idéias técnicas, quanto de quais APIs podem ser criadas.&lt;/p&gt; 
&lt;p&gt;Veja mais detalhes sobre &lt;strong&gt;Como contribuir&lt;/strong&gt; no arquivo &lt;a href=&quot;https://raw.githubusercontent.com/BrasilAPI/BrasilAPI/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Endpoints&lt;/h2&gt; 
&lt;p&gt;O primeiro endpoint a ser implementado precisava ser o que estava nos dando a maior dor de cabeça: busca de um endereço através do CEP. É um endpoint extremamente simples de implementar, mas vários detalhes ainda não foram resolvidos, como garantir seu comportamento através de testes E2E utilizando a Preview URL que a Vercel retorna a cada Pull Request. Depois de consolidarmos as melhores práticas para esse endpoint, poderemos replicar para todos os outros que irão vir.&lt;/p&gt; 
&lt;h3&gt;CEP&lt;/h3&gt; 
&lt;p&gt;Busca por CEP com múltiplos providers de fallback.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;https://brasilapi.com.br/api/cep/v1/&lt;/code&gt;&lt;strong&gt;[cep]&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Consulta com sucesso&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/cep/v1/05010000

{
  &quot;cep&quot;: &quot;05010000&quot;,
  &quot;state&quot;: &quot;SP&quot;,
  &quot;city&quot;: &quot;São Paulo&quot;,
  &quot;neighborhood&quot;: &quot;Perdizes&quot;,
  &quot;street&quot;: &quot;Rua Caiubi&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Consulta com erro&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/cep/v1/00000000

{
  &quot;name&quot;: &quot;CepPromiseError&quot;,
  &quot;message&quot;: &quot;Todos os serviços de CEP retornaram erro.&quot;,
  &quot;type&quot;: &quot;service_error&quot;,
  &quot;errors&quot;: [
    {
      &quot;name&quot;: &quot;ServiceError&quot;,
      &quot;message&quot;: &quot;CEP INVÁLIDO&quot;,
      &quot;service&quot;: &quot;correios&quot;
    },
    {
      &quot;name&quot;: &quot;ServiceError&quot;,
      &quot;message&quot;: &quot;CEP não encontrado na base do ViaCEP.&quot;,
      &quot;service&quot;: &quot;viacep&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Banks&lt;/h3&gt; 
&lt;p&gt;Busca por dados dos bancos brasileiros direto na base de dados do Bacen.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;https://brasilapi.com.br/api/banks/v1/&lt;/code&gt;&lt;strong&gt;[code]&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Consulta com sucesso&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/banks/v1/260

{
  &quot;ispb&quot;: &quot;18236120&quot;,
  &quot;name&quot;: &quot;NU PAGAMENTOS S.A.&quot;,
  &quot;code&quot;: 260,
  &quot;fullName&quot;: &quot;Nu Pagamentos S.A.&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Consulta com código incorreto&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/banks/v1/1111111

{
  &quot;message&quot;: &quot;Código bancário não encontrado&quot;,
  &quot;type&quot;: &quot;BANK_CODE_NOT_FOUND&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;https://brasilapi.com.br/api/banks/v1&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Consulta com sucesso&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/banks/v1

[
  {
    &quot;ispb&quot;: &quot;18236120&quot;,
    &quot;name&quot;: &quot;NU PAGAMENTOS S.A.&quot;,
    &quot;code&quot;: 260,
    &quot;fullName&quot;: &quot;Nu Pagamentos S.A.&quot;
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;DDD&lt;/h3&gt; 
&lt;p&gt;Busca as cidades brasileiras referente a um DDD.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;https://brasilapi.com.br/api/ddd/v1/11&lt;/code&gt;&lt;strong&gt;[code]&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Consulta com sucesso&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/ddd/v1/11

{
  &quot;state&quot;: &quot;SP&quot;,
  &quot;cities&quot;: [
    &quot;EMBU&quot;,
    &quot;VÁRZEA PAULISTA&quot;,
    &quot;VARGEM GRANDE PAULISTA&quot;,
    &quot;VARGEM&quot;,
    &quot;TUIUTI&quot;,
    &quot;TABOÃO DA SERRA&quot;,
    &quot;SUZANO&quot;,
    &quot;SÃO ROQUE&quot;,
    &quot;SÃO PAULO&quot;,
    ...
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Consulta com ddd incorreto&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/ddd/v1/01

{
  &quot;name&quot;: &quot;ddd_error&quot;,
  &quot;message&quot;: &quot;DDD não encontrado&quot;,
  &quot;type&quot;: &quot;DDD_NOT_FOUND&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Consulta com erro&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// GET https://brasilapi.com.br/api/ddd/v1/17

{
  &quot;name&quot;: &quot;ddd_error&quot;,
  &quot;message&quot;: &quot;Todos os serviços de DDD retornaram erro.&quot;,
  &quot;type&quot;: &quot;service_error&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Termos de Uso&lt;/h2&gt; 
&lt;p&gt;O BrasilAPI é uma iniciativa feita de brasileiros para brasileiros, por favor, não abuse deste serviço. Estamos em beta e ainda elaborando os Termos de Uso, mas por enquanto por favor não utilize formas automatizadas para fazer &quot;crawling&quot; dos dados da API. Um exemplo prático disto é um dos maiores provedores de telefonia do Brasil estar revalidando, neste exato momento, todos os Ceps (de&amp;nbsp;&lt;code&gt;00000000&lt;/code&gt; até&amp;nbsp;&lt;code&gt;99999999&lt;/code&gt;) e estourando em 5 vezes o limite atual da nossa conta no servidor. O volume de consulta dever ter a natureza de uma pessoa real requisitando um determinado dado. E para consultas com um alto volume automatizado, iremos mais para frente fornecer alguma solução, como por exemplo, conseguir fazer o download de toda a base de Ceps em uma única request.&lt;/p&gt; 
&lt;h2&gt;Contribuidores&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/kevenleone&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@kevenleone
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/OtavioCapila&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@OtavioCapila
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/rafamancan&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@rafamancan
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/lucas-eduardo&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@lucas-eduardo
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/eliseumds&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@eliseumds
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/evertoncastro&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@evertoncastro
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | | :---: | :---: | :---: | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/mukaschultze&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@mukaschultze
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/paulogdm&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@paulogdm
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/mathleite&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@mathleite
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/WeslleyNasRocha&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@WeslleyNasRocha
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/paulo-santana&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@paulo-santana
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/RaphaelOliveiraMoura&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@RaphaelOliveiraMoura
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | | &lt;a href=&quot;https://github.com/guiaramos&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@guiaramos
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/marceloF5&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@marceloF5
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/tupizz&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@tupizz
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/FlavioAndre&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@FlavioAndre
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/matheusvellone&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@matheusvellone
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/danielramosbh74&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@danielramosbh74
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | | &lt;a href=&quot;https://github.com/juniorpb&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@juniorpb
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/CarlosZiegler&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@CarlosZiegler
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/otaciliolacerda&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@otaciliolacerda
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/RodriAndreotti&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@RodriAndreotti
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/lucasbastianik&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@lucasbastianik
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/paulosales&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@paulosales
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | | &lt;a href=&quot;https://github.com/eklauberg&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@eklauberg
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Autores&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/filipedeschamps&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@filipedeschamps
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/lucianopf&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;@lucianopf
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt; | | :---: | :---: |&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>videojs/video.js</title>
      <link>https://github.com/videojs/video.js</link>
      <description>&lt;p&gt;Video.js - open source HTML5 &amp; Flash video player&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://videojs.com/logo-white.png&quot; alt=&quot;Video.js logo&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://videojs.com&quot;&gt;Video.js - HTML5 Video Player&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/videojs/video.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/videojs/video.js.svg?branch=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/videojs/video.js?branch=main&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/videojs/video.js/badge.svg?branch=main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://greenkeeper.io/&quot;&gt;&lt;img src=&quot;https://badges.greenkeeper.io/videojs/video.js.svg&quot; alt=&quot;Greenkeeper badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://slack.videojs.com&quot;&gt;&lt;img src=&quot;http://slack.videojs.com/badge.svg&quot; alt=&quot;Slack Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodei.co/npm/video.js/&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/video.js.png?downloads=true&amp;amp;downloadRank=true&quot; alt=&quot;NPM&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Video.js is a web video player built from the ground up for an HTML5 world. It supports HTML5 video and Media Source Extensions, as well as other playback techs like YouTube and Vimeo (through &lt;a href=&quot;https://videojs.com/plugins/&quot;&gt;plugins&lt;/a&gt;). It supports video playback on desktops and mobile devices. This project was started mid 2010, and the player is now used on over ~~50,000~~ ~~100,000~~ ~~200,000~~ ~~400,000~~ &lt;a href=&quot;https://trends.builtwith.com/media/VideoJS&quot;&gt;600,000 websites&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Thanks to the awesome folks over at &lt;a href=&quot;https://www.fastly.com/&quot;&gt;Fastly&lt;/a&gt;, there&#39;s a free, CDN hosted version of Video.js that anyone can use. Add these tags to your document&#39;s &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link href=&quot;//vjs.zencdn.net/7.10.2/video-js.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;//vjs.zencdn.net/7.10.2/video.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For the latest version of video.js and URLs to use, check out the &lt;a href=&quot;https://videojs.com/getting-started/&quot;&gt;Getting Started&lt;/a&gt; page on our website.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Video.js version 7 (and newer) CDN builds do not send any data to Google Analytics.&lt;/p&gt; 
&lt;p&gt;In older versions of Video.js (6 and earlier), in the &lt;code&gt;vjs.zencdn.net&lt;/code&gt; CDN-hosted versions we include a &lt;a href=&quot;https://github.com/videojs/cdn/blob/master/src/analytics.js&quot;&gt;stripped down Google Analytics pixel&lt;/a&gt; that tracks a random sampling (currently 1%) of players loaded from the CDN. This allows us to see (roughly) what browsers are in use in the wild, along with other useful metrics such as OS and device. If you&#39;d like to disable analytics, you can simply include the following global before including Video.js via the free CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script&amp;gt;window.HELP_IMPROVE_VIDEOJS = false;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can include Video.js by getting it from &lt;a href=&quot;https://videojs.com/getting-started/#install-via-npm&quot;&gt;npm&lt;/a&gt;, downloading from &lt;a href=&quot;https://github.com/videojs/video.js/releases&quot;&gt;GitHub releases&lt;/a&gt; or by including it via &lt;a href=&quot;https://unpkg.com&quot;&gt;unpkg&lt;/a&gt; or another JavaScript CDN like CDNjs. These releases &lt;em&gt;do not&lt;/em&gt; include Google Analytics tracking at all.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- unpkg : use the latest version of Video.js --&amp;gt;
&amp;lt;link href=&quot;https://unpkg.com/video.js/dist/video-js.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;https://unpkg.com/video.js/dist/video.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- unpkg : use a specific version of Video.js (change the version numbers as necessary) --&amp;gt;
&amp;lt;link href=&quot;https://unpkg.com/video.js@7.10.2/dist/video-js.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;https://unpkg.com/video.js@7.10.2/dist/video.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- cdnjs : use a specific version of Video.js (change the version numbers as necessary) --&amp;gt;
&amp;lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/video.js/7.10.2/video-js.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/video.js/7.10.2/video.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, using Video.js is as simple as creating a &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element, but with an additional &lt;code&gt;data-setup&lt;/code&gt; attribute. At a minimum, this attribute must have a value of &lt;code&gt;&#39;{}&#39;&lt;/code&gt;, but it can include any Video.js &lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/docs/guides/options.md&quot;&gt;options&lt;/a&gt; - just make sure it contains valid JSON!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;video
    id=&quot;my-player&quot;
    class=&quot;video-js&quot;
    controls
    preload=&quot;auto&quot;
    poster=&quot;//vjs.zencdn.net/v/oceans.png&quot;
    data-setup=&#39;{}&#39;&amp;gt;
  &amp;lt;source src=&quot;//vjs.zencdn.net/v/oceans.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;&amp;lt;/source&amp;gt;
  &amp;lt;source src=&quot;//vjs.zencdn.net/v/oceans.webm&quot; type=&quot;video/webm&quot;&amp;gt;&amp;lt;/source&amp;gt;
  &amp;lt;source src=&quot;//vjs.zencdn.net/v/oceans.ogv&quot; type=&quot;video/ogg&quot;&amp;gt;&amp;lt;/source&amp;gt;
  &amp;lt;p class=&quot;vjs-no-js&quot;&amp;gt;
    To view this video please enable JavaScript, and consider upgrading to a
    web browser that
    &amp;lt;a href=&quot;https://videojs.com/html5-video-support/&quot; target=&quot;_blank&quot;&amp;gt;
      supports HTML5 video
    &amp;lt;/a&amp;gt;
  &amp;lt;/p&amp;gt;
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When the page loads, Video.js will find this element and automatically setup a player in its place.&lt;/p&gt; 
&lt;p&gt;If you don&#39;t want to use automatic setup, you can leave off the &lt;code&gt;data-setup&lt;/code&gt; attribute and initialize a &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element manually using the &lt;code&gt;videojs&lt;/code&gt; function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var player = videojs(&#39;my-player&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;videojs&lt;/code&gt; function also accepts an &lt;code&gt;options&lt;/code&gt; object and a callback to be invoked when the player is ready:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var options = {};

var player = videojs(&#39;my-player&#39;, options, function onPlayerReady() {
  videojs.log(&#39;Your player is ready!&#39;);

  // In this context, `this` is the player that was created by Video.js.
  this.play();

  // How about an event listener?
  this.on(&#39;ended&#39;, function() {
    videojs.log(&#39;Awww...over so soon?!&#39;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re ready to dive in, the &lt;a href=&quot;https://videojs.com/getting-started/&quot;&gt;Getting Started&lt;/a&gt; page and &lt;a href=&quot;https://docs.videojs.com&quot;&gt;documentation&lt;/a&gt; are the best places to go for more information. If you get stuck, head over to our &lt;a href=&quot;http://slack.videojs.com&quot;&gt;Slack channel&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Video.js is a free and open source library, and we appreciate any help you&#39;re willing to give - whether it&#39;s fixing bugs, improving documentation, or suggesting new features. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; for more!&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Video.js uses &lt;a href=&quot;https://browserstack.com&quot;&gt;BrowserStack&lt;/a&gt; for compatibility testing.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/CODE_OF_CONDUCT.md&quot;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/LICENSE&quot;&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Video.js is &lt;a href=&quot;https://raw.githubusercontent.com/videojs/video.js/main/LICENSE&quot;&gt;licensed&lt;/a&gt; under the Apache License, Version 2.0.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
