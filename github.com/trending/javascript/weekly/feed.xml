<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Fri, 13 Aug 2021 02:11:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>clouDr-f2e/rubick</title>
      <link>https://github.com/clouDr-f2e/rubick</link>
      <description>&lt;p&gt;🔧 基于 electron 的开源工具箱，自由集成丰富插件。&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img align=&quot;center&quot; width=&quot;200&quot; src=&quot;https://user-images.githubusercontent.com/21073039/128333805-73e086f0-5523-46a3-a096-cba80b904c46.png&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;Rubick&lt;/h1&gt; 
 &lt;img alt=&quot;release&quot; src=&quot;https://img.shields.io/github/downloads/clouDr-f2e/rubick/total&quot;&gt; 
 &lt;a href=&quot;https://github.com/clouDr-f2e/rubick/releases&quot;&gt; &lt;img alt=&quot;release&quot; src=&quot;https://img.shields.io/github/package-json/v/clouDr-f2e/rubick&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/clouDr-f2e/rubick/actions&quot;&gt; &lt;img alt=&quot;building&quot; src=&quot;https://img.shields.io/github/workflow/status/clouDr-f2e/rubick/Build&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/clouDr-f2e/rubick/raw/master/LICENSE&quot;&gt; &lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/github/license/clouDr-f2e/rubick&quot;&gt; &lt;/a&gt; 
 &lt;img alt=&quot;star&quot; src=&quot;https://img.shields.io/github/stars/clouDr-f2e/rubick?style=social&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;基于 electron 的开源工具箱，自由集成丰富插件，打造极致的桌面端效能工具。Rubick(拉比克) 是 dota 里面的英雄之一，其核心技能是插件化使用其他英雄的技能，用完即走。非常符合本工具的设计理念，所以取名 Rubick。&lt;/p&gt; 
&lt;h2&gt;安装包&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clouDr-f2e/rubick/releases&quot;&gt;Rubick Mac OS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clouDr-f2e/rubick/releases&quot;&gt;Rubick Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持能力&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] 支持远程下载安装插件，支持插件开发者模式&lt;/li&gt; 
 &lt;li&gt;[x] 支持插件分离&lt;/li&gt; 
 &lt;li&gt;[x] 支持系统命令取色、截屏、帮助&lt;/li&gt; 
 &lt;li&gt;[x] 支持超级面板，长按右击呼出&lt;/li&gt; 
 &lt;li&gt;[x] 支持全局快捷键设置&lt;/li&gt; 
 &lt;li&gt;[x] 支持搜索本地已安装 app 或 偏好设置&lt;/li&gt; 
 &lt;li&gt;[x] 支持 Windows(目前是 mac 的 alpha 版本，功能尚不全，正在迁移中)&lt;/li&gt; 
 &lt;li&gt;[ ] 支持 Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/21073039/128359309-2377d3cf-7b70-4e8f-9973-ae8f337a8006.gif&quot; alt=&quot;example.gif&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;使用文档&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://cloudr-f2e.github.io/rubick/&quot;&gt;Rubick Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;使用问题&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;依赖于 &lt;code&gt;robotjs&lt;/code&gt; dev 环境运行请在 &lt;code&gt;install&lt;/code&gt; 后执行 &lt;code&gt;npm run rebuild&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;windows 版本目前有了一个最基础的可用版，代码在 &lt;a href=&quot;https://github.com/clouDr-f2e/rubick/tree/feat-win&quot;&gt;feat-win&lt;/a&gt; 分支。完整版正在开发中，敬请期待&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;目前支持能力&lt;/h2&gt; 
&lt;h3&gt;超级面板&lt;/h3&gt; 
&lt;p&gt;长按鼠标右键，即可呼起超级面板，可以根据当前鼠标选择内容，匹配对应插件能力。比如当前选择图片后长按右击，则会呼起上传图床插件：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1706cc730f1f46078cb700a445211317%7Etplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;模板&lt;/h3&gt; 
&lt;p&gt;模板即是一个内置 UI 样式的功能插件。&lt;/p&gt; 
&lt;img src=&quot;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b113ad547974699b9c73c28bc09b9b1~tplv-k3u1fbpfcp-watermark.image&quot; width=&quot;500&quot;&gt; 
&lt;h3&gt;系统命令&lt;/h3&gt; 
&lt;h4&gt;取色&lt;/h4&gt; 
&lt;p&gt;基于 &lt;code&gt;robot.js&lt;/code&gt; 以及 &lt;code&gt;iohook&lt;/code&gt; 实现。未使用 C++ 扩展。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3036ae85bf3549fc8bbbe2926ecbad55%7Etplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;截屏&lt;/h4&gt; 
&lt;img src=&quot;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/18023dab52e1420c9e87362cefddb2a1~tplv-k3u1fbpfcp-watermark.image&quot; width=&quot;500&quot;&gt; 
&lt;h4&gt;全局快捷键&lt;/h4&gt; 
&lt;img src=&quot;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62cc424eacac4c9eb178f0e055e87d9a~tplv-k3u1fbpfcp-watermark.image&quot; width=&quot;500&quot;&gt; 
&lt;h3&gt;最后&lt;/h3&gt; 
&lt;p&gt;对本项目有兴趣或者想要交流学习的同学可以扫码加下面的微信，备注 rubick，帮助我们更好的成长：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/21073039/127327603-9796f246-ee4b-4950-a69d-ce3205ec9569.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://github.com/clouDr-f2e/rubick/raw/master/LICENSE&quot;&gt;LICENSE.md&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alyssaxuu/mapus</title>
      <link>https://github.com/alyssaxuu/mapus</link>
      <description>&lt;p&gt;A map tool with real-time collaboration 🗺️&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mapus&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/preview.gif&quot; alt=&quot;Preview&quot;&gt; &lt;br&gt; Maps with real-time collaboration 🗺️&lt;/p&gt; 
&lt;p&gt;Mapus is a tool to explore and annotate collaboratively on a map. You can draw, add markers, lines, areas, find places to go, observe other users, and much more.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com/posts/mapus?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-mapus&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=307018&amp;amp;theme=light&amp;amp;period=weekly&quot; alt=&quot;Mapus - An open source map tool with real-time collaboration | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Made by &lt;a href=&quot;https://alyssax.com&quot;&gt;Alyssa X&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#installing-mapus&quot;&gt;Installing Mapus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#miscellaneous-ideas&quot;&gt;Miscellaneous ideas&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#feature-ideas&quot;&gt;Feature ideas&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#potential&quot;&gt;Potential use cases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#monetization&quot;&gt;Monetization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alyssaxuu/mapus/master/#libraries-used&quot;&gt;Libraries used&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;🙌 Real-time collaboration to help plan trips synchronously&lt;br&gt; ✏️ Draw to highlight areas on the map&lt;br&gt; 📏 Create lines to designate paths and measure distance&lt;br&gt; 📐 Create areas to mark different zones&lt;br&gt; 📍 Create markers to save places on the map&lt;br&gt; ☕️ Find places and things to do nearby&lt;br&gt; 🔍 Search and navigate to specific places&lt;br&gt; 👀 Observe other users by clicking on their avatar&lt;br&gt; 📝 View a list of all the annotations, and toggle their visibility&lt;br&gt; 💾 Export the map data as GeoJSON&lt;br&gt; …and much more - all for free!&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;It’s basically Google’s &lt;a href=&quot;https://www.google.com/maps/about/mymaps/&quot;&gt;MyMaps&lt;/a&gt;, except it has real-time collaboration.&lt;/p&gt; 
&lt;h2&gt;Installing Mapus&lt;/h2&gt; 
&lt;p&gt;Since real-time multiplayer can get expensive (even though Firebase has a pretty generous free plan), you’ll need to self-host Mapus to use it. Here’s how:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the code. In the web version of GitHub, you can do that by clicking the green “Code” button, and then “Download ZIP”. You’ll be using the src folder.&lt;/li&gt; 
 &lt;li&gt;Create a Firebase account and project. You can check out the &lt;a href=&quot;https://firebase.google.com/docs/web/setup?authuser=0&quot;&gt;docs&lt;/a&gt; to see how to get started.&lt;/li&gt; 
 &lt;li&gt;Create a Realtime Database. You may need to set up specific rules to keep the data safe, &lt;a href=&quot;https://firebase.google.com/docs/database/security?authuser=0&quot;&gt;here’s&lt;/a&gt; an overview. The default rules though will work fine for testing and development, just not for production.&lt;/li&gt; 
 &lt;li&gt;Enable Google Sign In in the Firebase console. &lt;a href=&quot;https://firebase.google.com/docs/auth/web/google-signin?authuser=0&quot;&gt;Here’s how&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Replace the Firebase config object in the &lt;a href=&quot;https://github.com/alyssaxuu/mapus/raw/8d8d914f97fac60d9e60e1978b8b064c0d888ef6/src/index.html#L152&quot;&gt;index.html&lt;/a&gt; file with your own. The &lt;a href=&quot;https://firebase.google.com/docs/web/setup?authuser=0#config-object&quot;&gt;docs&lt;/a&gt; explain how to get the object.&lt;/li&gt; 
 &lt;li&gt;At this point you could just use the tool as is, but if you want to make sure you don’t go over the Firebase free plan limits, you could set up the &lt;a href=&quot;https://firebase.google.com/docs/emulator-suite/install_and_configure?authuser=0&quot;&gt;Firebase Emulator&lt;/a&gt; and run everything locally 100% for free.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note that since Mapus has a MIT License you are free to set it up in a domain or even commercialize it.&lt;/p&gt; 
&lt;h2&gt;Miscellaneous ideas&lt;/h2&gt; 
&lt;p&gt;Throughout the development of Mapus I’ve had several ideas in regards to additional features, potential use cases, and more. I thought it would be a good idea to share, if anyone wants to contribute to Mapus, or make their own version.&lt;/p&gt; 
&lt;h3&gt;&lt;a name=&quot;feature-ideas&quot;&gt;&lt;/a&gt;Feature ideas 🚀&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;A list of maps in the dashboard created by or shared with the user.&lt;/b&gt; There’s &lt;a href=&quot;https://github.com/grinat/leaflet-simple-map-screenshoter&quot;&gt;this plugin&lt;/a&gt; that creates screenshots of a Leaflet map, it could be useful to generate thumbnails (saving them in Firebase storage).&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Routing, to show a path between 2 points.&lt;/b&gt; I considered adding this feature in launch, but ended up deciding against it due to requiring a backend or paying for an API. There’s several plugins for this for Leaflet, one of the main ones I saw is &lt;a href=&quot;https://www.liedman.net/leaflet-routing-machine/&quot;&gt;Leaflet Routing Machine&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Sharing options.&lt;/b&gt; I made &lt;a href=&quot;https://i.ibb.co/BPn763m/sharingthing.png&quot;&gt;a mockup&lt;/a&gt; for this, basically allowing users to invite others by email and setting view-only/edit access. In order to set this up I would have had to rely on a third party to send out emails for invites, or create it myself. Since it’s a self-hosted tool it didn’t make much sense to implement.&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Autocomplete for search.&lt;/b&gt; Unfortunately the free API I’m using for getting OSM data (&lt;a href=&quot;https://nominatim.org/&quot;&gt;Nominatim&lt;/a&gt;) doesn’t allow using it for autocomplete (understandably so, it’s a free tool and it would lead to a really high amount of requests). Other APIs that could be used instead (paid) would be the &lt;a href=&quot;https://developers.google.com/maps/documentation/places/web-service/search&quot;&gt;Google Places API&lt;/a&gt;, or the &lt;a href=&quot;https://docs.mapbox.com/api/search/geocoding/&quot;&gt;MapBox Geocoding API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Showing places of interest as you move around the map.&lt;/b&gt; Because of a similar API restriction, I set it up so that places of interest only show on request by the user within their view area, limited to 10 at a time (although it could go up to 50). The Google Places API would probably be a good replacement here.&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Text tool.&lt;/b&gt; I looked all over for a Leaflet plugin to add text to maps. While there’s several ways to add labels, there isn’t really a proper way to deal with interactive text. The closest one I found was &lt;a href=&quot;https://github.com/rumax/Leaflet.Editable.TextBox&quot;&gt;this one&lt;/a&gt;, but it had its limitations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a name=&quot;potential&quot;&gt;&lt;/a&gt;Potential use cases 🤔&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first use case I thought of when building this product was &lt;b&gt;planning a trip between friends&lt;/b&gt;. There’s tools like &lt;a href=&quot;https://www.google.com/maps/about/mymaps/&quot;&gt;MyMaps&lt;/a&gt; that can be used for this, but it’s only for asynchronous collaboration, being unable to see each other in real-time and still mostly relying on people letting you know they updated the map. With real-time collaboration it’s much easier to suggest things like hotels to stay at, restaurants to go, hiking routes, etc.&lt;/li&gt; 
 &lt;li&gt;I also considered how Mapus could be targeted to companies. I had several ideas in that regard, for example, &lt;b&gt;planning some sort of company event&lt;/b&gt;, deciding on where to &lt;b&gt;open a new store or make a new development&lt;/b&gt; (e.g. based on amenities in the area, type of properties), &lt;b&gt;all sorts of real estate purposes&lt;/b&gt; (finding emerging neighbourhoods, property valuations, etc)…&lt;/li&gt; 
 &lt;li&gt;The real-time collaboration aspect of Mapus would be particularly handy in rapidly changing situations. For example in a &lt;b&gt;natural disaster&lt;/b&gt; it could be a way to quickly gather data from different sources as to the status of an area, &lt;b&gt;coordinating rescue efforts&lt;/b&gt;, etc. It could even be more helpful if &lt;b&gt;traffic or weather data&lt;/b&gt; was integrated in the tool, or if there was a way for users to integrate their own APIs to use the data collaboratively.&lt;/li&gt; 
 &lt;li&gt;A more “out there” use case could be something similar to &lt;a href=&quot;https://hoodmaps.com/london-neighborhood-map&quot;&gt;Hoodmaps&lt;/a&gt;, having &lt;b&gt;public maps&lt;/b&gt; where anyone can contribute information about a place, such as &lt;b&gt;best places to live, work, explore&lt;/b&gt;, etc. It would require a lot of moderation though so it might not be very feasible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a name=&quot;monetization&quot;&gt;&lt;/a&gt;Monetization 💵&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Since it’s a costly tool to run due to having real-time collaboration, it would need a way to make money to be self-sustainable. One way to do this would be similar to Google Maps, having &lt;b&gt;local businesses promote themselves in the tool&lt;/b&gt; by making themselves more prominent on the maps.&lt;/li&gt; 
 &lt;li&gt;Another way would simply be having different plans, a &lt;b&gt;basic free version&lt;/b&gt; for a few people to collaborate on a trip together (either with a limited history, maximum number of users, maximum number of maps per user, limited features, limited “working area” in a map…), and then &lt;b&gt;paid plans&lt;/b&gt; with more features or targeted to enterprise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Libraries used&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; - for better event handling and DOM manipulation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; - for the interactive map&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geoman.io/leaflet-geoman&quot;&gt;Leaflet Geoman&lt;/a&gt; - for drawing lines and polygons on top of the map&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://turfjs.org/&quot;&gt;Turf&lt;/a&gt; - for calculating areas and distances&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt; - for the database&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; - for the Nominatim API to search for places&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/&quot;&gt;MapBox&lt;/a&gt; - for the tile seen in the GIF. The current version uses an OSM tile because it’s free&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;Feel free to reach out to me through email at hi@alyssax.com or &lt;a href=&quot;https://twitter.com/alyssaxuu&quot;&gt;on Twitter&lt;/a&gt; if you have any questions or feedback! Hope you find this useful 💜&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MoonBegonia/ninja</title>
      <link>https://github.com/MoonBegonia/ninja</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ninja&lt;/h1&gt; 
&lt;p&gt;一次对于 koa2 vue3 vite 的简单尝试&lt;/p&gt; 
&lt;h2&gt;说明&lt;/h2&gt; 
&lt;p&gt;Ninja 仅供学习参考使用，请于下载后的 24 小时内删除，本人不对使用过程中出现的任何问题负责，包括但不限于 &lt;code&gt;数据丢失&lt;/code&gt; &lt;code&gt;数据泄露&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;Ninja 仅支持 qinglong 2.8+&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/joinchat/sHKuteb_lfdjNmZl&quot;&gt;TG 频道&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] 扫码，跳转登录添加/更新 cookie&lt;/li&gt; 
 &lt;li&gt;[x] 添加/更新 cookie 后发送通知&lt;/li&gt; 
 &lt;li&gt;[x] 扫码发送通知可关闭&lt;/li&gt; 
 &lt;li&gt;[x] 添加备注并将通知中的 pt_pin nickName 修改为备注&lt;/li&gt; 
 &lt;li&gt;[x] 默认备注为昵称&lt;/li&gt; 
 &lt;li&gt;[x] 添加扫码推送卡片&lt;/li&gt; 
 &lt;li&gt;[ ] 替换 cookie 失效通知&lt;/li&gt; 
 &lt;li&gt;[ ] 登录界面展示自定义标语&lt;/li&gt; 
 &lt;li&gt;[ ] 支持多容器，多面板&lt;/li&gt; 
 &lt;li&gt;[ ] 采用自己的数据库，实现无视面板替换通知备注&lt;/li&gt; 
 &lt;li&gt;[ ] 账号管理面板&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;文档&lt;/h2&gt; 
&lt;h3&gt;容器内&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;容器映射 5701 端口，ninja 目录至宿主机&lt;/p&gt; &lt;p&gt;例（docker-compose）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;version: &quot;3&quot;
services:
  qinglong:
    image: whyour/qinglong:latest
    container_name: qinglong
    restart: unless-stopped
    tty: true
    ports:
      - 5700:5700
+      - 5701:5701
    environment:
      - ENABLE_HANGUP=true
      - ENABLE_WEB_PANEL=true
    volumes:
      - ./config:/ql/config
      - ./log:/ql/log
      - ./db:/ql/db
      - ./repo:/ql/repo
      - ./raw:/ql/raw
      - ./scripts:/ql/scripts
      - ./jbot:/ql/jbot
+      - ./ninja:/ql/ninja
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;例（docker-run）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;docker run -dit \
  -v $PWD/ql/config:/ql/config \
  -v $PWD/ql/log:/ql/log \
  -v $PWD/ql/db:/ql/db \
  -v $PWD/ql/repo:/ql/repo \
  -v $PWD/ql/raw:/ql/raw \
  -v $PWD/ql/scripts:/ql/scripts \
  -v $PWD/ql/jbot:/ql/jbot \
+ -v $PWD/ql/ninja:/ql/ninja \
  -p 5700:5700 \
+ -p 5701:5701 \
  --name qinglong \
  --hostname qinglong \
  --restart unless-stopped \
  whyour/qinglong:latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进容器内执行以下命令&lt;/p&gt; &lt;p&gt;&lt;strong&gt;进容器内执行以下命令&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/MoonBegonia/ninja.git /ql/ninja
cd /ql/ninja/backend
pnpm install
pm2 start
cp sendNotify.js /ql/scripts/sendNotify.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;将以下内容粘贴到 &lt;code&gt;extra.sh&lt;/code&gt;（重启后自动更新并启动 Ninja）&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja/backend
git checkout .
git pull
pnpm install
pm2 start
cp sendNotify.js /ql/scripts/sendNotify.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;容器外&lt;/h3&gt; 
&lt;p&gt;此种方式需要宿主机安装 &lt;code&gt;node&lt;/code&gt; &lt;code&gt;pnpm&lt;/code&gt; 等环境，不做过多介绍。&lt;/p&gt; 
&lt;p&gt;使用此种方法无法跟随青龙一起启动，&lt;strong&gt;无法发送扫码通知&lt;/strong&gt;，请知悉。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git clone https://github.com/MoonBegonia/ninja.git
cd ninja/backend
pnpm install
# 复制 sendNotify.js 到容器内 scripts 目录，`qinglong` 为容器名
sudo docker cp sendNotify.js qinglong:/ql/scripts/sendNotify.js
cp .env.example .env
# 修改env文件
vi .env
node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在 &lt;code&gt;.env&lt;/code&gt; 文件中添加以下内容：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;QL_DIR=qinglong 容器的本地路径
QL_URL=http://localhost:5700
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;node app.js&lt;/code&gt; 想要在后台运行可以使用 &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;nohup&lt;/code&gt; &lt;code&gt;screen&lt;/code&gt; 等命令。&lt;/p&gt; 
&lt;h3&gt;Ninja 环境变量&lt;/h3&gt; 
&lt;p&gt;目前支持的环境变量有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_ADD&lt;/code&gt;: 是否允许添加账号 不允许添加时则只允许已有账号登录（默认 &lt;code&gt;true&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_NUM&lt;/code&gt;: 允许添加账号的最大数量（默认 &lt;code&gt;40&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_PORT&lt;/code&gt;: Ninja 运行端口（默认 &lt;code&gt;5701&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_NOTIFY&lt;/code&gt;: 是否开启通知功能（默认 &lt;code&gt;true&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_UA&lt;/code&gt;: 自定义 UA，默认为随机&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;配置方式：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja/backend
cp .env.example .env
vi .env
pm2 start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;修改完成后需要 &lt;code&gt;pm2 start&lt;/code&gt; 重启生效 ！！！&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;SendNotify 环境变量&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;此环境变量在青龙中配置！！！&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NOTIFY_SKIP_LIST&lt;/code&gt;: 通知黑名单，使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 分隔，例如 &lt;code&gt;东东乐园&amp;amp;东东萌宠&lt;/code&gt;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ninja 自定义&lt;/h3&gt; 
&lt;p&gt;自定义推送二维码：将 &lt;code&gt;push.jpg&lt;/code&gt; 文件添加到 &lt;code&gt;/ql/ninja/backend/static/&lt;/code&gt; 目录下刷新网页即可。&lt;/p&gt; 
&lt;p&gt;自定义常见活动：修改 &lt;code&gt;/ql/backend/static/activity.json&lt;/code&gt; 即可&lt;/p&gt; 
&lt;h2&gt;注意事项&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;重启后务必执行一次 &lt;code&gt;ql extra&lt;/code&gt; 保证 Ninja 配置成功。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新 Ninja 只需要在&lt;strong&gt;容器&lt;/strong&gt;中 &lt;code&gt;ninja/backend&lt;/code&gt; 目录执行 &lt;code&gt;git pull&lt;/code&gt; 然后 &lt;code&gt;pm2 start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Qinglong 需要在登录状态（&lt;code&gt;auth.json&lt;/code&gt; 中有 token）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;Q：为什么我 &lt;code&gt;git pull&lt;/code&gt; 失败？&lt;br&gt; A：一般是修改过文件，先运行一次 &lt;code&gt;git checkout .&lt;/code&gt; 再 &lt;code&gt;git pull&lt;/code&gt;。还是不行就删了重拉。&lt;/p&gt; 
&lt;p&gt;Q：为什么访问不了？&lt;br&gt; A：一般为端口映射错误/失败，请自行检查配置文件。&lt;/p&gt; 
&lt;p&gt;Q：为什么访问白屏？&lt;br&gt; A：使用现代的浏览器，而不是古代的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesuite/truffle</title>
      <link>https://github.com/trufflesuite/truffle</link>
      <description>&lt;p&gt;A tool for developing smart contracts. Crafted with the finest cacaos.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://trufflesuite.com/img/truffle-logo-dark.svg?sanitize=true&quot; width=&quot;200&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/truffle&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/truffle.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/truffle&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/truffle.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/consensys/truffle?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/consensys/truffle&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/trufflesuite/truffle&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/trufflesuite/truffle/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Truffle is a development environment, testing framework and asset pipeline for Ethereum, aiming to make life as an Ethereum developer easier. With Truffle, you get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in smart contract compilation, linking, deployment and binary management.&lt;/li&gt; 
 &lt;li&gt;Automated contract testing with Mocha and Chai.&lt;/li&gt; 
 &lt;li&gt;Configurable build pipeline with support for custom build processes.&lt;/li&gt; 
 &lt;li&gt;Scriptable deployment &amp;amp; migrations framework.&lt;/li&gt; 
 &lt;li&gt;Network management for deploying to many public &amp;amp; private networks.&lt;/li&gt; 
 &lt;li&gt;Interactive console for direct contract communication.&lt;/li&gt; 
 &lt;li&gt;Instant rebuilding of assets during development.&lt;/li&gt; 
 &lt;li&gt;External script runner that executes scripts within a Truffle environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| ℹ️ &lt;strong&gt;Contributors&lt;/strong&gt;: Please see the &lt;a href=&quot;https://raw.githubusercontent.com/trufflesuite/truffle/develop/#development&quot;&gt;Development&lt;/a&gt; section of this README. | | — |&lt;/p&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g truffle
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: To avoid any strange permissions errors, we recommend using &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Usage&lt;/h3&gt; 
&lt;p&gt;For a default set of contracts and tests, run the following within an empty project directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ truffle init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From there, you can run &lt;code&gt;truffle compile&lt;/code&gt;, &lt;code&gt;truffle migrate&lt;/code&gt; and &lt;code&gt;truffle test&lt;/code&gt; to compile your contracts, deploy those contracts to the network, and run their associated unit tests.&lt;/p&gt; 
&lt;p&gt;Truffle comes bundled with a local development blockchain server that launches automatically when you invoke the commands above. If you’d like to &lt;a href=&quot;https://trufflesuite.com/docs/advanced/configuration&quot;&gt;configure a more advanced development environment&lt;/a&gt; we recommend you install the blockchain server separately by running &lt;code&gt;npm install -g ganache-cli&lt;/code&gt; at the command line.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trufflesuite/ganache-cli&quot;&gt;ganache-cli&lt;/a&gt;: a command-line version of Truffle’s blockchain server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trufflesuite.com/ganache/&quot;&gt;ganache&lt;/a&gt;: A GUI for the server that displays your transaction history and chain state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://trufflesuite.com/docs/&quot;&gt;Official Truffle Documentation&lt;/a&gt; for guides, tips, and examples.&lt;/p&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;We welcome pull requests. To get started, just fork this repo, clone it locally, and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Install
npm install -g yarn
yarn bootstrap

# Test
yarn test

# Adding dependencies to a package
cd packages/&amp;lt;truffle-package&amp;gt;
yarn add &amp;lt;npm-package&amp;gt; [--dev] # Use yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you’d like to update a dependency to the same version across all packages, you might find &lt;a href=&quot;https://www.npmjs.com/package/lerna-update-wizard&quot;&gt;this utility&lt;/a&gt; helpful.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Notes on project branches:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Stable, released version (v5)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beta&lt;/code&gt;: Released beta version&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt;: Work targeting stable release (v5)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;next&lt;/code&gt;: Not currently in use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please make pull requests against &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There is a bit more information in the &lt;a href=&quot;https://raw.githubusercontent.com/trufflesuite/truffle/develop/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>scutan90/DeepLearning-500-questions</title>
      <link>https://github.com/scutan90/DeepLearning-500-questions</link>
      <description>&lt;p&gt;深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 全书分为18个章节，50余万字。由于水平有限，书中不妥之处恳请广大读者批评指正。 未完待续............ 如有意合作，联系scutjy2015@163.com 版权所有，违权必究 Tan 2018.06&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;京东售卖链接：https://item.jd.com/12785031.html&lt;/h1&gt; 
&lt;h1&gt;京东商城100多家书店有现货。&lt;/h1&gt; 
&lt;h2&gt;深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著&lt;/h2&gt; 
&lt;h1&gt;内容简介&lt;/h1&gt; 
&lt;p&gt;本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。&lt;/p&gt; 
&lt;p&gt;本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。&lt;/p&gt; 
&lt;h1&gt;作者简介&lt;/h1&gt; 
&lt;p&gt;谈继勇 主编&lt;/p&gt; 
&lt;p&gt;南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。&lt;/p&gt; 
&lt;p&gt;郭子钊 副主编&lt;/p&gt; 
&lt;p&gt;四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。&lt;/p&gt; 
&lt;p&gt;李剑 副主编&lt;/p&gt; 
&lt;p&gt;同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。&lt;/p&gt; 
&lt;p&gt;佃松宜 副主编&lt;/p&gt; 
&lt;p&gt;日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。&lt;/p&gt; 
&lt;p&gt;王晋东 特邀编委&lt;/p&gt; 
&lt;p&gt;中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。&lt;/p&gt; 
&lt;p&gt;王超锋&lt;/p&gt; 
&lt;p&gt;上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;郭晓锋&lt;/p&gt; 
&lt;p&gt;中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。&lt;/p&gt; 
&lt;p&gt;黄伟&lt;/p&gt; 
&lt;p&gt;华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;陈方杰（Amusi）&lt;/p&gt; 
&lt;p&gt;上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。&lt;/p&gt; 
&lt;p&gt;李元伟&lt;/p&gt; 
&lt;p&gt;国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。&lt;/p&gt; 
&lt;p&gt;陈琳&lt;/p&gt; 
&lt;p&gt;北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。&lt;/p&gt; 
&lt;h1&gt;目录&lt;/h1&gt; 
&lt;p&gt;第1章 数学基础 1&lt;/p&gt; 
&lt;p&gt;1.1 向量和矩阵 1&lt;/p&gt; 
&lt;p&gt;1.1.1 标量、向量、矩阵和张量 1&lt;/p&gt; 
&lt;p&gt;1.1.2 张量与矩阵的区别 2&lt;/p&gt; 
&lt;p&gt;1.1.3 矩阵和向量相乘的结果 2&lt;/p&gt; 
&lt;p&gt;1.1.4 向量和矩阵的范数归纳 2&lt;/p&gt; 
&lt;p&gt;1.1.5 判断一个矩阵是否为正定矩阵 4&lt;/p&gt; 
&lt;p&gt;1.2 导数和偏导数 5&lt;/p&gt; 
&lt;p&gt;1.2.1 导数偏导计算 5&lt;/p&gt; 
&lt;p&gt;1.2.2 导数和偏导数的区别 6&lt;/p&gt; 
&lt;p&gt;1.3 特征值和特征向量 6&lt;/p&gt; 
&lt;p&gt;1.3.1 特征值分解 6&lt;/p&gt; 
&lt;p&gt;1.3.2 奇异值和特征值的关系 6&lt;/p&gt; 
&lt;p&gt;1.4 概率分布与随机变量 7&lt;/p&gt; 
&lt;p&gt;1.4.1 机器学习为什么要使用概率 7&lt;/p&gt; 
&lt;p&gt;1.4.2 变量与随机变量的区别 7&lt;/p&gt; 
&lt;p&gt;1.4.3 随机变量与概率分布的联系 8&lt;/p&gt; 
&lt;p&gt;1.4.4 离散型随机变量和概率质量函数 8&lt;/p&gt; 
&lt;p&gt;1.4.5 连续型随机变量和概率密度函数 8&lt;/p&gt; 
&lt;p&gt;1.4.6 举例理解条件概率 9&lt;/p&gt; 
&lt;p&gt;1.4.7 联合概率与边缘概率的区别和联系 9&lt;/p&gt; 
&lt;p&gt;1.4.8 条件概率的链式法则 10&lt;/p&gt; 
&lt;p&gt;1.4.9 独立性和条件独立性 10&lt;/p&gt; 
&lt;p&gt;1.5 常见概率分布 11&lt;/p&gt; 
&lt;p&gt;1.5.1 伯努利分布 11&lt;/p&gt; 
&lt;p&gt;1.5.2 高斯分布 11&lt;/p&gt; 
&lt;p&gt;1.5.3 何时采用正态分布 12&lt;/p&gt; 
&lt;p&gt;1.5.4 指数分布 12&lt;/p&gt; 
&lt;p&gt;1.5.5 Laplace分布 13&lt;/p&gt; 
&lt;p&gt;1.5.6 Dirac分布和经验分布 13&lt;/p&gt; 
&lt;p&gt;1.6 期望、方差、协方差、相关系数 13&lt;/p&gt; 
&lt;p&gt;1.6.1 期望 13&lt;/p&gt; 
&lt;p&gt;1.6.2 方差 14&lt;/p&gt; 
&lt;p&gt;1.6.3 协方差 14&lt;/p&gt; 
&lt;p&gt;1.6.4 相关系数 15&lt;/p&gt; 
&lt;p&gt;第2章 机器学习基础 16&lt;/p&gt; 
&lt;p&gt;2.1 基本概念 16&lt;/p&gt; 
&lt;p&gt;2.1.1 大话机器学习本质 16&lt;/p&gt; 
&lt;p&gt;2.1.2 什么是神经网络 16&lt;/p&gt; 
&lt;p&gt;2.1.3 各种常见算法图示 17&lt;/p&gt; 
&lt;p&gt;2.1.4 计算图的导数计算 17&lt;/p&gt; 
&lt;p&gt;2.1.5 理解局部最优与全局最优 18&lt;/p&gt; 
&lt;p&gt;2.1.6 大数据与深度学习之间的关系 19&lt;/p&gt; 
&lt;p&gt;2.2 机器学习的学习方式 20&lt;/p&gt; 
&lt;p&gt;2.2.1 监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.2 非监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.3 半监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.4 弱监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.5 监督学习模型的搭建步骤 21&lt;/p&gt; 
&lt;p&gt;2.3 分类算法 22&lt;/p&gt; 
&lt;p&gt;2.3.1 常用分类算法的优缺点 22&lt;/p&gt; 
&lt;p&gt;2.3.2 分类算法的评估方法 23&lt;/p&gt; 
&lt;p&gt;2.3.3 正确率能否很好地评估分类算法 25&lt;/p&gt; 
&lt;p&gt;2.3.4 什么样的分类器是最好的 26&lt;/p&gt; 
&lt;p&gt;2.4 逻辑回归 26&lt;/p&gt; 
&lt;p&gt;2.4.1 回归的种类 26&lt;/p&gt; 
&lt;p&gt;2.4.2 逻辑回归适用性 27&lt;/p&gt; 
&lt;p&gt;2.4.3 逻辑回归与朴素贝叶斯的区别 27&lt;/p&gt; 
&lt;p&gt;2.4.4 线性回归与逻辑回归的区别 27&lt;/p&gt; 
&lt;p&gt;2.5 代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.1 为什么需要代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.2 代价函数作用原理 28&lt;/p&gt; 
&lt;p&gt;2.5.3 常见代价函数 30&lt;/p&gt; 
&lt;p&gt;2.5.4 为什么代价函数要非负 31&lt;/p&gt; 
&lt;p&gt;2.5.5 为什么用交叉熵代替二次代价函数 31&lt;/p&gt; 
&lt;p&gt;2.6 损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.1 什么是损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.2 常见的损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.3 逻辑回归为什么使用对数损失函数 34&lt;/p&gt; 
&lt;p&gt;2.6.4 对数损失函数如何度量损失 34&lt;/p&gt; 
&lt;p&gt;2.7 梯度下降法 35&lt;/p&gt; 
&lt;p&gt;2.7.1 梯度下降法的作用 36&lt;/p&gt; 
&lt;p&gt;2.7.2 梯度下降法的直观理解 36&lt;/p&gt; 
&lt;p&gt;2.7.3 梯度下降法算法描述 37&lt;/p&gt; 
&lt;p&gt;2.7.4 梯度下降法的缺点 38&lt;/p&gt; 
&lt;p&gt;2.7.5 如何对梯度下降法进行调优 38&lt;/p&gt; 
&lt;p&gt;2.7.6 随机梯度下降和批量梯度下降的区别 38&lt;/p&gt; 
&lt;p&gt;2.7.7 各种梯度下降法性能比较 40&lt;/p&gt; 
&lt;p&gt;2.8 线性判别分析 40&lt;/p&gt; 
&lt;p&gt;2.8.1 LDA思想总结 40&lt;/p&gt; 
&lt;p&gt;2.8.2 图解LDA核心思想 41&lt;/p&gt; 
&lt;p&gt;2.8.3 二类LDA算法原理 41&lt;/p&gt; 
&lt;p&gt;2.8.4 LDA算法流程总结 42&lt;/p&gt; 
&lt;p&gt;2.8.5 LDA和PCA的异同 43&lt;/p&gt; 
&lt;p&gt;2.8.6 LDA的优缺点 43&lt;/p&gt; 
&lt;p&gt;2.9 主成分分析 43&lt;/p&gt; 
&lt;p&gt;2.9.1 图解PCA核心思想 43&lt;/p&gt; 
&lt;p&gt;2.9.2 PCA算法推理 44&lt;/p&gt; 
&lt;p&gt;2.9.3 PCA算法流程总结 45&lt;/p&gt; 
&lt;p&gt;2.9.4 PCA思想总结 46&lt;/p&gt; 
&lt;p&gt;2.9.5 PCA算法的优缺点 46&lt;/p&gt; 
&lt;p&gt;2.9.6 降维的必要性及目的 46&lt;/p&gt; 
&lt;p&gt;2.9.7 KPCA与PCA的区别 47&lt;/p&gt; 
&lt;p&gt;2.10 模型评估 47&lt;/p&gt; 
&lt;p&gt;2.10.1 模型评估常用方法 48&lt;/p&gt; 
&lt;p&gt;2.10.2 误差、偏差和方差的区别和联系 48&lt;/p&gt; 
&lt;p&gt;2.10.3 为什么使用标准差 49&lt;/p&gt; 
&lt;p&gt;2.10.4 经验误差与泛化误差 50&lt;/p&gt; 
&lt;p&gt;2.10.5 图解欠拟合与过拟合 50&lt;/p&gt; 
&lt;p&gt;2.10.6 如何解决欠拟合与过拟合 52&lt;/p&gt; 
&lt;p&gt;2.10.7 交叉验证的主要作用 52&lt;/p&gt; 
&lt;p&gt;2.10.8 理解K折交叉验证 53&lt;/p&gt; 
&lt;p&gt;2.10.9 理解混淆矩阵 53&lt;/p&gt; 
&lt;p&gt;2.10.10 理解查准率与查全率 53&lt;/p&gt; 
&lt;p&gt;2.10.11 理解ROC与AUC 54&lt;/p&gt; 
&lt;p&gt;2.10.12 如何绘制ROC曲线 55&lt;/p&gt; 
&lt;p&gt;2.10.13 如何计算TPR和FPR 56&lt;/p&gt; 
&lt;p&gt;2.10.14 如何计算AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.15 直观理解AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.16 ROC评估分类器 60&lt;/p&gt; 
&lt;p&gt;2.10.17 代价敏感错误率与代价曲线 60&lt;/p&gt; 
&lt;p&gt;2.10.18 比较检验方法 61&lt;/p&gt; 
&lt;p&gt;2.11 决策树 61&lt;/p&gt; 
&lt;p&gt;2.11.1 决策树的基本原理 62&lt;/p&gt; 
&lt;p&gt;2.11.2 决策树的生成过程 62&lt;/p&gt; 
&lt;p&gt;2.11.3 决策树学习基本算法步骤 62&lt;/p&gt; 
&lt;p&gt;2.11.4 决策树算法的优缺点 63&lt;/p&gt; 
&lt;p&gt;2.11.5 决策树和熵的联系 63&lt;/p&gt; 
&lt;p&gt;2.11.6 熵的概念及定义 63&lt;/p&gt; 
&lt;p&gt;2.11.7 理解信息增益 64&lt;/p&gt; 
&lt;p&gt;2.11.8 决策树中熵、条件熵和信息增益的联系 64&lt;/p&gt; 
&lt;p&gt;2.11.9 决策树算法中剪枝的作用及策略 65&lt;/p&gt; 
&lt;p&gt;2.12 支持向量机（SVM） 65&lt;/p&gt; 
&lt;p&gt;2.12.1 什么是SVM 65&lt;/p&gt; 
&lt;p&gt;2.12.2 SVM能解决的问题 66&lt;/p&gt; 
&lt;p&gt;2.12.3 核函数特点及其作用 67&lt;/p&gt; 
&lt;p&gt;2.12.4 SVM为什么引入对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.5 如何理解SVM中的对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.6 常见的核函数 69&lt;/p&gt; 
&lt;p&gt;2.12.7 SVM的主要特点 69&lt;/p&gt; 
&lt;p&gt;2.12.8 SVM的主要缺点 70&lt;/p&gt; 
&lt;p&gt;2.12.9 逻辑回归与SVM的异同 70&lt;/p&gt; 
&lt;p&gt;2.13 贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.1 贝叶斯分类器的基本原理 72&lt;/p&gt; 
&lt;p&gt;2.13.2 朴素贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.3 举例理解朴素贝叶斯分类器 73&lt;/p&gt; 
&lt;p&gt;2.13.4 半朴素贝叶斯分类器 75&lt;/p&gt; 
&lt;p&gt;2.13.5 极大似然估计和贝叶斯估计的联系与区别 75&lt;/p&gt; 
&lt;p&gt;2.13.6 极大似然估计原理 76&lt;/p&gt; 
&lt;p&gt;2.13.7 图解极大似然估计 76&lt;/p&gt; 
&lt;p&gt;2.14 EM算法 77&lt;/p&gt; 
&lt;p&gt;2.14.1 EM算法的基本思想 77&lt;/p&gt; 
&lt;p&gt;2.14.2 EM算法推导 77&lt;/p&gt; 
&lt;p&gt;2.14.3 图解EM算法 78&lt;/p&gt; 
&lt;p&gt;2.14.4 EM算法流程 79&lt;/p&gt; 
&lt;p&gt;2.15 降维和聚类 79&lt;/p&gt; 
&lt;p&gt;2.15.1 图解为什么会产生维数灾难 79&lt;/p&gt; 
&lt;p&gt;2.15.2 怎样避免维数灾难 83&lt;/p&gt; 
&lt;p&gt;2.15.3 聚类和降维 83&lt;/p&gt; 
&lt;p&gt;2.15.4 聚类算法优劣的衡量标准 84&lt;/p&gt; 
&lt;p&gt;2.15.5 聚类和分类 85&lt;/p&gt; 
&lt;p&gt;2.15.6 聚类算法的性能比较 85&lt;/p&gt; 
&lt;p&gt;2.15.7 4种常用聚类方法比较 85&lt;/p&gt; 
&lt;p&gt;第3章 深度学习基础 89&lt;/p&gt; 
&lt;p&gt;3.1 基本概念 89&lt;/p&gt; 
&lt;p&gt;3.1.1 神经网络的类型 89&lt;/p&gt; 
&lt;p&gt;3.1.2 神经网络的常用模型结构 92&lt;/p&gt; 
&lt;p&gt;3.1.3 深度学习和机器学习的区别与联系 93&lt;/p&gt; 
&lt;p&gt;3.1.4 为什么使用深层表示 93&lt;/p&gt; 
&lt;p&gt;3.1.5 深度学习架构分类 94&lt;/p&gt; 
&lt;p&gt;3.1.6 如何选择深度学习开发平台 94&lt;/p&gt; 
&lt;p&gt;3.2 神经网络计算 95&lt;/p&gt; 
&lt;p&gt;3.2.1 前向传播和反向传播 95&lt;/p&gt; 
&lt;p&gt;3.2.2 如何计算神经网络的输出 96&lt;/p&gt; 
&lt;p&gt;3.2.3 如何计算卷积神经网络输出值 97&lt;/p&gt; 
&lt;p&gt;3.2.4 如何计算池化层输出值 100&lt;/p&gt; 
&lt;p&gt;3.2.5 反向传播实例 101&lt;/p&gt; 
&lt;p&gt;3.2.6 神经网络更“深”的意义 104&lt;/p&gt; 
&lt;p&gt;3.3 激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.1 为什么需要激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.2 为什么激活函数需要非线性函数 105&lt;/p&gt; 
&lt;p&gt;3.3.3 常见的激活函数及其图像 105&lt;/p&gt; 
&lt;p&gt;3.3.4 常见激活函数的导数计算 107&lt;/p&gt; 
&lt;p&gt;3.3.5 激活函数有哪些性质 108&lt;/p&gt; 
&lt;p&gt;3.3.6 如何选择激活函数 108&lt;/p&gt; 
&lt;p&gt;3.3.7 为什么tanh收敛速度比sigmoid快 109&lt;/p&gt; 
&lt;p&gt;3.3.8 Relu激活函数的优点 109&lt;/p&gt; 
&lt;p&gt;3.3.9 理解Relu激活函数的稀疏激活性 109&lt;/p&gt; 
&lt;p&gt;3.3.10 什么时候可以用线性激活函数 109&lt;/p&gt; 
&lt;p&gt;3.3.11 softmax函数的定义及作用 110&lt;/p&gt; 
&lt;p&gt;3.3.12 softmax函数如何应用于多分类 110&lt;/p&gt; 
&lt;p&gt;3.4 BATCH SIZE 112&lt;/p&gt; 
&lt;p&gt;3.4.1 为什么需要Batch Size 112&lt;/p&gt; 
&lt;p&gt;3.4.2 如何选择Batch Size值 112&lt;/p&gt; 
&lt;p&gt;3.4.3 调节Batch Size对训练效果的影响 113&lt;/p&gt; 
&lt;p&gt;3.4.4 在合理范围内增大Batch Size的好处 113&lt;/p&gt; 
&lt;p&gt;3.4.5 盲目增大Batch Size的坏处 114&lt;/p&gt; 
&lt;p&gt;3.5 归一化 114&lt;/p&gt; 
&lt;p&gt;3.5.1 理解归一化含义 114&lt;/p&gt; 
&lt;p&gt;3.5.2 归一化和标准化的联系与区别 114&lt;/p&gt; 
&lt;p&gt;3.5.3 为什么要归一化或标准化 115&lt;/p&gt; 
&lt;p&gt;3.5.4 图解为什么要归一化 115&lt;/p&gt; 
&lt;p&gt;3.5.5 为什么归一化能提高求最优解速度 115&lt;/p&gt; 
&lt;p&gt;3.5.6 归一化有哪些类型 116&lt;/p&gt; 
&lt;p&gt;3.5.7 局部响应归一化作用 116&lt;/p&gt; 
&lt;p&gt;3.5.8 局部响应归一化原理 117&lt;/p&gt; 
&lt;p&gt;3.5.9 什么是批归一化 118&lt;/p&gt; 
&lt;p&gt;3.5.10 批归一化的优点 118&lt;/p&gt; 
&lt;p&gt;3.5.11 批归一化算法流程 118&lt;/p&gt; 
&lt;p&gt;3.5.12 批归一化和组归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.13 权重归一化和批归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.14 批归一化适用范围 120&lt;/p&gt; 
&lt;p&gt;3.5.15 BN、LN、IN和GN的对比 120&lt;/p&gt; 
&lt;p&gt;3.6 参数初始化 121&lt;/p&gt; 
&lt;p&gt;3.6.1 参数初始化应满足的条件 121&lt;/p&gt; 
&lt;p&gt;3.6.2 常用的几种初始化方式 121&lt;/p&gt; 
&lt;p&gt;3.6.3 全0初始化带来的问题 121&lt;/p&gt; 
&lt;p&gt;3.6.4 全都初始化为同样的值 122&lt;/p&gt; 
&lt;p&gt;3.6.5 初始化为小的随机数 123&lt;/p&gt; 
&lt;p&gt;3.6.6 用 校准方差 123&lt;/p&gt; 
&lt;p&gt;3.7 预训练与微调 123&lt;/p&gt; 
&lt;p&gt;3.7.1 什么是预训练和微调 123&lt;/p&gt; 
&lt;p&gt;3.7.2 预训练和微调的作用 124&lt;/p&gt; 
&lt;p&gt;3.7.3 预训练模型的复用 124&lt;/p&gt; 
&lt;p&gt;3.7.4 预训练和迁移学习 125&lt;/p&gt; 
&lt;p&gt;3.7.5 微调时网络参数是否更新 125&lt;/p&gt; 
&lt;p&gt;3.7.6 微调模型的三种状态 125&lt;/p&gt; 
&lt;p&gt;3.7.7 为什么深层神经网络难以训练 125&lt;/p&gt; 
&lt;p&gt;3.8 超参数 127&lt;/p&gt; 
&lt;p&gt;3.8.1 超参数有哪些 127&lt;/p&gt; 
&lt;p&gt;3.8.2 参数和模型的关系 127&lt;/p&gt; 
&lt;p&gt;3.8.3 参数和超参数的区别 127&lt;/p&gt; 
&lt;p&gt;3.8.4 如何寻找超参数的最优值 128&lt;/p&gt; 
&lt;p&gt;3.8.5 超参数搜索的一般过程 128&lt;/p&gt; 
&lt;p&gt;3.9 学习率 129&lt;/p&gt; 
&lt;p&gt;3.9.1 学习率的作用 129&lt;/p&gt; 
&lt;p&gt;3.9.2 学习率衰减的常用参数 129&lt;/p&gt; 
&lt;p&gt;3.9.3 常用的学习率衰减方法 129&lt;/p&gt; 
&lt;p&gt;3.10 正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.1 为什么要正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.2 常见正则化方法 133&lt;/p&gt; 
&lt;p&gt;3.10.3 图解L1和L2正则化 134&lt;/p&gt; 
&lt;p&gt;3.10.4 Dropout具体工作流程 135&lt;/p&gt; 
&lt;p&gt;3.10.5 为什么Dropout可以解决过拟合问题 137&lt;/p&gt; 
&lt;p&gt;3.10.6 Dropout的缺点&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;The fastest way to build Svelte apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;SvelteKit is still in beta. Expect bugs! Read more &lt;a href=&quot;https://svelte.dev/blog/sveltekit-beta&quot;&gt;here&lt;/a&gt;, and track progress towards 1.0 &lt;a href=&quot;https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://kit.svelte.dev/docs&quot;&gt;the documentation&lt;/a&gt; for information about getting started and developing with SvelteKit.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;| Package | Changelog | | ————————————————————————— | ———————————————————–– | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit&quot;&gt;@sveltejs/kit&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte&quot;&gt;create-svelte&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node&quot;&gt;@sveltejs/adapter-node&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static&quot;&gt;@sveltejs/adapter-static&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers&quot;&gt;@sveltejs/adapter-cloudflare-workers&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify&quot;&gt;@sveltejs/adapter-netlify&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel&quot;&gt;@sveltejs/adapter-vercel&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;The SvelteKit community also makes additional &lt;a href=&quot;https://sveltesociety.dev/components#category-SvelteKit%20Adapters&quot;&gt;SvelteKit adapters available for use&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;This monorepo uses &lt;a href=&quot;https://pnpm.js.org/en/&quot;&gt;pnpm&lt;/a&gt;. Install it…&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;…then install this repo’s dependencies…&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;…then build SvelteKit and the other packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be able to run the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/examples&quot;&gt;examples&lt;/a&gt; by navigating to one of the directories and doing &lt;code&gt;pnpm dev&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; inside the &lt;code&gt;packages/kit&lt;/code&gt; directory to continually rebuild &lt;code&gt;@sveltejs/kit&lt;/code&gt; as you make changes to SvelteKit. Restarting the example/test apps will cause the newly built version to be used.&lt;/p&gt; 
&lt;p&gt;To use the git hooks in the repo, which will save you waiting for CI to tell you that you forgot to lint, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config core.hookspath .githooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generating changelogs&lt;/h3&gt; 
&lt;p&gt;For changes to be reflected in package changelogs, run &lt;code&gt;pnpx changeset&lt;/code&gt; and follow the prompts. All changesets should be &lt;code&gt;patch&lt;/code&gt; until SvelteKit 1.0&lt;/p&gt; 
&lt;h3&gt;Releases&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/changesets/action#with-publishing&quot;&gt;Changesets GitHub action&lt;/a&gt; will create and update a PR that applies changesets and publishes new versions of changed packages to npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It uses &lt;code&gt;pnpm publish&lt;/code&gt; rather than &lt;code&gt;pnpx changeset publish&lt;/code&gt; so that we can use the &lt;code&gt;--filter&lt;/code&gt; and (while in beta) &lt;code&gt;--tag&lt;/code&gt; flags — though perhaps they work with &lt;code&gt;pnpx changeset publish&lt;/code&gt;?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;New packages will need to be published manually the first time if they are scoped to the &lt;code&gt;@sveltejs&lt;/code&gt; organisation, by running this from the package directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm publish --access=public
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm test&lt;/code&gt; to run the tests from all subpackages. Browser tests live in subdirectories of &lt;code&gt;packages/kit/test&lt;/code&gt; such as &lt;code&gt;packages/kit/test/apps/basics&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the tests for only a single package by first moving to that directory. E.g. &lt;code&gt;cd packages/kit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You must rebuild each time before running the tests if you’ve made code changes.&lt;/p&gt; 
&lt;p&gt;To run a single integration test, provide the &lt;code&gt;FILTER&lt;/code&gt; env var with the test name. E.g. &lt;code&gt;FILTER=&quot;includes paths&quot; pnpm test:integration&lt;/code&gt;. You can also open up the file and change &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test.only&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the test server with &lt;code&gt;cd packages/kit/test/apps/basics; pnpm run dev&lt;/code&gt; to hit it with your browser.&lt;/p&gt; 
&lt;p&gt;You may need to install some dependencies first e.g. with &lt;code&gt;npx playwright install-deps&lt;/code&gt; (which only works on Ubuntu).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vaxilu/x-ui</title>
      <link>https://github.com/vaxilu/x-ui</link>
      <description>&lt;p&gt;支持多协议多用户的 xray 面板&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x-ui&lt;/h1&gt; 
&lt;p&gt;支持多协议多用户的 xray 面板&lt;/p&gt; 
&lt;h1&gt;功能介绍&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;系统状态监控&lt;/li&gt; 
 &lt;li&gt;支持多用户多协议，网页可视化操作&lt;/li&gt; 
 &lt;li&gt;支持的协议：vmess、vless、trojan、shadowsocks、dokodemo-door、socks、http&lt;/li&gt; 
 &lt;li&gt;支持配置更多传输配置&lt;/li&gt; 
 &lt;li&gt;流量统计，限制流量，限制到期时间&lt;/li&gt; 
 &lt;li&gt;可自定义 xray 配置模板&lt;/li&gt; 
 &lt;li&gt;支持 https 访问面板（自备域名 + ssl 证书）&lt;/li&gt; 
 &lt;li&gt;更多高级配置项，详见面板&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;安装&amp;amp;升级&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;手动安装&amp;amp;升级&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;首先从 https://github.com/vaxilu/x-ui/releases 下载最新的压缩包，一般选择&lt;code&gt;amd64&lt;/code&gt;架构&lt;/li&gt; 
 &lt;li&gt;然后将这个压缩包上传到服务器的&lt;code&gt;/root/&lt;/code&gt;目录下，并使用&lt;code&gt;root&lt;/code&gt;用户登录服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果你的服务器 cpu 架构不是&lt;code&gt;amd64&lt;/code&gt;，自行将命令中的&lt;code&gt;amd64&lt;/code&gt;替换为其他架构&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;cd /root/
rm x-ui/ /usr/local/x-ui/ /usr/bin/x-ui -rf
tar zxvf x-ui-linux-amd64.tar.gz
chmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh
cp x-ui/x-ui.sh /usr/bin/x-ui
cp -f x-ui/x-ui.service /etc/systemd/system/
mv x-ui/ /usr/local/
systemctl daemon-reload
systemctl enable x-ui
systemctl restart x-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;建议系统&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CentOS 7+&lt;/li&gt; 
 &lt;li&gt;Ubuntu 16+&lt;/li&gt; 
 &lt;li&gt;Debian 8+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;常见问题&lt;/h1&gt; 
&lt;h2&gt;与 v2-ui 关系&lt;/h2&gt; 
&lt;p&gt;x-ui 相当于 v2-ui 的加强版，未来会加入更多功能，待 x-ui 功能稳定后，v2-ui 将不再提供更新&lt;/p&gt; 
&lt;p&gt;x-ui 可与 v2-ui 并存，数据不互通，不影响对方的运行&lt;/p&gt; 
&lt;h2&gt;从 v2-ui 迁移&lt;/h2&gt; 
&lt;p&gt;首先在安装了 v2-ui 的服务器上安装最新版 x-ui，然后使用以下命令进行迁移，将迁移本机 v2-ui 的&lt;code&gt;所有 inbound 账号数据&lt;/code&gt;至 x-ui，&lt;code&gt;面板设置和用户名密码不会迁移&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;迁移成功后请&lt;code&gt;关闭 v2-ui&lt;/code&gt; 并且&lt;code&gt;重启 x-ui&lt;/code&gt;，否则 v2-ui 的 inbound 会与 x-ui 的 inbound 会产生&lt;code&gt;端口冲突&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;x-ui v2-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/vaxilu/x-ui&quot;&gt;&lt;img src=&quot;https://starchart.cc/vaxilu/x-ui.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100px&quot; src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true&quot; align=&quot;center&quot; alt=&quot;GitHub Readme Stats&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Get dynamically generated GitHub stats on your readmes!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/actions&quot;&gt; &lt;img alt=&quot;Tests Passing&quot; src=&quot;https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/anuraghazra/github-readme-stats&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues&quot;&gt; &lt;img alt=&quot;Issues&quot; src=&quot;https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pulls&quot;&gt; &lt;img alt=&quot;GitHub pull requests&quot; src=&quot;https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://a.paddle.com/v2/click/16413/119403?link=1227&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-VSCode%20Power%20User%20%E2%86%92-gray.svg?colorA=655BE1&amp;amp;colorB=4F44D6&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://a.paddle.com/v2/click/16413/119403?link=2345&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-Node%20Cli.com%20%E2%86%92-gray.svg?colorA=61c265&amp;amp;colorB=4CAF50&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo&quot;&gt;View Demo&lt;/a&gt; · &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues/new/choose&quot;&gt;Report Bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/issues/new/choose&quot;&gt;Request Feature&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_fr.md&quot;&gt;Français &lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_cn.md&quot;&gt;简体中文&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_es.md&quot;&gt;Español&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_de.md&quot;&gt;Deutsch&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_ja.md&quot;&gt;日本語&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_pt-BR.md&quot;&gt;Português Brasileiro&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_it.md&quot;&gt;Italiano&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_kr.md&quot;&gt;한국어&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_nl.md&quot;&gt;Nederlands&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_np.md&quot;&gt;नेपाली&lt;/a&gt; . &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/docs/readme_tr.md&quot;&gt;Türkçe&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;Love the project? Please consider &lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;donating&lt;/a&gt; to help it improve! &lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://indiafightscorona.giveindia.org&quot;&gt; &lt;img src=&quot;https://d2wvdrxmr8p0wf.cloudfront.net/static/giveindia.svg?sanitize=true&quot; alt=&quot;Give india logo&quot; width=&quot;200&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Are you considering to support the project by donating to me? Please DON’T!!&lt;/p&gt; 
&lt;p&gt;Instead, Help India fight 2nd deadly wave of COVID,&lt;br&gt; Thousands of people are dying in India for lack of Oxygen &amp;amp; COVID related necessary infrastructure.&lt;/p&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://indiafightscorona.giveindia.org&quot;&gt;https://indiafightscorona.giveindia.org&lt;/a&gt; and make a small donation to help us fight covid and overcome this crisis.&lt;br&gt; Your small help goes a long way. :heart:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card&quot;&gt;GitHub Stats Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins&quot;&gt;GitHub Extra Pins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card&quot;&gt;Top Languages Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-week-stats&quot;&gt;Wakatime Week Stats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;Customization&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options&quot;&gt;Common Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#stats-card-exclusive-options&quot;&gt;Stats Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options&quot;&gt;Repo Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-card-exclusive-options&quot;&gt;Language Card Exclusive Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-card-exclusive-options&quot;&gt;Wakatime Card Exclusive Option&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own-vercel-instance&quot;&gt;Deploy Yourself&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy-paste this into your markdown content, and that’s it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub’s username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Available ranks are S+ (top 1%), S (top 25%), A++ (top 45%), A+ (top 60%), and B+ (everyone). The values are calculated by using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;cumulative distribution function&lt;/a&gt; using commits, contributions, issues, stars, pull requests, followers, and owned repositories. The implementation can be investigated at &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/src/calculateRank.js&quot;&gt;src/calculateRank.js&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;To hide any specific stats, you can pass a query parameter &lt;code&gt;?hide=&lt;/code&gt; with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding private contributions count to total commits count&lt;/h3&gt; 
&lt;p&gt;You can add the count of all your private contributions to the total commits count by using the query parameter &lt;code&gt;?count_private=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: If you are deploying this project yourself, the private contributions will be counted by default otherwise you need to chose to share your private contribution counts.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;count_private=true&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;count_private=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;?theme=THEME_NAME&lt;/code&gt; parameter like so :-&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes :-&lt;/h4&gt; 
&lt;p&gt;dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula&lt;/p&gt; 
&lt;img src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png&quot; alt=&quot;GitHub Readme Stats Themes&quot; width=&quot;600px&quot;&gt; 
&lt;p&gt;You can look at a preview for &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt; or checkout the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js&quot;&gt;theme config file&lt;/a&gt; &amp;amp; &lt;strong&gt;you can also contribute new themes&lt;/strong&gt; if you like :D&lt;/p&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of your &lt;code&gt;Stats Card&lt;/code&gt; or &lt;code&gt;Repo Card&lt;/code&gt; however you wish with URL params.&lt;/p&gt; 
&lt;h4&gt;Common Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title_color&lt;/code&gt; - Card’s title color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;text_color&lt;/code&gt; - Body text color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;icon_color&lt;/code&gt; - Icons color if available &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;border_color&lt;/code&gt; - Card’s border color &lt;em&gt;(hex color)&lt;/em&gt;. (Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bg_color&lt;/code&gt; - Card’s background color &lt;em&gt;(hex color)&lt;/em&gt; &lt;strong&gt;or&lt;/strong&gt; a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_border&lt;/code&gt; - Hides the card’s border &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - name of the theme, choose from &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache_seconds&lt;/code&gt; - set the cache header manually &lt;em&gt;(min: 1800, max: 86400)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;locale&lt;/code&gt; - set the language in the card &lt;em&gt;(e.g. cn, de, es, etc.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;border_radius&lt;/code&gt; - Corner rounding on the card_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in bg_color option to render a gradient, the format of the gradient is :-&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note on cache: Repo cards have a default cache of 4 hours (14400 seconds) if the fork count &amp;amp; star count is less than 1k, otherwise, it’s 2 hours (7200 seconds). Also, note that the cache is clamped to a minimum of 2 hours and a maximum of 24 hours.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Stats Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hides the specified items from stats &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_rank&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt; hides the rank and automatically resizes the card width&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;show_icons&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;include_all_commits&lt;/code&gt; - Count total commits instead of just the current year commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;count_private&lt;/code&gt; - Count private commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disable_animations&lt;/code&gt; - Disables all animations in the card &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repo Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;show_owner&lt;/code&gt; - Show the repo’s owner name &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Language Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hide the languages specified from the card &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;card_width&lt;/code&gt; - Set the card’s width manually &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Show more languages on the card, between 1-10, defaults to 5 &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exclude_repo&lt;/code&gt; - Exclude specified repositories &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Important:&lt;/strong&gt; Language names should be uri-escaped, as specified in &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding&quot;&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href=&quot;https://www.urlencoder.org/&quot;&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Wakatime Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_progress&lt;/code&gt; - Hides the progress bar and percentage &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Limit number of languages on the card, defaults to all reported langauges&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_domain&lt;/code&gt; - Set a custom API domain for the card, e.g. to use services like &lt;a href=&quot;https://github.com/mujx/hakatime&quot;&gt;Hakatime&lt;/a&gt; or &lt;a href=&quot;https://github.com/muety/wakapi&quot;&gt;Wakapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;range&lt;/code&gt; – Request a range different from your WakaTime default, e.g. &lt;code&gt;last_7_days&lt;/code&gt;. See &lt;a href=&quot;https://wakatime.com/developers#stats&quot;&gt;WakaTime API docs&lt;/a&gt; for list of available options.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;show_owner&lt;/a&gt; variable to include the repo’s owner username&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card show a GitHub user’s most frequently used top language.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NOTE: Top Languages does not indicate my skill level or anything like that, it’s a GitHub metric of which languages have the most code on GitHub. It’s a new feature of github-readme-stats.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 10 (inclusive), and the default is 5.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Wakatime Week Stats&lt;/h1&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href=&quot;https://wakatime.com&quot;&gt;Wakatime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![willianrod&#39;s wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=willianrod)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod’s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;hide_progress=true&quot; alt=&quot;willianrod’s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;layout=compact&quot; alt=&quot;willianrod’s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;All Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Customized Card&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wakatime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod’s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Quick Tip (Align The Repo Cards)&lt;/h3&gt; 
&lt;p&gt;You usually won’t be able to layout the images side by side. To do that you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;https://github.com/anuraghazra/convoychat&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy on your own Vercel instance&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://youtu.be/n6d4KHSKqGk?t=107&quot;&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you don’t have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;p&gt;NOTE: Since &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pull/58&quot;&gt;#58&lt;/a&gt; we should be able to handle more than 5k requests and have no issues with downtime :D&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy to Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt; Guide on setting up Vercel 🔨 &lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href=&quot;https://vercel.com/&quot;&gt;vercel.com&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/tct1wg.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/btd78j.jpeg&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Sign into GitHub and allow access to all repositories, if prompted&lt;/li&gt; 
  &lt;li&gt;Fork this repo&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href=&quot;https://vercel.com/dashboard&quot;&gt;Vercel dashboard&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Import Project&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/qckos0.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Import Git Repository&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/pqub9q.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Select root and keep everything as is, just add your environment variable named PAT_1 (as shown), which will contain a personal access token (PAT), which you can easily create &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;here&lt;/a&gt; (leave everything as is, just name it something, it can be anything you want) &lt;img src=&quot;https://files.catbox.moe/0ez4g7.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you’re good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;:sparkling_heart: Support the project&lt;/h2&gt; 
&lt;p&gt;I open-source almost everything I can, and I try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are few ways you can do it :-&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project :rocket:&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;&lt;img src=&quot;https://ionicabizau.github.io/badges/paypal.svg?sanitize=true&quot; alt=&quot;paypal.me/anuraghazra&quot;&gt;&lt;/a&gt; - You can make one-time donations via PayPal. I’ll probably buy a ~~coffee~~ tea. :tea:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! :heart:&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&quot; alt=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with :heart: and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jonasschmedtmann/complete-javascript-course</title>
      <link>https://github.com/jonasschmedtmann/complete-javascript-course</link>
      <description>&lt;p&gt;Starter files, final projects, and FAQ for my Complete JavaScript course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt; 
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt; 
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn’t work&lt;/strong&gt;!&lt;/p&gt; 
&lt;p&gt;👇 &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q1: How do I download the files?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you’re new to GitHub and just want to download the entire code, hit the green button saying “Code”, and then choose the “Download ZIP” option. If you can’t see the button (on mobile), use &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip&quot;&gt;this link&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Q2: I’m looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt; 
&lt;h3&gt;Q3: I’m stuck! Where do I get help?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Have you actually tried to fix the problem on your own? Have you compared your code to the final code? If you failed fixing your problem, please &lt;strong&gt;post a detailed description of the problem to the Q&amp;amp;A area of that video over at Udemy&lt;/strong&gt;, along with a &lt;a href=&quot;https://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt; containing your code. You will get help there. Please don’t send me a personal message or email to fix coding problems.&lt;/p&gt; 
&lt;h3&gt;Q4: What VSCode theme are you using?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I use Monokai Pro for all my coding and course production. It’s a paid theme (I’, &lt;strong&gt;not&lt;/strong&gt; affiliated with them), but you can actually use the free demo version forever 😅&lt;/p&gt; 
&lt;h3&gt;Q5: Can I see a final version of the course projects?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Sure! Here you go:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pig-game-v2.netlify.app&quot;&gt;Pig Game&lt;/a&gt; (DOM Manipulation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist.netlify.app/&quot;&gt;Bankist&lt;/a&gt; (Arrays, Numbers, Dates, Timers. Fake “log in” with user &lt;code&gt;js&lt;/code&gt; and PIN &lt;code&gt;1111&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist-dom.netlify.app/&quot;&gt;Bankist Site&lt;/a&gt; (Advanced DOM and Events)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mapty.netlify.app/&quot;&gt;Mapty&lt;/a&gt; (OOP, Geolocation, Project planning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forkify-v2.netlify.app/&quot;&gt;forkify&lt;/a&gt; (Final advanced project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q6: Videos don’t load, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact their support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q7: Videos are blurred / have low quality, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please open video settings and change the quality from ‘Auto’ to another value, for example 720p. If that doesn’t help, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q8: Are the videos downloadable?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes! I made all videos downloadable from Udemy so you can learn even without an internet connection. To download a video, use the settings icon in the right bottom corner of the video player. Videos have to be downloaded individually.&lt;/p&gt; 
&lt;h3&gt;Q9: I want to put these projects in my portfolio. Is that allowed?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is &lt;strong&gt;not allowed&lt;/strong&gt; is that you create your own course/videos/articles based on this course’s content!&lt;/p&gt; 
&lt;h3&gt;Q10: You mentioned your resources page. Where can I find it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It’s on my website at &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;http://codingheroes.io/resources&lt;/a&gt;. You can subscribe for updates 😉&lt;/p&gt; 
&lt;h3&gt;Q11: I love your courses and want to get updates on new courses. How?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, you can subscribe to my email list &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;at my website&lt;/a&gt;. Plus, I make important announcements on twitter &lt;a href=&quot;https://twitter.com/jonasschmedtman&quot;&gt;@jonasschmedtman&lt;/a&gt;, so you should definitely follow me there 🔥&lt;/p&gt; 
&lt;h3&gt;Q12: How do I get my certificate of completion?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the “Your progress” indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q13: Can you add subtitles in my language?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt; to request your own language.&lt;/p&gt; 
&lt;h3&gt;Q14: Do you accept pull requests?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, for the simple reason that I want this repository to contain the &lt;em&gt;exact&lt;/em&gt; same code that is shown in the videos. However, please feel free to add an issue if you found one.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fabricjs/fabric.js</title>
      <link>https://github.com/fabricjs/fabric.js</link>
      <description>&lt;p&gt;Javascript Canvas Library, SVG-to-Canvas (&amp; canvas-to-SVG) Parser&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Fabric.js&lt;/h2&gt; 
&lt;!-- build/coverage status, climate --&gt; 
&lt;p&gt;&lt;a href=&quot;http://travis-ci.org/#!/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://secure.travis-ci.org/fabricjs/fabric.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://d3s6mut3hikguw.cloudfront.net/github/kangax/fabric.js/badges/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/kangax/fabric.js?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/fabricjs/fabric.js/badge.png?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/fabricjs/fabric.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready-to-Code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- npm, bower, CDNJS versions, downloads --&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/bo/fabric&quot;&gt;&lt;img src=&quot;https://badge.fury.io/bo/fabric.svg?sanitize=true&quot; alt=&quot;Bower version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://badge.fury.io/js/fabric&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/fabric.svg?sanitize=true&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/fabric&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/fabric.svg?sanitize=true&quot; alt=&quot;Downloads per month&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cdnjs.com/libraries/fabric.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/cdnjs/v/fabric.js.svg?sanitize=true&quot; alt=&quot;CDNJS version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- deps status --&gt; 
&lt;p&gt;&lt;a href=&quot;https://david-dm.org/kangax/fabric.js&quot;&gt;&lt;img src=&quot;https://david-dm.org/kangax/fabric.js.svg?theme=shields.io&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/kangax/fabric.js#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/kangax/fabric.js/dev-status.svg?theme=shields.io&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- bounties, tips --&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bountysource.com/trackers/23217-fabric-js?utm_source=23217&amp;amp;utm_medium=shield&amp;amp;utm_campaign=TRACKER_BADGE&quot;&gt;&lt;img src=&quot;https://api.bountysource.com/badge/tracker?tracker_id=23217&quot; alt=&quot;Bountysource&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://flattr.com/submit/auto?user_id=kangax&amp;amp;url=http://github.com/kangax/fabric.js&amp;amp;title=Fabric.js&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software&quot;&gt;&lt;img src=&quot;http://api.flattr.com/button/flattr-badge-large.png&quot; alt=&quot;Flattr this git repo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fabric.js&lt;/strong&gt; is a framework that makes it easy to work with HTML5 canvas element. It is an &lt;strong&gt;interactive object model&lt;/strong&gt; on top of canvas element. It is also an &lt;strong&gt;SVG-to-canvas parser&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://fabricjs.com/kitchensink&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/kangax/fabric.js/raw/master/lib/screenshot.png&quot; style=&quot;width:300px;box-shadow:rgba(0,0,0,0.3) 0 0 5px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Using Fabric.js, you can create and populate objects on canvas; objects like simple geometrical shapes — rectangles, circles, ellipses, polygons, or more complex shapes consisting of hundreds or thousands of simple paths. You can then scale, move, and rotate these objects with the mouse; modify their properties — color, transparency, z-index, etc. You can also manipulate these objects altogether — grouping them with a simple mouse selection.&lt;/p&gt; 
&lt;h3&gt;Non-Technical Introduction to Fabric&lt;/h3&gt; 
&lt;p&gt;Fabric.js allows you to easily create simple shapes like rectangles, circles, triangles and other polygons or more complex shapes made up of many paths, onto the HTML &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element on a webpage using JavaScript. Fabric.js will then allow you to manipulate the size, position and rotation of these objects with a mouse. It’s also possible to change some of the attributes of these objects such as their color, transparency, depth position on the webpage or selecting groups of these objects using the Fabric.js library. Fabric.js will also allow you to convert an SVG image into JavaScript data that can be used for putting it onto the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Love-Fabric%3F-Help-us-by...&quot;&gt;Contributions&lt;/a&gt; are very much welcome!&lt;/p&gt; 
&lt;h3&gt;Goals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unit tested (1150+ tests at the moment, 79%+ coverage)&lt;/li&gt; 
 &lt;li&gt;Modular (~60 small &lt;a href=&quot;http://fabricjs.com/docs/&quot;&gt;“classes”, modules, mixins&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Cross-browser&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Focus-on-speed&quot;&gt;Fast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Encapsulated in one object&lt;/li&gt; 
 &lt;li&gt;No browser sniffing for critical functionality&lt;/li&gt; 
 &lt;li&gt;Runs under ES5 strict mode&lt;/li&gt; 
 &lt;li&gt;Runs on a server under &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; (active stable releases and latest of current) (see &lt;a href=&quot;https://github.com/kangax/fabric.js/wiki/Fabric-limitations-in-node.js&quot;&gt;Node.js limitations&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Follows &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported browsers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox 4+&lt;/li&gt; 
 &lt;li&gt;Safari 5+&lt;/li&gt; 
 &lt;li&gt;Opera 9.64+&lt;/li&gt; 
 &lt;li&gt;Chrome (all versions)&lt;/li&gt; 
 &lt;li&gt;Edge (chromium based, all versions)&lt;/li&gt; 
 &lt;li&gt;IE11 and Edge legacy, supported but deprecated.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can &lt;a href=&quot;http://fabricjs.com/test/unit/&quot;&gt;run automated unit tests&lt;/a&gt; right in the browser.&lt;/p&gt; 
&lt;h3&gt;History&lt;/h3&gt; 
&lt;p&gt;Fabric.js started as a foundation for design editor on &lt;a href=&quot;http://printio.ru&quot;&gt;printio.ru&lt;/a&gt; — interactive online store with ability to create your own designs. The idea was to create &lt;a href=&quot;http://printio.ru/ringer_man_tees/new&quot;&gt;Javascript-based editor&lt;/a&gt;, which would make it easy to manipulate vector shapes and images on T-Shirts. Since performance was one of the most critical requirements, we chose canvas over SVG. While SVG is excellent with static shapes, it’s not as performant as canvas when it comes to dynamic manipulation of objects (movement, scaling, rotation, etc.). Fabric.js was heavily inspired by &lt;a href=&quot;http://www.ernestdelgado.com/public-tests/canvasphoto/demo/canvas.html&quot;&gt;Ernest Delgado’s canvas experiment&lt;/a&gt;. In fact, code from Ernest’s experiment was the foundation of an entire framework. Later, Fabric.js grew into a collection of distinct object types and got an SVG-to-canvas parser.&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;h3 id=&quot;bower-install&quot;&gt;Install with bower&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ bower install fabric
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3 id=&quot;npm-install&quot;&gt;Install with npm&lt;/h3&gt; 
&lt;p&gt;Note: If you are using Fabric.js in a Node.js script, you will depend from &lt;a href=&quot;https://github.com/Automattic/node-canvas&quot;&gt;node-canvas&lt;/a&gt;.&lt;code&gt;node-canvas&lt;/code&gt; is an html canvas replacement that works on top of native libraries. Please follow the instructions located &lt;a href=&quot;https://github.com/Automattic/node-canvas#compiling&quot;&gt;here&lt;/a&gt; in order to get it up and running.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install fabric --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this, you can import fabric like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const fabric = require(&quot;fabric&quot;).fabric;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can use this instead if your build pipeline supports ES6 imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import { fabric } from &quot;fabric&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: es6 imports won’t work in browser or with bundlers which expect es6 module like vite. Use commonjs syntax instead.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/fabricjs/fabric.js/master/#examples-of-use&quot;&gt;the example section&lt;/a&gt; for usage examples.&lt;/p&gt; 
&lt;h3 id=&quot;fabric-building&quot;&gt;Building&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/joyent/node/wiki/Installation&quot;&gt;Install Node.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build distribution file &lt;strong&gt;[~77K minified, ~20K gzipped]&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.1 Or build a custom distribution file, by passing (comma separated) module names to be included.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=text,serialization,parser
   // or
   $ node build.js modules=text
   // or
   $ node build.js modules=parser,text
   // etc.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;By default (when none of the modules are specified) only basic functionality is included. See the list of modules below for more information on each one of them. Note that default distribution has support for &lt;strong&gt;static canvases&lt;/strong&gt; only.&lt;/p&gt; &lt;p&gt;To get minimal distribution with interactivity, make sure to include corresponding module:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=interaction
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.2 You can also include all modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.3 You can exclude a few modules like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   $ node build.js modules=ALL exclude=gestures,image_filters
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a minified distribution file&lt;/p&gt; &lt;pre&gt;&lt;code&gt; # Using YUICompressor (default option)
 $ node build.js modules=... minifier=yui

 # or Google Closure Compiler
 $ node build.js modules=... minifier=closure
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable AMD support via require.js (requires uglify)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js requirejs modules=...
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create source map file for better productive debugging (requires uglify or google closure compiler).&lt;br&gt;More information about &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&quot;&gt;source maps&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ node build.js sourcemap modules=...
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use google closure compiler you have to add &lt;code&gt;sourceMappingURL&lt;/code&gt; manually at the end of the minified file all.min.js (see issue https://code.google.com/p/closure-compiler/issues/detail?id=941).&lt;/p&gt; &lt;pre&gt;&lt;code&gt; //# sourceMappingURL=fabric.min.js.map
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure code guidelines are met (prerequisite: &lt;code&gt;npm -g install eslint&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ npm run lint &amp;amp;&amp;amp; npm run lint_tests
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3 id=&quot;fabric-building&quot;&gt;Testing&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/joyent/node/wiki/Installation&quot;&gt;Install Node.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm#super-easy-install&quot;&gt;Install NPM, if necessary&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install NPM packages&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run test suite&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Make sure testem is installed&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    $ npm install -g testem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run tests Chrome and Node (by default):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    $ testem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See testem docs for more info: https://github.com/testem/testem&lt;/p&gt; 
&lt;h3&gt;Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/demos/&quot;&gt;Demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/kitchensink&quot;&gt;Kitchensink demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://fabricjs.com/benchmarks/&quot;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;http://trends.builtwith.com/javascript/FabricJS&quot;&gt;Who’s using Fabric?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation is always available at &lt;a href=&quot;http://fabricjs.com/docs/&quot;&gt;http://fabricjs.com/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href=&quot;http://fabricjs.com/articles&quot;&gt;official 4-part intro series&lt;/a&gt;, &lt;a href=&quot;http://www.slideshare.net/kangax/fabricjs-building-acanvaslibrarybk&quot;&gt;presentation from BK.js&lt;/a&gt; and &lt;a href=&quot;http://www.slideshare.net/kangax/fabric-falsy-values-8067834&quot;&gt;presentation from Falsy Values&lt;/a&gt; for an overview of fabric.js, how it works, and its features.&lt;/p&gt; 
&lt;h3&gt;Optional modules&lt;/h3&gt; 
&lt;p&gt;These are the optional modules that could be specified for inclusion, when building custom version of fabric:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; — Adds support for static text (&lt;code&gt;fabric.Text&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;itext&lt;/strong&gt; — Adds support for interactive text (&lt;code&gt;fabric.IText&lt;/code&gt;, &lt;code&gt;fabric.Textbox&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;serialization&lt;/strong&gt; — Adds support for &lt;code&gt;loadFromJSON&lt;/code&gt;, &lt;code&gt;loadFromDatalessJSON&lt;/code&gt;, and &lt;code&gt;clone&lt;/code&gt; methods on &lt;code&gt;fabric.Canvas&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;interaction&lt;/strong&gt; — Adds support for interactive features of fabric — selecting/transforming objects/groups via mouse/touch devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;parser&lt;/strong&gt; — Adds support for &lt;code&gt;fabric.parseSVGDocument&lt;/code&gt;, &lt;code&gt;fabric.loadSVGFromURL&lt;/code&gt;, and &lt;code&gt;fabric.loadSVGFromString&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;image_filters&lt;/strong&gt; — Adds support for image filters, such as grayscale of white removal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;easing&lt;/strong&gt; — Adds support for animation easing functions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;node&lt;/strong&gt; — Adds support for running fabric under node.js, with help of &lt;a href=&quot;https://github.com/tmpvar/jsdom&quot;&gt;jsdom&lt;/a&gt; and &lt;a href=&quot;https://github.com/learnboost/node-canvas&quot;&gt;node-canvas&lt;/a&gt; libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedrawing&lt;/strong&gt; — Adds support for free drawing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;erasing&lt;/strong&gt; — Adds support for object erasing using an eraser brush&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;gestures&lt;/strong&gt; — Adds support for multitouch gestures with help of &lt;a href=&quot;https://github.com/mudcube/Event.js&quot;&gt;Event.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;object_straightening&lt;/strong&gt; — Adds support for rotating an object to one of 0, 90, 180, 270, etc. depending on which is angle is closer.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;animation&lt;/strong&gt; — Adds support for animation (&lt;code&gt;fabric.util.animate&lt;/code&gt;, &lt;code&gt;fabric.util.requestAnimFrame&lt;/code&gt;, &lt;code&gt;fabric.Object#animate&lt;/code&gt;, &lt;code&gt;fabric.Canvas#fxCenterObjectH/#fxCenterObjectV/#fxRemove&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additional flags for build script are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;requirejs&lt;/strong&gt; — Makes fabric requirejs AMD-compatible in &lt;code&gt;dist/fabric.js&lt;/code&gt;. &lt;em&gt;Note:&lt;/em&gt; an unminified, requirejs-compatible version is always created in &lt;code&gt;dist/fabric.require.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;no-strict&lt;/strong&gt; — Strips “use strict” directives from source&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;no-svg-export&lt;/strong&gt; — Removes svg exporting functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;sourcemap&lt;/strong&gt; - Generates a sourceMap file and adds the &lt;code&gt;sourceMappingURL&lt;/code&gt; (only if uglifyjs is used) to &lt;code&gt;dist/fabric.min.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node build.js modules=ALL exclude=json no-strict no-svg-export
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Examples of use&lt;/h3&gt; 
&lt;h4&gt;Adding red rectangle to canvas&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;canvas id=&quot;canvas&quot; width=&quot;300&quot; height=&quot;300&quot;&amp;gt;&amp;lt;/canvas&amp;gt;

    &amp;lt;script src=&quot;lib/fabric.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
        var canvas = new fabric.Canvas(&#39;canvas&#39;);

        var rect = new fabric.Rect({
            top : 100,
            left : 100,
            width : 60,
            height : 70,
            fill : &#39;red&#39;
        });

        canvas.add(rect);
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helping Fabric&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bountysource.com/trackers/23217-fabric-js&quot;&gt;Fabric on Bountysource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.codetriage.com/kangax/fabric.js&quot;&gt;Fabric on CodeTriage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fabricjs/fabric.js/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Staying in touch&lt;/h3&gt; 
&lt;p&gt;Follow &lt;a href=&quot;http://twitter.com/fabricjs&quot;&gt;@fabric.js&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/kangax&quot;&gt;@kangax&lt;/a&gt; or &lt;a href=&quot;http://twitter.com/AndreaBogazzi&quot;&gt;@AndreaBogazzi&lt;/a&gt; on twitter.&lt;/p&gt; 
&lt;p&gt;Questions, suggestions — &lt;a href=&quot;http://groups.google.com/group/fabricjs&quot;&gt;fabric.js on Google Groups&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;http://stackoverflow.com/questions/tagged/fabricjs&quot;&gt;Fabric questions on Stackoverflow&lt;/a&gt;, Fabric snippets on &lt;a href=&quot;http://jsfiddle.net/user/fabricjs/fiddles/&quot;&gt;jsfiddle&lt;/a&gt; or &lt;a href=&quot;http://codepen.io/tag/fabricjs&quot;&gt;codepen.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Fabric on &lt;a href=&quot;http://libknot.ohmztech.com/&quot;&gt;LibKnot&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Get help in Fabric’s IRC channel — irc://irc.freenode.net/#fabric.js&lt;/p&gt; 
&lt;h3&gt;Credits&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/AndreaBogazzi&quot;&gt;Andrea Bogazzi&lt;/a&gt; for help with bugs, new features, documentation, GitHub issues&lt;/li&gt; 
 &lt;li&gt;Ernest Delgado for the original idea of &lt;a href=&quot;http://www.ernestdelgado.com/archive/canvas/&quot;&gt;manipulating images on canvas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://twitter.com/hakunin&quot;&gt;Maxim “hakunin” Chernyak&lt;/a&gt; for ideas, and help with various parts of the library throughout its life&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nisnya.com&quot;&gt;Sergey Nisnevich&lt;/a&gt; for help with geometry logic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/kienzle_s&quot;&gt;Stefan Kienzle&lt;/a&gt; for help with bugs, features, documentation, GitHub issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.shutterstock.com/jobs&quot;&gt;Shutterstock&lt;/a&gt; for the time and resources invested in using and improving fabric.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangax/fabric.js/graphs/contributors&quot;&gt;And all the other GitHub contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MIT License&lt;/h3&gt; 
&lt;p&gt;Copyright (c) 2008-2015 Printio (Juriy Zaytsev, Maxim Chernyak)&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OAI/OpenAPI-Specification</title>
      <link>https://github.com/OAI/OpenAPI-Specification</link>
      <description>&lt;p&gt;The OpenAPI Specification Repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The OpenAPI Specification&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/OAI/OpenAPI-Specification/workflows/validate-markdown/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt; &lt;a href=&quot;https://www.codetriage.com/oai/openapi-specification&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/oai/openapi-specification/badges/users.svg?sanitize=true&quot; alt=&quot;Issue triagers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16343502?v=3&amp;amp;s=200&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification is a community-driven open specification within the &lt;a href=&quot;https://www.openapis.org/&quot;&gt;OpenAPI Initiative&lt;/a&gt;, a Linux Foundation Collaborative Project.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for HTTP APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.&lt;/p&gt; 
&lt;p&gt;Use cases for machine-readable API definition documents include, but are not limited to: interactive documentation; code generation for documentation, clients, and servers; and automation of test cases. OpenAPI documents describe an APIs services and are represented in either YAML or JSON formats. These documents may either be produced and served statically or be generated dynamically from an application.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification does not require rewriting existing APIs. It does not require binding any software to a service – the service being described may not even be owned by the creator of its description. It does, however, require the capabilities of the service be described in the structure of the OpenAPI Specification. Not all services can be described by OpenAPI – this specification is not intended to cover every possible style of HTTP APIs, but does include support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST APIs&lt;/a&gt;. The OpenAPI Specification does not mandate a specific development process such as design-first or code-first. It does facilitate either technique by establishing clear interactions with a HTTP API.&lt;/p&gt; 
&lt;p&gt;This GitHub project is the starting point for OpenAPI. Here you will find the information you need about the OpenAPI Specification, simple examples of what it looks like, and some general information regarding the project.&lt;/p&gt; 
&lt;h2&gt;Current Version - 3.1.0&lt;/h2&gt; 
&lt;p&gt;The current version of the OpenAPI specification is &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions/3.1.0.md&quot;&gt;OpenAPI Specification 3.1.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Previous Versions&lt;/h3&gt; 
&lt;p&gt;This repository also contains all &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions&quot;&gt;previous versions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Each folder in this repository, such as &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples&quot;&gt;examples&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas&quot;&gt;schemas&lt;/a&gt;, should contain folders pertaining to the current and previous versions of the specification.&lt;/p&gt; 
&lt;h2&gt;See It in Action&lt;/h2&gt; 
&lt;p&gt;If you just want to see it work, check out the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples&quot;&gt;list of current examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools and Libraries&lt;/h2&gt; 
&lt;p&gt;Looking to see how you can create your own OpenAPI definition, present it, or otherwise use it? Check out the growing &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/IMPLEMENTATIONS.md&quot;&gt;list of implementations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Participation&lt;/h2&gt; 
&lt;p&gt;The current process for development of the OpenAPI Specification is described in &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/DEVELOPMENT.md&quot;&gt;Development Guidelines&lt;/a&gt;. Development of the next version of the OpenAPI Specification is guided by the &lt;a href=&quot;https://www.openapis.org/participate/how-to-contribute/governance#TDC&quot;&gt;Technical Steering Committee (TSC)&lt;/a&gt;. This group of committers bring their API expertise, incorporate feedback from the community, and expand the group of committers as appropriate. All development activity on the future specification will be performed as features and merged into this branch. Upon release of the future specification, this branch will be merged to &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The TSC holds weekly web conferences to review open pull requests and discuss open issues related to the evolving OpenAPI Specification. Participation in weekly calls and scheduled working sessions is open to the community. You can view the &lt;a href=&quot;https://openapi.groups.io/g/tsc/calendar&quot;&gt;TSC calendar online&lt;/a&gt;. Look for the “Subscribe to Calendar” button for instructions on subscribing.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Initiative encourages participation from individuals and companies alike. If you want to participate in the evolution of the OpenAPI Specification, consider taking the following actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions/3.1.0.md&quot;&gt;current specification&lt;/a&gt;. The human-readable markdown file &lt;em&gt;is the source of truth&lt;/em&gt; for the specification.&lt;/li&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/DEVELOPMENT.md&quot;&gt;development&lt;/a&gt; process so you understand how the spec is evolving.&lt;/li&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/issues&quot;&gt;issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/pulls&quot;&gt;pull requests&lt;/a&gt; to see if someone has already documented your idea or feedback on the specification. You can follow an existing conversation by subscribing to the existing issue or PR.&lt;/li&gt; 
 &lt;li&gt;Subscribe to an open issue a day (or a week) in your inbox via &lt;a href=&quot;https://www.codetriage.com/oai/openapi-specification&quot;&gt;CodeTriage.com&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Create an issue to describe a new concern. If possible, propose a solution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not all feedback can be accommodated and there may be solid arguments for or against a change being appropriate for the specification.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/raw/main/LICENSE&quot;&gt;License (Apache-2.0)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://ga-beacon.appspot.com/UA-831873-42/readme.md?pixel&quot; alt=&quot;Analytics&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dcloudio/uni-app</title>
      <link>https://github.com/dcloudio/uni-app</link>
      <description>&lt;p&gt;uni-app 是使用 Vue 语法开发小程序、H5、App的统一框架&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uni-app&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt; 是一个使用 &lt;code&gt;Vue.js&lt;/code&gt; 开发小程序、H5、App的统一前端框架。官网地址：&lt;a href=&quot;https://uniapp.dcloud.io&quot;&gt;https://uniapp.dcloud.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;开发者使用 &lt;code&gt;Vue&lt;/code&gt; 语法编写代码，&lt;code&gt;uni-app&lt;/code&gt; 框架将其编译到 小程序（微信/支付宝/百度/字节跳动/QQ/钉钉）、App（iOS/Android）、H5等多个平台，保证其正确运行并达到优秀体验。&lt;/p&gt; 
&lt;h1&gt;uni-app的特点&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;开发者和案例更多：HBuilder装机量800万台，开发者社区月活百万，70多个QQ微信群承载10万人。案例众多，uni统计月活超10亿（&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;详见&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;性能更高（见&lt;a href=&quot;https://juejin.im/post/5ca1736af265da30ae314248&quot;&gt;评测&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;更丰富的周边生态，&lt;a href=&quot;https://ext.dcloud.net.cn/&quot;&gt;插件市场&lt;/a&gt;数千款插件&lt;/li&gt; 
 &lt;li&gt;提供比小程序原生开发更好的开发体验、更高的工程化效率&lt;/li&gt; 
 &lt;li&gt;跨端抹平度更完善，且各端特色发挥更灵活，可真正实现一套代码多端覆盖，无需各端多头维护升级&lt;/li&gt; 
 &lt;li&gt;权威认可：阿里小程序官方工具内置uni-app（&lt;a href=&quot;https://docs.alipay.com/mini/ide/0.70-stable&quot;&gt;详见&lt;/a&gt;）、腾讯课堂官方自制uni-app培训视频（&lt;a href=&quot;https://ask.dcloud.net.cn/article/35640&quot;&gt;详见&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;扫码体验&lt;/h2&gt; 
&lt;p&gt;开发一次，编译到10个平台。依次扫描10个二维码，亲自体验最全面的跨平台效果！&lt;/p&gt; 
&lt;img src=&quot;https://img.cdn.aliyun.dcloud.net.cn/uni-app/uni-app-qr-all.jpg&quot;&gt; 
&lt;p&gt;&lt;em&gt;注： 某些平台不能提交简单demo，补充了一些其他功能。&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;支持通过&lt;code&gt;vue-cli&lt;/code&gt;命令行、&lt;code&gt;HBuilderX&lt;/code&gt;可视化界面两种方式快速创建项目：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uniapp.dcloud.io/quickstart?id=_2-%E9%80%9A%E8%BF%87vue-cli%E5%91%BD%E4%BB%A4%E8%A1%8C&quot;&gt;vue-cli命令行方式&lt;/a&gt;：不限IDE，适合对node熟悉的开发者，扩展阅读：&lt;a href=&quot;https://ask.dcloud.net.cn/article/36286&quot;&gt;在vscode中开发uni-app&lt;/a&gt;、&lt;a href=&quot;https://ask.dcloud.net.cn/article/36307&quot;&gt;在 WebStorm 中开发 uni-app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uniapp.dcloud.io/quickstart?id=_1-%E9%80%9A%E8%BF%87-hbuilderx-%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2&quot;&gt;HBuilderX可视化界面&lt;/a&gt;：专用IDE，内置相关环境，开箱即用，开发效率更高。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目案例&lt;/h2&gt; 
&lt;p&gt;案例展示：&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;uniapp.dcloud.io/case&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;欢迎提交你的应用，&lt;a href=&quot;https://github.com/dcloudio/uni-app/issues/6&quot;&gt;uni-app案例征集&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;需求墙&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;计划支持的功能点，会在需求墙上进行展示，征集开发者的投票意见，&lt;a href=&quot;https://dev.dcloud.net.cn/wish/&quot;&gt;前往投票&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;一直保持高频的更新迭代，详见&lt;a href=&quot;https://raw.githubusercontent.com/dcloudio/uni-app/master/docs/release.md&quot;&gt;uni-app 更新日志&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;论坛&lt;/h2&gt; 
&lt;p&gt;由于&lt;code&gt;DCloud&lt;/code&gt;有70多个QQ、微信群，官方已无法维护更多交流群。请开发者到官方论坛交流：&lt;a href=&quot;https://ask.dcloud.net.cn/explore/&quot;&gt;https://ask.dcloud.net.cn/explore/&lt;/a&gt; 。论坛提供了比issues更专业的工具服务。&lt;/p&gt; 
&lt;h2&gt;插件市场&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt;有丰富的插件生态，众多开发者提交了数千款组件、sdk、项目模板，详见：&lt;a href=&quot;https://ext.dcloud.net.cn/&quot;&gt;https://ext.dcloud.net.cn/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;除了众多三方ui库，官方还提供了uni-ui，在性能和跨端兼容方面有更强的优势。详见：&lt;a href=&quot;https://ext.dcloud.net.cn/plugin?id=55&quot;&gt;https://ext.dcloud.net.cn/plugin?id=55&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;现有项目如何迁移到uni-app体系&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;微信小程序转换uni-app指南及转换器：&lt;a href=&quot;https://ask.dcloud.net.cn/article/35786&quot;&gt;https://ask.dcloud.net.cn/article/35786&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;vue h5项目转换uni-app指南：&lt;a href=&quot;https://ask.dcloud.net.cn/article/36174&quot;&gt;https://ask.dcloud.net.cn/article/36174&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mpvue 项目（组件）迁移指南、示例及资源汇总： &lt;a href=&quot;https://ask.dcloud.net.cn/article/34945&quot;&gt;https://ask.dcloud.net.cn/article/34945&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;wepy转uni-app转换器：&lt;a href=&quot;https://github.com/zhangdaren/wepy-to-uniapp&quot;&gt;https://github.com/zhangdaren/wepy-to-uniapp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见疑问&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;问：不同端有不同的需求、不同的特色，登陆支付也不一样，如何统一？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：差异部分使用条件编译。uni-app提供了灵活强大的&lt;a href=&quot;https://uniapp.dcloud.io/platform&quot;&gt;条件编译&lt;/a&gt;。可以完美处理复用部分和差异部分。真正一套工程源码。当业务升级时，不再需要多端维护。如果多端维护，经常会因为某些端的流量不大，就一直拖延无法让那些用户享受到最新服务。另外登陆支付在客户端部分，已经被uni-app统一成一样的api了。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：多端是不是一种妥协，是否会造成性能下降？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：good question。多端且不影响性能，确实很难，但uni-app做到了。在h5端，它的性能、包体积与直接使用vue.js开发一致； 在小程序端，它的性能比大多数开发框架更好，uni-app底层自动处理的setdata差量同步机制，比开发者手动写setdata更好，就像使用vue.js更新界面比手动写js修改dom更高效一样； 在App，uni-app支持webview渲染和原生渲染双引擎，启用原生渲染时，css写法受限，但性能是很接近原生开发的效果的，在当前的手机环境下，千万日活以下的应用在App使用uni-app也不会遇到任何压力。当然也可以在已经做好的原生App中将部分页面改为uni-app实现; 此外，我们会把很多跨端处理放在编译期完成的，这样会减少对运行期的效率影响。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：不做多端，是不是不需要uni-app？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：不是。大量开发者用uni-app只做一个端，详见&lt;a href=&quot;https://uniapp.dcloud.io/case&quot;&gt;案例&lt;/a&gt;。对于开发者而言，一个优秀工具在手，做什么都不愁。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;问：uni-app以后会不会变更开源协议，转向收费？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;答：官方承诺永远不会变更开源协议。无论HBuilderX、uni-app、App，面向中国人永久免费。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;更多资料&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;评测：&lt;a href=&quot;https://juejin.im/post/5e8e8d5a6fb9a03c6d3d9f42&quot;&gt;跨端开发框架深度横评之2020版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;评测：&lt;a href=&quot;https://mp.weixin.qq.com/s/jIDEHfuMnED6HTfNgjsW4w&quot;&gt;深入测试一周，主流多端框架大比武&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ask.dcloud.net.cn/article/36083&quot;&gt;uni-app在App端和flutter、react native的比较&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;﻿&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/leonardomso/33&quot;&gt;&amp;lt;img src=“https://i.imgur.com/dsHmk6H.jpg” alt=“33 Concepts Every JS Developer Should Know” width=200”&amp;gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; 33 Concepts Every JavaScript Developer Should Know &lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/leonardomso&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/leonardomso.svg?style=for-the-badge&quot; alt=&quot;Follow me&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by &lt;a href=&quot;https://twitter.com/stephenthecurt&quot;&gt;Stephen Curtis&lt;/a&gt; and you can read it &lt;a href=&quot;https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href=&quot;https://blog.github.com/2018-12-13-new-open-source-projects/&quot;&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eldrinf/33-js-concepts-albanian.git&quot;&gt;Albanian&lt;/a&gt; — Eldrin Ereqi&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amrsekilly/33-js-concepts&quot;&gt;Arabic&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephentian/33-js-concepts&quot;&gt;Chinese&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tiagoboeing/33-js-concepts&quot;&gt;Portuguese-BR&lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yjs03057/33-js-concepts.git&quot;&gt;Korean&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adonismendozaperez/33-js-conceptos&quot;&gt;Spanish&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilker0/33-js-concepts&quot;&gt;Turkish&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gumennii/33-js-concepts&quot;&gt;Russian&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyentranchung/33-js-concepts&quot;&gt;Tiếng Việt&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lip3k/33-js-concepts&quot;&gt;Polish&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majidalavizadeh/33-js-concepts&quot;&gt;Persian&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rijdz/33-js-concepts&quot;&gt;Indonesian&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robinmetral/33-concepts-js&quot;&gt;French&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vikaschauhan/33-js-concepts&quot;&gt;Hindi&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimitrisZx/33-js-concepts&quot;&gt;Greek&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oimo23/33-js-concepts&quot;&gt;Japanese&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/burhannn/33-js-concepts&quot;&gt;German&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation&quot;&gt;Ukrainian&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ududsha/33-js-concepts&quot;&gt;Sinhala&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Donearm/33-js-concepts&quot;&gt;Italian&lt;/a&gt; — Gianluca Fiore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack&quot;&gt;Call Stack&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types&quot;&gt;Primitive Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types&quot;&gt;Value Types and Reference Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing&quot;&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof&quot;&gt;== vs === vs typeof&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope&quot;&gt;Function Scope, Block Scope and Lexical Scope&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement&quot;&gt;Expression vs Statement&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces&quot;&gt;IIFE, Modules and Namespaces&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop&quot;&gt;Message Queue and Event Loop&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe&quot;&gt;setTimeout, setInterval and requestAnimationFrame&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines&quot;&gt;JavaScript Engines&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers&quot;&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees&quot;&gt;DOM and Layout Trees&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes&quot;&gt;Factories and Classes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind&quot;&gt;this, call, apply and bind&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances&quot;&gt;new, Constructor, instanceof and Instances&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain&quot;&gt;Prototype Inheritance and Prototype Chain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign&quot;&gt;Object.create and Object.assign&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter&quot;&gt;map, reduce, filter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-and-state-mutation&quot;&gt;Pure Functions, Side Effects and State Mutation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures&quot;&gt;Closures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions&quot;&gt;High Order Functions&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion&quot;&gt;Recursion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators&quot;&gt;Collections and Generators&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises&quot;&gt;Promises&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait&quot;&gt;async/await&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures&quot;&gt;Data Structures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation&quot;&gt;Expensive Operation and Big O Notation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms&quot;&gt;Algorithms&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse&quot;&gt;Inheritance, Polymorphism and Code Reuse&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns&quot;&gt;Design Patterns&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe&quot;&gt;Partial Applications, Currying, Compose and Pipe&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code&quot;&gt;Clean Code&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Call_stack&quot;&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec&quot;&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4&quot;&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://web.archive.org/web/20180701233338/https://www.valentinog.com/blog/js-execution-context-call-stack/&quot;&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0&quot;&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0&quot;&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf&quot;&gt;How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o&quot;&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w6QGEiQceOM&quot;&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=W8AeMrVtFLY&quot;&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jT0USJeNFEA&quot;&gt;JavaScript Execution Stack — Codecademy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w7QWQlkLY_s&quot;&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Q2sFmqvpBe0&quot;&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD&quot;&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Nt-qa_LlUH0&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ygA5U7Wgsg8&quot;&gt;La PILA DE EJECUCIÓN (Call Stack) de JavaScript — La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&quot;&gt;How JavaScript Code is executed? ❤️&amp;amp; Call Stack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2012/04/number-encoding.html&quot;&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascripts-number-type-8d59199db1b6&quot;&gt;What You Need to Know About JavaScript Number Type — Max Wizard K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/&quot;&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/&quot;&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flow.org/en/docs/types/primitives/&quot;&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d4nyll/not-everything-in-javascript-is-an-object&quot;&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12&quot;&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c&quot;&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9ooYYRLdg_g&quot;&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HsbWQsSCE5Y&quot;&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-_mDyqm2oU&quot;&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qw3j0A3DIzQ&quot;&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=MqHDDtVYJRI&quot;&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=B4Bbmei_thw&quot;&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cC65D2q5f8I&quot;&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0&quot;&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c&quot;&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851&quot;&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18&quot;&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293&quot;&gt;Grasp “By Value” and “By Reference” in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0&quot;&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/&quot;&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value&quot;&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f&quot;&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=E-dAnFdq8k8&quot;&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fD0t_DKREbE&quot;&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AvkyOrWkuQc&quot;&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23&quot;&gt;What you need to know about Javascript’s Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839&quot;&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-coercion-explained-545c895213d3&quot;&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript&quot;&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thedevs.network/blog/type-coercion-in-javascript-and-why-everyone-gets-it-wrong&quot;&gt;Type Coercion in JavaScript, and why everyone gets it wrong.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t&quot;&gt;== ? === ??? …#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=b04Q_vyqEG8&quot;&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=z4-8wMSPJyI&quot;&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=C5fr0LZLMAs&quot;&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ei4nb49GKo&quot;&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed&quot;&gt;You Don’t Know JS, 1st Edition: Types &amp;amp; Grammar — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a&quot;&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bytearcher.com/articles/equality-comparison-operator-javascript/&quot;&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/javascript/tutorial/double-equals-and-coercion-in-javascript&quot;&gt;== vs === JavaScript: Double Equals and Coercion — AJ Meyghani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.impressivewebs.com/why-use-triple-equals-javascipt/&quot;&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript&quot;&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object&quot;&gt;Why javascript’s typeof always return “object”? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://tobyho.com/2011/01/28/checking-types-in-javascript/&quot;&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://webbjocke.com/javascript-check-data-types/&quot;&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html&quot;&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ol_su88I3kw&quot;&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qPYhTPt_SbQ&quot;&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures&quot;&gt;You Don’t Know JS Yet, 2nd Edition: Scope &amp;amp; Closures — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99&quot;&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/&quot;&gt;The battle between Function Scope and Block Scope — Marius Herring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html&quot;&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe&quot;&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://edgecoders.com/function-scopes-and-block-scopes-in-javascript-25bbd7f293d7&quot;&gt;Function Scopes and Block Scopes in JavaScript — Samer Buna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://ryanmorr.com/understanding-scope-and-context-in-javascript/&quot;&gt;Understanding Scope and Context in JavaScript | Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/javascript-scope-closures/&quot;&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/&quot;&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://speakingjs.com/es5/ch16.html&quot;&gt;Speaking JavaScript - Variables: Scopes, Environments, and Closures — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-scope-in-javascript&quot;&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0&quot;&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai&quot;&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and “this” ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SBwoFkRjZvE&quot;&gt;What Makes Javascript Weird … and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dhp57T3p760&quot;&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aK_nuUAdr8E&quot;&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhNA0r10MmA&quot;&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2&quot;&gt;All you need to know about Javascript’s Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/function-expressions-vs-declarations/&quot;&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38&quot;&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052&quot;&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/&quot;&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=WVyCrI1cHi8&quot;&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3jDpNGJkupA&quot;&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6&quot;&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hashnode.com/post/do-es6-modules-make-the-case-of-iifes-obsolete-civ96wet80scqgc538un20es0&quot;&gt;Do ES6 Modules make the case of IIFEs obsolete?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/&quot;&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive — Lin Clark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/understanding-es6-modules/&quot;&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/&quot;&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-modules-in-depth&quot;&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b&quot;&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc&quot;&gt;JavaScript Modules: A Beginner’s Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot;&gt;Using JavaScript modules on the web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5&quot;&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3cbiZV4H22c&quot;&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=I5EntfMeIIQ&quot;&gt;Understanding JavaScript IIFE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=_3oSWwapPKQ&quot;&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aQr2bV1BPyE&quot;&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fIP4pjAqCtQ&quot;&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5P04OK6KlXA&quot;&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4&quot;&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot;&gt;The JavaScript Event Loop: Explained — Erin Sweson-Healey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40&quot;&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zeolearn.com/magazine/understanding-the-javascript-event-loop&quot;&gt;Understanding the JavaScript Event Loop — Ashish Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/what-the-heck-is-event-loop-1e414fccef49&quot;&gt;Event Loop in Javascript — Manjula Dube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-event-loop/&quot;&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&quot;&gt;How JavaScript works: Event loop — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8&quot;&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif&quot;&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XzXIMZMN9k4&quot;&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6MXRNXXgP_0&quot;&gt;I’m stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cCOL7MC4Pl0&quot;&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Eqq2Rb7LzYE&quot;&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/settimeout-setinterval&quot;&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9&quot;&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://develoger.com/settimeout-vs-setinterval-cff85142555b&quot;&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/using-requestanimationframe/&quot;&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascriptkit.com/javatutors/requestanimationframe.shtml&quot;&gt;Understanding JavaScript’s requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/&quot;&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6bPKyl8WYWI&quot;&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=TbCgGWe8LN8&quot;&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0VVJSvlUgtg&quot;&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mVKfrWCOB60&quot;&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.softwaremag.com/javascript-engines/&quot;&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964&quot;&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&quot;&gt;Understanding V8’s Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.mediacurrent.com/blog/brief-history-googles-v8-javascript-engine/&quot;&gt;A Brief History of Google’s V8 Javascript Engine — Clair Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553&quot;&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/shapes-ics&quot;&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://v8.dev/blog/elements-kinds&quot;&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5nmpokoRaZI&quot;&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4&quot;&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5&quot;&gt;Using JavaScript’s Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.w3resource.com/javascript/operators/bitwise-operator.php&quot;&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3&quot;&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04&quot;&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript&quot;&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mesu75PTDC8&quot;&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/14_dom.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/introduction-to-the-dom&quot;&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d&quot;&gt;What’s the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html&quot;&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/dom/&quot;&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://zellwk.com/blog/dom-traversals/&quot;&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/dom-nodes&quot;&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e&quot;&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot;&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bitsofco.de/what-exactly-is-the-dom/&quot;&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bouhm/a-vanilla-js-guide-on-mastering-the-dom-3l9b&quot;&gt;A Vanilla JS Guide On Mastering the DOM — Brian Pak&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FIORjGvT0kk&quot;&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ik6X4DJKCc&quot;&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript&quot;&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677&quot;&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.javascriptjanuary.com/blog/es6-classes&quot;&gt;ES6 Classes — Nathaniel Foster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes&quot;&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd&quot;&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://atendesigngroup.com/blog/factory-functions-javascript&quot;&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9&quot;&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15&quot;&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a&quot;&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jordankasper.com/understanding-super-in-javascript&quot;&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm&quot;&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jpegXpQpb3o&quot;&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ImwrezYhw4w&quot;&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=R7-IwpH80UE&quot;&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b&quot;&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/niladrisekhardutta/how-to-call-apply-and-bind-in-javascript-8i1jca6jp&quot;&gt;How-to: call() , apply() and bind() in JavaScript — Niladri Sekhar Dutta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/&quot;&gt;JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/this-keyword-call-apply-bind-javascript/&quot;&gt;WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb&quot;&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b&quot;&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce&quot;&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/&quot;&gt;Mastering ‘this’ in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo&quot;&gt;JavaScript’s apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb&quot;&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.hacksparrow.com/javascript-bind-vs-apply-and-call.html&quot;&gt;JavaScript .bind() vs .apply() and .call() — Hack Sparrow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja&quot;&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8&quot;&gt;Understanding the “this” Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8&quot;&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1&quot;&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam&quot;&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf&quot;&gt;3 Techniques for Maintaining Your Sanity Using “This” in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa&quot;&gt;Mastering the JavaScript “this” Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n&quot;&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp&quot;&gt;A quick intro to ‘this’ in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/cat__logic/explaining-javascript-this-to-my-cat-1kig&quot;&gt;Explaining JavaScript ‘this’ to my cat — Andrey K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g&quot;&gt;A conversation with the ‘this’ keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jscurious.com/what-are-call-apply-and-bind-in-javascript/&quot;&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d&quot;&gt;Understanding ‘this’ binding in JavaScript — Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=c0mLRpw-9rI&quot;&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AYVYxezrMWA&quot;&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uy0NOXLBraE&quot;&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AOSYY1_np_4&quot;&gt;Understanding Functions and ‘this’ In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhbhD1HR5vk&quot;&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uBdH0iB1VDM&quot;&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e&quot;&gt;JavaScript For Beginners: the ‘new’ operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c&quot;&gt;Let’s demystify JavaScript’s ‘new’ keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/constructor-new&quot;&gt;Constructor, operator “new” — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/understanding-javascript-constructors/&quot;&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions&quot;&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2017/08/type-right.html&quot;&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appendto.com/2016/10/what-is-the-instanceof-operator-in-javascript/&quot;&gt;What Is the Instanceof Operator in JavaScript — appendTo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac&quot;&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b&quot;&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-prototype-cb29d82b8809&quot;&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/sandeepranjan2007/prototype-in-javascipt-knbve0lqo&quot;&gt;Prototype in Javascript — Sandeep Ranjan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/prototypes-in-javascript-5bba2990e04b&quot;&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872&quot;&gt;Prototype in JavaScript: it’s quirky, but here’s how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2&quot;&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d&quot;&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl&quot;&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/prototype-inheritance&quot;&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript&quot;&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e&quot;&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4&quot;&gt;JavaScript’s Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/derhuerst/a585c4916b1c361cc6f0&quot;&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&quot;&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/danny/intro-to-prototypal-inheritance---js-9di&quot;&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm&quot;&gt;Let’s Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b&quot;&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg&quot;&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4&quot;&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie&quot;&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=sOrtAjyk4lQ&quot;&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7oNWNlMrkpc&quot;&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uIlj6_z_wL8&quot;&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qMO-LTOrJaE&quot;&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=G6l5CHl67HQ&quot;&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=phwzuiJJPpQ&quot;&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4jb4AYEyhRc&quot;&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2rkEbcptR64&quot;&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oCwCcNvaXAQ&quot;&gt;JavaScript Using Prototypes — O’Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XskMWBXNbp0&quot;&gt;A Beginner’s Guide to Javascript’s Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hS_WqkyUah8&quot;&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed&quot;&gt;You Don’t Know JS, 1st Edition: this &amp;amp; Object Prototypes — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2&quot;&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html&quot;&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html&quot;&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.geeksforgeeks.org/object-create-javascript/&quot;&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358&quot;&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/&quot;&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/dealing-with-objects/&quot;&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/copying-objects-in-javascript&quot;&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-object-assign-bc9696dcbb6e&quot;&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/how-to-clone-javascript-object/&quot;&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/vzing/object-create-when-and-why-to-use-20m9&quot;&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aw7NfYhR5rc&quot;&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9Ky4X6inpi4&quot;&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d&quot;&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4&quot;&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter&quot;&gt;JavaScript’s Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209&quot;&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4&quot;&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf&quot;&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464&quot;&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f&quot;&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/functional-javascript-map-filter-reduce/&quot;&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/&quot;&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc&quot;&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26&quot;&gt;When (and why) you should use ES6 arrow functions — and when you shouldn’t — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946&quot;&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83&quot;&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@panderson.dev/javascript-reduce-79aab078da23&quot;&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gofore.com/en/why-you-should-replace-foreach/&quot;&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d&quot;&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/&quot;&gt;JavaScript’s Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160&quot;&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/map-filter-reduce-ebbed4be4201&quot;&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6&quot;&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26&quot;&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/&quot;&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f&quot;&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/pickleat/map-filter-and-reduce-2efb&quot;&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan&quot;&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47&quot;&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209&quot;&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24&quot;&gt;How to Use JavaScript’s .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://towardsdatascience.com/javascript-performance-test-for-vs-for-each-vs-map-reduce-filter-find-32c1113f19d7&quot;&gt;Javascript performance test - for vs for each vs (map, reduce, filter, find) — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2&quot;&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj&quot;&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=UXiYii0Y7Nw&quot;&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vytzLlY_wmU&quot;&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qTeeVd8hOFY&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=gIm9xLYudL0&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zYBeEPxNSbw&quot;&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4qWlqD0yYTU&quot;&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6sQDTgOqh-I&quot;&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s&quot;&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s&quot;&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl98eZpkp-c&quot;&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s&quot;&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=IXp06KekEjM&quot;&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=P4RAFdZDn3M&quot;&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c&quot;&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot;&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c&quot;&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/functional-programming-pure-functions/&quot;&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appdividend.com/2017/04/10/pure-functions-in-javascript/&quot;&gt;Pure Functions In Javascript — Krunal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alistapart.com/article/making-your-javascript-pure&quot;&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa&quot;&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310&quot;&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/&quot;&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/preventing-sideeffects-javascript&quot;&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/wielding-pure-functions-in-javascript-and-function-composition&quot;&gt;Wielding Pure Functions in JavaScript and Function Composition — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/javascript-pure-functions/&quot;&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1&quot;&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3&quot;&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08&quot;&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events&quot;&gt;Event Propagation — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/bubbling-and-capturing&quot;&gt;Event Propagation — Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dZ41D6LDSBg&quot;&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Jh_Uzqzz_wM&quot;&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=frT3H-eBmPc&quot;&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AHbRVJzpB54&quot;&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=JYc7gr9Ehl0&quot;&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/closure&quot;&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8&quot;&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/understand-javascript-closures-with-ease/&quot;&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-javascript-closures-da6aab330302&quot;&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understand-closures-in-javascript-d07852fa51e7&quot;&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4&quot;&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach&quot;&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b&quot;&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b&quot;&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example&quot;&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-closures-and-scope-3784c75b9290&quot;&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7&quot;&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/simplified-javascript-getting-started-with-closures-f40f65317d00&quot;&gt;Simplified JavaScript: Getting Started with Closures — Code Like A Girl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://reallifejs.com/the-meat/getting-closure/&quot;&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9&quot;&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda&quot;&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e&quot;&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/closures-using-memoization-3597&quot;&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232&quot;&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/stereobooster/demystify-closures-5g42&quot;&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj&quot;&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d&quot;&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://whatthefuck.is/closure&quot;&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/brandonleboeuf/closure-in-javascript-49n7&quot;&gt;Closures in JavaScript can… - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XTAzsODSCsM&quot;&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=71AtaJpJHw0&quot;&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=CQqwU2Ixu-U&quot;&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-xqJo5VRP4A&quot;&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yiEeiMN2Khs&quot;&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1JsJx1x35c0&quot;&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-rLrGAXK8WE&quot;&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/05_higher_order.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/higher-order-functions-javascript/&quot;&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528&quot;&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a&quot;&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.lullabot.com/articles/higher-order-functions-in-javascript&quot;&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/tag/higher-order-functions/&quot;&gt;Higher-order Functions — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://derickbailey.com/2015/10/21/fun-with-higher-order-functions-in-javascript/&quot;&gt;Fun With Higher Order Functions In JavaScript — Derick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/pedroapfilho/high-order-functions&quot;&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad&quot;&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb&quot;&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=rRgD1yVwIvE&quot;&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dTlpYnmBW9I&quot;&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GYRMNp1SKXA&quot;&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H4awPsyugS0&quot;&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7E8ctomPQJw&quot;&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=28MXziDZkE4&quot;&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HkWxvB1RJq0&quot;&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f&quot;&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03&quot;&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea&quot;&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/recursion-functional-javascript/&quot;&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-recursion-31371e2bf808&quot;&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/simov/anonymous-recursion-in-javascript&quot;&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/&quot;&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.thecodingdelight.com/understanding-recursion-javascript/&quot;&gt;Understanding Recursion in JavaScript with Confidence — Jay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b&quot;&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datadriveninvestor/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3&quot;&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m&quot;&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VtG0WAUvq2w&quot;&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=k7-N8R0-KY4&quot;&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vLhHyGTkjCs&quot;&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=kGXVsd8pBLw&quot;&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uyjsR9eNTIw&quot;&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mv9NEXX1VHc&quot;&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9NO5dXSlbv8&quot;&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FmiQr4nfoPQ&quot;&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&quot;&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-collections/&quot;&gt;ES6 In Depth: Collections — Jason Orendorff&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/&quot;&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth&quot;&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/sets-introduction/&quot;&gt;Introduction to Sets in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/maps-introduction/&quot;&gt;Introduction to Maps in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/map-set-weakmap-weakset&quot;&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk&quot;&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a&quot;&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373&quot;&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/es6-working-with-sets-in-javascript/&quot;&gt;ES6: Working with Sets in JavaScript — Dead Code Rising&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b&quot;&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6&quot;&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e&quot;&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-maps-in-depth&quot;&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e&quot;&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5&quot;&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/es6-generators&quot;&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224&quot;&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ycohYSx5h9w&quot;&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=m4abICrldQI&quot;&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO07THdLWQo&quot;&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/javascript-promises-for-dummies&quot;&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1&quot;&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261&quot;&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/overview-javascript-promises/&quot;&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de&quot;&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51&quot;&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138&quot;&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_promises.html&quot;&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/&quot;&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918&quot;&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a&quot;&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/the-es6-promises-87a979ab27e4&quot;&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3&quot;&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8&quot;&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c&quot;&gt;A Coding Writer’s Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/itnext/reverse-engineering-understand-promises-1jfc&quot;&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zellwk/converting-callbacks-to-promises-nhn&quot;&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa&quot;&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/promises-javascript-concepts-293c&quot;&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/iggredible/javascript-promise-101-3idl&quot;&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sunnysingh/simplify-javascript-promises-4djb&quot;&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-low-down-on-promises-af4a96bbb95f&quot;&gt;The Lowdown on Promises — Aphinya Dechalert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/peterklingelhofer/promises-in-javascript-3h5k&quot;&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/somedood/best-practices-for-es6-promises-36da&quot;&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vQ3MoXnKfuQ&quot;&gt;Let’s Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XJEHuBZQ5dU&quot;&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2d7s3spWAzo&quot;&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=f8IgdnYIwOU&quot;&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO4NXhWo_NM&quot;&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/11_async.html&quot;&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_async.html&quot;&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c&quot;&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/async-functions/&quot;&gt;Exploring Async/Await Functions in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/asynchronous-javascript-using-async-await&quot;&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-async-await/&quot;&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.toptal.com/javascript/asynchronous-javascript-async-await-tutorial&quot;&gt;Asynchronous JavaScript: From Callback Hell to Async and Await — Demir Selmanovic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a&quot;&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c&quot;&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;Understanding JavaScript’s async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://techbrij.com/javascript-async-await-parallel-sequence&quot;&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.pusher.com/promises-async-await/&quot;&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/flow-control-callbacks-promises-async-await/&quot;&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dzone.com/articles/javascript-promises-and-why-asyncawait-wins-the-ba&quot;&gt;JavaScript: Promises and Why Async/Await Wins the Battle — Nick Parsons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda&quot;&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6&quot;&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9&quot;&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b&quot;&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/joeyhub/async-await-a-slight-design-flaw-2h2j&quot;&gt;Async/await: A slight design flaw. — Joey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789&quot;&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22&quot;&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9YkUCxvaLEk&quot;&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SrNQS8J67zc&quot;&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6&quot;&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=krAYA4rvbdA&quot;&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c&quot;&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays&quot;&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot;&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d&quot;&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9&quot;&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/barretlee/algorithms&quot;&gt;All algorithms writing with JavaScript in the book ‘Algorithms Fourth Edition’&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/nzakas/computer-science-in-javascript&quot;&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/jamiebuilds/itsy-bitsy-data-structures&quot;&gt;All the things you didn’t know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/miku86/series/3259&quot;&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5&quot;&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61&quot;&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60&quot;&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn&quot;&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa&quot;&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ&quot;&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Ymh_AurrMbA&quot;&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b&quot;&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b&quot;&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051&quot;&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html&quot;&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jenniferbland.com/time-complexity-analysis-in-javascript/&quot;&gt;Time Complexity Analysis in JavaScript — Jennifer Bland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c&quot;&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o&quot;&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HgA5VOFan5E&quot;&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=KatlvCFHPRo&quot;&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ALl86xJiTD8&quot;&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/Crizstian/data-structure-and-algorithms-with-ES6&quot;&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms&quot;&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.thatjsdude.com/interview/js1.html&quot;&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038&quot;&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158&quot;&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/felipernb/algorithms.js&quot;&gt;Atwood’s Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/idosela/algorithms-in-javascript&quot;&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance&quot;&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/class-inheritance&quot;&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f&quot;&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/simple-inheritance-javascript/&quot;&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-inheritance-25fe61ab9f85&quot;&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/&quot;&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/yld-engineering-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2&quot;&gt;Program Like Proteus — A beginner’s guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/&quot;&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yXlFR81tDBM&quot;&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RBLIm5LMrmc&quot;&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zdovG9cuEBA&quot;&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://addyosmani.com/resources/essentialjsdesignpatterns/book/&quot;&gt;Learning JavaScript Design Patterns — Addy Osmani &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know&quot;&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15&quot;&gt;JavaScript Design Patterns – Beginner’s Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81&quot;&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://seesparkbox.com/foundry/javascript_design_patterns&quot;&gt;Javascript Design Patterns: What They Are &amp;amp; How To Use Them — Patrick Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd&quot;&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/fbeline/Design-Patterns-JS&quot;&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8&quot;&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e&quot;&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39&quot;&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca&quot;&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd&quot;&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p&quot;&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd&quot;&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/design-patterns-null-object-5ee839e37892&quot;&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/strategy-pattern-5oh&quot;&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/adapter-pattern-5bjk&quot;&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732&quot;&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bytebodger/in-defense-of-defensive-programming-k45&quot;&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.udacity.com/course/javascript-design-patterns--ud989&quot;&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hO7mzO83N1Q&quot;&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md&quot;&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/michelre/use-function-composition-in-javascript-gkmxos5mj&quot;&gt;Use function composition in JavaScript — Rémi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.benestudio.co/currying-in-javascript-es6-540d2ad09400&quot;&gt;Currying in JavaScript ES6 — Adam Bene&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b&quot;&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10&quot;&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f&quot;&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://busypeoples.github.io/post/functional-composing-javascript/&quot;&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/&quot;&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/&quot;&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://vanslaars.io/post/create-pipe-function/&quot;&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/featured/practical-functional-javascript-ramda/&quot;&gt;Practical Functional JavaScript with Ramda — Andrew D’Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574&quot;&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8&quot;&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://benalman.com/news/2012/09/partial-application-in-javascript/&quot;&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/partial-application-of-functions-dbe7d9b80760&quot;&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8&quot;&gt;Currying vs Partial Application — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://raganwald.com/2015/04/01/partial-application.html&quot;&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://joecortopassi.com/articles/functional-composition-in-javascript/&quot;&gt;Functional Composition in Javascript — Joe Cortopassi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536&quot;&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a&quot;&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7&quot;&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49&quot;&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a&quot;&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84&quot;&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa&quot;&gt;Concepts of Functional Programming in Javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064&quot;&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71&quot;&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj&quot;&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl2ejJOqHUU&quot;&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jigHxo9YR30&quot;&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mth5WpEc4Qs&quot;&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uam37AlzPYw&quot;&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VGB9HbL1GHk&quot;&gt;Let’s code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=DzLkRsUN2vE&quot;&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jkebgHEcvac&quot;&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/&quot;&gt;JavaScript Clean Coding Best Practices — András Tóth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b&quot;&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/keeping-your-code-clean-d30bcffd1a10&quot;&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/modern-javascript-best-practices/&quot;&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/cross-js/cross-js&quot;&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ganderzz/on-writing-clean-code-57cm&quot;&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k&quot;&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm&quot;&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4&quot;&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mus_vwhTCq0&quot;&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RR_dQ4sBSBM&quot;&gt;Clean Code: Functions(Part 1) - Beau teaches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>markedjs/marked</title>
      <link>https://github.com/markedjs/marked</link>
      <description>&lt;p&gt;A markdown parser and compiler. Built for speed.&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://marked.js.org&quot;&gt; &lt;img width=&quot;60px&quot; height=&quot;60px&quot; src=&quot;https://marked.js.org/img/logo-black.svg?sanitize=true&quot; align=&quot;right&quot;&gt; &lt;/a&gt; 
&lt;h1&gt;Marked&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/marked&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/marked&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cdn.jsdelivr.net/npm/marked/marked.min.js&quot;&gt;&lt;img src=&quot;https://badgen.net/badgesize/gzip/https://cdn.jsdelivr.net/npm/marked/marked.min.js&quot; alt=&quot;gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagephobia.now.sh/result?p=marked&quot;&gt;&lt;img src=&quot;https://badgen.net/packagephobia/install/marked&quot; alt=&quot;install size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/marked&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dt/marked&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/markedjs/marked/actions&quot;&gt;&lt;img src=&quot;https://github.com/markedjs/marked/workflows/Tests/badge.svg?sanitize=true&quot; alt=&quot;github actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/npm/marked&quot;&gt;&lt;img src=&quot;https://snyk.io/test/npm/marked/badge.svg?sanitize=true&quot; alt=&quot;snyk&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ built for speed&lt;/li&gt; 
 &lt;li&gt;⬇️ low-level compiler for parsing markdown without caching or blocking for long periods of time&lt;/li&gt; 
 &lt;li&gt;⚖️ light-weight while implementing all markdown features from the supported flavors &amp;amp; specifications&lt;/li&gt; 
 &lt;li&gt;🌐 works in a browser, on a server, or from a command line interface (CLI)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Checkout the &lt;a href=&quot;https://marked.js.org/demo/&quot;&gt;demo page&lt;/a&gt; to see marked in action ⛹️&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://marked.js.org&quot;&gt;documentation pages&lt;/a&gt; are also rendered using marked 💯&lt;/p&gt; 
&lt;p&gt;Also read about:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marked.js.org/#/USING_ADVANCED.md&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marked.js.org/#/USING_PRO.md&quot;&gt;Extensibility&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;CLI:&lt;/strong&gt; &lt;code&gt;npm install -g marked&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;In-browser:&lt;/strong&gt; &lt;code&gt;npm install marked&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Warning: 🚨 Marked does not &lt;a href=&quot;https://marked.js.org/#/USING_ADVANCED.md#options&quot;&gt;sanitize&lt;/a&gt; the output HTML. Please use a sanitize library, like &lt;a href=&quot;https://github.com/cure53/DOMPurify&quot;&gt;DOMPurify&lt;/a&gt; (recommended), &lt;a href=&quot;https://github.com/apostrophecms/sanitize-html&quot;&gt;sanitize-html&lt;/a&gt; or &lt;a href=&quot;https://github.com/bevacqua/insane&quot;&gt;insane&lt;/a&gt; on the output HTML! 🚨&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;CLI&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ marked -o hello.html
hello world
^D
$ cat hello.html
&amp;lt;p&amp;gt;hello world&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&quot;utf-8&quot;/&amp;gt;
  &amp;lt;title&amp;gt;Marked in the browser&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div id=&quot;content&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/marked/marked.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script&amp;gt;
    document.getElementById(&#39;content&#39;).innerHTML =
      marked(&#39;# Marked in the browser\n\nRendered by **marked**.&#39;);
  &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2011-2018, Christopher Jeffrey. (MIT License)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/zt-rnuegz5e-FQpc6YboDVW%7E5idlp7GfDw&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/vy29n6aj/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don’t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ChainSafe/web3.js</title>
      <link>https://github.com/ChainSafe/web3.js</link>
      <description>&lt;p&gt;Ethereum JavaScript API&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg&quot; width=&quot;200&quot; alt=&quot;web3.js&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;web3.js - Ethereum JavaScript API&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/ethereum/web3.js&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ethereum.stackexchange.com/questions/tagged/web3js&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/web3js-stackexchange-brightgreen&quot; alt=&quot;StackExchange&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/web3&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/web3.svg?sanitize=true&quot; alt=&quot;NPM Package Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/web3&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/web3.svg?sanitize=true&quot; alt=&quot;NPM Package Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ethereum/web3.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/ethereum/web3.js/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/ethereum/web3.js/1.x?type=dev&quot;&gt;&lt;img src=&quot;https://david-dm.org/ethereum/web3.js/1.x/dev-status.svg?sanitize=true&quot; alt=&quot;Dev Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/ethereum/web3.js?branch=1.x&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/ethereum/web3.js/badge.svg?branch=1.x&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;Lerna&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.netlify.com/sites/web3-staging/deploys&quot;&gt;&lt;img src=&quot;https://api.netlify.com/api/v1/badges/1fc64933-d170-4939-8bdb-508ecd205519/deploy-status&quot; alt=&quot;Netlify Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is the Ethereum &lt;a href=&quot;http://web3js.readthedocs.io/&quot;&gt;JavaScript API&lt;/a&gt; which connects to the &lt;a href=&quot;https://github.com/ethereum/wiki/wiki/JSON-RPC&quot;&gt;Generic JSON-RPC&lt;/a&gt; spec.&lt;/p&gt; 
&lt;p&gt;You need to run a local or remote &lt;a href=&quot;https://www.ethereum.org/&quot;&gt;Ethereum&lt;/a&gt; node to use this library.&lt;/p&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;http://web3js.readthedocs.io/&quot;&gt;documentation&lt;/a&gt; for more.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Node&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install web3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add web3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;In the Browser&lt;/h3&gt; 
&lt;p&gt;Use the prebuilt &lt;code&gt;dist/web3.min.js&lt;/code&gt;, or build using the &lt;a href=&quot;https://github.com/ethereum/web3.js&quot;&gt;web3.js&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then include &lt;code&gt;dist/web3.min.js&lt;/code&gt; in your html file. This will expose &lt;code&gt;Web3&lt;/code&gt; on the window object.&lt;/p&gt; 
&lt;p&gt;Or via jsDelivr CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UNPKG:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/web3@latest/dist/web3.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// In Node.js
const Web3 = require(&#39;web3&#39;);

let web3 = new Web3(&#39;ws://localhost:8546&#39;);
console.log(web3);
&amp;gt; {
    eth: ... ,
    shh: ... ,
    utils: ...,
    ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally you can set a provider using &lt;code&gt;web3.setProvider()&lt;/code&gt; (e.g. WebsocketProvider):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;web3.setProvider(&#39;ws://localhost:8546&#39;);
// or
web3.setProvider(new Web3.providers.WebsocketProvider(&#39;ws://localhost:8546&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There you go, now you can use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;web3.eth.getAccounts().then(console.log);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage with TypeScript&lt;/h3&gt; 
&lt;p&gt;We support types within the repo itself. Please open an issue here if you find any wrong types.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;web3.js&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;import Web3 from &#39;web3&#39;;
const web3 = new Web3(&#39;ws://localhost:8546&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using the types in a &lt;code&gt;commonjs&lt;/code&gt; module, like in a Node app, you just have to enable &lt;code&gt;esModuleInterop&lt;/code&gt; and &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; in your &lt;code&gt;tsconfig&lt;/code&gt; for typesystem compatibility:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;compilerOptions&quot;: {
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;esModuleInterop&quot;: true,
    ....
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trouble shooting and known issues.&lt;/h2&gt; 
&lt;h3&gt;Web3 and Angular&lt;/h3&gt; 
&lt;p&gt;If you are using Ionic/Angular at a version &amp;gt;5 you may run into a build error in which modules &lt;code&gt;crypto&lt;/code&gt; and &lt;code&gt;stream&lt;/code&gt; are &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;a work around for this is to go into your node-modules and at &lt;code&gt;/angular-cli-files/models/webpack-configs/browser.js&lt;/code&gt; change the &lt;code&gt;node: false&lt;/code&gt; to &lt;code&gt;node: {crypto: true, stream: true}&lt;/code&gt; as mentioned &lt;a href=&quot;https://github.com/ethereum/web3.js/issues/2260#issuecomment-458519127&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Another variation of this problem was an issue opned on angular-cli: https://github.com/angular/angular-cli/issues/1548&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation can be found at &lt;a href=&quot;http://web3js.readthedocs.io/&quot;&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building (webpack)&lt;/h3&gt; 
&lt;p&gt;Build the web3.js package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing (mocha)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/CONTRIBUTIONS.md&quot;&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/REVIEW.md&quot;&gt;Review Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project adheres to the &lt;a href=&quot;https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/REVIEW.md&quot;&gt;Release Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/ethereum/web3.js&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ethereum.stackexchange.com/questions/tagged/web3js&quot;&gt;StackExchange&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Similar libraries in other languages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Haskell: &lt;a href=&quot;https://github.com/airalab/hs-web3&quot;&gt;hs-web3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java: &lt;a href=&quot;https://github.com/web3j/web3j&quot;&gt;web3j&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;PHP: &lt;a href=&quot;https://github.com/sc0Vu/web3.php&quot;&gt;web3.php&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Purescript: &lt;a href=&quot;https://github.com/f-o-a-m/purescript-web3&quot;&gt;purescript-web3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Python: &lt;a href=&quot;https://github.com/ethereum/web3.py&quot;&gt;Web3.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/EthWorks/ethereum.rb&quot;&gt;ethereum.rb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scala: &lt;a href=&quot;https://github.com/mslinn/web3j-scala&quot;&gt;web3j-scala&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This project follows &lt;a href=&quot;https://semver.org/&quot;&gt;semver&lt;/a&gt; as closely as possible &lt;strong&gt;from version 1.3.0 onwards&lt;/strong&gt;. Earlier minor version bumps &lt;a href=&quot;https://github.com/ethereum/web3.js/issues/3758&quot;&gt;might&lt;/a&gt; have included breaking behavior changes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>semantic-release/semantic-release</title>
      <link>https://github.com/semantic-release/semantic-release</link>
      <description>&lt;p&gt;📦🚀 Fully automated version management and package publishing&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot; style=&quot;border-bottom: none;&quot;&gt;📦🚀 semantic-release&lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt;Fully automated version management and package publishing&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/semantic-release/semantic-release/discussions&quot;&gt; &lt;img alt=&quot;Join the community on GitHub Discussions&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-on%20GitHub%20Discussions-blue&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/semantic-release/semantic-release/actions?query=workflow%3ATest+branch%3Amaster&quot;&gt; &lt;img alt=&quot;Build states&quot; src=&quot;https://github.com/semantic-release/semantic-release/workflows/Test/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/#badge&quot;&gt; &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm latest version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/latest.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm next version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/next.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm beta version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/beta.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; automates the whole package release workflow including: determining the next version number, generating the release notes and publishing the package.&lt;/p&gt; 
&lt;p&gt;This removes the immediate connection between human emotions and version numbers, strictly following the &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; specification.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trust us, this will change your workflow for the better. – &lt;a href=&quot;https://egghead.io/lessons/javascript-how-to-write-a-javascript-library-automating-releases-with-semantic-release&quot;&gt;egghead.io&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully automated release&lt;/li&gt; 
 &lt;li&gt;Enforce &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; specification&lt;/li&gt; 
 &lt;li&gt;New features and fixes are immediately available to users&lt;/li&gt; 
 &lt;li&gt;Notify maintainers and users of new releases&lt;/li&gt; 
 &lt;li&gt;Use formalized commit message convention to document changes in the codebase&lt;/li&gt; 
 &lt;li&gt;Publish on different distribution channels (such as &lt;a href=&quot;https://docs.npmjs.com/cli/dist-tag&quot;&gt;npm dist-tags&lt;/a&gt;) based on git merges&lt;/li&gt; 
 &lt;li&gt;Integrate with your &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md#ci-configurations&quot;&gt;continuous integration workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid potential errors associated with manual releases&lt;/li&gt; 
 &lt;li&gt;Support any &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md#package-managers-and-languages&quot;&gt;package managers and languages&lt;/a&gt; via &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/plugins.md&quot;&gt;plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Simple and reusable configuration via &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/shareable-configurations.md&quot;&gt;shareable configurations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;h3&gt;Commit message format&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; uses the commit messages to determine the type of changes in the codebase. Following formalized conventions for commit messages, &lt;strong&gt;semantic-release&lt;/strong&gt; automatically determines the next &lt;a href=&quot;https://semver.org&quot;&gt;semantic version&lt;/a&gt; number, generates a changelog and publishes the release.&lt;/p&gt; 
&lt;p&gt;By default &lt;strong&gt;semantic-release&lt;/strong&gt; uses &lt;a href=&quot;https://github.com/angular/angular/raw/master/CONTRIBUTING.md#-commit-message-format&quot;&gt;Angular Commit Message Conventions&lt;/a&gt;. The commit message format can be changed with the &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/configuration.md#options&quot;&gt;&lt;code&gt;preset&lt;/code&gt; or &lt;code&gt;config&lt;/code&gt; options&lt;/a&gt; of the &lt;a href=&quot;https://github.com/semantic-release/commit-analyzer#options&quot;&gt;@semantic-release/commit-analyzer&lt;/a&gt; and &lt;a href=&quot;https://github.com/semantic-release/release-notes-generator#options&quot;&gt;@semantic-release/release-notes-generator&lt;/a&gt; plugins.&lt;/p&gt; 
&lt;p&gt;Tools such as &lt;a href=&quot;https://github.com/commitizen/cz-cli&quot;&gt;commitizen&lt;/a&gt; or &lt;a href=&quot;https://github.com/conventional-changelog/commitlint&quot;&gt;commitlint&lt;/a&gt; can be used to help contributors and enforce valid commit messages.&lt;/p&gt; 
&lt;p&gt;The table below shows which commit message gets you which release type when &lt;code&gt;semantic-release&lt;/code&gt; runs (using the default configuration):&lt;/p&gt; 
&lt;p&gt;| Commit message | Release type | | ———————————————————————————————————————————————————————————————— | ––––––––––––– | | &lt;code&gt;fix(pencil): stop graphite breaking when too much pressure applied&lt;/code&gt; | Patch Release | | &lt;code&gt;feat(pencil): add &#39;graphiteWidth&#39; option&lt;/code&gt; | ~~Minor~~ Feature Release | | &lt;code&gt;perf(pencil): remove graphiteWidth option&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;BREAKING CHANGE: The graphiteWidth option has been removed.&lt;/code&gt;&lt;br&gt;&lt;code&gt;The default graphite width of 10mm is always used for performance reasons.&lt;/code&gt; | ~~Major~~ Breaking Release |&lt;/p&gt; 
&lt;h3&gt;Automation with CI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; is meant to be executed on the CI environment after every successful build on the release branch. This way no human is directly involved in the release process and the releases are guaranteed to be &lt;a href=&quot;http://sentimentalversioning.org&quot;&gt;unromantic and unsentimental&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triggering a release&lt;/h3&gt; 
&lt;p&gt;For each new commits added to one of the release branches (for example &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;), with &lt;code&gt;git push&lt;/code&gt; or by merging a pull request or merging from another branch, a CI build is triggered and runs the &lt;code&gt;semantic-release&lt;/code&gt; command to make a release if there are codebase changes since the last release that affect the package functionalities.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; offers various ways to control the timing, the content and the audience of published releases. See example workflows in the following recipes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/distribution-channels.md#publishing-on-distribution-channels&quot;&gt;Using distribution channels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/maintenance-releases.md#publishing-maintenance-releases&quot;&gt;Maintenance releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/pre-releases.md#publishing-pre-releases&quot;&gt;Pre-releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Release steps&lt;/h3&gt; 
&lt;p&gt;After running the tests, the command &lt;code&gt;semantic-release&lt;/code&gt; will execute the following steps:&lt;/p&gt; 
&lt;p&gt;| Step | Description | | —————– | —————————————————————————————————————————–– | | Verify Conditions | Verify all the conditions to proceed with the release. | | Get last release | Obtain the commit corresponding to the last release by analyzing &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Tagging&quot;&gt;Git tags&lt;/a&gt;. | | Analyze commits | Determine the type of release based on the commits added since the last release. | | Verify release | Verify the release conformity. | | Generate notes | Generate release notes for the commits added since the last release. | | Create Git tag | Create a Git tag corresponding to the new release version. | | Prepare | Prepare the release. | | Publish | Publish the release. | | Notify | Notify of new releases or errors. |&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;In order to use &lt;strong&gt;semantic-release&lt;/strong&gt; you need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To host your code in a &lt;a href=&quot;https://git-scm.com&quot;&gt;Git repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use a Continuous Integration service that allows you to &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/ci-configuration.md#authentication&quot;&gt;securely set up credentials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Git CLI version &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md#why-does-semantic-release-require-git-version--271&quot;&gt;2.7.1 or higher&lt;/a&gt; installed in your Continuous Integration environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md#why-does-semantic-release-require-node-version--1018&quot;&gt;10.18 or higher&lt;/a&gt; installed in your Continuous Integration environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usage 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/getting-started.md#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/installation.md#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/ci-configuration.md#ci-configuration&quot;&gt;CI Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/configuration.md#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/plugins.md&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/workflow-configuration.md&quot;&gt;Workflow configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/shareable-configurations.md&quot;&gt;Shareable configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Extending 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/extending/plugins-list.md&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/extending/shareable-configurations-list.md&quot;&gt;Shareable configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Recipes 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;CI configurations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Git hosted services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Release workflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Package managers and languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer guide 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/js-api.md&quot;&gt;JavaScript API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/plugin.md&quot;&gt;Plugins development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/shareable-configuration.md&quot;&gt;Shareable configuration development&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Support 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/resources.md&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/troubleshooting.md&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/node-version.md&quot;&gt;Node version requirement&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/node-support-policy.md&quot;&gt;Node Support Policy&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get help&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/semantic-release&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semantic-release/semantic-release/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/SemanticRelease&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Let people know that your package is published using &lt;strong&gt;semantic-release&lt;/strong&gt; by including this badge in your readme.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot; alt=&quot;semantic-release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/gr2m&quot;&gt;&lt;img src=&quot;https://github.com/gr2m.png?size=100&quot; alt=&quot;Gregor Martynus&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/pvdlg&quot;&gt;&lt;img src=&quot;https://github.com/pvdlg.png?size=100&quot; alt=&quot;Pierre Vanduynslager&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/travi&quot;&gt;&lt;img src=&quot;https://github.com/travi.png?size=100&quot; alt=&quot;Matt Travi&quot;&gt;&lt;/a&gt; | | ———————————————————————————– | —————————————————————————————— | –––––––––––––––––––––––––––––––––––––––– | | &lt;a href=&quot;https://github.com/gr2m&quot;&gt;Gregor Martynus&lt;/a&gt; | &lt;a href=&quot;https://github.com/pvdlg&quot;&gt;Pierre Vanduynslager&lt;/a&gt; | &lt;a href=&quot;https://github.com/travi&quot;&gt;Matt Travi&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Alumni&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/boennemann&quot;&gt;&lt;img src=&quot;https://github.com/boennemann.png?size=100&quot; alt=&quot;Stephan Bönnemann&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/relekang&quot;&gt;&lt;img src=&quot;https://github.com/relekang.png?size=100&quot; alt=&quot;Rolf Erik Lekang&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/jo&quot;&gt;&lt;img src=&quot;https://github.com/jo.png?size=100&quot; alt=&quot;Johannes Jörg Schmidt&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/finnp&quot;&gt;&lt;img src=&quot;https://github.com/finnp.png?size=100&quot; alt=&quot;Finn Pauls&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/christophwitzko&quot;&gt;&lt;img src=&quot;https://github.com/christophwitzko.png?size=100&quot; alt=&quot;Christoph Witzko&quot;&gt;&lt;/a&gt; | | ———————————————————————————————–– | –––––––––––––––––––––––––––––––––––––––––––––– | ———————————————————————————–– | –––––––––––––––––––––––––––––––––––––––– | ––––––––––––––––––––––––––––––––––––––––––––––––––––– | | &lt;a href=&quot;https://github.com/boennemann&quot;&gt;Stephan Bönnemann&lt;/a&gt; | &lt;a href=&quot;https://github.com/relekang&quot;&gt;Rolf Erik Lekang&lt;/a&gt; | &lt;a href=&quot;https://github.com/jo&quot;&gt;Johannes Jörg Schmidt&lt;/a&gt; | &lt;a href=&quot;https://github.com/finnp&quot;&gt;Finn Pauls&lt;/a&gt; | &lt;a href=&quot;https://github.com/christophwitzko&quot;&gt;Christoph Witzko&lt;/a&gt; |&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Kill all humans&quot; src=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/media/bender.png&quot;&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/flybywiresim/fbw-branding/master/svg/FBW-Logo.svg?sanitize=true&quot; placeholder=&quot;FlyByWire&quot; width=&quot;400&quot;&gt; 
&lt;h1&gt;FlyByWire Simulations A32NX&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=twitter&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/c/FlyByWire-Simulations&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=youtube&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;YouTube&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=facebook&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Facebook&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://instagram.com/flybywiresim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=instagram&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Instagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Model       A320-251N
Engine      CFM LEAP 1A-26
FMGS        Honeywell Pegasus II
FWC Std.    H2F9C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h2&gt;How to download and use the aircraft&lt;/h2&gt; 
&lt;p&gt;To download the aircraft please go to the &lt;a href=&quot;https://flybywiresim.com&quot;&gt;FlyByWire Simulations website&lt;/a&gt;. Please be sure to thoroughly read the &lt;a href=&quot;https://docs.flybywiresim.com&quot;&gt;documentation&lt;/a&gt; on how to install and use the aircraft.&lt;/p&gt; 
&lt;p&gt;If you’re still running into problems after reading through the documentation, feel free to jump into our Discord &lt;a href=&quot;https://discord.gg/snueqJjDUN&quot;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you would like to contribute to the project, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Known issues and bug reporting&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://docs.flybywiresim.com/start/reported-issues&quot;&gt;known issues&lt;/a&gt; list contains the most commonly reported issues. Should you have an issue not found on this list, then please take a look at the reported issues within the &lt;a href=&quot;https://github.com/flybywiresim/a32nx/issues&quot;&gt;issue tracker&lt;/a&gt; and report a new issue if your issue isn’t found there. You can also use the issue tracker to request a new feature.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What liveries are available?&lt;/h3&gt; 
&lt;p&gt;Liveries for the A32NX can be found on &lt;a href=&quot;https://flightsim.to&quot;&gt;Flightsim.to&lt;/a&gt;. However, default A320neo liveries are not compatible with the A32NX.&lt;/p&gt; 
&lt;h3&gt;When is the next update?&lt;/h3&gt; 
&lt;p&gt;We don’t know, since it depends on many factors. We will announce each new stable version via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord&lt;/a&gt; and our social media channels listed above.&lt;/p&gt; 
&lt;h3&gt;How do I join the team?&lt;/h3&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;h3&gt;Is the A32NX payware?&lt;/h3&gt; 
&lt;p&gt;No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;h3&gt;How do we report bugs?&lt;/h3&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#known-issues-and-bug-reporting&quot;&gt;known Issues and bug reporting&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Why is my version not the same as what I see others using?&lt;/h3&gt; 
&lt;p&gt;We have two versions: stable and development. The stable version is a ‘snapshot’ of the development which we regard as stable with the current version of the simulator. The developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Original source code assets present in this repository are licensed under the GNU GPLv3. Original 3D assets are licensed under CC BY-NC 4.0.&lt;/p&gt; 
&lt;p&gt;Microsoft Flight Simulator © Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft’s “Game Content Usage Rules” using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/p&gt; 
&lt;p&gt;The contents of distribution packages built from the sources in this repository are therefore licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;in the case of original source code from FBW or compiled binaries generated from it, under GPLv3.&lt;/li&gt; 
 &lt;li&gt;in the case of original 3D assets from FBW, under CC BY-NC 4.0.&lt;/li&gt; 
 &lt;li&gt;in the case of assets covered by the “Game Content Usage Rules”, under the license granted by those rules.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>portainer/portainer</title>
      <link>https://github.com/portainer/portainer</link>
      <description>&lt;p&gt;Making Docker and Kubernetes management easy.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img title=&quot;portainer&quot; src=&quot;https://github.com/portainer/portainer/raw/develop/app/assets/images/portainer-github-banner.png?raw=true&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Portainer CE&lt;/strong&gt; is a lightweight ‘universal’ management GUI that can be used to &lt;strong&gt;easily&lt;/strong&gt; manage Docker, Swarm, Kubernetes and ACI environments. It is designed to be as &lt;strong&gt;simple&lt;/strong&gt; to deploy as it is to use.&lt;/p&gt; 
&lt;p&gt;Portainer consists of a single container that can run on any cluster. It can be deployed as a Linux container or a Windows native container.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Portainer&lt;/strong&gt; allows you to manage all your orchestrator resources (containers, images, volumes, networks and more) through a super-simple graphical interface.&lt;/p&gt; 
&lt;p&gt;A fully supported version of Portainer is available for business use. Visit http://www.portainer.io to learn more&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;You can try out the public demo instance: http://demo.portainer.io/ (login with the username &lt;strong&gt;admin&lt;/strong&gt; and the password &lt;strong&gt;tryportainer&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;Please note that the public demo cluster is &lt;strong&gt;reset every 15min&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Latest Version&lt;/h2&gt; 
&lt;p&gt;Portainer CE is updated regularly. We aim to do an update release every couple of months.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The latest version of Portainer is 2.6.x&lt;/strong&gt; And you can find the release notes &lt;a href=&quot;https://www.portainer.io/blog/new-portainer-ce-2.6.0-release&quot;&gt;here.&lt;/a&gt; Portainer is on version 2, the second number denotes the month of release.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/quickstart/&quot;&gt;Deploy Portainer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;Contribute to the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features &amp;amp; Functions&lt;/h2&gt; 
&lt;p&gt;View &lt;a href=&quot;https://www.portainer.io/products&quot;&gt;this&lt;/a&gt; table to see all of the Portainer CE functionality and compare to Portainer Business.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/docker&quot;&gt;Portainer CE for Docker / Docker Swarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/kubernetes-ui&quot;&gt;Portainer CE for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/serverless-containers&quot;&gt;Portainer CE for Azure ACI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;Portainer CE is an open source project and is supported by the community. You can buy a supported version of Portainer at portainer.io&lt;/p&gt; 
&lt;p&gt;Learn more about Portainers community support channels &lt;a href=&quot;https://www.portainer.io/help_about&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: https://github.com/portainer/portainer/issues&lt;/li&gt; 
 &lt;li&gt;Slack (chat): https://portainer.io/slack/&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can join the Portainer Community by visiting community.portainer.io. This will give you advance notice of events, content and other related Portainer content.&lt;/p&gt; 
&lt;h2&gt;Reporting bugs and contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Want to report a bug or request a feature? Please open &lt;a href=&quot;https://github.com/portainer/portainer/issues/new&quot;&gt;an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to help us build &lt;strong&gt;&lt;em&gt;portainer&lt;/em&gt;&lt;/strong&gt;? Follow our &lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;contribution guidelines&lt;/a&gt; to build it locally and make a pull request. We need all the help we can get!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here at Portainer, we believe in &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;responsible disclosure&lt;/a&gt; of security issues. If you have found a security issue, please report it to &lt;a href=&quot;mailto:security@portainer.io&quot;&gt;security@portainer.io&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;WORK FOR US&lt;/h2&gt; 
&lt;p&gt;If you are a developer, and our code in this repo makes sense to you, we would love to hear from you. We are always on the hunt for awesome devs, either freelance or employed. Drop us a line to info@portainer.io with your details and we will be in touch.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To make sure we focus our development effort in the right places we need to know which features get used most often. To give us this information we use &lt;a href=&quot;https://matomo.org/&quot;&gt;Matomo Analytics&lt;/a&gt;, which is hosted in Germany and is fully GDPR compliant.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;When Portainer first starts, you are given the option to DISABLE analytics. If you &lt;strong&gt;don’t&lt;/strong&gt; choose to disable it, we collect anonymous usage as per &lt;a href=&quot;https://www.portainer.io/documentation/in-app-analytics-and-privacy-policy/&quot;&gt;our privacy policy&lt;/a&gt;. &lt;strong&gt;Please note&lt;/strong&gt;, there is no personally identifiable information sent or stored at any time and we only use the data to help us improve Portainer.&lt;/p&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;p&gt;Portainer supports “Current - 2 docker versions only. Prior versions may operate, however these are not supported.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Portainer is licensed under the zlib license. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;p&gt;Portainer also contains code from open source projects. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/ATTRIBUTIONS.md&quot;&gt;ATTRIBUTIONS.md&lt;/a&gt; for a list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>odoo/odoo</title>
      <link>https://github.com/odoo/odoo</link>
      <description>&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://runbot.odoo.com/runbot&quot;&gt;&lt;img src=&quot;http://runbot.odoo.com/runbot/badge/flat/1/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.odoo.com/documentation/master&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Tech Doc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/forum/help-1&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Help&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://nightly.odoo.com/&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Nightly Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Odoo&lt;/h2&gt; 
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; 
&lt;p&gt;The main Odoo Apps include an &lt;a href=&quot;https://www.odoo.com/page/crm&quot;&gt;Open Source CRM&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/website-builder&quot;&gt;Website Builder&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/e-commerce&quot;&gt;eCommerce&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/warehouse&quot;&gt;Warehouse Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/project-management&quot;&gt;Project Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/accounting&quot;&gt;Billing &amp;amp; Accounting&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/point-of-sale&quot;&gt;Point of Sale&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/employees&quot;&gt;Human Resources&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/lead-automation&quot;&gt;Marketing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/manufacturing&quot;&gt;Manufacturing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/#apps&quot;&gt;…&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured &lt;a href=&quot;https://www.odoo.com&quot;&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt; 
&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; 
&lt;p&gt;For a standard installation please follow the &lt;a href=&quot;https://www.odoo.com/documentation/14.0/administration/install.html&quot;&gt;Setup instructions&lt;/a&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;To learn the software, we recommend the &lt;a href=&quot;https://www.odoo.com/slides&quot;&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;Scale-up&lt;/a&gt;, the &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;business game&lt;/a&gt;. Developers can start with &lt;a href=&quot;https://www.odoo.com/documentation/14.0/developer/howtos.html&quot;&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don’t do “whiteboard” interviews. “Whiteboards” is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhh/status/834146806594433025?lang=en&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xJV6cF4.png&quot; width=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you’ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.affinipay.com&quot;&gt;Affinipay&lt;/a&gt; | Austin, TX | Short takehome project + video interview about coding with engineering manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you’re applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; São Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and “meet the team”.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitpanda.com/en/career&quot;&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bloomworks.digital/software-engineer/&quot;&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonus.ly/careers&quot;&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute’s Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/careers&quot;&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bryter.com/careers&quot;&gt;BRYTER&lt;/a&gt; | Remote | Initial 30min video call for getting to know each other, one 90min technical interview where you talk about one relevant previous project and we then dive deeper together (no pairing session or any other kind of exercise), second 90min interview where we ask questions around giving/receiving feedback and your ability to build relationships in remote setting, two final calls with people lead and then founder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.btw.so&quot;&gt;btw&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Initial phone screen for cultural round, optional take-home assignment, two rounds of video interviews (1-2hrs) discussing through previous projects and technical stack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We’ll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we’ve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston’s Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia’s Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they’ve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/cquence-app/jobs&quot;&gt;Cquence&lt;/a&gt; | Remote | Phone screen, take-home coding challenge, collaborative technical interview, and behavioral interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone’s professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate’s achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You’ll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working “sprint” in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash :runner::dash:&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it’s real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, “Resume” interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we’ve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you’re looking for in your next role, followed by a take-home practical test relevant to the work you’ll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ezgress.com&quot;&gt;ezgress&lt;/a&gt; | Idaho Falls, ID | Our policy is for the technical interview to be tailored to the given candidate and role. Questions delve into real-world experience and how that can be used to tackle current company challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://field33.com/jobs&quot;&gt;Field 33&lt;/a&gt; | Berlin, Germany | Video call interview followed by a take home project over a 3 day duration chosen by the candidate with hours spent up to the candidate. The project is tailored to the position and skill level of the candidate and resembles a past real-life problem encountered at our company. Solution is discussed in a ~30min call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ginger.com/careers&quot;&gt;Ginger&lt;/a&gt; | Remote; San Francisco, CA | Realistic coding exercise, take-home project, virtual onsite (system design, experience, and culture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate’s experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herodigital.com&quot;&gt;Hero Digital&lt;/a&gt; |&amp;nbsp;San Francisco, CA; Remote | Take-home project with code review, multiple (non-technical) interviews with different areas of the company about past projects and experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, “meet the team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hologram.io/careers&quot;&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interfrog.de/jobs&quot;&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.microfocus.com&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.knock.com/careers&quot;&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gokoho.com&quot;&gt;Koho by Expeditors&lt;/a&gt; | Portland, OR | Phone screening. Take home assignment. Conversational technical and cultural interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kulkul.tech/careers&quot;&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lattice.com/careers&quot;&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a “guest lecture” for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linxsystems.com&quot;&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we’ve had to solve in production. Our entire interview process and what we’re looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft’s Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate’s completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mealme.ai&quot;&gt;MealMe&lt;/a&gt; | San Francisco, California | Initial introductory interview, 1 hour technical interview with CTO (real-world problem), rapid fire questions about thinking and working in a start-up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate’s previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate’s experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you’ll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee’s platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there’s a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordsecurity.com/careers&quot;&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noyo.com/careers/&quot;&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you’re proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O’Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming…&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oncue.co&quot;&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/openbasecom&quot;&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site “meet the team”&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and “soft skills” interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face…).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.rapptrlabs.com&quot;&gt;Rapptr Labs&lt;/a&gt; | Jersey City, NJ | Take-home exercise followed by a video interview with 2-3 engineers about domain-specific knowledge and open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.realtor.com/careers&quot;&gt;Realtor.com&lt;/a&gt; | Santa Clara, CA; Austin, TX; Vancouver, BC; Westlake Village, CA; Scottsdale, AZ; Morgantown, WV; New York, NY; Chicago, IL | Phone interview with the hiring manager, then a take home project (5 hours max), then video interview with a set of engineers to discuss the project and ask technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate’s profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/our-company/careers/current-opportunities/&quot;&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/render&quot;&gt;Render&lt;/a&gt; | San Francisco, CA; Remote | Phone screen followed by an onsite project based on our day-to-day, real world challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta’ Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we’ve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.splyt.com&quot;&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen –&amp;gt; Take-home coding assignment –&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams –&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strv.com/careers&quot;&gt;STRV&lt;/a&gt; | Prague, Czech Republic; Brno, Czech Republic; Remote | A social interview with a recruiter + take-home coding challenge followed by a technical interview session discussing your approach in solving the take-home assignment + a culture-fit interview with the head of engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn’t include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.swisscom.ch/en/about/career.html&quot;&gt;Swisscom&lt;/a&gt; | Rotterdam, The Netherlands | A mix of behavioural, technical and cultural interview, take-home project, project review with engineers from different teams and cultural interview with staff members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal “Meet the Team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they’re looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let’s pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/wallapop/&quot;&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It’s followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3boxlabs.com&quot;&gt;3BoxLabs&lt;/a&gt; | Remote | Intro call, resume walk-through, and finally live work exercise with ~2 hours indepdendent work followed by ~1.5 hour debrief discussing the work with the rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product’s domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that’s representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml&quot;&gt;&lt;img src=&quot;https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml/badge.svg?branch=master&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>austintgriffith/scaffold-eth</title>
      <link>https://github.com/austintgriffith/scaffold-eth</link>
      <description>&lt;p&gt;🏗 forkable Ethereum dev stack focused on fast product iterations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🏗 Scaffold-ETH&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;everything you need to build on Ethereum! 🚀&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;🧪 Quickly experiment with Solidity using a frontend that adapts to your smart contract:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2653167/124158108-c14ca380-da56-11eb-967e-69cde37ca8eb.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;🏄‍♂️ Quick Start&lt;/h1&gt; 
&lt;p&gt;Prerequisites: &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node&lt;/a&gt; plus &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;Yarn&lt;/a&gt; and &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;clone/fork 🏗 scaffold-eth:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/austintgriffith/scaffold-eth.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;install and start your 👷‍ Hardhat chain:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd scaffold-eth
yarn install
yarn chain
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;in a second terminal window, start your 📱 frontend:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd scaffold-eth
yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;in a third terminal window, 🛰 deploy your contract:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd scaffold-eth
yarn deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔏 Edit your smart contract &lt;code&gt;YourContract.sol&lt;/code&gt; in &lt;code&gt;packages/hardhat/contracts&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;📝 Edit your frontend &lt;code&gt;App.jsx&lt;/code&gt; in &lt;code&gt;packages/react-app/src&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;💼 Edit your deployment scripts in &lt;code&gt;packages/hardhat/deploy&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;📱 Open http://localhost:3000 to see the app&lt;/p&gt; 
&lt;h1&gt;📚 Documentation&lt;/h1&gt; 
&lt;p&gt;Documentation, tutorials, challenges, and many more resources, visit: &lt;a href=&quot;https://docs.scaffoldeth.io&quot;&gt;docs.scaffoldeth.io&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;🔭 Learning Solidity&lt;/h1&gt; 
&lt;p&gt;📕 Read the docs: https://docs.soliditylang.org&lt;/p&gt; 
&lt;p&gt;📚 Go through each topic from &lt;a href=&quot;https://solidity-by-example.org&quot;&gt;solidity by example&lt;/a&gt; editing &lt;code&gt;YourContract.sol&lt;/code&gt; in &lt;strong&gt;🏗 scaffold-eth&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/primitives/&quot;&gt;Primitive Data Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/mapping/&quot;&gt;Mappings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/structs/&quot;&gt;Structs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/function-modifier/&quot;&gt;Modifiers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/events/&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/inheritance/&quot;&gt;Inheritance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/payable/&quot;&gt;Payable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidity-by-example.org/fallback/&quot;&gt;Fallback&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📧 Learn the &lt;a href=&quot;https://solidity.readthedocs.io/en/v0.6.6/units-and-global-variables.html&quot;&gt;Solidity globals and units&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;🛠 Buidl&lt;/h1&gt; 
&lt;p&gt;Check out all the &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/branches/active&quot;&gt;active branches&lt;/a&gt;, &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/issues&quot;&gt;open issues&lt;/a&gt;, and join/fund the 🏰 &lt;a href=&quot;https://BuidlGuidl.com&quot;&gt;BuidlGuidl&lt;/a&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🚤 &lt;a href=&quot;https://medium.com/@austin_48503/%EF%B8%8Fethereum-dev-speed-run-bd72bcba6a4c&quot;&gt;Follow the full Ethereum Speed Run&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎟 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/simple-nft-example&quot;&gt;Create your first NFT&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🥩 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-1-decentralized-staking&quot;&gt;Build a staking smart contract&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🏵 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/challenge-2-token-vendor&quot;&gt;Deploy a token and vendor&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎫 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/buyer-mints-nft&quot;&gt;Extend the NFT example to make a “buyer mints” marketplace&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎲 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/commit-reveal-with-frontend&quot;&gt;Learn about commit/reveal&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;✍️ &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/signature-recover&quot;&gt;Learn how ecrecover works&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;👩‍👩‍👧‍👧 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/meta-multi-sig&quot;&gt;Build a multi-sig that uses off-chain signatures&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⏳ &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/streaming-meta-multi-sig&quot;&gt;Extend the multi-sig to stream ETH&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⚖️ &lt;a href=&quot;https://medium.com/@austin_48503/%EF%B8%8F-minimum-viable-exchange-d84f30bd0c90&quot;&gt;Learn how a simple DEX works&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🦍 &lt;a href=&quot;https://github.com/austintgriffith/scaffold-eth/tree/aave-ape&quot;&gt;Ape into learning!&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;💬 Support Chat&lt;/h1&gt; 
&lt;p&gt;Join the telegram &lt;a href=&quot;https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA&quot;&gt;support chat 💬&lt;/a&gt; to ask questions and find others building with 🏗 scaffold-eth!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;🙏 Please check out our &lt;a href=&quot;https://gitcoin.co/grants/2851/scaffold-eth&quot;&gt;Gitcoin grant&lt;/a&gt; too!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MrRio/jsPDF</title>
      <link>https://github.com/MrRio/jsPDF</link>
      <description>&lt;p&gt;Client-side JavaScript PDF generation for everyone.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://parall.ax/parallax-2016/img/svg/jspdf-logo.svg?sanitize=true&quot; alt=&quot;jsPDF&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Continous Integration&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/feed&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg?sanitize=true&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/MrRio/jsPDF.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/alerts/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Total alerts&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library to generate PDFs in JavaScript.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;catch me on twitter&lt;/a&gt;: &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;@MrRio&lt;/a&gt; or head over to &lt;a href=&quot;http://parall.ax&quot;&gt;my company’s website&lt;/a&gt; for consultancy.&lt;/p&gt; 
&lt;p&gt;jsPDF is now co-maintained by &lt;a href=&quot;https://www.yworks.com/&quot;&gt;yWorks - the diagramming experts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/&quot;&gt;Live Demo&lt;/a&gt; | &lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Recommended: get jsPDF from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install jspdf --save
# or
yarn add jspdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, load it from a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or always get latest version via &lt;a href=&quot;https://unpkg.com/browse/jspdf/&quot;&gt;unpkg&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;dist&lt;/code&gt; folder of this package contains different kinds of files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.es.*.js&lt;/strong&gt;: Modern ES2015 module format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.node.*.js&lt;/strong&gt;: For running in Node. Uses file operations for loading/saving files instead of browser APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.umd.*.js&lt;/strong&gt;: UMD module format. For AMD or script-tag loading.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;polyfills*.js&lt;/strong&gt;: Required polyfills for older browsers like Internet Explorer. The es variant simply imports all required polyfills from &lt;code&gt;core-js&lt;/code&gt;, the umd variant is self-contained.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Usually it is not necessary to specify the exact file in the import statement. Build tools or Node automatically figure out the right file, so importing “jspdf” is enough.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Then you’re ready to start making your document:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;

// Default export is a4 paper, portrait, using millimeters for units
const doc = new jsPDF();

doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to change the paper size, orientation, or units, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Landscape export, 2×4 inches
const doc = new jsPDF({
  orientation: &quot;landscape&quot;,
  unit: &quot;in&quot;,
  format: [4, 2]
});

doc.text(&quot;Hello world!&quot;, 1, 1);
doc.save(&quot;two-by-four.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running in Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const { jsPDF } = require(&quot;jspdf&quot;); // will automatically load the node version

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;); // will save the file in the current working directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other Module Formats&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;AMD&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;require([&quot;jspdf&quot;], ({ jsPDF }) =&amp;gt; {
  const doc = new jsPDF();
  doc.text(&quot;Hello world!&quot;, 10, 10);
  doc.save(&quot;a4.pdf&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Globals&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { jsPDF } = window.jspdf;

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Optional dependencies&lt;/h3&gt; 
&lt;p&gt;Some functions of jsPDF require optional dependencies. E.g. the &lt;code&gt;html&lt;/code&gt; method, which depends on &lt;code&gt;html2canvas&lt;/code&gt; and, when supplied with a string HTML document, &lt;code&gt;dompurify&lt;/code&gt;. JsPDF loads them dynamically when required (using the respective module format, e.g. dynamic imports). Build tools like Webpack will automatically create separate chunks for each of the optional dependencies. If your application does not use any of the optional dependencies, you can prevent Webpack from generating the chunks by defining them as external dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// webpack.config.js
module.exports = {
  // ...
  externals: {
    // only define the dependencies you are NOT using as externals!
    canvg: &quot;canvg&quot;,
    html2canvas: &quot;html2canvas&quot;,
    dompurify: &quot;dompurify&quot;
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;strong&gt;Vue CLI&lt;/strong&gt; projects, externals can be defined via the &lt;a href=&quot;https://cli.vuejs.org/config/#configurewebpack&quot;&gt;configureWebpack&lt;/a&gt; or &lt;a href=&quot;https://cli.vuejs.org/config/#chainwebpack&quot;&gt;chainWebpack&lt;/a&gt; properties of the &lt;code&gt;vue.config.js&lt;/code&gt; file (needs to be created, first, in fresh projects).&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;Angular&lt;/strong&gt; projects, externals can be defined using &lt;a href=&quot;https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack&quot;&gt;custom webpack builders&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;React&lt;/strong&gt; (&lt;code&gt;create-react-app&lt;/code&gt;) projects, externals can be defined by either using &lt;a href=&quot;https://github.com/timarney/react-app-rewired&quot;&gt;react-app-rewired&lt;/a&gt; or ejecting.&lt;/p&gt; 
&lt;h3&gt;TypeScript/Angular/Webpack/React/etc. Configuration:&lt;/h3&gt; 
&lt;p&gt;jsPDF can be imported just like any other 3rd party library. This works with all major toolkits and frameworks. jsPDF also offers a typings file for TypeScript projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add jsPDF to your meteor-project as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;meteor add jspdf:core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;p&gt;jsPDF requires modern browser APIs in order to function. To use jsPDF in older browsers like Internet Explorer, polyfills are required. You can load all required polyfills as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &quot;jspdf/dist/polyfills.es.js&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can load the prebundled polyfill file. This is not recommended, since you might end up loading polyfills multiple times. Might still be nifty for small applications or quick POCs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/polyfills.umd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use of Unicode Characters / UTF-8:&lt;/h2&gt; 
&lt;p&gt;The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports the wanted glyphs or else it will show garbled characters instead of the right text.&lt;/p&gt; 
&lt;p&gt;To add the font to jsPDF use our fontconverter in &lt;a href=&quot;https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html&quot;&gt;/fontconverter/fontconverter.html&lt;/a&gt;. The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string and additional code for jsPDF. You just have to add this generated js-File to your project. You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.&lt;/p&gt; 
&lt;p&gt;Alternatively you can just load the content of the *.ttf file as a binary string using &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;XMLHttpRequest&lt;/code&gt; and add the font to the PDF file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const doc = new jsPDF();

const myFont = ... // load the *.ttf font file as binary string

// add the font to jsPDF
doc.addFileToVFS(&quot;MyFont.ttf&quot;, myFont);
doc.addFont(&quot;MyFont.ttf&quot;, &quot;MyFont&quot;, &quot;normal&quot;);
doc.setFont(&quot;MyFont&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Functionality&lt;/h2&gt; 
&lt;p&gt;Since the merge with the &lt;a href=&quot;https://github.com/yWorks/jsPDF&quot;&gt;yWorks fork&lt;/a&gt; there are a lot of new features. However, some of them are API breaking, which is why there is an API-switch between two API modes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In “compat” API mode, jsPDF has the same API as MrRio’s original version, which means full compatibility with plugins. However, some advanced features like transformation matrices and patterns won’t work. This is the default mode.&lt;/li&gt; 
 &lt;li&gt;In “advanced” API mode, jsPDF has the API you’re used from the yWorks-fork version. This means the availability of all advanced features like patterns, FormObjects, and transformation matrices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can switch between the two modes by calling&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doc.advancedAPI(doc =&amp;gt; {
  // your code
});
// or
doc.compatAPI(doc =&amp;gt; {
  // your code
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JsPDF will automatically switch back to the original API mode after the callback has run.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please check if your question is already handled at Stackoverflow &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jspdf&quot;&gt;https://stackoverflow.com/questions/tagged/jspdf&lt;/a&gt;. Feel free to ask a question there with the tag &lt;code&gt;jspdf&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests, bug reports, etc. are very welcome as issues. Note that bug reports should follow these guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A bug should be reported as an &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;mcve&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure code is properly indented and &lt;a href=&quot;https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code&quot;&gt;formatted&lt;/a&gt; (Use ``` around code blocks)&lt;/li&gt; 
 &lt;li&gt;Provide a runnable example.&lt;/li&gt; 
 &lt;li&gt;Try to make sure and show in your issue that the issue is actually related to jspdf and not your framework of choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;jsPDF cannot live without help from the community! If you think a feature is missing or you found a bug, please consider if you can spare one or two hours and prepare a pull request. If you’re simply interested in this project and want to help, have a look at the open issues, especially those labeled with “bug”.&lt;/p&gt; 
&lt;p&gt;You can find information about building and testing jsPDF in the &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/CONTRIBUTING.md#pull-requests&quot;&gt;contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Big thanks to Daniel Dotsenko from &lt;a href=&quot;https://github.com/willowsystems&quot;&gt;Willow Systems Corporation&lt;/a&gt; for making huge contributions to the codebase.&lt;/li&gt; 
 &lt;li&gt;Thanks to Ajaxian.com for &lt;a href=&quot;http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript&quot;&gt;featuring us back in 2009&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Our special thanks to GH Lee (&lt;a href=&quot;https://github.com/sphilee&quot;&gt;sphilee&lt;/a&gt;) for programming the ttf-file-support and providing a large and long sought after feature&lt;/li&gt; 
 &lt;li&gt;Everyone else that’s contributed patches or bug reports. You rock.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License (MIT)&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2010-2020 James Hall, https://github.com/MrRio/jsPDF (c) 2015-2020 yWorks GmbH, https://www.yworks.com/&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WordPress/gutenberg</title>
      <link>https://github.com/WordPress/gutenberg</link>
      <description>&lt;p&gt;The Block Editor project for WordPress and beyond. Plugin is available from the official repository.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gutenberg&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg?sanitize=true&quot; alt=&quot;End-to-End Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg?sanitize=true&quot; alt=&quot;Static Analysis (Linting, License, Type checks…)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg?sanitize=true&quot; alt=&quot;Unit Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg?sanitize=true&quot; alt=&quot;Create Block&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg?sanitize=true&quot; alt=&quot;React Native E2E Tests (iOS)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg?sanitize=true&quot; alt=&quot;React Native E2E Tests (Android)&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lerna.js.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png&quot; alt=&quot;Screenshot of the Gutenberg Editor, editing a post in WordPress&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to the development hub for the WordPress Gutenberg project!&lt;/p&gt; 
&lt;p&gt;“Gutenberg” is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress – Editing, &lt;strong&gt;Customization&lt;/strong&gt; (which includes Full Site Editing, Block Patterns, Block Directory and Block based themes), Collaboration, and Multilingual – and is focused on a new editing experience, the block editor.&lt;/p&gt; 
&lt;p&gt;The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way – and without work-arounds like shortcodes or custom HTML.&lt;/p&gt; 
&lt;p&gt;The block editor first became available in December 2018, and we’re still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Get hands on: check out the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;block editor live demo&lt;/a&gt; to play with a test instance of the editor.&lt;/p&gt; 
&lt;h3&gt;Using Gutenberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or &lt;a href=&quot;https://wordpress.org/plugins/gutenberg/&quot;&gt;download from the WordPress.org plugins repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Documentation:&lt;/strong&gt; See the &lt;a href=&quot;https://wordpress.org/support/article/wordpress-editor/&quot;&gt;WordPress Editor documentation&lt;/a&gt; for detailed docs on using the editor as an author creating posts and pages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Support:&lt;/strong&gt; If you have run into an issue, you should check the &lt;a href=&quot;https://wordpress.org/support/forums/&quot;&gt;Support Forums first&lt;/a&gt;. The forums are a great place to get help. If you have a bug to report, please &lt;a href=&quot;https://github.com/wordpress/gutenberg/issues&quot;&gt;submit it to the Gutenberg repository&lt;/a&gt;. Please search prior to creating a new bug to confirm its not a duplicate.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing for Gutenberg&lt;/h3&gt; 
&lt;p&gt;Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.&lt;/p&gt; 
&lt;p&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/WordPress/gutenberg/trunk/docs/getting-started/tutorials/create-block/README.md&quot;&gt;Create a Block tutorial&lt;/a&gt; for the fastest way to get started extending the block editor. See the &lt;a href=&quot;https://developer.wordpress.org/block-editor/#develop-for-the-block-editor&quot;&gt;Developer Documentation&lt;/a&gt; for extensive tutorials, documentation, and API references.&lt;/p&gt; 
&lt;h3&gt;Contribute to Gutenberg&lt;/h3&gt; 
&lt;p&gt;Gutenberg is an open-source project and welcomes all contributors from code to design, from documentation to triage. The project is built by many contributors and volunteers and we’d love your help building it.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://developer.wordpress.org/block-editor/contributors/&quot;&gt;Contributors Handbook&lt;/a&gt; for all the details on how you can contribute. See &lt;a href=&quot;https://github.com/WordPress/gutenberg/raw/HEAD/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guidelines.&lt;/p&gt; 
&lt;p&gt;As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our &lt;a href=&quot;https://github.com/WordPress/gutenberg/raw/HEAD/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;You can join us in the &lt;code&gt;#core-editor&lt;/code&gt; channel in Slack, see the &lt;a href=&quot;https://make.wordpress.org/chat/&quot;&gt;WordPress Slack page&lt;/a&gt; for signup information; it is free to join.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Weekly meetings&lt;/strong&gt; The Editor Team meets weekly on Wednesdays at 14:00 UTC in Slack. If you can not join the meeting, agenda and notes are posted to the &lt;a href=&quot;https://make.wordpress.org/core/&quot;&gt;Make WordPress Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See &lt;a href=&quot;https://raw.githubusercontent.com/WordPress/gutenberg/trunk/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; for complete license.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://s.w.org/style/images/codeispoetry.png?1&quot; alt=&quot;Code is Poetry.&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;h2&gt;Hey! We are hiring JavaScript Engineers! &lt;a href=&quot;https://boards.greenhouse.io/consensys/jobs/2572388&quot;&gt;Apply here&lt;/a&gt;!&lt;/h2&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://community.metamask.io/c/learn/26&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://community.metamask.io/c/feature-requests-ideas/13&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://community.metamask.io/c/developer-questions/11&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://community.metamask.io/&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 14 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn setup&lt;/code&gt; (not the usual install command)&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you’ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they’re built.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;To start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;http://extension.remotedev.io&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
 &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
  &lt;ul&gt; 
   &lt;li&gt;You will also need to check the “Use custom (local) server” checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Running Unit Tests and Linting&lt;/h3&gt; 
&lt;p&gt;Run unit tests and the linter with &lt;code&gt;yarn test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run just unit tests, run &lt;code&gt;yarn test:unit&lt;/code&gt;. To run unit tests continuously with a file watcher, run &lt;code&gt;yarn watch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;, and you can automatically fix some lint problems with &lt;code&gt;yarn lint:fix&lt;/code&gt;. You can also run these two commands just on your local changes to save time with &lt;code&gt;yarn lint:changed&lt;/code&gt; and &lt;code&gt;yarn lint:changed:fix&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h3&gt;Running E2E Tests&lt;/h3&gt; 
&lt;p&gt;Our e2e test suite can be run on either Firefox or Chrome. In either case, start by creating a test build by running &lt;code&gt;yarn build:test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Firefox e2e tests can be run with &lt;code&gt;yarn test:e2e:firefox&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Chrome e2e tests can be run with &lt;code&gt;yarn test:e2e:chrome&lt;/code&gt;, but they will only work if you have Chrome v79 installed. Update the &lt;code&gt;chromedriver&lt;/code&gt; package to a version matching your local Chrome installation to run e2e tests on newer Chrome versions.&lt;/p&gt; 
&lt;h3&gt;Changing dependencies&lt;/h3&gt; 
&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn setup&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package’s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The LavaMoat auto-generated policy in &lt;code&gt;lavamoat/node/policy.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; to re-generate this policy file. Review the changes to determine whether the access granted to each package seems appropriate.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build for Publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository’s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
